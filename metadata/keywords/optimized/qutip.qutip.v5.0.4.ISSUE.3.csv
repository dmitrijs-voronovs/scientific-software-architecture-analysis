quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Energy Efficiency,"u : object; Returns a SuperLU object representing iLU preconditioner.; ; info : dict, optional; Dictionary containing solver-specific information.; """"""; ss_args = _default_steadystate_args(); ss_args['method'] = 'iterative'; for key in kwargs.keys():; if key in ss_args.keys():; ss_args[key] = kwargs[key]; else:; raise TypeError(""Invalid keyword argument '"" + key +; ""' passed to steadystate.""); ; # Set column perm to NATURAL if using RCM and not specified by user; if ss_args['use_rcm'] and ('permc_spec' not in kwargs.keys()):; ss_args['permc_spec'] = 'NATURAL'; ; L = _steadystate_setup(A, c_op_list); # Set weight parameter to avg abs val in L if not set explicitly; if 'weight' not in kwargs.keys():; ss_args['weight'] = np.mean(np.abs(L.data.data.max())); ss_args['info']['weight'] = ss_args['weight']; ; n = int(np.sqrt(L.shape[0])); if ss_args['method'] == 'iterative':; ss_list = _steadystate_LU_liouvillian(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; elif ss_args['method'] == 'power':; ss_list = _steadystate_power_liouvillian(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; else:; > raise ValueError(""Invalid preconditioning method.""); E ValueError: Invalid preconditioning method. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/steadystate.py:1109: ValueError; ________________________________________________________________________________ test_driven_cavity[power-bicgstab] _________________________________________________________________________________. method = 'power-bicgstab', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:9975,power,power,9975,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['power'],['power']
Energy Efficiency,"uilt produces errors; ```python; In [1]: import qutip; Calibrating OPENMP threshold...; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-e01d5608f34f> in <module>; ----> 1 import qutip. ~/code/qutip/qutip/qutip/__init__.py in <module>; 277 print('Calibrating OPENMP threshold...'); 278 thrsh = calculate_openmp_thresh(); --> 279 qutip.configrc.write_rc_key(rc_file, 'openmp_thresh', thrsh); 280; 281 # Load the config file. ~/code/qutip/qutip/qutip/configrc.py in write_rc_key(key, value, section, rc_file); 169 config.read(rc_file); 170 if not config.has_section(section):; --> 171 config.add_section(section); 172 config.set(section, key, str(value)); 173. ~/.anaconda3/envs/qutip-dev/lib/python3.8/configparser.py in add_section(self, section); 1205 RawConfigParser.add_section by validating if the section name is; 1206 a string.""""""; -> 1207 self._validate_value_types(section=section); 1208 super().add_section(section); 1209. ~/.anaconda3/envs/qutip-dev/lib/python3.8/configparser.py in _validate_value_types(self, section, option, value); 1178 """"""; 1179 if not isinstance(section, str):; -> 1180 raise TypeError(""section names must be strings""); 1181 if not isinstance(option, str):; 1182 raise TypeError(""option keys must be strings""). TypeError: section names must be strings; ```. The issue is probably due to `__init__.py` being out-of-date with regards to the change to how the `qutiprc` file is written. The immediate fix should be very simple, however it highlights a larger problem with our testing - this should have been caught by the OpenMP tests. In this case, I believe that the tests don't see the issue because there is a test in `__init__.py` that doesn't trigger the OpenMP calibration if only there is only 1 CPU. Presumably, we only ever get allocated single-CPU VMs on Travis, so it hasn't got caught. That makes me worry a lot that the OpenMP code isn't even being tested correctly.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1470:1993,allocate,allocated,1993,https://qutip.org,https://github.com/qutip/qutip/issues/1470,1,['allocate'],['allocated']
Energy Efficiency,"uling a few times to get a better result. For scheduling quantum instructions, of which the runtime of different gates might differ, an additional step is required to compute the scheduled start time of each instruction.; It adds the additional dependency caused by hardware constraint to the graph and recomputes the distance of each node to the start and end node. This distance is then converted to the start time of each instruction. **Example**; ```python; >>> from qutip.qip.circuit import QubitCircuit; >>> from qutip.qip.scheduler import Scheduler; >>> circuit = QubitCircuit(7) ; >>> circuit.add_gate(""SNOT"", 3) # gate0; >>> circuit.add_gate(""CZ"", 5, 3) # gate1; >>> circuit.add_gate(""CZ"", 4, 3) # gate2; >>> circuit.add_gate(""CZ"", 2, 3) # gate3; >>> circuit.add_gate(""CZ"", 6, 5) # gate4; >>> circuit.add_gate(""CZ"", 2, 6) # gate5; >>> circuit.add_gate(""SWAP"", [0, 2]) # gate6; >>>; >>> scheduler = Scheduler(""ASAP""); >>> scheduler.schedule(circuit, gates_schedule=True) ; [0, 1, 3, 2, 2, 3, 4]; ```; The result list is the cycle indices for each gate. It means that the circuit can be executed in 5 gate cycles:; ```; gate0; gate1; gate3, gate4; gate2, gate5; gate6; ```; Notice that gate3 and gate4 commute with gate2, therefore, the order is changed to reduce the number of cycles. **Related issues or PRs**; Solve #1243 . **Changelog**; Add a gate(pulse) scheduler for quantum circuit. **Others**; @sarsid Maybe you will be interested in it. It can be used to determine which gates can be executed at the same time. So maybe we can improve the efficiency of the QubitCircuit by combining several gates together and generate the full matrix using `qutip.qip.expand_operation`. However, writing such scheduler in Python is usually not the most efficient choice and there will be some overhead. I'm not sure if it will bring any real improvement in circuit simulation and where is the threshold. I'm also pinging @tehruhn because I remember you mentioned something similar before (apologize ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273:2681,schedul,schedule,2681,https://qutip.org,https://github.com/qutip/qutip/pull/1273,1,['schedul'],['schedule']
Energy Efficiency,"urselves, for example by defining a global list, as it is done in [this example](https://nbviewer.jupyter.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-8-Adiabatic-quantum-computing.ipynb#Evolve-the-system-in-time). **Describe the solution you'd like**. Currently when we pass a list of operators such as. ```python; e_ops = [sigmax(), sigmay(), sigmaz()]; result = mesolve(H, rho0, e_ops=e_ops); ```. We will be able to access expectation value of `sigmax()` in `result.expect[0]`, of `sigmay()` in `result.expect[1]` and of course `sigmaz()` in `result.expect[2]`. Why not capture the custom measurement in similar way?. ```; def customMeasurement(tau, psi):; exp_x = expect(sigmax(), psi); exp_y = expect(sigmaz(), psi); exp_z = expect(sigmay(), psi); energy = expect(H, psi); fidelity = np.abs(psi_ref.overlap(psi))**2.; return [exp_x, exp_y, exp_z, energy, fidelity]; ```. Now it is possible to still get expectation values as before, but in addition we can take more custom measurements (in this example energy and fidelity of state) and access them in exactly the same way for the convenience. The only thing user needs to keep track of is order of operators returned from the callback function. So now it is as before but in addition `result.expect[3]` contains energy and `result.expect[4]` contains fidelity and no custom managed global external lists required as it was in the [example](https://nbviewer.jupyter.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-8-Adiabatic-quantum-computing.ipynb#Evolve-the-system-in-time). **Describe alternatives you've considered**. Alternatively we could establish that custom measurement callback function must return only single value and user would be able to pass mixed list of operators and functions in the `e_ops`. **Additional context**. Correct me if I'm wrong, based on the docs and examples I referenced above I have impression there is no better way to do it, but maybe I just missed it? Please regard this issue as ope",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1238:1937,energy,energy,1937,https://qutip.org,https://github.com/qutip/qutip/issues/1238,1,['energy'],['energy']
Energy Efficiency,"v_perm, ss_args = ss_list; else:; > raise ValueError(""Invalid preconditioning method.""); E ValueError: Invalid preconditioning method. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/steadystate.py:1109: ValueError; ________________________________________________________________________________ test_driven_cavity[power-bicgstab] _________________________________________________________________________________. method = 'power-bicgstab', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'iterative'},; id=""power-gmres""),; pytest.param('power-bicgstab', {'use_precond':1, 'M':'power'},; id=""power-bicgstab""),; pytest.param('iterative-gmres', {}, id=""iterative-gmres""),; pytest.param('iterative-bicgstab', {}, id=""iterative-bicgstab""),; ]); def test_driven_cavity(method, kwargs):; N = 30; Omega = 0.01 * 2 * np.pi; Gamma = 0.05; ; a = qutip.destroy(N); H = Omega * (a.dag() + a); c_ops = [np.sqrt(Gamma) * a]; if 'use_precond' in kwargs:; > kwargs['M'] = qutip.build_preconditioner(H, c_ops, method=kwargs['M']). /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_steadystate.py:124: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. A = Quantum object: dims = [[30], [30]], shape = (30, 30), type = oper, isherm = True; Qobj data =; [[0. 0.06283185 ... 0. 0. 0. 0. 0.; 0. 0. 0. 0. 0.33835988 0. ]]; c_op_list = [Quantum object: dims = [[30], [30]], shape = (30, 30), type = ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:11020,power,power-bicgstab,11020,https://qutip.org,https://github.com/qutip/qutip/issues/1755,3,['power'],"['power', 'power-bicgstab']"
Energy Efficiency,"w the numbers they generate affect the non-deterministic functions/algorithms, which depend on the former. In such cases, I've either used a fixed seed (as you've mentioned in your [original post](https://github.com/qutip/qutip/issues/1268#issue-619006856)), which can get a bit messy, as there's Python's `random`, NumPy's `random` (which also comes in a legacy and a modern flavour, namely `numpy.random.RandomState` and `numpy.random.Generator`). Also, as you've mentioned, there's tight coupling between the implementation logic and the corresponding set of tests, and updates in the former require constant maintenance of the latter.; - As an alternative, I've sometimes resorted to [`mock`](https://docs.python.org/3/library/unittest.mock.html)ing the random-number generation process itself, and - in a way equivalent to using a fixed seed - providing a pre-defined sequence of numbers to the functions which depend on those. It comes with the same disadvantage of relatively tight coupling, but is somehow more flexible and powerful than just setting the seeds.; - I have used Hypothesis in the past (on a relatively small-scale project), and it's indeed a great framework with a lot of interesting and nice functionalities. I like it very much, but one disadvantage I ran into was the increased overall time for completion of a test run. In my case, a viable approach, for instance, was to run my Hypothesis tests (which were a subset of all tests) with a bit larger periodicity (in the CI pipeline) than the regular tests. Another concern that I intuitively have (I may be _wildly_ wrong on this one, though, not having yet properly explored QuTiP's testing landscape) is that - depending on how some Hypothesis tests are set up - there might be a cost incurred in that, eventually, one might have to implement guards against inputs, that would be virtually impossible (or very close to that) to occur in practical scenarios. In any case, I'd strongly recommend performing a time-boxed exper",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707:2123,power,powerful,2123,https://qutip.org,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707,1,['power'],['powerful']
Energy Efficiency,"y ... ok; > > > random density matrix ... ok; > > > random hermitian ... ok; > > > random ket ... ok; > > > Sparse eigs Hermitian ... ok; > > > Sparse eigs non-Hermitian ... ok; > > > Sparse eigvals only Hermitian. ... ok; > > > Dense eigs Hermitian. ... ok; > > > Dense eigs non-Hermitian ... ok; > > > Dense eigvals only Hermitian ... ok; > > > states: coherent density matrix ... ok; > > > states: Fock density matrix ... ok; > > > states: thermal density matrix ... ok; > > > Steady state: Thermal qubit ... ok; > > > Steady state: Thermal harmonic oscillator ... ok; > > > Steady state: Driven cavity ... ok; > > > Stochastic: smesolve: photo-current ... ok; > > > Stochastic: smesolve: homodyne ... ok; > > > Stochastic: smesolve: heterodyne ... ok; > > > Stochastic: ssesolve: photo-current ... ; > > > ok; > > > Stochastic: ssesolve: homodyne ... ok; > > > Stochastic: ssesolve: heterodyne ... ok; > > > Composite system, operator on Hilbert space. ... ok; > > > Superoperator: Efficient numerics and reference return same result, ... ok; > > > Non-composite system, operator on Hilbert space. ... ok; > > > Non-composite system, operator on Liouville space. ... ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_choi(q) returns q if q is already Choi. ... ok; > > > Superoperator: Test that converting a two-qubit superoperator through ... /usr/local/lib/python2.7/dist-packages/qutip/qobj.py:412: UserWarning: Multiplying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Super",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:10021,Efficient,Efficient,10021,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['Efficient'],['Efficient']
Energy Efficiency,"y replace the old HEOM `BosonicBath`. We now use the term ""environment"" instead of ""bath"" mostly to avoid having the same name for the new classes as in the HEOM module. There is a little difference between the old and the new class, namely that the system coupling operator is a part of BosonicBath (i.e., an attribute of BosonicBath and required in the constructor), but we have decided for the new module that system operators should not be part of the environment. This means that to create a HEOM solver, one will need to specify environments and coupling operators, somewhat similar to the `brmesolve` solver where one specifies both power spectrum and `a_op`. (Currently, one just specifies a list of ""baths"" in the HEOM solver). This will require some small changes to the HEOM solver interface that we still have to implement before merging this PR. Note that we are also making sure that existing code continues to work without changes. Another thing missing from this PR are fermionic environments. I would have liked to have them, but it was becoming too much work and a too large PR, so fermionic environments will have to be added a bit later. Some more advantage of our changes are:; * The new environment classes could be used directly as inputs for solvers other than the HEOM solver, for example for `mesolve` or `brmesolve`. These solvers could compute their jump operators and rates from the environment power spectrum and system operators. (That is however also left for a future PR, since it would require some thinking about how environments can best be passed to those solvers.) Similarly, QuTiP could automatically compute Markovian embeddings with pseudomodes or reaction coordinates.; * The module provides a framework for the idea of approximating one environment by another (multi-exponential) one, and more approximation methods could be added in the future. For example, Gerardo has been working on a method fitting the power spectrum using the so-called AAA algorithm.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2534#issuecomment-2359719525:1904,power,power,1904,https://qutip.org,https://github.com/qutip/qutip/pull/2534#issuecomment-2359719525,2,['power'],['power']
Energy Efficiency,"ython; >>> data.pow[data.CSR]; <direct specialisation (CSR, CSR) of pow>; >>> data.pow[data.CSR].direct; True; >>> data.pow[data.CSR, data.Dense].direct; False; ```; The returned object is callable with the same signature as the dispatcher (except the `out` keyword argument is no longer there), and requires that the inputs match the types stated. #### Adding new specialisations. New specialisations can be added to a pre-existing dispatcher with the `Dispatcher.add_specialisations` method. This is very similar in form to `data.to.add_conversions`; it takes lists of tuples, where the first elements of the tuple define the types in the specialisation, and the last is the specialised function itself. For example, a user might need to multiply `Dense @ CSR` frequently and get a `Dense` output. Currently, there is no direct specialisation for this:; ```python; >>> data.matmul[Dense, CSR, Dense]; <indirect specialisation (Dense, CSR, Dense) of matmul>; ```; The user may then choose to define their own specialisation to handle this case efficiently:; ```python; >>> def matmul_1(left: Dense, right: CSR) -> Dense:; ... # [...]; ... return out; ```; They would give this to `data.matmul` by calling; ```python; >>> data.matmul.add_specialisations([; ... (Dense, CSR, Dense, matmul_1),; ... ]); ```; Now we find; ```python; >>> data.matmul[Dense, CSR, Dense]; <direct specialisation (Dense, CSR, Dense) of matmul>; ```. Additionally, the whole lookup table will be rebuilt taking this new specialisation into account, which means the indirect specialisation `matmul(Dense, CSR) -> CSR` will now make use of this new method, because it has a low conversion weight. #### Adding new types. Now let's say the user wants to add a new `NewDataType` type all across QuTiP. The only action they _must_ take is to tell `data.to` about this new type. Let's say they define it like this:; ```python; >>> class NewDataType:; ... # [...]; >>> def new_from_dense(matrix: data.Dense) -> NewDataType:; ... # [.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338:9947,efficient,efficiently,9947,https://qutip.org,https://github.com/qutip/qutip/pull/1338,1,['efficient'],['efficiently']
Integrability," (""Monte Carlo Solver""), it describes the algorithm for the monte carlo simulation as:. > I: Choose a random number r between zero and one, representing the probability that a quantum jump occurs.; > II: Integrate the Schrödinger equation, using the effective Hamiltonian (1) until a time τ such that the norm of the wave function satisfies ⟨ψ(τ)|ψ(τ)⟩=r, at which point a jump occurs.; > III: The resultant jump projects the system at time τ into one of the renormalized states given by Eq. (3). The corresponding collapse operator Cn is chosen such that n is the smallest integer satisfying:; > (5); > ∑_{i=1}^{n} P_n(τ)≥r. In actuality, through my own reading of the code, **two** random numbers are generated, one for determining if a jump occurs, and another to determine which jump operator was responsible. I suggest the following change (changes highlighted in bold):. > I: Choose a random number **r_1** between zero and one, representing the probability that a quantum jump occurs.; > II: Integrate the Schrödinger equation, using the effective Hamiltonian (1) until a time τ such that the norm of the wave function satisfies ⟨ψ(τ)|ψ(τ)⟩=**r_1**, at which point a jump occurs.; > **III: Choose a random number r_2 between zero and one, used to select which collapse operator was responsible for the jump.**; > IV: The resultant jump projects the system at time τ into one of the renormalized states given by Eq. (3). The corresponding collapse operator Cn is chosen such that n is the smallest integer satisfying:; > (5); > ∑_{i=1}^{n} P_n(τ)≥**r_2**. While this is not an issue in the code, the way the documentation is written at the moment implies that jumps which occur after a short amount of time will primarily be due to collapse operators at the end of the c_ops list, while jumps that happen after a long time will be biased towards collapse operators at the start of the c_ops list. Again, the code is correct, but the documentation does not accurately reflect the algorithm used.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1666:1059,Integrat,Integrate,1059,https://qutip.org,https://github.com/qutip/qutip/issues/1666,1,['Integrat'],['Integrate']
Integrability," + Periodic system Hamiltonian as :class:`QobjEvo`. List of; > + [:class:`Qobj`,:class:`Coefficient`] or callable that; > + can be made into :class:`QobjEvo` are also accepted.; > +; > + rho0 / psi0 : :class:`qutip.Qobj`; > + Initial density matrix or state vector (ket).; > +; > + Taulist:*list* / *array*; >; > ⬇️ Suggested change; >; > - Taulist:*list* / *array*; > + tlist: *list* / *array*; >; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245610938>:; >; > > + H : :class:`Qobj`,:class:`QobjEvo`,:class:`QobjEvo` compatible format.; > + Periodic system Hamiltonian as :class:`QobjEvo`. List of; > + [:class:`Qobj`,:class:`Coefficient`] or callable that; > + can be made into :class:`QobjEvo` are also accepted.; > +; > + rho0 / psi0 : :class:`qutip.Qobj`; > + Initial density matrix or state vector (ket).; > +; > + Taulist:*list* / *array*; > + List of times for :math:`t`.; > +; > + T : float; > + The period of the time-dependence of the hamiltonian.; > +; > + c_ops_and_rates : list of :class:`qutip.Qobj`.; > + List of lists of [collapse operator,collapse operator rate] pairs; >; > ⬇️ Suggested change; >; > - List of lists of [collapse operator,collapse operator rate] pairs; > + List of lists of [collapse operator, collapse operator rate] pairs; >; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245611168>:; >; > > +; > + e_ops : list of :class:`qutip.Qobj` / callback function; > + List of operators for which to evaluate expectation values.; > + The states are reverted to the lab basis before applying the; > +; > + args : *dictionary*; > + Dictionary of parameters for time-dependent Hamiltonian; > +; > + time_sense : float; > + Experimental. Value of the secular approximation (in terms of system; > + frequency 2*np.pi/T) to use when constructing the rate matrix R(t).; > + Default value of zero uses the fully time-i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847:5425,depend,dependence,5425,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847,2,['depend'],['dependence']
Integrability," /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar); 319 types.BuiltinFunctionType, partial)):; 320 res = _sesolve_func_td(H, rho0, tlist,; --> 321 e_ops, args, options, progress_bar); 322 else:; 323 res = _sesolve_const(H, rho0, tlist,. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _sesolve_func_td(H_func, psi0, tlist, e_ops, args, opt, progress_bar); 565 #; 566 return _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, norm,; --> 567 dims=psi0.dims); 568 ; 569 . /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, state_norm_func, dims); 656 ; 657 if t_idx < n_tsteps - 1:; --> 658 r.integrate(r.t + dt[t_idx]); 659 ; 660 progress_bar.finished(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in integrate(self, t, step, relax); 406 self._y, self.t = mth(self.f, self.jac or (lambda: None),; 407 self._y, self.t, t,; --> 408 self.f_params, self.jac_params); 409 except SystemError:; 410 # f2py issue with tuple returns, see ticket 1187. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in run(self, f, jac, y0, t0, t1, f_params, jac_params); 863 args = ((f, jac, y0, t0, t1) + tuple(self.call_args) +; 864 (f_params, jac_params)); --> 865 y1, t, istate = self.runner(*args); 866 if istate < 0:; 867 warnings.warn(self.__class__.__name__ + ': ' +. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4445)(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4289)(). TypeError: Cannot convert csr_ma",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/505:1801,integrat,integrate,1801,https://qutip.org,https://github.com/qutip/qutip/issues/505,1,['integrat'],['integrate']
Integrability," 1.17.3 which is incompatible.; matplotlib 3.7.4 requires numpy<2,>=1.20, but you have numpy 1.17.3 which is incompatible.; pandas 2.0.3 requires numpy>=1.20.3; python_version < ""3.10"", but you have numpy 1.17.3 which is incompatible.; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-70.0.0 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/vector.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:4820,depend,depends,4820,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability," 2020 project ""Error mitigation; > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > Wiki page. I post it here so if anyone finds it nice could copy it to the; > Wiki page.; >; > I add some details based on the original description:; > ------------------------------; > 1. Error mitigation in QuTiP; >; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:1501,integrat,integration,1501,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313,1,['integrat'],['integration']
Integrability," <blockquote>; <h2>9.3.0 (2022-10-29)</h2>; <ul>; <li>; <p>Limit SAMPLESPERPIXEL to avoid runtime DOS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a>; [wiredfool]</p>; </li>; <li>; <p>Initialize libtiff buffer when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a>; [radarhere]</p>; </li>; <li>; <p>Inline fname2char to fix memory leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a>; [nulano]</p>; </li>; <li>; <p>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a>; [nulano]</p>; </li>; <li>; <p>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a>; [hugovk]</p>; </li>; <li>; <p>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a>; [cgohlke]</p>; </li>; <li>; <p>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a>; [radarhere]</p>; </li>; <li>; <p>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a>; [cgohlke]</p>; </li>; <li>; <p>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a>; [hmaarrfk]</p>; </li>; <li>; <p>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a>; [radarhere]</p>; </li>; <li>; <p>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a>; [radarhere]</p>; </li>; <li>; <p>Added support for reading BMP images with RLE4 compression <a hr",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:11244,depend,dependabot,11244,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability," <h2>8.3.2</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html</a></p>; <h2>Security</h2>; <ul>; <li>; <p>CVE-2021-23437 Raise ValueError if color specifier is too long; [hugovk, radarhere]</p>; </li>; <li>; <p>Fix 6-byte OOB read in FliDecode; [wiredfool]</p>; </li>; </ul>; <h2>Python 3.10 wheels</h2>; <ul>; <li>Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</li>; </ul>; <h2>Fixed regressions</h2>; <ul>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Make Image.<strong>array</strong> take optional dtype argument <a href=""ht",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:1243,depend,dependabot,1243,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability," <li><a href=""https://github.com/psf/requests/commit/31ebb8102c00f8cf8b396a6356743cca4362e07b""><code>31ebb81</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6682"">#6682</a> from frenzymadness/pytest8</li>; <li>Additional commits viewable in <a href=""https://github.com/psf/requests/compare/v2.31.0...v2.32.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.31.0&new-version=2.32.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:10504,Depend,Dependabot,10504,https://qutip.org,https://github.com/qutip/qutip/pull/2434,1,['Depend'],['Dependabot']
Integrability," <li>Build macOS arm64 wheels natively <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7852"">#7852</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed typo <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7855"">#7855</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Open 16-bit grayscale PNGs as I;16 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7849"">#7849</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle truncated chunks at the end of PNG images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7709"">#7709</a> [<a href=""https://github.com/lajiyuan""><code>@​lajiyuan</code></a>]</li>; <li>Match mask size to pasted image size in GifImagePlugin <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7779"">#7779</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Changed SupportsGetMesh protocol to be public <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7841"">#7841</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Release GIL while calling <code>WebPAnimDecoderGetNext</code> <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7782"">#7782</a> [<a href=""https://github.com/evanmiller""><code>@​evanmiller</code></a>]</li>; <li>Fixed reading FLI/FLC images with a prefix chunk <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7804"">#7804</a> [<a href=""https://github.com/twolife""><code>@​twolife</code></a>]</li>; <li>Updated package name for Tidelift <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7810"">#7810</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed unused code <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7744"">#7744</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>;",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:8860,protocol,protocol,8860,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['protocol'],['protocol']
Integrability," <li>Updated vendored <code>packaging</code> to 21.3</li>; <li>Replaced all uses of <code>distutils</code> with <code>setuptools</code></li>; <li>The handling of <code>license_files</code> (including glob patterns and default; values) is now delegated to <code>setuptools&gt;=57.0.0</code> (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/466"">#466</a>).; The package dependencies were updated to reflect this change.</li>; <li>Fixed potential DoS attack via the <code>WHEEL_INFO_RE</code> regular expression</li>; <li>Fixed <code>ValueError: ZIP does not support timestamps before 1980</code> when using; <code>SOURCE_DATE_EPOCH=0</code> or when on-disk timestamps are earlier than 1980-01-01. Such; timestamps are now changed to the minimum value before packaging.</li>; </ul>; <p><strong>0.37.1 (2021-12-22)</strong></p>; <ul>; <li>Fixed <code>wheel pack</code> duplicating the <code>WHEEL</code> contents when the build number has changed (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/415"">#415</a>)</li>; <li>Fixed parsing of file names containing commas in <code>RECORD</code> (PR by Hood Chatham)</li>; </ul>; <p><strong>0.37.0 (2021-08-09)</strong></p>; <ul>; <li>Added official Python 3.10 support</li>; <li>Updated vendored <code>packaging</code> library to v20.9</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pypa/wheel/commit/6f1608dc1a88f00d2390b9044bd655753f39234c""><code>6f1608d</code></a> Created a new release</li>; <li><a href=""https://github.com/pypa/wheel/commit/cf8f5ef50e32b836c4ffb43af68107f78dca8d80""><code>cf8f5ef</code></a> Moved news item from PR <a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a> to its proper place</li>; <li><a href=""https://github.com/pypa/wheel/commit/9ec201660fa07ee0714edd17c979a7039ea852a4""><code>9ec2016</code></a> Removed install dependency on setuptools (<",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:2356,depend,dependabot,2356,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['depend'],['dependabot']
Integrability," <ul>; <li>Fix issue where specially crafted inputs to encode() could; take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p>3.6 (2023-11-25); ++++++++++++++++</p>; <ul>; <li>Fix regression to include tests in source distribution.</li>; </ul>; <p>3.5 (2023-11-24); ++++++++++++++++</p>; <ul>; <li>Update to Unicode 15.1.0</li>; <li>String codec name is now &quot;idna2008&quot; as overriding the system codec; &quot;idna&quot; was not working.</li>; <li>Fix typing error for codec encoding</li>; <li>&quot;setup.cfg&quot; has been added for this release due to some downstream; lack of adherence to PEP 517. Should be removed in a future release; so please prepare accordingly.</li>; <li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport; with PEP 517 and the Python Packaging User Guide for sdist archives.</li>; <li>Added security reporting protocol for project</li>; </ul>; <p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions; to this release.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</code></a> Release v3.7</li>; <li><a href=""https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6""><code>c1b3154</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/172"">#172</a> from kjd/optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623""><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/cd58a23173d2b0a40b95ee680baf3e59e8d33966""><code>cd58a23</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/152"">#152</a> from elliotwutingfeng/dev</li>; <li><a href=""https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:1807,protocol,protocol,1807,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['protocol'],['protocol']
Integrability," > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; # ; ## ERROR: Failure: ValueError (invalid literal for int() with base 10: '1post0'). Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/loader.py"", line 411, in loadTestsFromName; addr.filename, addr.module); File ""/usr/lib/python2.7/dist-packages/nose/importer.py"", line 47, in importFromPath; return self.importFromDir(dir_path, fqname); File ""/usr/lib/python2.7/dist-packages/nose/importer.py"", line 94, in importFromDir; mod = load_module(part_fqname, fh, filename, desc); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_mcsolve.py"", line 232, in <module>; @unittest.skipIf(version2int(Cython.**version**) < version2int('0.14') or; File ""/usr/local/lib/python2.7/dist-packages/qutip/**init**.py"", line 35, in version2int; return sum([int(d) \* (100 *\* (3 - n)) for n, d in enumerate(str_list[:3])]); ValueError: invalid literal for int() with base 10: '1post0'; # ; ## ERROR: mesolve: simple time-dependence as string list. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_mesolve.py"", line 398, in testMESimpleTDDecayAsStrList; medata = mesolve(H, psi0, tlist, c_op_list, [a.dag() \* a], args=args); File ""/usr/local/lib/python2.7/dist-packages/qutip/mesolve.py"", line 209, in mesolve; expt_ops, args, options); File ""/usr/local/lib/python2.7/dist-packages/qutip/mesolve.py"", line 525, in _mesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; ImportError: No module named rhs0; # ; ## ERROR: mesolve: constant decay as string list. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_me",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:15207,depend,dependence,15207,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['depend'],['dependence']
Integrability," A single callback’s expectation value can be any type, but a callback part of a list must return a number as the expectation value. However, I find that passing a callback function in a list e_ops = [my_callback] gives an exception:. > UnboundLocalError: local variable 'rho_t' referenced before assignment. By contrast, I find that passing a callback function directly as e_ops = my_callback does not cause an issue. This is important because I am unable to pass lists of callback functions which, according to the documentation, I should be able to do. ### Code to Reproduce the Bug. ```shell; # Imports ; import qutip as qt; import numpy as np. # System parameters; w = 1; kappa = 0.1; # Size of the Hilbert space; n_max = 10; # Annihilation operator; a = qt.destroy(n_max); # Callback function; my_callback = lambda t, rho_t : rho_t.purity(). # Hamiltonian; H = w * a.dag() * a; # Initial state; psi_0 = ( qt.fock(n_max, 0) + qt.fock(n_max, 1) ) / np.sqrt(2); rho_0 = qt.ket2dm( psi_0); # Integration times; times = np.linspace(0, 2/kappa, 5000); # Collapse operators; c_ops = [np.sqrt(kappa) * a]; # Observables to compute; e_ops = [my_callback]. # Solve the master equation; output = qt.mesolve(H, rho_0, times, c_ops, e_ops); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; UnboundLocalError Traceback (most recent call last); Cell In[17], line 29; 26 e_ops = [my_callback]; 28 # Solve the master equation; ---> 29 output = qt.mesolve(H, rho_0, times, c_ops, e_ops); 31 plt.plot(output.expect). File ~/anaconda3/envs/danjou/lib/python3.10/site-packages/qutip/mesolve.py:244, in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 241 v = rho0.full().ravel('F'); 242 func(0., v, *ode_args) + v; --> 244 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 245 progress_bar, dims=rho0.dims); 246 res.num_collapse = len(c_ops); 248 if e_ops_dict:. File ~/anaconda3/envs/danjou/lib/python3",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2189:1457,Integrat,Integration,1457,https://qutip.org,https://github.com/qutip/qutip/issues/2189,1,['Integrat'],['Integration']
Integrability," Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+564c987b; Numpy Version: 1.16.4; Scipy Version: 1.2.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: /home/tarun/riken-work/qutip/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. ```; @nathanshammah ran this on his Mac, and had the following results. The file runs fine on his Mac with . - (1) conda release 4.4.1; - (2) development version 4.5.0.dev0+f77f7e4a (previous to Eric's PR merge); - (3) updating the current development version 4.5.0.dev0+564c987b (with python setup.py develop). The file throws an error when:; - (4) updating the current development version 4.5.0.dev0+564c987b (with python setup.py install). Error message (then the code runs anyway):; ```; (qutipdev45) nathans-mbp:Downloads nathanshammah$ python fidel.py; /Users/nathanshammah/.pyxbld/temp.macosx-10.9-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error:; 'src/zspmv_openmp.hpp' file not found; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. His qutip.about(): . ```; QuTiP Version: 4.5.0.dev0+f77f7e4a (or others); Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: True; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```. Notice that in his case OPEN MP seems installed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1109:2052,message,message,2052,https://qutip.org,https://github.com/qutip/qutip/issues/1109,1,['message'],['message']
Integrability," Allow character detection dependencies to be optional in post-packaging steps</li>; <li><a href=""https://github.com/psf/requests/commit/d6dded3f00afcf56a7e866cb0732799045301eb0""><code>d6dded3</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6700"">#6700</a> from franekmagiera/update-redirect-to-invalid-uri-test</li>; <li><a href=""https://github.com/psf/requests/commit/bf24b7d8d17da34be720c19e5978b2d3bf94a53b""><code>bf24b7d</code></a> Use an invalid URI that will not cause httpbin to throw 500</li>; <li><a href=""https://github.com/psf/requests/commit/2d5f54779ad174035c5437b3b3c1146b0eaf60fe""><code>2d5f547</code></a> Pin 3.8 and 3.9 runners back to macos-13 (<a href=""https://redirect.github.com/psf/requests/issues/6688"">#6688</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/f1bb07d39b74d6444e333879f8b8a3d9dd4d2311""><code>f1bb07d</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6687"">#6687</a> from psf/dependabot/github_actions/github/codeql-act...</li>; <li><a href=""https://github.com/psf/requests/commit/60047ade64b0b882cbc94e047198818ab580911e""><code>60047ad</code></a> Bump github/codeql-action from 3.24.0 to 3.25.0</li>; <li><a href=""https://github.com/psf/requests/commit/31ebb8102c00f8cf8b396a6356743cca4362e07b""><code>31ebb81</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6682"">#6682</a> from frenzymadness/pytest8</li>; <li>Additional commits viewable in <a href=""https://github.com/psf/requests/compare/v2.31.0...v2.32.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.31.0&new-version=2.32.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:9293,depend,dependabot,9293,https://qutip.org,https://github.com/qutip/qutip/pull/2434,1,['depend'],['dependabot']
Integrability, Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; [ 1/31] Cythonizing qutip/core/_brtensor.pyx; [ 2/31] Cythonizing qutip/core/_brtools.pyx; [ 3/31] Cythonizing qutip/core/cy/coefficient.pyx; [ 4/31] Cythonizing qutip/core/cy/math.pyx; [ 5/31] Cythonizing qutip/core/data/add.pyx; [ 6/31] Cythonizing qutip/core/data/base.pyx; [ 7/31] Cythonizing qutip/core/data/csr.pyx; [ 8/31] Cythonizing qutip/core/data/dense.pyx; [ 9/31] Cythonizing qutip/core/data/dia.pyx; [10/31] Cythonizing qutip/core/data/dispatch.pyx; [11/31] Cythonizing qutip/core/data/matmul.pyx; [12/31] Cythonizing qutip/core/data/mul.pyx; [13/31] Cythonizing qutip/core/data/norm.pyx; [14/31] Cythonizing qutip/core/data/reshape.pyx; [15/31] Cythonizing qutip/core/data/tidyup.pyx; [16/31] Cythonizing qutip/piqs/_piqs.pyx; [17/31] Cythonizing qutip/core/cy/_element.pyx; [18/31] Cythonizing qutip/core/cy/qobjevo.pyx; [19/31] Cythonizing qutip/core/data/adjoint.pyx; [20/31] Cythonizing qutip/core/data/expect,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:8996,depend,depends,8996,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability, Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qu,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:7456,depend,depends,7456,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability, Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; [ 1/31] Cythonizing qutip/core/_brtools.pyx; [ 2/31] Cythonizing qutip/core/cy/coefficient.pyx; [ 3/31] Cythonizing qutip/core/cy/math.pyx; [ 4/31] Cythonizing qutip/core/data/add.pyx; [ 5/31] Cythonizing qutip/core/data/base.pyx; [ 6/31] Cythonizing qutip/core/data/csr.pyx; [ 7/31] Cythonizing qutip/core/data/dense.pyx; [ 8/31] Cythonizing qutip/core/data/dia.pyx; [ 9/31] Cythonizing qutip/core/data/dispatch.pyx; [10/31] Cythonizing qutip/core/data/matmul.pyx; [11/31] Cythonizing qutip/core/data/mul.pyx; [12/31] Cythonizing qutip/core/data/norm.pyx; [13/31] Cythonizing qutip/core/data/permute.pyx; [14/31] Cythonizing qutip/core/data/ptrace.pyx; [15/31] Cythonizing qutip/core/data/reshape.pyx; [16/31] Cythonizing qutip/core/data/tidyup.pyx; [17/31] Cythonizing qutip/piqs/_piqs.pyx; [18/31] Cythonizing qutip/core/_brtensor.pyx; [19/31] Cythonizing qutip/core/cy/_element.pyx; [20/31] Cythonizing qut,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:9412,depend,depends,9412,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability," Could this issue perhaps be broken into sub-tasks in some way, perhaps, in order to enable work starting on it a bit more feasible?. Also, I can see it's been labelled as a ""good first issue"" but it seems to me the definition of done (i.e., what would a PR - or a set of PRs - that would successfully address the problem entail?), with respect to the entire issue, could be clarified a bit further, and the breakdown into sub-tasks (which itself might result organically from some further discussion) might help a bit in that direction. Regarding possible approaches for handling randomness - I have to admit I've started looking into QuTiP only very recently, and I'm yet to start familiarising myself with its more intricate details and get to run the full set of tests, and investigate what kind of test failures occur. In the meantime, I'll generally share some (what I _think_ is) relevant experience in the context of handling randomness in tests:; - My understanding is that we're talking about not testing the behaviour of random-number generations per se, but how the numbers they generate affect the non-deterministic functions/algorithms, which depend on the former. In such cases, I've either used a fixed seed (as you've mentioned in your [original post](https://github.com/qutip/qutip/issues/1268#issue-619006856)), which can get a bit messy, as there's Python's `random`, NumPy's `random` (which also comes in a legacy and a modern flavour, namely `numpy.random.RandomState` and `numpy.random.Generator`). Also, as you've mentioned, there's tight coupling between the implementation logic and the corresponding set of tests, and updates in the former require constant maintenance of the latter.; - As an alternative, I've sometimes resorted to [`mock`](https://docs.python.org/3/library/unittest.mock.html)ing the random-number generation process itself, and - in a way equivalent to using a fixed seed - providing a pre-defined sequence of numbers to the functions which depend on tho",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707:1176,depend,depend,1176,https://qutip.org,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707,1,['depend'],['depend']
Integrability," Monte-carlo: Time-dependent H (func format) ... ok; > > > Monte-carlo: Time-dependent H (str format) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=True) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=False) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=True) ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as partial function list ... ok; > > > mesolve: simple time-dependence as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > Metrics: Checks that average gate fidelities are sensible for random ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementation",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:5383,depend,dependence,5383,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['depend'],['dependence']
Integrability," Python 3.6 or `CompileError: command '/usr/bin/clang' failed with exit status 1` on Python 3.5. It works fine if I don't to the conversion from the function to the array. The Cython program that is being generated and that fails to compile is this:; ~~~; # This file is generated automatically by QuTiP.; # (C) 2011 and later, QuSTaR. import numpy as np; cimport numpy as np; cimport cython; np.import_array(); cdef extern from ""numpy/arrayobject.h"" nogil:; void PyDataMem_NEW_ZEROED(size_t size, size_t elsize); void PyArray_ENABLEFLAGS(np.ndarray arr, int flags). from qutip.cy.spmatfuncs cimport spmvpy; from qutip.cy.interpolate cimport interp, zinterp; from qutip.cy.math cimport erf; cdef double pi = 3.14159265358979323. include '/Users/goerz/Documents/Programming/github/krotov/.venv/py36/lib/python3.6/site-packages/qutip/cy/complex_math.pxi'. @cython.cdivision(True); @cython.boundscheck(False); @cython.wraparound(False); def cy_td_ode_rhs(; double t,; complex[::1] vec,; complex[::1] data0,int[::1] idx0,int[::1] ptr0,; complex[::1] data1,int[::1] idx1,int[::1] ptr1,; np.ndarray[np.float64_t, ndim=1] _td_array_0):; ; cdef size_t row; cdef unsigned int num_rows = vec.shape[0]; cdef double complex * out = <complex *>PyDataMem_NEW_ZEROED(num_rows,sizeof(complex)); ; spmvpy(&data0[0], &idx0[0], &ptr0[0], &vec[0], 1.0, out, num_rows); spmvpy(&data1[0], &idx1[0], &ptr1[0], &vec[0], (0 if (t > 10.000000) else _td_array_0[int(round(999 * (t/10.000000)))]), out, num_rows); cdef np.npy_intp dims = num_rows; cdef np.ndarray[complex, ndim=1, mode='c'] arr_out = np.PyArray_SimpleNewFromData(1, &dims, np.NPY_COMPLEX128, out); PyArray_ENABLEFLAGS(arr_out, np.NPY_OWNDATA); return arr_out ; ~~~. Program versions are; ~~~; CPython 3.6.7; IPython 7.1.1. qutip 4.3.1; numpy 1.15.4; scipy 1.1.0; cython 0.29. compiler : GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final); system : Darwin; release : 18.0.0; machine : x86_64; processor : i386; CPU cores : 4; interpreter: 64bit; ~~~; I al",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932:1973,wrap,wraparound,1973,https://qutip.org,https://github.com/qutip/qutip/issues/932,1,['wrap'],['wraparound']
Integrability," Turn it into a Liouvillian once, so we don't repeat the cost; base = qutip.liouvillian(base_hamiltonian, collapse_operators); state = ...; options = qutip.Options(store_states=False, store_final_state=True); for prev, time in zip(times[:-1], times[1:]):; controls = krotov.get_next_controls(time, state, ...); current_liouvillian = base.copy(); for control, operator in zip(controls, control_liouvillians):; current_liouvillian += control * operator; # ^^^^^^^^^^^^^^^^^^; # each of these terms is a single time-independent Qobj,; # and the sum is a single QobjEvo with all the uncontrolled; # time dependence already handled.; state = qutip.mesolve(current_liouvillian, state, [prev, time], options=options).final_state; ```. By giving `mesolve` the Liouvillian instead of the Hamiltonian and collapse operators separately, you've already done most of its setup, so the time penalties should be much less than the current system (i.e. you avoid several Kronecker products and safety checks on the time-dependence terms because you've done them once at the start). In theory, that should already work from at least 4.5 onwards, and likely most of it will work from 4.4. In the 5.x series, almost all the intermediary operations should get a speed up as well (`Qobj.__init__` is getting its time slashed, and the line `current_liouvillian += control * operator` may be able to be replaced with one that applies the same in-place calculation optimisations that `mesolve` does internally). One thing you pay a nasty penalty for right now if that internally we'd keep column-stacking/unstacking the state, but in the 5.x branch it'll stop being represented internally by a sparse matrix, and instead it'll be a Fortran-ordered dense matrix, for which the stack/unstack is a free operation. In the form I've written it, this loop is thread-safe already. As it stands in the 4.x series, `mesolve` is re-entrant (I'm fairly sure), but note that it does generally mutate its arguments, especially if you pass",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859873615:2229,depend,dependence,2229,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859873615,1,['depend'],['dependence']
Integrability," Using cached scipy-1.9.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Using cached scipy-1.9.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.9.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached setuptools-70.0.0-py3-none-any.whl (863 kB); Using cached packaging-24.0-py3-none-any.whl (53 kB); Using cached wheel-0.43.0-py3-none-any.whl (65 kB); Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.6 MB); Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl (4.9 kB); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl (20.5 MB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.6 MB); Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.; launchpadlib 1.10.13 requires testresources, which is not installed.; awkward-cpp 26 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; awkward 2.5.0 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; matplotlib 3.7.4 requires numpy<2,>=1.20, but you have numpy 1.17.3 which is incompatible.; pandas 2.0.3 requires numpy>=1.20.3; python_version < ""3.10"", but you have numpy 1.17.3 which is incompatible.; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-70.0.0 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:3464,depend,dependency,3464,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['dependency']
Integrability," [<a href=""https://github.com/hmaarrfk""><code>@​hmaarrfk</code></a>]</li>; <li>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a> [<a href=""https://github.com/npjg""><code>@​npjg</code></a>]</li>; <li>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>pylint warnings <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6659"">#6659</a> [<a href=""https://github.com/marksmayo""><code>@​marksmayo</code></a>]</li>; <li>Added GPS TIFF tag info <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6661"">#6661</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6647"">#6647</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed seeking to an L frame in a GIF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6576"">#6576</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Consider all fra",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:4145,depend,dependabot,4145,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability," [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Add Tidelift alignment action and badge <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5763"">#5763</a> [<a href=""https://github.com/aclark4life""><code>@​aclark4life</code></a>]</li>; <li>Replaced further direct invocations of setup.py <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5906"">#5906</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a> [<a href=""https://github.com/m-shinder""><code>@​m-shinder</code></a>]</li>; <li>Fixed typo <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5902"">#5902</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Switched from deprecated &quot;setup.py install&quot; to &quot;pip install .&quot; <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5896"">#5896</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a> [<a href=""https://github.com/cmbruns""><code>@​cmbruns</code></a>]</li>; <li>Fixed raising OSError in _safe_read when size is greater than SAFEBLOCK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5872"">#5872</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a> [<a href=""https://g",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:5559,depend,dependabot,5559,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability," [radarhere]</p>; </li>; <li>; <p>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a>; [radarhere]</p>; </li>; <li>; <p>Pass SAMPLEFORMAT to libtiff <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5848"">#5848</a>; [radarhere]</p>; </li>; <li>; <p>Added rounding when converting P and PA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5824"">#5824</a>; [radarhere]</p>; </li>; <li>; <p>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a>; [radarhere]</p>; </li>; <li>; <p>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a>; [hugovk]</p>; </li>; <li>; <p>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a>; [radarhere]</p>; </li>; <li>; <p>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a>; [m-shinder, radarhere]</p>; </li>; <li>; <p>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a>; [cmbruns, radarhere]</p>; </li>; <li>; <p>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/82541b6dec8452cb612067fcebba1c5a1a2bfdc8""><code>82541b6</code></a> 9.0.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cae5ac495badd7c7ecfad8223a08f55f5d2eaacb""><code>cae5ac4<",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:12634,depend,dependabot,12634,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability," `/qutip/tests` (I originally didn't like it, but I now see more and more benefits of the `/src` (or `/lib`) convention in Python projects).; - the current `qutip/tests` should entirely become `/test/qutip`; - a new `/src/qutip/test` becomes a fully-supported _public_ module, including base classes (such as the data-layer mixins) and things like that. We'd need to be careful, because reducing your possibilities for flexibility in testing generally sounds like a bad idea to me, but if we take care to be very limited, it could work. I suspect you won't be able to import the test suite from inside `qutip.core.data` because of cyclical dependencies, which is probably a good thing - it'll force us to put the structure the right way round immediately. For an idea pretty far out of left field:; - the data layer tests should really _discover_ the specialisations rather than us needing to specify them (this is true regardless of this PR); - if so, in the new form, we _could_ directly export this part of the test suite from `qutip.test` (our test suite would import this as well), and add a little bit of logic to allow filtering of which tests need to be run (class decorators, probably); - downstream packages could then test just by importing our classes and disabling any specialisations that are only on internal data-layer objects. I'm not 100% sure how I feel about this, but it's plausible - we'd still be able to add extra methods in our own test suite if we wanted them, because we could just derive from the classes, rather than defining the names into the test suite in those cases. ---. About us breaking downstream CI: having been a maintainer of QuTiP and now Qiskit, I have a deep-rooted hatred for any upstream package that forces CI failures on its dependents, because it _requires_ the lower packages to move ""fix CI"" way up to the top of their priority list; you can't merge _anything_ until CI is running again, which is very frustrating. It messes with all your workflows.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-979917075:2033,depend,dependents,2033,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-979917075,1,['depend'],['dependents']
Integrability," `adams`, `bdf`, `dop853`, `lsoda`, `vern7`, `vern9`, `diag`. The 4 first are from `scipy.integrate.ode`, the 3 last are ours. `vern7` and `vern9` are runge-kutta methods of 7th and 9th order using [verner's most efficient coefficient](http://people.math.sfu.ca/~jverner/) with dense output. `diag` diagonalize a constant system and solve the ODE in that basis.; The minimum that must be given for a new evolver are the `prepare`, `set_state`, `get_state` and `step` methods. `evolver_collection` work as a dispatcher over evolvers. Solvers obtain their evolver instance using `evolver_collection[method, rhs]` with both `method` and `rhs` taken from the options. `evolver_collection` keep a list of description, used options and capacities for each member. It can list the available method matching desired condition. The `rhs` options is not used yet in this PR, it is for future Adaptative Hilbert Space and other modification to the ODE that affect the matrix-state product. #### Other utilities and code added in this PR:. ##### `SolverQEvo`, `Feedback`:; Wrapper around `QobjEvo` that handle feedback arguments and provide `ndarray` interface. ##### qutip/solver/ode/...; Code qutip's evolver, mostly for Verner's method. . ##### progress_bar:; Added a progress bar passed on `tqdm`. `update` no longer need the iteration number. ##### parallel map:; - Added a `loky` based parallel map, hopefully will help windows users.; - Added a `reduce_func` input. Presently the map function is saving all results and the average, std, etc. are only computed at the end. There was no real advantage in saving only average values since all trajectories were in memory at the end of the map. But users expected lower memory usage when asking for only the results average.; - Added `timeout` options to the map, when passed, no error is raised but obtained results are returned. This allow to ask for 30s worth of trajectories instead of fixing a number. **Related issues or PRs**; Build on top of the #1407",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1409:2287,Wrap,Wrapper,2287,https://qutip.org,https://github.com/qutip/qutip/pull/1409,2,"['Wrap', 'interface']","['Wrapper', 'interface']"
Integrability," add the linear algebra specialisations you use most). This actually goes a bit beyond what Julia does (at least as far as I know), because QuTiP's new system ""completes"" the dispatch table for all known types automatically; when it's asked to do say `kron` on two types it doesn't have a specialisation for, it'll cast the inputs through a path of least weight into a specialisation it _does_ know, and then use that. The desired casting rules and preferred output types can be altered dynamically at run-time as well. While I put a lot of effort into making this as fast as possible (and naturally a constant-time operation with respect to the number of known types and specialisations), of course the penalty we pay is a small run-time cost of type look-ups and dispatch (<1µs, but that's dwarfed by the cost of the operations themselves). We will have a hook for creating ""data-layer types"" out of arbitrary inputs, but we weren't heavily focussing on this at all; it seems rather too special a case to have _another_ magic interface for, and we can basically just reuse `__array__` for it - ""data-layer types"" are essentially just ""matrix-like"" objects. It also isn't appropriate for the situation you're describing here, because your own objects have additional ""quantum-specific"" attributes associated with them, similar to the extra stuff that `Qobj` contains. If you want to see more of this, it's in the `dev.major` branch. ---. Defining an interoperable new public interface I think is quite a big task, since it's inherently got to be future-proof. I'm definitely +1 on us having one, and having some discussion about it before a 5.0 release. I'm most concerned with how we can do it in a manner that's useful without stymieing our own ability to iterate and improve. It's harder for downstream packages to support multiple versions of a magic interface than it is for them to changing call QuTiP library functions; with deprecation warnings we can have multiple valid methods for doing t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:6936,interface,interface,6936,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,1,['interface'],['interface']
Integrability," as a dtype will now raise a <code>TypeError</code>.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/19539"">gh-19539</a>)</p>; <h3>Expired deprecations for <code>loads</code>, <code>ndfromtxt</code>, and <code>mafromtxt</code> in npyio</h3>; <p><code>numpy.loads</code> was deprecated in v1.15, with the recommendation that; users use <code>pickle.loads</code> instead. <code>ndfromtxt</code> and <code>mafromtxt</code> were both; deprecated in v1.17 - users should use <code>numpy.genfromtxt</code> instead with; the appropriate value for the <code>usemask</code> parameter.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/19615"">gh-19615</a>)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/numpy/numpy/commit/4adc87dff15a247e417d50f10cc4def8e1c17a03""><code>4adc87d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20685"">#20685</a> from charris/prepare-for-1.22.0-release</li>; <li><a href=""https://github.com/numpy/numpy/commit/fd66547557f57c430d41be2fc0764f74a62e8ccf""><code>fd66547</code></a> REL: Prepare for the NumPy 1.22.0 release.</li>; <li><a href=""https://github.com/numpy/numpy/commit/125304b035effcd82e366e601b102e7347eaa9ba""><code>125304b</code></a> wip</li>; <li><a href=""https://github.com/numpy/numpy/commit/c283859128b1a4b57014581570a23ed7950a24ea""><code>c283859</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20682"">#20682</a> from charris/backport-20416</li>; <li><a href=""https://github.com/numpy/numpy/commit/5399c03d4a069fe81a1616be0184c9749d7271ee""><code>5399c03</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20681"">#20681</a> from charris/backport-20954</li>; <li><a href=""https://github.com/numpy/numpy/commit/f9c45f8ebf31340b1a5a0371bfca25afcfc4794e""><code>f9",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:3147,depend,dependabot,3147,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['depend'],['dependabot']
Integrability," can't separate it out into different files, or mix it with other code (say additional implementations). I'm definitely not a lawyer, but I'm worried that will cause us code organisation problems in the future, and while the licence would give us permission to improve the code, it's the reorganisation I'm worried about. Secondly, about the code itself: this sort of local operation is something I absolutely would like to include, but I'm not certain that the form it's in right now is the best, general way to do it. I think this is part of much larger discussion about how to handle tensor networks - for example, at the moment, `targets` is fine for states and operators, but it won't work for superoperators. I'm not sure that this is solvable in an ergonomic way with QuTiP's current dimensions specifiers, but it's something we're definitely going to look into after the initial release of 5.0. Also, there are already several disparate functions in QuTiP that provide sort-of similar functionality, and I think we need to have a proper go at tidying them all up into one cohesive interface. This includes `subsystem_apply` (most similar to this), but also `ptrace` and `partial_tranpose`, which can be seen as special cases of this exact same type of tensor contraction (not to mention `tensor_contract`!). The other thing from a code perspective is that this doesn't use the data-layer in the intended manner. A lot of this may be because our documentation of the data-layer isn't readily available yet (we weren't expecting interest this early!). It does individual detection on two different types, rather than creating a `Dispatcher` to handle the multiple dispatch over potentially different data types of the two inputs. I would imagine that a better form of organisation for this sort of routine, which will be able to handle arbitrary tensor-network operations, will end up being made up of two components:; 1. a `Dispatcher` version of something akin to `einsum`, with a couple of li",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566:1895,interface,interface,1895,https://qutip.org,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566,1,['interface'],['interface']
Integrability," compare the expectation value at the end of the simulation which is at time t = 1. . #First code:. import qutip; import numpy as np; options = qutip.Options(); options.nsteps = 100000; args = {'omega':1000}; time_grid = 1000; timelist = np.linspace(0, 1, time_grid); omegatlist = np.cos(args['omega']*timelist); H = qutip.QobjEvo([qutip.sigmax(),omegatlist], tlist= np.array(np.linspace(0, 1, time_grid), dtype=np.float64)); state = qutip.basis(2, 0).proj(); times = np.linspace(0, 1, 2); result = qutip.mesolve(H,state,times,[],qutip.sigmaz(),args=args,options=options); print(result.expect[0][1]). #Second code: ; import qutip; import numpy as np; options = qutip.Options(); options.nsteps = 100000; args = {'omega':1000}; time_grid = 1000; tlist = np.linspace(0, 1, time_grid); omegatlist = np.cos(args['omega']*tlist); H = [qutip.sigmax(),omegatlist]; state = qutip.basis(2, 0).proj(); times = tlist; result = qutip.mesolve(H,state,times,[],qutip.sigmaz(),args=args,options=options); print(result.expect[0][999]). The first code gives a value of 0.9999989185418086 and the second one returns a value of 0.9999989289570258. So, the two results are not exactly the same. For the above analytic Hamiltonian, the result seems to differ by a small decimal number. However for the non-analytic Hamiltonian that I am actually using, the result can differ by six orders of magnitude. May I know why there is a difference in the results obtained from the two methods above? Is it because when QobjEvo is used, the mesolve routine actually does not sample enough time grid points when it evolves the Hamiltonian (i.e., it does not sample all the time_grid points which is time_grid = 1000 as provided above)? If so, may you kindly tell me how to rectify this problem?. As per my original question, I would like the first code to give the same the expectation value of the operator at the final time as is in the second code but without having to evaluate the expectation value of the operator at all time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-808726734:1859,rout,routine,1859,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-808726734,1,['rout'],['routine']
Integrability," excitations ... ok; Excitation-number-restricted state space: two excitations ... ok; Excitation-number-restricted state space: fock states ... ok; Excitation-number-restricted state space: identity operator ... ok; Excitation-number-restricted state space: thermal density operator (I) ... ok; Excitation-number-restricted state space: thermal density operator (II) ... ok; Entropy: von-Neumann entropy ... ok; Entropy: Linear entropy ... ok; Entropy: Concurrence ... ok; Entropy: Mutual information ... ok; Entropy: Conditional entropy ... ok; Entropy: Entangling power ... ok; expect: operator list and state list ... ok; expect: operator and density matrix ... ok; expect: operator and ket ... ok; expect: operator list and state ... ok; expect: operator list and state list ... ok; expect: operator and state list ... ok; fastsparse: fast_csr_matrix operations ... ok; fastsparse: transpose operations ... ok; fastsparse: adjoint operations ... ok; Read and write complex valued decimal formatted data ... ok; Read and write complex valued default formatted data ... ok; Read and write complex valued exp formatted data ... ok; Read and write real valued decimal formatted data ... ok; Read and write real valued default formatted data ... ok; Read and write real valued exp formatted data ... ok; Read and write with automatic separator detection ... ok; qsave/qload ... ok; Floquet: test unitary evolution of time-dependent two-level system ... ok; gates: expand 1 to N ... ok; gates: expand 2 to N (using cnot, iswap, sqrtswap) ... ok; gates: expand 2 to N (using swap) ... ok; gates: expand 3 to N (using toffoli, fredkin, and random 3 qubit gate) ... ok; gates: expand 3 to 3 with permuTation (using toffoli) ... ok; gates: swap gate ... ok; qutip.tests.test_gates.TestGates.test_are_cliffords ... ok; qutip.tests.test_gates.TestGates.test_clifford_group_len ... ok; Graph: Graph Degree ... ok; Graph: Breadth-First Search ... ok; Graph: Reverse Cuthill-McKee Ordering (simple) ... ok; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:8532,depend,dependent,8532,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,1,['depend'],['dependent']
Integrability," fill the instance with the defaults and update the doc string. Passing an options not supported by the solver will raise an error. When not used, any options items will be accepted. ```; >>> SolverOptions(atol=1e-5, store_ados=True); SolverOptions(solver='', atol=1e-05, store_ados=True). >>> SolverOptions('sesolve', atol=1e-5, store_ados=True); KeyError: ""'store_ados' is not a supported options."". >>> SolverOptions('heomsolver', atol=1e-5, store_ados=True); SolverOptions(solver=heomsolver, atol=1e-05, store_ados=True); ```. `SolverOptions` can be used as `dict`, but most methods only use provided keys:; ```; >>> {**SolverOptions('sesolve', atol=1, rtol=2)}; {'atol': 1, 'rtol': 2}; ```; `store_states` etc. are not in `opt.keys()`.; The exceptions are `in` and `__getitem__` which knows of the default values:; ```; >>> opt = SolverOptions('sesolve', atol=1, rtol=2); >>> ""store_states"" in opt; True; >>> print(opt[""store_states""]); None; ```. `print` create a human readable list of options, including default:; ```; >>> print(SovlerOptions(""sesolve"", atol=1e-5, store_states=True)). Options for sesolve:; progress_bar : 'text' (default); progress_kwargs : {'chunk_size': 10} (default); store_final_state : False (default); store_states : True ; normalize_output : True (default); method : 'adams' (default); Options for adams integrator:; atol : 1e-05 ; rtol : 1e-06 (default); nsteps : 2500 (default); order : 12 (default); first_step : 0 (default); max_step : 0 (default); min_step : 0 (default); ```. Some integrators options will change depending on the method:; ```; >>> ""order"" in SovlerOptions(""sesolve"", method=""adams""); True; >>> ""order"" in SovlerOptions(""sesolve"", method=""dop853""); False; ```; passing options not supported by the options will raise an error. Solver accept options as `dict` or `SolverOptions`. They do not refuse options for other solver.; Solver can support options changes: `my_solver.options['atol'] = 1e-10`, will reset the integrator to use the new value.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947:1684,integrat,integrator,1684,https://qutip.org,https://github.com/qutip/qutip/pull/1947,4,"['depend', 'integrat']","['depending', 'integrator', 'integrators']"
Integrability," from psf/dependabot/github_actions/github/codeql-act...</li>; <li><a href=""https://github.com/psf/requests/commit/60047ade64b0b882cbc94e047198818ab580911e""><code>60047ad</code></a> Bump github/codeql-action from 3.24.0 to 3.25.0</li>; <li><a href=""https://github.com/psf/requests/commit/31ebb8102c00f8cf8b396a6356743cca4362e07b""><code>31ebb81</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6682"">#6682</a> from frenzymadness/pytest8</li>; <li>Additional commits viewable in <a href=""https://github.com/psf/requests/compare/v2.31.0...v2.32.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.31.0&new-version=2.32.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:10239,Depend,Dependabot,10239,https://qutip.org,https://github.com/qutip/qutip/pull/2434,1,['Depend'],['Dependabot']
Integrability," has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ... # Error; solver.options = opt; ```; This is because changing options without the solver knowing will not take effect. I removed saving / storing options for now. It was mostly used to store openmp threshold, which is not supported.; I also propose to write the stored options as python code when we restore it. (`options = eval(repr(options))`, we may have some issue with circular import if called from `__init__.py`, but we can just write the `repr` of the `dict`.). While it's working fine as is, there are few point to discuss:; - Freezing options associated to solver work fine, but I see 2 alternatives:; - Options know they a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:2342,integrat,integrator,2342,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['integrat'],['integrator']
Integrability," href=""https://github.com/ipython/ipython/commit/4f26796cf368d24edadbb3d62e052e6aa4ddc820""><code>4f26796</code></a> fix xxlimited_35 import name</li>; <li><a href=""https://github.com/ipython/ipython/commit/77ca4a6312374f0659fb6973925e5b696d5dc74e""><code>77ca4a6</code></a> don't run nose-based iptest on py310, only pytest</li>; <li><a href=""https://github.com/ipython/ipython/commit/533e5094aa36b51549cf6a316fc439c6404643c9""><code>533e509</code></a> back to decorator skip</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.22.0...7.31.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.22.0&new-version=7.31.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780:2477,Depend,Dependabot,2477,https://qutip.org,https://github.com/qutip/qutip/pull/1780,1,['Depend'],['Dependabot']
Integrability," href=""https://github.com/python-pillow/Pillow/commit/39a3b1d83edcf826c3864e26bedff5b4e4dd331b""><code>39a3b1d</code></a> Fixed deallocating mask images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8c1dc819fd91471825da01976ac0e0bc8789590f""><code>8c1dc81</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.4.0...10.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.4.0&new-version=10.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:13501,depend,dependabot-automerge-start,13501,https://qutip.org,https://github.com/qutip/qutip/pull/2237,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability," href=""https://github.com/t-vi""><code>@​t-vi</code></a>]</li>; </ul>; <h2>8.3.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Use snprintf instead of sprintf <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a> [<a href=""https://github.com/newpanjing""><code>@​newpanjing</code></a>]</li>; <li>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a> [<a href=""https://github.com/gofr""><code>@​gofr</code></a>]</li>; <li>Do not use background or transparency index for new color <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5564"">#5564</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Simplified code <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5315"">#5315</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Replaced xml.etree.ElementTree <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5565"">#5565</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/master/CHANGES.rst"">pillow's changelog</a>.</em></p>; <block",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:3328,depend,dependabot,3328,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability," import qutip as qt; import numpy as np. x = np.arange(0, 10, 0.1); decay = np.exp(-x); decay_spline = qt.Cubic_Spline(x[0], x[-1], decay). sol1 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), ""exp(-w)""]]) # works fine; sol2 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), ""exp(-w)""]]) # works fine; sol3 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; sol4 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; ```. On the cases it gives an error (sol3, sol4), it is `Exception: Invalid a_td_term.` from br_codegen.py (`aop_td_funcs()`).; Note that the Cubic_Spline representation works perfectly fine for the Hamiltonian part (e.g. sol2). It also appears to work fine if specifying `c_ops`. **Expected behavior**; My understanding from the documentation regarding time-dependent objects is that the Cubic_Spline representation should work for brmesolve at all argument positions, where appropriate (not just the Hamiltonian and c_ops). For example, at the above URL, we have: <br/>; ""When combining interpolating functions with other Python functions or strings, the interpolating class will automatically pick the appropriate method for calling the class. That is to say that, if for example, you have other time-dependent terms that are given in the string-format, then the cubic spline representation will also be passed in a string-compatible format. In the string-format, the interpolation function is compiled into c-code, and thus is quite fast. This is the default method if no other time-dependent terms are present."" <br/>. If my understanding is incorrect and brmesolve can not accept Cubic_Spline objects, it means it is currently impossible to use this function with non-analytic functions (i.e. only ones we can write out explicitly such as 'exp(-w)'), and seems a major drawback (considering all ot",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1624:1554,depend,dependent,1554,https://qutip.org,https://github.com/qutip/qutip/issues/1624,1,['depend'],['dependent']
Integrability," in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > > Wiki page. I post it here so if anyone finds it nice could copy it to the; > > Wiki page.; > >; > > I add some details based on the original description:; > > ------------------------------; > > 1. Error mitigation in QuTiP; > >; > > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > > quantum circuit simulator (which was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can be improved, including; > > new device models, new noise models and integration with the existing; > > general framework for quantum circuits (qutip.qip.circuit). There are; > > also possible applications such as error mitigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:5142,integrat,integration,5142,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['integrat'],['integration']
Integrability," is ok when all operations are like `matmul(CSR, CSR) -> CSR`, but which file should the operation `matmul(CSR, Dense) -> COO` go into? Much easier to find what you're looking for if all `matmul` functions are together, and then setting up the dispatcher will be the last item in the `matmul` file. It also means the files stay a bit smaller and easier to manage within themselves - you're less likely to ""lose"" code when each module is small and very focussed. 2. Exactly - it's more of an internal type. Currently `Qobj` converts the underlying data object to dense `ndarray` and prints it for its `repr` method - I don't have any plans to change that, so `Qobj` will still be full and user-facing. My `CSR` repr actually just tells you the same information that `scipy.sparse.csr_matrix` does, just in a slightly more Python-looking form. 3. Yes, in some form or another. Perhaps we could talk about the best way to do that in a future meeting?. 4. `PyDataMem_NEW` isn't actually a Python routine, it's a numpy one, but that's largely irrelevant. The Python equivalent is `cpython.mem.PyMem_Malloc` and family. The reason I don't use the latter in general is because sometimes `PyMem_Malloc` allocates into Python-reserved stack-space, and if we subsequently pass the pointer to numpy, it will try to free it and cause a segfault. The reason for using `malloc` and `free` here is mostly just because there was a comment in the code I copied it from saying that raw `malloc` and `free` were slightly faster for allocating heap space to be released within the same function, so I just did what they did. I can change it - it's not important. When allocating space that _may_ be passed to numpy, I always use `PyDataMem_NEW` (or friends). 5. That's a mistake - I meant to take out that ability in `matmul_csr` because it's just asking for trouble (the user won't know how much space to allocate, and we're basically just asking for a segfault). I did `matmul_csr` first, and I hadn't decided yet exac",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1296#issuecomment-648270004:1415,rout,routine,1415,https://qutip.org,https://github.com/qutip/qutip/pull/1296#issuecomment-648270004,1,['rout'],['routine']
Integrability," it is in the scope of qutip to try and make that easier, or guide users to do that. The philosophy here is, if the user can get the `mpi4py.futures.MPIPoolExecutor` to work, then they can also use `mpi_pmap` in qutip. However, I did show in the tutorial notebook explicitly as an example how it works on the RIKEN cluster, and I refer to the mpi4py users guide. That being said, we do want to set up an automated test for this, and we do want to understand what went wrong in our initial attempts to set up those tests. The two main problems we encountered were (a) if mpi4py is installed with pip, all mpi_pmap calls hang; (b) if it is installed with conda, test_map_pass_error hangs sometimes.; The difference between pip and conda comes from the fact that mpi4py requires an MPI implementation. If we use mpi4py's GH workflow to install it with pip, it installs MPICH, and with conda, it installs OpenMPI by default. I noticed that in both cases where mpi_pmap hangs, there *are* error messages, but they are captured by pytest and then never printed because the program hangs... Regarding problem (a), in short, it looks like an MPICH bug to me. I thus decided to use OpenMPI instead, and added `conda install ""openmpi<5"" mpi4py` to just one of our test runs (the python 3.12 one). Regarding problem (b), the problem was that we requested more processes than the default number of slots available. With OpenMPI, the default number of slots available is the number of physical cpu cores (which seems to be 2 on the machine running our tests, leaving only one slot for a worker process). In the `parallel` module, if num_cpus is not provided, it defaults to `available_cpu_count()` (which is 4 on this machine, since there are 4 logical cpus). We could try to find a better default value for num_cpus for mpi_pmap, but I feel like writing that well would require deeper MPI knowledge than I have. What I did instead is, I tried to make it clear in the documentation that the default value might be ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432:1183,message,messages,1183,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432,1,['message'],['messages']
Integrability," it is released.</p>; <p>:warning: Warning: there are unresolved problems compiling NumPy 1.21.0 with gcc-11.1 .</p>; <ul>; <li>Optimization level <code>-O3</code> results in many wrong warnings when running the tests.</li>; <li>On some hardware NumPy will hang in an infinite loop.</li>; </ul>; <h2>New functions</h2>; <h3>Add PCG64DXSM BitGenerator</h3>; <p>Uses of the PCG64 BitGenerator in a massively-parallel context have; been shown to have statistical weaknesses that were not apparent at the; first release in numpy 1.17. Most users will never observe this weakness; and are safe to continue to use PCG64. We have introduced a new; PCG64DXSM BitGenerator that will eventually become the new default; BitGenerator implementation used by <code>default_rng</code> in future releases.; PCG64DXSM solves the statistical weakness while preserving the; performance and the features of PCG64.</p>; <p>See <code>upgrading-pcg64</code> for more details.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/18906"">gh-18906</a>)</p>; <h2>Expired deprecations</h2>; <ul>; <li>The <code>shape</code> argument <code>numpy.unravel_index</code> cannot be; passed as <code>dims</code> keyword argument anymore. (Was deprecated in NumPy; 1.16.)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/numpy/numpy/commit/b235f9e701e14ed6f6f6dcba885f7986a833743f""><code>b235f9e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19283"">#19283</a> from charris/prepare-1.21.0-release</li>; <li><a href=""https://github.com/numpy/numpy/commit/34aebc2824cf8c2bdbe19040b82f98f18557c8ba""><code>34aebc2</code></a> MAINT: Update 1.21.0-notes.rst</li>; <li><a href=""https://github.com/numpy/numpy/commit/493b64bfe9c5396498325b87e5e80e1917555c41""><code>493b64b</code></a> MAINT: Update 1.21.0-changelog.rst</li>; <li><a href=""https://github.co",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:1887,depend,dependabot,1887,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['depend'],['dependabot']
Integrability," module is small and very focussed. 2. Exactly - it's more of an internal type. Currently `Qobj` converts the underlying data object to dense `ndarray` and prints it for its `repr` method - I don't have any plans to change that, so `Qobj` will still be full and user-facing. My `CSR` repr actually just tells you the same information that `scipy.sparse.csr_matrix` does, just in a slightly more Python-looking form. 3. Yes, in some form or another. Perhaps we could talk about the best way to do that in a future meeting?. 4. `PyDataMem_NEW` isn't actually a Python routine, it's a numpy one, but that's largely irrelevant. The Python equivalent is `cpython.mem.PyMem_Malloc` and family. The reason I don't use the latter in general is because sometimes `PyMem_Malloc` allocates into Python-reserved stack-space, and if we subsequently pass the pointer to numpy, it will try to free it and cause a segfault. The reason for using `malloc` and `free` here is mostly just because there was a comment in the code I copied it from saying that raw `malloc` and `free` were slightly faster for allocating heap space to be released within the same function, so I just did what they did. I can change it - it's not important. When allocating space that _may_ be passed to numpy, I always use `PyDataMem_NEW` (or friends). 5. That's a mistake - I meant to take out that ability in `matmul_csr` because it's just asking for trouble (the user won't know how much space to allocate, and we're basically just asking for a segfault). I did `matmul_csr` first, and I hadn't decided yet exactly what I was doing. 6. Yeah, I'm going to add additional `imul`, `ineg` and `idiv` routines as dispatched operations. 7. LAPACK/BLAS as far as we can. I've no pretense to being able to write faster code than hardware-specific optimised stuff for matrices. I haven't actually written most of the numerical code in this PR either - it's just ported from current `qutip`, with the variable names changed to be more descriptive.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1296#issuecomment-648270004:2508,rout,routines,2508,https://qutip.org,https://github.com/qutip/qutip/pull/1296#issuecomment-648270004,1,['rout'],['routines']
Integrability," not ideal as a Dense, but I don't think we should raise an error for other type... It doesn't actually restrict the RHS to CSR -- it only *constructs* the RHS as a CSR initially. The base solver will convert the RHS to the correct format for the integrator if needed. It might be possible one day to avoid constructing the RHS as a CSR but it might be tricky to make it not horribly slow, so I'd like to leave this as potential enhancement rather than work on it right now. > There is no `heomsolve` to go with `HEOMSolver`. I've added `heomsolve`. It has more parameters than `sesolve` or `mesolve`, which is not great, but I'm not sure how to avoid it. The bath and the max_depth are not really optional for the HEOM, and there aren't reasonably default values. > With other solvers, they accept `H` as a `Qobj` or `QobjEvo` only, list format is accepted by the __solve function. I changed HEOMSolver to only support `Qobj` or `QobjEvo`. I allowed `HSolverDL` to continue to support other objects since `HSolverDL` exists only for backwards compatibility. Perhaps we should remove it at some point, but the amount of code in it is also tiny. > `bofin_*.py` does not have a `__all__`, even if they are not supposed to be imported directly, it would be better if they had. I've added `__all__`.; ; > The test coverage does not include time-dependent Hamiltonian. Are those too slow to include in automated tests?. The tests don't include a truly time-dependent case because it's hard to solve one analytically. Previously I tested the time-dependent logic by supplying `[H]` as the system (i.e. fooling the code into using the time-dependent path) but that broke when I switched to using `QobjEvo.isconstant`. I fixed it by using `[H, lambda t: 1.0]` instead, which would be very hard to determine as constant. Thank for picking this up. Me might be able to do a truly time-dependent test by running with a memory-less bath and comparing with mesolve, but I'd also like to leave that as future work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869#issuecomment-1165701845:1518,depend,dependent,1518,https://qutip.org,https://github.com/qutip/qutip/pull/1869#issuecomment-1165701845,5,['depend'],['dependent']
Integrability," of `__qutip_qobj_interface__`, as in the conversion it might be necessary to copy anyway so the downstream implementor is responsible for taking care of the copy if requested. ```python; class QobjMetaclass(type):; def __call__(cls, inpt=None, dims=None, shape=None,; type=None, isherm=None, copy=True,; fast=False, superrep=None, isunitary=None):. if isinstance(inpt, Qobj):; pass; elif hasattr(inpt, ""__qutip_qobj_interface__""):; inpt_data = inpt.__qutip_qobj_interface__(copy=copy). inpt = inpt_data['matrix']; dims = inpt_data['dims']; copy = False. obj = cls.__new__(cls, inpt, dims, shape, type, isherm, copy, fast,; superrep, isunitary); obj.__init__(inpt, dims, shape, type, isherm, copy, fast,; superrep, isunitary); return obj. class Qobj(object, metaclass=QobjMetaclass):; ...; ```; I'm quite sure this implementation can be improved, however. On the NetKet side, the implementation is very simple. At the moment we only support operators from H->H.; ```python; class AbstractOperator:; ... ; def __qutip_qobj_interface__(self, dims, copy=True):; return {'matrix': stacked_rows_to_stacked_cols(self.hilbert, self.to_sparse()),; 'dims': [list(self.hilbert.shape), list(self.hilbert.shape)]}; ```. This already is quite nice and allows for quick and simple interoperability. Some comments/questions:; - Qutip uses stacked columns (column major) ordering for the tensor products, as opposed to NumPy `kron` ordering that is stacked rows, right? ; - To signal that an object is a super-operator (Liouvillian) is it sufficient to pass a correctly constructed `dims` or I should also provide `superrep`?; - Is there a reason you don't accept tuples as inputs to `basis(dims, x)` and other similar functions, but only lists? ; - I played around with auto-converting input hamiltonians and jump operators in `qutip.sesolve` and `mesolve` to `Qobj` if they are not Qobj but support the interface. That is even nicer because we would get to use all of qutip solvers out of the box with our objects.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-829966601:1668,interoperab,interoperability,1668,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-829966601,2,"['interface', 'interoperab']","['interface', 'interoperability']"
Integrability," packaging.</li>; </ul>; <p><strong>0.37.1 (2021-12-22)</strong></p>; <ul>; <li>Fixed <code>wheel pack</code> duplicating the <code>WHEEL</code> contents when the build number has changed (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/415"">#415</a>)</li>; <li>Fixed parsing of file names containing commas in <code>RECORD</code> (PR by Hood Chatham)</li>; </ul>; <p><strong>0.37.0 (2021-08-09)</strong></p>; <ul>; <li>Added official Python 3.10 support</li>; <li>Updated vendored <code>packaging</code> library to v20.9</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pypa/wheel/commit/6f1608dc1a88f00d2390b9044bd655753f39234c""><code>6f1608d</code></a> Created a new release</li>; <li><a href=""https://github.com/pypa/wheel/commit/cf8f5ef50e32b836c4ffb43af68107f78dca8d80""><code>cf8f5ef</code></a> Moved news item from PR <a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a> to its proper place</li>; <li><a href=""https://github.com/pypa/wheel/commit/9ec201660fa07ee0714edd17c979a7039ea852a4""><code>9ec2016</code></a> Removed install dependency on setuptools (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/483"">#483</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/747e1f6090547abcf65108c5a229cbe21a64a2ae""><code>747e1f6</code></a> Fixed PyPy SOABI parsing (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/76275484bc0de72d1f56601dbba3e816fc2f00c6""><code>7627548</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/480"">#480</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/7b9e8e1022b9c850756ef34bc1a4a88042988a86""><code>7b9e8e1</code></a> Test on Python 3.11 final</li>; <li><a href=""https://github.com/pypa/wheel/commit/a04dfef41be0ab1",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:3129,depend,dependabot,3129,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['depend'],['dependabot']
Integrability," passed `type` - nothing else is overwritten if passed explicitly - you could achieve all the same effects at approximately the same speed with correct application of the kwargs, such as; ```python; Qobj(data, dims=dims, copy=False, type='oper', isherm=...); ```; providing `data` is actually of a valid (`fast_csr_matrix`) format. Technically the `Qobj.data` attribute will be a new object that wraps the same numpy arrays as was passed, rather than the same `fast_csr_matrix`. In various forms, `expect` already does check the Hermicity, that's why `mc-dm` is careful to set it to avoid recalculating it. The expect functions in `qutip.expect` do this directly, and aren't aware of column-stacked density matrices - they'll just raise a TypeError. `mesolve` and `mcsolve` now bypass the `Qobj` stage and go direct to Cython - in 5.0 it might not be a terrible idea to route everything back through the `Qobj` form, since the performance issues there are solved (a column-stacked dense matrix can be directly wrapped by an f-ordered `Dense` type), and it's the natural central point of the code (and those parts are called from Python-space anyway, so no C concerns). Here though, the problem is actually that the expectation generator in `mesolve` correctly calculates the dtype of the output expectation array using both the state and the expectation operator, but then it does it incorrectly in the loop, and passes the hermicity down to Cython using only the expectation operator, which promptly throws out the complex part. So setting `fast='mc-dm'` in `Qobj` is a symptom of the same root cause as the problem here, rather than the cause itself. At the start of `mesolve` we don't assume that the state is Hermitian, but then inside the integration loop we do. We can still keep the speedup - if the output was created with a complex dtype, we can always safely say that we're passing in non-Hermitian operators, even if coincidentally at one timestep they happen to be anyway. See https://gith",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1460#issuecomment-796835048:1102,rout,route,1102,https://qutip.org,https://github.com/qutip/qutip/issues/1460#issuecomment-796835048,2,"['rout', 'wrap']","['route', 'wrapped']"
Integrability," pull request for a subpackage for non-Markovian solvers, called `nonmarkov`. This idea was mentioned in issue #384. The subpackage now includes two modules, with two quite different non-Markov solvers:. `transfertensormethod`: This module is an implementation of the ""Transfer Tensor Method"" (TTM) introduced by Cerrillo and Cao in [Phys. Rev. Lett 112, 110401 (2014)](http://journals.aps.org/prl/abstract/10.1103/PhysRevLett.112.110401) ([arXiv link](http://arxiv.org/abs/1307.7743)). TTM is a completely general purpose approach to non-Markovian problems. It takes as input a collection of precomputed dynamical maps for a list of intial ""learning times"", and then tries to extrapolate the non-Markovian dynamics to larger times. `memorycascade`: This module implements the method introduced in [Phys. Rev. Lett 115, 060402 (2015)](http://journals.aps.org/prl/abstract/10.1103/PhysRevLett.115.060402) ([arXiv link](http://arxiv.org/abs/1502.06959)) to integrate the dynamics of open quantum systems coupled to a coherent feedback loop with a time-delay. I decided to refer to this method as the ""memory cascade"" method in qutip. The method essentially maps the non-Markovian problem onto a cascaded chain of identical system, where each system in the chain represents a ""memory"" of a previous version of the system. There is a companion pull request to the qutip-notebooks repo with two new notebooks documenting the usage of these two modules, qutip/qutip-notebooks#21:. examples/example-transfer-tensor-method.ipynb; examples/example-coherent-delayed-feedback.ipynb. Together with code docstrings, these two notebooks should give a good idea of how the modules are to be used. As you will see in the notebooks, the TTM implementation has a user interface that closely mimicks the `mesolve` interface. The solver is called `ttmsolve` and has the following syntax (explained in more detail in the docstring and notebook):. ```; ttmsolve(dynmaps, rho0, times, e_ops=[], learningtimes=None, tensors=",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/405:974,integrat,integrate,974,https://qutip.org,https://github.com/qutip/qutip/pull/405,1,['integrat'],['integrate']
Integrability," python_version < ""3.10"", but you have numpy 1.17.3 which is incompatible.; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-70.0.0 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/vector.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.;",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:4980,depend,depends,4980,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability," qubits. ; - Next, it computes the longest distance of each node to the start and end nodes. The distance for each dependency arrow is defined by the execution time of the instruction (By default, it is 1 for all gates). This is used as a priority measure in the next step. The gate with a longer distance to the end node and a shorter distance to the start node has higher priority.; - In the last step, it uses a list-schedule algorithm with hardware constraint (e.g. gates using the same qubits) and priority and returns a list of cycles for gates.; - Since it's heuristics, sometimes it does not find the optimal. It offers an option that randomly shuffles the gates (if commuting) and repeats the scheduling a few times to get a better result. For scheduling quantum instructions, of which the runtime of different gates might differ, an additional step is required to compute the scheduled start time of each instruction.; It adds the additional dependency caused by hardware constraint to the graph and recomputes the distance of each node to the start and end node. This distance is then converted to the start time of each instruction. **Example**; ```python; >>> from qutip.qip.circuit import QubitCircuit; >>> from qutip.qip.scheduler import Scheduler; >>> circuit = QubitCircuit(7) ; >>> circuit.add_gate(""SNOT"", 3) # gate0; >>> circuit.add_gate(""CZ"", 5, 3) # gate1; >>> circuit.add_gate(""CZ"", 4, 3) # gate2; >>> circuit.add_gate(""CZ"", 2, 3) # gate3; >>> circuit.add_gate(""CZ"", 6, 5) # gate4; >>> circuit.add_gate(""CZ"", 2, 6) # gate5; >>> circuit.add_gate(""SWAP"", [0, 2]) # gate6; >>>; >>> scheduler = Scheduler(""ASAP""); >>> scheduler.schedule(circuit, gates_schedule=True) ; [0, 1, 3, 2, 2, 3, 4]; ```; The result list is the cycle indices for each gate. It means that the circuit can be executed in 5 gate cycles:; ```; gate0; gate1; gate3, gate4; gate2, gate5; gate6; ```; Notice that gate3 and gate4 commute with gate2, therefore, the order is changed to reduce the number of cycles. ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273:1986,depend,dependency,1986,https://qutip.org,https://github.com/qutip/qutip/pull/1273,1,['depend'],['dependency']
Integrability," qutip/core/data/base.pyx; [ 7/31] Cythonizing qutip/core/data/csr.pyx; [ 8/31] Cythonizing qutip/core/data/dense.pyx; [ 9/31] Cythonizing qutip/core/data/dia.pyx; [10/31] Cythonizing qutip/core/data/dispatch.pyx; [11/31] Cythonizing qutip/core/data/matmul.pyx; [12/31] Cythonizing qutip/core/data/mul.pyx; [13/31] Cythonizing qutip/core/data/norm.pyx; [14/31] Cythonizing qutip/core/data/reshape.pyx; [15/31] Cythonizing qutip/core/data/tidyup.pyx; [16/31] Cythonizing qutip/piqs/_piqs.pyx; [17/31] Cythonizing qutip/core/cy/_element.pyx; [18/31] Cythonizing qutip/core/cy/qobjevo.pyx; [19/31] Cythonizing qutip/core/data/adjoint.pyx; [20/31] Cythonizing qutip/core/data/expect.pyx; [21/31] Cythonizing qutip/core/data/inner.pyx; [22/31] Cythonizing qutip/core/data/kron.pyx; [23/31] Cythonizing qutip/core/data/permute.pyx; [24/31] Cythonizing qutip/core/data/pow.pyx; [25/31] Cythonizing qutip/core/data/project.pyx; [26/31] Cythonizing qutip/core/data/properties.pyx; [27/31] Cythonizing qutip/core/data/ptrace.pyx; [28/31] Cythonizing qutip/core/data/trace.pyx; [29/31] Cythonizing qutip/solver/integrator/explicit_rk.pyx; [30/31] Cythonizing qutip/solver/sode/_sode.pyx; [31/31] Cythonizing qutip/solver/sode/ssystem.pyx; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Expected Behaviour. qutip installs successfully. ### Your Environment. ```shell; QuTiP Version: 4.7.3 (currently installed, trying to upgrade); Numpy Version: 1.24.4; Scipy Version: 1.10.1; Cython Version: 3.0.10; Matplotlib Version: 3.7.4; Python Version: 3.8.10; Number of CPUs: 10; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); OS version: Ubuntu 20.04 LTS; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:10440,integrat,integrator,10440,https://qutip.org,https://github.com/qutip/qutip/issues/2440,3,"['depend', 'integrat']","['dependencies', 'integrator']"
Integrability, qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/li,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:6777,depend,depends,6777,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability," release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/0846bfae48513f2f51ca8547ed3b8954fa501fda""><code>0846bfa</code></a> Add to release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/799a6a01052cea3f417a571d7c64cd14acc18c64""><code>799a6a0</code></a> Fix linting</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/00b25fd3ac3648bc28eff5d4c4d816e605e3f05f""><code>00b25fd</code></a> Hide UserWarning in logs</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/05b175ef88c22f5c416bc9b8d5b897dea1abbf2c""><code>05b175e</code></a> Tighter test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/13f2c5ae14901c89c38f898496102afd9daeaf6d""><code>13f2c5a</code></a> Prevent DOS with large SAMPLESPERPIXEL in Tiff IFD</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.1...9.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.1&new-version=9.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` wil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:15164,Depend,Dependabot,15164,https://qutip.org,https://github.com/qutip/qutip/pull/2023,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability," right now if that internally we'd keep column-stacking/unstacking the state, but in the 5.x branch it'll stop being represented internally by a sparse matrix, and instead it'll be a Fortran-ordered dense matrix, for which the stack/unstack is a free operation. In the form I've written it, this loop is thread-safe already. As it stands in the 4.x series, `mesolve` is re-entrant (I'm fairly sure), but note that it does generally mutate its arguments, especially if you pass a `QobjEvo` Liouvillian as the first argument. As long as you make sure you give each thread a distinct copy of the input Liouvillian, `mesolve` itself doesn't access global state as far as I recall. QuTiP 5 is (probably) going to formalise that (^) sort of low-level calling convention of `mesolve`, but it should work already. The new one look a bit different because instead of doing the setup very manually, there'll be a ""low-level"" function to prepare a master equation problem (and a Schrodinger equation one, etc), and then there'll be a `step` method instead of calling the ""high-level"" interface function `mesolve`, but functionally it'll do largely the same, just with a lot less data copying than the current form has to do. In the new system, it's likely that the function `mesolve` itself will keep the exact same interface it has now, just internally most of its processing will be split into modular components, each of which will be accessible (with different names) to the user to compose themselves, if they want low-level access. We're unlikely to add `yield` to `mesolve` directly because that's a very breaking change to one of QuTiP's core functions (we can't return from a generator, or at least not ergonomically), but we are splitting up the `mesolve` monolith into a much more modular architecture, and making it more user-accessible. The other advantage of this is that the integrator component will just be one element of a composable system, so we'll not be tied to scipy integrators any more.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859873615:3823,interface,interface,3823,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859873615,4,"['integrat', 'interface']","['integrator', 'integrators', 'interface']"
Integrability," says that its argument should be; > An array, any object exposing the array interface, an object whose `__array__` method returns an array, or any (nested) sequence. and `__array_wrap__` is like the reverse - it's for coercing numpy arrays back into this class. If we were to keep `__array__` in `Qobj`, we should also implement `__array_wrap__` for coercion back (something that isn't currently implemented). At the time and up to inclusively 1.19, the presence of `__array__` caused otherwise scalar types passed alone to `np.array` to return the output of `input.__array__(*args, **kwargs)`, instead of becoming a 0D numpy array (like `np.array(1)` does). Taken purely alone, that could make sense as something we implement. However, this also implies that `Qobj` should fulfil the numpy ufunc interface; `Qobj` would be a container for data such that operations like `np.sin` is the elementwise sin, or (most notably) `np.multiply` is the *elementwise* multiplication. Our `Qobj` _does not_ fulfil the ufunc interface:; 1. elementwise operations don't make sense on quantum objects, which are arrays only as an implementation detail - the `Qobj` class is meant to represent an abstract linear algebra object, not specifically a matrix.; 2. we don't honour the `shape` guarantees of numpy as we test compatibility based on `dims`, which are not 1D (superoperators) so cannot follow numpy's broadcasting rules; 3. we treat multiplication as matrix multiplication, violating how `np.multiply` should behave. My main concern is point 1: I don't think that `Qobj` provides a similar object to an `ndarray` at all. Right now we _do_ use matrices underneath, but proposed additions to QuTiP such as symbolic `Qobj` and adaptive Hilbert spaces are compatible with the idea of ""abstract linear algebra objects"", but do not necessarily have a backing array. Point 2 is mostly an extension of that: I'm not sure there is a sensible way for numpy's broadcasting rules to be applied to quantum objects as the",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902:4134,interface,interface,4134,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902,1,['interface'],['interface']
Integrability," setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.; launchpadlib 1.10.13 requires testresources, which is not installed.; awkward-cpp 26 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; awkward 2.5.0 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; matplotlib 3.7.4 requires numpy<2,>=1.20, but you have numpy 1.17.3 which is incompatible.; pandas 2.0.3 requires numpy>=1.20.3; python_version < ""3.10"", but you have numpy 1.17.3 which is incompatible.; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-70.0.0 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/vector.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.px",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:4359,depend,depends,4359,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability," since with numpy now *everything* is dense (including the Hamiltonian), whereas the best thing to do numerically would be to do sparse-matrix-dense-vector operations (which is what we do in Fortran, incidentally). > In the form I've written it, this loop is thread-safe already. As it stands in the 4.x series, `mesolve` is re-entrant (I'm fairly sure), but note that it does generally mutate its arguments, especially if you pass a `QobjEvo` Liouvillian as the first argument. As long as you make sure you give each thread a distinct copy of the input Liouvillian, `mesolve` itself doesn't access global state as far as I recall. Just to be clear: there's two interconnected issues here: One is just being ""reentrant"" in the sense that I can safely have multiple `mesolve`'s run in parallel. This doesn't seem to be a problem for `mesolve` as a whole (propagating over the entire time grid). The other issue, at a lower level is whether I can keep the internal state of the integrator (`scipy.integrate.ode` or whatever else `mesolve` might be using) when propagating a single time step (and whether I can have multiple integrators to run in parallel that each safely keep track of their own state). That comes down to the integrator itself being ""reentrant"", of course. Certainly, calling `mesolve` in a loop (`In [19]`) doesn't keep the internal state of the integrator, hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent ch",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:5991,integrat,integrate,5991,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrate']
Integrability," surprised how much better `DensityMatrixODEPropagator` performs compared to looping over `mesolve` (`In [29]` vs `In [21]`): Since the `DensityMatrixODEPropagator` also re-initializes `scipy.integrate.ode` in every time steps, it would seem like the only difference between the two is the overhead of `mesolve` deciding that it has to handle the specific case of density matrix propagation. That might be something to keep an eye on in future QuTiP development: Ideally, calling `mesolve` would have negligible overhead compared to manually doing whatever `mesolve` does internally for a particular case. > We're unlikely to add `yield` to `mesolve` directly because that's a very breaking change to one of QuTiP's core functions (we can't return from a generator, or at least not ergonomically), but we are splitting up the `mesolve` monolith into a much more modular architecture, and making it more user-accessible. The other advantage of this is that the integrator component will just be one element of a composable system, so we'll not be tied to scipy integrators any more. I would absolutely not expect you to modifying how `mesolve` works directly. In fact, I would strongly recommend leaving the `mesolve` interface unchanged. The internal refactoring is all I'm after here. @jakelishman in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462:. > I also note that I'm not replying to the thread I thought I was - I thought I was in `krotov`! For my response to the discussion points:. Yeah, sorry the discussion got a little confused between what I was suggesting in https://github.com/qucontrol/krotov/issues/93 for myself to try out (adding a `yield` to `mesolve` as a dirty hack) and the discussion here about how to address the underlying use case properly in QuTiP itself. So just to be clear: Do *not* add a `yield` to the existing `mesolve` function in QuTiP! I would strongly recommend keeping the existing interface for `mesolve` and just refactor what is going on i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:9901,integrat,integrator,9901,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,2,['integrat'],"['integrator', 'integrators']"
Integrability," that are installed. This behaviour is the source of the following dependency conflicts.; launchpadlib 1.10.13 requires testresources, which is not installed.; awkward-cpp 26 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; awkward 2.5.0 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; matplotlib 3.7.4 requires numpy<2,>=1.20, but you have numpy 1.17.3 which is incompatible.; pandas 2.0.3 requires numpy>=1.20.3; python_version < ""3.10"", but you have numpy 1.17.3 which is incompatible.; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-70.0.0 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/vector.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qut",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:4515,depend,depends,4515,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability," the implicit promotion of scalars to operators in addition, taking over 500µs to execute `1 + qutip.qeye(2)`). A lot of this can be completely avoided, however, simply by instantiating the objects using _all_ known information, not relying on inference. In particular, various operations _know_ what the type of their outcome is by a simple lookup table: addition is only defined between operations of the same type and maintains that type, whereas the adjoint has the mapping; ```python; _ADJOINT_TYPE_LOOKUP = {; 'ket': 'bra',; 'bra': 'ket',; 'oper': 'oper',; 'super': 'super',; }; ```; If this information is supplied to `Qobj.__init__` (and the fact that it need not copy data we've created specially for it...), we can hugely slash the overhead of mathematical operations while maintaining their safety. The issues start to come once we look at matrix multiplication and tensor-product spaces. The tensor allows us to construct objects which are a mixture of several different types, and matrix multiplication wants to be able to contract scalar product spaces so that `bra * ket` gives a scalar. ## Problems with dimension handling. The current dimension handling in QuTiP is simple and intuitive until tensor-product structures are considered. At this point, it starts to become more complicated. In particular, the `type` of a `Qobj` is tied to its dimensions, but it becomes difficult to define this once there is tensor product structure. Some of this is because QuTiP allows us to construct objects which do not have a really rigourous mathematical backing to them, such as `I . |g>` - the tensor product of an operator and a ket. QuTiP assigns this a type `'oper'`, though the way it reaches this decision is more like:; 1. is it a ket? [no]; 2. is it a bra? [no]; 3. is it a super-operator? [no]; 4. if here, it must be an operator. Such objects do have a use. Let's say we have a system with two computational qubits and one ancillary qubit, we've performed a calculation on it and ende",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1320:3629,contract,contract,3629,https://qutip.org,https://github.com/qutip/qutip/issues/1320,1,['contract'],['contract']
Integrability," the warnings plugin (<a href=""https://redirect.github.com/psf/requests/issues/6416"">#6416</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/a7da1ab3498b10ec3a3582244c94b2845f8a8e71""><code>a7da1ab</code></a> try on ubuntu 22.04 (<a href=""https://redirect.github.com/psf/requests/issues/6418"">#6418</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/psf/requests/compare/v2.28.2...v2.31.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.28.2&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:7809,depend,dependabot-automerge-start,7809,https://qutip.org,https://github.com/qutip/qutip/pull/2164,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability," there are; 1. objects which compare equal with `__eq__` have the same hash; 2. the hash of an object cannot change after instantiation (no mutable types). Unfortunately we fail on both points. `Qobj.__eq__` is a rounding match, because it gives a total `True` or `False` based on a floating point tolerance, not on exact equality. I'm not aware of any hash function which can handle this. Second, the `data` attribute of a `Qobj` is mutable in-place, and so hashing based on the data in the object is not valid. This is the same reason that `list` and `np.ndarray` are also not hashable types. If your cache is just for memoisation over a small number of `Qobj` where you know that floating-point tolerance will never be an issue, you may be able to get away with rolling your own cache decorator which uses linear lookup rather than constant-time. I mean something like; ```python; In [1]: import functools; ...: import qutip; ...:; ...: def linear_cache(f):; ...: cache = []; ...: @functools.wraps(f); ...: def out(*args):; ...: for cached_args, cached_value in cache:; ...: if args == cached_args:; ...: print(""Getting from cache""); ...: return cached_value; ...: print(""Computing new value""); ...: value = f(*args); ...: cache.append((args, value)); ...: return value; ...: return out; ...:; ...: @linear_cache; ...: def negate(x):; ...: return -x; ...:; ...: sx = qutip.sigmax(); ...: sy = qutip.sigmay(); ...: negate(sx); ...: negate(sx); ...: negate(sy); ...: negate(sx); ...: negate(sy); Computing new value; Getting from cache; Computing new value; Getting from cache; Getting from cache; ```; This will lead to degraded performance if you need to do it for a large number of possible inputs, but if you have a relatively small number of inputs and your cached function is computationally expensive, this may be a way to achieve what you want. Also note that this is not infallible: the floating-point tolerance used in `__eq__` means that `Qobj` does not satisfy transitive equality (i.e. `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1321#issuecomment-658078277:1239,wrap,wraps,1239,https://qutip.org,https://github.com/qutip/qutip/issues/1321#issuecomment-658078277,1,['wrap'],['wraps']
Integrability," this solver? It seems to be able to produce states which trace is not one, which seems strange. Thank you for your detailed comments! We are here at RIKEN working together with the authors of the paper linked above to try and add this functionality to qutip. So far, this PR is just a starting point for the collaboration, but proper documentation and examples are high on our priority list. To add some very quick explanation here: the master equation describing a general completely positive (but not necessarily CP-divisible) map can involve rate functions that become negative at some times. The usual Monte-Carlo algorithm cannot be applied in this case, but Donvil et al. describe [here](https://www.nature.com/articles/s41467-022-31533-8) and [here](https://arxiv.org/abs/2209.08958) a workaround where states are weighted with an ""influence martingale"". Including this weight, the involved states are indeed not normalized; however, the state that results from an average over sufficiently many trajectories is normalized. (Checking *how well* the average is normalized could maybe be used as an indicator of how good the convergence is, as noted at the top.). > I am not too sure about adding the time parameter to `_restore_state`. In floquet, the state produced need a basis change depending on time, but it was put in the `Result` so the state before and after the transformation can be stored. Maybe something like this would be useful, it would allow the `mu` to be saved in results. Putting this calculation into the `Result` instead does sound reasonable to me. I am unsure how to achieve that in practice though, since the result class used for a single trajectory is hard-coded in mcsolve:; ```; result = Result(e_ops, {**self.options, ""normalize_output"": False}); ```; Note that in principle, we could also get the time from the integrator in _restore_state without adding it as a function parameter. Tagging @hodgestar who suggested adding the time parameter to `_restore_state`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2070#issuecomment-1414634007:1342,depend,depending,1342,https://qutip.org,https://github.com/qutip/qutip/pull/2070#issuecomment-1414634007,2,"['depend', 'integrat']","['depending', 'integrator']"
Integrability," time step (and whether I can have multiple integrators to run in parallel that each safely keep track of their own state). That comes down to the integrator itself being ""reentrant"", of course. Certainly, calling `mesolve` in a loop (`In [19]`) doesn't keep the internal state of the integrator, hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent changes in QuTiP now use a re-entrant internal integrator, i.e. not `scipy.integrate.ode`. At the time I implemented the [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) by looking at what `mesolve` was doing at a low level for the specific case of density matrices, `scipy.integrate.ode` was definitely being used, and that couldn't handle propagating in parallel (and by ""parallel"" I include alternating propagation steps from two different propagations). I'm also not sure what using `QobjEvo` does: In the benchmarking, there didn't seem to be any difference whether I wrap my nested lists into `QobjEvo` or not. Is there something specific that `QobjEvo` should enable that I can't do with nested lists?. > QuTiP 5 is (probably) going to formalise that (^) sort of low-level calling convention of `mesolve`, but it should work already. The new one look a bit different because instead of doing the setup very manually, there'll be a ""low-level"" function to prepare a master equat",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:7069,integrat,integrate,7069,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrate']
Integrability," to; authenticate with the proxy.</p>; <p>In cases where Requests receives a redirect response, it previously reattached; the <code>Proxy-Authorization</code> header incorrectly, resulting in the value being; sent through the tunneled connection to the destination server. Users who rely on; defining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade; to Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy; credentials once the change has been fully deployed.</p>; <p>Users who do not use a proxy or do not supply their proxy credentials through; the user information portion of their proxy URL are not subject to this; vulnerability.</p>; <p>Full details can be read in our <a href=""https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q"">Github Security Advisory</a>; and <a href=""https://nvd.nist.gov/vuln/detail/CVE-2023-32681"">CVE-2023-32681</a>.</p>; </li>; </ul>; <h2>2.30.0 (2023-05-03)</h2>; <p><strong>Dependencies</strong></p>; <ul>; <li>; <p>⚠️ Added support for urllib3 2.0. ⚠️</p>; <p>This may contain minor breaking changes so we advise careful testing and; reviewing <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>; prior to upgrading.</p>; <p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>; </li>; </ul>; <h2>2.29.0 (2023-04-26)</h2>; <p><strong>Improvements</strong></p>; <ul>; <li>Requests now defers chunked requests to the urllib3 implementation to improve; standardization. (<a href=""https://redirect.github.com/psf/requests/issues/6226"">#6226</a>)</li>; <li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=""https://redirect.github.com/psf/requests/issues/6356"">#6356</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/psf/requests/commit/147c8511ddbfa5e8f71bbf5c18ede0c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:4296,Depend,Dependencies,4296,https://qutip.org,https://github.com/qutip/qutip/pull/2164,1,['Depend'],['Dependencies']
Integrability," trying to work towards a PR. Indeed. I was just trying to play around with this. . > If we're going to do this (and we haven't decided if we will yet), we're going to need to get a lot of wide-ranging input from many different libraries. I completely agree with your approach. I’m simply trying to push for this to be something that will come out in a reasonable timeframe and not be something forgotten. > We've got to be concerned with backwards and forwards compatibility; what if a user wants to install and use QuTiP and a different library in the same environment without using them together, but can't even have them coexist because of version incompatibilities in optional conversion features?. I do understand your point, and I see how you want to be backward and forward compatible, however I don’t think that my proposal would break different tools in the same environment. What I propose would simply prevent `qutip.Qobj(otherlibraryobject)` from working (with an explicative error message) if `otherlibrary` does not support the same qobj interface version. Everything else would work the same. You can still import and use the two libraries independently without issues. It’s indeed possible to design around this and supporting at the same time different versions of the interface, however, and there’s value in doing so. > To me, this is absolutely one of the mistakes that Numpy made in their implementation, and we shouldn't be copying it. I don't know enough of the history behind numpy current api, but I see your point. however I'd like to reiterate that this is not what I am proposing. ; I think there is considerable difference between supporting arbitrary operations `new_obj = Qobj + netket_operator*5` (though if you are going to export dispatch hooks in `5.0`, this would be possible in a consistent way, I think) and `qutip.mesolve(netket_operator, ...)`. ; In the first, I do agree with your point that the nature python's `__add__/__radd__` is not commutative, leading",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742:1969,message,message,1969,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742,2,"['interface', 'message']","['interface', 'message']"
Integrability, we should remove it*; - [x] Decide what to do about the `renorm` argument to the old `HSolverDL`. Do we add it to the new BoFiN one?; - [x] Decide what to do about the `stats` argument. I'm planning to just add a note telling people to use `pyinstrument` if they need to profile their code.; - [x] Make HSolverDL use a bath instead of having the Matsubara calculation burried inside the solver.; - [x] Add Pade coefficient calculator somewhere? Maybe also as a bath?; - [x] Clean up the interfaces of `BosonicHEOMSolver` and `FermionicHEOMSolver`.; - [x] Whatever else we discover along the way.; - [x] Keep just the gather_op mode of RHS construction.; - [x] Split bath classes out into their own module.; - [x] Add underdamped spectral density bath. **Follow up PRs (i.e. before 4.7)**; - [x] Add Lorentzian fermionic bath (#1726); - [x] Convert the extension BoFiN documentation and into an extensive QuTiP guide (this PR already adds the docs but under qutip/nonmarkov/bofin/docs -- this allows the preservation of the original BoFiN commits) (#1724); - [x] Convert the BoFiN examples into QuTiP example notebooks (https://github.com/qutip/qutip-notebooks/pull/132/).; - [ ] Add MKL support to the dynamics solver. **Possible future work (i.e. look like great ideas but might never happen)**; - [ ] Use hermiticity relation from Schinabeck's PhD to half the number of ADOs stored in the fermionic bath.; - [ ] Possibly add support for time-dependent bath properties (e.g. altering the chemical potential of a Fermionic bath).; - [ ] Option to include time-dependent exponent coupling operators (Q); - [ ] Option to include time-dependent exponent coefficients (c_k's and v_k's); - [ ] Possibly add a means for automatically generating bath exponents for a given spectral density function. **Related issues or PRs**; None currently. **Changelog**; Imported BoFiN (https://github.com/tehruhn/bofin/) into QuTiP and replaced the HEOM solver with a compatibility wrapper around BoFiN bosonic solver.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1601:2520,depend,dependent,2520,https://qutip.org,https://github.com/qutip/qutip/pull/1601,4,"['depend', 'wrap']","['dependent', 'wrapper']"
Integrability," x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x10312376F: ???; ==54530== by 0x10550F0BF: ???; ==54530== by 0x3FEFFFFFFFFFFFFF: ???; ```; the exact same. ## Further steps. I'm now reasonably convinced that this isn't directly an issue with QuTiP. I suspect it isn't an issue with `scipy` either, but I'm not sure - it looks like a slight overwrite in MKL on macOS, though it's also possible that `scipy` passes some invalid pointers when dropping down to BLAS/LAPACK. I get the impression that the next steps involve dropping down a level of abstraction, down to Cython to directly call scipy's wrappers, or even fully down to C and link directly against MKL. I _may_ have a look in the future, but I've had enough of it today for sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:8331,wrap,wrappers,8331,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['wrap'],['wrappers']
Integrability,"![ce 0](https://user-images.githubusercontent.com/33592789/46414779-505ced80-c73d-11e8-9b03-41cfa1a75bb1.png). I m obtaining this using code:; from numpy import *; from scipy.special import mathieu_cem; import matplotlib.pyplot as plt; from matplotlib import cm; from scipy.integrate import quad. ## Parameters ##; i = 1.0j; x = linspace(-pi,pi,200); p = linspace(-5,5,200); x, p = meshgrid(x, p); y = linspace(-pi, pi, 200). psi = (mathieu_cem(0,-1,(x-y/2)*180/pi)[0]) ; psic = transpose(conj(mathieu_cem(0,-1,(x+y/2)*180/pi)[0])). ## Defining the integral ##; def integrand(y, x, p):; return psic * psi * exp(2 * i * p * y). ## Generate Wigner function ##; def W(x, p):; return quad(integrand, -pi, pi, args=(x, p))[0]. W = vectorize(W); ## Plotting the Distribution ##; fig, axes = plt.subplots(); cont = axes.contourf(x, p, W, 1000, cmap=cm.jet); axes.set_xlabel(r'x'); axes.set_ylabel(r'p', labelpad=-10); cb = fig.colorbar(cont, ax=axes) 			# add colour bar; plt.show(). Any better arrangement?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/792:274,integrat,integrate,274,https://qutip.org,https://github.com/qutip/qutip/issues/792,1,['integrat'],['integrate']
Integrability,""">#5920</a> and <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a></li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/032d2dc3658f94718109068ac70799313e440754""><code>032d2dc</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd""><code>baae9ec</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><code>1059eb5</code></a> If appended EOI did not work, do not keep trying</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.3.2&new-version=9.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:15955,depend,dependency-name,15955,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependency-name']
Integrability,""">#6674</a> [<a href=""https://github.com/npjg""><code>@​npjg</code></a>]</li>; <li>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>pylint warnings <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6659"">#6659</a> [<a href=""https://github.com/marksmayo""><code>@​marksmayo</code></a>]</li>; <li>Added GPS TIFF tag info <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6661"">#6661</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6647"">#6647</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed seeking to an L frame in a GIF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6576"">#6576</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Consider all frames when selecting mode for PNG save_all <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6610"">#6610</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Don't reassign crc on ChunkStream close <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6627"">#6627</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Raise a warning if NumPy failed to raise an error during conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6594"">#6594</a> [<a href=""https://github.com/radarhere""><code>@​radarhere",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:4787,depend,dependabot,4787,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"""><code>@​radarhere</code></a>]</li>; <li>Only prevent repeated polygon pixels when drawing with transparency <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5835"">#5835</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix pushes_fd method signature <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5833"">#5833</a> [<a href=""https://github.com/hoodmane""><code>@​hoodmane</code></a>]</li>; <li>Add support for pickling TrueType fonts <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5826"">#5826</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Only prefer command line tools SDK on macOS over default MacOSX SDK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5828"">#5828</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix compilation on 64-bit Termux <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5793"">#5793</a> [<a href=""https://github.com/landfillbaby""><code>@​landfillbaby</code></a>]</li>; <li>Replace 'setup.py sdist' with '-m build --sdist' <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5785"">#5785</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use declarative package configuration <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5784"">#5784</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use title for display in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5788"">#5788</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix for PyQt6 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5775"">#5775</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (tr",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:9140,depend,dependabot,9140,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"""><code>a04dfef</code></a> Updated the pypi-publish action</li>; <li><a href=""https://github.com/pypa/wheel/commit/94bb62cb182023ac6586c5510ae9031ea56bd682""><code>94bb62c</code></a> Fixed docs not building due to code style changes</li>; <li><a href=""https://github.com/pypa/wheel/commit/d635664abe560d48723cfc3b73c52ad8c906760a""><code>d635664</code></a> Updated the codecov action to the latest version</li>; <li><a href=""https://github.com/pypa/wheel/commit/fcb94cd51f7dfd40d88dff37415750d9e3638d3b""><code>fcb94cd</code></a> Updated <strong>version</strong> to match the release</li>; <li>Additional commits viewable in <a href=""https://github.com/pypa/wheel/compare/0.37.0...0.38.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wheel&package-manager=pip&previous-version=0.37.0&new-version=0.38.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:5159,depend,dependabot-security-updates,5159,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['depend'],['dependabot-security-updates']
Integrability,"""><code>e422386</code></a> Add release notes for Pillow 8.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/08dcbb873217874eee0830fc5aaa1f231c5af4fa""><code>08dcbb8</code></a> Pillow 8.3.2 supports Python 3.10 [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.2.0...8.3.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.2.0&new-version=8.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:9420,Depend,Dependabot,9420,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['Depend'],['Dependabot']
Integrability,""">pillow's releases</a>.</em></p>; <blockquote>; <h2>9.0.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Restrict builtins for ImageMath.eval() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Ensure JpegImagePlugin stops at the end of a truncated file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed ImagePath.Path array handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed redundant part of condition <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5915"">#5915</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Explicitly enable strip chopping for large uncompressed TIFFs <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5517"">#5517</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Use the Windows method to get TCL functions on Cygwin <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5807"">#5807</a> [<a href=""https://github.com/DWesl""><code>@​DWesl</code></a>]</li>; <li>Changed error type to allow for incremental WebP parsing <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5404"">#5404</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:1195,depend,dependabot,1195,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>9.3.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Initialize libtiff buffer when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit SAMPLESPERPIXEL to avoid runtime DOS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a> [<a href=""https://github.com/wiredfool""><code>@​wiredfool</code></a>]</li>; <li>Inline fname2char to fix memory leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>GHA: replace deprecated set-output command with GITHUB_OUTPUT file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6697"">#6697</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Upload fribidi.dll to GitHub Actions <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6532"">#6532</a> [<a href=""https://github.com/nulano""><code>@​nulano</co",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:1146,depend,dependabot,1146,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"""no collapse operator, using sesolve"" message",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1047:38,message,message,38,https://qutip.org,https://github.com/qutip/qutip/issues/1047,1,['message'],['message']
Integrability,"## Changelog; The changelog file is present in `qutip/qutip-doc`. This means that for each new release, the maintainers need to go through the merged PRs and update the file accordingly. . I propose introducing a copy of the changelog file, which would simplify maintenance: each contributor could update their own contribution without opening a PR in the separate repository, which often does not happen. A message of a basic template with checklist could be prompted in the PR for itself. . ## PR template; To prompt these actions, just like for the changelog, [a template](https://help.github.com/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors) with suggested checklist could be made in the PRs. . ## Repositories refactoring ; Actually, this is all part of a wider problem for which the `qutip-doc` does not get well updated in general. In Qutip 4.5.0 I added a lot of missing elements to `functions.rst` and `classes.rst` in the api-doc. Moreover, the User guide is seldom updated. Maybe, moving the `qutip-doc` repository in the main `qutip/qutip` repository could help in this regard.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1172:408,message,message,408,https://qutip.org,https://github.com/qutip/qutip/issues/1172,1,['message'],['message']
Integrability,"### Bug Description. Following the advice from [this SE post](https://stackoverflow.com/questions/70240506/why-is-numpy-native-on-m1-max-greatly-slower-than-on-old-intel-i5), I have been trying to install QuTiP in a fresh environment along with the BLAS `accelerate` libraries specific to the Apple M1/M2 chips, in order to get a speedup by using a BLAS library designed for my laptop. In a blank environment, I first ran `conda install numpy ""libblas=*=*accelerate""`, followed by `conda install qutip` and got the following error message: . ```; The following specifications were found to be incompatible with your system:. - feature:/osx-arm64::__osx==13.4=0; - feature:|@/osx-arm64::__osx==13.4=0; - qutip -> numpy[version='>=1.22.4,<2.0a0'] -> __osx[version='>=10.9']. Your installed version is: 13.4; ```; This is odd given that I am using `numpy 1.26.2` and `Mac OS 13.4`, which appear to satisfy the requirements. Instead, I tried using `pip install qutip` which circumvented this error, but results in incorrect behavior as described below. ### Code to Reproduce the Bug. ```shell; import numpy as np; import qutip as qt. X = qt.sigmax(); print(np.linalg.eigh(X)[1]); ```. ### Code Output. ```shell; `; [[-0.70710678-0.70710678j 0.70710678+1.20710678j]; [ 0.70710678+0.70710678j 0.70710678+0.5j ]]; `; ```. ### Expected Behaviour. `; [[-0.70710678+0.j 0.70710678+0.j]; [ 0.70710678+0.j 0.70710678+0.j]]; `. ### Your Environment. ```shell; QuTiP Version: 4.7.3; Numpy Version: 1.26.2; Scipy Version: 1.11.4; Cython Version: None; Matplotlib Version: 3.8.2; Python Version: 3.12.0; Number of CPUs: 10; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. I am just comparing the behavior between two environments. The first one correctly diagonalizes the Pauli X operator with a Hadamard, and the second does not. The ""correct"" environment uses a standard numpy 1.26.2 install, with qutip installed with conda. The ""incor",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2273:531,message,message,531,https://qutip.org,https://github.com/qutip/qutip/issues/2273,1,['message'],['message']
Integrability,"### Bug Description. Hi,; I've been trying to find the propagator for a time-dependent hamiltonian (with time-dependent collapse operators as well), and have been getting an error saying that the t_list lengths do not match in Qutip 5.0. I also tried to run it without using the collapse operators, but I get the same issue. The same code runs in Qutip 4.7. My goal is to actually find two-time correlation functions of a time-dependent operator (following this paper:https://journals.aps.org/pra/abstract/10.1103/PhysRevA.102.023717). What I did do (and what has worked) is decompose the operator into time-independent parts and then use Qutip's correlation_2op_2t. This takes a really long time, since I need to do this for 8 different pairs of operators. I thought of instead finding the propagator and manually finding the correlation using it instead. . From the code below, you can see that mesolve works, but the propagator doesn't. . ### Code to Reproduce the Bug. ```shell; gamma_1d_1 = Gamma; gamma_1d_2 = Gamma; ## Input pulse; u = input_pulse; mod_u_2 = np.abs(u)**2; integral_u_2 = np.cumsum(mod_u_2) * t[1]; g_u = np.conjugate(u)/np.sqrt(1 - integral_u_2). ## Hamiltonian; emitter_dims = 3; mode_dims = 7; a = 1.1; psi_coherent = coherent(mode_dims, a); ## Mode dims is defined above; w0_1 = 2 * np.pi * 0; alpha_1 = 2 * np.pi * 0.3; w0_2 = 2 * np.pi * 0; alpha_2 = 2 * np.pi * 0.3; gamma_intrinsic = 2 * np.pi * 0.0. sig_1 = tensor(destroy(emitter_dims), qeye(emitter_dims), qeye(mode_dims)); sig_2 = tensor(qeye(emitter_dims), destroy(emitter_dims), qeye(mode_dims)); a_u = tensor(qeye(emitter_dims), qeye(emitter_dims), destroy(mode_dims)). H0 = (w0_1 * sig_1.dag() * sig_1 - alpha_1/2 * sig_1.dag() * sig_1.dag() * sig_1 * sig_1) + \; (w0_2 * sig_2.dag() * sig_2 - alpha_2/2 * sig_2.dag() * sig_2.dag() * sig_2 * sig_2) + \; 0.5j * np.sqrt(gamma_1d_1 * gamma_1d_2) * (sig_1.dag() * sig_2 - sig_2.dag() * sig_1). H_int1 = [0.5j * (a_u.dag() * (np.sqrt(gamma_1d_1) * sig_1 + np.sqrt(ga",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2532:77,depend,dependent,77,https://qutip.org,https://github.com/qutip/qutip/issues/2532,3,['depend'],['dependent']
Integrability,"### Bug Description. I have been running into an issue similar to #806, #1605, and #1623 wherein usage of `mesolve` produces the attached error. It seems as if the majority of the users that reported that error had some suspect input parameters leading to slow convergence in integration; to confirm that this wasn't the case I tried running the [qubit dynamics QuTiP tutorial](https://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/examples/qubit-dynamics.ipynb), which _still_ produced the same error. My system specs are as follows: `21.2.0 Darwin Kernel Version 21.2.0: Sun Nov 28 20:29:10 PST 2021; root:xnu-8019.61.5~1/RELEASE_ARM64_T8101 arm64`. My package installations can be found here: [requirements.txt](https://github.com/qutip/qutip/files/8725390/requirements.txt). These are also listed in the below categories. Any help would be appreciated. ### Code to Reproduce the Bug. ```shell; import matplotlib.pyplot as plt; import numpy as np; from qutip import *; def qubit_integrate(epsilon, delta, g1, g2, solver):. H = epsilon / 2.0 * sigmaz() + delta / 2.0 * sigmax(); ; # collapse operators; c_ops = []. if g1 > 0.0:; c_ops.append(np.sqrt(g1) * sigmam()). if g2 > 0.0:; c_ops.append(np.sqrt(g2) * sigmaz()). e_ops = [sigmax(), sigmay(), sigmaz()]; ; if solver == ""me"":; output = mesolve(H, psi0, tlist, c_ops, e_ops) ; elif solver == ""es"":; output = essolve(H, psi0, tlist, c_ops, e_ops) ; elif solver == ""mc"":; ntraj = 250; output = mcsolve(H, psi0, tlist, ntraj, c_ops, [sigmax(), sigmay(), sigmaz()]) ; else:; raise ValueError(""unknown solver""); ; return output.expect[0], output.expect[1], output.expect[2]; epsilon = 0.0 * 2 * np.pi # cavity frequency; delta = 1.0 * 2 * np.pi # atom frequency; g2 = 0.15; g1 = 0.0. # intial state; psi0 = basis(2,0). tlist = np.linspace(0,5,200). # analytics; sx_analytic = np.zeros(shape(tlist)); sy_analytic = -np.sin(2*np.pi*tlist) * np.exp(-tlist * g2); sz_analytic = np.cos(2*np.pi*tlist) * np.exp(-tlist * g2); sx1, sy1, sz1 = ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:276,integrat,integration,276,https://qutip.org,https://github.com/qutip/qutip/issues/1896,1,['integrat'],['integration']
Integrability,"### Bug Description. I try to install Qutip on my macOS (m1 pro, Ventura 13.0.1). I typed `pip3 install qutip` in the terminal, and get the following error message:. ``` .... copying qutip/cy/openmp/src/zspmv_openmp.hpp -> build/lib.macosx-10.9-universal2-cpython-39/qutip/cy/openmp/src; running build_ext; building 'qutip.cy.cqobjevo' extension; creating build/temp.macosx-10.9-universal2-cpython-39; creating build/temp.macosx-10.9-universal2-cpython-39/qutip; creating build/temp.macosx-10.9-universal2-cpython-39/qutip/cy; clang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -iwithsysroot/System/Library/Frameworks/System.framework/PrivateHeaders -iwithsysroot/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/Headers -arch arm64 -arch x86_64 -Werror=implicit-function-declaration -I/private/var/folders/8s/46j41bsj6rq3xkzplbcmjm2h0000gn/T/pip-build-env-do4siooe/overlay/lib/python3.9/site-packages/numpy/core/include -I/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/Headers -c qutip/cy/cqobjevo.cpp -o build/temp.macosx-10.9-universal2-cpython-39/qutip/cy/cqobjevo.o -w -O3 -funroll-loops -mmacosx-version-min=10.9; qutip/cy/cqobjevo.cpp:38:10: fatal error: 'Python.h' file not found; #include ""Python.h""; ^~~~~~~~~~; 1 error generated.; error: command '/usr/bin/clang' failed with exit code 1; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; ERROR: Failed building wheel for qutip; Failed to build qutip; ERROR: Could not build wheels for qutip, which is required to install pyproject.toml-based projects; ```. ### Code to Reproduce the Bug. ```shell; pip3 install qutip; ```. ### Code Output. _No response_. ### Expected Behaviour. It should be installed successfully. ### Your Environment. ```shell; pip version: 22.3.1; ```. ### Additional Context. I tried `pip3 install pyproject` but it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2027:156,message,message,156,https://qutip.org,https://github.com/qutip/qutip/issues/2027,1,['message'],['message']
Integrability,"### Bug Description. I wanted to use the new `step` method for the stochastic solver class `SMESolver`, but it always breaks down. I also tried it for `SSESolver`, but the same error message occurs. I use qutip 5.0.3. I took the example from the documentation as a minimal working example. I also tried `step` for the `MESolver` class and there it works. I think it should also not only output the state but also the measurement output if possible. As a side note, I also wanted to know if there is a particular reason why the argument for the initial state in the `start` method is called `state0` for `MESolver`, and `state` for `SMESolver`. ### Code to Reproduce the Bug. ```shell; import numpy as np; from qutip import destroy, coherent, SMESolver, expect. # parameters; DIM = 20 # Hilbert space dimension; DELTA = 5 * 2 * np.pi # cavity detuning; KAPPA = 2 # cavity decay rate; INTENSITY = 4 # intensity of initial state; NUMBER_OF_TRAJECTORIES = 500. # operators; a = destroy(DIM); x = a + a.dag(); H = DELTA * a.dag() * a. rho_0 = coherent(DIM, np.sqrt(INTENSITY)); times = np.arange(0, 1, 0.0025). stoc_solver = SMESolver(; H,; c_ops=[],; sc_ops=[np.sqrt(KAPPA) * a],; heterodyne=False,; options={""dt"": 0.00125, ""store_measurement"": True,}; ); data = [4.]; stoc_solver.start(state=rho_0, t0=times[0]); for t in times[1:]:; psi_t = stoc_solver.step(t); data.append(expect(x, psi_t)); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); Cell In[4], line 29; 27 stoc_solver.start(state=rho_0, t0=times[0]); 28 for t in times[1:]:; ---> 29 psi_t = stoc_solver.step(t); 30 data.append(expect(x, psi_t)). File /user/anaconda/envs/myenv/lib/python3.9/site-packages/qutip/solver/multitraj.py:129, in MultiTrajSolver.step(self, t, args, copy); 127 raise RuntimeError(""The `start` method must called first.""); 128 self._argument(args); --> 129 _, state = self._integrator.integrate(t, copy=False); 13",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2491:183,message,message,183,https://qutip.org,https://github.com/qutip/qutip/issues/2491,1,['message'],['message']
Integrability,"### Bug Description. I'm unable to run a time-dependent Hamiltonian, or even compile one with a string coefficient. . I tried to copy the example code on the website ; [](https://qutip.org/docs/latest/guide/dynamics/dynamics-time.html); as well as write a simple script (below), but both fail. The output is a traceback which ends with the following errors and exceptions:; ```; **ImportError: Building module cqobjevo_compiled_coeff_8478972439442 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']; Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_8478972439442.pyx**; ```. I'd appreciate some help, as my code requires the string input to run faster, with the speed-up offered by Cython. It is quite slow with the function-based input. . ### Code to Reproduce the Bug. ```shell; import qutip as qp; import numpy as np; import matplotlib.pyplot as plt. excited = qp.basis(2, 1); ground = qp.basis(2, 0). H0 = qp.sigmaz(); H1 = qp.sigmax() # time-dependent term. H = [H0,[H1, 'A * exp(-(t / sigma) ** 2)']]. t = np.linspace(-1, 1, 200) # Define time vector; args = {'A': 6, 'sigma': 0.145}; output = qp.mesolve(H, ground, t, e_ops = [qp.sigmaz()], args=args); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; DistutilsPlatformError Traceback (most recent call last); ~\Anaconda3\lib\site-packages\pyximport\pyximport.py in load_module(name, pyxfilename, pyxbuild_dir, is_package, build_inplace, language_level, so_path); 214 so_path = build_module(module_name, pyxfilename, pyxbuild_dir,; --> 215 inplace=build_inplace, language_level=language_level); 216 mod = imp.load_dynamic(name, so_path). ~\Anaconda3\lib\site-packages\pyximport\pyximport.py in build_module(name, pyxfilename, pyxbuild_dir, inplace, language_level); 190 inplace=inplace,; --> 191 reload_support=pyxargs.reload_support); 192 assert os.path.exists(so_path), ""Cannot find: %s"" % so_path. ~\Anaco",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914:46,depend,dependent,46,https://qutip.org,https://github.com/qutip/qutip/issues/1914,1,['depend'],['dependent']
Integrability,"### Bug Description. In a fresh conda environment with python 3.10, qutip installation from pip fails. It seems that this was due to people jumping to Python 3.10 too early https://github.com/numpy/numpy/issues/20039. Since October this issue is resolved and we can install Numpy from pip with Python 3.10. However, trying to install qutip with Python 3.10 still leads to this error. Even if I had Numpy (numpy==1.21.4) already installed, qutip tries to build Numpy again. I cannot install numpy 1.20.0 with Python 3.10 and so downgrading my Python to 3.9 is the only solution for now. @hodgestar @jakelishman We should try to find a fix for this ASAP . Any thoughts on this?. ### Code to Reproduce the Bug. ```shell; conda create -n py310 python=3.10; conda activate py310; pip install qutip; ```. ### Code Output. ```shell; ERROR: Failed building wheel for numpy; Failed to build numpy; ERROR: Could not build wheels for numpy, which is required to install pyproject.toml-based projects; ```; ```. ### Expected Behaviour. Qutip should have got installed after installing the dependencies. ### Your Environment. ```shell; N/A.; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1732:1077,depend,dependencies,1077,https://qutip.org,https://github.com/qutip/qutip/issues/1732,1,['depend'],['dependencies']
Integrability,"### Bug Description. In a fresh virtual environment, doing `pip install qutip` will cause the error. ```; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. I know this is quite an old OS and Python version, but that's what I have available. Numpy 1.24 should be supported in Python 3.8.10. ### Code to Reproduce the Bug. ```shell; $ python3 -m venv /tmp/test-venv. $ source /tmp/test-venv/bin/activate. $ pip install --upgrade pip; Collecting pip; Using cached pip-24.0-py3-none-any.whl (2.1 MB); Installing collected packages: pip; Attempting uninstall: pip; Found existing installation: pip 20.0.2; Uninstalling pip-20.0.2:; Successfully uninstalled pip-20.0.2; Successfully installed pip-24.0. $ pip list; Package Version; ------------- -------; pip 24.0; pkg_resources 0.0.0; setuptools 44.0.0. $ pip install qutip; Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:124,depend,dependencies,124,https://qutip.org,https://github.com/qutip/qutip/issues/2412,2,['depend'],['dependencies']
Integrability,### Bug Description. In https://github.com/qutip/qutip-tutorials/pull/42#pullrequestreview-1119409348 @BoxiLi noticed that `qutip.ipynbtools` imports Cython without a `try: ... except: ...` around the import. This results in `qutip.ipynbtools.version_table()` failing even though Cython isn't a required dependency of QuTiP. We should do a thorough clean up of this module in dev-major and fix this particular issue while we're there. ### Code to Reproduce the Bug. _No response_. ### Code Output. _No response_. ### Expected Behaviour. `qutip.ipynbtools.version_table()` can be called without Cython installed. ### Your Environment. ```shell; QuTiP version: 5.0.0.dev; ```. ### Additional Context. _No response_,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2001:304,depend,dependency,304,https://qutip.org,https://github.com/qutip/qutip/issues/2001,1,['depend'],['dependency']
Integrability,"### Bug Description. Installing `qutip` with `pip` on Python 3.11 fails at the ""Getting the requirements to build the wheel"" stage. Potentially related to [these changes](https://github.com/pypa/packaging/pull/407) in `packaging`, introduced in the latest update to `22.0`. ### Code to Reproduce the Bug. ```shell; pip install qutip --no-cache-dir; ```. ### Code Output. ```shell; Collecting qutip; Downloading qutip-4.7.0.tar.gz (3.6 MB); ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.6/3.6 MB 18.2 MB/s eta 0:00:00; Installing build dependencies ... done; Getting requirements to build wheel ... error; error: subprocess-exited-with-error; ; × Getting requirements to build wheel did not run successfully.; │ exit code: 1; ╰─> [20 lines of output]; Traceback (most recent call last):; File ""/Users/hsilver/opt/miniconda3/envs/py311/lib/python3.11/site-packages/pip/_vendor/pep517/in_process/_in_process.py"", line 351, in <module>; main(); File ""/Users/hsilver/opt/miniconda3/envs/py311/lib/python3.11/site-packages/pip/_vendor/pep517/in_process/_in_process.py"", line 333, in main; json_out['return_val'] = hook(**hook_input['kwargs']); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/Users/hsilver/opt/miniconda3/envs/py311/lib/python3.11/site-packages/pip/_vendor/pep517/in_process/_in_process.py"", line 118, in get_requires_for_build_wheel; return hook(config_settings); ^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 338, in get_requires_for_build_wheel; return self._get_build_requires(config_settings, requirements=['wheel']); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 320, in _get_build_requires; self.run_setup(); File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdm",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036:532,depend,dependencies,532,https://qutip.org,https://github.com/qutip/qutip/issues/2036,1,['depend'],['dependencies']
Integrability,"### Bug Description. Installing qutip with `pip install qutip` fails on a MacBook Pro with M1 Pro running macOS 12.0.1, due to the build dependency `numpy<1.20` failing to build. This happens both with miniconda python 3.9.6 and miniforge python 3.9.7. Same happens if I clone the master branch and build. If I edit `pyproject.toml` and `setup.cfg` to remove the `<1.20` in Numpy, then qutip builds correctly (then I get same problem as Issue #1606 when importing, but that's another story). ### Code to Reproduce the Bug. ```shell; conda create -n qutip_test; pip install qutip; ```. ### Code Output. ```shell; Collecting qutip; Using cached qutip-4.6.2.tar.gz (3.4 MB); Installing build dependencies ... error; ERROR: Command errored out with exit status 1:; command: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-standalone-pip-g3h2vfu_/__env_pip__.zip/pip install --ignore-installed --no-user --prefix /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-build-env-m9x0lkny/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools packaging wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0'; cwd: None; Complete output (912 lines):; Collecting setuptools; Using cached setuptools-59.5.0-py3-none-any.whl (952 kB); Collecting packaging; Using cached packaging-21.3-py3-none-any.whl (40 kB); Collecting wheel; Using cached wheel-0.37.0-py2.py3-none-any.whl (35 kB); Collecting cython>=0.29.20; Using cached Cython-0.29.25-py2.py3-none-any.whl (983 kB); Collecting numpy<1.20,>=1.16.6; Using cached numpy-1.19.5.zip (7.3 MB); Installing build dependencies: started; Installing build dependencies: finished with status 'done'; Getting requirements to build wheel: started; Getting requirements to build wheel: finished with status 'done'; Preparing metadata (pyproject.toml): started; Preparing metadata (pyproject.toml): finished with status ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:137,depend,dependency,137,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['depend'],"['dependencies', 'dependency']"
Integrability,"### Bug Description. Let `qobjevo` be a QobjEvo with array-based time dependence, like `QobjEvo([[qt.num(2), np.random.randn(100)]], tlist=np.arange(100))`. Calling `qobjevo(t)` returns a `Qobj` which is obtained by interpolating between the provided samples using `scipy.interpolate.CubicSpline(tlist, samples, bc_type='not-a-knot')(t)`. When `qobjevo` is passed to a solver like `qt.sesolve`, instead something equivalent to the following seems to be used internally:; `scipy.interpolate.CubicSpline(tlist, samples, bc_type='natural')(np.clip(t, tlist[0], tlist[-1]))`. ### Code to Reproduce the Bug. ```shell; print(qt.about()); options = qt.Options(nsteps=int(1e9), atol=1e-14, rtol=1e-14). num_control_points = 10; tlist_control_points = np.linspace(0, 1, num_control_points); control_samples = 1e-3 * np.random.randn(num_control_points). initial_state = (qt.basis(2, 0) + qt.basis(2, 1)).unit() # |+>; h_drive = qt.basis(2, 1) * qt.basis(2, 1).dag() # |1><1|. qobjevo = qt.QobjEvo([[h_drive, control_samples]], tlist=tlist_control_points). def calling_qobjevo(t, args):; return qobjevo(t). spline_corrected = scipy.interpolate.CubicSpline(tlist_control_points, control_samples, bc_type='natural'); def callable_corrected(t, args):; t = np.clip(t, tlist_control_points[0], tlist_control_points[-1]); coeff = spline_corrected(t).item(); return coeff * h_drive. tlist_state_eval = np.linspace(-0.1, 1.1, int(1e4)). res_qobjevo = qt.sesolve(qobjevo, initial_state, tlist=tlist_state_eval, options=options); res_calling_qobjevo = qt.sesolve(calling_qobjevo, initial_state, tlist=tlist_state_eval, options=options); res_callable_corrected = qt.sesolve(callable_corrected, initial_state, tlist=tlist_state_eval, options=options). # complex argument of <1|s(t)>, for each state |s(t)> in the trajectory for each of the three Hamiltonians; angle_qobjevo = np.angle(np.array([np.array(s).flatten()[1] for s in res_qobjevo.states])); angle_calling_qobjevo = np.angle(np.array([np.array(s).flatten()[1] for ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2063:70,depend,dependence,70,https://qutip.org,https://github.com/qutip/qutip/issues/2063,1,['depend'],['dependence']
Integrability,"### Bug Description. Running `import qutip` eagerly imports `scipy.fft` via `qutip.correlation`, causing all native dependencies of `scipy.fft`'s fftpack-based implementation to load. In particular when using SciPy 1.8.1 on Linux, fftpack requires `GLIBCXX_3.4.30` but contains a private copy of `GLIBCXX_3.4.29` such that the import fails unless another Python package provides its own implementation of `GLIBCXX_3.4.30` (typically, PyZMQ via `jupyter-client`). This in turn can cause `import qutip` to fail even when not using features backed by fftpack (e.g.: as happened in the case of https://github.com/microsoft/iqsharp/pull/676). ### Code to Reproduce the Bug. ```shell; import qutip; ```. ### Code Output. ```shell; # Example from build logs for https://dev.azure.com/ms-quantum-public/Microsoft%20Quantum%20(public)/_build/results?buildId=42116&view=logs&j=1c33f9fa-7159-5ed6-d128-ab2ed6cefd14&t=74d456a9-739b-5d92-ed57-026d8fef9427, ; $PREFIX/lib/python3.8/site-packages/zmq/backend/cython/../../../../.././libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by $PREFIX/lib/python3.8/site-packages/scipy/fft/_pocketfft/pypocketfft.cpython-38-x86_64-linux-gnu.so); ```. ### Expected Behaviour. `import qutip` should not cause native dependencies of `scipy.fft` to be imported eagerly. ### Your Environment. ```shell; (omitted --- `qutip.about()` failed to execute due to error running `import qutip`); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1915:116,depend,dependencies,116,https://qutip.org,https://github.com/qutip/qutip/issues/1915,2,['depend'],['dependencies']
Integrability,"### Bug Description. The ReadTheDocs build fails with:; ```; gcc -pthread -B /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -I/home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include/python3.10 -c _configtest.c -o _configtest.o; _configtest.c:2:10: fatal error: mpi.h: No such file or directory; 2 | #include <mpi.h>; | ^~~~~~~; ```; See https://readthedocs.org/projects/qutip/builds/23361676/ for the full build log (not sure if this is publicly visible -- if not, I can add QuTiP admins as maintainers on readthedocs.org if they give me their username). The QuTiP ReadTheDocs configuration is at: https://github.com/qutip/qutip/blob/master/.readthedocs.yaml. Probably this can be fixed by adding an appropriate dependency to https://github.com/qutip/qutip/blob/master/doc/rtd-environment.yml. ### Code to Reproduce the Bug. ```shell; Attempt to build the documentation on ReadTheDocs.; ```. ### Code Output. ```shell; gcc -pthread -B /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -I/home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include/python3.10 -c _configtest.c -o _configtest.o; _configtest.c:2:10: fatal error: mpi.h: No such file or directory; 2 | #include <mpi.h>; | ^~~~~~~; ```. ### Expected Behaviour. ReadTheDocs builds successfully. ### Your Environment. ```shell; QuTiP version: master branch; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2317:1026,depend,dependency,1026,https://qutip.org,https://github.com/qutip/qutip/issues/2317,1,['depend'],['dependency']
Integrability,"### Bug Description. The `plot_spin_distribution_2d` function allows to project a spin distribution function from the surface of a unit sphere to the unit disk. QuTiP uses `matplotlib.pyplot.pcolor` to perform this task and calculates a meshgrid `X, Y` to plot the function to. Due to some changes in `matplotlib` the current implementation is deprecated and will return errors in a few minor releases. We could quickly fix this by passing `shading='auto'` to the call of `ax.pcolor()` in the [visualization.py](https://github.com/qutip/qutip/blob/82c6704c6fea8a2801492865ad1ef7c1d73c8840/qutip/visualization.py#L1313). However, this raises another UserWarning that the center points are not monotonically sorted. The cleanest way to fix this bug would be to pass the edges of the quadrilaterals to `pcolor()`. But we can not calculate them exactly from the given points in `theta, phi`. Hence, we would need to redesign the interface to this function and to related functions like `plot_spin_distribution_3d` and `spin_q_function`. ### Code to Reproduce the Bug. ```shell; import qutip as qt; import numpy as np; import matplotlib.pyplot as plt. j = 5; psi = qt.spin_coherent(j, np.random.rand() * np.pi, np.random.rand() * 2 * np.pi); rho = qt.ket2dm(psi). theta = np.linspace(0, np.pi, 50); phi = np.linspace(0, 2 * np.pi, 50). Q, THETA, PHI = qt.spin_q_function(psi, theta, phi); fig, ax = qt.plot_spin_distribution_2d(Q, THETA, PHI); plt.show(); ```. ### Code Output. ```shell; MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3. Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading']. This will become an error two minor releases later.; ax.pcolor(X, Y, P.real, cmap=cmap); ```. ### Expected Behaviour. I expect the same plot, but without the warning which becomes an error in the future. ### Your Environment. ```shell; QuTiP Version: 5.0.0.de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1973:925,interface,interface,925,https://qutip.org,https://github.com/qutip/qutip/issues/1973,1,['interface'],['interface']
Integrability,"### Bug Description. The correlation 2op_2t does not give correct results when using time-dependent hamiltonians and collapse operators. It seems that this could be solved by changing one line of the code inside correlatation.py, in def _correlation_me_2t:. from:; H_shifted, c_op * rho * a_op, taulist, c_ops_shifted, . to:; H_shifted, c_op * rho * a_op, taulist + tlist[t_idx], c_ops_shifted,. The accompanying code demonstrating the issue and help finding the issue and solution were provided by M. Pechal. Issue was found in qutip version 4.6.2 and 4.6.3. ### Code to Reproduce the Bug. ```shell; # Qubit evolving only under energy relaxation (with H = 0 and the only collapse operator being qt.destroy(2)).; # The relaxation rate is time-dependent.; #; # A simple calculation shows that <ad(t2).a(t1)> = exp( - ( int_0^t1 Gamma(t) dt + int_0^t2 Gamma(t) dt ) / 2 ). H = 0.0 * qt.identity(2); psi0 = qt.basis(2, 1); tlist = np.linspace(0, 1, 101); def Gamma(t):; return 8.0 * t; cops = [[qt.destroy(2), lambda t, args: np.sqrt(Gamma(t))]]; a = qt.destroy(2); ad = a.dag(). testcorr = qt.correlation_2op_2t(H, psi0, tlist, tlist, cops, ad, a); #testcorrM = qt.correlation_2op_2t_MPAF(H, psi0, tlist, tlist, cops, ad, a). i1 = 20; i2 = 50; print('qt.correlation_2op_2t:'); print('<ad(t2).a(t1)> =',testcorr[i1, i2 - i1]). #print('qt.correlation_2op_2t MPAF:'); #print('<ad(t2).a(t1)> =',testcorrM[i1, i2 - i1]). print('------'); print('""manual"" calculation using mesolve:'); rhom = qt.mesolve(H, psi0, np.linspace(0, tlist[i1], 101), cops).states[-1]; print('<ad(t2).a(t1)> =',(qt.mesolve(H, a*rhom, np.linspace(tlist[i1], tlist[i2], 101), cops).states[-1] * ad).tr()). print('------'); print('theory:'); t1 = tlist[i1]; t2 = tlist[i2]; print('<ad(t2).a(t1)> =', np.exp(-(4.0*t1**2 + 4.0*t2**2)/2)); ```. ### Code Output. ```shell; qt.correlation_2op_2t:; <ad(t2).a(t1)> = (0.7117768902828536+0j); ------; ""manual"" calculation using mesolve:; <ad(t2).a(t1)> = 0.5598976820725802; ------; theory:; <a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1808:90,depend,dependent,90,https://qutip.org,https://github.com/qutip/qutip/issues/1808,2,['depend'],['dependent']
Integrability,"### Bug Description. The documentation of the [`StochasticSolverOptions`](https://qutip.org/docs/latest/apidoc/classes.html#qutip.stochastic.StochasticSolverOptions) class states that the `average_states` option can be passed through the `options` keyword and that it will be used:. > options:; > Generic solver options. Only `options.average_states` and `options.store_states` are used. However, it does not seem that this option is working when passed to `ssesolve`, i.e., the states are never averaged. I attach an example code to reproduce the behaviour. ### Code to Reproduce the Bug. ```shell; ## IMPORTS. import matplotlib.pyplot as plt; import numpy as np; import qutip as qt. # Inline plotting; %matplotlib inline. ## PARAMETERS. # Maximum number of photons; n_max = 50. # Resonator frequency; w_r = 10; # Resonator leakage rate; kappa = 1. # Drive parameters; w_d = 12; t_cut = 10/kappa; t_ramp = 0.05/kappa; drive_pars = {""w_d"": w_d, ""t_cut"": t_cut, ""t_ramp"": t_ramp}. # Integration parameters; dt = (2*np.pi/w_d)/30; T = 3/kappa; times = np.arange(0, T, dt). ## FREE HAMILTONIAN. # Annihilation operator; a = qt.destroy(n_max). # Number operator; n = a.dag() * a. # Free Hamiltonian; H_0 = w_r * n. ## DRIVE HAMILTONIAN. # Define drive pulse; def smooth_square_pulse(t, t0, tf, w):; pulse = (1 + np.tanh((tf - t)/w))/2; pulse = pulse * (1 + np.tanh((t-t0)/w))/2; return pulse; def pulse(t, args):; w_d = args[""w_d""]; t_cut = args[""t_cut""]; t_ramp = args[""t_ramp""]; drive = smooth_square_pulse(t, 0, t_cut, t_ramp); drive = drive * np.sin(w_d * t); return drive. # Generate of the drive; V_d_gen = -1j * (a-a.dag()). ## STOCHASTIC COLLAPSE OPERATORS; sc_ops = [np.sqrt(kappa) * a]. ## HAMILTONIAN TO FEED TO THE SOLVER; H = [H_0, [V_d_gen, pulse]]. ## INITIAL STATE; psi_0 = qt.fock(n_max, 0). ## STOCHASTIC SOLVER KWARGS AND OPTIONS; options = qt.Options(); options.average_states = True; kwargs = {""sc_ops"": sc_ops, ""args"": drive_pars, ""ntraj"": 500, ""method"": ""heterodyne"", ""store_measure",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2216:982,Integrat,Integration,982,https://qutip.org,https://github.com/qutip/qutip/issues/2216,1,['Integrat'],['Integration']
Integrability,"### Bug Description. This bug is related to the one explained in #1829. After setting to False the `auto_tidyup` variable in settings, `mesolve` still calls `tidyup` and sets to 0 all values lower than 1e-12. The following code is from a [QuTiP example](https://qutip.org/docs/latest/guide/dynamics/dynamics-time.html#function-based-time-dependence), but removing the collapse operators and multiplying the constant hamiltonian with a very small value (and changing the time vector accordingly). More specifically, I create two different hamiltonians by multiplying `H0` by 1e-12 and 1e-13 respectively. After computing the `mesolve` for both hamiltonians, one can see that in the second case all values have been set to 0. . ### Code to Reproduce the Bug. ```shell; from qutip import basis, tensor, qeye, destroy, num, mesolve, settings; import numpy as np. settings.auto_tidyup = False. ustate = basis(3, 0); excited = basis(3, 1); ground = basis(3, 2). N = 2 # Set where to truncate Fock state for cavity; sigma_ge = tensor(qeye(N), ground * excited.dag()) # |g><e|; sigma_ue = tensor(qeye(N), ustate * excited.dag()) # |u><e|; a = tensor(destroy(N), qeye(3)); ada = tensor(num(N), qeye(3)). t = np.linspace(-15, 15 * 1e11, 10) # Define time vector; psi0 = tensor(basis(N, 0), ustate) # Define initial state. g = 5 # coupling strength; H0 = -g * (sigma_ge.dag() * a + a.dag() * sigma_ge) # time-independent term; H1 = (sigma_ue.dag() + sigma_ue) # time-dependent term. def H1_coeff(t, args):; return 9 * np.exp(-(t / 5.) ** 2). H_0 = [H0 * 1e-12, [H1, H1_coeff]]; H_1 = [H0 * 1e-13, [H1, H1_coeff]]; output_1 = mesolve(H_0, psi0, t, e_ops=[ada]); output_2 = mesolve(H_1, psi0, t, e_ops=[ada]); print(output_1.expect[0]); print(output_2.expect[0]); ```. ### Code Output. ```shell; [0. 0.48307748 0.87367156 0.3158159 0.03202178 0.64420957; 0.8108019 0.1667205 0.12343592 0.77580413]; [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]; ```. ### Expected Behaviour. The second print should NOT have been all 0s. ### You",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1831:338,depend,dependence,338,https://qutip.org,https://github.com/qutip/qutip/issues/1831,1,['depend'],['dependence']
Integrability,"### Bug Description. This issue originates from a [problem in the Help Group](https://groups.google.com/g/qutip/c/F7tOoZzMjto). Calculating the entropy of a density matrix in the Dicke basis leads to -Inf, while the standard calculation with ""entropy_vn"" returns a finite (more logical) result. ; I already tracked down the problem to the calculation of eigenvalues in `dicke_trace_function`. Due to numerical behaviour some eigenvalues have very small negative values, which lead to -Inf entropy. If these values are rounded to zero, the problem disappears. However, I am not sure, which way is the best way to perform this rounding. ; @nathanshammah @quantshah . ### Code to Reproduce the Bug. ```shell; from qutip import *; from qutip.piqs import *; import numpy as np; import numpy.random; from scipy.linalg import eig; from scipy.sparse import block_diag. N = 10; system = Dicke(N); [jx, jy, jz] = jspin(N,basis=""dicke""); jx=jx*2; jy=jy*2; jz=jz*2. V=3; g=1; system.emission = 1; system.hamiltonian = V/(2*(N-1)) * jz*jz + g/2 * jx; D_tls = system.liouvillian(); rho_ss = steadystate(D_tls,method='eigen',); vn_dicke=entropy_vn_dicke(rho_ss); vn_dicke_over=entropy_vn(Qobj(block_diag(dicke_blocks_full(rho_ss)))). print(vn_dicke,vn_dicke_over); ```. ### Code Output. ```shell; -inf 0.006061297461844266; ```. ### Expected Behaviour. The value for the entropy should not depend on the way it is calculated. I.e., we should have `vn_dicke == vn_dicke_over` up to numerical uncertainty. ### Your Environment. ```shell; uTiP Version: 5.0.0.dev0+ee51e50; Numpy Version: 1.21.0; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.10; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1919:1375,depend,depend,1375,https://qutip.org,https://github.com/qutip/qutip/issues/1919,1,['depend'],['depend']
Integrability,"### Bug Description. Using `Python 3.12.2` and `Poetry 1.7.1`, when adding `qutip` as a dependency, the installation fails. ### Code to Reproduce the Bug. ```shell; poetry add qutip; ```. ### Code Output. ```shell; Updating dependencies; Resolving dependencies... (0.2s). Package operations: 4 installs, 0 updates, 0 removals. • Installing numpy (1.26.4); • Installing packaging (23.2); • Installing scipy (1.12.0); • Installing qutip (4.7.5): Failed. ChefBuildError. Backend subprocess exited when trying to invoke build_wheel. [...]. building 'qutip.cy.cqobjevo_factor' extension; error: Microsoft Visual C++ 14.0 or greater is required. Get it with ""Microsoft C++ Build Tools"": https://visualstudio.microsoft.com/visual-cpp-build-tools/. at ~\AppData\Roaming\pypoetry\venv\Lib\site-packages\poetry\installation\chef.py:164 in _prepare; 160│; 161│ error = ChefBuildError(""\n\n"".join(message_parts)); 162│; 163│ if error is not None:; → 164│ raise error from None; 165│; 166│ return path; 167│; 168│ def _prepare_sdist(self, archive: Path, destination: Path | None = None) -> Path:. Note: This error originates from the build backend, and is likely not a problem with poetry but with qutip (4.7.5) not supporting PEP 517 builds. You can verify this by running 'pip wheel --no-cache-dir --use-pep517 ""qutip (==4.7.5)""'.; ```. ### Expected Behaviour. Installing qutip successfully. ### Your Environment. ```shell; QuTiP version: 4.7.5; Python version: 3.12.2; Poetry version: 1.7.1; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2322:88,depend,dependency,88,https://qutip.org,https://github.com/qutip/qutip/issues/2322,3,['depend'],"['dependencies', 'dependency']"
Integrability,"### Bug Description. Using the `HarmonicOscillatorWaveFunction` class one can compute and plot the position wave function. . However, for relatively low Fock states the routine used by Qutip begins to fail. This makes it hard to plot e.g. the GKP position wavefunction which requires a lot of Fock states to converge. The bug starts to appear for Fock state n=43. Below I have only plotted n = 47 because that's the first time it becomes very noticeable. . The (crappy) code snippet I provided seems to fail around n = 151. . ### Code to Reproduce the Bug. ```shell; import numpy as np; import matplotlib.pyplot as plt; import qutip as qt; from qutip.distributions import HarmonicOscillatorWaveFunction; from numpy.polynomial.hermite import hermval; import math. def harmonic_oscillator_wavefunction(psi, xvecs, omega0=1.0):; n_coeff = []; for n in range(psi.shape[0]):; n_coeff.append(pow(omega0 / np.pi, 0.25) / \; np.sqrt(2.0 ** n * math.factorial(n)) ; * psi.data[n, 0]); return hermval(xvecs[0], n_coeff)* np.exp(-xvecs[0] ** 2 / 2.0). xmax = 12; steps = 3000; x = np.linspace(-xmax,xmax,num=steps). # choose a fock state; n = 47; state = qt.basis(n+1,n). wav_fn = HarmonicOscillatorWaveFunction(state, omega=1, extent=[-xmax,xmax], steps=steps); y_qutip = wav_fn.data; y_good = harmonic_oscillator_wavefunction(state,[x]). plt.plot(x,y_qutip,label=""qutip""); plt.plot(x,y_good,':',label=""homebrew fn""); plt.plot(x,y_qutip-y_good,label= ""qutip - homebrew""); plt.legend(); plt.title('Harmonic Oscillator Wave Function n = '+str(n)); plt.xlabel('position'); ```. ### Code Output. _No response_. ### Expected Behaviour. <img width=""627"" alt=""image"" src=""https://github.com/qutip/qutip/assets/2394563/3b3fa3eb-c08c-46ed-abf9-972d59283344"">. ### Your Environment. ```shell; QuTiP Version: 4.7.2; Numpy Version: 1.25.1; Scipy Version: 1.11.1; Cython Version: None; Matplotlib Version: 3.7.2; Python Version: 3.11.4; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2286:169,rout,routine,169,https://qutip.org,https://github.com/qutip/qutip/issues/2286,1,['rout'],['routine']
Integrability,"### Bug Description. When combining `parfor` with `brmesolve` and a time-dependent Hamiltonian, the compilation of the Hamiltonian seems to interfer with the correct functioning of `parfor`. The call results in an error, that the coefficient file is too short. . I guess this could also happen when using `parfor` with other solvers. ### Code to Reproduce the Bug. ```shell; from qutip import brmesolve, sigmaz, sigmax, basis, parfor; import numpy as np. psi0 = basis(2, 0); H_S = np.pi * sigmaz(); H_I = sigmax(); tlist = np.linspace(0, 100, 101); pulse_shape = ""exp(- t**2)"". def brme(A):; H_tmp = [A * H_S, [H_I, pulse_shape]]. return brmesolve(; H_tmp, psi0, tlist, e_ops=[sigmaz()]; ).expect[0][-1]. results = parfor(brme, np.linspace(0, np.pi, 10)); ```. ### Code Output. ```shell; ImportError: /home/chris/.qutip/qutip_coeffs_1.1/qtcoeff_4c859672674b8b603bd243ba3f4a8d.cpython-38-x86_64-linux-gnu.so: file too short; ```. ### Expected Behaviour. `parfor` should wait for the compilation to finish and then start the parallel processes. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+c64f38e; Numpy Version: 1.23.0; Scipy Version: 1.8.1; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.8.10; Number of CPUs: 4; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1963:73,depend,dependent,73,https://qutip.org,https://github.com/qutip/qutip/issues/1963,1,['depend'],['dependent']
Integrability,"### Bug Description. When installing on ubuntu 20.04, the build fails with `ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19` this is due to the fact that on this platform `oldest-supported-numpy` (from `pyproject.toml`) defaults to 1.17.3, but `setup.cfg` requires `numpy>=1.19`. ### Code to Reproduce the Bug. ```shell; python -m pip install -v --upgrade qutip; ```. ### Code Output. ```shell; Using pip 24.0 from /home/defreule/.local/lib/python3.8/site-packages/pip (python 3.8); Defaulting to user installation because normal site-packages is not writeable; Requirement already satisfied: qutip in /usr/local/lib/python3.8/dist-packages (4.7.3); Link requires a different Python (3.8.10 not in: '>=3.9'): https://files.pythonhosted.org/packages/73/73/abcc185174ac6dbc7965e5aeb9418c163eafda704008ee795ee9cdc75e4a/qutip-5.0.2.tar.gz (from https://pypi.org/simple/qutip/) (requires-python:>=3.9); Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Running command pip subprocess to install build dependencies; Ignoring cython: markers 'python_version >= ""3.10""' don't match your environment; Collecting setuptools; Using cached setuptools-70.0.0-py3-none-any.whl.metadata (5.9 kB); Collecting packaging; Using cached packaging-24.0-py3-none-any.whl.metadata (3.2 kB); Collecting wheel; Using cached wheel-0.43.0-py3-none-any.whl.metadata (2.2 kB); Collecting cython<3.0.3,>=0.29.20; Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.1 kB); Collecting oldest-supported-numpy; Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl.metadata (9.8 kB); Collecting scipy>=1.8; Using cached scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Collecting numpy==1.17.3 (from oldest-supported-numpy",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:94,depend,dependencies,94,https://qutip.org,https://github.com/qutip/qutip/issues/2440,2,['depend'],['dependencies']
Integrability,"### Bug Description. When one uses the `floquet_modes` function, the Floquet modes can sometimes come out non-orthogonal. **More info** . I think the problem occurs when some quasienergies are almost degenerate. This could be related to the fact that `floquet_modes` uses `eig` from numpy to diagonalise the propagator U, which in turn does not guarantee orthogonality of the eigenvectors according to the [numpy docs. ](https://numpy.org/doc/stable/reference/generated/numpy.linalg.eig.html). I tried to come up with a simple example of the problem. I also tested what happens if one changes the precision of the numerical integrator used in the `propagator` function within `floquet modes`, and it does affect the result a lot. The `floquet_modes_mod` function that appears in the code below is exactly `floquet_modes`, only I modified it to also accept Options that are then passed to `propagator` (by the way, is there a smarter way to do this without defining this new function?). . ### Code to Reproduce the Bug. ```shell; from qutip import *; import numpy as np; import numpy.linalg as la; from numpy import angle, pi. # create a modified floquet_modes that also accepts Options; def floquet_modes_mod(H, T, args=None, sort=False, U=None, options=None):; """"""; Calculate the initial Floquet modes Phi_alpha(0) for a driven system with; period T. Returns a list of :class:`qutip.qobj` instances representing the Floquet; modes and a list of corresponding quasienergies, sorted by increasing; quasienergy in the interval [-pi/T, pi/T]. The optional parameter `sort`; decides if the output is to be sorted in increasing quasienergies or not. Parameters; ----------. H : :class:`qutip.qobj`; system Hamiltonian, time-dependent with period `T`. args : dictionary; dictionary with variables required to evaluate H. T : float; The period of the time-dependence of the hamiltonian. The default value; 'None' indicates that the 'tlist' spans a single period of the driving. U : :class:`qutip.qobj`; The p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1864:624,integrat,integrator,624,https://qutip.org,https://github.com/qutip/qutip/issues/1864,1,['integrat'],['integrator']
Integrability,"### Bug Description. When passing sesolve a time independent Hamiltonian, there is still time-dependent evolution returned. It seems to depend on the number of time steps passed to the solver, with more time steps giving more drastic time-dependent evolution. . ### Code to Reproduce the Bug. ```shell; import matplotlib.pyplot as plt; import numpy as np; from qutip import *. qubit_freq = 5000. # operators; a = destroy(2). # Basis States; z_p = basis(2,0); z_m = basis(2,1); x_p = (z_p + z_m)/np.sqrt(2); x_m = (z_p - z_m)/np.sqrt(2); y_p = (z_p + 1j*z_m)/np.sqrt(2); y_m = (z_p - 1j*z_m)/np.sqrt(2) . psi0 = x_p. # Hamiltonian; H = qubit_freq*2*np.pi * (a.dag() * a + 1/2). tlist = np.linspace(0, 0.1, 100000). output1 = sesolve(H, psi0, tlist, e_ops=[a.dag()*a]); n_a = output1.expect[0]. # Plot Occupation with respect to time; fig, axes = plt.subplots(1, 1, figsize=(10,6)); axes.plot(tlist, n_a, label=""Qubit""); axes.legend(loc=0); axes.set_xlabel('Time'); axes.set_ylabel('Occupation probability'); plt.show(); ```. ### Code Output. _No response_. ### Expected Behaviour. The graph provided should be a flat line, indicating no time evolution. . ### Your Environment. ```shell; QuTiP Version: 4.7.3; Numpy Version: 1.23.5; Scipy Version: 1.11.4; Cython Version: 3.0.6; Matplotlib Version: 3.7.1; Python Version: 3.10.12; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. ![image](https://github.com/qutip/qutip/assets/112031379/cfee4cd8-6b7a-4b9c-87b3-a81d45128132). This plot shows a loss in population when beginning in the x state of a simple two level system. Playing around with the code, I find the slope of this line changes as you give a different number of points in tlist. This also happens with mesolve and mcsolve with no collapse operators (although I suspect this is because behind the scenes, it's just using sesolve).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2275:94,depend,dependent,94,https://qutip.org,https://github.com/qutip/qutip/issues/2275,3,['depend'],"['depend', 'dependent']"
Integrability,"### Bug Description. When plotting an arc on the Bloch sphere over the front wireframe, it becomes darker and is less visible; ![example_old_order](https://github.com/qutip/qutip/assets/150566116/3196a709-dbab-4463-ab61-be7aa4996848). It happens because front wireframe is plotted last, if I change the order [here](https://github.com/qutip/qutip/blob/master/qutip/bloch.py#L681) to:; ```python; self.plot_front(); self.plot_arcs(); ```; then I get something looking better:; ![example_new_order](https://github.com/qutip/qutip/assets/150566116/6171e113-7fb5-49e4-9598-c99f8989664e). Should we apply this change or even plot front and back before all the other elements?. ### Code to Reproduce the Bug. ```shell; import qutip as qt. bloch = qt.Bloch(); xplus = (qt.basis(2, 0) + qt.basis(2, 1)).unit(); xmoin = (qt.basis(2, 0) - qt.basis(2, 1)).unit(); yplus = (qt.basis(2, 0) + 1j * qt.basis(2, 1)).unit(); ymoin = (qt.basis(2, 0) - 1j * qt.basis(2, 1)).unit(); bloch.add_arc(xmoin, ymoin, fmt=""crimson""); bloch.add_arc(ymoin, xplus, fmt=""crimson""); bloch.add_arc(xplus, yplus, fmt=""gold""); bloch.add_arc(yplus, xmoin, fmt=""gold""); bloch.save(""example.png""); ```. ### Code Output. _No response_. ### Expected Behaviour. The color of the arc should not depend on its position on the Bloch sphere. ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.13.1; Cython Version: None; Matplotlib Version: 3.9.0; Python Version: 3.11.6; Number of CPUs: 4; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2444:1253,depend,depend,1253,https://qutip.org,https://github.com/qutip/qutip/issues/2444,1,['depend'],['depend']
Integrability,"### Bug Description. When solving a time-dependent problem with `mesolve` the result seems incorrect for certain numbers of the the sample times (`tlist`). ### Code to Reproduce the Bug. ```shell; from qutip import *; import matplotlib.pyplot as plt; import numpy as np. solver = mesolve; #solver = sesolve. def func(t, *args):; omega_R = 2e-3; if t <100:; return 0; elif t>600:; return 0; else:; return 2*np.pi*omega_R. initial_state = basis(2, 0); times =np.linspace(0,700, 267); ; HH= [ [qutip.sigmax(), func] ]. sz=qutip.sigmaz(); ez = solver(HH, initial_state, times, e_ops=[sz]).expect[0]. plt.figure(10); plt.clf(); plt.plot(times, ez, "".-b"", label=""sz""). times = np.linspace(0,700, 268); sz=qutip.sigmaz(); ez = solver(HH, initial_state, times, e_ops=[sz]).expect[0]. plt.figure(20); plt.clf(); plt.plot(times, ez, "".-b"", label=""sz""). times = np.linspace(0,700, 800); sz=qutip.sigmaz(); ez = solver(HH, initial_state, times, e_ops=[sz]).expect[0]. plt.figure(30); plt.clf(); plt.plot(times, ez, "".-b"", label=""sz""); ```. ### Code Output. ![image](https://user-images.githubusercontent.com/883786/176169606-57e34d9d-0dc1-4c6e-94cf-397d66c39dcd.png). ### Expected Behaviour. The output of the minimal example has oscillations in the first and third case (plot number 10 and 30), but is flat for the second case. . The second case should look like the first and third one, or a warning/exception should be generated indicating a problem. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See htt",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1945:41,depend,dependent,41,https://qutip.org,https://github.com/qutip/qutip/issues/1945,1,['depend'],['dependent']
Integrability,"### Bug Description. When two QobjEvo objects are added up that have time dependence with the same parameter names but with different values in the arg dictionary, the combined QObjEvo merges the dictionaries, resulting in the wrong time dependence for some of the Hamiltonians. ### Code to Reproduce the Bug. ```shell; a = destroy(3); n = a.dag()*a. w0 = 1; g = 0.1; H0 = w0*n; es0 = H0.eigenstates(); def Hdr(wdr) :; return QobjEvo([[a + a.dag(),'2*cos(w*t)']], args=dict({'w':wdr})). SE0 = sesolve(H0+g*Hdr(w0),es0[1][0],np.linspace(0,np.pi/2/g,101)); SE1 = sesolve(H0+g*Hdr(w0)+0*Hdr(2*w0),es0[1][0],np.linspace(0,np.pi/2/g,101)); [plt.plot(expect(n,s.states)) for s in [SE0, SE1]]; SE0.states[-1].overlap(SE1.states[-1]); ```. ### Code Output. _No response_. ### Expected Behaviour. SE0 and SE 1 should have been the same. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.19.5; Scipy Version: 1.4.1; Cython Version: 0.29.26; Matplotlib Version: 3.2.2; Python Version: 3.7.12; Number of CPUs: 1; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.7/dist-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1765:74,depend,dependence,74,https://qutip.org,https://github.com/qutip/qutip/issues/1765,2,['depend'],['dependence']
Integrability,"### Bug Description. When using qutip integrators with `mcsolve`, parallelizing fails with both `parallel` and `loky` map methods when one doesn't use improved sampling. Also, a side note - memory consumption seems to have gotten worse in setting up the mcsolve problem in v5.0 as compared to v4.7. I can provide some benchmarks later, but I am unable to go to similar truncation sizes as I could before. ### Code to Reproduce the Bug. ```py; import qutip as qp; import numpy as np; N = 2; a1 = qp.tensor(qp.destroy(N), qp.qeye(N)); a2 = qp.tensor(qp.qeye(N), qp.destroy(N)); H = -1j * 0.4 * ((a1.dag()*a1.dag() - a1 * a1) + (a2.dag()*a2.dag() - a2*a2)); psi01 = qp.tensor(qp.states.basis(N, 0), qp.states.basis(N, 0)); tlist = np.linspace(0.0, 30.0, 501); c_ops = [np.sqrt(5)*a1*a1, np.sqrt(5)*a2*a2]; result = qp.mcsolve(H, psi01, tlist, c_ops, ntraj=500, options=dict(map=""parallel"", method=""vern9"", improved_sampling=False)); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; _RemoteTraceback Traceback (most recent call last); _RemoteTraceback: ; """"""; Traceback (most recent call last):; File ""/lib/python3.10/multiprocessing/queues.py"", line 245, in _feed; obj = _ForkingPickler.dumps(obj); File ""/lib/python3.10/multiprocessing/reduction.py"", line 51, in dumps; cls(buf, protocol).dump(obj); File ""<stringsource>"", line 2, in View.MemoryView._memoryviewslice.__reduce_cython__; TypeError: no default __reduce__ due to non-trivial __cinit__; ```. ### Expected Behaviour. Parallelizing should work independently of the sampling method. . ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.12.0; Cython Version: None; Matplotlib Version: 3.9.0; Python Version: 3.10.4; Number of CPUs: 8; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2450:38,integrat,integrators,38,https://qutip.org,https://github.com/qutip/qutip/issues/2450,2,"['integrat', 'protocol']","['integrators', 'protocol']"
Integrability,"### Code to Reproduce the Bug. ```shell; import qutip; b = qutip.Bloch(); b.make_sphere(); b.add_vectors([0,0,1]); b.render(); ```. ### Code Output. ```shell; /tmp/ipykernel_377526/3029128797.py in <module>; 2 b.make_sphere(); 3 b.add_vectors([0,0,1]); ----> 4 b.render(). ~/.conda/envs/myenv/lib/python3.8/site-packages/qutip/bloch.py in render(self); 503 self.plot_annotations(); 504 # Trigger an update of the Bloch sphere if it is already shown:; --> 505 self.fig.canvas.draw(); 506 ; 507 def plot_back(self):. ~/.local/lib/python3.8/site-packages/matplotlib/backends/backend_agg.py in draw(self); 434 (self.toolbar._wait_cursor_for_draw_cm() if self.toolbar; 435 else nullcontext()):; --> 436 self.figure.draw(self.renderer); 437 # A GUI class may be need to update a window using this draw, so; 438 # don't forget to call the superclass. ~/.local/lib/python3.8/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer, *args, **kwargs); 71 @wraps(draw); 72 def draw_wrapper(artist, renderer, *args, **kwargs):; ---> 73 result = draw(artist, renderer, *args, **kwargs); 74 if renderer._rasterizing:; 75 renderer.stop_rasterizing(). ~/.local/lib/python3.8/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer); 48 renderer.start_filter(); 49 ; ---> 50 return draw(artist, renderer); 51 finally:; 52 if artist.get_agg_filter() is not None:. ~/.local/lib/python3.8/site-packages/matplotlib/figure.py in draw(self, renderer); 2808 ; 2809 self.patch.draw(renderer); -> 2810 mimage._draw_list_compositing_images(; 2811 renderer, self, artists, self.suppressComposite); 2812 . ~/.local/lib/python3.8/site-packages/matplotlib/image.py in _draw_list_compositing_images(renderer, parent, artists, suppress_composite); 130 if not_composite or not has_images:; 131 for a in artists:; --> 132 a.draw(renderer); 133 else:; 134 # Composite any adjacent images together. ~/.local/lib/python3.8/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer); 48 renderer.start_fil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1817:1090,wrap,wraps,1090,https://qutip.org,https://github.com/qutip/qutip/issues/1817,1,['wrap'],['wraps']
Integrability,"### Describe the Issue!. As briefly described in #1910 there are some functions in `Bloch` class that are not fully tested. Besides, there are a few other changes that may benefit `Bloch`. I would like to list them here and provide more information on the change for discussion. . The main changes I propose to do in the Bloch class are: ; - [x] clean-up of the code in `add_points` and `plot_points` methods (addressed in #1909).; - [x] Clean import statements.; - [x] clean-up of the code in `add_vectors` and `plot_vectors` methods (#1917).; - [ ] clean-up of the code in `add_state` method. ; - [ ] make the plot functions (`plot_points, plot_vectors, ...`) private as they are meant to be used only in the render method (the do not even have a docstring). This _breaks backwards compatibility_ but I imagine it will be ok as I do not expect anyone using these methods.; - [x] Test `_repr_svg_` and `_repr_png_` (there seems to be a bug in `_repr_svg_` #1912).; - [ ] We have `render` and `make_sphere` methods that do _exactly_ the same (`make_sphere` calls `render`) I would vote to deprecate `make_sphere` for QuTiP 5.0.; - [ ] Make the interface consistent among the methods `add_state`, `add_vector`, `add_points`, `add_arc` and `add_line`. (This would address #1105 ); - [ ] Address #1106.; - [ ] Update documentation AND notebooks with changes. These task are planned to be addressed each in a separate PR. I plan to finish these tasks myself but feel free to tackle any of these (or add a new one) if no PR is open and you mention it in this issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1913:1144,interface,interface,1144,https://qutip.org,https://github.com/qutip/qutip/issues/1913,1,['interface'],['interface']
Integrability,"### Describe the Issue!. Calculation of 2-time correlation is understandably slow. There are two things that can improve `_correlation_3op_dm(solver, state0, tlist, taulist, A, B, C)` a bit. 1. In my experience `tlist` is usually chosen so that at `tlist[-1]` all correlations are already gone. Calculate them up to `tlist[-1] + taulist[-1]` is often superfluous. An option can be passed to make last `tau` dependent on `t` to make each subsequent simulation shorter. An example could be something like this (but with more thinking about edge cases):; ```python; _correlation_3op_dm(solver, state0, tlist, taulist, A, B, C, shorten_tau=False):; ...; for t_idx, rho in enumerate(rho_t):; t = tlist[t_idx]; if shorten_tau:; last_tau_index = sum(np.array(taulist) <= t); this_step_taulist = taulist[last_tau_index:]; else:; this_step_taulist = taulist + t; corr_mat[t_idx, :] = solver.run(; C(t) @ rho @ A(t),; this_step_taulist,; e_ops=B; ).expect[0]; progress_bar.update(); progress_bar.finished(); ```; 2. Even better way would be to make simulations along `taulist` in parallel. It seems that it's possible to have different runs of mcsolve at the same time, so here the same framework could be used.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2315:407,depend,dependent,407,https://qutip.org,https://github.com/qutip/qutip/issues/2315,1,['depend'],['dependent']
Integrability,"### Describe the Issue!. Dysolve algorithm proposed in paper [""Fast and differentiable simulation of driven quantum systems""](https://journals.aps.org/prresearch/abstract/10.1103/PhysRevResearch.3.033266) by Ross Shillito et.al, ; behaves much faster than standard numerical integrators in time-evolve driven quantum systems. ; Is there any plan to implement it in the qutip, or it has been implemented in qutip.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2394:275,integrat,integrators,275,https://qutip.org,https://github.com/qutip/qutip/issues/2394,1,['integrat'],['integrators']
Integrability,"### Describe the Issue!. I am writing a code for a quantum thermal machine which includes both coherent and dissipative time evolutions in its different stages of operation. However, evolving the system with ""mesolve"" function of QuTiP (which uses either Adams or BDF methods) and Runge-Kutta gives different results. My code has time dependent Hamiltonians and collapse operators. For demonstration purposes I wrote a simple code which deals with the master equation of a time-dependent harmonic oscillator of mass and frequency equal to 1. The jump operator is the position operator times a time-dependent coefficient. . ```python; import numpy as np; import scipy as sp; from qutip import *; ; tend = 5; tvec = np.linspace(0,tend,1000); ω1 = 1 #initial frequency; ω2 = 2 #final frequency; gamma = 1 #dissipation rate; ; def omg_fun(t, args): #time-dependent frequency; s = t/tend; ω_t = ω1 + 10*(ω2-ω1)*s**3 - 15*(ω2-ω1)*s**4 + 6*(ω2-ω1)*s**5; return ω_t; ; def col_fun(t, args): #time dependent collapse operator coefficient; return np.sqrt(gamma * np.exp(-t)); ; def omg_fun_rk(t): #time-dependent frequency for RK45; s = t/tend; ω_t = ω1 + 10*(ω2-ω1)*s**3 - 15*(ω2-ω1)*s**4 + 6*(ω2-ω1)*s**5; return ω_t; ; def col_fun_rk(t): #time dependent collapse operator coefficient for RK45; return np.sqrt(gamma * np.exp(-t)); ; N=10; m = 1 #mass; ħ = 1; x = np.sqrt(ħ/(2*m*ω1))*(create(N)+destroy(N)) #position operator; p = 1j*np.sqrt((ħ*m*ω1)/2)*(create(N)-destroy(N)) #momentum operator; H = [(p**2)/(2*m), [(1/2)*m*x**2,omg_fun]]; c_ops = [[x,col_fun]]; rho_init = fock_dm(N,1); rhot_vec = mesolve(H,rho_init,tvec,c_ops); rhot_qutip = rhot_vec.states[-1]; ; #Right hand side of the master equation; def rhs(ρ,H,gamma,op):; c_op = np.sqrt(gamma)*op; res = -1j*(H*ρ - ρ*H)+(1/2)*(2*c_op*ρ*c_op.dag()-ρ*c_op.dag()*c_op-c_op*c_op.dag()*ρ); return res; ; #Runge-Kutta Solver; def rksolver(ρ,dt,H,gamma,op):; k1 = rhs(ρ,H,gamma,op); k2 = rhs(ρ+(dt/2)*k1,H,gamma,op); k3 = rhs(ρ+(dt/2)*k2,H,gamma,op); k4 = ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733:335,depend,dependent,335,https://qutip.org,https://github.com/qutip/qutip/issues/1733,5,['depend'],['dependent']
Integrability,"### Describe the Issue!. I have a function which uses `mesolve` to simulate our system (shown below). The Hamiltonian and the collapse operator includes both the time-dependent and time-independent terms. We find that the result differs a lot when we run the function get_moments with or without QobjEvo() on the time-dependent terms. . But in principle, the two alternatives should give us the same result, right? We are not sure which alternative is the one to follow. ```; def g_coeff(t, args):; t0 = args[""t0""] ; if t <= t0:; return 0; else:; return -(1/np.sqrt(t - t0)) . def get_moments(params, freq_setting, freq_unit=freq_unit):; N = params[""N""]; t0 = params[""t0""]/freq_unit; T = params[""T""]/freq_unit; gamma = params[""gamma""]*freq_unit; Omega = params[""Omega""]*freq_unit; tsteps = params[""tsteps""]. tlist = np.linspace(0, t0+T, tsteps) . # operators; sp = tensor(sigmap(), qeye(N)) #sigma_plus operator, raising operator; sm = tensor(sigmam(), qeye(N)) #sigma_minus operator, lowering operator; sz = tensor(sigmaz(), qeye(N)) #sigma_z operator; v = tensor(qeye(2), destroy(N)) # The virtual cavity for mode 1. # Lindblad operator; Ls = np.sqrt(gamma)* sm ; psi0 = tensor(basis(2,1), basis(N,0)); ; # collapse operators; c_ops= Ls +QobjEvo([v, g_coeff]). delta1_range, _ = get_delta(freq_setting, 'simulation'); ; l_a1,l_a1_dag_a1 = [],[]. for delta1 in delta1_range*freq_unit:; Hs = -1j* Omega/2 * (sp - sm) + delta1 * v.dag() * v ; Hv1 = 0.5*1j* np.sqrt(gamma)*(v * sp - v.dag() * sm) ; ; H = Hs +QobjEvo([Hv1, g_coeff]); ; output = mesolve(H, psi0, tlist, c_ops, [v, v.dag()*v], args={'t0':t0}) . l_a1.append(output.expect[0][-1]); l_a1_dag_a1.append(output.expect[1][-1]); return l_a1, l_a1_dag_a1; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2277:167,depend,dependent,167,https://qutip.org,https://github.com/qutip/qutip/issues/2277,2,['depend'],['dependent']
Integrability,"### Describe the Issue!. I have a question that is not really a bug or feature request (although it is, perhaps, a request for more documentation). I also don't know if this is the place to ask, please refer me elsewhere if it is not. I am trying to solve a problem with a time-dependent hamiltonian, time-dependent collapse operators, including calculating two-time-two-operator correllation functions. My questions are the following:. 1) The documentation only shows the use of square brackets for time-dependent terms. However, tuples also work, but give different behaviour. Is this desired? If its desired, can a description of the behaviour be added to the documentation?; In other words, what, in mesolve and correlation_2op_2t, is the difference between:; H = [H0, [H1, f1(t)], [H2, f2(t)]] and H = [H0, (H1, f1(t)), (H2, f2(t))] . 2) The same question as above goes for the collapse operators. . And, for me the most important question is the following; 3) For the system I try to simulate, I need to implement a collapse operator that is not simply of the shape shown in the documentation, but of the shape C_2 = f(t)*\hat{a} + c*\hat{b}. I've tried various ways to implement this, and some seem to work, but I cannot determine with certainty which is correct. Is it:; [C_0, C_1, [[\hat{a}, f(t)], [\hat{b}, c(t)]]]; (where c(t) is a dummy function that always outputs the (time-independent) value c?); Or is it:; [C_0, C_1, [(\hat{a}, f(t)), (\hat{b}, c(t))]]; Or is it something different entirely?. Thanks for your help!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2065:278,depend,dependent,278,https://qutip.org,https://github.com/qutip/qutip/issues/2065,3,['depend'],['dependent']
Integrability,"### Describe the Issue!. I used qutip to do the evolution of a Time-dependent Hamiltonian on a three-ion system, calling the package mesolve. I found something strange, the same Hamiltonian gives different results when I write the coefficient O[N-1-j][n] in a python function or in qobj , respectively. can anyone explain this? is it related to mesolve's feature?; Here are the two codes, which differ only in the position of O[N-1-j][n].; In the python function:; `H_globallight=[]. def parameter_carrer3(t, args):; parameter = 0; for i in range(num_tones):; parameter += r[i] * np.cos(w[i] * t + phi); return parameter * J. for j in range(N):; oper_list2 = [identity(numberofphon) for k in range(N)]; oper_list2[j] = a; oper_list3 = [identity(numberofphon) for k in range(N)]; oper_list3[j] = adag; oper_list4 = [identity(numberofphon) for k in range(N)]; for n in range(N):; def parameter_jn1(t, args):; parameter = 0; for i in range(num_tones):; parameter += r[i] * np.sin(w[i] * t + phi); return parameter * eta[j] * np.exp(-1j * v[j] * t) * J* O[N-1-j][n]; def parameter_jn2(t, args):; parameter = 0; for i in range(num_tones):; parameter += r[i] * np.sin(w[i] * t + phi); return parameter * eta[j] * np.exp(1j * v[j] * t)* J* O[N-1-j][n]; oper_list1 = [identity(2) for k in range(N)]; oper_list1[n] = sx ; H_globallight.append([tensor(oper_list2+oper_list1),parameter_jn1]); H_globallight.append([tensor(oper_list3+oper_list1),parameter_jn2]); oper_list1 = [identity(2) for k in range(N)]; oper_list1[j] = sx ; H_globallight.append([tensor(oper_list4 + oper_list1), parameter_carrer3]); `. In the qobj:. `H_globallight=[]. def parameter_carrer3(t, args):; parameter = 0; for i in range(num_tones):; parameter += r[i] * np.cos(w[i] * t + phi); return parameter * J. for j in range(N):; oper_list2 = [identity(numberofphon) for k in range(N)]; oper_list2[j] = a; oper_list3 = [identity(numberofphon) for k in range(N)]; oper_list3[j] = adag; oper_list4 = [identity(numberofphon) for k in range(N)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2161:68,depend,dependent,68,https://qutip.org,https://github.com/qutip/qutip/issues/2161,1,['depend'],['dependent']
Integrability,"### Describe the Issue!. I wanted to ask whether there was scope to include the functionality to return matrices in the time dependent functions of time dependent hamiltonians, rather than just scalar values?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1801:125,depend,dependent,125,https://qutip.org,https://github.com/qutip/qutip/issues/1801,2,['depend'],['dependent']
Integrability,"### Describe the Issue!. In #2002, we added a function to solve `Ax=b` problems using qutip data object (`Qobj.data`).; `counstat` was done prior to that PR and has it's own [wrapper around scipy's functions](https://github.com/qutip/qutip/blob/c499d44ead02bd16861efa67c3e133cf3b7ed9e5/qutip/solver/countstat.py#L77). ; It should be changed to use [`qutip.core.data.solve`](https://github.com/qutip/qutip/blob/c499d44ead02bd16861efa67c3e133cf3b7ed9e5/qutip/core/data/solve.py#L169). Ideally, we should add the capacity to pass options to this solver:; - `countstat_current_noise(.., method=""direct"", solve_opt={})`; - `_data.solve(A, b, solve_opt.pop(""method"", None), solve_opt)` <- name collision on `method`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2109:175,wrap,wrapper,175,https://qutip.org,https://github.com/qutip/qutip/issues/2109,1,['wrap'],['wrapper']
Integrability,### Describe the Issue!. Link to tutorial missing for v5 have been removed in #2264. - [ ] Convert superop-contract.ipynb to v5.; - [ ] Restore the link. https://github.com/qutip/qutip/pull/2264#discussion_r1394907226,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2266:107,contract,contract,107,https://qutip.org,https://github.com/qutip/qutip/issues/2266,1,['contract'],['contract']
Integrability,"### Describe the Issue!. Most of the functions in `random_objects.py` take an `N` input and an optional `dims`. Those input are redundant as the size (`N`) can be obtained from the `dims`. However the way they handle this inconsistent:; - Many functions, such as `rand_super`, `rand_dm`, check that the dims matches the size and raise an error if it doesn't.; - `rand_dm_ginibre`, `rand_super_bcsz` just pass the `dims` to `Qobj` without any checks.; - `rand_ket` has a default `N=0` and obtain the size from `dims` when `N` is `0`, but it raise a division per zero error when neither `N` nor `dims` is passed.; - `rand_ket_haar` also tries to obtain the size from `dims` when `N` is `0`, but the default value of `N` is `2`, thus one need to pass `N=0` to use it. `N=0` would fail almost everywhere else. Also some function have a default size, other not: `rand_unitary(N, ...)`, `rand_unitary_haar(N=2, ...)`. The interface of these functions need to be unified. Some options:; - `N` is always needed and `dims` are checked to match.; - A default of `None` is used for `N` and either `N` or `dims` is needed. If both are given, we check that they are compatible. If none are passed, we raise an appropriate error.; - (For `dev.major`) Remove the `dims` parameter and replace `N` with `dimensions`, which act as `N` if an integer is given and `dims` is a list is. This is already the behavior of `qeye` and `qzero`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1838:916,interface,interface,916,https://qutip.org,https://github.com/qutip/qutip/issues/1838,1,['interface'],['interface']
Integrability,"### Describe the Issue!. Not sure if it's a bug, but my qutip result seems unphysical to me: it appears that I got some perpetual oscillation in a dissipative system. What I modeled is a TLS driven by two tones, i.e.:; ```math; H = \frac{\omega_0}{2} \begin{pmatrix} -1 & 0 \\ 0&1 \end{pmatrix} + \begin{pmatrix} 0 & 1 \\ 1&0 \end{pmatrix} (\Omega_1\cos\omega_1 t + \Omega_2\cos\omega_2 t); ```; In addition, the TLS has a spontaneous emission rate $\Gamma_{21}$. To implement the above system, I used the following code (fully time-dependent, no rotating-wave approximation):; ```python; from numpy import pi, cos, sqrt, linspace; import matplotlib.pyplot as plt; from qutip import (; sigmax, sigmaz, fock_dm, mesolve, ; basis, Qobj). omega0 = 100*2*pi # TLS atom level spacing; omega1 = omega0 # 1st tone, resonant with the TLS; omega2 = omega0 -1*2*pi # 2nd tone, detuned from TLS; omegaR1 = 1*2*pi # Rabi freq of 1st tone; omegaR2 = 1*2*pi # Rabi freq of 2nd tone; gamma21 = 1 # spontaneous emission rate. H0 = -sigmaz()/2*omega0; H1, H2 = sigmax()*omegaR1, sigmax()*omegaR2; t = linspace(0,10,501); def H1_coeff(t, args):; return cos(omega1*t); def H2_coeff(t, args):; return cos(omega2*t). H = [H0, [H1, H1_coeff], [H2, H2_coeff]]; c_ops = [Qobj([[0,1],[0,0]])*sqrt(gamma21)]; e_ops = [fock_dm(2,0), fock_dm(2,1)]; psi0 = basis(2,0); result = mesolve(H, psi0, t, c_ops, e_ops). plt.plot(t, result.expect[1]); plt.ylim(0,1); ```; One can directly run the above code to produce a perpetual oscillation, which seems unphysical to me. If one suppresses either tone (e.g. by setting `omegaR1` or `omegaR2` to zero), or set the 2nd tone's detuning to zero (i.e. `omega2 = omega0`), one gets the expected damping behavior at large times.; ![Untitled](https://github.com/qutip/qutip/assets/29622362/26578e8e-6665-4852-92a6-d9fe0e888fdb). Did I implement this physics correctly? Or is qutip being weird?. Finally, my system info:; ```; QuTiP Version: 4.7.5; Numpy Version: 1.24.3; Scipy Version: 1.10.1; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2356:533,depend,dependent,533,https://qutip.org,https://github.com/qutip/qutip/issues/2356,1,['depend'],['dependent']
Integrability,"### Describe the Issue!. The Monte Carlo solver works with kets instead of density matrices. It doesn't allow superoperators as c_ops (error message: c_ops are not consistant with psi0). Since my master equation has lindblad dissipators (which are superoperators), I have trouble using mcsolve. The only way I can think of is converting the initial state to a superket. But that has type operator-ket and QuTip doesn't seem to want me do type casting. How can I circumvent this problem?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2060:141,message,message,141,https://qutip.org,https://github.com/qutip/qutip/issues/2060,1,['message'],['message']
Integrability,"### Describe the Issue!. The `filelock` package is required for cython-compiling coefficient functions. However, QuTiP currently does not warn if `filelock` is missing, and the dependency does not seem to be documented anywhere. Instead, QuTiP silently defaults to a `StrFunctionCoefficient`, i.e., to using `eval`. This behavior comes from here:. https://github.com/qutip/qutip/blob/7892453dd3ae03ce8ac17caffc0457df200a69ec/qutip/core/coefficient.py#L256-L264. The default value of `use_cython` is therefore set to `False` if `filelock` is missing. The result is the following:. ```python; $ git clone git@github.com:qutip/qutip.git .; $ conda create -n qutip-tmp python cython numpy scipy setuptools packaging wheel pytest ipython matplotlib; $ conda activate qutip-tmp; $ python setup.py install; $ cd ~; $ ipython; 	import qutip; 	coeff = qutip.coefficient(""sin(t)""); 	type(coeff); 	> qutip.core.cy.coefficient.StrFunctionCoefficient; 	exit(); ```. Since cython is installed and there was no warning or error, I think it would be reasonable for the user to assume that the coefficient would be compiled, but it is not. Only when `use_cython` is explicitly enabled, we get an error:. ```shell; In [5]: coeff = qutip.coefficient(""sin(t)"", compile_opt=qutip.CompilationOptions(use_cython=True)); ---------------------------------------------------------------------------; NameError Traceback (most recent call last); Cell In[5], line 1; ----> 1 coeff = qutip.coefficient(""sin(t)"", compile_opt=qutip.CompilationOptions(use_cython=True)). File ~/miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/core/coefficient.py:170, in coefficient(base, tlist, args, args_ctypes, order, compile_opt, function_style, boundary_conditions, **kwargs); 168 for type_ in coefficient_builders:; 169 if isinstance(base, type_):; --> 170 return coefficient_builders[type_](base, **kwargs); 172 if callable(base):; 173 op = FunctionCoefficient(base, args.copy(), ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:177,depend,dependency,177,https://qutip.org,https://github.com/qutip/qutip/issues/2162,1,['depend'],['dependency']
Integrability,"### Describe the Issue!. qutip mesolve gives me different population evolve depending on that initial state is state vector or density matrix. And, in some situation, it gives me negative population. It doesn't make sense... Does anyone encounter this problem?. Population evolvement with State vector as initial state; ![image](https://github.com/qutip/qutip/assets/105193507/f4857bde-cade-4fac-ad31-33edc7d93b63). Pupulation evolvement with Density matrix as initial state; ![image](https://github.com/qutip/qutip/assets/105193507/d3e82af0-e0d7-43fa-8844-b68887c9a394). Here is my code: I'm just producing Rabi oscillation by applying microwave whose frequency is the difference between eigenenery［1］ and eigenenergy［0］. ```; import qutip as qt; import numpy as np; import matplotlib.pyplot as plt. # Constants (G or us). Sx, Sy, Sz = qt.jmat(1); S0 = qt.qeye(3). ge = 2 * np.pi * -2.8 # rad MHz/G. B = 60 # G; theta = 0 # degree; Bx = B * np.sin(np.pi * theta / 180); Bz = B * np.cos(np.pi * theta / 180). def H_GS():; D = 2 * np.pi * 2870 # rad MHz; H_D = D * (Sz**2 - 2/3 * S0); H_B = ge * (Bx * Sx + Bz * Sz); H_GS = H_D + H_B; return H_GS. ee, ev = H_GS().eigenstates(). def evolve_test():; H_MW = ge * Sx; def H_MW_coeff(t, args):; omega = ee[1] - ee[0]; Omega = 1/0.1/ge; return Omega * np.cos(omega * t); H = [H_GS(), [H_MW, H_MW_coeff]]; psi0 = qt.basis(3, 0); rho0 = qt.ket2dm(qt.basis(3, 0)); rhoe = qt.ket2dm(qt.basis(3, 0)); t = np.linspace(0, 4, 4 * 1000); result = qt.mesolve(H, rho0, t, progress_bar=True); states = result.states; popm = [qt.expect(rhoe, state) for state in states]; plt.plot(t, popm); plt.show(); return 0. evolve_test(); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2229:76,depend,depending,76,https://qutip.org,https://github.com/qutip/qutip/issues/2229,1,['depend'],['depending']
Integrability,"### Discussed in https://github.com/qutip/qutip/discussions/2255. <div type='discussions-op-text'>. <sup>Originally posted by **shiv6510** November 2, 2023</sup>; Hi, I am encountering some strange dynamics with mesolve that I don't understand. I have a simple hamiltonian of a harmonic oscillator with resonant frequency of 5 GHz. If I evolve the initial state (|0> + |1>)/sqrt(2) under the system hamiltonian (no time dependence) I would expect the expectation values of the |0> and |1> to stay at 0.5. (Amplitudes of eigenstates should not change). . However, when I plot the expectation values, I see a splitting of overtime, where the expectation value of |0> grows linear over time and |1> shrinks linearly with time. Looking through the forums, I figured it was an issue with the ode solver but playing around with the options (max_steps, rtol, atol, etc.) only changes the rate at which the expectation value drops (or grows); it doesn't get rid of the splitting. Any insight into this problem would be of great help :). Code:; ***********************************************************************; import matplotlib.pyplot as plt; from numpy import *; from scipy.optimize import fsolve; from qutip import *. a = destroy(20); wr = 5 # GHz; H = wr * a.dag() * a. e_nrgs, e_states = H.eigenstates(). psi0 = (e_states[0] + e_states[1]).unit(); wait_time = 2000; t_list = arange(0,wait_time+0.02, 0.01). options = Options(max_step=1/(wr * 100)); output = sesolve(2 * pi * H, ; psi0, ; t_list, ; e_ops=[e_states[0].proj(), e_states[1].proj()], ; args=None,; options=options,; progress_bar=True); ***********************************************************************. Plot:. plt.plot(t_list, output.expect[0], color='red', label='<0>'); plt.plot(t_list, output.expect[1],label='<1>'); plt.xlabel('Time[ns]'); plt.ylabel('Expectation Value'); plt.legend(); plt.show(). <img width=""840"" alt=""image"" src=""https://github.com/qutip/qutip/assets/43760523/c55016b4-5fbc-4032-b8e0-d143152250bb"">. </div>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2258:420,depend,dependence,420,https://qutip.org,https://github.com/qutip/qutip/issues/2258,1,['depend'],['dependence']
Integrability,"### Problem Description. Currently, there is no great support for working with direct product spaces in qutip. For that reason, both the HEOM solver and qutip-qoc contain code manipulating data layer matrices directly. Most commonly, direct product spaces arise because of coupled differential equations. For example, we might have two states $|\psi\rangle$ and $|\psi'\rangle$ satisfying. $$ \partial_t \begin{pmatrix} |\psi\rangle \\\\ |\psi'\rangle \end{pmatrix} = -i \begin{pmatrix} H & 0 \\\\ H' & H \end{pmatrix} \begin{pmatrix} |\psi\rangle \\\\ |\psi'\rangle \end{pmatrix} $$. then the object $( |\psi\rangle, |\psi'\rangle )$ is a direct product. Some applications:; * HEOM is a coupled differential equation for the state $\rho$ of an open system, and a number of auxiliary density operators $\rho_{\mathbf n}$.; * The goat algorithm in qutip-qoc works by integrating coupled Schroedinger equations for two ore more unitary operators.; * In full counting statistics, we can find the first n derivatives of a moment-generating function by solving coupled Lindblad equations for n+1 operators.; * A direct product state could potentially be used instead of a tensor product state in cases where we know that two systems are only coupled classically and there will never be any coherences between them. ### Proposed Solution. I think that we would need the following:; * A way to construct objects such as $( |\psi\rangle, |\psi'\rangle )$ and the matrix in the equation above from their constituents.; * A way to describe the dimensions of these objects.; * A way to extract the constituents from these objects at the end of the calculation.; * The differential equations mentioned in the applications above should be solvable with `sesolve` and/or `mesolve`.; * Note that in the first three applications, we actually have direct products of operator spaces (which might make things complicated?). ### Alternate Solutions. If all the involved Hilbert spaces have the same dimension, then $\mat",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2384:866,integrat,integrating,866,https://qutip.org,https://github.com/qutip/qutip/issues/2384,1,['integrat'],['integrating']
Integrability,"### Problem Description. From version 5.0, the subpackage `qutip.qip` will be removed and replaced by a separate package `qutip-qip`. To make it easier for others to migrate from 4.7 to 5.0, we can set up `qutip-qip` as an optional plug-in for qutip, so that if `qutip-qip` is installed, the `qutip.qip` name space can be used as before. ### Expected behaviour; - If only `qutip` is installed, importing `qutip.qip` will raise an `ImportError` with instruction for installing `qutip_qip`.; - If `qutip-qip` is installed, using `qutip.qip` will automatically use the `qutip_qip` namespace, with no difference in the user interface.; - Update `setup.cfg` so that `pip install qutip[qip]` will automatically install `qutip_qip`. E.g. the following should work if `qutip`-5.0 and `qutip-qip` are both installed; ```python; # The following should be the same; from qutip.qip.circuit import QubitCircuit; from qutip_qip.circuit import QubitCircuit; ```. ### Proposed Solution. See https://github.com/qutip/qutip/discussions/1500 for ideals on the implementation. **Note: The implementation should be done against the `dev.major` branch of qutip.**",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1893:620,interface,interface,620,https://qutip.org,https://github.com/qutip/qutip/issues/1893,1,['interface'],['interface']
Integrability,"### Problem Description. I'm wondering if it's possible to use `mesolve` to find the evolution of an arbitrary operator in the Heisenberg picture, where the operators carry all of the time dependence, and thus evolve according to the _adjoint_ Lindblad equation. For some operator $O$, the coherent part is $+i [H,O]$ and the dissipator for a collapse operator $L$ is $L^\dagger O L - \frac{1}{2} L^\dagger L O - \frac{1}{2} O L^\dagger L $.; In particular, I was wondering if there is a way to ""hack"" mesolve to do this without any modification, such as using $-O$ instead of $O$ so that it matches the coherent Schrodinger picture evolution $-i [H,O]$ that `mesolve` does, but I'm not sure about the dissipator. Using $L^\dagger$ instead of $L$ would also change the anticommutator term, which actually shouldn't change between the two pictures. Is there a sneaky way of making this work without too much modification? Otherwise, perhaps this would be a good feature to add?. ### Proposed Solution. Instructions on how to use `mesolve` to solve for the time evolution of an operator in the Heisenberg (not Schrodinger) picture, or an extension of `mesolve` to allow for this, possibly through an option in the function call like `picture=True` which defaults to Schrodinger but if False uses the Heisenberg picture. ### Alternate Solutions. _No response_. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2160:189,depend,dependence,189,https://qutip.org,https://github.com/qutip/qutip/issues/2160,1,['depend'],['dependence']
Integrability,"### Problem Description. Some the the `??solve` functions inconsistent signature:; Almost all of them start with `H, state0, tlist`, the collapse if used, expectation, `args` and finally options. But ; - For `brmesolve`, `c_ops` comes after `e_ops`.; - For HEOM: the bath is between the Hamiltonian and the initial state.; - Stochastic solver have `e_ops` `options` and `args` as keyword only.; - `ntraj` is positional for `mcsolve`, but keyword only for stochastic solver.; - Solver specific parameters are between `e_ops` and `args` for floquet, between `args` and `options` for bloch redfield and after `sc_ops` in stochastic. ### Proposed Solution. Make `e_ops`, `args`, `options` and `ntraj` keyword only from 5.3, with a warning message from 5.1. This would make is all signatures, except HEOM, match. For HEOM, the `bath` and `max_depth` should be swapped for the `state` and `tlist`. ### Alternate Solutions. _No response_. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2489:735,message,message,735,https://qutip.org,https://github.com/qutip/qutip/issues/2489,1,['message'],['message']
Integrability,"### Problem Description. String based coefficients with time-dependent Hamiltonians in qutip 4.7 causes compiled files (.so, .o, .cpp files) to be stored into a hidden folder `.pyxbld` in the user's home directory. This is a problem because, when using qutip on an HPC cluster (the cluster uses Red Hat Enterprise Linux 8), I submit multiple qutip simulation jobs to the cluster, each of which generating cached file in my home directory and using up my storage. Qutip is not aware of these files and they are never deleted. The root cause of the problem is in the top level __init__.py, on line 72, `_pyxbuilder.install()`, which calls the install() function in qutip.cy.pyxbuilder, on line 47:. ```; def install():; """"""Install the pyximport interface.""""""; return pyximport.install(setup_args={'include_dirs': [np.get_include()]}); ```; Since the `build_dir` keyword argument is not supplied to `pyximport.install`, the default path is used. ### Proposed Solution. Supply an option in `qutip.settings`, or `qutiprc`, or `qutip.solver.Options` to specify a custom path for the compiled files. This path is then passed to `pyximport.install` as the `build_dir` argument when `__init__.py` is run, upon first import of qutip. ### Alternate Solutions. _No response_. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2230:61,depend,dependent,61,https://qutip.org,https://github.com/qutip/qutip/issues/2230,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"### Problem Description. There are a few issues with graphic capacities in Qutip. 1. Most are not tested. Only Bloch.py has some tests associated. While testing graphs is not evident, matplotlib has testing functions to compare graphs etc. and just running it to ensure that no errors are raised would be a nice start. Here are some files and their coverage:; - tomography.py 50%; - visualization.py 8%; - distribution.py 23%; - bloch.py 55%; - bloch3d.py 8%. 2. The interface is not uniform. Most functions take 'fig' and 'ax', but `hilton` only takes 'ax' but no 'fig'. Maybe one third of the function in visualization accepts 'title' and half a 'figsize'. The order of these options is also inconsistent, 'fig', 'ax' can be the first parameters or the last... As seen in #1573, some want more control so `matrix_histogram` accepts `options`. I am all for more control, but being available for only one function feels wrong. On the bloch side, there is a mismatch between `add_vectors`, `add_points`, which takes `color` and `alpha` as input, and `add_arc`, `add_line` which takes `**kwargs`. 3. The colorblind mode should works everywhere, but presently only `hilton` support it. ### Proposed Solution. So for v5 release, the interface of all these should be clean and uniform, with proper tests. . ### Alternate Solutions. _No response_. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1910:467,interface,interface,467,https://qutip.org,https://github.com/qutip/qutip/issues/1910,2,['interface'],['interface']
Integrability,"#1496 updated the Bloch sphere to prevent distortion in matplotlib 3.3+. This appears to have inadvertantly pinned the effective matplotlib dependency to `matplotlib>=3.3`, because it uses `Axes3D.set_box_aspect` which didn't exist before then. We might need to add a small version-dependent switch beacuse matplotlib 3.3 is under a year old, so it's a very recent version to be depending on. I would like to keep the optional matplotlib dependency to at least `matplotlib>=3` if at all possible, since I don't think we're using much cutting-edge stuff. Note we now have `packaging` as a run-time dependency, which will make any version comparisons much easier (e.g. ; ```python; from packaging.version import parse as parse_version. if parse_version(matplotlib.__version__) > parse_version('3.3'):; ...; else:; ...; ```. @BoxiLi: do you have thoughts?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1502:140,depend,dependency,140,https://qutip.org,https://github.com/qutip/qutip/issues/1502,5,['depend'],"['dependency', 'dependent', 'depending']"
Integrability,"#1651 create a time-dependent bloch redfield tensor, but do not create a new `brmesolve` using it and remove the `br_codegen.py` etc. that uses it. So it won't solve it yet.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1727#issuecomment-980026178:20,depend,dependent,20,https://qutip.org,https://github.com/qutip/qutip/pull/1727#issuecomment-980026178,1,['depend'],['dependent']
Integrability,"#6445</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Windows build improvements <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6562"">#6562</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Only use ASCII characters in C source file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6691"">#6691</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a> [<a href=""https://github.com/hmaarrfk""><code>@​hmaarrfk</code></a>]</li>; <li>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a> [<a href=""https://github.com/npjg""><code>@​npjg</code></a>]</li>; <li>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>pylint warnings <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6659"">#6659</a> [<a href=""https://github.com/marksmayo""><code>@​marksmayo</code></a>]</li>; <li>Added",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:3283,depend,dependabot,3283,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,'Error calculating H' when trying to use mcsolve() for time-dependent Hamiltonians,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1368:60,depend,dependent,60,https://qutip.org,https://github.com/qutip/qutip/issues/1368,1,['depend'],['dependent']
Integrability,"'m unable to run a time-dependent Hamiltonian, or even compile one with a string coefficient. . I tried to copy the example code on the website ; [](https://qutip.org/docs/latest/guide/dynamics/dynamics-time.html); as well as write a simple script (below), but both fail. The output is a traceback which ends with the following errors and exceptions:; ```; **ImportError: Building module cqobjevo_compiled_coeff_8478972439442 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']; Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_8478972439442.pyx**; ```. I'd appreciate some help, as my code requires the string input to run faster, with the speed-up offered by Cython. It is quite slow with the function-based input. . ### Code to Reproduce the Bug. ```shell; import qutip as qp; import numpy as np; import matplotlib.pyplot as plt. excited = qp.basis(2, 1); ground = qp.basis(2, 0). H0 = qp.sigmaz(); H1 = qp.sigmax() # time-dependent term. H = [H0,[H1, 'A * exp(-(t / sigma) ** 2)']]. t = np.linspace(-1, 1, 200) # Define time vector; args = {'A': 6, 'sigma': 0.145}; output = qp.mesolve(H, ground, t, e_ops = [qp.sigmaz()], args=args); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; DistutilsPlatformError Traceback (most recent call last); ~\Anaconda3\lib\site-packages\pyximport\pyximport.py in load_module(name, pyxfilename, pyxbuild_dir, is_package, build_inplace, language_level, so_path); 214 so_path = build_module(module_name, pyxfilename, pyxbuild_dir,; --> 215 inplace=build_inplace, language_level=language_level); 216 mod = imp.load_dynamic(name, so_path). ~\Anaconda3\lib\site-packages\pyximport\pyximport.py in build_module(name, pyxfilename, pyxbuild_dir, inplace, language_level); 190 inplace=inplace,; --> 191 reload_support=pyxargs.reload_support); 192 assert os.path.exists(so_path), ""Cannot find: %s"" % so_path. ~\Anaconda3\lib\site-packages",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914:1023,depend,dependent,1023,https://qutip.org,https://github.com/qutip/qutip/issues/1914,1,['depend'],['dependent']
Integrability,"(<a href=""https://redirect.github.com/pallets/jinja/issues/1918"">#1918</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/19a55db3b411343309f2faaffaedbb089e841895""><code>19a55db</code></a> Make nested-trans-block exceptions nicer</li>; <li><a href=""https://github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7""><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>; <li><a href=""https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23""><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.2...3.1.3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:3580,depend,dependabot-security-updates,3580,https://qutip.org,https://github.com/qutip/qutip/pull/2291,1,['depend'],['dependabot-security-updates']
Integrability,"(tc**2 * (2+GammaR/GammaL) + GammaR**2/4 + eps_vec**2)); noise_target = current_target * (; 1 - (8*GammaL*tc**2*(4 * eps_vec**2 * (GammaR - GammaL); + GammaR*(3*GammaL*GammaR + GammaR**2 + 8*tc**2)); / (4*tc**2*(2*GammaL + GammaR) + GammaL*GammaR**2; + 4*eps_vec**2*GammaL)**2); ); ; np.testing.assert_allclose(current, current_target, atol=1e-4); > np.testing.assert_allclose(noise, noise_target, atol=1e-4); /nix/store/7v2yn16c9sr8ysdpan9yd2a60a1sizv7-python3.11-qutip-4.7.5/lib/python3.11/site-packages/qutip/tests/test_countstat.py:58: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; args = (<function assert_allclose.<locals>.compare at 0xfffeb718f880>, array([0.0007729 , 0.00087857, 0.00099616, 0.00112145,...9, 0.00142197, 0.00144314, 0.00142247, 0.00135199,; 0.0012452 , 0.00112145, 0.00099616, 0.00087857, 0.0007729 ])); kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0.0001', 'verbose': True}; @wraps(func); def inner(*args, **kwds):; with self._recreate_cm():; > return func(*args, **kwds); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=0.0001; E ; E Mismatched elements: 1 / 20 (5%); E Max absolute difference: 0.00035163; E Max relative difference: 0.26008554; E x: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.001704, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]); E y: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.001352, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]); /nix/store/dz8lm4h0ivibad5kfc0ya3p3zqyd2fyf-python3-3.11.7/lib/python3.11/contextlib.py:81: AssertionError; =========================== short test summary info ============================; FAILED ../tests/test_countstat.py::test_dqd_current - AssertionError:; ```. ### Expected Be",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2316:2505,wrap,wraps,2505,https://qutip.org,https://github.com/qutip/qutip/issues/2316,1,['wrap'],['wraps']
Integrability,"):; for jj in range(ptr[ii], ptr[ii+1]):; k = ind[jj]; col_sum[k] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:316:29: ambiguous overloaded method; ; Error compiling Cython file:; ------------------------------------------------------------; ...; cdef size_t ii, jj; cdef double * row_sum = <double *>PyDataMem_NEW_ZEROED(nrows, sizeof(double)); cdef double max_row = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; row_sum[ii] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:335:30: ambiguous overloaded method; Compiling qutip/cy/spmatfuncs.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/stochastic.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/sparse_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/graph_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/interpolate.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/spmath.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/heom.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/math.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/cy/spconvert.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/ptrace.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:1714,depend,depends,1714,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['depend'],['depends']
Integrability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ x] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [] Please add tests to cover your changes if applicable.; - [ x] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. **Description**; Updating tests in the metrics,superop_reps and tensor modules to pytests. **Changelog**; - Updating unittests to pytests; - Rechecking environment dependent expected failure cases",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487:943,depend,dependent,943,https://qutip.org,https://github.com/qutip/qutip/pull/1487,1,['depend'],['dependent']
Integrability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; This PR presents a prototype for emitting Quantum Intermediate Representation (QIR) modules from `qutip.qip.QubitCircuit` objects, making it easier to interoperate QuTiP with other quantum software tools and platforms. The prototype in this PR uses the [PyQIR](https://qir-alliance.github.io/pyqir/) library for Python to handle QIR generation, isolating QIR generation functionality as an optional dependency. . **Changelog**. - Support for emitting QIR from circuit objects.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1781:1465,depend,dependency,1465,https://qutip.org,https://github.com/qutip/qutip/pull/1781,1,['depend'],['dependency']
Integrability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [x] Please add tests to cover your changes if applicable.; - [x] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. **Description**; There are three major parts to this PR (more or less interlinked): . - Adds `Simulator` class to abstract away circuit run functionality. This enables future contributors to add to exact simulation (and potentially other ways of simulation) easily. It also has a `step` function which allows to go over the circuit step-by-step which could enable interesting visualisations.; - Adds `Result` class as a wrapper around results obtained from circuit simulations. ; - Adds a more efficient mode to `gate_sequence_product` function which allows for faster pre-computation of unitaries. **Changelog**; Added `Simulator`, `Result` class ; Added new mode to `gate_sequence_product`, `QubitCircuit.propagators`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1331:1198,wrap,wrapper,1198,https://qutip.org,https://github.com/qutip/qutip/pull/1331,1,['wrap'],['wrapper']
Integrability,"**Checklist**; This rewrite the stochastic solver to use the class interface. - `smesolve`, `ssesolve` have been rewritten to match other solver with matching class interface `SMESolver`, `SSESolver`. The main change is that the options used to be passed as keywords (`**kwargs`) and are now passed as an options dict.; - `m_ops` and `dW_factors` are properties of the classes, but not available to overwrite through the function interface. ; - The multiples end condition (`target_tol`, `timeout`) are added.; - The `solver` keyword is now `method` options, as it is in other solver.; - The method that was referring the homodyne or heterodyne detection is now the `heterodyne` keyword. ie before `method=""heterodyne""` now `heterodyne=True`.; - The default integration method is now `rouchon`, instead of `taylor1.5`. ie the method coming from a physic paper and not a mathematics textbook. . - The stochastic integration methods have been spitted in smaller chunk instead of the huge classes in _stochastic.pyx. I kept most methods, only skipping the taylor order 2.0 method. The python interface is kept very similar to the `Integrator` as `SIntegrator`, the main difference being that `set_state` and `get_state` use an extra random number generator with the time and state. The integration methods are usually 5%~10% slower than they where for medium size problems (shape ~100). Most method are computed the same way as before, but the rouchon method no longer use super operator, but keep the density matrix as a matrix and not an oper-ket. - The derivative computation for used by the integration method has also been split into multiple functions and made only available for `smesolve`. For there methods to be valid, the each diffusion contribution must commute. For `smesolve`, this means that each `sc_ops` must commute, as documented. For `ssesolve`, each `sc_ops` must not only commute, but also commute with other `sc_ops`'s adjoint, this last part being missing from v4's documentation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131:67,interface,interface,67,https://qutip.org,https://github.com/qutip/qutip/pull/2131,5,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"**Describe the bug**; As described in the documentation (e.g https://qutip.org/docs/latest/guide/dynamics/dynamics-time.html#time-interp) it is possible to replace string time-dependent functions (e.g. for a Hamiltonian) using Cubic_Spline. This is the case if one has data describing the time-dependent object which is not easy to write analytically. In `brmesolve` the only option is to provide time-dependent functions as strings (or Cubic_Spline). This works fine for the Hamiltonian, but the `a_ops` fail a check in cy/brcodegen.py when using a Cubic_Spline type. **To Reproduce**; ```python; import qutip as qt; import numpy as np. x = np.arange(0, 10, 0.1); decay = np.exp(-x); decay_spline = qt.Cubic_Spline(x[0], x[-1], decay). sol1 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), ""exp(-w)""]]) # works fine; sol2 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), ""exp(-w)""]]) # works fine; sol3 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; sol4 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; ```. On the cases it gives an error (sol3, sol4), it is `Exception: Invalid a_td_term.` from br_codegen.py (`aop_td_funcs()`).; Note that the Cubic_Spline representation works perfectly fine for the Hamiltonian part (e.g. sol2). It also appears to work fine if specifying `c_ops`. **Expected behavior**; My understanding from the documentation regarding time-dependent objects is that the Cubic_Spline representation should work for brmesolve at all argument positions, where appropriate (not just the Hamiltonian and c_ops). For example, at the above URL, we have: <br/>; ""When combining interpolating functions with other Python functions or strings, the interpolating class will automatically pick the appropriate method for calling the class. That is to say that, if for example, you have other time-de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1624:176,depend,dependent,176,https://qutip.org,https://github.com/qutip/qutip/issues/1624,3,['depend'],['dependent']
Integrability,"**Describe the bug**; I want to compute the 2op_2t correlation function for a problem that I have. The documentation says that the steady state will be computed if I pass `state0=None`. In the source code, whenever this is passed, the time list `tlist` gets overridden to `[0]`. No warnings or messages are shown to the user that whatever previous `tlist` the user passed is being overridden. I think either a warning or the possibility that the list is not overridden should be the default behaviour. **To Reproduce**; Please provide a minimal working example. For instance:. ```python; from qutip import *; from qutip.steadystate import steadystate; from qutip.correlation import correlation_2op_2t; import numpy as np. H = 2 * np.pi * 0.1 * sigmax(). c1 = correlation_2op_2t(; H,; state0=None,; tlist = [0, 0.1],; taulist = [0],; c_ops=[sigmay()],; a_op=sigmaz(),; b_op=sigmax(),; ). ss = steadystate(H, [sigmay()]); c2 = correlation_2op_2t(; H,; state0=ss,; tlist = [0, 0.1],; taulist = [0],; c_ops=[sigmay()],; a_op=sigmaz(),; b_op=sigmax(),; ); print(c1); print(c2); ```; The terminal out put is; ```; [[0.+0.j]]; [[0.+0.j]; [0.+0.j]]; ```. **Expected behavior**; `c1` and `c2` should be the same. **Your Environment**; ```zsh; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li and Jake Lishman.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.0; Numpy Version: 1.20.2; Scipy Version: 1.6.3; Cython Version: None; Matplotlib Version: 3.4.1; Python Version: 3.8.5; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platfor",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1566:294,message,messages,294,https://qutip.org,https://github.com/qutip/qutip/issues/1566,1,['message'],['messages']
Integrability,"**Describe the bug**; It looks like the pypi package doesn't have cython as a dependency?. **To Reproduce**; Do a ""pip3 install cython"" on a fresh ubuntu 20.04 install (i had already installed numpy and scipy). ** This is what happens when I try it**; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Downloading qutip-4.5.0.tar.gz (3.5 MB); |████████████████████████████████| 3.5 MB 509 kB/s ; ERROR: Command errored out with exit status 1:; command: /usr/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""'; __file__='""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' egg_info --egg-base /tmp/pip-install-69anjthq/qutip/pip-egg-info; cwd: /tmp/pip-install-69anjthq/qutip/; Complete output (5 lines):; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-install-69anjthq/qutip/setup.py"", line 52, in <module>; from Cython.Build import cythonize; ModuleNotFoundError: No module named 'Cython'; ----------------------------------------; ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output. ** Installing cython fixes it **. jevon@bb8:~$ pip3 install cython; Collecting cython; Downloading Cython-0.29.17-cp38-cp38-manylinux1_x86_64.whl (2.0 MB); |████████████████████████████████| 2.0 MB 721 kB/s ; Installing collected packages: cython; Successfully installed cython-0.29.17; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Using cached qutip-4.5.0.tar.gz (3.5 MB); Requirement already satisfied: cython>=0.21 in ./.local/lib/python3.8/site-packages (from qutip) (0.29.17); Requirement already satisfied: numpy>=1.12 in ./.local/lib/python3.8/site-packages (from qutip) (1.18.3); Requirement already satisfied: scipy>=1.0 in ./.local/lib/python3.8/site-packages (from qutip) (",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1246:78,depend,dependency,78,https://qutip.org,https://github.com/qutip/qutip/issues/1246,1,['depend'],['dependency']
Integrability,"**Describe the bug**; Tried to access the tutorial for the teleportation protocol (under quantum information processing). **To Reproduce**; [Qutip Tutorials](https://qutip.org/tutorials.html#quantum-information-processing). **Screenshots**; <img width=""418"" alt=""image"" src=""https://user-images.githubusercontent.com/62545147/142829630-60ac71b2-eb2e-41a8-b307-ad83ab0f681a.png"">. <br><br>. ![image](https://user-images.githubusercontent.com/62545147/142829702-1dee6e69-21ca-4dbc-a717-e74f9ef80cda.png)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1721:73,protocol,protocol,73,https://qutip.org,https://github.com/qutip/qutip/issues/1721,1,['protocol'],['protocol']
Integrability,"**Describe the issue**; I tried to Execute the code ""Time-dependent master equation: Landau-Zener transitions"" in QuTiP HP's Example notebooks(http://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/examples/landau-zener.ipynb) ,and I get the following error message. ; Could someone help please?. Error message:; ---------------------------------------------------------------------------; UnboundLocalError Traceback (most recent call last); <ipython-input-7-f9c1fc837f05> in <module>; 1 start_time = time.time(); ----> 2 p_ex = qubit_integrate(delta, eps0, A, omega, gamma1, gamma2, psi0, tlist, ""dynamics""); 3 print('dynamics: time elapsed = ' + str(time.time() - start_time)). <ipython-input-5-8172adafcb2d> in qubit_integrate(delta, eps0, A, omega, gamma1, gamma2, psi0, tlist, option); 33 if option == ""dynamics"":; 34 # evolve and calculate expectation values; ---> 35 output = mesolve(H, psi0, tlist, c_op_list, [sm.dag() * sm], H_args); 36 ; 37 return output.expect[0]. ~\Anaconda3\lib\site-packages\qutip\mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 252 ss = H; 253 elif isinstance(H, (list, Qobj, QobjEvo)):; --> 254 ss = _mesolve_QobjEvo(H, c_ops, tlist, args, options); 255 elif callable(H):; 256 ss = _mesolve_func_td(H, c_ops, rho0, tlist, args, options). ~\Anaconda3\lib\site-packages\qutip\mesolve.py in _mesolve_QobjEvo(H, c_ops, tlist, args, opt); 298 ; 299 nthread = opt.openmp_threads if opt.use_openmp else 0; --> 300 L_td.compile(omp=nthread); 301 ; 302 ss = SolverSystem(). ~\Anaconda3\lib\site-packages\qutip\qobjevo.py in compile(self, code, matched, dense, omp); 1557 self.args,; 1558 self.dynamics_args,; -> 1559 self.tlist); 1560 coeff_files.add(file_); 1561 self.coeff_files.append(file_). ~\Anaconda3\lib\site-packages\qutip\qobjevo_codegen.py in _compiled_coeffs(ops, args, dyn_args, tlist); 122 code = _make_code_4_cimport(ops, args, dyn_args, tlist); 123 coeff_obj, filename = _import_str(code, ""cqobjevo_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1244:58,depend,dependent,58,https://qutip.org,https://github.com/qutip/qutip/issues/1244,3,"['depend', 'message']","['dependent', 'message']"
Integrability,"**Describe the issue**; We use subprocess for the LaTeX plotting procedure. But the current error message for a failed subprocess is very ambiguous, which makes it very hard to debug. For illustration purpose, I deliberately change the following line so that the input pdf file has a wrong name.; https://github.com/qutip/qutip/blob/403e466becbc5d36947ca15b9211d884df83f91a/qutip/qip/circuit_latex.py#L172; I changed it to e.g. `in_file = ""pdf-that-does-not-exist.pdf""`. Running the code, the output error message is; ```; CalledProcessError: Command '('magick', '-density', '100', 'aqcirc.pdf', 'qcirc.png')' returned non-zero exit status 1.; ```; This is not very useful since the exit status 1 can have many reasons. It can also be that an additional dependency is missing (which is the reason I started to debug at the first place).; What I would like to see is the real system error message:; ```; magick: unable to open image 'pdf-that-does-not-exist.pdf': No such file or directory; ```. **Possible solution**; I didn't find a nice solution for this. Simply changing the parameter of `subprocess.run` to `stderr=subprocess.PIPE` doesn't work for me. I have to catch the exception and print the stderr message:; ```; def _run_command(*args, **kwargs):; try:; functools.partial(subprocess.run, check=True, stdout=subprocess.DEVNULL, stderr=subprocess.PIPE)(*args, **kwargs); except subprocess.CalledProcessError as err:; raise RuntimeError(err.stderr); ```; which gives me the output; ```; RuntimeError: b""magick: unable to open image 'aqcirc.pdf': No such file or directory @ error/blob.c/OpenBlob/3496.\r\n""; ```; It's ok but still weird. I guess I overlooked some feature of `subprocess`. @jakelishman I'm wondering if you have a better solution?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1426:98,message,message,98,https://qutip.org,https://github.com/qutip/qutip/issues/1426,5,"['depend', 'message']","['dependency', 'message']"
Integrability,"**Description**. - Allow imports of `qutip.qip` seamlessly as imports of `qutip_qip`; - Test the import behaviour when `qutip_qip` is installed and when not. **Related issues or PRs**; Incorporates the ideas in the discussion of #1500.; Fixes #1893. **Todos and questions**; - [ ] ~~Have `qutip-qip` be an optional dependency~~ (will be left for a future PR); - [ ] ~~Add installation of `qutip-qip` to the CI workflow~~. I have a draft of these changes locally, but they fail due to a dependency conflict: `qutip_qip` currently requires `qutip<5 and >=4.6 ` while these changes are being implemented in `v5.0.0.dev`, ie `>5`. This will cause the unit test where `qutip_qip` is installed to be skipped. Any ideas on how to get around this?. **Edit**: Uses a stub for the `qutip_qip` package in the units tests instead, which removes the need of having `qutip-qip` installed. **Changelog**. Allow imports of `qutip.qip` seamlessly as imports of `qutip_qip`.; Have `qutip-qip` be an optional dependency.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1920:315,depend,dependency,315,https://qutip.org,https://github.com/qutip/qutip/pull/1920,3,['depend'],['dependency']
Integrability,"**Description**. - Fixed some errors in the transcription of the husimi Q and Wigner W functions for spins into code.; - Ensure Q and W functions are normalized over (theta, phi).; - Add tests for correctness and normalization of spin Q function.; - Add tests for normalization and real-ness of spin W function. Correctness is established by comparing the overlap of two states and the overlap of their Wigner functions.; - Spin Q function tests take ~11s to complete, spin Wigner tests take ~10s to complete on my laptop. **To do**; - [x] Decide if the `spin_wigner` function should return only real values be default (as is currently done for the `spin_q_function`).; - [x] Find a simple test for correctness of the spin W function.; - [x] Decide whether to integrate the W function normalization in `_rho_kq` rather than at the top level. We divide all terms by `(2*j + 1)` only to end up multiplying it back out at the end which is a waste of time (`_rho_kq` is called `d**2` times, `d=2*j+1`) . The benefit of leaving it as-is is that it reads like most definitions in literature.; - [x] Update docstring for spin Q function.; - [x] Decide if normalization factor for Wigner and spin Q function should be included (Davis et al. suggest the normalization factor is only introduced during integration: Eq 14 https://arxiv.org/abs/2008.10167). **Related issues or PRs**; This issue was raised in another PR #1195 which didn't resolve this issue as intended. The original issue this fixes was #1128. **Changelog**; Fixed error for calculation of Husimi `spin_q_function` and `spin_wigner`.; Added tests to `tests/test_wigner.py` for these functions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1632:760,integrat,integrate,760,https://qutip.org,https://github.com/qutip/qutip/pull/1632,2,['integrat'],"['integrate', 'integration']"
Integrability,"**Description**. Add capacity to merge stochastic solver results. While adding it found a few bugs/ issues with the merge and weight that I fixed:. - When one result had trajectories and the other did not, but both stored the states, the merged result had no states.; - When merging 2 results with default ratio, that ratio would depend on whether the `improved_sampling` options was used.; - When the no-jump probability was 1, the total weight as measured by `sum(res.runs_weight)` would not be one.; - A no-jump probability over 1 by numerical error would break the evolution.; - Error in the weight application in the `_target_tolerance_end`. The last 3 are easy fix. For the default weight when merging, using the `num_trajectories` instead of `_num_rel_trajectories` is enough.; But I tried the approach of not counting the no-jumb evolution as a trajectory. This has many small advantages:; - All `result.trajectories` are the same, the first few are not special. ; - All seeds are used.; - No confusing on the merging ratio.; - Keeping the absolute and relative weight apart simply part of the merging.; - The progress bar run up to the expected number. I also tired to simplify the weight management by accumulating per data then split by abs, rel. This makes it easier to add averaged data (nmmc's trace). Seeing the change in lines number in `multitrajresults.py` it seems to be about the same. I am also thinking of removing the weight from trajectories and making it only a multitraj property:; `multitraj.add((seed, traj, rel_weight))`; `multitraj.add_deterministic(traj, abs_weight)`. The marginal / trace would stay in the trajectory, but not merging those with weight feel simpler to me. @pmenczel ; This PR larger than I expected, do you want me to break it into smaller ones for review or are you fine like this.; What do you think about splitting the no-jump / abs traj from the normal ones?; What about having the weights in the `add` instead of the trajectories?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2455:330,depend,depend,330,https://qutip.org,https://github.com/qutip/qutip/pull/2455,1,['depend'],['depend']
Integrability,"**Description**. Adds a `_from_csr_blocks` constructor to speed up the construction of the HEOM RHS by a factor of ~4x. What allows `from_csr_blocks` to be fast is that we can order the blocks in a way that makes it possible to write the rows of the output one after the other without a lot of work, and we never have to add a new non-zero element into a row or make a copy of the big output matrix. The implementation in Python was slow just because there is a lot of Python looping and arithmetic when the number of operators being combined becomes large. `_from_csr_blocks` is a private constructor for now. If use cases emerge we can consider making something similar part of the public interface later. **Related issues or PRs**; - None",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2128:691,interface,interface,691,https://qutip.org,https://github.com/qutip/qutip/pull/2128,1,['interface'],['interface']
Integrability,"**Description**. Currently QuTiP's build requirements specify `numpy>=1.16.6<1.20` but this was really a guess at the correct numpy to build with and importantly, is the wrong guess for Python 3.10 which is only supported by numpy 1.20 and later. Instead we now depend on the `oldest-supported-numpy` package, which is maintained by the numpy and SciPy folk and should always provide the correct version of numpy to build with on a given platform. A previous version of this PR #1735 attempted to simultaneously add support for Python 3.10, but that turned out to be tricky because conda did not yet provide a pre-compiled SciPy for Python 3.10. This PR should allow QuTiP to be built locally for Python 3.10, but does not yet add official Python 3.10 builds. - [x] Remove the restriction to `numpy<1.20` in `setup.cfg` (numpy >= 1.20 is required by Python 3.10); - [x] Update the build process to explicitly build with the lowest supported numpy; - [x] While we're here, update to a more recent version of ciwheelbuild. . **Related issues or PRs**; * Fixes #1732; * Fixes #1720; * Fixes #1740; * We also need to update our conda-forge feedstock -- https://github.com/conda-forge/qutip-feedstock/pull/72; * Alternative very similar implementation from @henryiii in #1738 (thank you!); * Previous attempt in #1735 (that . **Changelog**; * Updated the build process to support building on Python 3.10 by removing the build requirement for `numpy < 1.20` and replacing it with a requirement on `oldest-supported-numpy`.; * Update the version of cibuildwheel used to build wheels to 2.3.0.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1747:262,depend,depend,262,https://qutip.org,https://github.com/qutip/qutip/pull/1747,1,['depend'],['depend']
Integrability,"**Description**. Functions in `random_objects.py` deal with the parameters `N` and `dims` in different ways. Here I unify their interface implementing the following changes:. 1) Both `N` and `dims` parameters are now optional, with default value `None` for all functions.; 2) If both are given, we check if they match. An error is raised if they don't.; 3) If only one of them is given, the other one receives an appropriate value.; 4) If none of them are given, an error is raised requesting one of them. Functions `rand_super` and `rand_super_bcsz` were left unchanged. I believe it's better to leave their changes for v5.0, when the parameters `N` and `dims` will be substituted by `dimensions`. **Related issues or PRs**; Fix #1838. **Changelog**; Unify interface from random_objects.py module.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1846:128,interface,interface,128,https://qutip.org,https://github.com/qutip/qutip/pull/1846,2,['interface'],['interface']
Integrability,"**Description**. I propose to make it possible to have callable functions inside of the `e_ops` list, not only operators. This becomes useful if we want to measure energy or if we want to have time-dependent measurements just like time-dependent Hamiltonian. Changes are pretty straightforwards, mostly making sure types match. Important design choice is, if measurement is not an operator but a function, the data type is complex by default (to handle the general case). Feedback and suggestions for changes are welcome. I will be happy to contribute more!. **Related issues or PRs**. Suggested in https://github.com/qutip/qutip/issues/1238. **Changelog**. 1. Modified `mesolve` and `sesolve` objects to handle callable function inside of the `e_ops` list.; 2. Prepared `solver` to create empty measured data if list of `e_ops` contains a callable function.; 3. Modified one of the high level tests, `test_compatibility_with_solver` by adding an additional measurement which is not an operator but a lambda expression.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1655:198,depend,dependent,198,https://qutip.org,https://github.com/qutip/qutip/pull/1655,2,['depend'],['dependent']
Integrability,"**Description**. Introduces weights for the trajectories of trajectory solvers. These weights enter all trajectory averages. This concept is a generalization of two things that are already in qutip:; * The influence martingale in `nm_mcsolve` is simply a time-dependent weight from this point of view; * The ""improved sampling"" option for `mcsolve` weights the no-jump trajectory with its exact probability, and then only samples from the ensemble of trajectories with at least one jump. Currently, these two things cannot be combined: ""improved sampling"" does not work for `nm_mcsolve`. With these changes, it would work.; In the future, there might be at least one more application for weighted trajectories:; * For mixed initial states in `mcsolve`, it might be useful to allow sampling of initial states with frequencies or probabilities that are different from their true prefactor in the initial state. The ratio between the sampling frequencies and true prefactors would be weights on the trajectories. This also fixes some things in merging `McResult`s and `NmmcResult`s, and perhaps fixes the target tolerance computation for the ""improved sampling"" option. **Implementation**. A difficulty in the implementation is that the weights depend on the total number of trajectories in different ways. For example, the no-jump trajectory has a fixed weight that never changes, but all other trajectories come with prefactors $(1-p_0) / (N-1)$ where $p_0$ is the probability of the no-jump trajectory, and $N$ the total number of trajectories (including the one no-jump trajectory). For this reason, I separate weights into *absolute weights* (like $p_0$) and *relative weights* (like the others). The average is performed as follows:. $$ \bar\rho = \sum_{T: \text{abs}} w_a(T) w_r(T) \rho(T) + \frac{1}{N_{\text{rel}}} \sum _{T: \text{rel}} w_r(T) \rho(T) $$. where the first sum is over all trajectories T that have absolute weights, and the second sum over all other trajectories. Here, $w_a(T)$ a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2369:260,depend,dependent,260,https://qutip.org,https://github.com/qutip/qutip/pull/2369,1,['depend'],['dependent']
Integrability,"**Description**. This is an overhaul of the dimensions based on the proposition by @jakelishman in #1476.; As proposed, dimension objects singleton instances composed of map and spaces. Dimensions used by `Qobj` are all represented by a map between 2 spaces:. - ket: Dimensions(Field, Space); - bra: Dimensions(Space, Field); - oper: Dimensions(Space, Space); ... This `Dimension` is the `Map` proposed by Jake, but `ket` are map from `Field` to `Space` and not Space` themselves.; Spaces come into multiple sub classes as proposed : `Space`, `SuperSpace`, `Field`, `Compound`, and `EnrSpace`.; Splitting maps and spaces simplify spaces by not needing to have a dummy 2nd dims : `Space()[1]` does exist. Dimensions can be initiated from a list and converted back to one. Field are automatically contracted: `Compound(Field, Field)` is a `Field`, same for maps. With the exceptions that `Qobj` with a shape of `(1,1)` with be a `Dimensions(Field, Field)` and not a `Field`. . Some previously valid and used list format are no longer accepted. Playing with of tensor of super operators, `permute` and `reshuffle`, you could make object with dims as `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]` which can be interpreted as the tensor of 3 super operators. But then `[[[2, 2], [3, 3]], [[2, 2],[3, 3]]]` can both be interpreted as tensor of super operator or super operator of tensor spaces, so : ; - `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]`: Error; - `[[[2, 2], [4, 4]], [[2, 2], [4, 4]]]`: list representation of dimensions of `to_super(tensor(oper, oper))`; - `[[[2], [2], [3], [3]], [[2], [2], [3], [3]]]`: list representation of dimensions of `tensor(to_super(oper), to_super(oper))`. Dimensions object have a `type` and `shape` set a initialization. There is a check when creating/ modifying a `Qobj` with between the data's shape and dims's shape and an error is raise when they are not matching. . Since operator-ket have a `superrep`, I added the `superrep` parameter to t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1826:795,contract,contracted,795,https://qutip.org,https://github.com/qutip/qutip/pull/1826,1,['contract'],['contracted']
Integrability,"**Description**. This is an overhaul of the dimensions based on the proposition by @jakelishman in https://github.com/qutip/qutip/discussions/1476, replace #1826, which was done before merging `master` into `dev.major` and had conflicts.; As proposed, dimension objects singleton instances composed of map and spaces. Dimensions used by Qobj are all represented by a map between 2 spaces:. ket: Dimensions(Field, Space); bra: Dimensions(Space, Field); oper: Dimensions(Space, Space); ... This Dimension is the `Map` proposed by Jake, but ket are map from `Field` to `Space` and not `Space` themselves. Spaces come into multiple sub classes as proposed : `Space`, `SuperSpace`, `Field`, `Compound`, and `EnrSpace`. Splitting maps and spaces simplify spaces by not needing to have a dummy 2nd dims. Dimensions can be initiated from a list and converted back to one. Field are automatically contracted: `Compound(Field, Field)` is a `Field`, same for maps. With the exceptions that `Qobj` with a shape of `(1,1)` with be a `Dimensions(Field, Field)` and not a `Field`. . Some previously valid and used list format are no longer accepted. Playing with of tensor of super operators, `permute` and `reshuffle`, you could make object with dims as `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]` which can be interpreted as the tensor of 3 super operators. But then `[[[2, 2], [3, 3]], [[2, 2],[3, 3]]]` can both be interpreted as tensor of super operator or super operator of tensor spaces, so : ; - `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]`: Error; - `[[[2, 2], [4, 4]], [[2, 2], [4, 4]]]`: list representation of dimensions of `to_super(tensor(oper, oper))`; - `[[[2], [2], [3], [3]], [[2], [2], [3], [3]]]`: list representation of dimensions of `tensor(to_super(oper), to_super(oper))`. Dimensions object have a `type` and `shape` set a initialization. There is a check when creating/ modifying a `Qobj` with between the data's shape and dims's shape and an error is raise when they ar",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1996:888,contract,contracted,888,https://qutip.org,https://github.com/qutip/qutip/pull/1996,1,['contract'],['contracted']
Integrability,"**Description**. Update the documentation of guide-random to fit the next interface with `seed`, `dtype`, `distribution` etc.; Remove some method no longer existing for `Qobj` listed in guide-random.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2024:74,interface,interface,74,https://qutip.org,https://github.com/qutip/qutip/pull/2024,1,['interface'],['interface']
Integrability,"**Description**. Update the interface of random functions:; - The first input is `dimensions` instead of `N`. It act the same way as the input of `qeye`. (#1838); ```; qutip.rand_herm(N).dims == [[N], [N]]; qutip.rand_herm(dims).dims == [dims, dims]. qutip.rand_super(N).dims == [[[N], [N]], [[N], [N]]]; qutip.rand_super([N, M]).dims == [[[N, M], [N, M]], [[N, M], [N, M]]]; qutip.rand_super([[N], [N]]).dims == [[[N], [N]], [[N], [N]]]; ```; - Random Qobj creation use numpy new random interface. The seed now also accept `numpy.random.SeedSequence` or `numpy.random.Generator`.; - We had `unitary = (1j*rand_herm(N, density)).expm()`, therefore the resulting density for `rand_unitary` (and `rand_dm`) used to be denser than what was entered. I changed the density keyword to correspond to the density of output object. I do this by creating a smaller dense matrices and shuffling them together.; - Random super operator function now accept a `superrep` keyword and return the object in that representation. This work for `super`, `chi` and `choi` representation, but not `kraus` since it's not a `Qobj` and this cause issue with the `dtype` keyword.; - Lastly I merged some similar functions: `rand_unitary_haar` is now included as `rand_unitary(N, distribution=""haar"")`, etc. We had a few functions that returned the same type of object, but with different algorithm. I found this confusing, so I merged them to show they are equivalent. The algorithms having a reference to a paper are used as the defaults. I did not keep the previous functions, but we could keep them with a deprecation warning. Lastly I merged the `test_rand` and `test_random` files. Tests in those files where overlapping. **Related issues or PRs**; fix #1838",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1976:28,interface,interface,28,https://qutip.org,https://github.com/qutip/qutip/pull/1976,2,['interface'],['interface']
Integrability,"**Description**; - In `SeSolver`, `MeSolver`, `McSolver`, only capitalized 2 letters while `BRSolver` and `HEOMSolver` capitalized all abbreviated terms. Changed it use the same capitalization everywhere: `SESolver`, `MESolver`, `MCSolver`. - Update dynamics-master for v5. Only changing a few links is needed. No reference to the class interface is added since it comes before the explanation to time dependent system. - Updated dynamics-monte: Add description for new results, with photocurrent, average and runs version of expect and state. The class interface was quickly introduced in the `Reusing Hamiltonian Data` section.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2042:337,interface,interface,337,https://qutip.org,https://github.com/qutip/qutip/pull/2042,3,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"**Description**; - Integrate scheduler into the compiler. The compiler can now schedule quantum gates to reduce the duration of the compiled pulses.; - Improve the structure and readability of the `Compiler` class. The compiler class was separated for clarity when the `Processor` class was built upon old code in `qutip.qip`. But it has never been opened as a public API. This PR improves the readability and, most importantly, makes it easier for users to customize the compiler class.; - Add a map `pulse_dict` between the pulse label and the indices in `Processor`, so that customizing class becomes much easier. **Files description**; - `scheduler.py` is moved to compiler folder and split to two files : `instruction.py` and `scheduler.py` for clarity.; - Changes in `gatecompiler.py`, `cavityqedcompiler.py` and `spinchaincompiler.py` are for integrating the scheduler.; - Others are adaptations. **Changelog**; Integrate the scheduler into the compiler",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1444:19,Integrat,Integrate,19,https://qutip.org,https://github.com/qutip/qutip/pull/1444,3,"['Integrat', 'integrat']","['Integrate', 'integrating']"
Integrability,"**Description**; - Remove the old version of bloch redfield functions in `qutip/solve/bloch_redfield.py`, the new ones being at `qutip/solver/brmesolve.py` added in #1651.; - Remove utilities for previous management of time dependent systems and string compilation. These functionalities are included in `QobjEvo` and `Coefficient`. (`_pyxbuilder.py`, `solve/_utilities.py`).; - Remove `interpolate.py`, `Cubic_Spline` was only used in `brmesolve` since #1725.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1860:224,depend,dependent,224,https://qutip.org,https://github.com/qutip/qutip/pull/1860,1,['depend'],['dependent']
Integrability,"**Description**; - The plotting method is made more robust.; - Add `pulse_mode` as a wrapper for spline_kind, for discrete and continuous pulses. They are more friendly names for experimentalists.; - Add `num_qubits` as a replacement for `N`. In QuTiP capital letter are used for operators, like `H` for Hamiltonian. Due to historical reason, `N` is used in `qip` for the number of qubits. We would like to replace it with `num_qubits` in `qutip_qip`. Start from this wrapper and promoting the usage of this in notebooks guide. **Changelog**; Minor",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1446:85,wrap,wrapper,85,https://qutip.org,https://github.com/qutip/qutip/pull/1446,2,['wrap'],['wrapper']
Integrability,"**Description**; A gate (pulse) scheduler for quantum circuits (instructions). It schedules a `QubitCircuit` or a list of instructions to reduce the total execution time by exciting them parallelly. It uses heuristic methods mainly from https://doi.org/10.1117/12.666419. The scheduler aims at pulse schedule and therefore does not consider merging gates to reduce the gates number. It assumes that the input circuit is optimized at the gate level (e.g. has a minimal number of CNOT gates) and matches the hardware topology. The scheduler includes two methods, ""ASAP"", as soon as possible, and ""ALAP"", as late as possible. The later is commonly used in quantum computation because of the finite lifetime of qubits. **Methods**. - The scheduler first generates a quantum gates dependency graph, containing information about which gates have to be executed before some other gates because they do not commute. The graph preserves the mobility of the gates, i.e. commuting gates are not dependent on each other, even if they use the same qubits. ; - Next, it computes the longest distance of each node to the start and end nodes. The distance for each dependency arrow is defined by the execution time of the instruction (By default, it is 1 for all gates). This is used as a priority measure in the next step. The gate with a longer distance to the end node and a shorter distance to the start node has higher priority.; - In the last step, it uses a list-schedule algorithm with hardware constraint (e.g. gates using the same qubits) and priority and returns a list of cycles for gates.; - Since it's heuristics, sometimes it does not find the optimal. It offers an option that randomly shuffles the gates (if commuting) and repeats the scheduling a few times to get a better result. For scheduling quantum instructions, of which the runtime of different gates might differ, an additional step is required to compute the scheduled start time of each instruction.; It adds the additional dependency caus",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273:776,depend,dependency,776,https://qutip.org,https://github.com/qutip/qutip/pull/1273,2,['depend'],"['dependency', 'dependent']"
Integrability,"**Description**; Add `krylov` method as an `Integrator` for `SeSolver` porting `krylovsolve` to v5 format. The state evolution code was rewritten to use the qutip's data object instead of numpy arrays, but is otherwise the same. Since an integrator can be used without knowing the length of the evolution, some changes where as to when the krylov matrices are recomputed. Instead of choosing the step length so the error of the whole evolution is under `atol`, it is chosen so each steps stays under it and an options is available to compute it only once or at each step. A default `krylov_dim` was needed for the integrator, so I set it the scale as the square root of the size of the system. This is not ideal, but seems to work fine. When using it through `krylovsolve`, `krylov_dim`is a required parameter.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1986:44,Integrat,Integrator,44,https://qutip.org,https://github.com/qutip/qutip/pull/1986,3,"['Integrat', 'integrat']","['Integrator', 'integrator']"
Integrability,"**Description**; Add `pyproject.toml` to specify build-system as standardized in PEP 518. This enables building qutip in an emtpy environment i.e. without `setuptools`, `Cython`, `numpy` and `scipy` being pre-installed. If you have a new minimal debian install you sould be able to install this version with; ```; # apt-get install python3-pip; $ pip3 install $PATH_TO_QUTIP; ```; I only veryfied this in WSL so please test :). **Related issues or PRs**; This solves #1246 and #1174 and makes CI for packages that depend on qutip a lot easier. **Changelog**; Add `pyproject.toml` so qutip can be built without prerequisites",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1309:514,depend,depend,514,https://qutip.org,https://github.com/qutip/qutip/pull/1309,1,['depend'],['depend']
Integrability,"**Description**; Add a `Solver` class for better task distribution in `sesolve` and `mesolve`. `sesolve`, `mesolve`, etc. are presently mostly independent: each create their time dependant system, the function to integrator with scipy's ode solver, loop over the `tlist` and store results. With this PR, the `[se/me]solve` functions will reuse most of the code and be more modular.; We already have a `Result` class to manage e_ops and store result, `Integrator` to solve the ode system. `QobjEvo` can support any time-dependant format we support. This PR introduce a new class `Solver` to join all these. Basis usage looks like:; ```; rhs = QobjEvo(...); solver = Solver(rhs, options=opt); result = solver.run(psi, tlist, e_ops=e_ops); result.expect; ```. It can also do step evolution:; ```; rhs = QobjEvo(...); solver = Solver(rhs, options=opt); solver.start(psi, t0); psi_t1 = solver.step(t1); psi_t2 = solver.step(t2, args=new_args) # Can be inefficient depending on integrator.; psi_t3 = solver.step(t3, options=new_opt) # Inefficient but supported.; ```; When stepping, the output is always the state as `Qobj`. The solver class promote ket state to density matrices when the rhs is a super-operator. `rhs` support `Qobj` and `QobjEvo`, but not list or function. This PR also add `MeSolver` and `SeSolver` classes, but they are very light:; `MeSolver(H, c_ops)` is equivalent to `Solver(liouvillian(H, c_ops))`. `Solver` store a list of available `Integrator` as a class property. `Solver.avail_integrator` has all integrators available to all solvers. `SeSolver.avail_integrator` has all these with those registered directly to `SeSolver`. This is to allow Integrator for specific system. We could think for the floquet sesolve method to be made into an integrator specific to `SeSolver`. . The interface for `sesolve` and `mesolve` is mostly unchanged, but `progress_bar` keyword is moved to an options and the `_safe_mode` keyword is removed. **Changelog**; Added `Solver` class.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1700:179,depend,dependant,179,https://qutip.org,https://github.com/qutip/qutip/pull/1700,11,"['Integrat', 'depend', 'integrat', 'interface']","['Integrator', 'dependant', 'depending', 'integrator', 'integrators', 'interface']"
Integrability,"**Description**; Add a variant to `matmul` specialised for case where the right matrix is a column stacked hermitian matrix, and the output is the same. Such as for `mesolve` using super operators. Open solvers `mesolve`, `brmesolve`, `smesolve` and `fmesolve` all have a new options `use_herm_matmul` to use this operation. The default is `False` since we cannot easily check for exception (we can't test that a time dependant Hamiltonian is Hermitian, ...). With large enough systems, this result in a visible speed up:; ```; >>> N = 100; >>> H = qt.rand_herm(N, density=3/N); >>> c_ops = [qt.destroy(N)]. >>> qt.mesolve(H, qt.basis(N, N-2), [0, 10], c_ops=c_ops, options={""use_herm_matmul"": True}).stats[""run time""]; 0.8431086540222168; >>> qt.mesolve(H, qt.basis(N, N-2), [0, 10], c_ops=c_ops, options={""use_herm_matmul"": False}).stats[""run time""]; 1.0559077262878418. qt.smesolve(H, qt.basis(N, N-2), [0, 2], sc_ops=c_ops, ntraj=1, options={""use_herm_matmul"": True}).stats[""run time""]; 0.9043550491333008; qt.smesolve(H, qt.basis(N, N-2), [0, 2], sc_ops=c_ops, ntraj=1, options={""use_herm_matmul"": False}).stats[""run time""]; 2.111673355102539; ```. This is a use case for the capacity to dispatch on `Data` added in #2157. When `herm_matmul` is not available, it can be better to fallback on `matmul` using the same type than to do conversions between data types. For cupy, moving the data to the cpu to halves the work is probably not worth it. ; **Related issues or PRs**; This is build on top of #2157, it should be merged first.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2173:418,depend,dependant,418,https://qutip.org,https://github.com/qutip/qutip/pull/2173,1,['depend'],['dependant']
Integrability,"**Description**; Add data layer functions needed to update `steadystate` to use qutip's data layer. Most of `steadystate`'s methods solve the system `L(rho_ss) = 0` using different solver from numpy, scipy, mkl.; This add the `solve` dispatched function to wraps this operation at the data layer level.; For the `CSR` version, it gives access to all methods available in `scipy.sparse.linalg` and our mkl version.; For the `Dense` version, `solve` and `lstsq` from `numpy.linalg` are made available.; Options supported by numpy / scipy for each function are pass through:; `qutip.data.solve(A, B, method, options)` call `scipy.sparse.linalg.method(A, B, **options)`. Other methods of `steadystate` decompose the Liouvillian with either `eigen` or `svd`.; `svd` was added as a dispatched function, but only with specialization for `Dense`. ; I made a sparse version, but `svds` can't readily compute all singular values and does not respond well to splitting the problem into 2 like it was done for sparse eigensolver. . This PR only include the new dispatched functions, not updated `steadystate` using them or `Qobj` interface.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2002:257,wrap,wraps,257,https://qutip.org,https://github.com/qutip/qutip/pull/2002,2,"['interface', 'wrap']","['interface', 'wraps']"
Integrability,"**Description**; Add support for the up comming numpy v2:. - Allows qutip to be compiled with numpy 2, and pass tests.; - Test that binaries compiled with numpy 2 are compatible with numpy 1 at runtime. I did not update the requirement yet, it must be installed in `--no-build-isolation`.; When it's officially released, we will need to update `pyproject.toml` and `setup.cfg`, and possibly add test for np2 on windows and mac. Here are the changes that affect us:; - `np.array(.., copy=False)` no longer mean copy only if needed. `copy=None` was added for that.; - `np.trapz` was replaced by `np.trapezoid`. Since there are no overlaps, I opted to use `scipy.integrate.trapezoid` instead.; - `np.array(1, np.int32) * 2**33` will enforce the integer type and overflow.; - `Py_intptr_t` from `python.h` is no longer available through numpy cython interface.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2421:660,integrat,integrate,660,https://qutip.org,https://github.com/qutip/qutip/pull/2421,2,"['integrat', 'interface']","['integrate', 'interface']"
Integrability,"**Description**; Add the capacity of stochastic solver to run from know noise or measurements.; In the lab, the measurement can be obtained, but that measurements is a mix of and expectation values and noise. The stochastic solver can be used to split these components to study the system. The new method for this is `SMESolver.run_from_experiment`. It works similarly to `run` of deterministic solver: it compute a single trajectory. It can take either `dW` or `measurement` as the noise input. (`dW` is the default). `dW` input is available with every integration method, but measurement input is limited to `euler`, `milstein`, `pred_corr`, `platen`. The measurement is `expect(m_ops, state_t) + dW / dt`. For `run_from_experiment` it has no choice but to take `state_t` at the start of the interval, but for the result for `smesovle`, it was taken at the end of the interval. I updated the `store_measurement` options to allow the user the choose where it is taken between `start`, `end` and `middle`. When `start` is used, the `run`'s result's measurement can be feed back to `run_from_experiment` to recompute the same trajectory. (The theory is the integral of the expectation value over the interval.). Another change in this PR is to keep the dW in the wiener and result class. We used to sum them into `W`, but the `dW` are what we use so it just end up being extra calls to `np.cumsum` and `np.diff`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2318:554,integrat,integration,554,https://qutip.org,https://github.com/qutip/qutip/pull/2318,1,['integrat'],['integration']
Integrability,"**Description**; Add tools for easier install on pip with missing dependancies. **Related issues or PRs**; #1309, #1303, #1316",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1317:66,depend,dependancies,66,https://qutip.org,https://github.com/qutip/qutip/pull/1317,1,['depend'],['dependancies']
Integrability,"**Description**; Add warning messages went passing input to solver that moved / were renamed in v5.; Hopefully this should help with the transition. When the parameter affect the physical result, an error is raised instead of a warning.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2248:29,message,messages,29,https://qutip.org,https://github.com/qutip/qutip/pull/2248,1,['message'],['messages']
Integrability,"**Description**; Added one new public function `local_multiply_dense` in a new file qutip/qip/operations/local_operations.py, and tests at tests/test_local_operations.py. This can dramatically improve the speed for performing certain matrix multiplications, taking advantage the new Dense data layer. In particular, for cases where the density matrix/state has few zero's, and we want to multiply a local operator (e.g. one acting on only a small subset of the full system), this routine is expected to be faster. **What is does**; Using some standard tools, such as NumPy's einsum one can compute the local matrix operation directly, i.e. applying a one or two-local gate on a Qobj of many qubits. This is only really useful if one uses the Dense data layer, since otherwise there are conversion overheads which kill any speed-up (at the end of the day, we need NumPy arrays). The code has two 'backends', one using einsum as mentioned, and another using what I call a 'vectorization' approach (where the density matrix or vector is reshaped to a vector over the target qubits). Note: It will work on qudits in general (does not have to be qubits). **Performance**; I find, in systems where the state is dense (few zeros), one can get a speed-up of between 2 and up to around 10x faster (depends on the size and system etc). Of course, sometimes using the standard built in sparse routines are faster, so it really depends what one is doing. Attached is a wall-clock time comparison between the standard sparse way for a 1-local multiplication on a vector (using `gate_expand_1toN`), and the added code (dense local). N being the number of qubits. Here I made things as hard as possible for the sparse routine (all elements non-zero), so this is probably the limit of the speed-up. ![1_local_vector_adaptive_backend](https://user-images.githubusercontent.com/47875526/101932409-91f44900-3b8f-11eb-8b5b-7a00dabec2e4.png). **Other notes**; 1. I am a contractor for NASA, and they required a slight chan",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405:480,rout,routine,480,https://qutip.org,https://github.com/qutip/qutip/pull/1405,1,['rout'],['routine']
Integrability,"**Description**; Adding a guide on *Superoperators, Pauli Basis and Channel Contraction* which is moved from this notebook:; https://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/examples/superop-contract.ipynb. **Related issues or PRs**; The corresponding notebook was removed from the new `qutip-tutorials` repository in this PR https://github.com/qutip/qutip-tutorials/pull/34",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1984:76,Contract,Contraction,76,https://qutip.org,https://github.com/qutip/qutip/pull/1984,2,"['Contract', 'contract']","['Contraction', 'contract']"
Integrability,**Description**; Adding documentation guide to qutip/doc/guide for krylovsolve.py. **Related issues or PRs**; https://github.com/qutip/qutip/issues/1668; https://github.com/qutip/qutip/pull/1739. **Changelog**; Created file doc/guide/dynamics/dynamics-krylov.rst and added dependancy to doc/guide/guide-dynamics.rst.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1862:273,depend,dependancy,273,https://qutip.org,https://github.com/qutip/qutip/pull/1862,1,['depend'],['dependancy']
Integrability,"**Description**; Adding spin-1/2 fermionic creation and annihilation operators to close #2165 (for UnitaryHack 2023). Specifically, in `qutip.core.operators`, I added the `fcreate` and `fdestroy` functions, following the Jordan-Wigner transformation described in [this guide](https://learn.microsoft.com/en-us/azure/quantum/user-guide/libraries/chemistry/concepts/jordan-wigner). Specifically, I implemented the following using `qutip.tensor` objects, and documented this in the code. $$a_j = \sigma_z^{\otimes j} \otimes (\frac{\sigma_x + i \sigma_y}{2}) \otimes I^{\otimes N-j-1}$$. $$a_j^{\dagger} = \sigma_z^{\otimes j} \otimes (\frac{\sigma_x - i \sigma_y}{2}) \otimes I^{\otimes N-j-1}$$. Additionally, I wrote a new test in `qutip.tests.core.test_operators` that verified the commutation relations. I also ran the new code through `pycodestyle` to verify it was written nicely. Please let me know if there are any issues or anything I should be doing on the documentation side! I hope I understood the problem correctly :). **Related issues or PRs**; close #2165; I closely followed the protocol in #863",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2166:1094,protocol,protocol,1094,https://qutip.org,https://github.com/qutip/qutip/pull/2166,1,['protocol'],['protocol']
Integrability,"**Description**; Adds a --with-idxint-64 compilation option for building with 64-bit integer indices in the data layer. (Alternative to #1727); Instead of using a compile time environment variable, it contains files for both 32 and 64 int and choose at setup which to use. This way has the advantage that cython can keep track of the version used and recompile all file depending on it when changed.; With compile time environment variable, you can have file compiled with different type of int and only get error when trying to use them. Also 'cimporting' data is simpler since you don't need to define the variable. However, changing all the import location made diff a lot bigger than #1727. `qutip.settings.install['intsize']` will return 32 or 64 depending on the size of int used. **Changelog**; Added a compilation option for compiling with 64-bit integer.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1874:370,depend,depending,370,https://qutip.org,https://github.com/qutip/qutip/pull/1874,2,['depend'],['depending']
Integrability,"**Description**; As it is already possible to run `mcsolve` with gpus. The next step in the process to make `mcsolve` work with `grad`. With the changes, I can get; ```; `import qutip_jax as qjax; import qutip as qt; import jax; import jax.numpy as jnp; from functools import partial; qjax.use_jax_backend(). # Define time-dependent functions; @partial(jax.jit, static_argnames=(""omega"",)); def H_1_coeff(t, omega):; return 2.0 * jnp.pi * 0.25 * jnp.cos(2.0 * omega * t). # Hamiltonian components; N = 100; with qt.CoreOptions(default_dtype=""jaxdia""):; a = qt.tensor(qt.qeye(2), qt.destroy(N)); sm = qt.tensor(qt.destroy(2), qt.qeye(N)); ; H_0 = 2.0 * jnp.pi * a.dag() * a + 2.0 * jnp.pi * sm.dag() * sm; H_1_op = sm * a.dag() + sm.dag() * a; H = [H_0, [H_1_op, qt.coefficient(H_1_coeff, args={""omega"": 1.0})]]. # Initial state; state = qt.tensor(qt.fock(2, 0, dtype=""jax""), qt.fock(N, 8, dtype=""jax"")). # Collapse operators and observables; c_ops = [jnp.sqrt(0.1) * a]; e_ops = [a.dag() * a, sm.dag() * sm]. # Time list; tlist = jnp.linspace(0.0, 100, 2). # Define the function for which we want to compute the gradient; def f(omega):; H[1][1] = qt.coefficient(H_1_coeff, args={""omega"": omega}); result = qt.mcsolve(H, state, tlist, c_ops, e_ops, ntraj=10, options={""method"": ""diffrax""}); # Return the expectation value of the number operator at tlist[1]; return result.expect[0][1].real. # Compute the gradient; gradient = jax.grad(f)(1.0). print(""Gradient:"", gradient); `. ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2499:323,depend,dependent,323,https://qutip.org,https://github.com/qutip/qutip/pull/2499,1,['depend'],['dependent']
Integrability,"**Description**; Depending on the length of the array of coefficients given to a QobjEvo, `sesolve()` gives erroneous results. **Minimal working example**. I am trying to simulate the behavior of a system of two atoms, each one with three energy levels, using `QobjEvo`. Preamble:; ```python; import qutip; import numpy as np; import matplotlib.pyplot as plt; ```; Consider the following arrays of coefficients:; ```python; atom1_coeffs = np.array([0. , 0.000554 , 0.00232179, 0.00559138, 0.01075109,; 0.0181713 , 0.02807408, 0.04041764, 0.05482037, 0.07054261,; 0.0865334 , 0.10153804, 0.11425045, 0.123486 , 0.12834601,; 0.12834601, 0.123486 , 0.11425045, 0.10153804, 0.0865334 ,; 0.07054261, 0.05482037, 0.04041764, 0.02807408, 0.0181713 ,; 0.01075109, 0.00559138, 0.00232179, 0.000554 , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0.000554 , 0.00232179, 0.00559138, 0.01075109,; 0.0181713 , 0.02807408, 0.04041764, 0.05482037, 0.07054261,; 0.0865334 , 0.10153804, 0.11425045, 0.123486 , 0.12834601,; 0.12834601, 0.123486 , 0.11425045, 0.10153804, 0.0865334 ,; 0.07054261, 0.05482037, 0.04041764, 0.02807408, 0.0181713 ,; 0.01075109, 0.00559138, 0.00232179, 0.000554 , 0. ]). atom2_coeffs = np.array([0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0.00110801, 0.00464357, 0.01118276, 0.02150219,; 0.03634261, 0.05614817, 0.08083527, 0.10964074, 0.14108522,; 0.1730668 , 0.20307607, 0.22850089, 0.24697201, 0.25669201,; 0.25669201, 0.24697201, 0.22850089, 0.20307607, 0.1730668 ,; 0.14108522, 0.10964074, 0.08083527, 0.05614817, 0.03634261,; 0.02150219, 0.01118276, 0.00464357, 0.00110801, 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ]); ```. ```p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1403:17,Depend,Depending,17,https://qutip.org,https://github.com/qutip/qutip/issues/1403,1,['Depend'],['Depending']
Integrability,**Description**; Fail with a more descriptive message when trying to install from source without numpy. Hopefully will not be used with #1309. **Related issues or PRs**; Discussion in dev-core,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1316:46,message,message,46,https://qutip.org,https://github.com/qutip/qutip/pull/1316,1,['message'],['message']
Integrability,"**Description**; First part of rework of solver for dev.major. It allows QobjEvo to support any data types for both itself and the state. And reuse the QobjEvoFunc of #1123 so function can be used in any solver. . - Update `cQobjEvo` to use `Data` object instead of `CSR` matrices only.; - Split `cQobjEvo.matmul` and `expect`: used to accept only `Dense` state, now accept any data type and use Jake's dispatcher. But added `matmul_dense` and `expect_dense` to do operation inplace when possible. Dispatche on `inplace` out parameter is not possible and such operation are mostly limited to `Dense`.; - Compiling string coefficients will now create the build directory in `.qutip` folder instead of current active directory.; - array coefficients addition will add array when possible.; - `scipy.special` had a cython interface... added it to string coefficient's cimport as `cython_special`.; - Added an inplace addition for `Dense` object and inplace multiplication with a scalar for both `Dense` and `CSR`.; - Added `Dense` specialization for `expect`.; - Added `project_dense`.; - Added `QobjEvoFunc`, a wrapper for function `f(t: float, args: dict) -> Qobj` to be used like `QobjEvo` in solver.; - Added the method `to` to QobjEvo to control data types.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1407:819,interface,interface,819,https://qutip.org,https://github.com/qutip/qutip/pull/1407,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"**Description**; Fix bug in `correlation 2op_2t ` when using time-dependent hamiltonians and collapse operators. Also, a test was added in `test_correlation`. **Related issues or PRs**; This PR addresses [#1808](uhttps://github.com/qutip/qutip/issues/1808). It solves the issue. **Changelog**; Fixed error for time-dependent hamiltonians and collapse operators in correlation 2op_2t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1929:66,depend,dependent,66,https://qutip.org,https://github.com/qutip/qutip/pull/1929,2,['depend'],['dependent']
Integrability,"**Description**; Fix issues with multi- trajectory results:; - When one result had trajectories and the other did not, but both stored the states, the merged result had no states.; - When merging 2 results with default ratio, that ratio would depend on whether the `improved_sampling` options was used. ; - When the no-jump probability was 1, the total weight as measured by sum(res.runs_weight) would not be one.; - A no-jump probability over 1 by numerical error would break the evolution.; - Fix weight application in the `_target_tolerance_end`. (At `abs_weight == 1`, the error should be 0).; - `average_final_state` not being computed properly when runs were stored. This PR is a part of #2455. (1/4?); The absolute weighted trajectories are still mixed with the other. (#2455 fixed the issues by not counting the no-jump evolution are a trajectory.). Tests need #2457 to pass.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2459:243,depend,depend,243,https://qutip.org,https://github.com/qutip/qutip/pull/2459,1,['depend'],['depend']
Integrability,**Description**; Fix scipy.sparse deprecation warnings raised by qutip.fast_csr_matrix by:. - importing functions from the public interface where we can (i.e. from the `scipy.sparse` module); - explicitly importing functions from the internal interface otherwise (i.e. from `_sputils`). We already import methods from `_sparsetools` so our reliance on the internal interfaces is not a new thing. This PR ensures we don't implicitly rely on the internal interfaces via the deprecated public interfaces. **Related issues or PRs**; - fixes #1823. **Changelog**; Fix scipy.sparse deprecation warnings raised by qutip.fast_csr_matrix.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1827:130,interface,interface,130,https://qutip.org,https://github.com/qutip/qutip/pull/1827,5,['interface'],"['interface', 'interfaces']"
Integrability,**Description**; Fix the bug in correlation where it would not properly detect that the system were time-dependent when only the c_ops were. **Related issues or PRs**; fix #1808; replace #1929,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1979:105,depend,dependent,105,https://qutip.org,https://github.com/qutip/qutip/pull/1979,1,['depend'],['dependent']
Integrability,"**Description**; In cython code, signals (Keyboard Interrupt) are not automatically checked.; And when checked, if error are not properly passed (`expect *`) the signal can be last. This happened in the Runge Kutta integrator, which did not properly passed errors and only when back to python space at time in `tlist` which can be far apart. The stochastic solver stop on (Keyboard Interrupt), the `except` are not needed since the output is a class. I made it explicit for clarity. Doing a few tests, I saw that the error was often caught in the `Qobj.data` property called by `QobjEvo.matmul`. This means more back and forth between python and cython was done than needed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2169:215,integrat,integrator,215,https://qutip.org,https://github.com/qutip/qutip/pull/2169,1,['integrat'],['integrator']
Integrability,"**Description**; In general, operation between sparse and dense return dense. This is not ideal for the kron product which output would be sparser than the sparse input. The dispatcher does not have fine control for these cases, (Jake plan to add it but never had the time to get to it), so I added wrapper specialisation for these cases. . I had to patch `expand_operator` since it used `dense` priority to work.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2391:299,wrap,wrapper,299,https://qutip.org,https://github.com/qutip/qutip/pull/2391,1,['wrap'],['wrapper']
Integrability,"**Description**; In solvers, we often wrap `Qobj` into `QobjEvo` to remove code duplication while allowing support for time-dependant operators even when constant case are the norm (`e_ops`). Doing so we lose the `isherm` flag, which can sometime be nice to have. ; This PR allow the flag to be kept when calling the `QobjEvo` in such case:; ```; >>> QobjEvo(qeye(N))(0)._isherm; True; ```. This will be useful for the `diag` integration method which need compute the eigenstates of a constant `QobjEvo`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2000:38,wrap,wrap,38,https://qutip.org,https://github.com/qutip/qutip/pull/2000,3,"['depend', 'integrat', 'wrap']","['dependant', 'integration', 'wrap']"
Integrability,"**Description**; In v4, using string was needed to run `brmesolve` with time dependent system. But from v5, using a `QobjEvo` is sufficient, any coefficient format is accepted. I removed the section in the guide saying that string format is needed. Also, I split the one paragraph per line to one sentence per lines.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2033:77,depend,dependent,77,https://qutip.org,https://github.com/qutip/qutip/pull/2033,1,['depend'],['dependent']
Integrability,**Description**; Integrate the scheduler into Processor. Users can choose to first schedule the circuit/control pulses before running the simulation. **Changelog**; Supports Processor with the scheduler.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1365:17,Integrat,Integrate,17,https://qutip.org,https://github.com/qutip/qutip/pull/1365,1,['Integrat'],['Integrate']
Integrability,"**Description**; Introducing support for multiple coupling operators in `fmmesolve`. Additionally, I fixed the bug with the rate integration as described in #1961. . **Related issues or PRs**; #1961",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1962:129,integrat,integration,129,https://qutip.org,https://github.com/qutip/qutip/pull/1962,1,['integrat'],['integration']
Integrability,"**Description**; Looking at #2511, we would need to compute the expectation values for time dependent operator and their derivative. Here I add support for `QobjEvo` in `expect`: `expect(op: QobjEvo, state: QobjEvo) -> Coefficient`.; (List of operators or states not supported.)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2528:92,depend,dependent,92,https://qutip.org,https://github.com/qutip/qutip/pull/2528,1,['depend'],['dependent']
Integrability,"**Description**; Make and upgrade a few class commonly used by solvers. All solver's core is a loop that progress between time in `tlist` and take a snapshot of the state at these time. The work of this loop have been moved to 2 classes: `Result` and `Evolver`. . `Result` was previously just a container of the solver output. It now does the snapshot: compute the expectation values, save the state, compute trajectories average, etc. . `Evolver` is qutip's ODE solver interface: the states are `Data` object and the function is `QovjEvo`(or `QobjEvoFunc`). There are multiple type of evolver wrapping different scipy's ode solver and a few of our own. The wrapper around scipy's zvode that was previously used in qutip's is `EvolverScipyZvode`, but we now have our own cython solver based on [Verner's method](http://people.math.sfu.ca/~jverner/) that accept any Data type as state. Different evolver based on different ODE method are interchangeable and have their dispatcher `evolver_collection`, allowing to easily add new methods. . With this, time-dependent system are managed by `QobjEvo`, ODE by `Evolver`, therefore the solvers can concentrate more closely on the physic. **Evolver:**; Method supported with this PR: `adams`, `bdf`, `dop853`, `lsoda`, `vern7`, `vern9`, `diag`. The 4 first are from `scipy.integrate.ode`, the 3 last are ours. `vern7` and `vern9` are runge-kutta methods of 7th and 9th order using [verner's most efficient coefficient](http://people.math.sfu.ca/~jverner/) with dense output. `diag` diagonalize a constant system and solve the ODE in that basis.; The minimum that must be given for a new evolver are the `prepare`, `set_state`, `get_state` and `step` methods. `evolver_collection` work as a dispatcher over evolvers. Solvers obtain their evolver instance using `evolver_collection[method, rhs]` with both `method` and `rhs` taken from the options. `evolver_collection` keep a list of description, used options and capacities for each member. It can list the a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1409:470,interface,interface,470,https://qutip.org,https://github.com/qutip/qutip/pull/1409,3,"['interface', 'wrap']","['interface', 'wrapper', 'wrapping']"
Integrability,"**Description**; Make our integrator re-entrant. Scipy'ode is can only have one active instance active for some of the methods. This cuased no issue when the whole integration is done at once as when used in `mesolve`. But with solver as class, this mean using them will have side effect on other solver instances. This PR make the check for concurrent integrator usage before scipy does and force a reset if needed. Switching between system will be inefficient, but will return the expected results. In lsoda's integrator's `_backstep` we are catching a warning before acting on it, but catching the warnings still printed them at the end of tests, bloating the output. In this PR, I also do the check before scipy does so the warning is never raised. **Related issues or PRs**; Point raised in discussion with @hodgestar and @AGaliciaMartinez on #1710 . **Changelog**; Front run some safety check in scipy.ode",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1734:26,integrat,integrator,26,https://qutip.org,https://github.com/qutip/qutip/pull/1734,4,['integrat'],"['integration', 'integrator']"
Integrability,"**Description**; Merge `QobjEvo`, `cQobjEvo`, `QobjEvoFunc` into one cython class. (#1468). This remove the need to have both keep 2 objects (`QobjEvo`, `cQobjEvo`) by solver and the need to support 3 classes. It support any format for time-dependant system accepted by `mesolve`.; It keeps mostly the same interface as the present `QobjEvo`, the biggest changes being:; - `QobjEvo.mul_vec`, `QobjEvo.solver_set_args`, `QobjEvo._cdc` removed.; - `QobjEvo.mul` renamed to `QobjEvo.matmul` and only accept `Qobj` input (from `Qobj`, `Data`, `np.array`); - `QobjEvo.expect` only accept `Qobj` input (from `Qobj`, `Data`, `np.array`); - `cQobjEvo.matmul_dense` and `cQobjEvo.expect_dense` removed, use the `_data` version instead, they have optimization for `Dense` included.; - Some of `QobjEvo`'s attributes are no longer accessible: `cte`, `ops`. Instead of `A.cte.dims`, simply use `A.dims`. Same for `shape`, `issuper` and `isoper`.; - `shift` renamed to `_insert_time_shift`. It is meant for use in correlation only so I renamed to a longer name. . Internally, some of the logic have been moved to an `Element` class (pair `Qobj`, `Coefficient`) to support function format.; `matmul` is there to support the bloch redfield tensor. Function based `QobjEvo` reuse calls to the function: ; With `cdc = QobjEvo(f).dag() * QobjEvo(f)`, `cdc(t)` will call `f` only once. This remove the need of special code of `QobjEvoFunc` in superoperator. . ##### Leftover issues; The class keep a copy of `args` only for the `__call__(self, t, args)` method, since the coefficient have their own copy of `args`. It could be removed if we remove that functionality.; While coefficient with different `args` can be mixed, function cannot.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1481:241,depend,dependant,241,https://qutip.org,https://github.com/qutip/qutip/pull/1481,2,"['depend', 'interface']","['dependant', 'interface']"
Integrability,"**Description**; Move `ttmsolve` to `qutip/solver` and update it. No class interface was created, `ttmsolve` work differently to other solver and would be hard to force into the `Solver` mould. Changed the interface a little, `learningtimes` needed use the first values `times` to be valid, it was replaced by an options for the number of values in ``times`` to use.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2142:75,interface,interface,75,https://qutip.org,https://github.com/qutip/qutip/pull/2142,2,['interface'],['interface']
Integrability,"**Description**; Remove coercion of coefficient values to complex in `Coefficient` and `QobjEvo` allowing to use `tf.Variable` as coefficient to enable auto-differentiation to be used in solver.; It is build on top of #1644 since it include integration method using our data object. Coefficient creation is no longer hard coded, but use a dict of `type: callable`, each type is associated to a function that create a coefficient, allowing to add support for other coefficient types per project such as qutip-tensorflow. Also, function based coefficient no longer cast to complex, but the check in the coefficient function is still there. Since other type are not supported without new data layer, this feels like a proper balance. `QobjEvo` cython casting of coefficient's value to complex as been removing.; No tests are added since other types of coefficient are not supported by data layer.; But here is an example of auto differentiation with this branch:. ```; import qutip as qt; import numpy as np; import qutip_tensorflow as qtf; import tensorflow as tf; from qutip.core.coefficient import Coefficient, coefficient_builders; from qutip.solver.sesolve import SeSolver. # Create a new Coefficient for tf.Variable, ; # This should be added to qutip-tensorflow,; # Here I use a step interpolation.; class TfVarArgsCoefficient(Coefficient):; def __init__(self, variable, tlist, **_):; self.variable = variable; self._tlist = tlist; ; def __call__(self, t, _args=None, **_):; if t <= self._tlist[0]:; return self.variable[0]; if t >= self._tlist[-1]:; return self.variable[-1]; idx = np.searchsorted(self._tlist, t, 'right') - 1; return self.variable[idx]. coefficient_builders[tf.Variable] = TfVarArgsCoefficient. # Create a Coefficient as normal.; variable = tf.Variable(np.linspace(0.1,0.9,6), dtype=tf.complex128); coeff1 = qt.coefficient(variable, tlist=np.linspace(0,0.5,6)). N = 5; a = qt.destroy(N, dtype='tftensor'); num = qt.num(N, dtype='tftensor'); H = qt.qeye(N, dtype='tftensor') + qt.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1816:241,integrat,integration,241,https://qutip.org,https://github.com/qutip/qutip/pull/1816,1,['integrat'],['integration']
Integrability,"**Description**; Remove the function `MCResult.expect_traj_avg`. It was added to replace list input to mcsolve `ntraj` argument, but as discussed in qutip/qutip-tutorials#58, it was not a useful implementation of the feature. Also improved the warning message in floquet's backward compatibility functions to include the new way and changed warning to error for any functions that would not work as a drop-in replacement.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2068:252,message,message,252,https://qutip.org,https://github.com/qutip/qutip/pull/2068,1,['message'],['message']
Integrability,"**Description**; Remove the previous version of `sesolve`, `mesolve` and `mcsolve` so only one version exist.; Set the import for the class interface of the solver in imported with qutip:; ```; import qutip; qutip.SESolver(...); ```. `qutip.settings` now refer to the object, not the file.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2056:140,interface,interface,140,https://qutip.org,https://github.com/qutip/qutip/pull/2056,1,['interface'],['interface']
Integrability,"**Description**; Removed `mpi4py` from `full`. ; It is hard to install locally (for the users) and in readthedocs, where it is not actually used (#2317). I am not sure what it is the best practice for this. `full` should normally include every optional dependency, but mpi4py is too specialized and not useful for most users. If it makes qutip harder to install since `pip install qutip[full]` would fail for most, maybe it's better to leave it out. Also updated some versions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2319:253,depend,dependency,253,https://qutip.org,https://github.com/qutip/qutip/pull/2319,1,['depend'],['dependency']
Integrability,"**Description**; Review the guide-dynamics part of the guide for v5. - Fixed internal links; - Added section for new features for mcsolve.; - Added page for solver class interface.; - Improved the solver introduction table.; - Moved piqs to after steadystate, the only example did not do an evolution, but computed a steadystate.; - Moved nmmcsolve to it's own page after time dependent introduction.; - `mcsolve` uses `seeds` but `MCSolver.run` used `seed`, changed to use `seeds` every where.; - Cut too long lines to around ~80 characters in many places.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2271:170,interface,interface,170,https://qutip.org,https://github.com/qutip/qutip/pull/2271,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"**Description**; Rewrite `mcsolve` as a class for dev.major. Main addition:; - `MultitrajSolver` class as a base class for solver computing trajectory from a seed: it uses custom ; - It uses custom integrator using a generator which `MultitrajSolver` provide. ; - Stepping run one trajectory at a time.; - Use numpy.random new interface with `SeedSequence` and `Generator`.; - `run` can end on number of trajectories reached, timeout reached, or error bars on expectation values under a certain tolerance.; - `McSolver` class for mcsolve class interface.; - Support closed and open system. For open systems. `H` must be a Liouvillian. The `c_ops` are computed stochasticly and are used for collapse. Dissipation terms to be used in a deterministic way can be added as Lindblad dissipators to the liouvillian.; - McSolver's results include the photocurrent.; - McSolver need a layer between the solver interface and the integrator. In #1710, this was a trajectory solver, but here I use a pseudo integrator. This makes `MultitrajSolver` easier to use with stochastic which need custom integrator and thus a trajectory solver did very little. Other fixes:; - `MultiTrajResult` keep the `dtype` of expect.; - `MultiTrajResult` can merge instance with no states stored. **Related issues or PRs**; Replace #1710",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1972:198,integrat,integrator,198,https://qutip.org,https://github.com/qutip/qutip/pull/1972,7,"['integrat', 'interface']","['integrator', 'interface']"
Integrability,"**Description**; Rewrite the main solvers with a more object approach.; The `Solver` class manage inputs and create the system (-i*H, liouvillian, ...).; The `Evolver` (#1409 do the evolution for each time in tlist.; The computation of `e_ops` and storing of states is done by the `Result` class. Updated function are moved from qutip/solve to qutip/solver. - The [..]solve function are matched with a [..]Solver class.; ```; solver = MeSolver(H, c_ops, times=..., options=..., args=..., e_ops=...); solver.run(rho, tlist). solver.start(rho, t0); solver.step(t1); ```; This remove the `rhs_reuse` options and come with a step function. The step function always return the state (it does not compute e_ops). . - Dynamic_args / feedback is no longer merged with normal args but entered in a `feedback_args` solver argument.; The input format is `feedback_args = {key: ""Qobj""}` will have args[key] be updated with the state as a Qobj at each system call.; ( no longer the magic keyword method). - With the class interface, array coefficient times are given independently from the `tlist`. - `mcsolve` result include the photocurrent, removing the need of `photocurrent_sesolve`.; - `MeMcSolver` (in progress) could replace `photocurrent_mesolve`. It does the save computation using Monte-Carlo algorithm.; - `mcsolve` code that compute collapse was moved from cython to python. I did not benchmark the effect on the speed, be expect it to be small and the overall evolution to be faster with improvement in the map function (do not need to store every states before computing average) and `Evolver` (better backstep for adam method).; ; - `SteadyState` use a `SteadyStateOptions` instead of a bunch of kwargs. **Related issues or PRs**; Build from #1409.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1455:1009,interface,interface,1009,https://qutip.org,https://github.com/qutip/qutip/pull/1455,1,['interface'],['interface']
Integrability,**Description**; See dependabot PR #2085. **Related issues or PRs**; - #2085,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2086:21,depend,dependabot,21,https://qutip.org,https://github.com/qutip/qutip/pull/2086,1,['depend'],['dependabot']
Integrability,"**Description**; Speed up and simplify `state_number_enumerate`, `state_number_index`, `state_index_number`, `state_number_qobj`, and `enr_state_dictionaries`. I've changed quite a few functions in states.py, but all the changes are small. It seemed easier to combine this into a single pull request instead of splitting it up into many smaller ones (but this could be done). The changes in more detail:; - `state_number_enumerate` and `state_index_number` now always return tuples. Before, `state_number_enumerate` returned arrays for `excitations is None` and tuples otherwise, and `state_index_number` returned a list. For `excitations is None`, I realized that a simple call to `itertools.product` is enough, and is about 20x faster for a (relatively big) test case. It would be trivial to keep returning arrays instead of tuples here as before, but this slows the code down (quite significantly, in fact) and, in any case, returning arrays or tuples depending on whether `excitations` is set seems like an inconsistent interface, so I decided to make it consistent (and faster). I checked that the uses in the code base should not be affected. The algorithm used when the number of excitations is restricted is a slightly more elegant version of the one from my previous pull request (#1594), and is faster by another factor of 5 or more for the ""big"" test cases I looked at. ~~It is still recursive, but quite fast, and I did not find an elegant non-recursive algorithm.~~ I came up with an even faster non-recursive algorithm after all. It's arguably a bit less elegant, but I think still readable, and another 50% or so faster than the previous one (see the second commit below).; - `enr_state_dictionaries` now returns a dictionary and a list instead of two dictionaries. Before, `idx2state` was a dictionary with integer keys from 0 to nstates-1, which behaves essentially like a list. However, before Python 3.7, iteration order was not guaranteed to be insertion order (i.e., iterating ove",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1604:955,depend,depending,955,https://qutip.org,https://github.com/qutip/qutip/pull/1604,2,"['depend', 'interface']","['depending', 'interface']"
Integrability,"**Description**; Splitting #1409, part 2/3.; Contain the non Integrator/Evoler part of the PR. ##### Options; Add move some options around and add a class for ODE options. ; parallel_map and progress_bar will become options, not arguments to the `solve` function.; `store_states` default is None so that `store_states=False` is not overwritten when no e_ops given. (#1437). ##### Result; With this version, the `Result` object is responsible to know if states are stored and to compute expectation values, in the method `add(t, state: Qobj)`. The solver will be responsible to create the `Qobj` for the state.; (#1460): The type of the expectation value [float, complex] is set by the `expect` function, `QobjEvo.expect` or user provided expect function. ; (#1238): Multiple callback function can be given as expectation: `e_ops=expect_func`, `e_ops=[expect_func1, expect_func2]`, are both valid.; `mcsolve` (and probably stochactic) use `MultiTrajResult` or `MultiTrajResultAveraged`. They have both `average_state` and `run_states` instead of `states` which content change depending on options. They can also compute the `photocurrent` from the collapse. (making photocurrent_sesolve useless). ##### parallel; Add a `reduce_func` which allows to treat a results without waiting for all task to be done. Presently even when using `average_states`, all states are saved and the average is only computed at the end, which is not the behaviour expected by the users. ; (#1092 ) Add a loky based parallel map. It does not pickle object the same way as multiprocessing. ##### progress bar; Add a bar based on `tqdm`, which is a standard progress bar in python.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1462:61,Integrat,Integrator,61,https://qutip.org,https://github.com/qutip/qutip/pull/1462,2,"['Integrat', 'depend']","['Integrator', 'depending']"
Integrability,"**Description**; The PR provides a way to characterize thermal environments for open quantum systems, The user can now construct Thermal environments by specifying The spectral density, or the correlation function , or the power spectrum and the Temperature. Once specified the other two are calculated. We hope once integrated with the solvers, this PR will allow for a more systematic way of comparing different approaches, and easier simulations by quickly obtaining the quantities needed from the bath objects. The PR also provides exponential approximations of the environment via a fit of the correlation function, and a fit of the spectral density in terms of underdamped modes, the PR allows for incorporation of more approximation methods, which will be added in the future. . **Related issues or PRs**; This PR is a generalization of #2260 . Special Thanks to @pmenczel for improving the code significantly and valuable suggestions!. **TODO:**. I think perhaps those are better finished once we have decided that this structure for the environments is the way to go. However, the most important missing bits are . - [x] Finish documentation in the User's guide; - [x] Add relevant tests for the HEOM solver using the enviroment class; - [ ] Finish tests for environment.py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2534:317,integrat,integrated,317,https://qutip.org,https://github.com/qutip/qutip/pull/2534,1,['integrat'],['integrated']
Integrability,"**Description**; The current steadystate solver requires a time-independent Hamiltonian. This is obvious because a time-dependent Hamiltonian cannot have a steadystate.; However, if the Hamiltonian can be decomposed in a time-independent part H_0 and a periodic time-dependent part cos(w t) * H_i, the system reaches a stroboscopic steadystate. If the perturbation is small, this stroboscopic steadystate fluctuates so slightly that it can be considered as a real steadystate. I rewrote the Matrix Continued Fractions method [implemented in the Quantum Toolbox for Matlab](https://copilot.caltech.edu/documents/16743/qousersguide.pdf) to fit with python and qutip objects. It is 100% working, with running times lower than the second with an Hamiltonian 40 x 40. [Here](https://ibb.co/PthSzRd) the plot showing the comparison between the master equation dynamics, and the steadystate solution. Currently, there is the possibility to solve only this kind of problems. In the future we can add the support for multiple operators with different frequencies and amplitudes. **Related issues or PRs**; issue #1659. **Changelog**; Added the function steadystate_floquet, which returns the ""effective"" steadystate of a periodic driven system.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1660:120,depend,dependent,120,https://qutip.org,https://github.com/qutip/qutip/pull/1660,2,['depend'],['dependent']
Integrability,"**Description**; The guide for time-dependent dynamic includes plots fro the guide before (stochastic dynamics) because it fails to reset its context and properly close figures. This PR fixes that. The same goes for many other uses of `.. plot::` in the guides and other documentation, but I will leave fix those for when someone has time to go through them more carefully. See https://qutip.org/docs/latest/guide/dynamics/dynamics-time.html for the issue. **Related issues or PRs**; None. **Changelog**; Fix spurious plots that appear after many code blocks in the dynamics-time guide.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1931:36,depend,dependent,36,https://qutip.org,https://github.com/qutip/qutip/pull/1931,1,['depend'],['dependent']
Integrability,**Description**; The numerical integration for the `X` matrix uses the rectangular rule with a fixed number of time steps `nT = 100`. I changed `nT` to vary with the given `kmax` since the integrands frequency increases with `kmax`.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1961:31,integrat,integration,31,https://qutip.org,https://github.com/qutip/qutip/pull/1961,1,['integrat'],['integration']
Integrability,"**Description**; There are presently 8 variations of `CQobjEvo`. There are `Cte` and `Td` variants, Dense and csr sparse and serial vs openmp versions. Adding a feature, (ex. AHS support) result in the need to modify all of them and QobjEvoFunc and AHS PRs will add new one. So as a first step, I am merging them the ones presently available.; Cte (no coefficient) are now limit case of Td (time-dependant). omp ones have been removed in favor of a `spmvpy` variant that switch between the serial and omp version at compilation. . Also reworked the compilation of `QobjEvo`:; - Simpler with only 3 variants instead of 8.; - Compilation of the coefficient and object are separated. (`H *= -1j` does not force recompiling the coefficients.); - But have the side effect of making temp file cleanup harder. File are erased at python close instead of object deletion.; - Moved the location of temp file to ~/.qutip/temp for now, but does this work on windows?; - Auto-cleanup on importing qutip, for files older than 7 days for now. But should be set by user, the temp file location also. Other to-do:; Dense versions of CQobjEvo could be more optimized and is not parallel. One option would be to use blas and hope the user's blas is parallel. (probably other PR). ps. Running tests for now. Do not merge.; **Changelog**; Cleaned CObjEvo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1231:396,depend,dependant,396,https://qutip.org,https://github.com/qutip/qutip/pull/1231,1,['depend'],['dependant']
Integrability,"**Description**; This PR attempts to add version checks for resolving deprecation warnings for `matplotlib` in the `bloch` and `visualization` modules. Specifically, it attempts to resolve warnings related to `matplotlib>=3.4` and `matplotlib>=3.3`. Places where the change has been made:; - `proj3d.proj_transform`; - `Axes3D`. Thanks!. **Related issues or PRs**; Fix #1503 and #1502. **Changelog**; Added a version checking condition to handle specific functionalities depending on the `matplotlib` version.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1556:471,depend,depending,471,https://qutip.org,https://github.com/qutip/qutip/pull/1556,1,['depend'],['depending']
Integrability,"**Description**; This fixes typos I was able to find in the documentation for ""Solving Problems with Time-dependent Hamiltonians"". **Related issues or PRs**; None. **Changelog**; Some typos in the documentation for solving problems with time-dependent Hamiltonians have been corrected",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1936:106,depend,dependent,106,https://qutip.org,https://github.com/qutip/qutip/pull/1936,2,['depend'],['dependent']
Integrability,"**Description**; This is imports [BoFiN](https://github.com/tehruhn/bofin/) into QuTiP with the intention of replacing `qutip.nonmarkov.heom` with `qutip.nonmarkov.bofin` in 4.7 (where `qutip.nonmarkov.heom` will be a thin wrapper around the new, better HEOM solvers) and completely replacing `qutip.nonmarkov.heom` in 5.0. The strategy used was to import the BoFiN history (52 commits) without the examples and their data files into `qutip/nonmarkov/bofin` and then to proceed to tidy things up from there. Specifically I imported the branch from https://github.com/tehruhn/bofin/pull/7 which has @nwlambert's work on the `HSolverDL` replacement. **Todo**; - [x] Add more exhaustive tests.; - [x] Address or silence CodeClimate issues.; - [x] Remove the many assigned but unused variables.; - [x] Add better tests that new `HSolverDL` is compatible with the existing `HSolverDL`.; - [x] Replace the existing `HSolverDL` with the new one.; - [x] Decide what to do with `heom.HEOMSolver`. Should it stay as it is? Be incorporated into BoFiN? Be Removed? *-- Neil and I decided we should remove it*; - [x] Decide what to do about the `renorm` argument to the old `HSolverDL`. Do we add it to the new BoFiN one?; - [x] Decide what to do about the `stats` argument. I'm planning to just add a note telling people to use `pyinstrument` if they need to profile their code.; - [x] Make HSolverDL use a bath instead of having the Matsubara calculation burried inside the solver.; - [x] Add Pade coefficient calculator somewhere? Maybe also as a bath?; - [x] Clean up the interfaces of `BosonicHEOMSolver` and `FermionicHEOMSolver`.; - [x] Whatever else we discover along the way.; - [x] Keep just the gather_op mode of RHS construction.; - [x] Split bath classes out into their own module.; - [x] Add underdamped spectral density bath. **Follow up PRs (i.e. before 4.7)**; - [x] Add Lorentzian fermionic bath (#1726); - [x] Convert the extension BoFiN documentation and into an extensive QuTiP guide (this PR ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1601:223,wrap,wrapper,223,https://qutip.org,https://github.com/qutip/qutip/pull/1601,1,['wrap'],['wrapper']
Integrability,"**Description**; Update HEOM for v5. Other changes:; - This resulted in a bit of a refactor of the Result class (#1907); - I found a few places where QobjEvo did not correctly set `.type` and fixed those (they were breaking the HEOM tests). Todos and questions:; - [X] Should HierarchyADOsState store ado_state as a Data object rather than a numpy array? (it can't be stored as a Data object because the ADOs have shape `n_ado, n, n` and the Data layer only supports 2-d arrays).; - [X] How should the ado_state be stored on a results object? In particular, how should the change in e_ops signature be handled (for the HEOM solver the e_ops callables also take the full ADO state). (implemented); - [X] What should be done with the steady_state method? I guess it can just stay. Should other solvers also have this? (it should just stay, I think); - [x] Recheck the time-dependent case. (I also simplified the time-dependent case so that the Liouvillian is never added and so doesn't have to be subtracted off).; - [X] The HEOM can't really take new QObjEvo arguments each time `run` is called because calculating the RHS again is quite expensive. Maybe something can be done? (implemented -- passing new args to .run is now supported); - [X] In the base solver the new options seem to be set after retrieving the integrator -- is this right? (fixed); - [X] Compare performance to the HEOM in 4.7. (looks faster, yay!); - [X] We could also implement `.start()` and `.step()` for the HEOMSolver. Not quite sure of the use case yet though. (implemented and tested -- the implementation came for free after sorting out having .run inherit from the base solver).; - [x] Add some direct tests for the QobjEvo type errors that have been fixed.; - [x] Moved solver into `qutip.solver.heom`. . **Related issues or PRs**; - One of the todos from #1850; - In #1907 the Result class was changed largely to support extension by the HEOMSolver. **Changelog**; Update HEOM for v5.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869:871,depend,dependent,871,https://qutip.org,https://github.com/qutip/qutip/pull/1869,3,"['depend', 'integrat']","['dependent', 'integrator']"
Integrability,**Description**; Update `imul_csr` and `imul_dense` to use blas instead of a loop.; blas is faster and it makes a visible difference when timing the stochastic integration.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2125:160,integrat,integration,160,https://qutip.org,https://github.com/qutip/qutip/pull/2125,1,['integrat'],['integration']
Integrability,"**Description**; Update correlation functions to use v5 solvers.; The interface remain the mostly the same, I only made a few changes:; - Support for mcsolve as a back-end is removed. It was very slow, had a low precision and the saved memory is not as useful as it was 10 years ago. Removing it simplify the code a lot, but i can add it back if there is demand for it.; - Time-dependent Hamiltonian no longer support numpy array format: some correlation have 2 times list: `tlist` and `taulist`. It was not clear which one was to be used when using that format. `QobjEvo` input are supported, so building it before passing it to the correlation function is the way to go.; - `a_op`, `b_op`, `c_op` can be `QobjEvo`. Spectrum functions have been moved to their own file, but are mostly unchanged. I added `correlation_3op` which work as other correlation functions, but take a `Solver` instead of an Hamiltonian and `c_ops`. This allows any solver able to evolve density matrices to be used (`BRSolver`, `HEOMSolver`). It is only one function that support it directly: adding support of `Solver` to existing function would make the interface quite complicated, and changing it would break a lot of code and calling them using `H` is useful. . Fixed a small bugs in brmesolve and heom. I added data type option for the eigen solver of the diag integrator as it would otherwise sometime fail with cases in correlation (system and state not hermitian.)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1997:70,interface,interface,70,https://qutip.org,https://github.com/qutip/qutip/pull/1997,4,"['depend', 'integrat', 'interface']","['dependent', 'integrator', 'interface']"
Integrability,"**Description**; Update the guides for solver options, results and time-dependent system.; In `dynamics-data`, I added example of the `e_data` property and explained the difference between results for one and multiple trajectories. `dynamics-time` as been mostly rewritten to explain how to use `QobjEvo`. It explain most features needed to use them in solvers, but it's quite dry.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2028:72,depend,dependent,72,https://qutip.org,https://github.com/qutip/qutip/pull/2028,1,['depend'],['dependent']
Integrability,"**Description**; Upgrade from 4.5.1 to 4.5.2.; Include cherry picked commit from the following PR:. #1307 Fix zcsr_proj for bras with unsorted indices; #1306 Fix quadratic complexity in zcsr_inner; #1302 Enforce a CI test with scipy<1.5; #1301 Fix brtools zheevr test; #1298 Support scipy >= 1.5 in fast_csr_matrix matmul and legacy.ptrace; #1283 Milstein's heterodyne index fix; #1271 Remove duplicate line in setup.py; #1264 Remove incorrect use of 'is' in comparisons. Code from #1288 was added manually to evade conflict and related test were reinstalled. (removed in 4.5.1, not in master). #1269 and #1242 are not included since they depend on #1209 which is more that a bugfix and is not in 4.5.0. **Changelog**; Bug Fixes; -------; - `zcsr_proj` does not fail with unsorted indices (by **Jake Lishman**); - Fixed Milstein's heterodyne errors (by **Eric Giguère**); - Removed risky code (by **Jake Lishman**); <!-- - Fix `add_circuit` and `remove_gate` (by **Canoming**) -->. Improvements; -------; - Faster `zcsr_inner` (by **Jake Lishman**); - Support for Scipy 1.5 (by **Jake Lishman**)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1310:639,depend,depend,639,https://qutip.org,https://github.com/qutip/qutip/pull/1310,1,['depend'],['depend']
Integrability,"**Description**; User-facing changes:; - Solver's `Options` defaults can be set `qutip.settings.options`.; - Add the `save`, `load`, `reset` method to Options.; - The default `Options` are read from ""qutiprc"" when loading qutip.; - Options object can be initiated from a saved configuration. Example:; ```; import qutip.setting as qset; from qutip.solver import Options; qset.options.atol = 1e-10; qset.options.max_step = 1; qset.save(); print(Options().atol); >>> 1e-10; ```; `atol = 1e-10` and `max_step = 1` will be kept as default in future sessions. `qset.options.reset` to go back to qutip's default. I believe that loading custom settings when importing qutip will be appreciated with support of both `dense` and `sparse` most researchers will have a preference depending on their domain. This also brings all settings in one place: `qutip.settings...` even if we split the code in ""core"", ""solver"", ""qip?"", etc. Lastly, creating and moving around an `Options` object is no longer needed, changing the default before using the solver has the same effect. . For developers:; Principally @jakelishman as I expect you to add settings for core. ; I went with an implementation similar to python `dataclass`. To add `core`'s settings to `qutip.settings` you would do ""; ```; from qutip.settings import QtOptionClass. @QtOptionClass(""core""); class CoreOptions:; basetype = ""Dense""; auto_tidyup = True; ...; ```; And it would create the `__init__`, `__repr__`, `save`, `load` and `reset` methods, and create the default instance as `qutip.settings.core`. All attributes that do not start with ""_"" and are one of `bool`, `str`, `int`, `float`, `complex` will be in tagged to be saved and loaded. Those are the only types available now, but other can be added if needed. In `__init__` all these + properties with a setter can be initiated as keyword arguments. '__repr__' 'print' all the saved attributes and properties.; This is for the likes of `has_openmp`, I would make it a read only property. Anot",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1297:769,depend,depending,769,https://qutip.org,https://github.com/qutip/qutip/pull/1297,1,['depend'],['depending']
Integrability,"**Description**; We are interested in a HPC-boosted QuTiP version, both for generally dynamical equation solvers and quantum circuit simulation. The idea would be to enable multiprocessing on single node (which should be easier) and then MPI for multi-node simulation. Also consider an integration with CuPy and GPU computation. **Possible approach**; For what concerns the equation solvers, we had a look at qutip.mesolve and qutip.sesolve and we have seen that at the core of the integration method there is scipy.integrate.ode. ; Our first (maybe trivial) idea was to replace scipy.integrate.ode with a solver that would enable single node multiprocessing.; For what concerns the possibility of using MPI for multiple nodes.. this would probably require a greater effort and significant changes in the code.; For the quantum circuit simulation, we are not able to simulate a QFT circuit with more than 14 qubits.. maybe one first step would be to use a sparse matrix representation of unitaries instead of storing the full (2^N x 2^N) matrix. . **Additional context**; You can find info and specifications about our HPC infrastructure here https://www.hpc.cineca.it/content/hardware; The machines we will be using for this project are Marconi100 https://www.hpc.cineca.it/hardware/marconi100 and Galileo100 https://www.hpc.cineca.it/hardware/galileo100",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1671:286,integrat,integration,286,https://qutip.org,https://github.com/qutip/qutip/issues/1671,4,['integrat'],"['integrate', 'integration']"
Integrability,**Description**; We officially removed `parfor` in v5. This remove it's mentions in the using qutip in parallel documentation page.; Also removed it the the namespace of `ipynbtools.py` and `solve.parallel.py` (the later only exist until the stochastics solver are migrated to the class interface).,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2066:287,interface,interface,287,https://qutip.org,https://github.com/qutip/qutip/pull/2066,1,['interface'],['interface']
Integrability,"**Description**; When using `brmesolve`, the tensor would always be seen as time-dependent. Which for Bloch Redfield mean computing eigen vectors at each time-step and result is a massive slowdown when not required. There is no tests, the result does not change. . **Related issues or PRs**; fix #2530",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2541:81,depend,dependent,81,https://qutip.org,https://github.com/qutip/qutip/pull/2541,1,['depend'],['dependent']
Integrability,"**Description**; When we can't allocate enough memory for a matrix, there was no error message.; For sparse array, were the users expect the it not to take that much space, this can be confusing.; I added error message which tell the shape of the matrix and number of elements. It won't help much, but may show that the matrix is not as sparse as expected. **Related issues or PRs**; #2299",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2304:87,message,message,87,https://qutip.org,https://github.com/qutip/qutip/pull/2304,2,['message'],['message']
Integrability,"**Description**; `IntergratorScipylsoda.mcstep` read the integration range from the scipy solver's `rwork`. However `rwork` is initialized to 0 when initializing the state and only take the expected value when the first step in done. Therefore it would fail when starting from time other than `0`. `IntergratorScipyZvode` also used `rwork` in an unsafe way. Fix that and add a test. . **Related issues or PRs**; Similar improvement where first made in https://github.com/qutip/qutip/pull/1710, splitting it to made that PR simpler. **Changelog**; `IntergratorScipylsoda` safe for starting at any time.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1880:57,integrat,integration,57,https://qutip.org,https://github.com/qutip/qutip/pull/1880,1,['integrat'],['integration']
Integrability,"**Description**; `Options` and `SolverOptions` are objects that list all available options and pass them a solver. However in v5, with the choice of integrators, the supported options are not fixed. Most integration methods support `""atol""`, but `order` or `beta`, etc. are specific to some methods. SInce new integrators could be added by project such as qutip-cupy, `Options` can no longer be the place to list all supported options. It become little more that a dict. So I propose deprecating it. The documentation of `sesolve`, `mesolve`, etc. now list the options used by the solver and most common ode options and link the the integrator documentation. The class interface has the options property which document the options used by the solver and the integrators have the same. In the online documentation, the integrator api entries only contain the description of the method and the supported options. Since users don't need to call them directly, other methods are hidden and will be included in the dev documentation only. Usage will look like this, for functions:; ```; sesolve(H, psi, tlist, options={""store_states"": True, ""method"": ""lsoda"", ""atol"": 1e-5}); ```; and for the class interface:; ```; solver = SeSolver(H, options={""store_states"": True, ""method"": ""lsoda"", ""atol"": 1e-5}); solver.run(...); solver.options[""atol""] = 1e-9; solver.run(...) # run with the new tol.; solver.options = {""atol"": 1e-2} # only change the affected items. ; solver.run(...) # Also run with the new tol.; solver.options[""method""] = ""adams"" # reset all ode options, including ""atol"" supported by both.; solver.options = {""method"": ""bdf"", ""atol"": 1e-2} # reset all ode options then apply the new atol ; ```. Inside solvers, options are stored in a `_SolverOptions` which is a dict with frozen keys and feedback (chaging atol will reset the integrator).; ; Some `Intergrator` are slip so one method correspond to one integrator. Otherwise, `method` was an options used by both the solver to know which integr",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1955:149,integrat,integrators,149,https://qutip.org,https://github.com/qutip/qutip/pull/1955,7,"['integrat', 'interface']","['integration', 'integrator', 'integrators', 'interface']"
Integrability,"**Description**; `Solver` create the integrator at `__init__` instead of in `run` and `start`.; `step` and `run` no longer take an `options` parameter. `solver.options = new_options` will now reset the integrator to use the new options. However changing options will always reset the integrator. **Related issues or PRs**; Similar improvement where first made in #1710, splitting it to made that PR simpler. **Changelog**; Sovlers manage options as a property instead of method's parameter.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1879:37,integrat,integrator,37,https://qutip.org,https://github.com/qutip/qutip/pull/1879,3,['integrat'],['integrator']
Integrability,"**Description**; `actions/upload-artifact@v4` and `actions/download-artifact@v4` have breaking change cause the 5.0.3 release to miss wheels on pypi. Different jobs in one workflow can't create artifacts with the same name. ; Download artifact only download artifact from one job without the proper options.; (https://github.com/actions/upload-artifact/issues/478). I also updated cibuildwheel version, we did it in qutip-5.0.X to build wheels for py3.12, but did not push it yet to master. I also merged the jobs to publish or pypi and testpypi, only some environment variables changed and they could get out of synchronization. Lastly I added a check that all wheels are available before uploading to pypi. With 5.0.3's first try, only linux's wheel were published,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2477:613,synchroniz,synchronization,613,https://qutip.org,https://github.com/qutip/qutip/pull/2477,1,['synchroniz'],['synchronization']
Integrability,"**Description**; `countstat.py` does not depend on solver, however it has a **F** maintainability score on codeclimate.; This clean the code to make it more readable, running codeclimat locally, there are not issues left.; Also added a call using the pseudo inverse method in the test. **Changelog**; Make `countstat.py`'s code more readable.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1794:41,depend,depend,41,https://qutip.org,https://github.com/qutip/qutip/pull/1794,1,['depend'],['depend']
Integrability,"**Is your feature request related to a problem? Please describe.**. It is very convenient to take measurements in QuTip by passing list of observables in the `e_ops` argument of `mesolve` or `sesolve`, a list of expectation values at each time step of all those operators will be provided in returned `qutip.Result` object. It becomes much less elegant once we implement custom measurements and pass a callback function (for example to work with time-dependent Hamiltonians etc). According to the [documentation](http://qutip.org/docs/4.1/apidoc/functions.html#module-qutip.mesolve). > An instance of the class qutip.Result, which contains either an array result.expect of expectation values for the times specified by tlist, (...), or nothing if a callback function was given in place of operators for which to calculate the expectation values. So to work with callback function, we need to manage the storage by ourselves, for example by defining a global list, as it is done in [this example](https://nbviewer.jupyter.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-8-Adiabatic-quantum-computing.ipynb#Evolve-the-system-in-time). **Describe the solution you'd like**. Currently when we pass a list of operators such as. ```python; e_ops = [sigmax(), sigmay(), sigmaz()]; result = mesolve(H, rho0, e_ops=e_ops); ```. We will be able to access expectation value of `sigmax()` in `result.expect[0]`, of `sigmay()` in `result.expect[1]` and of course `sigmaz()` in `result.expect[2]`. Why not capture the custom measurement in similar way?. ```; def customMeasurement(tau, psi):; exp_x = expect(sigmax(), psi); exp_y = expect(sigmaz(), psi); exp_z = expect(sigmay(), psi); energy = expect(H, psi); fidelity = np.abs(psi_ref.overlap(psi))**2.; return [exp_x, exp_y, exp_z, energy, fidelity]; ```. Now it is possible to still get expectation values as before, but in addition we can take more custom measurements (in this example energy and fidelity of state) and access them in exactly the sam",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1238:451,depend,dependent,451,https://qutip.org,https://github.com/qutip/qutip/issues/1238,1,['depend'],['dependent']
Integrability,"**Is your feature request related to a problem? Please describe.**. Sometimes qutip.mesolver generate `rhs_**.pyx` or `cqobjevo_compiled_coeff_**.pyx` files.; According to the docstring of `solver.Options` and `rhs_generate`, I guess rhs-things relate to string-format time-dependent Hamiltonian, but I couldn't find description about such files. I didn't know even a meaning of 'rhs' (abbreviation?).; So I suggest to add documents about them. Especially, I have the following question:; - Can I pickle the solver result with a single and portable format?. Saving solver result with pickle module, and loading it sometimes fail, for example:; (I'm so sorry I haven't reproduce this behavior with simplest code, so the following is a dummy-code); ```; out = mesolve(...); with open(filename, 'wb') as f:; pickle.dump(out, f); ```; ```; Exception ignored in: <function QobjEvo.__del__ at 0x7f9e406f4310>; Traceback (most recent call last):; File ""/home/mizuno.kosuke/venvs/default/lib/python3.8/site-packages/qutip/qobjevo.py"", line 624, in __del__; for file_ in self.coeff_files:; AttributeError: 'QobjEvo' object has no attribute 'coeff_files'; ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); <ipython-input-22-e4ad332ebfe3> in <module>; 2 p_json = Path(filename); 3 with p_json.with_suffix('.result.pkl').open('rb') as f:; ----> 4 res = pickle.load(f). ModuleNotFoundError: No module named 'cqobjevo_compiled_coeff_877182617539010'; ```; Note: I used pickle module instead of `qsave/qload`. I guess it's no difference because `qsave` uses pickle module internally.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1684:274,depend,dependent,274,https://qutip.org,https://github.com/qutip/qutip/issues/1684,1,['depend'],['dependent']
Integrability,"**Is your feature request related to a problem? Please describe.**; In the device simulator of QuTiP (`qutip.qip.device`), a quantum computing device is characterized by the class `Processor` and its subclasses. It contains information about the available control pulses. In addition, a compiler is used to compile a set of universal quantum gates (e.g. RX, RY and ISWAP) into the corresponding control pulses. Together, they can automatically compiler an arbitrary quantum circuit into control pulses, create the time-dependent Hamiltonian representation and run the simulation using QuTiP solvers. However, in the current version, this compilation is done for each gate sequentially. At each time step, there is only one control pulse active. In practice, it is inefficient because usually several gates can be performed parallelly (e.g. X gate on qubit 0 and qubit 1). To make the compilation more practical, it is necessary to introduce a scheduler that schedules the control pulses. A similar example is https://qiskit.org/documentation/apidoc/pulse.html#schedules. **Describe the solution you'd like**; There is existing research (https://arxiv.org/pdf/1708.00023.pdf) on gate-level scheduling. It studies which gates can be performed at the same time. In the most general case, however, gate-level scheduling is not enough, since different gates often have different runtime (.e.g. CNOT usually takes longer time than X gate). Despite the difference, pulse-level scheduling can be done in a similar way as gate-level scheduling by generating a graph (see the reference above). The difference is that each pulse will have its own duration. The possible implementation in `qutip.qip` could be in two steps:; - Modernize the current compiler and create an `Instruction` class representing each compiled control instruction (pulse, qubit index, amplitude, duration).; - Implement the scheduling algorithm similar as in the above reference.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1243:519,depend,dependent,519,https://qutip.org,https://github.com/qutip/qutip/issues/1243,1,['depend'],['dependent']
Integrability,"**Is your feature request related to a problem? Please describe.**; The current steadystate solver requires a time-independent Hamiltonian. This is obvious because a time-dependent Hamiltonian cannot have a steadystate.; However, if the Hamiltonian can be decomposed in a time-independent part H_0 and a periodic time-dependent part cos(w t) * H_i, the system reaches a stroboscopic steadystate. If the perturbation is small, this stroboscopic steadystate fluctuates so slightly that it can be considered as a real steadystate. **Describe the solution you'd like**; I rewrote the Matrix Continued Fractions method [implemented in the Quantum Toolbox for Matlab](https://copilot.caltech.edu/documents/16743/qousersguide.pdf) to fit with python and qutip objects. It is 100% working, with running times lower than the second with an Hamiltonian 40 x 40.; I'm ready to do a pull request (this is my first time). I understood that I have to write an issue first right?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1659:171,depend,dependent,171,https://qutip.org,https://github.com/qutip/qutip/issues/1659,2,['depend'],['dependent']
Integrability,"**Is your feature request related to a problem? Please describe.**; The dimension argument of qutip operators are quite inconsistent in the **naming**, **type** and **description**. Here are a few examples picked from the [functions doc page](https://qutip.org/docs/latest/apidoc/functions.html):; - `basis` > `dimensions: int or list of ints` _Number of Fock states in Hilbert space. If a list, then the resultant object will be a tensor product over spaces with those dimensions._; - `enr_fock` > `dims: list` _A list of the dimensions of each subsystem of a composite quantum system._; - `enr_state_dictionaries` > `dims: list` _A list with the number of states in each sub-system._; - `phase_basis` > `N: int` _Number of basis vectors in Hilbert space._; - `projection` > `N: int` _Number of basis states in Hilbert space._; - `momentum` > `N: int` _Number of Fock states in Hilbert space._; - `num` > `N: int` _The dimension of the Hilbert space._; - `qeye` > `dimensions: (int) or (list of int) or (list of list of int)` _Dimension of Hilbert space. If provided as a list of ints, then the dimension is the product over this list, but the dims property of the new Qobj are set to this list. This can produce either oper or super depending on the passed dimensions._. Is there a reason for this apparent disorder? I'd be happy to propose a PR. **Describe the solution you'd like**; Harmonise the naming, type and description of the operators dimension argument. **Describe alternatives you've considered**; Even if not all operators are meant to work on composite Hilbert spaces, harmonising the naming and docstring would already be helpful. **Additional context**; Cc @francois-marie for indicating the issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1722:1235,depend,depending,1235,https://qutip.org,https://github.com/qutip/qutip/issues/1722,1,['depend'],['depending']
Integrability,"**Summary of what was done:**. - Changes in floquet_master_equation_rates to make it faster.; - Corrected transposition errors in _floquet_master_equation_tensor_ and changes to make it faster. I also removed a line so that the ME is solved in the interaction picture, this implies a different basis change in the _floquet_markov_mesolve_ function.; - Correction in _floquet_markov_mesolve_. As explained in the point above, the Floquet-Markov ME was not being solved in the interaction picture, therefore I modified _floquet_master_equation_tensor_ and modified the basis change in _floquet_markov_mesolve_. This modification requires an additional variable in the entry of _floquet_markov_mesolve_ which can not be chosen by default. For the moment, if this variable is not given and _floquet_basis=False_, then the density matrix or expectation values are returned in the interaction picture, in the computational basis, and a warning message is sent. ; - Added integration options in: _floquet_modes, floquet_modes_t, floquet_modes_table, floquet_states_t, floquet_modes_t, floquet_wavefunction_t, fsesolve, floquet_master_equation_rates, fmmesolve_; - Added test functions to verify the dissipative dynamics:; a) Compare _fmmesolve_ and _mesolve_ for the cases: (NO drive but dissipation) and (Drive but NO dissipation); b) Compare numerical and analytical matrix elements for a driven-dissipative TLS with RWA. There are some places where the code could be modified to optimize the running time, especially in the basis change in _floquet_markov_mesolve_.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1248#issuecomment-740126949:938,message,message,938,https://qutip.org,https://github.com/qutip/qutip/pull/1248#issuecomment-740126949,2,"['integrat', 'message']","['integration', 'message']"
Integrability,"**Summary**; This change adds `mpi_pmap` to qutip.parallel. It is an analogue of `parallel_map` that can run parallel computations on multiple CPUs (e.g., multiple supercomputer nodes) at the same time by using the MPI (message passing interface) API. We make use of the mpi4py module and its MPIPoolExecutor class. That is, parallel_map and mpi_pmap are basically the same, except that the `multiprocessing.ProcessPoolExecutor` gets replaced by the `mpi4py.MPIPoolExecutor`, and we allow users to provide arbitrary keyword arguments to be passed on to the MPIPoolExecutor. **Detailed list of changes**; * Added `mpi_pmap`. Extracted the common functionality of parallel_map, loky_pmap and mpi_pmap into a `_generic_pmap` function. The behavior of parallel_map and loky_pmap should be unchanged (except for a tiny change in loky_pmap regarding the order in which reduce_func is called).; * Added a section showcasing QuTiP's MPI capabilities in the tutorial notebook ""Non-Markovian Monte Carlo Solver"", see [PR 78](https://github.com/qutip/qutip-tutorials/pull/78) in qutip-tutorials.; * Added `mpi_options` to the options of MultiTrajSolver and all its subclasses. This option only takes effect if the 'map' option is set to 'mpi', in which case the mpi_options are added to the map_kwargs.; * For MultiTrajSolver, all its subclasses and corresponding XXsolve functions, I double-checked that the descriptions of the options in the docstrings correspond to the `solver_options`. That is, I did not touch the solver options except for adding 'mpi_options', but I edited the docstrings in some places in order to reflect the actually available solver options.; * While creating the new section in the tutorial notebook, I noticed some bugs in `MultiTrajResult#__add__` and fixed them.; * Added tests. Tests are skipped if the mpi4py module is not available (like with loky_pmap and the loky module). **Todo**; - [X] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296:220,message,message,220,https://qutip.org,https://github.com/qutip/qutip/pull/2296,2,"['interface', 'message']","['interface', 'message']"
Integrability,"+ self.Rt_timedep_pairs = []; > + for idx, key in enumerate(RateDic.keys()):; > + if key != 0.0:; > + self.Rt_timedep_pairs.append(list([Rate_Qobj_list[idx],; > + 'exp(1j*' + str(; > + key * list(Hargs.values())[0]); > + + '*t)'])); > + self.Rt_timedep_pairs = [list([Rate_Qobj_list[idx],; >; > This is defined twice...; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245675791>:; >; > > + time_sense=0,; > + quicksolve=False,; > + options=None):; > + """"""; > + Parameters; > + ----------; > +; > + H : :class:`Qobj`,:class:`QobjEvo`,:class:`QobjEvo` compatible format.; > + Periodic system Hamiltonian as :class:`QobjEvo`. List of; > + [:class:`Qobj`,:class:`Coefficient`] or callable that; > + can be made into :class:`QobjEvo` are also accepted.; > +; > + rho0 / psi0 : :class:`qutip.Qobj`; > + Initial density matrix or state vector (ket).; > +; > + Taulist:*list* / *array*; >; > Since time dependent c_ops not being supported is the exception, it would; > be nice to have a note in this regard.; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245633903>:; >; > > + List of lists of [collapse operator,collapse operator rate] pairs; > +; > + e_ops : list of :class:`qutip.Qobj` / callback function; > + List of operators for which to evaluate expectation values.; > + The states are reverted to the lab basis before applying the; > +; > + args : *dictionary*; > + Dictionary of parameters for time-dependent Hamiltonian; > +; > + time_sense : float; > + Experimental. Value of the secular approximation (in terms of system; > + frequency 2*np.pi/T) to use when constructing the rate matrix R(t).; > + Default value of zero uses the fully time-independent/most strict; > + secular approximation.; > +; > + quicksolve: Boolean; >; > The function does not seems to use it...; >; > —; > Reply to this email directly, view it on GitHub; > <ht",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847:14691,depend,dependent,14691,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847,2,['depend'],['dependent']
Integrability,", but note that it does generally mutate its arguments, especially if you pass a `QobjEvo` Liouvillian as the first argument. As long as you make sure you give each thread a distinct copy of the input Liouvillian, `mesolve` itself doesn't access global state as far as I recall. Just to be clear: there's two interconnected issues here: One is just being ""reentrant"" in the sense that I can safely have multiple `mesolve`'s run in parallel. This doesn't seem to be a problem for `mesolve` as a whole (propagating over the entire time grid). The other issue, at a lower level is whether I can keep the internal state of the integrator (`scipy.integrate.ode` or whatever else `mesolve` might be using) when propagating a single time step (and whether I can have multiple integrators to run in parallel that each safely keep track of their own state). That comes down to the integrator itself being ""reentrant"", of course. Certainly, calling `mesolve` in a loop (`In [19]`) doesn't keep the internal state of the integrator, hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent changes in QuTiP now use a re-entrant internal integrator, i.e. not `scipy.integrate.ode`. At the time I implemented the [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) by looking at what `mesolve` was doing at a low level for the specific case of density ma",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:6359,integrat,integrator,6359,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrator']
Integrability,", command); 973 cmd_obj.ensure_finalized(); --> 974 cmd_obj.run(); 975 self.have_run[command] = 1. ~\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in run(self); 185 ; --> 186 _build_ext.build_ext.run(self); 187 . ~\Anaconda3\lib\distutils\command\build_ext.py in run(self); 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 . ~\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 194 # Call original build_extensions; --> 195 _build_ext.build_ext.build_extensions(self); 196 . ~\Anaconda3\lib\distutils\command\build_ext.py in build_extensions(self); 447 else:; --> 448 self._build_extensions_serial(); 449 . ~\Anaconda3\lib\distutils\command\build_ext.py in _build_extensions_serial(self); 472 with self._filter_build_errors(ext):; --> 473 self.build_extension(ext); 474 . ~\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 . ~\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 344 if not self.initialized:; --> 345 self.initialize(); 346 compile_info = self._setup_compile(output_dir, macros, include_dirs,. ~\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 237 ; --> 238 vc_env = _get_vc_env(plat_spec); 239 if not vc_env:. ~\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 133 if not vcvarsall:; --> 134 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 135 . DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. ImportError Traceback (most recent call last); ~\Anaconda3\lib\site-packages\qutip\qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 43 import_code = compile(codeString, '<string>', 'exec'); ---> 44 exec(import_code, locals()); 45 except (ModuleNotF",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914:3458,depend,depends,3458,https://qutip.org,https://github.com/qutip/qutip/issues/1914,1,['depend'],['depends']
Integrability,", command); 973 cmd_obj.ensure_finalized(); --> 974 cmd_obj.run(); 975 self.have_run[command] = 1. ~\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in run(self); 185 ; --> 186 _build_ext.build_ext.run(self); 187 . ~\Anaconda3\lib\distutils\command\build_ext.py in run(self); 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 . ~\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 194 # Call original build_extensions; --> 195 _build_ext.build_ext.build_extensions(self); 196 . ~\Anaconda3\lib\distutils\command\build_ext.py in build_extensions(self); 447 else:; --> 448 self._build_extensions_serial(); 449 . ~\Anaconda3\lib\distutils\command\build_ext.py in _build_extensions_serial(self); 472 with self._filter_build_errors(ext):; --> 473 self.build_extension(ext); 474 . ~\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 . ~\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 344 if not self.initialized:; --> 345 self.initialize(); 346 compile_info = self._setup_compile(output_dir, macros, include_dirs,. ~\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 237 ; --> 238 vc_env = _get_vc_env(plat_spec); 239 if not vc_env:. ~\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 133 if not vcvarsall:; --> 134 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 135 . ImportError: Building module cqobjevo_compiled_coeff_8478972438562 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. The above exception was the direct cause of the following exception:. Exception Traceback (most recent call last); <ipython-input-79-356f01653dc9> in <module>; 4 ; 5 args = {'A': 6, 'sigma': 0.145}; ----> 6 output = qp.mesolve(H, ground, t, e_ops ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914:6993,depend,depends,6993,https://qutip.org,https://github.com/qutip/qutip/issues/1914,1,['depend'],['depends']
Integrability,", hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent changes in QuTiP now use a re-entrant internal integrator, i.e. not `scipy.integrate.ode`. At the time I implemented the [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) by looking at what `mesolve` was doing at a low level for the specific case of density matrices, `scipy.integrate.ode` was definitely being used, and that couldn't handle propagating in parallel (and by ""parallel"" I include alternating propagation steps from two different propagations). I'm also not sure what using `QobjEvo` does: In the benchmarking, there didn't seem to be any difference whether I wrap my nested lists into `QobjEvo` or not. Is there something specific that `QobjEvo` should enable that I can't do with nested lists?. > QuTiP 5 is (probably) going to formalise that (^) sort of low-level calling convention of `mesolve`, but it should work already. The new one look a bit different because instead of doing the setup very manually, there'll be a ""low-level"" function to prepare a master equation problem (and a Schrodinger equation one, etc), and then there'll be a `step` method instead of calling the ""high-level"" interface function `mesolve`, but functionally it'll do largely the same, just with a lot less data copying than the current form has to do. In the new system, it's likely",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:7364,integrat,integrate,7364,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrate']
Integrability,", in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\daniel\Anaconda\lib\site-packages\pyximport\pyximport.py"", line 186, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\daniel\Anaconda\lib\site-packages\pyximport\pyxbuild.py"", line 98, in pyx_to_dll; dist.run_commands(); File ""C:\Users\daniel\Anaconda\lib\distutils\dist.py"", line 953, in run_commands; self.run_command(cmd); File ""C:\Users\daniel\Anaconda\lib\distutils\dist.py"", line 972, in run_command; cmd_obj.run(); File ""C:\Users\daniel\Anaconda\lib\site-packages\Cython\Distutils\build_ext.py"", line 163, in run; _build_ext.build_ext.run(self); File ""C:\Users\daniel\Anaconda\lib\distutils\command\build_ext.py"", line 337, in run; self.build_extensions(); File ""C:\Users\daniel\Anaconda\lib\site-packages\Cython\Distutils\build_ext.py"", line 171, in build_extensions; self.build_extension(ext); File ""C:\Users\daniel\Anaconda\lib\distutils\command\build_ext.py"", line 496, in build_extension; depends=ext.depends); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 473, in compile; self.initialize(); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 383, in initialize; vc_env = query_vcvarsall(VERSION, plat_spec); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 271, in query_vcvarsall; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module qutip.cy.spmatfuncs failed: ['DistutilsPlatformError: Unable to find vcvarsall.bat\n']. I tried testing to see if it was installed correctly by typing import qutip.testing as qt and I get. Traceback (most recent call last):; File ""C:\Users\daniel\Anaconda\lib\site-packages\IPython\core\interactiveshell.py"", line 2883, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-3-ae6395ba7937>"", line 1, in <module>; import qutip.testing as qt; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/343:3703,depend,depends,3703,https://qutip.org,https://github.com/qutip/qutip/issues/343,1,['depend'],['depends']
Integrability,", rho0, tlist,. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _sesolve_func_td(H_func, psi0, tlist, e_ops, args, opt, progress_bar); 565 #; 566 return _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, norm,; --> 567 dims=psi0.dims); 568 ; 569 . /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, state_norm_func, dims); 656 ; 657 if t_idx < n_tsteps - 1:; --> 658 r.integrate(r.t + dt[t_idx]); 659 ; 660 progress_bar.finished(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in integrate(self, t, step, relax); 406 self._y, self.t = mth(self.f, self.jac or (lambda: None),; 407 self._y, self.t, t,; --> 408 self.f_params, self.jac_params); 409 except SystemError:; 410 # f2py issue with tuple returns, see ticket 1187. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in run(self, f, jac, y0, t0, t1, f_params, jac_params); 863 args = ((f, jac, y0, t0, t1) + tuple(self.call_args) +; 864 (f_params, jac_params)); --> 865 y1, t, istate = self.runner(*args); 866 if istate < 0:; 867 warnings.warn(self.__class__.__name__ + ': ' +. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4445)(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4289)(). TypeError: Cannot convert csr_matrix to numpy.ndarray; ```. Is it expected? (in this case the doc may be misleading). I tried to trace it down, but could not get any luck for the moment. EDIT: Actually, it seems that in such a case, one has to pass a density matrix and not a state as initial state, and that the liouvillian callback should return a `.data` item.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/505:2143,integrat,integrate,2143,https://qutip.org,https://github.com/qutip/qutip/issues/505,1,['integrat'],['integrate']
Integrability,", which is a very sizable chunk of the entire test suite. We can concentrate on rewriting the longest tests to make sure we're still testing all the behaviour, without excessively long runtimes. I've been fairly conservative with the number of tests I set in motion. On the free GitHub plan we can have 20 concurrent VMs running across the whole QuTiP organisation, which I think spreads across all repositories and all test runs. With no Windows tests currently active this is 6 test runs plus the documentation build. If we want more, we could consider spending some money ($4/user/month) to convert into a Teams account which gets us 60 concurrent VMs, but I don't see any need to do this right now. All the test runners now start up almost instantly, which really solves a lot of the slowdown we were getting on Travis. The actual speeds of the Linux VMs seem to be similar to what we had on Travis - the walltimes are slightly longer because I now install _all_ optional dependencies in most runners, so slightly more gets tested than before. Currently there's also a slowdown on several machines because `cvxpy` doesn't build many wheels, and none at all for Linux, on `pip`. I install all our dependencies except BLAS/LAPACK stuff that way, since it's easiest to read out the dependencies like that. We can potentially save some build time (maybe ~3 minutes?) if we install that from conda-forge instead. I also fixed a minor point of how environment variables are read within `setup.py` (in the end I didn't actually use the new behaviour in the action, but I did during testing), and added a warning filter on dnorm tests to account for a deprecated Numpy alias being used within `cvxpy` code. Also of note: this [should allow us to have commits that skip the testing stages](https://github.blog/changelog/2021-02-08-github-actions-skip-pull-request-and-push-workflows-with-skip-ci/) (though possibly not codeclimate). You should be able to put `[skip ci]` in the commit message to avoid it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551:2254,depend,dependencies,2254,https://qutip.org,https://github.com/qutip/qutip/pull/1551,3,"['depend', 'message']","['dependencies', 'message']"
Integrability,"- Cubic_Spline objects can now be used in the me, se, and mc dynamics; solvers as a time-dependent term.; - If possible, the Cubic_Spline object will be evaluated in the; str-based format.; - I have yet to add this functionality to the collapse terms .",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/550:89,depend,dependent,89,https://qutip.org,https://github.com/qutip/qutip/pull/550,1,['depend'],['dependent']
Integrability,- Fixed num_cpus not properly set for multiprocessing.; - Fixed compiler args not recognized by clang.; - Avoid data copy in cy_expect_psi_csr.; - Add ability to reuse seeds [Options(seeds=xxx)].; - Clean up numpy imports.; - Fast reset of scipy zvode integrator and change stepping mode.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264:252,integrat,integrator,252,https://qutip.org,https://github.com/qutip/qutip/pull/264,1,['integrat'],['integrator']
Integrability,"- I agree that renaming the _inner_point_color variable is a good idea. - The case you mention of black point_color with style 'l' also occurs in V4 and is solved by defining the variable as a list, e.g., ['black'] (which also works with the changes I proposed). So basically I assumed it was an expected use case. - I asked this question about style 's' plotting two colors in issue #1974, since we are given the same colors for style 's' and 'm', and Neil suggested leaving it as is. The docstring in the add_points function already tells you to give a single color for style 's' and a list of colors for style 'm'. - The error you get using style 'm' with two colors is that you need to specify a color for each point (you have to pass to the function a list of colors of the same length as the length of the points). In view of this, I don't know which approach you prefer to apply, as it depends on the expected use case. Given that the code works, perhaps the priority would be to specify the expected use while defining as part of issue #1913 the modifications you consider appropriate (although maybe someone will catch it earlier if you define it as a new issue).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2308#issuecomment-1916739672:893,depend,depends,893,https://qutip.org,https://github.com/qutip/qutip/pull/2308#issuecomment-1916739672,1,['depend'],['depends']
Integrability,- Remove dependence on networkx for graph_degree test.; - Add test to check list input for ntraj in mcsolver.; - Added fidelity and trace distance tests.; - Shorten names of tests that are longer than 80 chars.; - Updated installation and release notes.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/280:9,depend,dependence,9,https://qutip.org,https://github.com/qutip/qutip/pull/280,1,['depend'],['dependence']
Integrability,"- [ ] Document new user-modifiable settings (`log_handler`, `colorblind_safe`).; - [ ] Document new `.qutiprc` format, OS-dependent location.; - [ ] Document new unmodifiable settings (`fortran`, `umfpack`, `ipython`).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1524#issuecomment-191622423:122,depend,dependent,122,https://qutip.org,https://github.com/qutip/qutip/issues/1524#issuecomment-191622423,1,['depend'],['dependent']
Integrability,-----------------------------------------; ; qutip/cy/sparse_utils.pyx:335:30: ambiguous overloaded method; Compiling qutip/cy/spmatfuncs.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/stochastic.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/sparse_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/graph_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/interpolate.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/spmath.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/heom.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/math.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/cy/spconvert.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/ptrace.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/testing.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/control/cy_grape.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; [ 1/12] Cythonizing qutip/control/cy_grape.pyx; [ 2/12] Cythonizing qutip/cy/graph_utils.pyx; [ 3/12] Cythonizing qutip/cy/heom.pyx; [ 4/12] Cythonizing qutip/cy/interpolate.pyx; [ 5/12] Cythonizing qutip/cy/math.pyx; [ 6/12] Cythonizi,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:2266,depend,depends,2266,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['depend'],['depends']
Integrability,"------------------------; ...; cdef size_t ii, jj; cdef double * row_sum = <double *>PyDataMem_NEW_ZEROED(nrows, sizeof(double)); cdef double max_row = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; row_sum[ii] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:335:30: ambiguous overloaded method; Compiling qutip/cy/spmatfuncs.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/stochastic.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/sparse_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/graph_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/interpolate.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/spmath.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/heom.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/math.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/cy/spconvert.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/ptrace.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/testing.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/control/cy_grape.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cy",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:1996,depend,depends,1996,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['depend'],['depends']
Integrability,"----------; ...; cdef double * col_sum = <double *>PyDataMem_NEW_ZEROED(ncols, sizeof(double)); cdef double max_col = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; k = ind[jj]; col_sum[k] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:316:29: ambiguous overloaded method; ; Error compiling Cython file:; ------------------------------------------------------------; ...; cdef size_t ii, jj; cdef double * row_sum = <double *>PyDataMem_NEW_ZEROED(nrows, sizeof(double)); cdef double max_row = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; row_sum[ii] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:335:30: ambiguous overloaded method; Compiling qutip/cy/spmatfuncs.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/stochastic.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/sparse_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/graph_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/interpolate.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/spmath.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/heom.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/math.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/cy/spconvert.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-pac",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:1572,depend,depends,1572,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['depend'],['depends']
Integrability,"------; ; qutip/cy/sparse_utils.pyx:316:29: ambiguous overloaded method; ; Error compiling Cython file:; ------------------------------------------------------------; ...; cdef size_t ii, jj; cdef double * row_sum = <double *>PyDataMem_NEW_ZEROED(nrows, sizeof(double)); cdef double max_row = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; row_sum[ii] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:335:30: ambiguous overloaded method; Compiling qutip/cy/spmatfuncs.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/stochastic.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/sparse_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/graph_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/interpolate.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/spmath.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/heom.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/math.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/cy/spconvert.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/ptrace.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/testing.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cyth",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:1855,depend,depends,1855,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['depend'],['depends']
Integrability,"-based-time-dependence), but removing the collapse operators and multiplying the constant hamiltonian with a very small value (and changing the time vector accordingly). More specifically, I create two different hamiltonians by multiplying `H0` by 1e-12 and 1e-13 respectively. After computing the `mesolve` for both hamiltonians, one can see that in the second case all values have been set to 0. . ### Code to Reproduce the Bug. ```shell; from qutip import basis, tensor, qeye, destroy, num, mesolve, settings; import numpy as np. settings.auto_tidyup = False. ustate = basis(3, 0); excited = basis(3, 1); ground = basis(3, 2). N = 2 # Set where to truncate Fock state for cavity; sigma_ge = tensor(qeye(N), ground * excited.dag()) # |g><e|; sigma_ue = tensor(qeye(N), ustate * excited.dag()) # |u><e|; a = tensor(destroy(N), qeye(3)); ada = tensor(num(N), qeye(3)). t = np.linspace(-15, 15 * 1e11, 10) # Define time vector; psi0 = tensor(basis(N, 0), ustate) # Define initial state. g = 5 # coupling strength; H0 = -g * (sigma_ge.dag() * a + a.dag() * sigma_ge) # time-independent term; H1 = (sigma_ue.dag() + sigma_ue) # time-dependent term. def H1_coeff(t, args):; return 9 * np.exp(-(t / 5.) ** 2). H_0 = [H0 * 1e-12, [H1, H1_coeff]]; H_1 = [H0 * 1e-13, [H1, H1_coeff]]; output_1 = mesolve(H_0, psi0, t, e_ops=[ada]); output_2 = mesolve(H_1, psi0, t, e_ops=[ada]); print(output_1.expect[0]); print(output_2.expect[0]); ```. ### Code Output. ```shell; [0. 0.48307748 0.87367156 0.3158159 0.03202178 0.64420957; 0.8108019 0.1667205 0.12343592 0.77580413]; [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]; ```. ### Expected Behaviour. The second print should NOT have been all 0s. ### Your Environment. ```shell; QuTiP Version: 4.6.3; Numpy Version: 1.22.3; Scipy Version: 1.8.0; Cython Version: None; Matplotlib Version: 3.5.1; Python Version: 3.10.2; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1831:1456,depend,dependent,1456,https://qutip.org,https://github.com/qutip/qutip/issues/1831,1,['depend'],['dependent']
Integrability,"-pillow/imagemath</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f5eeeacf7539eaa0d93a677d7666bc7c142c8d1c""><code>f5eeeac</code></a> Name as 'options' in lambda_eval and unsafe_eval, but '_dict' in deprecated eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/facf3af93dabcbdd8cdbda8c3b50eefafa3bb04c""><code>facf3af</code></a> Added release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2a93aba5cfcf6e241ab4f9392c13e3b74032c061""><code>2a93aba</code></a> Use strncpy to avoid buffer overflow</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a670597bc30e9d489656fc9d807170b8f3d7ca57""><code>a670597</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.2.0...10.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.2.0&new-version=10.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` wi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:15335,depend,dependency-name,15335,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['depend'],['dependency-name']
Integrability,"-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1 (2021-07-06)</h2>; <ul>; <li>; <p>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a>; [radarhere]</p>; </li>; <li>; <p>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a>; [radarhere]</p>; </li>; <li>; <p>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a>; [t-vi, radarhere]</p>; </li>; </ul>; <h2>8.3.0 (2021-07-01)</h2>; <ul>; <li>; <p>Use snprintf instead of sprintf. CVE-2021-34552 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a>; [radarhere]</p>; </li>; <li>; <p>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a>; [kmilos]</p>; </li>; <li>; <p>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a>; [baletu, radarhere, newpanjing, hugovk]</p>; </li>; <li>; <p>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a>; [gofr, radarhere]</p>; </li>; <li>; <p>Replaced xml.etree.ElementTree <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5565"">#5565</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8013f130a5077b238a4346b73e149432b180a8ea""><code>8013f13</code></a> 8.3.2 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/23c7ca82f09df6ba1047d2d96714eb825",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:6289,depend,dependabot,6289,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,". CVE-2022-24303 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6010"">#6010</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>, <a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Restrict builtins within lambdas for ImageMath.eval. CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6009"">#6009</a> [radarhere]</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.0.1 (2022-02-03)</h2>; <ul>; <li>; <p>In show_file, use os.remove to remove temporary images. CVE-2022-24303 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6010"">#6010</a>; [radarhere, hugovk]</p>; </li>; <li>; <p>Restrict builtins within lambdas for ImageMath.eval. CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6009"">#6009</a>; [radarhere]</p>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6deac9e3a23caffbfdd75c00d3f0a1cd36cdbd5d""><code>6deac9e</code></a> 9.0.1 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c04d812b902356b8c20ee2ab881e1d96f7d66b4b""><code>c04d812</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/4fabec36197735438c80c174d018498be606c46c""><code>4fabec3</code></a> Added release notes for 9.0.1</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/02affaa491df37117a7562e6ba6ac52c4c871195""><code>02affaa</code></a> Added delay after opening image with xdg-open</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/ca0b58521881b95e47ea49d960d13d1c3dac823d""><code>ca0b585</code></a> Updated formatting</li>; <li><a href=""https://github.com/pyt",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:1492,depend,dependabot,1492,https://qutip.org,https://github.com/qutip/qutip/pull/1835,1,['depend'],['dependabot']
Integrability,". There were several issues with this function, which I have attempted to rectify as described below. Also its my first pull request (instead of asking anubhav or alex to help), so if I messed it up let me know. 1) The default method, a direct solution using sparse matrices, would fail with an ""exactly singular"" error on small examples (like the well studied single-resonant level or double quantum dot examples). The other sparse methods also suffered from the same issue, as did the 'direct' method for dense solutions. The latter, the dense matrices solver, I have fixed by capturing the error using lstsq() if np.linalg.solve() fails. For the sparse cases there seems to no equivalent fix. One can solve the issue by adding a small finite frequency to the definition of the shot noise. However, this seems like a bit of a bodge, and could cause issues if this small frequency is of the order of some system frequencies. So I have changed the default behavior to use the dense solvers, and added a description of the sparse matrix issues in the function description and in an example notebook I will upload to the example notebooks github. . Maybe someone can suggest a better fix?. 2) There was, in addition, an error in the definition of the shot noise formula in the default sparse matrix direct solution. In addition, the dense methods which used pinv() were also incorrectly defined (they were missing pre and post- multiplication by the 'Q' operator), and would thus give different results from the direct solutions. These issues have been fixed, and everything now fits expected analytical results (see example notebook). 3) I have added a frequency dependence via a list of possible frequencies at which to evaluate the shot noise. 4) I removed the option of passing a pseudo-inverse to the function directly, and changed various other interface things. I am not sure if everything conforms to PEP8 etc. Edit: the example notebook is here https://github.com/qutip/qutip-notebooks/pull/35",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/528:1796,depend,dependence,1796,https://qutip.org,https://github.com/qutip/qutip/pull/528,2,"['depend', 'interface']","['dependence', 'interface']"
Integrability,". We can also fix QuTiP library code by removing all times we try and put `Qobj` inside numpy arrays on our end, which would also be a fix. I've actually mellowed on my total opposition to `Qobj.__array__`. Thinking more, I'm not actually super unhappy with the idea of deprecating `Qobj.full()` in QuTiP 5.0 (not removing until at least 6.0, since it's such a major function) and promoting `np.array(qobj)` to be the de jure method of getting the dense array out of a `Qobj`. Qiskit recently (Qiskit/qiskit-terra#5402) changed their behaviour to do something very similar to this. You still wouldn't be able to put `Qobj` into numpy arrays except by doing something like; ```python; qobjs = np.empty(3, dtype=object); qobjs[:] = [qutip.qeye(2), qutip.qeye(2), qutip.qeye(2)]; ```; but probably that's not _too_ much of a big deal. Leaving QuTiP as it is right now would require that anyway. My main problem is actually just with allowing ufuncs and other numpy interfaces to act directly on `Qobj` without an explicit conversion step, because it promotes the idea that it's ok to act elementwise on a `Qobj`. I don't think we should allow ufuncs at all - `Qobj` is not meant to be like an `ndarray` and ufunc semantics don't make sense. We can set `Qobj.__array_ufunc__ = None` and `Qobj.__array_function__ = None` to disable numpy functions acting on `Qobj` directly. Example with this in place:; ```python; >>> import qutip; >>> import numpy as np; >>> np.array(qutip.qeye(2)); array([[1.+0.j, 0.+0.j],; [0.+0.j, 1.+0.j]]); >>> np.array([qutip.qeye(2), qutip.qeye(2)]) # Not ideal, but not our fault.; array([[[1.+0.j, 0.+0.j],; [0.+0.j, 1.+0.j]],. [[1.+0.j, 0.+0.j],; [0.+0.j, 1.+0.j]]]); >>> np.sin(qutip.qeye(2)); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: operand 'Qobj' does not support ufuncs (__array_ufunc__=None); >>> np.sin(np.array(qutip.qeye(2))); array([[0.84147098+0.j, 0. +0.j],; [0. +0.j, 0.84147098+0.j]]); ```; Alternatively, if people _r",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902:1256,interface,interfaces,1256,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902,1,['interface'],['interfaces']
Integrability,". ~\Anaconda3\lib\site-packages\qutip\__init__.py in <module>; 31 #; 32 ; ---> 33 from .core import *; 34 from .solver import *; 35 from .solver import nonmarkov. ~\Anaconda3\lib\site-packages\qutip\core\__init__.py in <module>; 1 from .options import *; 2 from .coefficient import *; ----> 3 from .qobj import *; 4 from .cy.qobjevo import *; 5 from .expect import *. ~\Anaconda3\lib\site-packages\qutip\core\qobj.py in <module>; 1806 from qutip.core.superoperator import vector_to_operator, operator_to_vector; 1807 from qutip.core.tensor import tensor_swap, tensor; -> 1808 from qutip.core import metrics as mts. ~\Anaconda3\lib\site-packages\qutip\core\metrics.py in <module>; 17 from .operators import qeye, qeye_like; 18 from .states import ket2dm; ---> 19 from .semidefinite import dnorm_problem, dnorm_sparse_problem; 20 from . import data as _data; 21 . ~\Anaconda3\lib\site-packages\qutip\core\semidefinite.py in <module>; 12 # Conditionally import CVXPY; 13 try:; ---> 14 import cvxpy; 15 ; 16 __all__ = [""dnorm_problem"", ""dnorm_sparse_problem""]. ~\Anaconda3\lib\site-packages\cvxpy\__init__.py in <module>; 16 ; 17 __version__ = ""1.1.17""; ---> 18 import cvxpy.interface.scipy_wrapper; 19 from cvxpy.atoms import *; 20 from cvxpy.constraints import PSD, SOC, NonPos, Zero. ~\Anaconda3\lib\site-packages\cvxpy\interface\scipy_wrapper.py in <module>; 35 ; 36 for method_name in BIN_OPS:; ---> 37 method = getattr(spmatrix, method_name); 38 new_method = wrap_bin_op(method); 39 setattr(spmatrix, method_name, new_method). AttributeError: type object 'spmatrix' has no attribute '__div__'; ```. ### Expected Behaviour. Expected no error when imprting qutip. ### Your Environment. ```shell; numpy 2.0.1; scipy 1.13.1; qutip 5.0.3.post1; Cython 0.29.24; matplotlib 3.9.1; py 1.10.0; python-dateutil 2.8.2; python-lsp-black 1.0.0; python-lsp-jsonrpc 1.0.0; python-lsp-server 1.2.4; python-slugify 5.0.2; 8 CPUs; Windows 10 Version	10.0.19045 Build 19045; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2500:2293,interface,interface,2293,https://qutip.org,https://github.com/qutip/qutip/issues/2500,2,['interface'],['interface']
Integrability,".. (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/numpy/numpy/commit/b235f9e701e14ed6f6f6dcba885f7986a833743f""><code>b235f9e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19283"">#19283</a> from charris/prepare-1.21.0-release</li>; <li><a href=""https://github.com/numpy/numpy/commit/34aebc2824cf8c2bdbe19040b82f98f18557c8ba""><code>34aebc2</code></a> MAINT: Update 1.21.0-notes.rst</li>; <li><a href=""https://github.com/numpy/numpy/commit/493b64bfe9c5396498325b87e5e80e1917555c41""><code>493b64b</code></a> MAINT: Update 1.21.0-changelog.rst</li>; <li><a href=""https://github.com/numpy/numpy/commit/07d7e72ab6880c05b5fdd98482cf88982e778393""><code>07d7e72</code></a> MAINT: Remove accidentally created directory.</li>; <li><a href=""https://github.com/numpy/numpy/commit/032fca5e2e9749b152ec56153f476e05efdff287""><code>032fca5</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19280"">#19280</a> from charris/backport-19277</li>; <li><a href=""https://github.com/numpy/numpy/commit/7d25b81025a50cc0368f5727c65e875ca769469a""><code>7d25b81</code></a> BUG: Fix refcount leak in ResultType</li>; <li><a href=""https://github.com/numpy/numpy/commit/fa5754e8c159a37fcd9345df261cf82821088ea0""><code>fa5754e</code></a> BUG: Add missing DECREF in new path</li>; <li><a href=""https://github.com/numpy/numpy/commit/61127bb4d46d523b699da1b63abaa5035670da27""><code>61127bb</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19268"">#19268</a> from charris/backport-19264</li>; <li><a href=""https://github.com/numpy/numpy/commit/143d45fff3ed9e051bdeef7bdb4df38025ea7d1c""><code>143d45f</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19269"">#19269</a> from charris/backport-19228</li>; <li><a href=""https://github.com/numpy/numpy/commit/d80e4738f781a1d206bbc04a2e863299e5f2",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:3203,depend,dependabot,3203,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['depend'],['dependabot']
Integrability,".. ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (tau) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (Qobj) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (OO) ... ok; control.pulseoptim: Hadamard",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:2859,depend,dependent,2859,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,1,['depend'],['dependent']
Integrability,".0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.6 MB); Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl (4.9 kB); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl (20.5 MB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.6 MB); Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-69.5.1 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/nump",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:5074,depend,depends,5074,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,".14...1.26.17"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.14&new-version=1.26.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:5624,Depend,Dependabot,5624,https://qutip.org,https://github.com/qutip/qutip/pull/2236,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,".14.0...2.15.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/netwo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:14497,Depend,Dependabot,14497,https://qutip.org,https://github.com/qutip/qutip/pull/2201,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,".17...1.26.18"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.17&new-version=1.26.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2246:2277,Depend,Dependabot,2277,https://qutip.org,https://github.com/qutip/qutip/pull/2246,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,".18...1.26.19"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.18&new-version=1.26.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:4413,Depend,Dependabot,4413,https://qutip.org,https://github.com/qutip/qutip/pull/2458,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,".2.0 to 8.3.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>8.3.2</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html</a></p>; <h2>Security</h2>; <ul>; <li>; <p>CVE-2021-23437 Raise ValueError if color specifier is too long; [hugovk, radarhere]</p>; </li>; <li>; <p>Fix 6-byte OOB read in FliDecode; [wiredfool]</p>; </li>; </ul>; <h2>Python 3.10 wheels</h2>; <ul>; <li>Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</li>; </ul>; <h2>Fixed regressions</h2>; <ul>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:1057,depend,dependabot,1057,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,".31.1 to 8.10.0.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ipython/ipython/commit/15ea1ed5a886d6c19c1cc4856f2cf04a2a547c57""><code>15ea1ed</code></a> release 8.10.0</li>; <li><a href=""https://github.com/ipython/ipython/commit/560ad109197c0f8373865896af369bb3b36fd229""><code>560ad10</code></a> DOC: Update what's new for 8.10 (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13939"">#13939</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/7557ade0ed927475d5ab5b573d0ea4febfb22683""><code>7557ade</code></a> DOC: Update what's new for 8.10</li>; <li><a href=""https://github.com/ipython/ipython/commit/385d69325319a5972ee9b5983638e3617f21cb1f""><code>385d693</code></a> Merge pull request from GHSA-29gw-9793-fvw7</li>; <li><a href=""https://github.com/ipython/ipython/commit/e548ee23ac460a99901f1cd43b94ae84a35ec393""><code>e548ee2</code></a> Swallow potential exceptions from showtraceback() (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13934"">#13934</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/0694b08b436203817059ec7e7136cf8561a6f013""><code>0694b08</code></a> MAINT: mock slowest test. (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13885"">#13885</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/865591252a67c6907fe03228b4053305715286e6""><code>8655912</code></a> MAINT: mock slowest test.</li>; <li><a href=""https://github.com/ipython/ipython/commit/a011765b44febfb11bae122d2ed7db763621ac8f""><code>a011765</code></a> Isolate the attack tests with setUp and tearDown methods</li>; <li><a href=""https://github.com/ipython/ipython/commit/c7a9470e540392c575aac46c3ee5cf4fe5123eb1""><code>c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow potential exceptions from showtraceback()</li>; <li>Additio",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085:1053,depend,dependabot,1053,https://qutip.org,https://github.com/qutip/qutip/pull/2085,1,['depend'],['dependabot']
Integrability,".4,<2.0a0'] -> __osx[version='>=10.9']. Your installed version is: 13.4; ```; This is odd given that I am using `numpy 1.26.2` and `Mac OS 13.4`, which appear to satisfy the requirements. Instead, I tried using `pip install qutip` which circumvented this error, but results in incorrect behavior as described below. ### Code to Reproduce the Bug. ```shell; import numpy as np; import qutip as qt. X = qt.sigmax(); print(np.linalg.eigh(X)[1]); ```. ### Code Output. ```shell; `; [[-0.70710678-0.70710678j 0.70710678+1.20710678j]; [ 0.70710678+0.70710678j 0.70710678+0.5j ]]; `; ```. ### Expected Behaviour. `; [[-0.70710678+0.j 0.70710678+0.j]; [ 0.70710678+0.j 0.70710678+0.j]]; `. ### Your Environment. ```shell; QuTiP Version: 4.7.3; Numpy Version: 1.26.2; Scipy Version: 1.11.4; Cython Version: None; Matplotlib Version: 3.8.2; Python Version: 3.12.0; Number of CPUs: 10; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. I am just comparing the behavior between two environments. The first one correctly diagonalizes the Pauli X operator with a Hadamard, and the second does not. The ""correct"" environment uses a standard numpy 1.26.2 install, with qutip installed with conda. The ""incorrect"" environment uses the `accelerate` numpy install, and qutip installed with pip. Each environment has the same `qutip.about()` return string. In reality, my use case is more complex than this, but I managed to boil down the error to faulty matrix diagonlization. I also want to add that I do indeed get a factor of ~4 speedup in pure numpy examples (like those linked in the SE post), so it's only when integrating with QuTiP that something goes awry. It might be the case that there really is some compatibility issue, and using `pip` doesn't really fix anything. I'm mainly wondering whether this behavior is expected, or if there is a correct way of getting QuTiP and the `accelerate` BLAS to work together that I am missing.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2273:2408,integrat,integrating,2408,https://qutip.org,https://github.com/qutip/qutip/issues/2273,1,['integrat'],['integrating']
Integrability,".; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pypa/wheel/blob/main/docs/news.rst"">wheel's changelog</a>.</em></p>; <blockquote>; <h1>Release Notes</h1>; <p><strong>UNRELEASED</strong></p>; <ul>; <li>Updated vendored <code>packaging</code> to 22.0</li>; </ul>; <p><strong>0.38.4 (2022-11-09)</strong></p>; <ul>; <li>Fixed <code>PKG-INFO</code> conversion in <code>bdist_wheel</code> mangling UTF-8 header values in; <code>METADATA</code> (PR by Anderson Bravalheri)</li>; </ul>; <p><strong>0.38.3 (2022-11-08)</strong></p>; <ul>; <li>Fixed install failure when used with <code>--no-binary</code>, reported on Ubuntu 20.04, by; removing <code>setup_requires</code> from <code>setup.cfg</code></li>; </ul>; <p><strong>0.38.2 (2022-11-05)</strong></p>; <ul>; <li>Fixed regression introduced in v0.38.1 which broke parsing of wheel file names with; multiple platform tags</li>; </ul>; <p><strong>0.38.1 (2022-11-04)</strong></p>; <ul>; <li>Removed install dependency on setuptools</li>; <li>The future-proof fix in 0.36.0 for converting PyPy's SOABI into a abi tag was; faulty. Fixed so that future changes in the SOABI will not change the tag.</li>; </ul>; <p><strong>0.38.0 (2022-10-21)</strong></p>; <ul>; <li>Dropped support for Python &lt; 3.7</li>; <li>Updated vendored <code>packaging</code> to 21.3</li>; <li>Replaced all uses of <code>distutils</code> with <code>setuptools</code></li>; <li>The handling of <code>license_files</code> (including glob patterns and default; values) is now delegated to <code>setuptools&gt;=57.0.0</code> (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/466"">#466</a>).; The package dependencies were updated to reflect this change.</li>; <li>Fixed potential DoS attack via the <code>WHEEL_INFO_RE</code> regular expression</li>; <li>Fixed <code>ValueError: ZIP does not support timestamps before 1980</code> when using; <code>SOURCE_DATE_EPOCH=0</code> or when on-disk timestamps are earlier than 1980",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:1063,depend,dependency,1063,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['depend'],['dependency']
Integrability,.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:6209,depend,depends,6209,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcp,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:7912,depend,depends,7912,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,".</li>; </ul>; <p>These are in addition to the ongoing work to provide SIMD support for; commonly used functions, improvements to F2PY, and better documentation.</p>; <p>The Python versions supported in this release are 3.8-3.10, Python 3.7; has been dropped. Note that 32 bit wheels are only provided for Python; 3.8 and 3.9 on Windows, all other wheels are 64 bits on account of; Ubuntu, Fedora, and other Linux distributions dropping 32 bit support.; All 64 bit wheels are also linked with 64 bit integer OpenBLAS, which should fix; the occasional problems encountered by folks using truly huge arrays.</p>; <h2>Expired deprecations</h2>; <h3>Deprecated numeric style dtype strings have been removed</h3>; <p>Using the strings <code>&quot;Bytes0&quot;</code>, <code>&quot;Datetime64&quot;</code>, <code>&quot;Str0&quot;</code>, <code>&quot;Uint32&quot;</code>,; and <code>&quot;Uint64&quot;</code> as a dtype will now raise a <code>TypeError</code>.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/19539"">gh-19539</a>)</p>; <h3>Expired deprecations for <code>loads</code>, <code>ndfromtxt</code>, and <code>mafromtxt</code> in npyio</h3>; <p><code>numpy.loads</code> was deprecated in v1.15, with the recommendation that; users use <code>pickle.loads</code> instead. <code>ndfromtxt</code> and <code>mafromtxt</code> were both; deprecated in v1.17 - users should use <code>numpy.genfromtxt</code> instead with; the appropriate value for the <code>usemask</code> parameter.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/19615"">gh-19615</a>)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/numpy/numpy/commit/4adc87dff15a247e417d50f10cc4def8e1c17a03""><code>4adc87d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20685"">#20685</a> from charris/prepare-for-1.22.0-release</li>; <li><a h",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:2247,depend,dependabot,2247,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['depend'],['dependabot']
Integrability,".com/ipython/ipython/commit/7f253dcf7b1c3a791a98d44b0dfc848d62bd27df""><code>7f253dc</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13412"">#13412</a> from bnavigator/backport-inspect</li>; <li><a href=""https://github.com/ipython/ipython/commit/4f26796cf368d24edadbb3d62e052e6aa4ddc820""><code>4f26796</code></a> fix xxlimited_35 import name</li>; <li><a href=""https://github.com/ipython/ipython/commit/77ca4a6312374f0659fb6973925e5b696d5dc74e""><code>77ca4a6</code></a> don't run nose-based iptest on py310, only pytest</li>; <li><a href=""https://github.com/ipython/ipython/commit/533e5094aa36b51549cf6a316fc439c6404643c9""><code>533e509</code></a> back to decorator skip</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.22.0...7.31.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.22.0&new-version=7.31.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` w",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780:2257,depend,dependency-name,2257,https://qutip.org,https://github.com/qutip/qutip/pull/1780,1,['depend'],['dependency-name']
Integrability,".com/python-pillow/Pillow/commit/bd5cf7db87c6abf7c3510a50170851af5538249f""><code>bd5cf7d</code></a> FLI tests for Oss-fuzz crash.</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/94a0cf1b14f09626c7403af83fa9fef0dfc9bb47""><code>94a0cf1</code></a> Fix 6-byte OOB read in FliDecode</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cece64f4be10ab28b12a83a3555af579dad343a5""><code>cece64f</code></a> Add 8.3.2 (2021-09-02) [CI skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e42238637651f191c2fc6e3f4024348c126e0ccc""><code>e422386</code></a> Add release notes for Pillow 8.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/08dcbb873217874eee0830fc5aaa1f231c5af4fa""><code>08dcbb8</code></a> Pillow 8.3.2 supports Python 3.10 [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.2.0...8.3.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.2.0&new-version=8.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` wil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:8839,Depend,Dependabot,8839,https://qutip.org,https://github.com/qutip/qutip/pull/1654,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,".com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36""><code>b594c5c</code></a> Merge pull request from GHSA-g4mx-q9vg-27p4</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/944f0eb134485f41bc531be52de12ba5a37bca73""><code>944f0eb</code></a> [1.26] Use vendored six in urllib3.contrib.securetransport</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.17...1.26.18"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.17&new-version=1.26.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2246:2120,depend,dependabot-automerge-start,2120,https://qutip.org,https://github.com/qutip/qutip/pull/2246,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"/10.0.1...10.2.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.0.1&new-version=10.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:15910,Depend,Dependabot,15910,https://qutip.org,https://github.com/qutip/qutip/pull/2302,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"/10.2.0...10.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.2.0&new-version=10.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:15886,Depend,Dependabot,15886,https://qutip.org,https://github.com/qutip/qutip/pull/2381,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"/5919"">#5919</a>; [radarhere]</p>; </li>; <li>; <p>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a>; [radarhere]</p>; </li>; <li>; <p>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a>; [radarhere]</p>; </li>; <li>; <p>Fixed palette index for zeroed color in FASTOCTREE quantize <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5869"">#5869</a>; [radarhere]</p>; </li>; <li>; <p>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a>; [radarhere]</p>; </li>; <li>; <p>Pass SAMPLEFORMAT to libtiff <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5848"">#5848</a>; [radarhere]</p>; </li>; <li>; <p>Added rounding when converting P and PA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5824"">#5824</a>; [radarhere]</p>; </li>; <li>; <p>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a>; [radarhere]</p>; </li>; <li>; <p>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a>; [hugovk]</p>; </li>; <li>; <p>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a>; [radarhere]</p>; </li>; <li>; <p>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a>; [m-shinder, radarhere]</p>; </li>; <li>; <p>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a>; [cmbruns, radarhere]</p>; </li>; <li>; <p>Convert subsequent GIF",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:12096,depend,dependabot,12096,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; [ 1/31] Cythonizing qutip/core/_brtensor.pyx; [ 2/31] Cythonizing qutip/core/_brtools.pyx; [ 3/31] Cythonizing qutip/core/cy/coefficient.pyx; [ 4/31] Cythonizing qutip/core/cy/math.pyx; [ 5/31] Cythonizing qutip/core/data/add.pyx; [ 6/31] Cythonizing qutip/core/data/base.pyx; [ 7/31] Cythonizing qutip/core/data/csr.pyx; [ 8/31] Cythonizing qutip/core/data/dense.pyx; [ 9/31] Cythonizing qutip/core/data/dia.pyx; [10/31] Cythonizing qutip/core/da,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:8515,depend,depends,8515,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,"/Pillow/issues/5828"">#5828</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix compilation on 64-bit Termux <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5793"">#5793</a> [<a href=""https://github.com/landfillbaby""><code>@​landfillbaby</code></a>]</li>; <li>Replace 'setup.py sdist' with '-m build --sdist' <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5785"">#5785</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use declarative package configuration <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5784"">#5784</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use title for display in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5788"">#5788</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix for PyQt6 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5775"">#5775</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.0.0 (2022-01-02)</h2>; <ul>; <li>; <p>Restrict builtins for ImageMath.eval(). CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a>; [radarhere]</p>; </li>; <li>; <p>Ensure JpegImagePlugin stops at the end of a truncated file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a>; [radarhere]</p>; </li>; <li>; <p>Fixed ImagePath.Path array handling. CVE-2022-22815, CVE-2022-22816 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a>; [radarhere]</p>; </li>; <li>; <p>Remove",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:9958,depend,dependabot,9958,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"/a> -- update link in license</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/9d514b4cad79357071c89d7dc4dc1b4df72bb997""><code>9d514b4</code></a> 2022.06.15</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4151e8849481f396537c34812068e89b32731e52""><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/196"">#196</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2020.12.05...2022.12.07"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2020.12.5&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035:2531,Depend,Dependabot,2531,https://qutip.org,https://github.com/qutip/qutip/pull/2035,1,['Depend'],['Dependabot']
Integrability,"/a> Name as 'options' in lambda_eval and unsafe_eval, but '_dict' in deprecated eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/facf3af93dabcbdd8cdbda8c3b50eefafa3bb04c""><code>facf3af</code></a> Added release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2a93aba5cfcf6e241ab4f9392c13e3b74032c061""><code>2a93aba</code></a> Use strncpy to avoid buffer overflow</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a670597bc30e9d489656fc9d807170b8f3d7ca57""><code>a670597</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.2.0...10.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.2.0&new-version=10.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:15497,depend,dependabot-security-updates,15497,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['depend'],['dependabot-security-updates']
Integrability,"/a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b60064388302f54a3455259ddab121618650a154""><code>b600643</code></a> [1.26] Bump RECENT_DATE (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3404"">#3404</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/7e2d3890926d4788e219f63e2e36fbeb8714827f""><code>7e2d389</code></a> [1.26] Fix running CPython 2.7 tests in CI (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3137"">#3137</a>)</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.18&new-version=1.26.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:4081,Depend,Dependabot,4081,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['Depend'],['Dependabot']
Integrability,"/a>)</li>; <li>Fixed parsing of file names containing commas in <code>RECORD</code> (PR by Hood Chatham)</li>; </ul>; <p><strong>0.37.0 (2021-08-09)</strong></p>; <ul>; <li>Added official Python 3.10 support</li>; <li>Updated vendored <code>packaging</code> library to v20.9</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pypa/wheel/commit/6f1608dc1a88f00d2390b9044bd655753f39234c""><code>6f1608d</code></a> Created a new release</li>; <li><a href=""https://github.com/pypa/wheel/commit/cf8f5ef50e32b836c4ffb43af68107f78dca8d80""><code>cf8f5ef</code></a> Moved news item from PR <a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a> to its proper place</li>; <li><a href=""https://github.com/pypa/wheel/commit/9ec201660fa07ee0714edd17c979a7039ea852a4""><code>9ec2016</code></a> Removed install dependency on setuptools (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/483"">#483</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/747e1f6090547abcf65108c5a229cbe21a64a2ae""><code>747e1f6</code></a> Fixed PyPy SOABI parsing (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/76275484bc0de72d1f56601dbba3e816fc2f00c6""><code>7627548</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/480"">#480</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/7b9e8e1022b9c850756ef34bc1a4a88042988a86""><code>7b9e8e1</code></a> Test on Python 3.11 final</li>; <li><a href=""https://github.com/pypa/wheel/commit/a04dfef41be0ab10eadbb2ed5d02b600682dc487""><code>a04dfef</code></a> Updated the pypi-publish action</li>; <li><a href=""https://github.com/pypa/wheel/commit/94bb62cb182023ac6586c5510ae9031ea56bd682""><code>94bb62c</code></a> Fixed docs not building due to code style changes</li>; <l",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:3394,depend,dependabot,3394,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['depend'],['dependabot']
Integrability,"/a>]</li>; <li>Fixed seeking to an L frame in a GIF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6576"">#6576</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Consider all frames when selecting mode for PNG save_all <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6610"">#6610</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Don't reassign crc on ChunkStream close <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6627"">#6627</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Raise a warning if NumPy failed to raise an error during conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6594"">#6594</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only read a maximum of 100 bytes at a time in IMT header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6623"">#6623</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Show all frames in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6611"">#6611</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow FLI palette chunk to not be first <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6626"">#6626</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>If first GIF frame has transparency for RGB_ALWAYS loading strategy, use RGBA mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6592"">#6592</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Round box position to integer when pasting embedded color <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6517"">#6517</a> [<a href=""https://github.com/radarhere""><code>@​r",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:5906,depend,dependabot,5906,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"/base/envs/qutip_test/bin/python3.9 /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-standalone-pip-g3h2vfu_/__env_pip__.zip/pip install --ignore-installed --no-user --prefix /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-build-env-m9x0lkny/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools packaging wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0'; cwd: None; Complete output (912 lines):; Collecting setuptools; Using cached setuptools-59.5.0-py3-none-any.whl (952 kB); Collecting packaging; Using cached packaging-21.3-py3-none-any.whl (40 kB); Collecting wheel; Using cached wheel-0.37.0-py2.py3-none-any.whl (35 kB); Collecting cython>=0.29.20; Using cached Cython-0.29.25-py2.py3-none-any.whl (983 kB); Collecting numpy<1.20,>=1.16.6; Using cached numpy-1.19.5.zip (7.3 MB); Installing build dependencies: started; Installing build dependencies: finished with status 'done'; Getting requirements to build wheel: started; Getting requirements to build wheel: finished with status 'done'; Preparing metadata (pyproject.toml): started; Preparing metadata (pyproject.toml): finished with status 'done'; Collecting scipy>=1.0; Using cached scipy-1.7.3-1-cp39-cp39-macosx_12_0_arm64.whl (27.0 MB); Collecting pyparsing!=3.0.5,>=2.0.2; Using cached pyparsing-3.0.6-py3-none-any.whl (97 kB); Building wheels for collected packages: numpy; Building wheel for numpy (pyproject.toml): started; Building wheel for numpy (pyproject.toml): finished with status 'error'; ERROR: Command errored out with exit status 1:; command: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/tmp8u8pmfcw_in_process.py build_wheel /var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/tmpcrdfx79e; cwd: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1; Complete output (881 lines):; Running fr",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:1702,depend,dependencies,1702,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['depend'],['dependencies']
Integrability,"/cd938a7744cb46e2ea525a0c3dd79aa08f98c150""><code>cd938a7</code></a> Autolink CWE numbers with sphinx-issues</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2e9c461ca417083c43145a991bf9e1ec93237d89""><code>2e9c461</code></a> Add CVE IDs</li>; <li>See full diff in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.0&new-version=9.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:4039,Depend,Dependabot,4039,https://qutip.org,https://github.com/qutip/qutip/pull/1835,1,['Depend'],['Dependabot']
Integrability,"/code></a>]</li>; <li>WebP: Fix memory leak during decoding on failure <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5798"">#5798</a> [<a href=""https://github.com/ilai-deutel""><code>@​ilai-deutel</code></a>]</li>; <li>Do not prematurely return in ImageFile when saving to stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5665"">#5665</a> [<a href=""https://github.com/infmagic2047""><code>@​infmagic2047</code></a>]</li>; <li>Added support for top right and bottom right TGA orientations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5829"">#5829</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected ICNS file length in header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5845"">#5845</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Block tile TIFF tags when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5839"">#5839</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added line width argument to ImageDraw polygon <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5694"">#5694</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not redeclare class each time when converting to NumPy <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5844"">#5844</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only prevent repeated polygon pixels when drawing with transparency <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5835"">#5835</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix pushes_fd method signature <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5833"">#5833</a> [<a href=""https://github.com/hoodmane""><code>@​hoodmane",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:7599,depend,dependabot,7599,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.31.0&new-version=2.32.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:11207,depend,dependabot,11207,https://qutip.org,https://github.com/qutip/qutip/pull/2434,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"/github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Only prefer command line tools SDK on macOS over default MacOSX SDK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5828"">#5828</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix compilation on 64-bit Termux <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5793"">#5793</a> [<a href=""https://github.com/landfillbaby""><code>@​landfillbaby</code></a>]</li>; <li>Replace 'setup.py sdist' with '-m build --sdist' <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5785"">#5785</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use declarative package configuration <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5784"">#5784</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use title for display in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5788"">#5788</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix for PyQt6 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5775"">#5775</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.0.0 (2022-01-02)</h2>; <ul>; <li>; <p>Restrict builtins for ImageMath.eval(). CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a>; [radarhere]</p>; </li>; <li>; <p>Ensure JpegImagePlugin stops at the end of a truncated file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a>; [radarhere]</p>; </li>; <li>; <p>Fixed ImagePat",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:9772,depend,dependabot,9772,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"/github.com/psf/requests/commit/60047ade64b0b882cbc94e047198818ab580911e""><code>60047ad</code></a> Bump github/codeql-action from 3.24.0 to 3.25.0</li>; <li><a href=""https://github.com/psf/requests/commit/31ebb8102c00f8cf8b396a6356743cca4362e07b""><code>31ebb81</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6682"">#6682</a> from frenzymadness/pytest8</li>; <li>Additional commits viewable in <a href=""https://github.com/psf/requests/compare/v2.31.0...v2.32.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.31.0&new-version=2.32.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:10385,depend,dependabot,10385,https://qutip.org,https://github.com/qutip/qutip/pull/2434,1,['depend'],['dependabot']
Integrability,"/github.com/pypa/wheel/commit/d635664abe560d48723cfc3b73c52ad8c906760a""><code>d635664</code></a> Updated the codecov action to the latest version</li>; <li><a href=""https://github.com/pypa/wheel/commit/fcb94cd51f7dfd40d88dff37415750d9e3638d3b""><code>fcb94cd</code></a> Updated <strong>version</strong> to match the release</li>; <li>Additional commits viewable in <a href=""https://github.com/pypa/wheel/compare/0.37.0...0.38.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wheel&package-manager=pip&previous-version=0.37.0&new-version=0.38.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:5391,depend,dependabot-automerge-start,5391,https://qutip.org,https://github.com/qutip/qutip/pull/2052,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"/github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Simplified code <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5315"">#5315</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Replaced xml.etree.ElementTree <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5565"">#5565</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/master/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>8.3.2 (2021-09-02)</h2>; <ul>; <li>; <p>CVE-2021-23437 Raise ValueError if color specifier is too long; [hugovk, radarhere]</p>; </li>; <li>; <p>Fix 6-byte OOB read in FliDecode; [wiredfool]</p>; </li>; <li>; <p>Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</p>; </li>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1 (2021-07-06)</h2>; <ul>; <li>; <p>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a>; [radarhere]</p>; </li>; <li>; <p>Handle removing",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:4619,depend,dependabot,4619,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"/ipython/commit/560ad109197c0f8373865896af369bb3b36fd229""><code>560ad10</code></a> DOC: Update what's new for 8.10 (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13939"">#13939</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/7557ade0ed927475d5ab5b573d0ea4febfb22683""><code>7557ade</code></a> DOC: Update what's new for 8.10</li>; <li><a href=""https://github.com/ipython/ipython/commit/385d69325319a5972ee9b5983638e3617f21cb1f""><code>385d693</code></a> Merge pull request from GHSA-29gw-9793-fvw7</li>; <li><a href=""https://github.com/ipython/ipython/commit/e548ee23ac460a99901f1cd43b94ae84a35ec393""><code>e548ee2</code></a> Swallow potential exceptions from showtraceback() (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13934"">#13934</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/0694b08b436203817059ec7e7136cf8561a6f013""><code>0694b08</code></a> MAINT: mock slowest test. (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13885"">#13885</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/865591252a67c6907fe03228b4053305715286e6""><code>8655912</code></a> MAINT: mock slowest test.</li>; <li><a href=""https://github.com/ipython/ipython/commit/a011765b44febfb11bae122d2ed7db763621ac8f""><code>a011765</code></a> Isolate the attack tests with setUp and tearDown methods</li>; <li><a href=""https://github.com/ipython/ipython/commit/c7a9470e540392c575aac46c3ee5cf4fe5123eb1""><code>c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow potential exceptions from showtraceback()</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.31.1...8.10.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085:1298,depend,dependabot,1298,https://qutip.org,https://github.com/qutip/qutip/pull/2085,1,['depend'],['dependabot']
Integrability,"/ipython/issues/13885"">#13885</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/865591252a67c6907fe03228b4053305715286e6""><code>8655912</code></a> MAINT: mock slowest test.</li>; <li><a href=""https://github.com/ipython/ipython/commit/a011765b44febfb11bae122d2ed7db763621ac8f""><code>a011765</code></a> Isolate the attack tests with setUp and tearDown methods</li>; <li><a href=""https://github.com/ipython/ipython/commit/c7a9470e540392c575aac46c3ee5cf4fe5123eb1""><code>c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow potential exceptions from showtraceback()</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.31.1...8.10.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.31.1&new-version=8.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` w",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085:2304,depend,dependency-name,2304,https://qutip.org,https://github.com/qutip/qutip/pull/2085,1,['depend'],['dependency-name']
Integrability,"/issues/19268"">#19268</a> from charris/backport-19264</li>; <li><a href=""https://github.com/numpy/numpy/commit/143d45fff3ed9e051bdeef7bdb4df38025ea7d1c""><code>143d45f</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19269"">#19269</a> from charris/backport-19228</li>; <li><a href=""https://github.com/numpy/numpy/commit/d80e4738f781a1d206bbc04a2e863299e5f2e104""><code>d80e473</code></a> BUG: Removed typing for == and != in dtypes</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.19.5&new-version=1.21.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:4762,Depend,Dependabot,4762,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['Depend'],['Dependabot']
Integrability,"/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FEFFFFFFFFFFFFF: ???; ```. Obviously I don't have the debugging symbols for MKL, so it's pretty hard to say where exactly it's coming from, but it is at least clearly inside that library. I ran `valgrind` on the `Malloc.py` file above, and get the exact same invalid write, which is promising. So the most likely public Python call is `scipy.linalg.eig`. ## Minimal reproducer. Ok, so now let me cut it down to a minimum `eig.py`:. ```python; import numpy as np; import scipy.linalg. x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x1031237",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:6794,message,message,6794,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['message'],['message']
Integrability,"/li>; <li><a href=""https://github.com/urllib3/urllib3/commit/7e2d3890926d4788e219f63e2e36fbeb8714827f""><code>7e2d389</code></a> [1.26] Fix running CPython 2.7 tests in CI (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3137"">#3137</a>)</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.18&new-version=1.26.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:4346,Depend,Dependabot,4346,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['Depend'],['Dependabot']
Integrability,"/li>; <li>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>WebP: Fix memory leak during decoding on failure <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5798"">#5798</a> [<a href=""https://github.com/ilai-deutel""><code>@​ilai-deutel</code></a>]</li>; <li>Do not prematurely return in ImageFile when saving to stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5665"">#5665</a> [<a href=""https://github.com/infmagic2047""><code>@​infmagic2047</code></a>]</li>; <li>Added support for top right and bottom right TGA orientations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5829"">#5829</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected ICNS file length in header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5845"">#5845</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Block tile TIFF tags when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5839"">#5839</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added line width argument to ImageDraw polygon <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5694"">#5694</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not redeclare class each time when converting to NumPy <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5844"">#5844</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only prevent repeated polygon pixels when drawing with transparency <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5835"">#5835</a> [<a href=""https://github.com/radarhere""><code>@​radar",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:7394,depend,dependabot,7394,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"/li>; <li>Use declarative package configuration <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5784"">#5784</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use title for display in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5788"">#5788</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix for PyQt6 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5775"">#5775</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.0.0 (2022-01-02)</h2>; <ul>; <li>; <p>Restrict builtins for ImageMath.eval(). CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a>; [radarhere]</p>; </li>; <li>; <p>Ensure JpegImagePlugin stops at the end of a truncated file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a>; [radarhere]</p>; </li>; <li>; <p>Fixed ImagePath.Path array handling. CVE-2022-22815, CVE-2022-22816 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a>; [radarhere]</p>; </li>; <li>; <p>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a>; [radarhere]</p>; </li>; <li>; <p>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a>; [radarhere]</p>; </li>; <li>; <p>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a>; [radarhere]</p>; </li>; <li>; <p>Fixe",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:10485,depend,dependabot,10485,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"/p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.3.0 (2022-10-29)</h2>; <ul>; <li>; <p>Limit SAMPLESPERPIXEL to avoid runtime DOS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a>; [wiredfool]</p>; </li>; <li>; <p>Initialize libtiff buffer when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a>; [radarhere]</p>; </li>; <li>; <p>Inline fname2char to fix memory leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a>; [nulano]</p>; </li>; <li>; <p>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a>; [nulano]</p>; </li>; <li>; <p>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a>; [hugovk]</p>; </li>; <li>; <p>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a>; [cgohlke]</p>; </li>; <li>; <p>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a>; [radarhere]</p>; </li>; <li>; <p>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a>; [cgohlke]</p>; </li>; <li>; <p>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a>; [hmaarrfk]</p>; </li>; <li>; <p>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a>; [radarhere]</p>; </li>; <li>; <p>Do not modify previous frame when calculating delta in PNG <a href",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:11061,depend,dependabot,11061,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"/python-pillow/Pillow/commit/cece64f4be10ab28b12a83a3555af579dad343a5""><code>cece64f</code></a> Add 8.3.2 (2021-09-02) [CI skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e42238637651f191c2fc6e3f4024348c126e0ccc""><code>e422386</code></a> Add release notes for Pillow 8.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/08dcbb873217874eee0830fc5aaa1f231c5af4fa""><code>08dcbb8</code></a> Pillow 8.3.2 supports Python 3.10 [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.2.0...8.3.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.2.0&new-version=8.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:9155,Depend,Dependabot,9155,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['Depend'],['Dependabot']
Integrability,"/radarhere""><code>@​radarhere</code></a>]</li>; <li>Pad IM palette to 768 bytes when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6579"">#6579</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added DDS BC6H reading <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6449"">#6449</a> [<a href=""https://github.com/ShadelessFox""><code>@​ShadelessFox</code></a>]</li>; <li>Added support for opening WhiteIsZero 16-bit integer TIFF images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6642"">#6642</a> [<a href=""https://github.com/JayWiz""><code>@​JayWiz</code></a>]</li>; <li>Raise an error when allocating translucent color to RGB palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6654"">#6654</a> [<a href=""https://github.com/jsbueno""><code>@​jsbueno</code></a>]</li>; <li>Moved mode check outside of loops <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6650"">#6650</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added reading of TIFF child images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6569"">#6569</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved ImageOps palette handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6596"">#6596</a> [<a href=""https://github.com/PososikTeam""><code>@​PososikTeam</code></a>]</li>; <li>Defer parsing of palette into colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6567"">#6567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Apply transparency to P images in ImageTk.PhotoImage <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6559"">#6559</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use rounding in",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:8095,depend,dependabot,8095,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Use snprintf instead of sprintf <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a> [<a href=""https://github.com/newpanjing""><code>@​newpanjing</code></a>]</li>; <li>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a> [<a href=""https://github.com/gofr""><code>@​gofr</code></a>]</li>; <li>Do not use background or transparency index for new color <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5564"">#5564</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Simplified code <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5315"">#5315</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Replaced xml.etree.ElementTree <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5565"">#5565</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/master/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>8.3.2 (2021-09-02)</h2>; <ul>; <li>; <p>CVE-2021-23437 Raise ValueError if color specifier is too long; [hugovk, radarhere]</p>; </li>; <li>; <p>Fix 6-byte OOB read in FliDecode; [wiredfool]</p>; </li>; <li>;",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:3548,depend,dependabot,3548,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"0000000e+000 +0.00000000e+000j 0.00000000e+000 +5.29328215e+180j; 5.29328215e+180 +1.18017809e+000j 0.00000000e+000 +1.33956231e+000j; 1.33956231e+000 +0.00000000e+000j 1.48170345e+000 +0.00000000e+000j; 1.84311049e+000 +0.00000000e+000j 9.48683298e-001 +0.00000000e+000j]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 3.16227766e-001 +0.00000000e+000j 7.63441362e-001 +0.00000000e+000j; 0.00000000e+000 +4.00979001e+087j 0.00000000e+000 +5.37624943e+241j; 5.37624943e+241 +1.18017809e+000j 0.00000000e+000 +1.33956231e+000j; 1.33956231e+000 +0.00000000e+000j 1.48170345e+000 +0.00000000e+000j; 1.84311049e+000 +0.00000000e+000j 9.48683298e-001 +0.00000000e+000j]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 0.31622777+0.j 0.76344136+0.j 0.00000000+0.j; 0.00000000+0.j 0.00000000+1.18017809j 0.00000000+1.33956231j; 1.33956231+0.j 1.48170345+0.j 1.84311049+0.j; ```; I did the same test on two machines and on my old laptop it works fine, so it probably is something architecture dependent. The output of lscpu is:; ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 8; On-line CPU(s) list: 0-7; Thread(s) per core: 1; Core(s) per socket: 8; Socket(s): 1; NUMA node(s): 1; Vendor ID: GenuineIntel; CPU family: 6; Model: 63; Model name: Intel(R) Core(TM) i7-5960X CPU @ 3.00GHz; Stepping: 2; CPU MHz: 1199.890; CPU max MHz: 3500,0000; CPU min MHz: 1200,0000; BogoMIPS: 5989.11; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 256K; L3 cache: 20480K; NUMA node0 CPU(s): 0-7; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/681:2567,depend,dependent,2567,https://qutip.org,https://github.com/qutip/qutip/issues/681,1,['depend'],['dependent']
Integrability,"022.12.07"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2020.12.5&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035:2863,Depend,Dependabot,2863,https://qutip.org,https://github.com/qutip/qutip/pull/2035,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"023.07.22"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2022.12.7&new-version=2023.7.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/netwo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2205:3239,Depend,Dependabot,3239,https://qutip.org,https://github.com/qutip/qutip/pull/2205,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"1""><code>339ad34</code></a> Use pytest==6.2.4 on Python 3.10+</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/f271c9c3149e20d7feffb6429b135bbb6c09ddf4""><code>f271c9c</code></a> Apply latest Black formatting</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/1884878aac87ef0494b282e940c32c24ee917d52""><code>1884878</code></a> [1.26] Properly proxy EOF on the SSLTransport test suite</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.4...1.26.5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.4&new-version=1.26.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563:3303,depend,dependabot,3303,https://qutip.org,https://github.com/qutip/qutip/pull/1563,1,['depend'],['dependabot']
Integrability,"1- (#1196 ) The error caused another one and the original message was lost, should work properly.; 2- (#1081 ) Added some check to catch keyboard interrupt in some cython functions: `mcsolve`, `stochastic` and `qobjevo`'s cython functions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1199:58,message,message,58,https://qutip.org,https://github.com/qutip/qutip/pull/1199,1,['message'],['message']
Integrability,"1. Don't worry, those aren't problems. A problem would just say ""FAIL"". ""XFAIL"" means ""expected to fail"", which in this case is because those tests were written for an older testing framework and haven't been updated yet.; 2. No, you don't need to worry. If it's installed, you'll get a message at the end which says something like; ```====== 1000 passed, 50 skipped, 10 xfailed in 120s ======```; where the numbers and times will be different, but there won't be any red text saying ""10 failed"" (""xfailed"" is fine). If you've installed `qutip` from `conda` following the [recommended instructions here](http://qutip.org/docs/latest/installation.html#platform-independent-installation), then you should have a valid installation without any issues, and Cython should have sorted itself out. The general principle is that installing `qutip` is as easy as running; ```conda install qutip```; if you've got the `conda-forge` channel activated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596:287,message,message,287,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596,1,['message'],['message']
Integrability,"1. version 3.2.0 can not run testing in my mac system OS X EI Capitan. When I try:; `$ python3 -c ""import qutip.testing as qt; qt.run()""`; I get the follow message:; ; > ---; > ; > Ran 0 tests in 0.000s; 2. However, the testing.py and the folder 'tests' exist. I can run the test in the 'tests' folder one-by-one. For example, when I run:; `$ sudo python3 test_mesolve.py`; I get; ; > .....................; > Ran 21 tests in 48.167s; > ; > OK; 3. `sudo` is needed here for permission. For example, when I run: ; `$ python3 test_mesolve.py`; I get a set of the following error message. > # .....E...E.E...E..E..; > ## ERROR: mesolve: time-dependence as array with super as init cond; > ; > Traceback (most recent call last):; > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/nose/case.py"", line 198, in runTest; > self.test(*self.arg); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/tests/test_mesolve.py"", line 638, in testMETDDecayAsArray; > out1 = mesolve(H, psi0, tlist, c_op_list, []); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/mesolve.py"", line 277, in mesolve; > progress_bar); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/mesolve.py"", line 661, in _mesolve_list_str_td; > cgen.generate(config.tdname + "".pyx""); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/cy/codegen.py"", line 116, in generate; > self.file(filename); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/cy/codegen.py"", line 78, in file; > self.file = open(filename, ""w""); > PermissionError: [Errno 13] Permission denied: 'rhs165050.pyx",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/445:156,message,message,156,https://qutip.org,https://github.com/qutip/qutip/issues/445,3,"['depend', 'message']","['dependence', 'message']"
Integrability,"1.2 to 4.1.4 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/287"">#287</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/1fc808626a895a916b1e4c2b63abae6c5eafdbe3""><code>1fc8086</code></a> Bump peter-evans/create-pull-request from 6.0.4 to 6.0.5 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/288"">#288</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2023.07.22...2024.07.04"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2023.7.22&new-version=2024.7.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2483:3326,depend,dependabot,3326,https://qutip.org,https://github.com/qutip/qutip/pull/2483,1,['depend'],['dependabot']
Integrability,"1.26.4...1.26.5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.4&new-version=1.26.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563:3489,Depend,Dependabot,3489,https://qutip.org,https://github.com/qutip/qutip/pull/1563,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"14798043-0.36381018j, 0.19057482+0.j ]],. [[ 0.74030166+0.j , -0.42252924+0.11715014j],; [-0.42252924-0.11715014j, 0.25969834+0.j ]],; [[ 0.76627252+0.j , 0.14479804+0.39765874j],; [ 0.14479804-0.39765874j, 0.23372748+0.j ]],; [[ 0.69965345+0.j , 0.4260361 -0.16920917j],; [ 0.4260361 +0.16920917j, 0.30034655+0.j ]],; [[ 0.80355468+0.j , 0.36706718-0.15204028j],; [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) . predictions=[mesolve(H,; Qobj(estados_val[i]),; time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]`. ```; `---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-26-ef5799d8412d> in <module>; 26 [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) ; 27 ; ---> 28 predictions=[mesolve(H,; 29 Qobj(estados_val[i]),; 30 time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]. <ipython-input-26-ef5799d8412d> in <listcomp>(.0); 26 [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) ; 27 ; ---> 28 predictions=[mesolve(H,; 29 Qobj(estados_val[i]),; 30 time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 273 progress_bar, dims=rho0.dims); 274 res.num_collapse = len(c_ops). ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); 515 ; 516 if not r.successful():; --> 517 raise Exception(""ODE integration error: Try to increase ""; 518 ""the allowed number of substeps by increasing ""; 519 ""the nsteps parameter in the Options class.""). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879127553:2117,integrat,integration,2117,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879127553,2,['integrat'],['integration']
Integrability,"14f974ada373af1""><code>7277d80</code></a> update pre-commit hooks</li>; <li><a href=""https://github.com/pallets/jinja/commit/5c8a10522421270f66376a24ec8e0d6812bc4b14""><code>5c8a105</code></a> Make nested-trans-block exceptions nicer (<a href=""https://redirect.github.com/pallets/jinja/issues/1918"">#1918</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/19a55db3b411343309f2faaffaedbb089e841895""><code>19a55db</code></a> Make nested-trans-block exceptions nicer</li>; <li><a href=""https://github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7""><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>; <li><a href=""https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23""><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.2...3.1.3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` wil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:3321,Depend,Dependabot,3321,https://qutip.org,https://github.com/qutip/qutip/pull/2291,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"18 (2023-10-17)</h1>; <ul>; <li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/9c2c2307dd1d6af504e09aac0326d86ee3597a0b""><code>9c2c230</code></a> Release 1.26.18 (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3159"">#3159</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36""><code>b594c5c</code></a> Merge pull request from GHSA-g4mx-q9vg-27p4</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/944f0eb134485f41bc531be52de12ba5a37bca73""><code>944f0eb</code></a> [1.26] Use vendored six in urllib3.contrib.securetransport</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.17...1.26.18"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.17&new-version=1.26.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2246:1624,Depend,Dependabot,1624,https://qutip.org,https://github.com/qutip/qutip/pull/2246,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"1917555c41""><code>493b64b</code></a> MAINT: Update 1.21.0-changelog.rst</li>; <li><a href=""https://github.com/numpy/numpy/commit/07d7e72ab6880c05b5fdd98482cf88982e778393""><code>07d7e72</code></a> MAINT: Remove accidentally created directory.</li>; <li><a href=""https://github.com/numpy/numpy/commit/032fca5e2e9749b152ec56153f476e05efdff287""><code>032fca5</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19280"">#19280</a> from charris/backport-19277</li>; <li><a href=""https://github.com/numpy/numpy/commit/7d25b81025a50cc0368f5727c65e875ca769469a""><code>7d25b81</code></a> BUG: Fix refcount leak in ResultType</li>; <li><a href=""https://github.com/numpy/numpy/commit/fa5754e8c159a37fcd9345df261cf82821088ea0""><code>fa5754e</code></a> BUG: Add missing DECREF in new path</li>; <li><a href=""https://github.com/numpy/numpy/commit/61127bb4d46d523b699da1b63abaa5035670da27""><code>61127bb</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19268"">#19268</a> from charris/backport-19264</li>; <li><a href=""https://github.com/numpy/numpy/commit/143d45fff3ed9e051bdeef7bdb4df38025ea7d1c""><code>143d45f</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19269"">#19269</a> from charris/backport-19228</li>; <li><a href=""https://github.com/numpy/numpy/commit/d80e4738f781a1d206bbc04a2e863299e5f2e104""><code>d80e473</code></a> BUG: Removed typing for == and != in dtypes</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.19.5&new-version=1.21.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:3780,depend,dependabot,3780,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['depend'],['dependabot']
Integrability,"19a55db</code></a> Make nested-trans-block exceptions nicer</li>; <li><a href=""https://github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7""><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>; <li><a href=""https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23""><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.2...3.1.3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:3783,depend,dependabot,3783,https://qutip.org,https://github.com/qutip/qutip/pull/2291,1,['depend'],['dependabot']
Integrability,"2"">#7672</a> from nulano/imagefont-negative-crop</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/24e9485e6bb733a1a816f228dc75fd0086a93e19""><code>24e9485</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7671"">#7671</a> from radarhere/imagetransform</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.0.1...10.2.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.0.1&new-version=10.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:15753,depend,dependabot-automerge-start,15753,https://qutip.org,https://github.com/qutip/qutip/pull/2302,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"2.0-release</li>; <li><a href=""https://github.com/numpy/numpy/commit/fd66547557f57c430d41be2fc0764f74a62e8ccf""><code>fd66547</code></a> REL: Prepare for the NumPy 1.22.0 release.</li>; <li><a href=""https://github.com/numpy/numpy/commit/125304b035effcd82e366e601b102e7347eaa9ba""><code>125304b</code></a> wip</li>; <li><a href=""https://github.com/numpy/numpy/commit/c283859128b1a4b57014581570a23ed7950a24ea""><code>c283859</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20682"">#20682</a> from charris/backport-20416</li>; <li><a href=""https://github.com/numpy/numpy/commit/5399c03d4a069fe81a1616be0184c9749d7271ee""><code>5399c03</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20681"">#20681</a> from charris/backport-20954</li>; <li><a href=""https://github.com/numpy/numpy/commit/f9c45f8ebf31340b1a5a0371bfca25afcfc4794e""><code>f9c45f8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20680"">#20680</a> from charris/backport-20663</li>; <li><a href=""https://github.com/numpy/numpy/commit/794b36f7e1bf2a8c42774ab0db86a74bd32f674b""><code>794b36f</code></a> Update armccompiler.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/d93b14e3d7abaa1d837825e51671f817788e120f""><code>d93b14e</code></a> Update test_public_api.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/7662c0789cc6a70d5ad4d950ee2e95f3afef7df6""><code>7662c07</code></a> Update <strong>init</strong>.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/311ab52488a7d096ac3bc4c2de0fdae17ecd13ef""><code>311ab52</code></a> Update armccompiler.py</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.21.0...v1.22.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.21.0&",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:4222,depend,dependabot,4222,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['depend'],['dependabot']
Integrability,"2.30.0</li>; <li><a href=""https://github.com/psf/requests/commit/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773""><code>f2629e9</code></a> Remove strict parameter (<a href=""https://redirect.github.com/psf/requests/issues/6434"">#6434</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/87d63de8739263bbe17034fba2285c79780da7e8""><code>87d63de</code></a> v2.29.0</li>; <li><a href=""https://github.com/psf/requests/commit/51716c4ef390136b0d4b800ec7665dd5503e64fc""><code>51716c4</code></a> enable the warnings plugin (<a href=""https://redirect.github.com/psf/requests/issues/6416"">#6416</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/a7da1ab3498b10ec3a3582244c94b2845f8a8e71""><code>a7da1ab</code></a> try on ubuntu 22.04 (<a href=""https://redirect.github.com/psf/requests/issues/6418"">#6418</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/psf/requests/compare/v2.28.2...v2.31.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.28.2&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:7314,Depend,Dependabot,7314,https://qutip.org,https://github.com/qutip/qutip/pull/2164,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"2024.07.04"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2023.7.22&new-version=2024.7.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2483:3512,Depend,Dependabot,3512,https://qutip.org,https://github.com/qutip/qutip/pull/2483,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"245](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=244) progress_bar, dims=rho0.dims); [246](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=245) res.num_collapse = len(c_ops); [248](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=247) if e_ops_dict:. File ~/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py:496, in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); [493](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=492) progress_bar.update(t_idx); [495](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=494) if not r.successful():; --> [496](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=495) raise Exception(""ODE integration error: Try to increase ""; [497](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=496) ""the allowed number of substeps by increasing ""; [498](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=497) ""the nsteps parameter in the Options class.""); [500](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=499) if opt.store_states or expt_callback:; [501](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=500) cdata = get_curr_state_data(r). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.; ```. ### Expected Behaviour. The evolution should have reproduced the result given in the tutorial notebook. ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.21.1; Scipy Version: 1.7.3; Cython Version: None; Matplotlib Version: 3.5.0; Py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:4878,integrat,integration,4878,https://qutip.org,https://github.com/qutip/qutip/issues/1896,1,['integrat'],['integration']
Integrability,"27221e</code></a> In show_file, use os.remove to remove temporary images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c930be0758ac02cf15a2b8d5409d50d443550581""><code>c930be0</code></a> Restrict builtins within lambdas for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/75b69dd239a4647032f67a80d9b444228af2b736""><code>75b69dd</code></a> Dont need to pin for GHA</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cd938a7744cb46e2ea525a0c3dd79aa08f98c150""><code>cd938a7</code></a> Autolink CWE numbers with sphinx-issues</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2e9c461ca417083c43145a991bf9e1ec93237d89""><code>2e9c461</code></a> Add CVE IDs</li>; <li>See full diff in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.0&new-version=9.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:3557,depend,dependency-name,3557,https://qutip.org,https://github.com/qutip/qutip/pull/1835,1,['depend'],['dependency-name']
Integrability,"28.2...v2.31.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.28.2&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/netwo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:7966,Depend,Dependabot,7966,https://qutip.org,https://github.com/qutip/qutip/pull/2164,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"2</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/c211ef482a01aff5f1bc92c4128bfa0c955f4a01""><code>c211ef4</code></a> Set up permissions to github workflows (<a href=""https://redirect.github.com/certifi/python-certifi/issues/218"">#218</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/2087de5d0aa1d472145fc1dbdfece3fe652bbac5""><code>2087de5</code></a> Don't let deprecation warning fail CI (<a href=""https://redirect.github.com/certifi/python-certifi/issues/219"">#219</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/e0b9fc5c8f52ac8c300da502e5760ce3d41429ec""><code>e0b9fc5</code></a> remove paragraphs about 1024-bit roots from README</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2022.12.07...2023.07.22"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2022.12.7&new-version=2023.7.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reope",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2205:2681,depend,dependency-name,2681,https://qutip.org,https://github.com/qutip/qutip/pull/2205,1,['depend'],['dependency-name']
Integrability,"2c0789cc6a70d5ad4d950ee2e95f3afef7df6""><code>7662c07</code></a> Update <strong>init</strong>.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/311ab52488a7d096ac3bc4c2de0fdae17ecd13ef""><code>311ab52</code></a> Update armccompiler.py</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.21.0...v1.22.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.21.0&new-version=1.22.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:5645,Depend,Dependabot,5645,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['Depend'],['Dependabot']
Integrability,"3 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; sol4 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; ```. On the cases it gives an error (sol3, sol4), it is `Exception: Invalid a_td_term.` from br_codegen.py (`aop_td_funcs()`).; Note that the Cubic_Spline representation works perfectly fine for the Hamiltonian part (e.g. sol2). It also appears to work fine if specifying `c_ops`. **Expected behavior**; My understanding from the documentation regarding time-dependent objects is that the Cubic_Spline representation should work for brmesolve at all argument positions, where appropriate (not just the Hamiltonian and c_ops). For example, at the above URL, we have: <br/>; ""When combining interpolating functions with other Python functions or strings, the interpolating class will automatically pick the appropriate method for calling the class. That is to say that, if for example, you have other time-dependent terms that are given in the string-format, then the cubic spline representation will also be passed in a string-compatible format. In the string-format, the interpolation function is compiled into c-code, and thus is quite fast. This is the default method if no other time-dependent terms are present."" <br/>. If my understanding is incorrect and brmesolve can not accept Cubic_Spline objects, it means it is currently impossible to use this function with non-analytic functions (i.e. only ones we can write out explicitly such as 'exp(-w)'), and seems a major drawback (considering all other solvers in QuTiP are more flexible in what can be accepted to specify time-dependence). **Your Environment**; QuTiP Version: 4.6.2; Numpy Version: 1.18.1; Scipy Version: 1.4.1; Cython Version: 0.29.24; Matplotlib Version: 3.1.3; Python Version: 3.7.6; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1624:1999,depend,dependent,1999,https://qutip.org,https://github.com/qutip/qutip/issues/1624,3,['depend'],"['dependence', 'dependent']"
Integrability,"3 cmd_obj.ensure_finalized(); --> 974 cmd_obj.run(); 975 self.have_run[command] = 1; 976 . /home/caidish1234/anaconda3/lib/python3.6/site-packages/Cython/Distutils/old_build_ext.py in run(self); 183 optimization.disable_optimization(); 184 ; --> 185 _build_ext.build_ext.run(self); 186 ; 187 def build_extensions(self):. /home/caidish1234/anaconda3/lib/python3.6/distutils/command/build_ext.py in run(self); 337 ; 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 ; 341 def check_extensions_list(self, extensions):. /home/caidish1234/anaconda3/lib/python3.6/site-packages/Cython/Distutils/old_build_ext.py in build_extensions(self); 191 for ext in self.extensions:; 192 ext.sources = self.cython_sources(ext.sources, ext); --> 193 self.build_extension(ext); 194 ; 195 def cython_sources(self, sources, extension):. /home/caidish1234/anaconda3/lib/python3.6/distutils/command/build_ext.py in build_extension(self, ext); 531 debug=self.debug,; 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 ; 535 # XXX outdated variable, kept here in case third-part code. /home/caidish1234/anaconda3/lib/python3.6/distutils/ccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 572 except KeyError:; 573 continue; --> 574 self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); 575 ; 576 # Return *all* object filenames, not just the ones we just built. /home/caidish1234/anaconda3/lib/python3.6/distutils/unixccompiler.py in _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts); 118 extra_postargs); 119 except DistutilsExecError as msg:; --> 120 raise CompileError(msg); 121 ; 122 def create_static_lib(self, objects, output_libname,. ImportError: Building module rhs82342421 failed: [""distutils.errors.CompileError: command 'gcc' failed with exit status 1\n""]; ```. So, I opened my server's log,it showed lots of:; `cc1plus: warning: command line option ‘-Wstrict-prototype",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/697:4713,depend,depends,4713,https://qutip.org,https://github.com/qutip/qutip/issues/697,1,['depend'],['depends']
Integrability,"3, 8]; matlab: [0, 8, 5, 7, 3, 6, 4, 2, 1, 9]; ```; (where I converted the `matlab` indexing into 0-based), however they both have the same ""bandwidth"" of 5, so I assume they are all equivalent. I don't really know anything about the theory here, and just went with what the `matlab` documentation said: https://uk.mathworks.com/help/matlab/ref/symrcm.html. In commit 0ce36d00 it is clear that the functions in `qutip.graph` were meant to be distinct from `Qobj`, so ideally they would be beyond our purview in this package. This actually has already lead to problems with the documentation, since the docstrings in; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/graph.py#L50-L53; and; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/graph.py#L71-L74; are out-of-date. I find that the only uses of `qutip.graph` are in `qutip.steadystate`, which uses `reverse_cuthill_mckee` and `weighted_bipartite_matching`. The former can be replaced directly with the `scipy` version, at the cost of ~10% speed. The latter is not yet in `scipy`, so we ought to perhaps keep it, since it is used and documented for `qutip.steadystate.steadystate`. All other functions in `qutip.graph` are not used, and not documented (and in `scipy` anyway). While obviously I don't want to trample on anybody's code, I think it might be worth considering how we can reduce the package complexity of `qutip`, especially while significant new complexity is frequently being added in the interests of speed. We only have a finite amount of resources to maintain the codebase, and it's already quite difficult to get a handle on bug reports, documentation, testing (what I'm working on in #1181), and keeping old features up-to-date with the new. In the tracking down of these points, I can also strongly advocate for a stricter policy on `git` commit messages and keeping the commit history tidy and descriptive, but I'll live to fight another day on that one!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1203:4196,message,messages,4196,https://qutip.org,https://github.com/qutip/qutip/issues/1203,1,['message'],['messages']
Integrability,"3/issues/2901&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/c9016bf464751a02b7e46f8b86504f47d4238784""><code>c9016bf</code></a> Release 1.26.17</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/01220354d389cd05474713f8c982d05c9b17aafb""><code>0122035</code></a> Backport GHSA-v845-jxx5-vc9f (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3139"">#3139</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/e63989f97d206e839ab9170c8a76e3e097cc60e8""><code>e63989f</code></a> Fix installing <code>brotli</code> extra on Python 2.7</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2e7a24d08713a0131f0b3c7197889466d645cc49""><code>2e7a24d</code></a> [1.26] Configure OS for RTD to fix building docs</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/57181d6ea910ac7cb2ff83345d9e5e0eb816a0d0""><code>57181d6</code></a> [1.26] Improve error message when calling urllib3.request() (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3058"">#3058</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/3c0148048a523325819377b23fc67f8d46afc3aa""><code>3c01480</code></a> [1.26] Run coverage even with failed jobs</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d94029b7e2193ff47b627906a70e06377a09aae8""><code>d94029b</code></a> Release 1.26.16</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/18e92145e9cddbabdf51c98f54202aa37fd5d4c8""><code>18e9214</code></a> Use trusted publishing for PyPI</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d25cf83bbae850a290fe34ed1610ae55c0558b36""><code>d25cf83</code></a> [1.26] Fix invalid test_ssl_failure_midway_through_conn</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/25cca389496b86ee809c21e5b641aeaa74809263""><code>25cca38</code></a> [1.26] Fix test_ssl_object_attributes</li>; <li>Additional commits viewable in <a href=""https://github.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:3865,message,message,3865,https://qutip.org,https://github.com/qutip/qutip/pull/2236,1,['message'],['message']
Integrability,"31 manager.canvas.draw_idle(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/backend_bases.py:1919, in FigureCanvasBase.draw_idle(self, *args, **kwargs); 1917 if not self._is_idle_drawing:; 1918 with self._idle_draw_cntx():; -> 1919 self.draw(*args, **kwargs). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/backends/backend_agg.py:387, in FigureCanvasAgg.draw(self); 384 # Acquire a lock on the shared font cache.; 385 with (self.toolbar._wait_cursor_for_draw_cm() if self.toolbar; 386 else nullcontext()):; --> 387 self.figure.draw(self.renderer); 388 # A GUI class may be need to update a window using this draw, so; 389 # don't forget to call the superclass.; 390 super().draw(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/artist.py:95, in _finalize_rasterization.<locals>.draw_wrapper(artist, renderer, *args, **kwargs); 93 @wraps(draw); 94 def draw_wrapper(artist, renderer, *args, **kwargs):; ---> 95 result = draw(artist, renderer, *args, **kwargs); 96 if renderer._rasterizing:; 97 renderer.stop_rasterizing(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/artist.py:72, in allow_rasterization.<locals>.draw_wrapper(artist, renderer); 69 if artist.get_agg_filter() is not None:; 70 renderer.start_filter(); ---> 72 return draw(artist, renderer); 73 finally:; 74 if artist.get_agg_filter() is not None:. File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/figure.py:3155, in Figure.draw(self, renderer); 3152 # ValueError can occur when resizing a window.; 3154 self.patch.draw(renderer); -> 3155 mimage._draw_list_compositing_images(; 3156 renderer, self, artists, self.suppressComposite); 3158 renderer.close_group('figure'); 3159 finally:. File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/image.py:132, in _draw_list_compositing_images(renderer, pare",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2400#issuecomment-2142000903:1798,wrap,wraps,1798,https://qutip.org,https://github.com/qutip/qutip/issues/2400#issuecomment-2142000903,1,['wrap'],['wraps']
Integrability,"31.0...v2.32.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.31.0&new-version=2.32.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:10571,Depend,Dependabot,10571,https://qutip.org,https://github.com/qutip/qutip/pull/2434,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"3</code></a> [1.26] Fix invalid test_ssl_failure_midway_through_conn</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/25cca389496b86ee809c21e5b641aeaa74809263""><code>25cca38</code></a> [1.26] Fix test_ssl_object_attributes</li>; <li>Additional commits viewable in <a href=""https://github.com/urllib3/urllib3/compare/1.26.14...1.26.17"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.14&new-version=1.26.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:5557,Depend,Dependabot,5557,https://qutip.org,https://github.com/qutip/qutip/pull/2236,1,['Depend'],['Dependabot']
Integrability,"4-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:8659,message,message,8659,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['message'],['message']
Integrability,4.0.1 Dependencies are incorrect.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/616:6,Depend,Dependencies,6,https://qutip.org,https://github.com/qutip/qutip/issues/616,1,['Depend'],['Dependencies']
Integrability,"4.whl (20.5 MB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.6 MB); Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.; launchpadlib 1.10.13 requires testresources, which is not installed.; awkward-cpp 26 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; awkward 2.5.0 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; matplotlib 3.7.4 requires numpy<2,>=1.20, but you have numpy 1.17.3 which is incompatible.; pandas 2.0.3 requires numpy>=1.20.3; python_version < ""3.10"", but you have numpy 1.17.3 which is incompatible.; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-70.0.0 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/vector.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:4237,depend,dependencies,4237,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['dependencies']
Integrability,"455259ddab121618650a154""><code>b600643</code></a> [1.26] Bump RECENT_DATE (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3404"">#3404</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/7e2d3890926d4788e219f63e2e36fbeb8714827f""><code>7e2d389</code></a> [1.26] Fix running CPython 2.7 tests in CI (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3137"">#3137</a>)</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.18&new-version=1.26.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:4227,depend,dependabot,4227,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['depend'],['dependabot']
Integrability,"46b0f5""><code>d7f60d1</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a> from radarhere/imagemath_eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8531b01d6cdf0b70f256f93092caa2a5d91afc11""><code>8531b01</code></a> Restrict builtins for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1efb1d9fabd1dfdbf7982035eca0dae7306abef1""><code>1efb1d9</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5922"">#5922</a> from radarhere/releasenotes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f6c78713a491764dfac576f6c42127755f2c62b3""><code>f6c7871</code></a> Added release notes for <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> and <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a></li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/032d2dc3658f94718109068ac70799313e440754""><code>032d2dc</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd""><code>baae9ec</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><code>1059eb5</code></a> If appended EOI did not work, do not keep trying</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.3.2&new-",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:15019,depend,dependabot,15019,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"5 _build_ext.build_ext.run(self); 186 ; 187 def build_extensions(self):. F:\Anaconda3\lib\distutils\command\build_ext.py in run(self); 337 ; 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 ; 341 def check_extensions_list(self, extensions):. F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 191 for ext in self.extensions:; 192 ext.sources = self.cython_sources(ext.sources, ext); --> 193 self.build_extension(ext); 194 ; 195 def cython_sources(self, sources, extension):. F:\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 531 debug=self.debug,; 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 ; 535 # XXX outdated variable, kept here in case third-part code. F:\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 302 ; 303 if not self.initialized:; --> 304 self.initialize(); 305 compile_info = self._setup_compile(output_dir, macros, include_dirs,; 306 sources, depends, extra_postargs). F:\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 195 plat_spec = PLAT_TO_VCVARS[plat_name]; 196 ; --> 197 vc_env = _get_vc_env(plat_spec); 198 if not vc_env:; 199 raise DistutilsPlatformError(""Unable to find a compatible "". F:\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 83 vcvarsall, vcruntime = _find_vcvarsall(plat_spec); 84 if not vcvarsall:; ---> 85 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 86 ; 87 try:. ImportError: Building module rhs75680 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']; ```; I have tried it many times. Any other functions in Floquet Formalism will still have this problem.; Here is my version information:; ![image](https://user-images.githubusercontent.com/30772228/38968512-6240026a-43be-11e8-9ca7-4179b5f4bac5.png). I would appreciate your reply!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854:8304,depend,depends,8304,https://qutip.org,https://github.com/qutip/qutip/issues/854,1,['depend'],['depends']
Integrability,"53, in run_commands; > > > self.run_command(cmd); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 972, in run_command; > > > cmd_obj.run(); > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; > > > _build_ext.build_ext.run(self); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; > > > self.build_extensions(); > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; > > > self.build_extension(ext); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; > > > depends=ext.depends); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; > > > self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; > > > raise CompileError, msg; > > > ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'gcc' failed with exit status 1\n""]; > > > import numpy as np; > > > ; > > > from qutip import *; > > > Traceback (most recent call last):; > > > File ""<stdin>"", line 1, in <module>; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/**init**.py"", line 62, in <module>; > > > qutip.settings.ipython = False; > > > AttributeError: 'module' object has no attribute 'settings'; ###### . This seems similar to the build error in Installation on OS X with Homebr",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382:4220,depend,depends,4220,https://qutip.org,https://github.com/qutip/qutip/issues/382,1,['depend'],['depends']
Integrability,"58c71cf01dc69fb10c7b69314""><code>156b7fb</code></a> Quiesce CLDR download progress bar if requested (or not a TTY)</li>; <li><a href=""https://github.com/python-babel/babel/commit/613dc1700f91c3d40b081948c0dd6023d8ece057""><code>613dc17</code></a> Make the import warnings about unsupported number systems less verbose</li>; <li>Additional commits viewable in <a href=""https://github.com/python-babel/babel/compare/v2.9.0...v2.9.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=babel&package-manager=pip&previous-version=2.9.0&new-version=2.9.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1695:3698,depend,dependabot-automerge-start,3698,https://qutip.org,https://github.com/qutip/qutip/pull/1695,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"594c5c</code></a> Merge pull request from GHSA-g4mx-q9vg-27p4</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/944f0eb134485f41bc531be52de12ba5a37bca73""><code>944f0eb</code></a> [1.26] Use vendored six in urllib3.contrib.securetransport</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.17...1.26.18"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.17&new-version=1.26.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2246:2210,Depend,Dependabot,2210,https://qutip.org,https://github.com/qutip/qutip/pull/2246,1,['Depend'],['Dependabot']
Integrability,"60a0a4cb61ec6834d74306bd8a1fa46daac94c98""><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>; <li><a href=""https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201""><code>5918a0e</code></a> Merge branch 'master' into dev</li>; <li>Additional commits viewable in <a href=""https://github.com/kjd/idna/compare/v3.4...v3.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:4449,Depend,Dependabot,4449,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['Depend'],['Dependabot']
Integrability,"6690"">#6690</a>; [cgohlke]</p>; </li>; <li>; <p>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a>; [hmaarrfk]</p>; </li>; <li>; <p>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a>; [radarhere]</p>; </li>; <li>; <p>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a>; [radarhere]</p>; </li>; <li>; <p>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a>; [npjg, radarhere]</p>; </li>; <li>; <p>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a>; [radarhere]</p>; </li>; <li>; <p>Added GPS TIFF tag info <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6661"">#6661</a>; [radarhere]</p>; </li>; <li>; <p>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6647"">#6647</a>; [radarhere]</p>; </li>; <li>; <p>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d594f4cb8dc47fb0c69ae58d9fff86faae4515bd""><code>d594f4c</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/909dc64ed5f676169aa3d9b0c26f132a06321b83""><code>909dc64</code></a> 9.3.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1a51ce7b955c65c8f2c6bc7772735b197b8a6aa3""><code>1a51ce7</code></",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:12610,depend,dependabot,12610,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"678"">#6678</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>pylint warnings <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6659"">#6659</a> [<a href=""https://github.com/marksmayo""><code>@​marksmayo</code></a>]</li>; <li>Added GPS TIFF tag info <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6661"">#6661</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6647"">#6647</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed seeking to an L frame in a GIF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6576"">#6576</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Consider all frames when selecting mode for PNG save_all <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6610"">#6610</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Don't reassign crc on ChunkStream close <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6627"">#6627</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Raise a warning if NumPy failed to raise an error during conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6594"">#6594</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only read a maximum of 100 bytes at a time in IMT header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6623"">#6623</a> [<a href=""https://github.com/radarher",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:4996,depend,dependabot,4996,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"683</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a> [<a href=""https://github.com/npjg""><code>@​npjg</code></a>]</li>; <li>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>pylint warnings <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6659"">#6659</a> [<a href=""https://github.com/marksmayo""><code>@​marksmayo</code></a>]</li>; <li>Added GPS TIFF tag info <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6661"">#6661</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6647"">#6647</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed seeking to an L frame in a GIF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6576"">#6576</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Consider all frames when selecting mode for PNG save_all <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6610"">#6610</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Don't reassign crc on ChunkStream close <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6627"">#6627</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]<",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:4560,depend,dependabot,4560,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"6a70e06377a09aae8""><code>d94029b</code></a> Release 1.26.16</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/18e92145e9cddbabdf51c98f54202aa37fd5d4c8""><code>18e9214</code></a> Use trusted publishing for PyPI</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d25cf83bbae850a290fe34ed1610ae55c0558b36""><code>d25cf83</code></a> [1.26] Fix invalid test_ssl_failure_midway_through_conn</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/25cca389496b86ee809c21e5b641aeaa74809263""><code>25cca38</code></a> [1.26] Fix test_ssl_object_attributes</li>; <li>Additional commits viewable in <a href=""https://github.com/urllib3/urllib3/compare/1.26.14...1.26.17"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.14&new-version=1.26.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:5235,depend,dependabot-security-updates,5235,https://qutip.org,https://github.com/qutip/qutip/pull/2236,1,['depend'],['dependabot-security-updates']
Integrability,"6bedff5b4e4dd331b""><code>39a3b1d</code></a> Fixed deallocating mask images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8c1dc819fd91471825da01976ac0e0bc8789590f""><code>8c1dc81</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.4.0...10.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.4.0&new-version=10.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:13591,Depend,Dependabot,13591,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['Depend'],['Dependabot']
Integrability,"7.22.0...7.31.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.22.0&new-version=7.31.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780:2809,Depend,Dependabot,2809,https://qutip.org,https://github.com/qutip/qutip/pull/1780,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"7.31.1...8.10.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.31.1&new-version=8.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085:2856,Depend,Dependabot,2856,https://qutip.org,https://github.com/qutip/qutip/pull/2085,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"74032c061""><code>2a93aba</code></a> Use strncpy to avoid buffer overflow</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a670597bc30e9d489656fc9d807170b8f3d7ca57""><code>a670597</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.2.0...10.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.2.0&new-version=10.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:15819,Depend,Dependabot,15819,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['Depend'],['Dependabot']
Integrability,"758ac02cf15a2b8d5409d50d443550581""><code>c930be0</code></a> Restrict builtins within lambdas for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/75b69dd239a4647032f67a80d9b444228af2b736""><code>75b69dd</code></a> Dont need to pin for GHA</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cd938a7744cb46e2ea525a0c3dd79aa08f98c150""><code>cd938a7</code></a> Autolink CWE numbers with sphinx-issues</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2e9c461ca417083c43145a991bf9e1ec93237d89""><code>2e9c461</code></a> Add CVE IDs</li>; <li>See full diff in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.0&new-version=9.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:3717,depend,dependabot-security-updates,3717,https://qutip.org,https://github.com/qutip/qutip/pull/1835,1,['depend'],['dependabot-security-updates']
Integrability,"760a4aefbe872e1703b24a19a28f87619c9""><code>e321e76</code></a> release 7.31.1</li>; <li><a href=""https://github.com/ipython/ipython/commit/67ca2b3aa9039438e6f80e3fccca556f26100b4d""><code>67ca2b3</code></a> Merge pull request from GHSA-pq7m-3gw7-gq5x</li>; <li><a href=""https://github.com/ipython/ipython/commit/27943302db129464b33bae8cb6cfa552b52b46c2""><code>2794330</code></a> back to dev</li>; <li><a href=""https://github.com/ipython/ipython/commit/be343e755af76193909f13027d87561b1765b5ae""><code>be343e7</code></a> release 7.31.0</li>; <li><a href=""https://github.com/ipython/ipython/commit/0fcf2c43facb7ba5144cdcc47118aa1e55085c20""><code>0fcf2c4</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13428"">#13428</a> from meeseeksmachine/auto-backport-of-pr-13427-on-7.x</li>; <li><a href=""https://github.com/ipython/ipython/commit/b8db9b1371fff1b89d0f058e19a48a4ca7b93c51""><code>b8db9b1</code></a> Backport PR <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13427"">#13427</a>: wn 731</li>; <li><a href=""https://github.com/ipython/ipython/commit/7f253dcf7b1c3a791a98d44b0dfc848d62bd27df""><code>7f253dc</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13412"">#13412</a> from bnavigator/backport-inspect</li>; <li><a href=""https://github.com/ipython/ipython/commit/4f26796cf368d24edadbb3d62e052e6aa4ddc820""><code>4f26796</code></a> fix xxlimited_35 import name</li>; <li><a href=""https://github.com/ipython/ipython/commit/77ca4a6312374f0659fb6973925e5b696d5dc74e""><code>77ca4a6</code></a> don't run nose-based iptest on py310, only pytest</li>; <li><a href=""https://github.com/ipython/ipython/commit/533e5094aa36b51549cf6a316fc439c6404643c9""><code>533e509</code></a> back to decorator skip</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.22.0...7.31.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780:1176,depend,dependabot,1176,https://qutip.org,https://github.com/qutip/qutip/pull/1780,1,['depend'],['dependabot']
Integrability,"766492c9cf""><code>3c5fb15</code></a> Bump actions/download-artifact from 4.1.6 to 4.1.7 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/286"">#286</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4a9569a3eb58db8548536fc16c5c5c7af946a5b1""><code>4a9569a</code></a> Bump actions/checkout from 4.1.2 to 4.1.4 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/287"">#287</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/1fc808626a895a916b1e4c2b63abae6c5eafdbe3""><code>1fc8086</code></a> Bump peter-evans/create-pull-request from 6.0.4 to 6.0.5 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/288"">#288</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2023.07.22...2024.07.04"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2023.7.22&new-version=2024.7.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2483:2955,depend,dependency-name,2955,https://qutip.org,https://github.com/qutip/qutip/pull/2483,1,['depend'],['dependency-name']
Integrability,"7a0b""><code>9c2c230</code></a> Release 1.26.18 (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3159"">#3159</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36""><code>b594c5c</code></a> Merge pull request from GHSA-g4mx-q9vg-27p4</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/944f0eb134485f41bc531be52de12ba5a37bca73""><code>944f0eb</code></a> [1.26] Use vendored six in urllib3.contrib.securetransport</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.17...1.26.18"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.17&new-version=1.26.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2246:1945,Depend,Dependabot,1945,https://qutip.org,https://github.com/qutip/qutip/pull/2246,1,['Depend'],['Dependabot']
Integrability,"7a4268a03e1d20e0198bb""><code>b0e2804</code></a> Updated zlib to 1.3</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6e28ed1f36d0eb74053af54e1eddc9c29db698cd""><code>6e28ed1</code></a> 10.0.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c827f3b30f50bf04fd65daeeba6bbfd56fc7b50e""><code>c827f3b</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a> from radarhere/deallocate</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/39a3b1d83edcf826c3864e26bedff5b4e4dd331b""><code>39a3b1d</code></a> Fixed deallocating mask images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8c1dc819fd91471825da01976ac0e0bc8789590f""><code>8c1dc81</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.4.0...10.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.4.0&new-version=10.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` wi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:13009,Depend,Dependabot,13009,https://qutip.org,https://github.com/qutip/qutip/pull/2237,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"7b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19` this is due to the fact that on this platform `oldest-supported-numpy` (from `pyproject.toml`) defaults to 1.17.3, but `setup.cfg` requires `numpy>=1.19`. ### Code to Reproduce the Bug. ```shell; python -m pip install -v --upgrade qutip; ```. ### Code Output. ```shell; Using pip 24.0 from /home/defreule/.local/lib/python3.8/site-packages/pip (python 3.8); Defaulting to user installation because normal site-packages is not writeable; Requirement already satisfied: qutip in /usr/local/lib/python3.8/dist-packages (4.7.3); Link requires a different Python (3.8.10 not in: '>=3.9'): https://files.pythonhosted.org/packages/73/73/abcc185174ac6dbc7965e5aeb9418c163eafda704008ee795ee9cdc75e4a/qutip-5.0.2.tar.gz (from https://pypi.org/simple/qutip/) (requires-python:>=3.9); Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Running command pip subprocess to install build dependencies; Ignoring cython: markers 'python_version >= ""3.10""' don't match your environment; Collecting setuptools; Using cached setuptools-70.0.0-py3-none-any.whl.metadata (5.9 kB); Collecting packaging; Using cached packaging-24.0-py3-none-any.whl.metadata (3.2 kB); Collecting wheel; Using cached wheel-0.43.0-py3-none-any.whl.metadata (2.2 kB); Collecting cython<3.0.3,>=0.29.20; Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.1 kB); Collecting oldest-supported-numpy; Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl.metadata (9.8 kB); Collecting scipy>=1.8; Using cached scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Collecting numpy==1.17.3 (from oldest-supported-numpy); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl.metadata (2.0 kB); INFO: pip is looking at multiple versions of scipy to determine which version is compatible with other requirements. This could take a whil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:1217,depend,dependencies,1217,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['dependencies']
Integrability,"83d755f39cb5""><code>d1bbc08</code></a> import_cldr: use logging; add -q option</li>; <li><a href=""https://github.com/python-babel/babel/commit/156b7fb9f377ccf58c71cf01dc69fb10c7b69314""><code>156b7fb</code></a> Quiesce CLDR download progress bar if requested (or not a TTY)</li>; <li><a href=""https://github.com/python-babel/babel/commit/613dc1700f91c3d40b081948c0dd6023d8ece057""><code>613dc17</code></a> Make the import warnings about unsupported number systems less verbose</li>; <li>Additional commits viewable in <a href=""https://github.com/python-babel/babel/compare/v2.9.0...v2.9.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=babel&package-manager=pip&previous-version=2.9.0&new-version=2.9.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1695:3523,Depend,Dependabot,3523,https://qutip.org,https://github.com/qutip/qutip/pull/1695,1,['Depend'],['Dependabot']
Integrability,"87d63de</code></a> v2.29.0</li>; <li><a href=""https://github.com/psf/requests/commit/51716c4ef390136b0d4b800ec7665dd5503e64fc""><code>51716c4</code></a> enable the warnings plugin (<a href=""https://redirect.github.com/psf/requests/issues/6416"">#6416</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/a7da1ab3498b10ec3a3582244c94b2845f8a8e71""><code>a7da1ab</code></a> try on ubuntu 22.04 (<a href=""https://redirect.github.com/psf/requests/issues/6418"">#6418</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/psf/requests/compare/v2.28.2...v2.31.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.28.2&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:7634,Depend,Dependabot,7634,https://qutip.org,https://github.com/qutip/qutip/pull/2164,1,['Depend'],['Dependabot']
Integrability,"8</a>; [radarhere]</p>; </li>; <li>; <p>Added rounding when converting P and PA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5824"">#5824</a>; [radarhere]</p>; </li>; <li>; <p>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a>; [radarhere]</p>; </li>; <li>; <p>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a>; [hugovk]</p>; </li>; <li>; <p>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a>; [radarhere]</p>; </li>; <li>; <p>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a>; [m-shinder, radarhere]</p>; </li>; <li>; <p>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a>; [cmbruns, radarhere]</p>; </li>; <li>; <p>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/82541b6dec8452cb612067fcebba1c5a1a2bfdc8""><code>82541b6</code></a> 9.0.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cae5ac495badd7c7ecfad8223a08f55f5d2eaacb""><code>cae5ac4</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5924"">#5924</a> from radarhere/cves</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/ed4cf7813777ad8478cac46f448bc45416a2a99e""><code>ed4cf78</code></a> CVEs TBD</li>; <li><a href=""https://github.com/python-pillow/Pillow/c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:12978,depend,dependabot,12978,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"912</code></a> MAINT: mock slowest test.</li>; <li><a href=""https://github.com/ipython/ipython/commit/a011765b44febfb11bae122d2ed7db763621ac8f""><code>a011765</code></a> Isolate the attack tests with setUp and tearDown methods</li>; <li><a href=""https://github.com/ipython/ipython/commit/c7a9470e540392c575aac46c3ee5cf4fe5123eb1""><code>c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow potential exceptions from showtraceback()</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.31.1...8.10.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.31.1&new-version=8.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085:2467,depend,dependabot-security-updates,2467,https://qutip.org,https://github.com/qutip/qutip/pull/2085,1,['depend'],['dependabot-security-updates']
Integrability,"93b14e3d7abaa1d837825e51671f817788e120f""><code>d93b14e</code></a> Update test_public_api.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/7662c0789cc6a70d5ad4d950ee2e95f3afef7df6""><code>7662c07</code></a> Update <strong>init</strong>.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/311ab52488a7d096ac3bc4c2de0fdae17ecd13ef""><code>311ab52</code></a> Update armccompiler.py</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.21.0...v1.22.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.21.0&new-version=1.22.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:5526,depend,dependabot,5526,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['depend'],['dependabot']
Integrability,"97"">#6697</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Upload fribidi.dll to GitHub Actions <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6532"">#6532</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Windows build improvements <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6562"">#6562</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Only use ASCII characters in C source file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6691"">#6691</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a> [<a href=""https://github.com/hmaarrfk""><code>@​hmaarrfk</code></a>]</li>; <li>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:2647,depend,dependabot,2647,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"9</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> and <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a></li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/032d2dc3658f94718109068ac70799313e440754""><code>032d2dc</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd""><code>baae9ec</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><code>1059eb5</code></a> If appended EOI did not work, do not keep trying</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.3.2&new-version=9.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` wil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:15856,Depend,Dependabot,15856,https://qutip.org,https://github.com/qutip/qutip/pull/1760,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"9e6eee0e9edf010034b63b""><code>d725a9b</code></a> Add Python 3.10 to GitHub Actions</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/339ad34c677c98fd9ad008de1d8bbeb9dbf34381""><code>339ad34</code></a> Use pytest==6.2.4 on Python 3.10+</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/f271c9c3149e20d7feffb6429b135bbb6c09ddf4""><code>f271c9c</code></a> Apply latest Black formatting</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/1884878aac87ef0494b282e940c32c24ee917d52""><code>1884878</code></a> [1.26] Properly proxy EOF on the SSLTransport test suite</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.4...1.26.5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.4&new-version=1.26.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563:3100,depend,dependabot-security-updates,3100,https://qutip.org,https://github.com/qutip/qutip/pull/1563,1,['depend'],['dependabot-security-updates']
Integrability,"://github-redirect.dependabot.com/python-pillow/Pillow/issues/5315"">#5315</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Replaced xml.etree.ElementTree <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5565"">#5565</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/master/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>8.3.2 (2021-09-02)</h2>; <ul>; <li>; <p>CVE-2021-23437 Raise ValueError if color specifier is too long; [hugovk, radarhere]</p>; </li>; <li>; <p>Fix 6-byte OOB read in FliDecode; [wiredfool]</p>; </li>; <li>; <p>Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</p>; </li>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1 (2021-07-06)</h2>; <ul>; <li>; <p>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a>; [radarhere]</p>; </li>; <li>; <p>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.co",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:4712,depend,dependabot,4712,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"://github.com/jakelishman/qutip-doc/blob/design-data-layer/design/01-data-time-layer-separation.md); - [data structure implementation choices](https://github.com/jakelishman/qutip-doc/blob/design-data-layer/design/02-data-structures.md); - [original GSoC proposal (PDF)](https://www.binhbar.com/posts/2020/05/welcome-to-google-summer-of-code-2020/proposal.pdf). New design elements under consideration:; - [improved `'type'` and `'dims'` handling for tensor-product spaces](https://github.com/qutip/qutip/issues/1320). Major breaking changes to QuTiP:; - `Qobj.data` is no longer an instance of `scipy.sparse.spmatrix`, but the new abstract ""data-layer type"" `core.data.Data`; - `bra * ket` now returns a scalar, not a `Qobj` (no need to do `(bra * ket).data[0, 0]` or `(bra * ket).tr()`) any more; - 1D subspaces in `Qobj.dims` are now never contracted silently (they were, but inconsistently before), but the new function `Qobj.contract()` can be called to do this explicitly; - `Qobj` no longer defines `__array__`, and so cannot be treated as if it is a numpy array. Having this led to inconsistent behaviour when `Qobj` was used in arithmetic with numpy arrays from the left and right, and allowed simple code to become `Qobj.dims`-unsafe _implicitly_. To get the full array view now, you must be explicit and call `Qobj.full()` - it is not enough to do `np.array(qobj)`, and this behaviour is consistent with `scipy.sparse` matrices.; - `eseries` and `essolve` are removed; - OpenMP is temporarily removed (but should be added back in before the release); - most functions marked deprecated as of version 4.5.2 are removed (e.g. in `qutip.correlation`); - `vec2mat` and `mat2vec` are renamed away from the terse MATLAB-compatible syntax to the more QuTiP-consistent `vector_to_operator` and `operator_to_vector`. Non-breaking changes:; - the internal file layout of the code is more organised, with physical ""packages"" `qutip.core` and `qutip.solve` containing the core code and the solvers res",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1278:2262,contract,contract,2262,https://qutip.org,https://github.com/qutip/qutip/issues/1278,1,['contract'],['contract']
Integrability,"://github.com/pallets/jinja/commit/19a55db3b411343309f2faaffaedbb089e841895""><code>19a55db</code></a> Make nested-trans-block exceptions nicer</li>; <li><a href=""https://github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7""><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>; <li><a href=""https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23""><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.2...3.1.3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:3637,Depend,Dependabot,3637,https://qutip.org,https://github.com/qutip/qutip/pull/2291,1,['Depend'],['Dependabot']
Integrability,"://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added reading of TIFF child images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6569"">#6569</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved ImageOps palette handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6596"">#6596</a> [<a href=""https://github.com/PososikTeam""><code>@​PososikTeam</code></a>]</li>; <li>Defer parsing of palette into colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6567"">#6567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Apply transparency to P images in ImageTk.PhotoImage <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6559"">#6559</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use rounding in ImageOps contain() and pad() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6522"">#6522</a> [<a href=""https://github.com/bibinhashley""><code>@​bibinhashley</code></a>]</li>; <li>Fixed GIF remapping to palette with duplicate entries <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6548"">#6548</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow remap_palette() to return an image with less than 256 palette entries <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6543"">#6543</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected BMP and TGA palette size when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6500"">#6500</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.co",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:9164,depend,dependabot,9164,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,":\Anaconda3\lib\distutils\dist.py in run_commands(self); 954 for cmd in self.commands:; --> 955 self.run_command(cmd); 956 . F:\Anaconda3\lib\distutils\dist.py in run_command(self, command); 973 cmd_obj.ensure_finalized(); --> 974 cmd_obj.run(); 975 self.have_run[command] = 1. F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in run(self); 184 ; --> 185 _build_ext.build_ext.run(self); 186 . F:\Anaconda3\lib\distutils\command\build_ext.py in run(self); 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 . F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 192 ext.sources = self.cython_sources(ext.sources, ext); --> 193 self.build_extension(ext); 194 . F:\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 . F:\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 303 if not self.initialized:; --> 304 self.initialize(); 305 compile_info = self._setup_compile(output_dir, macros, include_dirs,. F:\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 196 ; --> 197 vc_env = _get_vc_env(plat_spec); 198 if not vc_env:. F:\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 84 if not vcvarsall:; ---> 85 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 86 . DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. ImportError Traceback (most recent call last); <ipython-input-9-be63b537dd61> in <module>(); 1 start_time = time.time(); ----> 2 q_energies, f_gnd_prob, wf_gnd_prob = qubit_integrate(delta, eps0, A, omega, gamma1, gamma2, psi0, T, ""dynamics""); 3 print('dynamics: time elapsed = ' + str(time.time() - start_time)). <ipython-input-7-05623eaf8178> in qubit_integrate(delta, eps0_vec, A, omeg",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854:2688,depend,depends,2688,https://qutip.org,https://github.com/qutip/qutip/issues/854,1,['depend'],['depends']
Integrability,":\Users\daniel\Anaconda\lib\site-packages\Cython\Distutils\build_ext.py"", line 163, in run; _build_ext.build_ext.run(self); File ""C:\Users\daniel\Anaconda\lib\distutils\command\build_ext.py"", line 337, in run; self.build_extensions(); File ""C:\Users\daniel\Anaconda\lib\site-packages\Cython\Distutils\build_ext.py"", line 171, in build_extensions; self.build_extension(ext); File ""C:\Users\daniel\Anaconda\lib\distutils\command\build_ext.py"", line 496, in build_extension; depends=ext.depends); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 473, in compile; self.initialize(); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 383, in initialize; vc_env = query_vcvarsall(VERSION, plat_spec); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 271, in query_vcvarsall; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module qutip.cy.spmatfuncs failed: ['DistutilsPlatformError: Unable to find vcvarsall.bat\n']. I tried testing to see if it was installed correctly by typing import qutip.testing as qt and I get. Traceback (most recent call last):; File ""C:\Users\daniel\Anaconda\lib\site-packages\IPython\core\interactiveshell.py"", line 2883, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-3-ae6395ba7937>"", line 1, in <module>; import qutip.testing as qt; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip__init__.py"", line 62, in <module>; qutip.settings.ipython = False; AttributeError: 'module' object has no attribute 'settings'. I have also tried downloading the file, putting it in the folder Anaconda\pkgs, opening a command window, setting the path and installing it there. I don't get any error messages but I still cannot seem to import QuTiP. What am I doing wrong?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/343:5159,message,messages,5159,https://qutip.org,https://github.com/qutip/qutip/issues/343,1,['message'],['messages']
Integrability,":eyes: Some source code analysis tools can help to find opportunities for improving software components.; :thought_balloon: I propose to [increase the usage of augmented assignment statements](https://docs.python.org/3/reference/simple_stmts.html#augmented-assignment-statements ""Augmented assignment statements"") accordingly. Would you like to integrate anything from a transformation result which can be generated by a command like the following?; (:point_right: Please check also for questionable change suggestions because of an evolving search pattern.); ```; lokal$ perl -p -i.orig -0777 -e 's/^(?<indentation>\s+)(?<target>\S+)\s*=\s*\k<target>[ \t]*(?<operator>[+\-%&|^@]|\*\*?|\/\/?|<<|>>)/$+{indentation}$+{target} $+{operator}=/gm' $(find ~/Projekte/QuTiP/lokal -name '*.py'); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714:345,integrat,integrate,345,https://qutip.org,https://github.com/qutip/qutip/issues/1714,1,['integrat'],['integrate']
Integrability,"; <li><a href=""https://github.com/python-babel/babel/commit/156b7fb9f377ccf58c71cf01dc69fb10c7b69314""><code>156b7fb</code></a> Quiesce CLDR download progress bar if requested (or not a TTY)</li>; <li><a href=""https://github.com/python-babel/babel/commit/613dc1700f91c3d40b081948c0dd6023d8ece057""><code>613dc17</code></a> Make the import warnings about unsupported number systems less verbose</li>; <li>Additional commits viewable in <a href=""https://github.com/python-babel/babel/compare/v2.9.0...v2.9.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=babel&package-manager=pip&previous-version=2.9.0&new-version=2.9.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1695:3669,depend,dependabot,3669,https://qutip.org,https://github.com/qutip/qutip/pull/1695,1,['depend'],['dependabot']
Integrability,"; <li><a href=""https://github.com/python-pillow/Pillow/commit/d7f60d1d5a746eb01d4cb3c7fb05b6593f46b0f5""><code>d7f60d1</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a> from radarhere/imagemath_eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8531b01d6cdf0b70f256f93092caa2a5d91afc11""><code>8531b01</code></a> Restrict builtins for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1efb1d9fabd1dfdbf7982035eca0dae7306abef1""><code>1efb1d9</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5922"">#5922</a> from radarhere/releasenotes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f6c78713a491764dfac576f6c42127755f2c62b3""><code>f6c7871</code></a> Added release notes for <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> and <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a></li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/032d2dc3658f94718109068ac70799313e440754""><code>032d2dc</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd""><code>baae9ec</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><code>1059eb5</code></a> If appended EOI did not work, do not keep trying</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/b",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:14923,depend,dependabot,14923,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"; <p>CVE-2021-23437 Raise ValueError if color specifier is too long; [hugovk, radarhere]</p>; </li>; <li>; <p>Fix 6-byte OOB read in FliDecode; [wiredfool]</p>; </li>; </ul>; <h2>Python 3.10 wheels</h2>; <ul>; <li>Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</li>; </ul>; <h2>Fixed regressions</h2>; <ul>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a> [<a href=""https://github.com/t-vi""><code>@​t-vi</code></a>]</li>; </ul>; <h2>8.3.0</h2>; <p><a href=""https://pillow",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:1439,depend,dependabot,1439,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"; >; > This is defined twice...; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245675791>:; >; > > + time_sense=0,; > + quicksolve=False,; > + options=None):; > + """"""; > + Parameters; > + ----------; > +; > + H : :class:`Qobj`,:class:`QobjEvo`,:class:`QobjEvo` compatible format.; > + Periodic system Hamiltonian as :class:`QobjEvo`. List of; > + [:class:`Qobj`,:class:`Coefficient`] or callable that; > + can be made into :class:`QobjEvo` are also accepted.; > +; > + rho0 / psi0 : :class:`qutip.Qobj`; > + Initial density matrix or state vector (ket).; > +; > + Taulist:*list* / *array*; >; > Since time dependent c_ops not being supported is the exception, it would; > be nice to have a note in this regard.; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245633903>:; >; > > + List of lists of [collapse operator,collapse operator rate] pairs; > +; > + e_ops : list of :class:`qutip.Qobj` / callback function; > + List of operators for which to evaluate expectation values.; > + The states are reverted to the lab basis before applying the; > +; > + args : *dictionary*; > + Dictionary of parameters for time-dependent Hamiltonian; > +; > + time_sense : float; > + Experimental. Value of the secular approximation (in terms of system; > + frequency 2*np.pi/T) to use when constructing the rate matrix R(t).; > + Default value of zero uses the fully time-independent/most strict; > + secular approximation.; > +; > + quicksolve: Boolean; >; > The function does not seems to use it...; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/2186#pullrequestreview-1502921416>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AV5WL5AGKQRG75CR5YOQUD3XNSCP7ANCNFSM6AAAAAAZWI6GRQ>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847:15278,depend,dependent,15278,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847,4,"['Message', 'depend']","['Message', 'dependent']"
Integrability,"; >>> import qutip; >>> qutip.cnot(); __main__:1: DeprecationWarning: Importing functions/classes of the qip submodule directly from the namespace qutip is deprecated. Please import them from the submodule instead, e.g. qutip.qip import `func_name`.; Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[1. 0. 0. 0.]; [0. 1. 0. 0.]; [0. 0. 0. 1.]; [0. 0. 1. 0.]]; >>> import qutip # warning appears only once.; >>> qutip.cnot(); Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[1. 0. 0. 0.]; [0. 1. 0. 0.]; [0. 0. 0. 1.]; [0. 0. 1. 0.]]; ```. The help function still works correctly:; ```; >>> help(cnot); Help on function cnot in module qutip.qip.gates:; cnot(N=None, control=0, target=1); Quantum object representing the CNOT gate. Returns; -------; cnot_gate : qobj; Quantum object representation of CNOT gate. Examples; --------; >>> cnot(); Quantum object: dims = [[2, 2], [2, 2]], shape = [4, 4], type = oper, isHerm = True; Qobj data =; [[ 1.+0.j 0.+0.j 0.+0.j 0.+0.j]; [ 0.+0.j 1.+0.j 0.+0.j 0.+0.j]; [ 0.+0.j 0.+0.j 0.+0.j 1.+0.j]; [ 0.+0.j 0.+0.j 1.+0.j 0.+0.j]]; ```. The only flaw I found is that the traceback will stop at the wrapper function if the arguments are wrong; ```; >>> cnot(wrong_arg=1); __main__:1: DeprecationWarning: Importing functions/classes of the qip submodule directly from the namespace qutip is deprecated. Please import them from the submodule instead, e.g. qutip.qip import `func_name`.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""c:\users\boxi\onedrive\studium\qutip-project\qutip\qutip\__init__.py"", line 240, in deprecated_func; return func(*args, **kwargs); TypeError: cnot() got an unexpected keyword argument 'wrong_arg'; ```; Anyone would like to try it out and see if the behaviour is the same? For instance, running `test_entropy.py` now will give a warning because the importation is wrong there. All tests still pass.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1074:2127,wrap,wrapper,2127,https://qutip.org,https://github.com/qutip/qutip/pull/1074,1,['wrap'],['wrapper']
Integrability,; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cyth,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:6615,depend,depends,6615,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; [ 1/31] Cythonizing qutip/core/_brtensor.pyx; [ 2/31] Cythonizing qutip/core/_brtools.pyx; [ 3/31] Cythonizing qutip/core/cy/coefficient.pyx; [ 4/31] Cythonizing,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:8229,depend,depends,8229,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compilin,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:7613,depend,depends,7613,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; [ ,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:8070,depend,depends,8070,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,"; Complete output from command python setup.py egg_info:; ; Error compiling Cython file:; ------------------------------------------------------------; ...; cdef double * col_sum = <double *>PyDataMem_NEW_ZEROED(ncols, sizeof(double)); cdef double max_col = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; k = ind[jj]; col_sum[k] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:316:29: ambiguous overloaded method; ; Error compiling Cython file:; ------------------------------------------------------------; ...; cdef size_t ii, jj; cdef double * row_sum = <double *>PyDataMem_NEW_ZEROED(nrows, sizeof(double)); cdef double max_row = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; row_sum[ii] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:335:30: ambiguous overloaded method; Compiling qutip/cy/spmatfuncs.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/stochastic.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/sparse_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/graph_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/interpolate.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/spmath.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/heom.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/math.pyx because it depends on /home/kilian/qutip/lib/python2.7/si",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:1432,depend,depends,1432,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['depend'],['depends']
Integrability,"; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (tau) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (Qobj) ... ok; control.pulseoptim: Hadamard gate with linear",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:2803,depend,dependent,2803,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,1,['depend'],['dependent']
Integrability,"; [248](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=247) if e_ops_dict:. File ~/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py:496, in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); [493](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=492) progress_bar.update(t_idx); [495](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=494) if not r.successful():; --> [496](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=495) raise Exception(""ODE integration error: Try to increase ""; [497](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=496) ""the allowed number of substeps by increasing ""; [498](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=497) ""the nsteps parameter in the Options class.""); [500](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=499) if opt.store_states or expt_callback:; [501](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=500) cdata = get_curr_state_data(r). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.; ```. ### Expected Behaviour. The evolution should have reproduced the result given in the tutorial notebook. ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.21.1; Scipy Version: 1.7.3; Cython Version: None; Matplotlib Version: 3.5.0; Python Version: 3.9.0; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:5530,integrat,integration,5530,https://qutip.org,https://github.com/qutip/qutip/issues/1896,1,['integrat'],['integration']
Integrability,"</a> Pin 3.8 and 3.9 runners back to macos-13 (<a href=""https://redirect.github.com/psf/requests/issues/6688"">#6688</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/f1bb07d39b74d6444e333879f8b8a3d9dd4d2311""><code>f1bb07d</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6687"">#6687</a> from psf/dependabot/github_actions/github/codeql-act...</li>; <li><a href=""https://github.com/psf/requests/commit/60047ade64b0b882cbc94e047198818ab580911e""><code>60047ad</code></a> Bump github/codeql-action from 3.24.0 to 3.25.0</li>; <li><a href=""https://github.com/psf/requests/commit/31ebb8102c00f8cf8b396a6356743cca4362e07b""><code>31ebb81</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6682"">#6682</a> from frenzymadness/pytest8</li>; <li>Additional commits viewable in <a href=""https://github.com/psf/requests/compare/v2.31.0...v2.32.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.31.0&new-version=2.32.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:9919,Depend,Dependabot,9919,https://qutip.org,https://github.com/qutip/qutip/pull/2434,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"</a> Use trusted publishing for PyPI</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d25cf83bbae850a290fe34ed1610ae55c0558b36""><code>d25cf83</code></a> [1.26] Fix invalid test_ssl_failure_midway_through_conn</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/25cca389496b86ee809c21e5b641aeaa74809263""><code>25cca38</code></a> [1.26] Fix test_ssl_object_attributes</li>; <li>Additional commits viewable in <a href=""https://github.com/urllib3/urllib3/compare/1.26.14...1.26.17"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.14&new-version=1.26.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:5438,depend,dependabot,5438,https://qutip.org,https://github.com/qutip/qutip/pull/2236,1,['depend'],['dependabot']
Integrability,"</a>; [radarhere]</p>; </li>; <li>; <p>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a>; [radarhere]</p>; </li>; <li>; <p>Fixed palette index for zeroed color in FASTOCTREE quantize <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5869"">#5869</a>; [radarhere]</p>; </li>; <li>; <p>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a>; [radarhere]</p>; </li>; <li>; <p>Pass SAMPLEFORMAT to libtiff <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5848"">#5848</a>; [radarhere]</p>; </li>; <li>; <p>Added rounding when converting P and PA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5824"">#5824</a>; [radarhere]</p>; </li>; <li>; <p>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a>; [radarhere]</p>; </li>; <li>; <p>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a>; [hugovk]</p>; </li>; <li>; <p>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a>; [radarhere]</p>; </li>; <li>; <p>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a>; [m-shinder, radarhere]</p>; </li>; <li>; <p>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a>; [cmbruns, radarhere]</p>; </li>; <li>; <p>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </b",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:12273,depend,dependabot,12273,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"</a>]</li>; <li>Allow FLI palette chunk to not be first <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6626"">#6626</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>If first GIF frame has transparency for RGB_ALWAYS loading strategy, use RGBA mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6592"">#6592</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Round box position to integer when pasting embedded color <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6517"">#6517</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed EXIF prefix when saving WebP <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6582"">#6582</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Pad IM palette to 768 bytes when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6579"">#6579</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added DDS BC6H reading <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6449"">#6449</a> [<a href=""https://github.com/ShadelessFox""><code>@​ShadelessFox</code></a>]</li>; <li>Added support for opening WhiteIsZero 16-bit integer TIFF images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6642"">#6642</a> [<a href=""https://github.com/JayWiz""><code>@​JayWiz</code></a>]</li>; <li>Raise an error when allocating translucent color to RGB palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6654"">#6654</a> [<a href=""https://github.com/jsbueno""><code>@​jsbueno</code></a>]</li>; <li>Moved mode check outside of loops <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6650"">#6650</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:7225,depend,dependabot,7225,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"</code></a> Merge pull request from GHSA-34jh-p97f-mpxf</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/29cfd02f66376c61bd20f1725477925106321f68""><code>29cfd02</code></a> Fix handling of OpenSSL 3.2.0 new error message &quot;record layer failure&quot; (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3405"">#3405</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b60064388302f54a3455259ddab121618650a154""><code>b600643</code></a> [1.26] Bump RECENT_DATE (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3404"">#3404</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/7e2d3890926d4788e219f63e2e36fbeb8714827f""><code>7e2d389</code></a> [1.26] Fix running CPython 2.7 tests in CI (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3137"">#3137</a>)</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.18&new-version=1.26.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:3760,Depend,Dependabot,3760,https://qutip.org,https://github.com/qutip/qutip/pull/2458,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"</code></a>]</li>; <li>Consider all frames when selecting mode for PNG save_all <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6610"">#6610</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Don't reassign crc on ChunkStream close <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6627"">#6627</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Raise a warning if NumPy failed to raise an error during conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6594"">#6594</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only read a maximum of 100 bytes at a time in IMT header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6623"">#6623</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Show all frames in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6611"">#6611</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow FLI palette chunk to not be first <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6626"">#6626</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>If first GIF frame has transparency for RGB_ALWAYS loading strategy, use RGBA mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6592"">#6592</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Round box position to integer when pasting embedded color <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6517"">#6517</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed EXIF prefix when saving WebP <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6582"">#6582</a> [<a href=""https://github.com/radarhere""><",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:6107,depend,dependabot,6107,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"</code></a>]</li>; <li>Fixed typo <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5902"">#5902</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Switched from deprecated &quot;setup.py install&quot; to &quot;pip install .&quot; <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5896"">#5896</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a> [<a href=""https://github.com/cmbruns""><code>@​cmbruns</code></a>]</li>; <li>Fixed raising OSError in _safe_read when size is greater than SAFEBLOCK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5872"">#5872</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>WebP: Fix memory leak during decoding on failure <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5798"">#5798</a> [<a href=""https://github.com/ilai-deutel""><code>@​ilai-deutel</code></a>]</li>; <li>Do not prematurely return in ImageFile when saving to stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5665"">#5665</a> [<a href=""https://github.com/infmagic2047""><code>@​infmagic2047</code></a>]</li>; <li>Added support for top right and bottom right TGA orientations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5829"">#5829</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected ICNS file length in header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5845"">#5845</a> [<a href=""https://github.com/radarhere"">",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:6487,depend,dependabot,6487,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"</li>; <li>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed redundant part of condition <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5915"">#5915</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Explicitly enable strip chopping for large uncompressed TIFFs <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5517"">#5517</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Use the Windows method to get TCL functions on Cygwin <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5807"">#5807</a> [<a href=""https://github.com/DWesl""><code>@​DWesl</code></a>]</li>; <li>Changed error type to allow for incremental WebP parsing <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5404"">#5404</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Ensure that BMP pixel data offset does not ignore palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5899"">#5899</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use latin1 encoding to decode bytes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5870"">#5870</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:2078,depend,dependabot,2078,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"<a href=""https://redirect.github.com/urllib3/urllib3/issues/3404"">#3404</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/7e2d3890926d4788e219f63e2e36fbeb8714827f""><code>7e2d389</code></a> [1.26] Fix running CPython 2.7 tests in CI (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3137"">#3137</a>)</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.18&new-version=1.26.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:4256,depend,dependabot-automerge-start,4256,https://qutip.org,https://github.com/qutip/qutip/pull/2458,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"<code>7b9e8e1</code></a> Test on Python 3.11 final</li>; <li><a href=""https://github.com/pypa/wheel/commit/a04dfef41be0ab10eadbb2ed5d02b600682dc487""><code>a04dfef</code></a> Updated the pypi-publish action</li>; <li><a href=""https://github.com/pypa/wheel/commit/94bb62cb182023ac6586c5510ae9031ea56bd682""><code>94bb62c</code></a> Fixed docs not building due to code style changes</li>; <li><a href=""https://github.com/pypa/wheel/commit/d635664abe560d48723cfc3b73c52ad8c906760a""><code>d635664</code></a> Updated the codecov action to the latest version</li>; <li><a href=""https://github.com/pypa/wheel/commit/fcb94cd51f7dfd40d88dff37415750d9e3638d3b""><code>fcb94cd</code></a> Updated <strong>version</strong> to match the release</li>; <li>Additional commits viewable in <a href=""https://github.com/pypa/wheel/compare/0.37.0...0.38.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wheel&package-manager=pip&previous-version=0.37.0&new-version=0.38.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` wi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:4998,depend,dependency-name,4998,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['depend'],['dependency-name']
Integrability,"<code>@​radarhere</code></a>]</li>; <li>Don't reassign crc on ChunkStream close <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6627"">#6627</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Raise a warning if NumPy failed to raise an error during conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6594"">#6594</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only read a maximum of 100 bytes at a time in IMT header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6623"">#6623</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Show all frames in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6611"">#6611</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow FLI palette chunk to not be first <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6626"">#6626</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>If first GIF frame has transparency for RGB_ALWAYS loading strategy, use RGBA mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6592"">#6592</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Round box position to integer when pasting embedded color <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6517"">#6517</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed EXIF prefix when saving WebP <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6582"">#6582</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Pad IM palette to 768 bytes when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6579"">#6579</a> [<a href=""https://github.com/radarhere""><",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:6319,depend,dependabot,6319,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"<code>@​radarhere</code></a>]</li>; <li>Improved ImageOps palette handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6596"">#6596</a> [<a href=""https://github.com/PososikTeam""><code>@​PososikTeam</code></a>]</li>; <li>Defer parsing of palette into colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6567"">#6567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Apply transparency to P images in ImageTk.PhotoImage <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6559"">#6559</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use rounding in ImageOps contain() and pad() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6522"">#6522</a> [<a href=""https://github.com/bibinhashley""><code>@​bibinhashley</code></a>]</li>; <li>Fixed GIF remapping to palette with duplicate entries <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6548"">#6548</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow remap_palette() to return an image with less than 256 palette entries <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6543"">#6543</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected BMP and TGA palette size when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6500"">#6500</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.3.0 (2022-10-29)</h2>; <ul>; <li>; <p>Limit SAMPLESPERPIXEL to avoid runtime DOS <a href=""https://github-redirect.dependabot.com/pyt",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:9396,depend,dependabot,9396,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"<code>@​radarhere</code></a>]</li>; <li>Removed redundant part of condition <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5915"">#5915</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Explicitly enable strip chopping for large uncompressed TIFFs <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5517"">#5517</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Use the Windows method to get TCL functions on Cygwin <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5807"">#5807</a> [<a href=""https://github.com/DWesl""><code>@​DWesl</code></a>]</li>; <li>Changed error type to allow for incremental WebP parsing <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5404"">#5404</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Ensure that BMP pixel data offset does not ignore palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5899"">#5899</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use latin1 encoding to decode bytes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5870"">#5870</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed palette index for zeroed color in FASTOCTREE quantize <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5869"">#5869</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</co",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:2289,depend,dependabot,2289,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"<code>@​radarhere</code></a>]</li>; <li>Use latin1 encoding to decode bytes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5870"">#5870</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed palette index for zeroed color in FASTOCTREE quantize <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5869"">#5869</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Pass SAMPLEFORMAT to libtiff <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5848"">#5848</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added rounding when converting P and PA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5824"">#5824</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Image.NONE is only used for resampling and dithers <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5908"">#5908</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a> [<a href=""https://github.com/radarhere""><code",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:3829,depend,dependabot,3829,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"<li><a href=""https://github.com/psf/requests/commit/87d63de8739263bbe17034fba2285c79780da7e8""><code>87d63de</code></a> v2.29.0</li>; <li><a href=""https://github.com/psf/requests/commit/51716c4ef390136b0d4b800ec7665dd5503e64fc""><code>51716c4</code></a> enable the warnings plugin (<a href=""https://redirect.github.com/psf/requests/issues/6416"">#6416</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/a7da1ab3498b10ec3a3582244c94b2845f8a8e71""><code>a7da1ab</code></a> try on ubuntu 22.04 (<a href=""https://redirect.github.com/psf/requests/issues/6418"">#6418</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/psf/requests/compare/v2.28.2...v2.31.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.28.2&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:7577,depend,dependabot-security-updates,7577,https://qutip.org,https://github.com/qutip/qutip/pull/2164,1,['depend'],['dependabot-security-updates']
Integrability,"<ul>; <li><a href=""https://github.com/numpy/numpy/commit/4adc87dff15a247e417d50f10cc4def8e1c17a03""><code>4adc87d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20685"">#20685</a> from charris/prepare-for-1.22.0-release</li>; <li><a href=""https://github.com/numpy/numpy/commit/fd66547557f57c430d41be2fc0764f74a62e8ccf""><code>fd66547</code></a> REL: Prepare for the NumPy 1.22.0 release.</li>; <li><a href=""https://github.com/numpy/numpy/commit/125304b035effcd82e366e601b102e7347eaa9ba""><code>125304b</code></a> wip</li>; <li><a href=""https://github.com/numpy/numpy/commit/c283859128b1a4b57014581570a23ed7950a24ea""><code>c283859</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20682"">#20682</a> from charris/backport-20416</li>; <li><a href=""https://github.com/numpy/numpy/commit/5399c03d4a069fe81a1616be0184c9749d7271ee""><code>5399c03</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20681"">#20681</a> from charris/backport-20954</li>; <li><a href=""https://github.com/numpy/numpy/commit/f9c45f8ebf31340b1a5a0371bfca25afcfc4794e""><code>f9c45f8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20680"">#20680</a> from charris/backport-20663</li>; <li><a href=""https://github.com/numpy/numpy/commit/794b36f7e1bf2a8c42774ab0db86a74bd32f674b""><code>794b36f</code></a> Update armccompiler.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/d93b14e3d7abaa1d837825e51671f817788e120f""><code>d93b14e</code></a> Update test_public_api.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/7662c0789cc6a70d5ad4d950ee2e95f3afef7df6""><code>7662c07</code></a> Update <strong>init</strong>.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/311ab52488a7d096ac3bc4c2de0fdae17ecd13ef""><code>311ab52</code></a> Update armccompiler.py</li>; <li>Additional commits viewable in <a href=""https://github.com/n",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:3966,depend,dependabot,3966,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['depend'],['dependabot']
Integrability,"= dist.get_command_obj(""build_ext""); --> 102 dist.run_commands(); 103 so_path = obj_build_ext.get_outputs()[0]. F:\Anaconda3\lib\distutils\dist.py in run_commands(self); 954 for cmd in self.commands:; --> 955 self.run_command(cmd); 956 . F:\Anaconda3\lib\distutils\dist.py in run_command(self, command); 973 cmd_obj.ensure_finalized(); --> 974 cmd_obj.run(); 975 self.have_run[command] = 1. F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in run(self); 184 ; --> 185 _build_ext.build_ext.run(self); 186 . F:\Anaconda3\lib\distutils\command\build_ext.py in run(self); 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 . F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 192 ext.sources = self.cython_sources(ext.sources, ext); --> 193 self.build_extension(ext); 194 . F:\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 . F:\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 303 if not self.initialized:; --> 304 self.initialize(); 305 compile_info = self._setup_compile(output_dir, macros, include_dirs,. F:\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 196 ; --> 197 vc_env = _get_vc_env(plat_spec); 198 if not vc_env:. F:\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 84 if not vcvarsall:; ---> 85 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 86 . DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. ImportError Traceback (most recent call last); <ipython-input-9-be63b537dd61> in <module>(); 1 start_time = time.time(); ----> 2 q_energies, f_gnd_prob, wf_gnd_prob = qubit_integrate(delta, eps0, A, omega, gamma1, gamma2, psi0, T, ""dynamics""); 3 print('dynamics: time elapsed",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854:2530,depend,depends,2530,https://qutip.org,https://github.com/qutip/qutip/issues/854,1,['depend'],['depends']
Integrability,"=""https://github.com/certifi/python-certifi/commit/b81bdb269f1edb791bcd4ec8a9d0c053758f961a""><code>b81bdb2</code></a> 2022.09.24</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/939a28ffc57b1613770f572b584745c7b6d43e7d""><code>939a28f</code></a> 2022.09.14</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/aca828a78e73235a513dff9ebc181a47ef7dbf7b""><code>aca828a</code></a> 2022.06.15.2</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/de0eae12a6d5794a4c1e33052af6717707ce1fcc""><code>de0eae1</code></a> Only use importlib.resources's new files() / Traversable API on Python ≥3.11 ...</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/b8eb5e9af9143b22b7f651942b393e369ed4c52a""><code>b8eb5e9</code></a> 2022.06.15.1</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/47fb7ab715965684e035292d2ad3386aabdc4d25""><code>47fb7ab</code></a> Fix deprecation warning on Python 3.11 (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/199"">#199</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/b0b48e059995f455ac1e79b3ad373ad4ef355516""><code>b0b48e0</code></a> fixes <a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/198"">#198</a> -- update link in license</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/9d514b4cad79357071c89d7dc4dc1b4df72bb997""><code>9d514b4</code></a> 2022.06.15</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4151e8849481f396537c34812068e89b32731e52""><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/196"">#196</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2020.12.05...2022.12.07"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compati",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035:1286,depend,dependabot,1286,https://qutip.org,https://github.com/qutip/qutip/pull/2035,1,['depend'],['dependabot']
Integrability,"=""https://github.com/urllib3/urllib3/commit/339ad34c677c98fd9ad008de1d8bbeb9dbf34381""><code>339ad34</code></a> Use pytest==6.2.4 on Python 3.10+</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/f271c9c3149e20d7feffb6429b135bbb6c09ddf4""><code>f271c9c</code></a> Apply latest Black formatting</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/1884878aac87ef0494b282e940c32c24ee917d52""><code>1884878</code></a> [1.26] Properly proxy EOF on the SSLTransport test suite</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.4...1.26.5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.4&new-version=1.26.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563:3157,Depend,Dependabot,3157,https://qutip.org,https://github.com/qutip/qutip/pull/1563,1,['Depend'],['Dependabot']
Integrability,"===========; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; nose.plugins.cover: ERROR: Coverage not available: unable to import coverage module; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/lib/python3.7/site-packages/qutip-4.5.0.dev0+d377c997-py3.7-macos; x-10.9-x86_64.egg/qutip/__init__.py:161: UserWarning: matplotlib not found: Graphics will not work.; warnings.warn(""matplotlib not found: Graphics will not work.""); Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... Segmentation fault: 11; ~~~",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093:3388,depend,dependent,3388,https://qutip.org,https://github.com/qutip/qutip/issues/1093,4,['depend'],['dependent']
Integrability,"==========================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... Segmentation fault: 11; ```. I'm unsure what is going on here. I tried reinstalling qutip without any change. Prior I had a lot of errors referring to xcrun but I fixed that by installing xcode. Is there something else I need to get this working?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124:2195,depend,dependent,2195,https://qutip.org,https://github.com/qutip/qutip/issues/1124,4,['depend'],['dependent']
Integrability,"=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278046 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: rhs_reuse : pyx filenames match for rhs_reus= True; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:1924,depend,depends,1924,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278047 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: state with td list str H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", lin",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:6353,depend,depends,6353,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278048 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: unitary operator with td list str H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximpo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:10855,depend,depends,10855,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278049 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: state with td interp H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:15402,depend,depends,15402,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278050 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: unitary operator with td interp H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:19900,depend,depends,19900,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278051 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: compare state and unitary operator evo - list str td; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:24442,depend,depends,24442,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278052 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: Steady state: Driven cavity - power-gmres solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_steadystate.py"", line 490, in test_driven_c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:29031,depend,depends,29031,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_rhs_reuse.py"", line 53, in test_rhs_reuse; out1 = qt.mesolve(H, psi0,tlist, e_ops=e_ops); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\mesolve.py"", line 336, in mesolve; e_ops, args, options, progress_bar); File ""C:\",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:3815,depend,depends,3815,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 190, in test_04_1_state_with_list_str_H; td_args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 64, in check_evolution; args=td_args); File ""C:\Users\MTS-144\Ana",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:8227,depend,depends,8227,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 207, in test_04_2_unitary_with_list_func_H; td_args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 67, in check_evolution; output = sesolve(H, U0, tlist, args=td",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:12740,depend,depends,12740,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 226, in test_05_1_state_with_interp_H; td_args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 64, in check_evolution; args=td_args); File ""C:\Users\MTS-144\Anaco",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:17274,depend,depends,17274,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 245, in test_05_2_unitary_with_interp_H; td_args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 67, in check_evolution; output = sesolve(H, U0, tlist, args=td_ar",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:21783,depend,depends,21783,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 354, in test_06_4_compare_state_and_unitary_list_str; normalize=False, td_args=td_args, tol=5e-5); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 255, in compare_evolution",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:26344,depend,depends,26344,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"> #1651 create a time-dependent bloch redfield tensor, but do not create a new `brmesolve` using it and remove the `br_codegen.py` etc. that uses it. So it won't solve it yet. I don't think we need to rush -- we can finish #1651 and then do the next one, and then hopefully come back to this one. At least coefficients seem to work now, so hopefully people who are keen can try out this branch in the mean time if they want to.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1727#issuecomment-980042116:22,depend,dependent,22,https://qutip.org,https://github.com/qutip/qutip/pull/1727#issuecomment-980042116,1,['depend'],['dependent']
Integrability,"> * We have added a Users Guide for the new solver, as a new subsection of the ""Monte Carlo Solver"" guide. On my machine, I can build the documentation without problems (there are some warnings, but unrelated to this pull request). However, the check here failed and I do not see a useful error message. Does someone have an idea what is going on?. The error in the documentation (HTTP Error 403) is unrelated the the actual build. It happen from time to time randomly... you can ignore it.; However the documentation build will fail on warnings. > * We have two example notebooks to add to qutip-notebooks. How to proceed in practice: do we open a separate pull request in qutip-notebooks?; ; qutip-notebook is no longer used, we migrated to qutip-tutorial. Please open a new PR there. > * The _run_one_traj function now exists 3 times, with practically identical code:; > https://github.com/qutip/qutip/blob/master/qutip/solver/multitraj.py#L197; > https://github.com/qutip/qutip/blob/master/qutip/solver/mcsolve.py#L427; > https://github.com/pmenczel/qutip/blob/nonmarkovian-mcsolve/qutip/solver/nm_mcsolve.py#L160; > Maybe it would be a good idea to make the type of `Result` that is used for single trajectories generic in multi-trajectory solvers (just like the `resultclass` is already generic in solvers in general)? I have implemented that [here](https://github.com/pmenczel/qutip/commit/4a25709f90ed7c6dc2153011ee5a8110f3957c95) and could merge that commit into this PR if you think that's a good idea. There is a fourth `_run_one_traj` coming for the stochastic solver with also almost the same code...; Yes, some cleaning is needed and having a swap-able trajectory result class would be nice.; I looked at your implementation and it look fine.; I would just rename `trajectoryclass` to `trajectory_result_class` or something similar, otherwise it make me think it refer to the removed `TrajectorySolver`. > I've noticed a small bug that has gone unnoticed because of this: ""step"" [here](h",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2070#issuecomment-1446867702:295,message,message,295,https://qutip.org,https://github.com/qutip/qutip/pull/2070#issuecomment-1446867702,1,['message'],['message']
Integrability,"> * What is the reason that the time-dependent weights are still part of the trajectory result? That seems a bit inconsistent to me and I wonder if the `TrajectoryResult` class could perhaps just be removed?. The time-dependent weights are available as the `trace` attribute for each trajectories, so I though them as an (indirectly?) physical property of each trajectories. Since they are per trajectories, if feels normal to belong to the single trajectory result. But moving the logic to `NmmcResult` would simplify `MultiTrajResult` a lot and allow to remove `TrajectoryResult`. I will look into it this week.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2502#issuecomment-2296372851:37,depend,dependent,37,https://qutip.org,https://github.com/qutip/qutip/pull/2502#issuecomment-2296372851,2,['depend'],['dependent']
Integrability,"> 1 - we can't have proper namespacing, but let's at least make the magic name __qutip_qobj__ so we realistically prevent any chance of a clash. I think this is a good idea. Indeed jax uses the same trick (they define the `__jax_array__` interface). While I think that Qobj is a very qutip-like principle, I see no problems in namespacing. > 2- having the check in __init__ . Again, I think that your observation is right. I thought about it only after I submitted the post above. The way numpy does it is that `__array__(self, dtype)` takes only one argument, but I think we can do better and better respect the API set by qutip. ; That is why I was suggesting that `object.__qutip_qobj__` should not return a Qobj directly, but rather the data needed by QuTiP to construct a Qobj, and qutip should be free to re-organize it afterwards as he likes. . > 3 - we need to take care to do this in a way that still allows QuTiP to iterate and improve Qobj.__init__ between major versions. You could for example require that `__qutip_qobj__(self, version, *kwargs)` takes in a version of the API? I believe that is what numpy does in `__array_interface__`. And it's on implementers of the interface the burden of checking the api version and throwing an error if it's not supported. Or the inverse, where implementers return whatever data they return and a version of the API they are using, and qutip can throw an error if that is an older version. The latter would make it harder to support multiple versions of qutip in the implementers, but I would not worry too much about it. You can throw an error saying that this other package is not supported and you should either nag it's developers or downgrade qutip. I'm not particularly worried about the blame: even if the error is thrown from qutip, if the message is clear enough it will be clear that the fault is in the downstream implementors of the API. -- ; About keyword handling: copy-pasting the list of kwargs of `Qobj`...; ```python; inpt : arra",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825710810:238,interface,interface,238,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825710810,1,['interface'],['interface']
Integrability,"> ; > ; > @thangleiter can you try with the dependencies (cython numpy scipy nose matplotlib)? What Python are you using and what OS?. I am building (and running) the Docker image from Windows 10 1803 Education. The image itself is based on Alpine Linux (see [https://github.com/ContinuumIO/docker-images/tree/master/miniconda3](url)) and runs Python 3.7.1 (or lower, depending on the qutip version's requirements). Explicitly installing the dependencies also results in an `Illegal Instruction`. The dockerfile for reference:; ```dockerfile; FROM continuumio/miniconda3. RUN conda config --append channels conda-forge && conda update -y --quiet conda && conda install -y --quiet qutip cython numpy scipy nose matplotlib; ```. Edit: Some further investigation revealed that the crash also happens in the WSL Ubuntu shell with miniconda manually installed and Python 3.6 and 3.7. It doesn't crash with the same setup and Python 3.5, however. Edit 2: Installing via pip or from source works with Python 3.7 and qutip 4.3.1, so the problem is definitely the conda package.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-480771908:44,depend,dependencies,44,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-480771908,3,['depend'],"['dependencies', 'depending']"
Integrability,"> ; > ; > Different platforms have some subtle differences in how multiprocessing works: On linux, processes ""fork"". My basic understanding is that sub-processes are created as copies of the parent process, thus inheriting their entire state (global variables/functions). Windows, and [macOS with Python >= 3.8](https://twitter.com/raymondh/status/1180209729609420800) uses ""spawn"". There, I believe subprocesses start from blank slate, and relevant global state is injected via IPC. Sadly, limitations of the pickle protocol can cause ""spawn""-based multiprocessing to have problems.; > ; > Jupyter notebooks are affected by this: you cannot use multiprocessing-map using functions defined within the notebook.; > ; > Within qutip, this definitely affects the `parallel_map` function: It currently will cause freezes on Windows (See https://qucontrol.github.io/krotov/v1.0.0/notebooks/08_example_ensemble.html). With Python 3.8, macOS is also affected by this. See [qutip/qutip-notebooks#100](https://github.com/qutip/qutip-notebooks/issues/100); > ; > One possible workaround is to use a third-party replacement for multiprocessing. An work-in-progress implementation of this is in #1092, using [loky](https://loky.readthedocs.io).; > ; > In #1197, we also identified a freeze in `mcsolve` when running tests on macOS/Python 3.8. This is suspected to be an issue with spawn-based multiprocessing, although we haven't been able to determine this with complete confidence.; > ; > If the freeze is indeed caused by spawn-multiprocessing, the problem _should_ also show up on Windows. Is anyone running Windows able to reproduce this?. Windows doesn't have 'fork' at all, if we want to make parallel_map work under windows, we have to find ways to 'spawn' efficiently.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1202#issuecomment-683628416:466,inject,injected,466,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-683628416,2,"['inject', 'protocol']","['injected', 'protocol']"
Integrability,> ; > ; > Seems interesting but tests are failing... Hi Ericgig!. Thank you very much for looking into this! I haven't been able to figure out why the build is failing; the error messages quote parts of the code that I didn't even modify. Could you assist me in finding out why?. Thanks a bunch!; Nithin,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/912#issuecomment-466180105:179,message,messages,179,https://qutip.org,https://github.com/qutip/qutip/pull/912#issuecomment-466180105,1,['message'],['messages']
Integrability,"> @cgranade When we initially talked about this, we also spoke about storing Kraus superoperators with it, but it's not completely clear to me whether this route covers that case. ""No"" is fine (we don't have to make this work for everything) but if the answer is ""Yes"" or ""Maybe"", what would that look like?. At the moment, no. Following our discussion, it sounded like separating the two features may make the most sense such that I wanted to focus first on representing instruments. > > I've played around with using if_ to compute the noisy channel one gets for state teleportation when operations are perfect but classical outcomes get scrambled; would that be useful, perhaps?; > ; > That sounds like a great example!. Awesome, I'll go add that as a draft PR to the notebooks repo, then, so as to develop both in parallel. > > Fair enough, easy to drop that as well. Would you want everything dropped, or would some things like the core type QInstrument itself be reasonable to keep in qutip.**all**; > ; > Let's keep QInstrument in since that feels at the same level as Qobj and QobjEvo and we can think about other things on a case by case basis (and see what v5 is doing). Sounds good, will do!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1687#issuecomment-951361876:156,rout,route,156,https://qutip.org,https://github.com/qutip/qutip/pull/1687#issuecomment-951361876,1,['rout'],['route']
Integrability,"> @hodgestar I gave it a first read. Thank you!. > I would suggest the split the `bofin.py` file and move out the `Bath` to make it less heavy. I've been thinking of splitting the file up a bit too but have been waiting until I was ready to replace heom.py. The Bath and Bath exponent classes could possibly be separated from the solver and solver support classes. > The interface for `Bath` seems quite hard to use. An expansion of the correlation function is useful for the solving, but I feel we should have more helper function for the user. There are three tiers of bath classes:. * Bath: Low-level. One gets to specify exactly the exponents one wants by hand.; * BosonicBath and FermionicBath: Mid-level. Flexible but one has to specify the expansion coefficients.; * DrudeLorentzBath and DrudeLorentzPadeBath: High-level. Support for specific bath models. I discussed having a class that would automatically fit a correlation function with Niell, and he has experiment with that but it's bit tricky to make it work well in a generic way. E.g. For the DrudeLorentz bath there is a divergence in the exponent series at t = 0 which makes it hard to fit numerically. We'd like to add more generic support in future, but the current approach provides all the functionality of the existing HSolverDL and is sufficiently flexible to implement many more higher-level Bath classes easily in the future.; ; > Are `BathExponent` needed? I don't see why there is one object for each term and not one object for the whole decomposition. BathExponent its just a holder for all of the information associated with an expansion term. Three issues with treating whole expansions as one object are:. * some exponents contribute to two expansions (e.g. the RI exponent type); * some exponents are paired (e.g. the + and - types); * having exponents within expansions makes dealing with the hierarchy a mess because one has to have lists of lists of exponents with relationships between them and ADO labels would ha",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1601#issuecomment-964982005:371,interface,interface,371,https://qutip.org,https://github.com/qutip/qutip/pull/1601#issuecomment-964982005,1,['interface'],['interface']
Integrability,"> According to the error message; > ; > ```; > WARNING: invalid signature for automodule ('qutip.core.gates\n :members:\n :show-inheritance:\n :imported-members:'); > WARNING: don't know which module to import for autodocumenting 'qutip.core.gates\n :members:\n :show-inheritance:\n :imported-members:' (try placing a ""module"" or ""currentmodule"" directive in the document, or giving an explicit module name); > ```; > ; > That should be the error source. Lets use; > ; > ```; > .. automodule:: qutip.core.gates; > :members: ...; > ```; > ; > first and see if it works. Thank you, lets try that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2441#issuecomment-2148458661:25,message,message,25,https://qutip.org,https://github.com/qutip/qutip/pull/2441#issuecomment-2148458661,1,['message'],['message']
Integrability,"> Assuming Simon's point isn't just a complete answer to your question: in the general case, this is an impossible question to answer - it touches on many parts of numerical integration, such as tolerance limits and adaptive step-size methods. When you're dealing with completely arbitrary time-dependence, there's not really any one-size-fits-all approach that'll work (despite how RK45 is often taught as a magic bullet in physics courses).; > ; > Here, you will likely find that your RK45 results depend strongly on how many intermediate timesteps you use, whereas QuTiP's results will be (marginally) more stable. This is because QuTiP will internally subdivide the timesteps more to achieve internal precision goals, but then only returns the results at the time points you ask for. You can increase the maximum number of allowed subdivisions by increasing the `nsteps` parameter in a `qutip.Options` object, and with the `options` keyword argument. I addressed Simon's question. Also, I tried different solver options in mesolve including solver type, nsteps, relative and absolute tolerence, etc ... Also for RK45 I tried to change the parameters in order to see if the solutions coincide. They didn't. I don't know if there exists an analytically solvable problem in which both Hamiltonian and dissipation operators are time dependent, but if there is such a problem, then I can use it as a benchmark in order to compare QuTiP and RK45.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986665248:174,integrat,integration,174,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986665248,4,"['depend', 'integrat']","['depend', 'dependence', 'dependent', 'integration']"
Integrability,"> Could you send the equation for the case where `time_sense` is not `0`.; > ; > When I try it with a period of `1.0` it give extra term with very low frequencies:; > ; > ```; > dict_keys([0.0, 4.304872064735899e-09, 1.0157988986038049e-08, 1.1379302858450767e-08, -2.9820390185456766e-09, -4.304872064735899e-09, 5.8531169213021495e-09, 7.074430793714867e-09, -7.286911083281576e-09, -1.0157988986038049e-08, -5.8531169213021495e-09, 1.2213138724127176e-09, -1.3140028004583725e-08, -1.1379302858450767e-08, -7.074430793714867e-09, -1.2213138724127176e-09, -1.4361341876996443e-08, 2.9820390185456766e-09, 7.286911083281576e-09, 1.3140028004583725e-08, 1.4361341876996443e-08]); > ```; > ; > Is it normal? You did not include any test using `time_sense`.; > ; > ​. The relaxation of the secular approximation isn't by direct time-dependence. It was originally, but this was later changed to relax the secular approximation according to the ""importance"" of each term, which is dictated by a quotient. The numerator of the quotient is the product of the FFT coefficients that make up a certain element of the rate matrix super operator, and the denominator is the difference of frequencies between the two elements multiplied by the system frequency omega. When `time_sense` is `0`, the rate matrix is constructed using only the product of FFT coefficients for which the frequency arguments completely cancel. When `timesense` isn't `0`, however, is when that quotient comes into play. In a nutshell, this ends up dividing the rate at which a certain element changes the system by the frequency at which that rate rotates in the Floquet Basis. If the result of the quotient is small, the frequency is much higher than the collapse operator elements actually affect the system, such that it averages out on longer timescales. If the result of the quotient is large, then the collapse operator elements appreciably change the system on a shorter timescale than they rotate, such that their contribution t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1631503788:831,depend,dependence,831,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1631503788,1,['depend'],['dependence']
Integrability,"> Does anyone know how we would give some kind of deprecation warning when `from qutip import *` is made to say that only core functions will be imported from v5 onwards?. @ajgpitch . I know I'm resurrecting a dead thread, but I have a way of detecting star imports if you can cope with a fairly gross hack. The only internal difference in `from qutip import *` (that I know about) from `import qutip` is that in the former, the import system access the `qutip.__all__` list to see which names it should import. This is intended to be a list of names, so the star import doesn't _have_ to import every single name, i.e. so you can manually set what's public to a module; the star import is designed for use within packages, and the user importing a package like that is strongly recommended against (though in scientific code, I'm 100% sure that's a losing battle). So, what if we make `__all__` _look_ like a list, but a list that injects a warning whenever anyone tries to see what items it has? An example:; ```python; import warnings as _warnings. x = 2. class _all_wrapper(list):; def __iter__(self, *args, **kwargs):; _warnings.warn(""You star-imported!""); return super().__iter__(*args, **kwargs). __all__ = _all_wrapper(['x']); ```; I put that in a package called ""test"".; ```python; >>> from test import x; >>> x; 2; ```; or; ```python; >>> from test import *; /Users/jake/code/tmp/test/__init__.py:7: UserWarning: You star-imported!; _warnings.warn(""You star-imported!""); >>> x; 2; ```. I won't complain if you want to scream after that...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1071#issuecomment-605502925:932,inject,injects,932,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-605502925,1,['inject'],['injects']
Integrability,"> Don't put a link on a word if it doesn't specifically refer to the object you're linking to. Yeah, I was worried if linking words like ket, bra were needed or not. I'll remove them. . > The ""Raises"" section should only be for very non-obvious errors; > Don't put the error message in the description of a ""Raises"" section. No problem. I will remove errors created due to incorrect parameters and other obvious errors + error messages. I will add a parameters section if needed to clarify over ValueError. . > I saw a few places where changes in the formatting accidentally deleted a word, or hid some extra meaning. I think the accidental deletes might have been due to getting caught in some cut/copy/paste flow. . > Do you have the docs building correctly?. Yes, I do. I was a bit confused about how to try to format to functions not in API doc. So, I still tried to link a `ref` to them so that they are formatted similar to hyperlinks. I think a couple of these appear as italics.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1499#issuecomment-832138853:275,message,message,275,https://qutip.org,https://github.com/qutip/qutip/pull/1499#issuecomment-832138853,2,['message'],"['message', 'messages']"
Integrability,"> From what I understand, on intel, brmesolve seems to work correctly, but not on M1. This look like an issue with the eigensolver. Exactly. > Could you run the test suite to see if it fails the eigen and bloch redfield related tests: `pytest path_to_qutip/qutip/tests`. (Tests can take >30min). Yes it is failing these (and some others), but in particular it does fail everything in test_brmesolve.py and test_brmesolve_td.py. All failures I find seem to be related to the `Exception: ODE integration error` as mentioned in the original post.; On an emulated Intel terminal, the tests are all passing as expected.; This is strange, since I seem to find way more tests failing than reported in #1755.; Perhaps this is an issue with my installation, rather than qutip itself. I installed it in the standard way using conda (using the Apple Silicon version at 4.13). > Also could you look at the tensor directly:; > ; > ```; > R, H_eigenvector = bloch_redfield_tensor(sigmax(), a_ops=[[sigmax(), psd]]); > ```; > ; > If the tensor is wrong on M1, this would explain the error. Actually, that looks fine surprisingly enough (agrees with the Intel version). Thanks for the quick response. If I figure anything out, i'll let you know.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1203341063:490,integrat,integration,490,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1203341063,1,['integrat'],['integration']
Integrability,"> General comment about plotting on the Bloch sphere:; > ; > QuTiP currently supports drawing either ""points"" or ""vectors"" (i.e. arrows). Both are specified as `(x, y, z)` coordinates and these are _not_ required to lie on the surface of the sphere. Lying outside the sphere is perhaps a bit odd, but lying inside the sphere is a common occurrence -- e.g. when plotting sub-components of a density matrix.; > ; > There is a method `add_states` that converts states into `(x, y, z)` coordinates and adds them as either points or vectors as requested.; > ; > I would thus recommend being able to specify lines and arcs using either `(x, y, z)` coordinates or states and not introducing spherical coordinates right now.; > ; > I'm not against duplicating some of the functionality of `add_points(..., meth=""l"")` in the new functions we add here. For one, the `meth=""l""` is not particular intuitive when looking for a function to draw lines, and, secondly, it doesn't provide particularly flexible styling.; > ; > My vote is to keep the old method interfaces fairly consistent with how they are now so as not to disrupt existing uses (adding some new optional parameters or tweaking things to look better is fine), and to add a couple of new methods. Let's try not to make the internals of `Bloch` more messy though. Thanks a lot, Simon (@hodgestar). My modification to the bloch.py follows what you have suggested. ; Also, the code can plot arcs inside and outside the bloch sphere too, and the line segment can be drawn between any two points. And the inputs have to be in cartesian coordinates.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1685#issuecomment-934360018:1044,interface,interfaces,1044,https://qutip.org,https://github.com/qutip/qutip/pull/1685#issuecomment-934360018,1,['interface'],['interfaces']
Integrability,"> Hi @hodgestar, thanks for chiming in!; > ; > What you posted here looks exactly like what I initially asked, so I am very much in favour of it.; > ; > I'm just slightly confused about what `_call_qutip_qobj` should return: in your example I assume `.data` is just a numpy/scipy matrix, so the `dims` data` is completely lost?. `_call_qutip_qobj` should return an instance of `qutip.core.data.Data` (i.e. an object that implements QuTiP 5's data layer protocol). > QuTiP's `dims` attribute is our `hilbert.shape` attribute, but of course the matrix representation has a different shape.; > If I am not mistaken in your example above this would result in the hilbert shape information being lost?. Correct.; ; > Is there no way we can preserve this information in some way?. My proposal is we should allow this information to be preserved. Some possible options I can see:. 1. Allow returning `dims` in addition to the `Data` object from the create function (bit ugly, only solves this one issue).; 2. Give the `Data` object a `dims` attribute that is usually `None` (probably not feasible because what should the dims of the result of `matmul(data_with_dims_none, data_with_dims_set)` be).; 3. Allow the creator function to return either `Data` or a full `Qobj` (requires some checking on all the places a `Qobj` is used).; 4. Add another creator (e.g. `create_qobj`) that only returns `Qobj`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-908360109:453,protocol,protocol,453,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-908360109,1,['protocol'],['protocol']
Integrability,"> Hi, `tesnor` takes a list of Qobj, not a nested list. For example: `tensor([destroy(2), destroy(2)])`. The nested list you are referring to is the time dependent operator who's tensor product I am taking. The argument is,; [destroy(2),[Qobj(np.array([[0,complex(0,-1)*np.conj(H_a01)],[0,0]]),dims=[[2],[2]]), u_t]]; Which is a time dependent operator in the H = [H0, [H1, py_coeff1]] format. Here; H0 =destroy(2) , H1=Qobj(np.array([[0,complex(0,-1)*np.conj(H_a01)],[0,0]]) and py_coeff1=u_t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1183#issuecomment-588771589:154,depend,dependent,154,https://qutip.org,https://github.com/qutip/qutip/issues/1183#issuecomment-588771589,2,['depend'],['dependent']
Integrability,"> However if `default_dtype` can be seen as _running in that mode_, it certainly could cause confusion. It's not clear how it is understood in some places. In `eigenstates`, if we run in `CSR` mode, then does that mean that we use the sparse eigen solver? It's a lot worst than the dense one. Or should only the returned ket be in CSR format?; > ; > In my tries, the dense steadystate was faster that the sparse one. Could it be an issue that some matrices where too big to fit in RAM forcing to use swap space? We could have a warning when matrices over a certain size are allocated. I guess this was mostly because I wasn't explicitly calling steadystate with sparse=False so it was getting converted back to CSR anyway, and slowing things down. Largely I see similar performance between CSR and dense (using sparse=False), unless I use very small systems (16x16 Liouvillians), though this seemed a bit scipy/method dependent. I guess as you said this also raises the question about whether stuff like eigenstates and steadystate() should default to using methods based on the data layer of the object, instead of kwargs? My feeling is not, since eigenstates+sparse can be bad and steadystate+largesystem+dense could be bad, so its worth having some default conversion cost in place. But I still like the idea of what gets returned to the user following default_dtype. but maybe we can see if this turns out to be an issue that people have in using data layers, could just be me!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2328#issuecomment-1953388192:918,depend,dependent,918,https://qutip.org,https://github.com/qutip/qutip/issues/2328#issuecomment-1953388192,1,['depend'],['dependent']
Integrability,"> I added ipython to the testing workflow. Let me know if it should have been included somewhere else. Hmm. I don't like adding random dependencies into the workflow config. On the other hand, this is specific to IPython. Maybe we can add an ""ipython"" section in `setup.cfg` and add that to `full`?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1918#issuecomment-1146092238:135,depend,dependencies,135,https://qutip.org,https://github.com/qutip/qutip/pull/1918#issuecomment-1146092238,1,['depend'],['dependencies']
Integrability,"> I discussed having a class that would automatically fit a correlation function with Niell, and he has experiment with that but it's bit tricky to make it work well in a generic way. E.g. For the DrudeLorentz bath there is a divergence in the exponent series at t = 0 which makes it hard to fit numerically. Yeah, for the fitting stuff, we kept it for the example notebooks, since as simon said it's very problem dependent. hence having a very generic bath interface helps for inputting these low-level cases. . For high-level interface stuff, we can also add the underdamped (brownian-motion) bath example (matsubara + pade as well). We can also add the equivalent for the fermionic case. Simon's setup makes it easy to do.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1601#issuecomment-965101829:414,depend,dependent,414,https://qutip.org,https://github.com/qutip/qutip/pull/1601#issuecomment-965101829,3,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"> I don't want to straight up say ""QuTiP is correct"", because as I mentioned, the field of numerical computing is incredibly tricky, but it _probably_ is more accurate in this situation. I just tried doing what I suggested in my previous post (increase the number of time-steps), and found QuTiP was stable, but your RK45 implementation started differing. This is strongly suggestive that your RK45 isn't fully converging for this problem. I don't think you are right. As I mentioned I also did the same but the results are stable. I edited [my question on quantum computing stack exchange](https://quantumcomputing.stackexchange.com/questions/22187/qutip-vs-rk45-which-one-gives-the-correct-results-for-time-dependent-systems) if you are interested. There is no convergence issue. And I don't think it is ""impossible"" to figure out what is causing this difference or to understand which one is closer to the actual answer. If there exists a system with time-dependent Hamiltonian under a time-dependent dissipation which is analytically solvable, we can compare these two methods. I am not aware of such a problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986683310:709,depend,dependent-systems,709,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986683310,3,['depend'],"['dependent', 'dependent-systems']"
Integrability,"> I don’t know. It worked for me when I tried to install QuTiP from source —with-openmp. The error was a different and I am on a different MacOS (I also tried a conda install llvm, but what worked was gcc for me, with openmp). I understand that you trying to install QuTiP? If so, how? conda / source / pip? Consider doing it via conda if you are interested in the stable version release (4.3), by activating the conda-forge channel as detailed in the documentation. If QuTiP is installed and you receive this error while doing a specific task, can you copy paste the message of qutip.about() here?; > […](#); > On Sat, 9 Mar 2019 at 14:37, Xiao ***@***.***> wrote: Try conda install gcc. Does that mean I should use gcc from the Anaconda directory? — You are receiving this because you commented. Reply to this email directly, view it on GitHub <[#965 (comment)](https://github.com/qutip/qutip/issues/965#issuecomment-471148065)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AN5ffFcanH6qaCezLIKtW4SflaVsZ63Aks5vU0iCgaJpZM4bmfhd> . I am installing QuTip from compiling the source code, because I want to use MKL. I didn't use the --with-openmp option as MKL is already openmp threaded. . After ""conda install gcc"" the compilation is passed and QuTip can be so far used without problems. Thanks for your help.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-471155651:568,message,message,568,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-471155651,1,['message'],['message']
Integrability,"> I left some suggestions here for the higher-level interface.; > ; > My misgiving about my own suggestions is that they diverges from the interface style used already in the `Bloch` class for plotting colours and styles, but adding all the arrays for colours and styling for the new lines and arcs, or stuffing more things into the list of points seemed worse. :). Thanks, Simon @hodgestar for your review. Will make the respective changes soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1690#issuecomment-952921700:52,interface,interface,52,https://qutip.org,https://github.com/qutip/qutip/pull/1690#issuecomment-952921700,2,['interface'],['interface']
Integrability,"> I ran some comparisons to the old version, and everything looks good. There seems to be some speedup both to the RHS construction and the ODE solver for most cases. Thanks! I've now streamlined things a little more, so they might be slightly faster still. > Since each individual ADO is naturally a Qobj, having HierarchyADOsState store them an array or list of Qobjs makes sense I guess. I've put this down in the v5 TODO list (just to draw a line under this PR). > 2. How should the ado_state be stored on a results object? In particular, how should the change in e_ops signature be handled (for the HEOM solver the e_ops callables also take the full ADO state). I ended up always calling `e_ops` functions with `f(t, ado_state)`. This is a bit different to other solvers, but makes what the HEOMSolver considers the evolution state consistent. The density matrix part of the state is available as `ado_state.rho` so it's not a big hardship to retrieve just the system state. >> 3. Recheck the time dependent case.; > ; > From what I can see it looks good! Seems like basically you treat the entire RHS as an effective qobjevo? I ran through various > examples, and couldn't find any issues!. I simplified things a bit further. In the time-dependent case the RHS matrix is calculated without adding the Liouvillian to the diagonal and then the kron of the Liouvillian is added to the RHS at the end, resulting in a simpler QobjEvo. >> 4. The HEOM can't really take new QObjEvo arguments each time run is called because calculating the RHS again is quite expensive. Maybe something can be done?. Arguments are supported now because the full RHS is a QobjEvo!. >> 5. Compare performance to the HEOM in 4.7.; > ; > On the fermionic examples, with very-large system Hilbert space, there was a little slowdown in the RHS construction. Maybe the slowdown has gone away now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869#issuecomment-1145125739:1003,depend,dependent,1003,https://qutip.org,https://github.com/qutip/qutip/pull/1869#issuecomment-1145125739,2,['depend'],['dependent']
Integrability,"> I suspect the method of using QobjEvo that was suggested above only use two time steps (initial and final time) in evolving the Hamiltonian as the seed and interpolate the Hamiltonian at the time between the initial and final time using some interpolation function. This is not the case. The answer to your question is to use `QobjEvo` as suggested. For example, here is a simple example using a fast-oscillating array function in a `QobjEvo` and a much shorter `tlist` in `mesolve`. You may need to set the solver options `nsteps`, `atol` and `rtol` to suitable values, as I have done here. ```python; import qutip; import numpy as np. fast_ts = np.linspace(0, 1, 1001); fast_xs = 2.9e3*np.pi * np.cos(2*np.pi * 2.91e2 * fast_ts); # This is the behaviour you were suggesting is happening.; bad_interpolation_xs = np.array([fast_xs[0], fast_xs[-1]]). H = qutip.QobjEvo([[qutip.sigmax(), fast_xs]], tlist=fast_ts); H_bad = [[qutip.sigmax(), bad_interpolation_xs]]; rho = qutip.basis(2, 0).proj(); times = np.array([0., 1]); e_ops = [qutip.sigmay()]; options = qutip.Options(nsteps=10_000_000, atol=1e-14, rtol=1e-12). two_times = qutip.mesolve(H, rho, times, e_ops=e_ops, options=options); many_times = qutip.mesolve(H, rho, fast_ts, e_ops=e_ops, options=options); bad_times = qutip.mesolve(H_bad, rho, times, e_ops=e_ops, options=options). assert len(two_times.expect[0]) == 2; assert len(many_times.expect[0]) == 1001. print(two_times.expect[0][-1]) # -0.59736575; print(many_times.expect[0][-1]) # -0.59736575; print(bad_times.expect[0][-1]) # -4.5466086e-08; ```. You can see that I was able to do a successful integration with only 2 times in `mesolve`, but many in a fast-oscillating Hamiltonian. Clearly the `bad_times` version (which only has the start and end points so misses all the fast oscillation behaviour) is completely different to the other two versions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-810246525:1616,integrat,integration,1616,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-810246525,1,['integrat'],['integration']
Integrability,"> I think the `.integrate(t, step=....)` interface is currently way too complex, as evidenced by the difficulty of implementing it and the hard to resolve issues.; > ; > SciPy has a much simpler ODE interface -- see https://github.com/scipy/scipy/blob/v1.7.1/scipy/integrate/_ivp/base.py#L25-L214. Essentially a single `.step()` function.; > ; > Is there a reason we could not implement something similar here, and just have one `.step()` method and then implement `.integrate()` on top of that?. The `.step()` is essentially `.integrate(self.t)`, sot there would be no need for both.; If you mean having `step()` always advance one internal integrator step, we don't always have that possibility, `dop853` cannot advance only one step. And it would require to safe `self.back` each time even when not needed.; If you want a method to just advance to the time `t`, what ever it is as `scipy` seems to do, it will crush `mcsolve` speed. `mcsolve` has a root finding step that require a some back and forth and ode schemes all have their quirks when doing this. For actual use `integrate`, `step` and `backstep` can be 3 methods. I had this in the evolver PR but was told to merge them... The complexity could be split: have `integrate` for normal evolution (`sesovle`, `mesolve`), and `step` or `mcstep` for `mcsolve`.; This would also make it easier to create new Integrator for special use, it is easier to choose not to support `mcsolve` if the logic is split.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643#issuecomment-925988667:16,integrat,integrate,16,https://qutip.org,https://github.com/qutip/qutip/pull/1643#issuecomment-925988667,10,"['Integrat', 'integrat', 'interface']","['Integrator', 'integrate', 'integrator', 'interface']"
Integrability,"> If I understand correctly it refers to line 300 in test_metrics, which has a new hellinger metric test by @wrzadkow . Could it be that using ""for _ in range(10):"" is a problem?. The following observations:; - `for _ in range(10)` is already in [line 128](https://github.com/qutip/qutip/blob/master/qutip/tests/test_metrics.py#L128) in `test_metrics.py` ; - [line 300](https://github.com/qutip/qutip/blob/master/qutip/tests/test_metrics.py#L300) is the end of docstring of `test_hellinger_monotonicity()` ; - the presence of `invalid escape sequence \o` in the error message; - this thread https://stackoverflow.com/questions/52335970/how-to-fix-string-deprecationwarning-invalid-escape-sequence-in-python. make me think that the issue may be caused by `\otimes` that I used in the docstring explanations. Don't have a Mac to reproduce and check whether removing this will help, though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496497028:568,message,message,568,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496497028,1,['message'],['message']
Integrability,"> If this is supposed to be displayed in the Sphinx-rendered HTML instead of markdown. I think you need double backticks for the monospace font? E.g. `` ``Qobj`` ``. Yes, I do. Fixed.; ; > Does this also serve as a `guide on migrating from v4 to v5` or do we plan to have it separately somewhere else? It would be nice if we could summarize some common Error messages that one may see along with the solution/possible reasons. The error messages are what people usually type into Google search. This does serve as an initial guideline of what to expect, but I think we do also need a proper porting document like the one you mention.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2076#issuecomment-1419933633:359,message,messages,359,https://qutip.org,https://github.com/qutip/qutip/pull/2076#issuecomment-1419933633,2,['message'],['messages']
Integrability,"> Just another small issue, I found that if I use UnderDampedEnvironment.spectral_density() with brmesolve(), it fails in numpy 2.1.1 unless I wrap the SD function in another function. Strangely works without needing to wrap it in numpy 1.26.4. Seems to some difference in the way zero-dimensional arrays are treated, but not super sure. I noticed that as well,.I didn't fix it because we are not integrating with the solvers yet, but could check if the argument of correlation function is an array, and if it's not do the .item() bit, just so that brmesolve works smoothly",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2534#issuecomment-2372966464:143,wrap,wrap,143,https://qutip.org,https://github.com/qutip/qutip/pull/2534#issuecomment-2372966464,3,"['integrat', 'wrap']","['integrating', 'wrap']"
Integrability,"> Let's remove the `known_solvers` and the solver `name` from the SolverOptions and instead have the base solver pass the allowed options with defaults in to the SolverOptions constructor directly. If the allowed options list is `None`, then we can allow all options (for the convenience of users who really want to make their own SolverOptions instances). Users who makes their own SolverOptions are the base case. Using the `??solve` function with an `Options` instance and with documentation for the options items in the `Options` class, is the way in v4 and will probably stay that way for a while. ; Having a options not knowing about the solver let it accept bad options and typos. Also it hides the options documentation: solver's options could be in the `??solve` function, but not integrator options. The integrator was merged into the solver in v4 and is not made to be used directly by the average user. So the user should not need to know they exist to use qutip, nor refer to them directly to see which options are supported. > For convenience, when passing options as a dictionary, one should be able to use `{""ode.method"": ""vern9""}` or `{""ode"": {""method"": ""vern9""}`. Not sure I understand why this would be convenient, flat seems a easier to use and less confusing. Ideally the user should not need to know that there are 2 levels of options.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947#issuecomment-1173856276:790,integrat,integrator,790,https://qutip.org,https://github.com/qutip/qutip/pull/1947#issuecomment-1173856276,2,['integrat'],['integrator']
Integrability,"> Looks like I did mess up with the floquet.py versus flimesolve.py. I think; > I forgot at some point that I was to include all my new stuff in just the; > flimesolve.py, and then forgot about that script altogether. I apologize; > for this, and I'll fix it.; >; > I'll also go back through and fix style issues. As with above, I think I; > forgot to keep the proper styling at a certain point.; >; > I tried to keep my changes to correlation.py to a minimum, and contained; > to simply adding in the new solver in the make_solver function, as well as; > adding in some inputs as options to that solver, but I'll go through and; > review to see what's wrong.; >; > Thanks for your feedback, and I'll try to get this all fixed up as soon as; > I can.; >; >; > On Mon, Jun 26, 2023, 4:49 PM Eric Giguère ***@***.***>; > wrote:; >; >> ***@***.**** requested changes on this pull request.; >>; >> Something is strange in floquet.py, did you include change not meant to; >> be here?; >> Both floquet.py and flimesolve.py have the original fmesolve and the new; >> flimesolve...; >>; >> Tests should pass.; >> Right now, scipy 1.11 breaks cvxpy which we use so this breaks a few; >> tests, but the changes you made to correlation.py also break the tests.; >> We will want tests for the new solver.; >>; >> Could you also review the style (pep8).; >>; >> - There are some very long line, we use the official 80 characters; >> width.; >> - space are not uniform, sometime they are doubled, other time; >> missing.; >> - There are rules for empty lines, there should not be 3 empty lines; >> in a function.; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/qutip/qutip/pull/2140#pullrequestreview-1499406717>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/AV5WL5EA3UU23BHDUONIEN3XNHYVNANCNFSM6AAAAAAWLGP4AU>; >> .; >> You are receiving this because you authored the thread.Message ID:; >> ***@***.***>; >>; >. -- ; Best Regards,; Fenton Clawson",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2140#issuecomment-1610056805:3257,Message,Message,3257,https://qutip.org,https://github.com/qutip/qutip/pull/2140#issuecomment-1610056805,1,['Message'],['Message']
Integrability,"> Lots of people have successfully used QuTiP already as part of reinforcement learning protocols - I've worked with at least a couple. For those you worked on, do they include QOC via RL ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1323#issuecomment-660474276:88,protocol,protocols,88,https://qutip.org,https://github.com/qutip/qutip/issues/1323#issuecomment-660474276,1,['protocol'],['protocols']
Integrability,"> Matplolib is surely used for the visualization but most runtime modules can do without it. There is syntax for optional dependencies in ```setup.py```, you should consider using it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/892#issuecomment-403715814:122,depend,dependencies,122,https://qutip.org,https://github.com/qutip/qutip/issues/892#issuecomment-403715814,1,['depend'],['dependencies']
Integrability,"> My issue is that in these cases, we still set the `isherm` flag while not having any ideas what the user is trying to do:; > ; > We don't set the flag when the input are super operators? We try to check if the Liouvillian preserve hermiticity (not easy for time dependant operator)? Junk in, junk out?. A problem can also happen if the input is not a superoperator:. ```; H = qt.sigmaz() + 1j * qt.sigmax(); initial = qt.ket2dm(qt.basis(2, 0)); qt.mesolve(H, initial, [0, 1], c_ops=[qt.sigmam()]).final_state; > Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dense, isherm=True; > Qobj data =; > [[ 0.51118445+0.j -0.11358048+0.24945183j]; > [ 0.11358048+0.24945183j 0.32517255+0.j ]]; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2408#issuecomment-2078385711:264,depend,dependant,264,https://qutip.org,https://github.com/qutip/qutip/pull/2408#issuecomment-2078385711,1,['depend'],['dependant']
Integrability,"> Not sure how to make a test for this. The file name is random and it's not always reliable when the `__del__` is called which is where the file is erased. You could create a coefficient and check that the last entry of `coeff_files.file_list` looks correct and exists. The wouldn't check the deletion but would check that the filename is correct. You can do `del qutip.qobjevo.coeff_files` to trigger the clean-up of the object, but that is a bit GC dependent and implementing it properly would require calling `gc.collect()`. Not sure if that is worth the hassle.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2251#issuecomment-1781948773:452,depend,dependent,452,https://qutip.org,https://github.com/qutip/qutip/pull/2251#issuecomment-1781948773,1,['depend'],['dependent']
Integrability,"> Oh, a thought: perhaps I should modify the commit messages of PRs in the old qutip-doc to make them link correctly. For example, instigate a rewrite rule of #xxx goes to qutip/qutip-doc#xxx?. That sounds great, but I don't think it's required if it turns into a rabbit hole.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1513#issuecomment-829623558:52,message,messages,52,https://qutip.org,https://github.com/qutip/qutip/pull/1513#issuecomment-829623558,1,['message'],['messages']
Integrability,"> Overall, it look good as a way to make HEOM solvers work on v5. Woot. > But the use of data layer seems not ideal, why is the rhs fixed to `csr`. With it's size, it's probably not ideal as a Dense, but I don't think we should raise an error for other type... It doesn't actually restrict the RHS to CSR -- it only *constructs* the RHS as a CSR initially. The base solver will convert the RHS to the correct format for the integrator if needed. It might be possible one day to avoid constructing the RHS as a CSR but it might be tricky to make it not horribly slow, so I'd like to leave this as potential enhancement rather than work on it right now. > There is no `heomsolve` to go with `HEOMSolver`. I've added `heomsolve`. It has more parameters than `sesolve` or `mesolve`, which is not great, but I'm not sure how to avoid it. The bath and the max_depth are not really optional for the HEOM, and there aren't reasonably default values. > With other solvers, they accept `H` as a `Qobj` or `QobjEvo` only, list format is accepted by the __solve function. I changed HEOMSolver to only support `Qobj` or `QobjEvo`. I allowed `HSolverDL` to continue to support other objects since `HSolverDL` exists only for backwards compatibility. Perhaps we should remove it at some point, but the amount of code in it is also tiny. > `bofin_*.py` does not have a `__all__`, even if they are not supposed to be imported directly, it would be better if they had. I've added `__all__`.; ; > The test coverage does not include time-dependent Hamiltonian. Are those too slow to include in automated tests?. The tests don't include a truly time-dependent case because it's hard to solve one analytically. Previously I tested the time-dependent logic by supplying `[H]` as the system (i.e. fooling the code into using the time-dependent path) but that broke when I switched to using `QobjEvo.isconstant`. I fixed it by using `[H, lambda t: 1.0]` instead, which would be very hard to determine as constant. Thank for pi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869#issuecomment-1165701845:424,integrat,integrator,424,https://qutip.org,https://github.com/qutip/qutip/pull/1869#issuecomment-1165701845,1,['integrat'],['integrator']
Integrability,"> QuTiP doesn't have one built in at the moment, but [`toqito`](https://vprusso.github.io/toqito/) can do it as numpy arrays, which you can just wrap in `Qobj`. There's no scope for `density` there, though (and it would be very difficult to do so, I think!). Thanks :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1642#issuecomment-905717962:145,wrap,wrap,145,https://qutip.org,https://github.com/qutip/qutip/issues/1642#issuecomment-905717962,1,['wrap'],['wrap']
Integrability,"> So as a user on Windows, having installed QuTiP through Anaconda, I can't do any time propagation? . So what is certain is that if you use string type time-dependence then this needs a compiler, this is implied by the string type. Also, at present, giving an ndarray (and I think qutip CubicSpline) also means the RHS will be compiled, because it is much faster. Clearly we could make this optional, but it is not at present. @Ericgig is working on new versions of the solvers at the moment, I think he could easily include this in the design.; You should not need a compiler for using func type time-dependence, so you could make a function that encapsulates this array and spline behaviour. If I have not covered what it is that you to achieve, then please be explicit here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-466739255:158,depend,dependence,158,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-466739255,2,['depend'],['dependence']
Integrability,"> String format coefficients (`'sin(w * t)' ` in H) which use cython for compilation often fails on windows. Using functions instead work better.; > ; > ```; > def f(t,args):; > return sin(args[""w""]*t); > H = [H0, [H1, f]]; > ```; > ; > Here there is also an error in the error message, we will fix that bug soon. Thanks this worked. > import numpy as np; > from qutip import *; > import matplotlib.pyplot as plt; > ; > delta = 0.2 * 2*np.pi; eps0 = 1.0 * 2*np.pi; A = 2.5 * 2*np.pi; omega = 1.0 * 2*np.pi; > H0 = - delta/2.0 * sigmax() - eps0/2.0 * sigmaz(); > H1 = A/2.0 * sigmaz(); > args = {'w': omega}; > H = [H0, [H1, 'sin(w * t)']]; > T = 2*np.pi / omega; > f_modes_0, f_energies = floquet_modes(H, T, args); > f_energies. This didnt' work for me. I'm also running it on a Mac",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1207#issuecomment-603977040:278,message,message,278,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-603977040,1,['message'],['message']
Integrability,"> The new commits look good! Was wondering whether we should add support for array-like alpha values so that something like `add_vectors([[0,0,1],[1,0,0]], alpha=[0.75,0.60])` would work. Right now it's already possible to do using multiple `add_vector` methods, each with a different alpha value but the other option might be a bit cleaner for the user. I think a single alpha is fine if we take the view that each call to `add_vectors` is one set of related vectors that share some common properties (although they already rotate colours, which is sometimes helpful and sometimes a bit weird :). We need to rethink the `Bloch` interface for version 5 though, so keep ideas like this in mind for then. P.S. Thank you for checking the new commits.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1837#issuecomment-1094727740:629,interface,interface,629,https://qutip.org,https://github.com/qutip/qutip/pull/1837#issuecomment-1094727740,1,['interface'],['interface']
Integrability,"> The time-dependent weights are available as the `trace` attribute for each trajectories, so I though them as an (indirectly?) physical property of each trajectories. Since they are per trajectories, if feels normal to belong to the single trajectory result. But moving the logic to `NmmcResult` would simplify `MultiTrajResult` a lot and allow to remove `TrajectoryResult`. I do think it would be good to keep the `trace` property on the trajectories, but for the purpose of calculating the weighted averages, it could perhaps be treated like the other types of weights that we have.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2502#issuecomment-2297864958:11,depend,dependent,11,https://qutip.org,https://github.com/qutip/qutip/pull/2502#issuecomment-2297864958,1,['depend'],['dependent']
Integrability,"> Then out about removing dict expect? Dictionary support was not tested and supported only for some solver for a long time. It ; > would be strange to have it become the default. Well, this is v5 -- we are trying to make things nicer. The issue with lists of e_ops is that often the e_ops have no sensible ordering. E.g. if the e_ops are, say, the number operator and projectors on to two different bases of interest then `[qutip.num(N), proj1, proj2]` are later accessed as `.expect[0]`, `.expect[1]` and `.expect[2]` which are then unreadable and fairly arbitrary and unmemorable numbers. Having `.expect[""num""]`, `.expect[""proj1""]` and `.expect[""proj2""]` is much more readable and will result in fewer mistakes. I *really* like the dict interface because it gives this readability to results. I'm happy to accept that others may prefer lists, but providing multiple interfaces creates a problem for any code working with results. So it is a bit of tricky question to resolve. > For MC result, it has little impact, dict are a little more annoying to work with compared to list, but it need the expect as ndarray; not list or dict anyway. The MC result classes already have to work around these things in awkward ways, and probably need to be a lot more careful -- e.g. e_ops functions can return strange things like Qobjs or perhaps even stranger things like strings or dicts which can't be averaged over. > There are a some differences for the user. Code using `np.array(result.expect)` or `for expect in result.expect:` will break. Agreed, although unless `result.expect` contains a uniform set of things, this are probably not sensible things to be doing. I have some other ideas but I think they make more of a mess -- e.g. keep `.expect` a list but provide `.expect_d` which is a dict. If one needs to write v4 compatible code one can always pass a list of e_ops and then work with `.expect` a bit carefully (i.e. as a dict). Thoughts?. I have added tests now, so it's just the `.expect` issu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1907#issuecomment-1141326041:741,interface,interface,741,https://qutip.org,https://github.com/qutip/qutip/pull/1907#issuecomment-1141326041,2,['interface'],"['interface', 'interfaces']"
Integrability,"> There is no agreement on how this should be handled yet. It's been removed from `dev.major` with the plan to restore it before the release, but the exact interface is not fixed. It certainly will not be some special keyword in args. It could be a special value, or a special parameter / method for the solver class. Actually having a method in the solver class seems better, I suppose this is why we are going towards Solvers from the simple `mesolve` function. I am going to try and rewrite my example using the Solver class. We can probably get away with having this functionality only in the new Solver class --- benefit of a major release I guess.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/947#issuecomment-1142213362:156,interface,interface,156,https://qutip.org,https://github.com/qutip/qutip/issues/947#issuecomment-1142213362,1,['interface'],['interface']
Integrability,"> This also means that adding `qutip-qip` as an optional package right now does not make much sense. Probably we can drop this.; > ; > To test it on GitHub action we need to install `qutip-qip@master` for now and test the importation. @hodgestar Is that ok? Otherwise, I can try to get out a new release of `qutip-qip` in a day or so. Just to update the change log and click the button. Completely up to you, of course! If you choose to drop the optional dependency for now, I can also just put those changes on another PR to be merged when the time is right.; I'll stand by for your decision regarding the CI tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1920#issuecomment-1147629930:455,depend,dependency,455,https://qutip.org,https://github.com/qutip/qutip/pull/1920#issuecomment-1147629930,1,['depend'],['dependency']
Integrability,"> This error message suggests to me that one of the things you're trying to add might be a numpy array:; > ; > ```; > TypeError: operand 'Qobj' does not support ufuncs (__array_ufunc__=None); > ```. Yes, you are right, sorry. I am closing the issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2326#issuecomment-1961079240:13,message,message,13,https://qutip.org,https://github.com/qutip/qutip/issues/2326#issuecomment-1961079240,1,['message'],['message']
Integrability,"> This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:; > ; > ```; > =================================== FAILURES ===================================; > ___________________________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- covera",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:94,message,message,94,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896,1,['message'],['message']
Integrability,"> Update armccompiler.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/d93b14e3d7abaa1d837825e51671f817788e120f""><code>d93b14e</code></a> Update test_public_api.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/7662c0789cc6a70d5ad4d950ee2e95f3afef7df6""><code>7662c07</code></a> Update <strong>init</strong>.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/311ab52488a7d096ac3bc4c2de0fdae17ecd13ef""><code>311ab52</code></a> Update armccompiler.py</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.21.0...v1.22.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.21.0&new-version=1.22.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:5380,Depend,Dependabot,5380,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['Depend'],['Dependabot']
Integrability,"> Use 2.9.0's setup.py for 2.9.1</li>; <li><a href=""https://github.com/python-babel/babel/commit/60b33e083801109277cb068105251e76d0b7c14e""><code>60b33e0</code></a> Become 2.9.1</li>; <li><a href=""https://github.com/python-babel/babel/commit/412015ef642bfcc0d8ba8f4d05cdbb6aac98d9b3""><code>412015e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-babel/babel/issues/782"">#782</a> from python-babel/locale-basename</li>; <li><a href=""https://github.com/python-babel/babel/commit/5caf717ceca4bd235552362b4fbff88983c75d8c""><code>5caf717</code></a> Disallow special filenames on Windows</li>; <li><a href=""https://github.com/python-babel/babel/commit/3a700b5b8b53606fd98ef8294a56f9510f7290f8""><code>3a700b5</code></a> Run locale identifiers through <code>os.path.basename()</code></li>; <li><a href=""https://github.com/python-babel/babel/commit/5afe2b2f11dcdd6090c00231d342c2e9cd1bdaab""><code>5afe2b2</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-babel/babel/issues/754"">#754</a> from python-babel/github-ci</li>; <li><a href=""https://github.com/python-babel/babel/commit/58de8342f865df88697a4a166191e880e3c84d82""><code>58de834</code></a> Replace Travis + Appveyor with GitHub Actions (WIP)</li>; <li><a href=""https://github.com/python-babel/babel/commit/d1bbc08e845d03d8e1f0dfa0e04983d755f39cb5""><code>d1bbc08</code></a> import_cldr: use logging; add -q option</li>; <li><a href=""https://github.com/python-babel/babel/commit/156b7fb9f377ccf58c71cf01dc69fb10c7b69314""><code>156b7fb</code></a> Quiesce CLDR download progress bar if requested (or not a TTY)</li>; <li><a href=""https://github.com/python-babel/babel/commit/613dc1700f91c3d40b081948c0dd6023d8ece057""><code>613dc17</code></a> Make the import warnings about unsupported number systems less verbose</li>; <li>Additional commits viewable in <a href=""https://github.com/python-babel/babel/compare/v2.9.0...v2.9.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1695:2209,depend,dependabot,2209,https://qutip.org,https://github.com/qutip/qutip/pull/1695,1,['depend'],['dependabot']
Integrability,"> Users who makes their own SolverOptions are the base case. Using the `??solve` function with an `Options` instance and with documentation for the options items in the `Options` class, is the way in v4 and will probably stay that way for a while. Having a options not knowing about the solver let it accept bad options and typos. Also it hides the options documentation: solver's options could be in the `??solve` function, but not integrator options. The integrator was merged into the solver in v4 and is not made to be used directly by the average user. So the user should not need to know they exist to use qutip, nor refer to them directly to see which options are supported. I'm not sure I am quite following, but my thought was that options would be checked by the solver class when they are passed in. The mechanism the solver class would use for doing the check, would be to pass the description of the allowed options to the SolverOptions class, along with the options themselves. > Not sure I understand why this would be convenient, flat seems a easier to use and less confusing. Ideally the user should not need to know that there are 2 levels of options. The reason for nesting the ode options a little, is to make it clear which options might change if the ODE method changes. If one hides the structure completely, there is nothing to guide the user as to which options are related to what. E.g. If ODE method ""A"" took option ""opt1"" and method ""B"" took ""opt2"" then it's much clearer what is happening if one has to pass `""ode"": {""method"": ""A"", ""opt1"": 1}` and `""ode"": {""method"": ""B""}` than `""method"": ""A"", ""opt1"": 1"" and `""method"": ""B"", ""opt2"": 2`. In the flat case, one might accidentally have `""method"": ""B"": ""opt1"": 1` and ""opt1"" would be ignored. I am not too hung up on the exact approach for this bit though -- I just want it to be clear to the user what is going wrong, and for it to be a little be hard to options for different ODE methods clash with each other or other solve",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947#issuecomment-1174214647:433,integrat,integrator,433,https://qutip.org,https://github.com/qutip/qutip/pull/1947#issuecomment-1174214647,2,['integrat'],['integrator']
Integrability,"> What if we rethink the approach from the beginning:; > ; > ```; > QobjEvo([op, func], args={""state"": Solver.StateFeedback(default=psi0)}); > QobjEvo([op, func], args={""e1"": SESolver.ExpectFeedback(e_op)}); > QobjEvo([op, func], args={""state"": MESolver.StateFeedback(raw_data=True)}); > QobjEvo([op, func], args={""collapse"": MCSolver.CollapseFeedback()}); > QobjEvo([op, func], args={""W"": SMESolver.WeinerFeedback()}); > ```; > ; > And we remove the `add_feedback` method. This looks great. I really like that it makes it clearer where the feedback comes from and that it is solver dependent. Removing the need to specify the feedback in two places when constructing a `QobjEvo` is really nice too. Let's do it in a separate PR though (unless you strongly want to update this one). I have a slight concern that it might be a bit complicated for users to find the feedback classes (e.g. they have to know to import the right solver) but I'm sure we can make that nice the PR itself.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2210#issuecomment-1839582984:583,depend,dependent,583,https://qutip.org,https://github.com/qutip/qutip/pull/2210#issuecomment-1839582984,1,['depend'],['dependent']
Integrability,"> Would it be okay to use `_path_from_env(""XDG_CONFIG_HOME"", ` / "".config"")`. That would probably be fine. `XDG_CONFIG_HOME` is not normally set as an environment variable, but you're suggesting the same code that the xdg package itself uses, so the result will be the same, using ~/.config. . xdg seems to be pure Python, indifferent to operating system. So it would just use whatever `Path.home()` returns on Windows. Some frameworks take it a step further and use an Organization/Application subdir underneath ~/.config. That's what Qt does with [`QStandardPaths::ConfigLocation`](https://doc.qt.io/qt-6/qstandardpaths.html#StandardLocation-enum). So Qt would use these XDG paths where supported (Linux systems, maybe MacOS) and assign equivalent paths in the case of Windows. No point overengineering it though (unless you want to switch to QtPy6 as a framework!), so using `_path_from_env` will get the job done if you're trying to avoid the extra xdg dependency.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1876#issuecomment-1219870649:957,depend,dependency,957,https://qutip.org,https://github.com/qutip/qutip/issues/1876#issuecomment-1219870649,1,['depend'],['dependency']
Integrability,"> You see, the gate Gate(RY, targets=[0, 1], controls=None) is clearly wrong because RY acts only on one qubits. Yep ! That's what I thought as well..for all the single qubit gate outputs with two targets. I knew I was getting an error but was not sure why it was not the same error as both of you. It was because I was using the released version (like you predicted). . I was trying to put off installing from source for as long as I could because I would have to install conda and other dependencies manually. Now, I did get `ValuError`. Thanks !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-810592555:489,depend,dependencies,489,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-810592555,1,['depend'],['dependencies']
Integrability,"> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a> [<a href=""https://github.com/t-vi""><code>@​t-vi</code></a>]</li>; </ul>; <h2>8.3.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Use snprintf instead of sprintf <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a> [<a href=""https://github.com/newpanjing""><code>@​newpanjing</code></a>]</li>; <li>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a> [<a href=""https://github.com/gofr""><code>@​gofr</code></a>]</li>; <li>Do not use background or transparency index for new color <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5564"">#5564</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Simplified code <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5315"">#5315</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Replaced xml.etree.ElementTree <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5565"">#5565</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:3088,depend,dependabot,3088,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"> `result.measurement` is not the same as `result.expect`, the measurement is an expectation value, but not of the `e_ops` but `m_ops` which are usually automatically generated from the `c_ops` and noise is added to the computed expectation value of the state of the trajectory. The noise is usually larger than the signal and makes it hard to see, but it should converge to mesolve's solution eventually.; > ; > `smesolve`'s `expect` are just the expectation value of the state of each trajectories (averaged or not depending on options) and should average to the master equation solutions with enough trajectories. Plot in cell 8 show the match is quite good. Even with enough trajectories, the numerical error from `smesolve` will be visible.; > ; > The equation solved are those written in the notebook. Various stochastic integration method are provided, the default is the taylor expansion of order 1.5. Thank you very much for your reply, but I still don't quite understand `smesolve`'s `expect` are just the expectation value of the state of each trajectories”. In my understanding, solving for 'smesolve' gives the corresponding 'ρ(t)' and then 'expect'. But 'smesolve' provides **[ntraj [int] number of trajectors]**, which means that there are _ntraj_ 'ρ(t)' (`expect`). If I want to show all _ntraj_ ‘s 'expect', how can I do it?. Can I understand `result.measurement` as measuring(POVM) the `smesolve.result` (where ρ(t) was given by solving the stochastic master equation) .$\hat{\rho}_{f}=\frac{\hat{\Omega}_{m}\hat{\rho}\hat{\Omega}_{m}^{\dagger}}{\mathrm{Tr}[\hat{\Omega}_{m}\hat{\rho}\hat{\Omega}_{m}^{\dagger}]}$。If this is the case, I don't understand the point of doing the measurement again here, because the stochastic master equation itself has a continuous measurement. What I want to do is simply solve the stochastic master equation to get enough trajectories **ρ(t)** and solve the relevant expected value **Tr[ρ(t)A]**. On the one hand, I want to see the expectations of a",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2194#issuecomment-1635364206:517,depend,depending,517,https://qutip.org,https://github.com/qutip/qutip/issues/2194#issuecomment-1635364206,2,"['depend', 'integrat']","['depending', 'integration']"
Integrability,"> actually my real Hamiltonian is a time-dependent non-analytic function which has to be represented by an array. @IamSeti May I ask if your Hamiltonian can be written in the following form `sum a_i(t)*H_i` with a few different constant `H_i`, i.e. the time-dependence can be represented by a complex coefficient; Or is your Hamiltonian completely non-analytic and time-dependent?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-808693608:41,depend,dependent,41,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-808693608,3,['depend'],"['dependence', 'dependent']"
Integrability,"> thanks for the comment, I didn't know about `qutip.propagator`; > ; > > Lots of people have successfully used QuTiP already as part of reinforcement learning protocols - I've worked with at least a couple; > ; > cool, can i learn more about this from you?. Sorry, I don't have much experience in it myself - you'll be reading about the methods in papers/lecture note by people smarter than me. We have some tutorial notebooks about optimal control using the QuTiP optimal control package here: http://qutip.org/tutorials.html#optimal-control, which you may be able to adapt to your use case. I believe there are components in there that you can subclass so that the optimiser is RL-based rather than using standard BFGS or something else.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1323#issuecomment-660475258:160,protocol,protocols,160,https://qutip.org,https://github.com/qutip/qutip/issues/1323#issuecomment-660475258,1,['protocol'],['protocols']
Integrability,> thanks. can you also please run:; > ; > ```; > import qutip; > qutip.about(); > ```; > ; > and copy here the message?; Here is the message; ![e38](https://user-images.githubusercontent.com/71458593/97535388-96024800-19e1-11eb-991e-2c2a578da368.PNG),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1374#issuecomment-718402166:111,message,message,111,https://qutip.org,https://github.com/qutip/qutip/issues/1374#issuecomment-718402166,2,['message'],['message']
Integrability,"> you can see that when it runs conda uninstall cython, it downgrades numpy to 1.14.2. This is really strange. > This would not be a problem in a conda-forge release build, because the numpy API dependency is pinned in the feedstock, but it is a potential problem on pip source builds. I was setting up a GitHub Action test for `qutip_qip` https://github.com/qutip/qutip-qip/pull/6. `pip installation` works well there, but it could be that I don't use any run-time compiling.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1448#issuecomment-782174452:195,depend,dependency,195,https://qutip.org,https://github.com/qutip/qutip/pull/1448#issuecomment-782174452,1,['depend'],['dependency']
Integrability,">#218</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/2087de5d0aa1d472145fc1dbdfece3fe652bbac5""><code>2087de5</code></a> Don't let deprecation warning fail CI (<a href=""https://redirect.github.com/certifi/python-certifi/issues/219"">#219</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/e0b9fc5c8f52ac8c300da502e5760ce3d41429ec""><code>e0b9fc5</code></a> remove paragraphs about 1024-bit roots from README</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2022.12.07...2023.07.22"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2022.12.7&new-version=2023.7.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2205:2907,Depend,Dependabot,2907,https://qutip.org,https://github.com/qutip/qutip/pull/2205,1,['Depend'],['Dependabot']
Integrability,">143d45f</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19269"">#19269</a> from charris/backport-19228</li>; <li><a href=""https://github.com/numpy/numpy/commit/d80e4738f781a1d206bbc04a2e863299e5f2e104""><code>d80e473</code></a> BUG: Removed typing for == and != in dtypes</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.19.5&new-version=1.21.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:4937,depend,dependabot-automerge-start,4937,https://qutip.org,https://github.com/qutip/qutip/pull/1767,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,">; </li>; <li>; <p>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a>; [m-shinder, radarhere]</p>; </li>; <li>; <p>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a>; [cmbruns, radarhere]</p>; </li>; <li>; <p>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/82541b6dec8452cb612067fcebba1c5a1a2bfdc8""><code>82541b6</code></a> 9.0.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cae5ac495badd7c7ecfad8223a08f55f5d2eaacb""><code>cae5ac4</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5924"">#5924</a> from radarhere/cves</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/ed4cf7813777ad8478cac46f448bc45416a2a99e""><code>ed4cf78</code></a> CVEs TBD</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d7f60d1d5a746eb01d4cb3c7fb05b6593f46b0f5""><code>d7f60d1</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a> from radarhere/imagemath_eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8531b01d6cdf0b70f256f93092caa2a5d91afc11""><code>8531b01</code></a> Restrict builtins for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1efb1d9fabd1dfdbf7982035eca0dae7306abef1""><code>1efb1d9</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5922"">#5922</a> from radarhere/releasenotes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f6c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:13703,depend,dependabot,13703,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,">; <li>Ensure that BMP pixel data offset does not ignore palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5899"">#5899</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use latin1 encoding to decode bytes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5870"">#5870</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed palette index for zeroed color in FASTOCTREE quantize <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5869"">#5869</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Pass SAMPLEFORMAT to libtiff <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5848"">#5848</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added rounding when converting P and PA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5824"">#5824</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:3416,depend,dependabot,3416,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,">; <li>Only read a maximum of 100 bytes at a time in IMT header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6623"">#6623</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Show all frames in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6611"">#6611</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow FLI palette chunk to not be first <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6626"">#6626</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>If first GIF frame has transparency for RGB_ALWAYS loading strategy, use RGBA mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6592"">#6592</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Round box position to integer when pasting embedded color <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6517"">#6517</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed EXIF prefix when saving WebP <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6582"">#6582</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Pad IM palette to 768 bytes when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6579"">#6579</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added DDS BC6H reading <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6449"">#6449</a> [<a href=""https://github.com/ShadelessFox""><code>@​ShadelessFox</code></a>]</li>; <li>Added support for opening WhiteIsZero 16-bit integer TIFF images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6642"">#6642</a> [<a href=""https://github.com/JayWiz""><code>@​JayWiz</code></a>]</li>; <li>Raise an error",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:6804,depend,dependabot,6804,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,">; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/9c2c2307dd1d6af504e09aac0326d86ee3597a0b""><code>9c2c230</code></a> Release 1.26.18 (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3159"">#3159</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36""><code>b594c5c</code></a> Merge pull request from GHSA-g4mx-q9vg-27p4</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/944f0eb134485f41bc531be52de12ba5a37bca73""><code>944f0eb</code></a> [1.26] Use vendored six in urllib3.contrib.securetransport</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.17...1.26.18"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.17&new-version=1.26.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2246:1888,depend,dependabot-security-updates,1888,https://qutip.org,https://github.com/qutip/qutip/pull/2246,1,['depend'],['dependabot-security-updates']
Integrability,"></a> MAINT: mock slowest test. (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13885"">#13885</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/865591252a67c6907fe03228b4053305715286e6""><code>8655912</code></a> MAINT: mock slowest test.</li>; <li><a href=""https://github.com/ipython/ipython/commit/a011765b44febfb11bae122d2ed7db763621ac8f""><code>a011765</code></a> Isolate the attack tests with setUp and tearDown methods</li>; <li><a href=""https://github.com/ipython/ipython/commit/c7a9470e540392c575aac46c3ee5cf4fe5123eb1""><code>c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow potential exceptions from showtraceback()</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.31.1...8.10.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.31.1&new-version=8.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085:2205,Depend,Dependabot,2205,https://qutip.org,https://github.com/qutip/qutip/pull/2085,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"></a> fixes <a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/198"">#198</a> -- update link in license</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/9d514b4cad79357071c89d7dc4dc1b4df72bb997""><code>9d514b4</code></a> 2022.06.15</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4151e8849481f396537c34812068e89b32731e52""><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/196"">#196</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2020.12.05...2022.12.07"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2020.12.5&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035:2474,depend,dependabot-security-updates,2474,https://qutip.org,https://github.com/qutip/qutip/pull/2035,1,['depend'],['dependabot-security-updates']
Integrability,"></a>]</li>; <li>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed seeking to an L frame in a GIF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6576"">#6576</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Consider all frames when selecting mode for PNG save_all <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6610"">#6610</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Don't reassign crc on ChunkStream close <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6627"">#6627</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Raise a warning if NumPy failed to raise an error during conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6594"">#6594</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only read a maximum of 100 bytes at a time in IMT header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6623"">#6623</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Show all frames in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6611"">#6611</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow FLI palette chunk to not be first <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6626"">#6626</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>If first GIF frame has transparency for RGB_ALWAYS loading strategy, use RGBA mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6592"">#6592</a> [<a href=""https://github.com/radarhere""><code>@​ra",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:5677,depend,dependabot,5677,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"></a>]</li>; <li>Do not redeclare class each time when converting to NumPy <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5844"">#5844</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only prevent repeated polygon pixels when drawing with transparency <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5835"">#5835</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix pushes_fd method signature <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5833"">#5833</a> [<a href=""https://github.com/hoodmane""><code>@​hoodmane</code></a>]</li>; <li>Add support for pickling TrueType fonts <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5826"">#5826</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Only prefer command line tools SDK on macOS over default MacOSX SDK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5828"">#5828</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix compilation on 64-bit Termux <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5793"">#5793</a> [<a href=""https://github.com/landfillbaby""><code>@​landfillbaby</code></a>]</li>; <li>Replace 'setup.py sdist' with '-m build --sdist' <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5785"">#5785</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use declarative package configuration <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5784"">#5784</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use title for display in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5788"">#5788</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix for PyQt6 <a href=""https:/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:8935,depend,dependabot,8935,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"></p>; <h2>Changes</h2>; <ul>; <li>Restrict builtins for ImageMath.eval() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Ensure JpegImagePlugin stops at the end of a truncated file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed ImagePath.Path array handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed redundant part of condition <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5915"">#5915</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Explicitly enable strip chopping for large uncompressed TIFFs <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5517"">#5517</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Use the Windows method to get TCL functions on Cygwin <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5807"">#5807</a> [<a href=""https://github.com/DWesl""><code>@​DWesl</code></a>]</li>; <li>Changed error type to allow for incremental WebP parsing <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5404"">#5404</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</co",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:1403,depend,dependabot,1403,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"><a href=""https://github.com/certifi/python-certifi/commit/3c5fb1560b826a7f83f1f9750173ff766492c9cf""><code>3c5fb15</code></a> Bump actions/download-artifact from 4.1.6 to 4.1.7 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/286"">#286</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4a9569a3eb58db8548536fc16c5c5c7af946a5b1""><code>4a9569a</code></a> Bump actions/checkout from 4.1.2 to 4.1.4 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/287"">#287</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/1fc808626a895a916b1e4c2b63abae6c5eafdbe3""><code>1fc8086</code></a> Bump peter-evans/create-pull-request from 6.0.4 to 6.0.5 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/288"">#288</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2023.07.22...2024.07.04"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2023.7.22&new-version=2024.7.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel me",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2483:2856,Depend,Dependabot,2856,https://qutip.org,https://github.com/qutip/qutip/pull/2483,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"><code>@​radarhere</code></a>]</li>; <li>Fix for PyQt6 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5775"">#5775</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.0.0 (2022-01-02)</h2>; <ul>; <li>; <p>Restrict builtins for ImageMath.eval(). CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a>; [radarhere]</p>; </li>; <li>; <p>Ensure JpegImagePlugin stops at the end of a truncated file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a>; [radarhere]</p>; </li>; <li>; <p>Fixed ImagePath.Path array handling. CVE-2022-22815, CVE-2022-22816 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a>; [radarhere]</p>; </li>; <li>; <p>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a>; [radarhere]</p>; </li>; <li>; <p>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a>; [radarhere]</p>; </li>; <li>; <p>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a>; [radarhere]</p>; </li>; <li>; <p>Fixed palette index for zeroed color in FASTOCTREE quantize <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5869"">#5869</a>; [radarhere]</p>; </li>; <li>; <p>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a>; [radarhere]</p>; </li>; <li>; <p>Pas",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:10865,depend,dependabot,10865,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"><code>@​radarhere</code></a>]</li>; <li>Image.NONE is only used for resampling and dithers <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5908"">#5908</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Add Tidelift alignment action and badge <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5763"">#5763</a> [<a href=""https://github.com/aclark4life""><code>@​aclark4life</code></a>]</li>; <li>Replaced further direct invocations of setup.py <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5906"">#5906</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a> [<a href=""https://github.com/m-shinder""><code>@​m-shinder</code></a>]</li>; <li>Fixed typo <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5902"">#5902</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Switched from deprecated &quot;setup.py install&quot; to &quot;pip install .&quot; <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5896"">#5896</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a> [<a href=""https://github.com/cmbruns""><code>@​cmbruns</code></a>]</li>; <li>Fixed raising OSError in _safe_read when size is greater than SAFEBLOCK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5872"">#5872</a> [<a href=""https://github.com/radarhere""><code>@​radar",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:5376,depend,dependabot,5376,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"><code>@​radarhere</code></a>]</li>; <li>Limit SAMPLESPERPIXEL to avoid runtime DOS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a> [<a href=""https://github.com/wiredfool""><code>@​wiredfool</code></a>]</li>; <li>Inline fname2char to fix memory leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>GHA: replace deprecated set-output command with GITHUB_OUTPUT file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6697"">#6697</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Upload fribidi.dll to GitHub Actions <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6532"">#6532</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Windows build improvements <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6562"">#6562</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fix malloc in _imagingft.c:font_setvaraxes",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:1607,depend,dependabot,1607,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,">c827f3b</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a> from radarhere/deallocate</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/39a3b1d83edcf826c3864e26bedff5b4e4dd331b""><code>39a3b1d</code></a> Fixed deallocating mask images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8c1dc819fd91471825da01976ac0e0bc8789590f""><code>8c1dc81</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.4.0...10.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.4.0&new-version=10.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:13326,Depend,Dependabot,13326,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['Depend'],['Dependabot']
Integrability,">d635664</code></a> Updated the codecov action to the latest version</li>; <li><a href=""https://github.com/pypa/wheel/commit/fcb94cd51f7dfd40d88dff37415750d9e3638d3b""><code>fcb94cd</code></a> Updated <strong>version</strong> to match the release</li>; <li>Additional commits viewable in <a href=""https://github.com/pypa/wheel/compare/0.37.0...0.38.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wheel&package-manager=pip&previous-version=0.37.0&new-version=0.38.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:5481,Depend,Dependabot,5481,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['Depend'],['Dependabot']
Integrability,"@AGaliciaMartinez @gaurav-iiser Since you are looking at the Bloch sphere code too, I'd appreciate some more eyes / trying out of these changes if you have time. We don't have great tests for these plotting functions and the behaviour is rather environment dependent (Python console vs IPython console vs Jupyter notebook vs Spyder).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1619#issuecomment-950309855:257,depend,dependent,257,https://qutip.org,https://github.com/qutip/qutip/pull/1619#issuecomment-950309855,1,['depend'],['dependent']
Integrability,"@AGaliciaMartinez,; I already made an integrator for jax in qutip/qutip-jax#14 and made and an example for auto-differentiation in `sesolve` using it.; There is still some polishing to do, but half of the deliverable are there. We should ask the student to use it to makes new tools with it and improve the interface.; Using it for quantum control is impractical since `jax.grad` only support real scalar output and our inputs are also complex.; We need to find an user friendly a way to tell which part of the result are subject to the derivation and how to expand to jacobians, etc.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2064#issuecomment-1408690839:38,integrat,integrator,38,https://qutip.org,https://github.com/qutip/qutip/pull/2064#issuecomment-1408690839,2,"['integrat', 'interface']","['integrator', 'interface']"
Integrability,"@Akhikar I know the error message is the same, but could you open a new issue for this and follow the issue template? This bug was addressed awhile ago, and if you open a new issue we'll know what versions of all the installed software you're using. Usually this issue arises when something went wrong while installing QuTiP, or because you have a script whose name conflicts with an existing package name.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-1220411689:26,message,message,26,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-1220411689,1,['message'],['message']
Integrability,"@ArchieB151 The output is very strange. No new version of QuTiP was released in the last month. The ODE integration error you received would only appear if the problem being solved changed somehow. The initial state in your plot doesn't match the psi0 defined in the code (i.e. both expectation values are zero). Could you try do everything from scratch again? Start with a completely fresh download of the notebook, restart the Jupyter kernel entirely run everything from the top?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229018060:104,integrat,integration,104,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229018060,1,['integrat'],['integration']
Integrability,"@BoxiLi . Yes, how to include gates in qutip is not clear to me. Many of them seems specialized so I don't think we should keep them all. Keeping only some of them could be fine but I am not well placed to choose a subset of commonly used gates and the `target` made them quite specialized. It also means that some gates will be defined in both qutip and qutip-qip. I also want all function that create `Qobj` in qutip the follow an common interface (they should all support `dtype`) and if we want these functions to also follow the qip signature, it could get somewhat complex. I think removing them and having the private functions for tests will make it easier for us on the long run. I see the use of `expand_operator` now that you explain it. I would prefer to have it in dimension.py and having users call it manually than being included in the `Qobj` creation function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1890#issuecomment-1121155262:440,interface,interface,440,https://qutip.org,https://github.com/qutip/qutip/pull/1890#issuecomment-1121155262,1,['interface'],['interface']
Integrability,"@EmilianoG-byte; Not too sure... When using spline interpolation for time dependent systems, I would recommend to create them before using the solver as to not link the spline times with the solver output times. Which is probably what you are doing with v4 and what you should keep doing for v5. In the next version, the `QobjEvo` is somewhat more user facing and we will probably just document better that this is the way to do it. As for when we plan to release v5, we had to push back the planned release time a few time already so it's hard to say...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1578707335:74,depend,dependent,74,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1578707335,1,['depend'],['dependent']
Integrability,"@EricGig thank you for the extensive investigation. What do you think of; adding (even with a temporarily note) this information in the QuTiP Docs? I; feel like the fix may take long and having something written up under some; official section on the website may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:609,depend,depend,609,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264,1,['depend'],['depend']
Integrability,"@Ericgig ,@jakelishman thanks for reviews and the comments. I agree with Jake, the default `'jet'` colormap isn't very nice and I believe choosing the right colormap depends on the problem and values of the input matrix `M`. Personaly I love to have 0s in white and the others colored and that's because non-zeros elements maybe important and should catch the attention.; I thinks the code (in docs) producing the input matrix should be changed and that's because:; 1- it has lots of off-diagonal elements which raises the renown problem of overlaping bars. ; 2- maximum value and minum value of input matrix are very different and nearly non of the colormaps makes the results nice. Showing a thermal state's density matrix maybe a good option:; ```python; from qutip import thermal_dm, matrix_histogram. rho_th = thermal_dm(6,2); options = {'cmap':'hot_r',; 'stick': True,; 'cbar_pad':.0,; 'zticks':[0, 0.365, 0.5],; 'azim':65,; 'elev':35,; 'shade': False}; matrix_histogram(rho_th, limits=[0,0.5],options=options); ```; ![anim1](https://user-images.githubusercontent.com/24582081/123172512-7cdb6980-d492-11eb-9133-e3492e73d948.gif). **the old one:**. ![anim2](https://user-images.githubusercontent.com/24582081/123172639-a5636380-d492-11eb-98e0-75da9ad6f96e.gif). I agree that because the function returns `fig` and `ax` the user can modify nearly everything, but most of them may not be easy to implement for everyone. If we want the colors to be less flashy we have to set `shade` to `True` and there are 2 problems with turning on the shading:; 1- bars with nearly equal values have different colors (like 0s); 2- in some azimuthal viewing angle the `lightsource` produces shadows. ![mat_hist_new_azim=30](https://user-images.githubusercontent.com/24582081/123178802-37706980-d49d-11eb-97ca-afb3539c69eb.jpg); **turing around by 180°:**; ![mat_hist_new_azim=210](https://user-images.githubusercontent.com/24582081/123178811-3d664a80-d49d-11eb-991d-17b3179a784e.jpg). the second one can be solved",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1573#issuecomment-867217699:166,depend,depends,166,https://qutip.org,https://github.com/qutip/qutip/pull/1573#issuecomment-867217699,1,['depend'],['depends']
Integrability,"@Ericgig @hodgestar, Eric and Simon: unless there's anything else that springs to mind, I'll pencil in the 4.6 release for later this week/weekend after this is merged to `master`?. Simon in particular: there's a couple of accessible places in `correlation` that make deprecated `ode2es` calls. That particular functionality of the solvers isn't being removed in 5.0 (though maybe it should - `mesolve` is faster and better in almost every way), so they aren't themselves deprecated. Right now they don't trigger `DeprecationWarning` popups if a user calls them (since the stacklevel is 2). Despite that, should I _also_ wrap them in a warning filter to catch it? I don't really know best practices here. I kept postponing doing the 4.6 release because I'd keep thinking of little bits and bobs that I thought should go in, but at this point Boxi's (@BoxiLi) new pulse scheduler stuff is in and ready, the packaging and distribution methods are updated, and we'll have issued deprecation warnings for the things that we know are being removed. Anything beyond this can start to form the basis of a 4.7 release in a few months' time, with the Floquet changes (they might be waiting on me at the moment) and possibly some new stuff out of GSoC. Possibly that'll also include some deprecation warnings and other bits and bobs to do with packages getting moved out of qutip/qutip, and the changes to how the data-layer is going to work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1480#issuecomment-814937234:621,wrap,wrap,621,https://qutip.org,https://github.com/qutip/qutip/pull/1480#issuecomment-814937234,1,['wrap'],['wrap']
Integrability,"@Ericgig After reading the following comment in `setup.cfg`; ```; ; This uses ConfigParser's string interpolation to include all the above; ; dependencies into one single target, convenient for testing full builds.; ```; I changed my mind a bit about the role of `full`. It seems that the intention of full is to install everything for testing and development, so it makes sense for the ipython dependency to be included there. After I changed my mind, I just cherry-picked Asier's merge commit for #1918 to master.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1970#issuecomment-1207180169:142,depend,dependencies,142,https://qutip.org,https://github.com/qutip/qutip/pull/1970#issuecomment-1207180169,2,['depend'],"['dependencies', 'dependency']"
Integrability,"@Ericgig Do you have examples of where integrators are used?. Some of the interface choices seem inconsistent -- e.g. `system` is a `QobjEvo` instance (so it has dims) but the states are `data` (which don't have dims, type, etc). Perhaps this makes sense given how things are used, but it would be good to be consistent (especially given that accessing `.data` is very fast and would allow the integrator access to the dims and various high-level operations). Perhaps one solution is to have two levels of interface -- i.e. a low-level one (`get_state`, `set_state`, `integrate`) and a high-level one (`run`) where the signature of `run` changes to `run(initial_qobj, tlist) -> final_qobj` and `run` calls `get_state`, `set_state` and `integrate`?. I will also do a more line by line review shortly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643#issuecomment-925113187:39,integrat,integrators,39,https://qutip.org,https://github.com/qutip/qutip/pull/1643#issuecomment-925113187,6,"['integrat', 'interface']","['integrate', 'integrator', 'integrators', 'interface']"
Integrability,"@Ericgig I have completed all the testing now. Everything looks good.; This truly looks like an awesome piece of work. The `QobjEvo` looks like it has great potential in many applications.; On behalf of all qutip users, thank you very much for taking on this mammoth task and doing such an excellent job. It is probably best if you squash and merge this yourself, as you can then edit the merged commit message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/815#issuecomment-459375419:403,message,message,403,https://qutip.org,https://github.com/qutip/qutip/pull/815#issuecomment-459375419,1,['message'],['message']
Integrability,@Ericgig I think these are mishaps. I found them when experimenting with the time-dependence options.; Maybe merge these into #1082 ?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1083#issuecomment-529844660:82,depend,dependence,82,https://qutip.org,https://github.com/qutip/qutip/pull/1083#issuecomment-529844660,1,['depend'],['dependence']
Integrability,"@Ericgig `.step(...)` looks like a great solution. We should definine more precisely what one is allowed to modify in between calls to `.step` and document that. Aside regarding things we have already implemented: I know -- my point is that there are many such things and we have only implemented one kind of each (for example, what kind of progress bar is appropriate is highly dependent on the environment the code is running in -- if the code is running on a server without a terminal it might be some kind of logging, inside a hypothetical QuTiP UI GUI application it might be a progress bar provided by the GUI toolkit being used, etc).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859578358:379,depend,dependent,379,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859578358,1,['depend'],['dependent']
Integrability,"@Ericgig b7cd10a creates a new `qutip.solve` package, and I moved all the solvers and most of their utilities into there. I put Cython utility modules into the same directory, and just prefixed their names with underscores to mark them as internal, rather than making another new `cy` directory. I also moved the tests of the solvers into their own `tests/solve` directory, so we can consider having `pytest` run the tests in order at some point as well. All the names are still imported properly into the `qutip` namespace, so you can still do `qutip.mesolve` and so on. This PR is already way too long. I could put the solver package commit into a different PR if it's helpful, but to be honest, I'm not sure entirely what benefit is derived - my commit messages are usually quite descriptive (please don't squash them!), so it's not like the history will be missing in `git log`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1332#issuecomment-671526504:756,message,messages,756,https://qutip.org,https://github.com/qutip/qutip/pull/1332#issuecomment-671526504,1,['message'],['messages']
Integrability,"@Ericgig good idea about the tests, I'll implement them in this way. now there seems to be some problem with continuous integration, it fails on. ```; ERROR: Failure: ImportError (libgfortran.so.1: cannot open shared object file: No such file or directory); ```. I attempted to fix it by installing `libgfortran` using `conda`, however it didn't fix the issue. https://github.com/travis-ci/travis-ci/issues/4816#issuecomment-148789525; https://github.com/menpo/landmarkerio-server/issues/23#issuecomment-278361601. I don't want to mess up too much with continous integration as it takes long time to rebuild it, any suggestions on that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/917#issuecomment-427726780:120,integrat,integration,120,https://qutip.org,https://github.com/qutip/qutip/pull/917#issuecomment-427726780,2,['integrat'],['integration']
Integrability,"@Ericgig sure I will be happy to fix the linting errors, I seem to have missed your previous message about codeclimate, sorry about that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1655#issuecomment-926628157:93,message,message,93,https://qutip.org,https://github.com/qutip/qutip/pull/1655#issuecomment-926628157,1,['message'],['message']
Integrability,"@Ericgig we verified the code also for spins.; The code is consistent with previous versions and it seems to run slightly faster when `e_ops` is given.; I checked the results with `mcsolve` from Qutip 4.3.1, also I checked the density matrix with respect to `mesolve` and `steadystate `. However, when the `e_ops` are not given, and the option `average_states=True`, the `mcsolve` in your version requires much more time than in the 4.3.1 case.; Please, check that this is not a machine dependent bug. ; I wrote a code which does that for a simple three spin system:; https://gist.github.com/fminga/c3e75a75dc528cb509c7d82d3eb9823b. There is, moreover, a minor inconsistency: when the option `average_states=False` and `store_final_state=True`, one would expect to obtain a set of wavefunctions, instead the code returns the density matrix at the last time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/991#issuecomment-497925627:487,depend,dependent,487,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-497925627,1,['depend'],['dependent']
Integrability,"@Ericgig: I see you've been on a merging spree!. If you're about to merge, please don't squash this - I've taken care to have good commit messages and modular commits, and I'll have to rebase all the other PRs if this one gets squashed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-633698798:138,message,messages,138,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-633698798,1,['message'],['messages']
Integrability,"@Ericgig: yeah, it's not a perfect naming choice. Can you think of a better one? It ended up like that because I started off just calling in `_qfunc_alpha_matrix`, then realised about halfway through that I was actually constructing the conjugate of the matrix formed by stacking coherent states (since that's how it's used), but the name isn't really ideal. @quantshah: I'm just thinking now you might want to have a look at this - you had some thoughts about user interfaces for class-based creation schemes last year, with regards to the displacement operator, which I'll build up into a proper PR at some point as well. Don't worry if you've no time, though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583#issuecomment-872207526:466,interface,interfaces,466,https://qutip.org,https://github.com/qutip/qutip/pull/1583#issuecomment-872207526,1,['interface'],['interfaces']
Integrability,"@HarshBabla99 I'm guessing based on the error message that you are running QuTiP on Windows. Do you have a C compiler installed? The compiler is needed to compile the strings. The Windows installation instructions are outlined at https://qutip.org/docs/latest/installation.html#installation-on-windows. I would recommend installing everything using conda if you can (see higher up on the install documentation page). If the compiler is installed, perhaps it is an issue with the compiler not being present in the `PATH`. Either way, this appears to be not an issue with QuTiP itself, but let's keep this issue open for a bit so that we can help you resolve things as best we can. I would also recommend upgrading your Python, QuTiP and numpy to more recent versions if possible. If you use conda, you should get the latest versions unless you explicitly request otherwise.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914#issuecomment-1143281384:46,message,message,46,https://qutip.org,https://github.com/qutip/qutip/issues/1914#issuecomment-1143281384,1,['message'],['message']
Integrability,"@Krastanov I don't quite understand. Are you use the **nested-list method**? If so, can you tell me how you expanding and rewriting/reordering by hand of the c_ops so that you can list them one by one in the nested-list method? If you can rewriting/reordering them, why cannot you do the same thing for `mcsolve`?. @jrjohansson In the first reply you mentioned that. > Yes, it is not the same thing. You need to rewrite it manually so that each collapse operator contribute on standard lindblad form. . May I ask how to rewrite it manually so that each collapse operator contribute on standard lindblad form so that I can implement complicated time-dependent collapse operator in the **nested-list method**?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/223#issuecomment-223872353:649,depend,dependent,649,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223872353,1,['depend'],['dependent']
Integrability,"@Leo-am @Ericgig I originally marked this PR for inclusion in 4.7, but I'd like to suggest we skip this PR and clean things up for QuTiP 5. My reasoning is as follows:. - To be included in 4.7.X this PR would have to be included in 4.7.0 now and there is still quite a bit of work to do (writing tests, cleaning up _check_dims, handling some edges cases better) and I'd rather not rush those changes.; - If we make this change now, we will have to break user code *again* for 5.0 because the interface being introduced here is not the one proposed for 5.0 in #1838. Let's rather only break user code once.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1846#issuecomment-1092820030:492,interface,interface,492,https://qutip.org,https://github.com/qutip/qutip/pull/1846#issuecomment-1092820030,1,['interface'],['interface']
Integrability,"@Phyks Thanks for the suggestion. I made the qutip.cite() function to print and generate a bibtex file. Perhaps this is sufficient. With a message during install mentioning that you can invoke""; ```; from qutip.about import cite; cite(""path_to_generate_bibtex""); ```; to get the bibtex file and printing the output on the screen. @ajgpitch Should I add this to the setup.py file. Can we move this PR forward?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/752#issuecomment-356861565:139,message,message,139,https://qutip.org,https://github.com/qutip/qutip/pull/752#issuecomment-356861565,1,['message'],['message']
Integrability,"@Siddhant9868 Hi, thanks for looking into this. We want to essentially parse the whole project and generate the names of all the functions and classes. This could also be done directly by running a parser on the qutip folder using ideas similar to . https://stackoverflow.com/questions/15256509/parsing-class-and-function-dependencies-from-a-project. In this case, `sphinx-apidoc -o <output dir> <code dir>` does this for us and generates the RST which is used to build the docs. But maybe you can do it directly without having to parse the RST files. Once you find a way to parse all the parts of QuTiP then try to implement one of the two visualizations that @nathanshammah shared. I think in both, there is a case where you don't even need a json file and can just do away with a .csv. After that, we can think of where to put this in the docs as I am currently in the process of redoing the whole documentation building. . As a first step, you don't even need to use the QuTiP functions and could just try to get the D3 js examples work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1525#issuecomment-469793487:322,depend,dependencies-from-a-project,322,https://qutip.org,https://github.com/qutip/qutip/issues/1525#issuecomment-469793487,1,['depend'],['dependencies-from-a-project']
Integrability,"@ajgpitch yes, the solver does raise an error... but not always. I was able to get it to integrate a few times but it was very inconsistent. The other error it sometimes raises is ""too much accuracy was requested for the precision of the machine"". When I realized the issue, I was very surprised it even got that far and I still don't know how it could ever run the calculation with a bad `rho0`. @nonhermitian yes, I see the point in the code where `mesolve` digs down into various types of `H` input. I'll work on something for the easy Qobj cases first, and think about how to handle the function case. Should be able to test the size of what the function returns.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/479#issuecomment-221595850:89,integrat,integrate,89,https://qutip.org,https://github.com/qutip/qutip/issues/479#issuecomment-221595850,1,['integrat'],['integrate']
Integrability,"@ajgpitch, I think that instance method picking is still somewhat of an issue in python 3, (which is what I use primarily) although I could be wrong. Either way, since the current QuTiP version supports 2.7, we would need to make this backward compatible to do multiprocessing correctly, so I'm glad you agree that option 3 is best. As to dropping python2 support, I think that this would be a good idea for v5.0, since [python is dropping support for 2.7 in two years](https://legacy.python.org/dev/peps/pep-0373/), which could be close to the time that QuTiP v5 is released (depending on how long the changes take). @sahmed95, thanks for making those final changes - sorry, I had forgotten to make the docstring capitalization changes. I'm happy with the state of the module now, so go ahead and merge it. There haven't been any functional changes made to how anything works, so none of my other pull requests ([[1]](https://github.com/qutip/qutip-notebooks/pull/58), [[2]](https://github.com/qutip/qutip-doc/pull/59), [[3]](https://github.com/qutip/qutip.github.io/pull/51)) should need to be updated. In the qutip-docs PR, for the moment I've only added auto-doc documentation, but I'll add more extensive documentation before version 4.3 is released (when is the expected time frame for this?) so that people will have more to refer to when this new feature is announced. . Thanks to everyone involved in this review process for their constructive feedback!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-386413620:577,depend,depending,577,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-386413620,1,['depend'],['depending']
Integrability,"@araza6 thank you. Tests in continuous integration are failing. There seem to be too many PEP8 changes (from `black`?) in this PR, unrelated to the changed files. I am not so sure about the constraints put on the use of the `fidelity` function. I had left it as this to keep as much freedom as possible and not spoon feed the user. It is basically a shortcut for Tr(x^2), not much else.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-613052212:39,integrat,integration,39,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-613052212,1,['integrat'],['integration']
Integrability,"@cgranade When we initially talked about this, we also spoke about storing Kraus superoperators with it, but it's not completely clear to me whether this route covers that case. ""No"" is fine (we don't have to make this work for everything) but if the answer is ""Yes"" or ""Maybe"", what would that look like?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1687#issuecomment-949031114:154,rout,route,154,https://qutip.org,https://github.com/qutip/qutip/pull/1687#issuecomment-949031114,1,['rout'],['route']
Integrability,"@goerz I think one of Mølmer's papers (maybe the one I have pointed out) addressed the equivalence of the two methods. Sorry, I don't have a definite paper to point out at this moment. I was actually organizing the Julia community to work on this direction (see [JuliaQuantum](http://juliaquantum.github.io)) from scratch, and hence didn't follow up the efforts in the measurement simulation within QuTiP. . When I was writing my paper on continuous measurement ([PRA, 93.023817](http://journals.aps.org/pra/abstract/10.1103/PhysRevA.93.023817)), I came up the argument that the former method may be more appropriate for measurement models. This is because measurements have to happen in evenly spaced time steps determined by the detector's integrating time, so it is intuitive to use a random number to judge if on each measurement step the quantum jump will happen. There may be a way to use the second method to implement the same measurement simulation model, but I didn't think too much on it. In reality, I developed another more efficient method without actually evolving the density operator in my paper to simulate continuous measurement using a set of stochastic equations for squeezing thousands of atoms' state which has not been included in QuTiP yet. Sorry I don't have more useful reference that explains this point in more details at this moment. Good luck!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/111#issuecomment-220744432:742,integrat,integrating,742,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-220744432,1,['integrat'],['integrating']
Integrability,"@haoyudoingthings It looks from your error messages that they are caused not by the import cells, but by later cells, and are the result of having modified the notebook. For example, `H = qt.qobj_list_evaluate(h_t, tau, args)` is a modified line from cell 13 of the original notebook. I would suggest starting again from the original notebook and continuing from there. Some of the notebooks are out of date. We're setting up automated tests to correct that as part of this year's Google Summer of Code, but that has only just started so it might be a few months before we have everything set up. I'm closing this for now, but please feel free to update the issue if you encounter more problems.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1930#issuecomment-1153919964:43,message,messages,43,https://qutip.org,https://github.com/qutip/qutip/issues/1930#issuecomment-1153919964,1,['message'],['messages']
Integrability,@hodgestar . I removed the `_rhs` by changing it so the rhs is built when making the integrator instead of in `__init__`. I also simplified the way options are updated so brmesolve no longer need to overwrite `_apply_options`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2173#issuecomment-1681331940:85,integrat,integrator,85,https://qutip.org,https://github.com/qutip/qutip/pull/2173#issuecomment-1681331940,1,['integrat'],['integrator']
Integrability,"@hodgestar ; I added default values to options and a default `mcstep`. I added a doc-string entry for `integrator_options`, but please check it. About `mcstep` optimization for scipy's `ode`, I tested both the methods and there can be a factor 2 in timing between both, but it can be in both ways depending on the conditions. So I used `mcsolve`'s method for `zvode` and the new method for `lsoda`. This way, the default will run like `v4`, but you have an alternative when it's not ideal.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643#issuecomment-933862294:297,depend,depending,297,https://qutip.org,https://github.com/qutip/qutip/pull/1643#issuecomment-933862294,1,['depend'],['depending']
Integrability,"@hodgestar I've added some tests for the spin_q_function. At the moment it tests a random density matrix for three different spin values. I'm not very familiar with qutip's style for writing tests, I would normally write a test function that would also take arguments but that doesn't seem to be the norm here. We could also do something similar to the `TestHusimiQ` class of tests. I've had a look at the `spin_wigner` function as well, and I believe that had the same issue of density matrix indexing.; I've re-implemented it (and the `_rho_kq` function) and I've added details to the docstrings including relevant references.; Should I create a separate PR for this or should I expand the scope of this PR?. NB: At the moment I can't think of an easy way to test the spin Wigner function because there is no simpler/alternative definition that I am aware of to verify the implementation against.; There are simple tests such as if the imaginary part is less than some threshold (currently true), does it integrate to 1 (currently not true, not sure why).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1632#issuecomment-893964617:1007,integrat,integrate,1007,https://qutip.org,https://github.com/qutip/qutip/pull/1632#issuecomment-893964617,1,['integrat'],['integrate']
Integrability,"@hodgestar, I fixed the codeclimat issues and improved the error message. If your still fine with it, let's merge.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1778#issuecomment-1017814632:65,message,message,65,https://qutip.org,https://github.com/qutip/qutip/pull/1778#issuecomment-1017814632,1,['message'],['message']
Integrability,"@hodgestar: those comments lines you've highlighted were a careless mistake - they shouldn't have been removed, but it's a function of how I implemented the automated removal. I didn't notice them when I checked it through. I've restored them. The `cython: language_level=3` lines in particular are especially important to maintain, so that was very careless of me. That said, utf-8 is the default encoding for Python 3, so those lines aren't actually necessary at all any more. That wasn't the case with Python 2 (which assumed ASCII), but it's no longer an issue. Regardless, I've restored them because this PR wasn't meant to remove that sort of thing. Similarly, since I had to go through everything anyway, I've excluded the whitespace-only changes within files (though I left the normalisation of whitespace specifically at the ends of files). Apologies, I've force-pushed it back rather than applying it as a new commit, so it probably won't render these changes as nicely in the GitHub interface - it was rather easier for me to modify the commit than to make a ""partial reversion"" commit (and it's better for the logs).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1579#issuecomment-867019111:994,interface,interface,994,https://qutip.org,https://github.com/qutip/qutip/pull/1579#issuecomment-867019111,1,['interface'],['interface']
Integrability,@hodgestar; I changed the interface.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2210#issuecomment-1843594542:26,interface,interface,26,https://qutip.org,https://github.com/qutip/qutip/pull/2210#issuecomment-1843594542,1,['interface'],['interface']
Integrability,@jakelishman I would vote for not wrapping them right now. We should stop using `ode2es` from the correlation functions (or continue to use it but no longer expose it to users). The DeprecationWarnings will hopefully help remind us to do that.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1480#issuecomment-815311257:34,wrap,wrapping,34,https://qutip.org,https://github.com/qutip/qutip/pull/1480#issuecomment-815311257,1,['wrap'],['wrapping']
Integrability,"@jakelishman, about the two issues you raised:. 1. Import time related to `import qutip`; I agree with you that in order to make it frictionless for downstream libraries to implement qutip's interface you'd want not to increase their loading times. That would easily be achieved by defining the `__qutip_qobj__` as the entry point of this API. A drawback of this implementation is that it requires the conversion method to be defined on the object itself.; The dispatch-like solution, as was proposed by @hodgestar, is easier to play with, can be defined in a separate file, can be added to a separate package like `netket_qutip_interop` or even using setuptools entry points, though that would add complexity. Again, I'm personally not biased. I would go with option 1 because it's simpler, but I do like the organisational beauty of option 2 (that is used throughout the jax ecosystem). 2. About implicit conversion; - Assume we can distinguish two level of APIs exposed by qutip, similar in spirit to the distinction there is between BLAS and LAPACK. ; - There are low level (BLAS-like) operations on Qobjs such as addition, kron, sum, ecc that are performed repeatedly, can be efficiently implemented only among objects whose data structure is well know. Everything is built on top of those, so they need to be fast with a low overhead. ; - There are higher-level (LAPACK-like) operations on Qobjs, such as `.eigenvalues()` or `eigenstates()`, or `sesolve/mesolve` which are built by combining several low level operations. Their runtime is much higher, and they perform a fair bit of setup/input handling, which comes at the price of some overhead, but which is negligible compared to the runtime cost for most meaningfully large systems. I'd then like to state that; - *I have never suggested to insert a mechanism to insert implicit conversion in the low-level operations.* ; - In this RFC in no way have I proposed to implement implicit conversion anywhere else then were is already done in qu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-913661687:191,interface,interface,191,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-913661687,1,['interface'],['interface']
Integrability,"@maij The code is looking good to me. I've requested some changes and after that I'd like to do a final review, but I think we're in good shape. My thoughts on the remaining questions:. > Decide if the spin_wigner function should return only real values be default (as is currently done for the spin_q_function). I'm +1 on returning real values since the Wigner function is real valued and this is more consistent (unless you're aware of any strange cases where it might somehow not be?). > Decide whether to integrate the W function normalization in _rho_kq rather than at the top level. We divide all terms by (2*j + 1) only to end up multiplying it back out at the end which is a waste of time (_rho_kq is called d**2 times, d=2*j+1) . The benefit of leaving it as-is is that it reads like most definitions in literature. I'm +1 on sticking to the definitions in literature unless there is a measured speed penalty. `2*j + 1` likely can't be that big and the small number of arithmetic operations required is probably dwarfed by the matrix multiplications happening. . > Decide if normalization factor for Wigner and spin Q function should be included (Davis et al. suggest the normalization factor is only introduced during integration: Eq 14 https://arxiv.org/abs/2008.10167). Here I would try stick as closely as possible to the previous behaviour of these functions (i.e. cases which worked before should hopefully return the same answer now) and then document clearly what the normalization factor is and how it should be added or removed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1632#issuecomment-904598186:509,integrat,integrate,509,https://qutip.org,https://github.com/qutip/qutip/pull/1632#issuecomment-904598186,2,['integrat'],"['integrate', 'integration']"
Integrability,"@matteoacrossi Thanks! I don't know that I have much particular advice, other than ""let's try debug the failing tests one at a time"". Maybe pick one of the `test_driven_cavity` ones, because I'm not quite sure how `ValueError: Invalid preconditioning method` can get raised when it succeeds on other platforms. Maybe it is a bug that isn't completely related to the M1?. Are you familiar with pdb? Running just the one test using pytest and `pytest --pdb` will allow to explore the stack trace and see the values of variables in each stack frame, and hopefully figure out what went wrong. Another first step is just to fix the line `raise ValueError(""Invalid preconditioning method."")` to be `raise ValueError(f""Invalid preconditioning method: {ss_args['method']!r}."")` so that the error messages gives more of a hint of what the invalid method name was.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755#issuecomment-1007285325:788,message,messages,788,https://qutip.org,https://github.com/qutip/qutip/issues/1755#issuecomment-1007285325,1,['message'],['messages']
Integrability,"@nathanshammah ; I expect it to be easy to use as an integrator:; ` _evolve_krylov_tlist` is essentially the `run`, `time_evolution` is `integrate`.; The interface just need to be adapted.; It would work well with `sesolve` and `mcsolve`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1644#issuecomment-908484939:53,integrat,integrator,53,https://qutip.org,https://github.com/qutip/qutip/pull/1644#issuecomment-908484939,3,"['integrat', 'interface']","['integrate', 'integrator', 'interface']"
Integrability,"@nathanshammah ; That was a lot more than 1 commit but it's now ready.; - I added a test suite without cython. It only skip brmesolve time dependent tests. ; - Error is raised when trying to use brmesolve without cython, but not at qutip import.; - Every other features works without cython. I tested without cython with both conda and pip. It work with both when done properly but conda is not as stable: uninstalling cython can change numpy, scipy, etc.'s versions which break qutip. So I am not sure if it will work properly we downloaded as binaries from conda. But this error should already be present for conda installation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336:139,depend,dependent,139,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336,1,['depend'],['dependent']
Integrability,"@nathanshammah I changed the precision limit in ""assert_(np.max(abs(val_kns-Ana_val_kns)) < 1.0E-13)"" since I noticed it depends on the machine I run it on. I pushed a new commit.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1066#issuecomment-575498008:121,depend,depends,121,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575498008,1,['depend'],['depends']
Integrability,"@nathanshammah This seems like an important issue, unsure why this is dormant. Let me know your opinion, please. Danny (former student of mine) could turn this into a pull request, if you tell us that that's the appropriate route.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1905#issuecomment-1426945641:224,rout,route,224,https://qutip.org,https://github.com/qutip/qutip/issues/1905#issuecomment-1426945641,1,['rout'],['route']
Integrability,"@nonhermitian mentioned something about being able to move the pyximport bit to somewhere in the dynamic C building workflow. Now that would be a real bonus. Say we have some (probably Windows) users who have not managed to configure a working C compiler, but have installed from a conda package or some other wheel like thing, then they would be able to use everything except the string format time-dependent stuff. ; This is also discussed in #448",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/580#issuecomment-269725490:400,depend,dependent,400,https://qutip.org,https://github.com/qutip/qutip/issues/580#issuecomment-269725490,1,['depend'],['dependent']
Integrability,@nwlambert ; I think it depends on whether `sqrtm()` or `eigenenergies()` performs better (or less issues in general case) in `Qobj`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2371#issuecomment-2042763610:24,depend,depends,24,https://qutip.org,https://github.com/qutip/qutip/pull/2371#issuecomment-2042763610,1,['depend'],['depends']
Integrability,"@nwlambert I have already made the pull request. The docstring was already updated specifing the needs of the colors you give to the add_points function depending of the style you proposed. I would like to ask two more questions:. -Is it necessary to create a changelog file if the change is small? I was reviewing the documentation and it tells you to create one but reviewing the ones that are created, they are few and all seem to be related to major code updates, so I assumed that one should only be created when the change in the project is significant. Am I right or should I add one?. -The other point I'd like to ask is if there are any open issues related to a plotting problem with the 'l' style. I believe I have found a bug related to plotting with this style due to the way the script orders the points before plotting, but I have not found any issues reporting it. . Plotting in V4:; ![Figure 2024-01-25 211444](https://github.com/qutip/qutip/assets/78165605/329291ec-195c-443f-8bf4-727fde7cdd24). Plottin in V5:; ![Figure_1](https://github.com/qutip/qutip/assets/78165605/ece1143f-d367-40db-b808-f573332b8d0a). I think I know how to solve it, but I'm not sure if someone has already reported it, if I should open a new issue or just solve it as part of this issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1974#issuecomment-1910952439:153,depend,depending,153,https://qutip.org,https://github.com/qutip/qutip/issues/1974#issuecomment-1910952439,1,['depend'],['depending']
Integrability,"@nwlambert Would you mind giving this a try with some bigger realistic HEOM examples you have lying around? Eric's recent improvements to CSR `mul` and `imul` also help HEOM RHS construction since there is a lot of `c * op` happening. The 3.5x improvement from this branch is on top of that. @Ericgig Would you mind giving your thoughts on the Cython interface both from a ""is this good from a technical point of view"" and from a ""do we want this point of view"". I guess we could also name it `_from_csr_blocks` if we don't want to expose it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2128#issuecomment-1476648533:351,interface,interface,351,https://qutip.org,https://github.com/qutip/qutip/pull/2128#issuecomment-1476648533,1,['interface'],['interface']
Integrability,@nwlambert didn't we fix this by natively allowing time dependent Hamiltonians in our solver? Maybe we should mention the repo here since it's relevant.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1377#issuecomment-721813998:56,depend,dependent,56,https://qutip.org,https://github.com/qutip/qutip/issues/1377#issuecomment-721813998,1,['depend'],['dependent']
Integrability,"@pmenczel I've worked on this quite a bit, mostly focusing on putting initial tests in place, supporting the full set of coefficient functions supported by the other solvers for the rates, shifting the martingale calculations into the integrator and moving the rate shift calculations to Cython to avoid the overhead of Python function calls and loops. @Ericgig I ended up doing some odd things because QobjEvo doesn't seem like natural fit for these rate functions and coefficients are a bit awkward to use directly inside solvers. @pmenczel & @Ericgig Could you take a look at everything again and let me know what you think?. Some of the bigger todo items I have in mind at the moment:. - How do we tell that the negative rate case is really working correctly? I added a test but it doesn't match mesolve well and I'm unhappy with that.; - Can we strengthen any of the existing tests with more assertions?; - Now that the discrete and continuous martingale calculations are mostly handled when collapses happen, we could expose them on the result along with `col_which` and `col_time`. Should we?; - Are the new martingale and rate shift calculations correct?; - The way the shared coefficients are used inside `RateSet` and exposed to `MCSolve` required a lot of careful thinking, did I get the design of that right?; - How do we test whether this works when using `parallel_map`? Being able to run in parallel is a key strength of the Monte Carlo method, so it would be good to have tests that show that that works.; - Can we drop the number of trajectories in the docs to make the doc build faster?; - Using the SciPy integrator is a bit awkward. Is there anything we can replace it with? If not, should we expose more of its options? I exposed the `limit` option because I kept having the integration fail during testing.; - Add tests for the `nm_mcsolve` Cython classes. There is also a bunch of general cleaning up still to do, but lets try get the big picture happy first.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2070#issuecomment-1493417354:235,integrat,integrator,235,https://qutip.org,https://github.com/qutip/qutip/pull/2070#issuecomment-1493417354,3,['integrat'],"['integration', 'integrator']"
Integrability,"@quantshah @BoxiLi @hodgestar I have wrapped up the two measurement functions in the `measure` and `measurement_statistics` function which calls the required functions based on whether `ops` is a `list of Qobjs` or a `Qobj`. Do we want the individual functions (especially POVM) to be more granular? Moreover, the docstring for the wrapper function is really clunky (given the case-wise output types). Any ideas on how to make that simpler ?(one idea is to not specify return types and only have parameters given it's bound to be clunky!). ps. I'll fix the tests all at once after we decide on the api",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-650337844:37,wrap,wrapped,37,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-650337844,2,['wrap'],"['wrapped', 'wrapper']"
Integrability,"@quantshah I really like your option B idea, but for now I think we should do whatever is quickest to get something in the dev branch that can be used in some notebook to accompany your paper. I am also **very** much behind the Solver class. I think we have some work to do to convince @Ericgig , who is currently re-writing all the solvers. Perhaps we should start a discussion about this on Slack. There are lots of methods that could be used across solvers. I think the main interface can still be function based, but the code structured in classes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/962#issuecomment-470571697:478,interface,interface,478,https://qutip.org,https://github.com/qutip/qutip/pull/962#issuecomment-470571697,1,['interface'],['interface']
Integrability,"@riccameng Hi!. I think this is very achievable. Depending a bit on your time scales, it might make sense to work with QuTiP 5, which is currently under development in the `dev.major` branch. Version 5 includes much better QobjEvo support, much cleaner and more pluggable solvers (which should be merged into `dev.major` later this week), and a pluggable data layer. Some of these might be very helpful to you. For the rest of the discussion I will assume we are targeting QuTiP 5 unless you tell me otherwise. Some questions and thoughts from my side:. * As a first step you might be able to use v5s sparse (csr) data layer and write a custom ODE solver that performs the low-level evolution across multiple cores.; * If that works nicely, it could be extended to work across multiple nodes.; * For quantum circuit simulation, I think you can just ask @BoxiLi in a separate issue in https://github.com/qutip/qutip-qip about adding support for sparse unitaries in circuit simulation. I'm not sure if there are reasons why this might be difficult, but let's open an issue there and see.; * If the operators or states are too big to be stored in main memory even when they're sparse, we'll also need to figure out how to store them. Possibly this would involve a new data layer of some sort, but let's cross that road when we get to it.; * One of the challenges with HPC support is how to ensure we don't break it while continuing to evolve QuTiP. There are two challenges here. The first is to make sure that the code runs correctly -- I'm guessing there is some way to run MPI nicely on a single machine in our unit tests. The second is to make sure that performance isn't negatively impacted by changes. Do you have any thoughts on either of these?. It's exciting to see QuTiP being used on really big hardware. Looking forward to working with you however we can.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1671#issuecomment-927737428:49,Depend,Depending,49,https://qutip.org,https://github.com/qutip/qutip/issues/1671#issuecomment-927737428,1,['Depend'],['Depending']
Integrability,"@shemian29 Did this issue occur after you upgraded QuTiP or one of it's dependencies? And how did you install QuTiP? The IPython kernel crash suggests that maybe the installation is broken somehow (e.g. mismatched C libraries, etc). I can't reproduce your error on my side.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1705#issuecomment-959146334:72,depend,dependencies,72,https://qutip.org,https://github.com/qutip/qutip/issues/1705#issuecomment-959146334,1,['depend'],['dependencies']
Integrability,@tamakoshi2001 I suspect the issue is that the argument `V` is a numpy array. It should be a data instance. You can wrap the numpy array with `_data.Dense(V)` to convert it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2109#issuecomment-1458460315:116,wrap,wrap,116,https://qutip.org,https://github.com/qutip/qutip/issues/2109#issuecomment-1458460315,1,['wrap'],['wrap']
Integrability,@thangleiter can you try with the dependencies (cython numpy scipy nose matplotlib)? What Python are you using and what OS?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-480766019:34,depend,dependencies,34,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-480766019,1,['depend'],['dependencies']
Integrability,@wrzadkow thank you. It sounds good to me. Could [detect](https://stackoverflow.com/questions/5376837/how-can-i-do-an-if-run-from-ipython-test-in-python) whether the environment is `IPython`. ; If you can write a test too for it to avoid environment-dependent errors that would be great.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/989#issuecomment-493725091:250,depend,dependent,250,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493725091,1,['depend'],['dependent']
Integrability,"@​cgohlke</code></a>]</li>; <li>Only use ASCII characters in C source file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6691"">#6691</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a> [<a href=""https://github.com/hmaarrfk""><code>@​hmaarrfk</code></a>]</li>; <li>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a> [<a href=""https://github.com/npjg""><code>@​npjg</code></a>]</li>; <li>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>pylint warnings <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6659"">#6659</a> [<a href=""https://github.com/marksmayo""><code>@​marksmayo</code></a>]</li>; <li>Added GPS TIFF tag info <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6661"">#6661</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6647"">#6647</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not attempt normalization if mode is already norm",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:3745,depend,dependabot,3745,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"@​infmagic2047</code></a>]</li>; <li>Added support for top right and bottom right TGA orientations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5829"">#5829</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected ICNS file length in header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5845"">#5845</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Block tile TIFF tags when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5839"">#5839</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added line width argument to ImageDraw polygon <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5694"">#5694</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not redeclare class each time when converting to NumPy <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5844"">#5844</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only prevent repeated polygon pixels when drawing with transparency <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5835"">#5835</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix pushes_fd method signature <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5833"">#5833</a> [<a href=""https://github.com/hoodmane""><code>@​hoodmane</code></a>]</li>; <li>Add support for pickling TrueType fonts <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5826"">#5826</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Only prefer command line tools SDK on macOS over default MacOSX SDK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5828"">#5828</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:8048,depend,dependabot,8048,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,A chat app for devs that integrates nicely with github. It us how we discuss things.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/738#issuecomment-320977143:25,integrat,integrates,25,https://qutip.org,https://github.com/qutip/qutip/issues/738#issuecomment-320977143,1,['integrat'],['integrates']
Integrability,"A check on macOS wasn’t successful, but I don’t see how that error message could have any relation with krylovsolve",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1084513982:67,message,message,67,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1084513982,1,['message'],['message']
Integrability,"A faster isherm function. 3-5x faster if operator is Hermitian, 100x+ faster if not. Essentially does a modified adjoint calculation. This requires having a csr matrix in canonical format, which is not guaranteed under sparse multiplication. Since canonical format is important for time-dependent dynamics as well, fast_csr_matrix now does the indices and data sorting for canonical format after multiplication. This gives a slight performance hit, but having all Qobj in canonical format outweighs this.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/629:287,depend,dependent,287,https://qutip.org,https://github.com/qutip/qutip/pull/629,1,['depend'],['dependent']
Integrability,"A faster version of `bloch_redfield_tensor`, using components from the time-dependent version. About 3x+ faster for secular tensors, and 10x+ faster for non-secular tensors. This routine is now likely limited by the time it takes to do the Python callback for the bath spectra functions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/790:76,depend,dependent,76,https://qutip.org,https://github.com/qutip/qutip/pull/790,2,"['depend', 'rout']","['dependent', 'routine']"
Integrability,"A few proposed changes to internals of the MultiTrajSolver and its subclasses. The changes are (a) to increase consistency between the monte carlo solvers and the stochastic solvers, (b) to reduce repeating code from MultiTrajSolver in the subclasses, (c) to fix some documentation. * Renamed `_MTSystem` and `_MCSystem` into `_MultiTrajRHS` and `_MCRHS` to make them analogous to `_StochasticRHS`. Removed distinction between `.system` and `.rhs` which seemed unnecessary and confusing to me (please tell me if I'm wrong).; * Made `_integrate_one_traj` use the integrator's run method (which doesn't do anything special currently, but I imagine that it could potentially be implemented more efficiently than repeated calls to integrate). Made subclasses use `_run_one_traj`, `_integrate_one_traj` etc of the parent class where possible, instead of duplicating logic.; * The docstring of MCSolver.run was not documenting its parameters, instead referring to the docstring of MultiTrajSolver.run, but MultiTrajSolver is not included in the docs.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2359:562,integrat,integrator,562,https://qutip.org,https://github.com/qutip/qutip/pull/2359,2,['integrat'],"['integrate', 'integrator']"
Integrability,A few very minor fixes; Details in commit messages,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/339:42,message,messages,42,https://qutip.org,https://github.com/qutip/qutip/pull/339,1,['message'],['messages']
Integrability,"A final overall sugession which can be considered is encapsulation of the two main functions `temporal_scattered_state` and `scattering_probability` into a single class. It is a major design change of course. @bencbartlett If you think it is a good idea to bundle both methods into a single class called `PhotonScattering`, I can help with that. In the spirit of your excellent notebook example, you can add the Hamiltonian generating function which can be passed to a `PhotonScattering` class. Each time you call the `scattering_probability` method of this class, you supply the arguments for the particular Hamiltonian, i.e., pulse_length, area, `n_emission` etc. This is similar to the wrapping function that you wrote for your `pool` processes in the notebook. I need to understand the physics a little bit more to ascertain which are the quantitites that would form the arguments for the scattering_probability function and which ones would be fixed for an experiment (hamiltonian for instance). But the overall idea is that you make a class for a particular scattering experiment, give it a fixed Hamiltonian function and keep the calculations flexible wrt to the parameters of interest (pulses, gamma etc). A prototype example would then be:; ```; from qutip.scattering import PhotonScattering; from qutip.scattering import hamiltonian_tls, hamiltonian_rft; ...; scatter = PhotonScattering(hamiltonian_tls, tlist, c_ops, zero_state = psi0, effective_hamiltonian = True); prob_scatter = scatter.scattering_probability(n_emissions, gamma, pulse_length, pulse_area); ```; For a different hamiltonian, the example would be:; ```; scatter = PhotonScattering(hamiltonian_spdc, tlist, c_ops_spdc, zero_state = psi0); prob_scatter = scatter.scattering_probability(n_emissions, pulse_length=pulse_len); ```; I will be happy to help with this and discuss if you are interested, @bencbartlett. Adding these small changes from your notebook example into the main code could make your module more general an",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-384566684:689,wrap,wrapping,689,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-384566684,1,['wrap'],['wrapping']
Integrability,"A lot of the cost of the Husimi Q function does not depend on the state. If it is called many times (e.g. for a density matrix or when doing multiple states), this can be used for a speedup. I wrote a function to precompute everything that does not depend on the state and store it as a 3d array. The Q function itself is then a dot product between the last axis of the precomputed array and a pure state. Performance: Everything tested by computing Q of a coherent state with N dimensions, evaluated at 401 points in x and y, respectively.; Speedup is 3x for N=10, 4x for N=20, 7x for N=50. ; For density matrices, precomputing is already paid for by the first call. . Possible further changes:; Because precomputing is always worth it if the state is a density matrix, one could do that automatically. Because the memory cost can be large (len(xvec) * len(yvec) * N * 128 bit) , I still leave the decision to the user. The third if statement in _qfunc_pure can be avoided at a small performance cost in either the polyval or np.dot variant. This seemed the best compromise between performance and nice code.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934:52,depend,depend,52,https://qutip.org,https://github.com/qutip/qutip/pull/934,2,['depend'],['depend']
Integrability,"A re-implementation of `qutip.metrics.process_fidelity`. ; The definition implemented here follows Gilchrist, Langford, Nielsen, Phys. Rev. A 71, 062310 (2005), https://journals.aps.org/pra/abstract/10.1103/PhysRevA.71.062310 (https://arxiv.org/abs/quant-ph/0408063).; Depending on how the quantum channels passed to `process_fidelity` are represented (unitary, supermatrix, choi, chi, or Kraus), computational shortcuts are used. They are all tested against each other. **Related issues or PRs**; Proposed in https://github.com/qutip/qutip/issues/1703. **Changelog**; Fixed implementation of qutip.metrics.process_fidelity and added tests",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1708:269,Depend,Depending,269,https://qutip.org,https://github.com/qutip/qutip/pull/1708,1,['Depend'],['Depending']
Integrability,"A recent Python package using QuTiP as a dependency, `qptomographer`, addresses the diamond norm distance. See: https://qptomographer.readthedocs.io/en/latest/figures_of_merit/#the-diamond-norm-distance. Also, [ArXiv:1808.00358](https://arxiv.org/abs/1808.00358).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-489439521:41,depend,dependency,41,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-489439521,1,['depend'],['dependency']
Integrability,Ability to calculate two-time correlations with time-dependent c_ops and bug fixes related to the correlator module,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/509:53,depend,dependent,53,https://qutip.org,https://github.com/qutip/qutip/pull/509,1,['depend'],['dependent']
Integrability,"About only storing kets, but not averaging into a dm, we can't do that yet, but it's easy to implement so if useful, we can add the option. The error is not in the `_to_dm`, but in the addition, which is done in the sparse CSR format. No dense conversion are made. But the `proj` operator does not have a tidyup step, so any non-zero are kept, however small they are. This is also an easy fix that could help. The `MemoryError` is also not that helpful, we should improve the error message to tell what size of arrays are allocated. Thank you for reporting these and trying the alpha version. I see you don't have cython, do you have a way to compile the source yourself? ; Once fixed, I would be curious to have you try the development version without waiting for a release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2299#issuecomment-1904338523:482,message,message,482,https://qutip.org,https://github.com/qutip/qutip/issues/2299#issuecomment-1904338523,1,['message'],['message']
Integrability,"About your future 'dispatch like' system:; I personally like dispatch because it makes everything more easily extensible (and/or hackable) if package authors agree on a common denominator and they are careful to rely only on that interface and on nothing else. As all our operators are lazy, we already implement lazy operator*dense and operator*sparse multiplication. ; It might be interesting for us, in the future, to define dispatch rules for our operators, so that we don't even need to convert them to Qobj. But for now I'd focus on having an easy and extensible way to convert our objects to qutip format. . (Ideally, it would be nice if we could give qutip solvers our operators, which are not Qobj, provided they define the right dispatch rules, but I imagine that this would be complex and require significant effort on your part).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825714680:230,interface,interface,230,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825714680,1,['interface'],['interface']
Integrability,"According to the error message; ```; WARNING: invalid signature for automodule ('qutip.core.gates\n :members:\n :show-inheritance:\n :imported-members:'); WARNING: don't know which module to import for autodocumenting 'qutip.core.gates\n :members:\n :show-inheritance:\n :imported-members:' (try placing a ""module"" or ""currentmodule"" directive in the document, or giving an explicit module name); ```; That should be the error source. Lets use; ```; .. automodule:: qutip.core.gates; :members: ...; ```; first and see if it works.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2441#issuecomment-2148414542:23,message,message,23,https://qutip.org,https://github.com/qutip/qutip/pull/2441#issuecomment-2148414542,1,['message'],['message']
Integrability,"Actually it probably doesn't shake out to a single time-dependent operator like I thought it might at the start. You can still do the Taylor expansion to try (you can find a similar result for 3x3 spin matrices to the 2x2 case), but there's not going to be a cancellation I thought there might have been. Right now, QuTiP doesn't support arbitrary time-dependence in collapse operators, so if you can't find a way to write it in that form, you might have to do the integration manually yourself until we've added it - the QuTiP guide [explains how QuTiP does the integration](http://qutip.org/docs/latest/guide/dynamics/dynamics-monte.html).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1308#issuecomment-739883642:56,depend,dependent,56,https://qutip.org,https://github.com/qutip/qutip/issues/1308#issuecomment-739883642,4,"['depend', 'integrat']","['dependence', 'dependent', 'integration']"
Integrability,"Actually let's also leave it open until I can determine if it is indeed scipy. After installing scipy with pip as the scipy folks suggested, the example I had in that issue is now working, but I get the same integration error with qutip and same tests failing. When I get time, i'll try to distill down the qutip error to a scipy error and post an update. Hopefully the main issue is just a scipy error, but would be good to confirm.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1205435786:208,integrat,integration,208,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1205435786,1,['integrat'],['integration']
Integrability,Add [full] target to get all optional dependencies,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1510:38,depend,dependencies,38,https://qutip.org,https://github.com/qutip/qutip/pull/1510,1,['depend'],['dependencies']
Integrability,"Add a wrapper for function returning `Qobj` to be treated as `QobjEvo`: `QobjEvoFunc`; Wrapped function have access to all method of `QobjEvo` therefore only one version of the code should be sufficient for time dependant problems using both list format and function.; Any callable is considered a function, allowing for class method etc. The new function `qobjevo_maker` can take any valid time dependant quantum object and make it a `QobjEvo` like object. Added wrapper for function using the old `rhs_with_state` format and using no `args`. . Tests for `QobjEvoFunc` have been added but not for `qobjevo_maker`. Solver are not updated to use it yet. @ajgpitch I added it last minute in stochastic, but did not tried it yet.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1123:6,wrap,wrapper,6,https://qutip.org,https://github.com/qutip/qutip/pull/1123,5,"['Wrap', 'depend', 'wrap']","['Wrapped', 'dependant', 'wrapper']"
Integrability,Add error message to MemoryError,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2304:10,message,message,10,https://qutip.org,https://github.com/qutip/qutip/pull/2304,1,['message'],['message']
Integrability,"Add new ODE integration methods:; `vern7`, `vern9` and `diag`. Verner 's methods are high order Runge-Kutta method with variable step size and dense output. (http://people.math.sfu.ca/~jverner/). Having our own qutip's implementation allow the state to be a qutip data-layer, instead of numpy arrays, which could be useful for gpu or auto differentiation. . `diag` method diagonalize a constant system and solve it analytically, similar to what `essolve` did.; The states are numpy arrays since we don't have vectorized functions for our data layer. Benchmark of these method are included with those of #1643.; Verner method tend to be faster than `adams` method for smaller systems and `diag` is also very fast. For a diff with #1643, see https://github.com/Ericgig/qutip/pull/5.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1644:12,integrat,integration,12,https://qutip.org,https://github.com/qutip/qutip/pull/1644,1,['integrat'],['integration']
Integrability,Add parallelization support for `verN` integrators,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2454:39,integrat,integrators,39,https://qutip.org,https://github.com/qutip/qutip/pull/2454,1,['integrat'],['integrators']
Integrability,Add signal check in vern integrator,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2169:25,integrat,integrator,25,https://qutip.org,https://github.com/qutip/qutip/pull/2169,1,['integrat'],['integrator']
Integrability,"Added optional argument `integrator` to choose between `propagator` or `mesolve` (also a `parallel={True,False}` argument). Realized there is probably not much to gain from `mesolve` returning a sparse matrix for large systems, however. This is because in the memorycascade method there is some postprocessing of the propagator using the `tensor_contract` method (written by @cgranade) which does not support sparse matrices, so it gets converted to dense anyway. Still `mesolve` actually performs a bit faster for small systems and small times, so still useful to be able to choose the method I guess.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/502#issuecomment-230115449:25,integrat,integrator,25,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-230115449,1,['integrat'],['integrator']
Integrability,Adding Optional dependency for matplotlib.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/961:16,depend,dependency,16,https://qutip.org,https://github.com/qutip/qutip/pull/961,1,['depend'],['dependency']
Integrability,"Adding a constant Hamiltonian did also not help. In my most recent code I even removed all the atomic states degeneracies and it still won't work. I post my code below. Could you run it on your machine and let me know, whether you get more than constant lines as an output.; ```; import numpy as np; import pylab as plt; import scipy as scipy; from qutip import *. #System parameters; Omega = 1; Gamma = 0.25. #Single atom states; g = basis(3,0); e = basis(3,2); s = basis(3,1). #Single atom operators; sgg = g * g.dag() #ground state population; see = e * e.dag() #excited state population; sss = s * s.dag(); sge = g * e.dag() #atomic coherence sigma_ge; #Composed atomic operators; A1sgg = tensor(sgg, qeye(3)); A1see = tensor(see, qeye(3)); A1sge = tensor(sge, qeye(3)); A1sss = tensor(sss, qeye(3)); A2sgg = tensor(qeye(3), sgg); A2see = tensor(qeye(3), see); A2sss = tensor(qeye(3), sss). #Time independent part of the Hamiltonian; H0 = -1 * A1sgg + 0.5 * A1sss + 1 * A1see - 0.5 * A2sgg + 0.1 * A2sss + 1.2 * A2see; #Driving atom A1; H1 = Omega * (A1sge + A1sge.dag()); #Time dependence of the driving; def H1_coeff(t,args):; return 0.5 * (np.tanh(100.0*(t-np.pi/2.0))-np.tanh(100.0*(t-np.pi))); #Complete Hamiltonian; H = [H0, [H1, H1_coeff]]. #Time; tspan = np.linspace(0,3.5,550); #initial state; psi0 = tensor(g,g); #calculated expectation values; e_ops = [A1sgg, A1see, A2sgg, A2see]. results = mesolve(H, psi0, tspan, np.sqrt(Gamma) * A1sge, e_ops, options=Options(atol=1e-9,rtol=1e-9)). #plotting the results; fig, ax = plt.subplots(1,1); ax.plot(tspan, results.expect[0], lw=2, label=r'$\sigma_{gg}^{A1}$'); ax.plot(tspan, results.expect[1], lw=2, label=r'$\sigma_{ee}^{A1}$'); ax.plot(tspan, results.expect[2], lw=2, label=r'$\sigma_{gg}^{A2}$'); ax.plot(tspan, results.expect[3], lw=2, label=r'$\sigma_{ee}^{A2}$'); ax.set_xlabel(r'Time $[\Omega^{-1}]$'); ax.legend(); plt.show(); ```; Again changing the number of time steps in `tspan` to 500 gives the right result.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771#issuecomment-338356312:1083,depend,dependence,1083,https://qutip.org,https://github.com/qutip/qutip/issues/771#issuecomment-338356312,1,['depend'],['dependence']
Integrability,"Additionally, from looking through your comments it appears that something; definitely went weird with formatting and/or merging. I'll comb back; through and make to fix any of these issues before I request a re-review. On Wed, Jun 28, 2023, 3:43 PM Eric Giguère ***@***.***> wrote:. > ***@***.**** requested changes on this pull request.; >; > Are you sure there was not a bad merge somewhere?; > Some code is duplicated, seemingly important variable are never used, a; > typo in the import of flimesolve.py stop it from being imported, etc...; >; > Please add tests covering most case and have them passing.; >; > Also the separation of task is not well used. We split the data container,; > ODE integration and the physics, but here they are mixed together...; >; > The quicksolve is the ""diag"" integrator, you don't have to re implement it; > here. You could just set it as the default method since the rhs is always; > constant (but it seems like this is not desired when time_sense != 0).; > ------------------------------; >; > In doc/guide/scripts/floquet_ex3.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245104940>:; >; > > @@ -35,7 +35,6 @@ def noise_spectrum(omega):; > # Alternatively; > psi_t = output.states[idx]; > p_ex[idx] = qutip.expect(qutip.num(2), psi_t); > -; >; > Why did you erase this line?; > ------------------------------; >; > In VERSION; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245585117>:; >; > > @@ -1 +1 @@; > -5.0.0.dev; > +5.0.0a1; >; > The version change when we do a release, not with each PR.; > ------------------------------; >; > In qutip/solver/correlation.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245591365>:; >; > > + G1 = correlation_3op(; > + solver, state0, [0], taulist, None, a_op.dag(), a_op)[0]; >; > ⬇️ Suggested change; >; > - G1 = correlation_3op(; > - solver, state0, [0], taulist, None, a_op.dag(), a_op)[0]; > + G1 = correlation_3op(; > + solver, state0, [0], taulist, None, a_op.dag(), a_op",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612047839:698,integrat,integration,698,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612047839,2,['integrat'],"['integration', 'integrator']"
Integrability,"After setting atol=1e-9 it works now for 500 time steps. But increasing the number of time steps to 550 causes the program to fail again. It also doesn't help to decrease atol further, I went up to 1e-15, neither does decreasing the relative tolerance rtol. Shouldn't actually increasing the number of time steps improve the precision? Also, why does it depend on the dimension of the dm? I'm just curious now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771#issuecomment-338105892:354,depend,depend,354,https://qutip.org,https://github.com/qutip/qutip/issues/771#issuecomment-338105892,1,['depend'],['depend']
Integrability,Agreed that it is tricky to test. I mostly wanted the tests because the nice error messages might contain bugs. Happy to let this slide for now though.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2304#issuecomment-1908915742:83,message,messages,83,https://qutip.org,https://github.com/qutip/qutip/pull/2304#issuecomment-1908915742,1,['message'],['messages']
Integrability,"Ah no, never mind - time dependence would mess you up, and actually the sort of tri-diagonal systems I had in mind aren't so low-rank anyway. Maybe I'll look into it, but it won't be anywhere near as good as I had first thought.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-865915323:25,depend,dependence,25,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-865915323,1,['depend'],['dependence']
Integrability,"Ah, nice catch thanks, and thanks for the super clear repro. We're overhauling the solvers for QuTiP 5.0, which will include a lot more rigorous input checking on entry, but also it uses far safer low-level datatypes that would catch this shape mismatch in the C layer (even though the `dims` _should_ have been checked by `mesolve`). I'll check the other solvers and patch in a sanity test - probably after these lines: https://github.com/qutip/qutip/blob/d5e305513d9186df74beee4fd8da680e89f29d15/qutip/mesolve.py#L259-L261; we can just insert a test; ```python; if rho0.dims[0] != rho0.dims[1]:; raise ValueError(; ""input state must be a pure state or square density matrix""; ); ```. There may also be other segfaults lurking if you use a Python function to generate a time-dependent `Qobj` value in the Liouvillian or the expectation operators, but right now you're unlikely to use that form (because it's slow as anything). The bug slips through because we unsafely pass off a matrix down to C code (where we currently don't have sanity checks) without first verifying that it is a valid shape in Python space - the C code is working as designed, so there shouldn't be problems with correct inputs. Removing `c_ops` causes `mesolve` to delegate to `sesolve` which presumably is better at its type-checking, and I expect that a small dimension size working is likely just `malloc` having slack in the memory it gives us for small sizes or small requests being allocated into the special pre-allocated store.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1456#issuecomment-791925169:776,depend,dependent,776,https://qutip.org,https://github.com/qutip/qutip/issues/1456#issuecomment-791925169,1,['depend'],['dependent']
Integrability,"Ah, you are right! It seems to be all tests using the ODE solvers are failing.; Indeed mesolve and sesolve tests are also failing (with the same integration error).; There are lots of tests which fail, I think most likely every test that calls a solver... I just did some basic testing with scipy's integrate.ode and this seems to have the same kind of issues, so I think as you mention, the issue lies with the solver...meaning it probably isn't installed correctly.; Similar issues seem to have been raised for scipy previously (e.g. https://github.com/scipy/scipy/issues/15077), though I don't see any currently open. I also updated scipy today and it didn't change anything unfortunately. I guess this issue can be closed, if it's just a scipy problem?; Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1204170858:145,integrat,integration,145,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1204170858,2,['integrat'],"['integrate', 'integration']"
Integrability,"All builds pass, besides the build on Python 3.7 without Cython. I would still merge this PR and focus on that issue separately. . Now we need to update places where `nose` is mentioned, I found these in `qutip-doc`; - the [changelog](https://github.com/qutip/qutip-doc), ; - the instructions on the dependencies in the documentation [installation instructions](https://github.com/qutip/qutip-doc/blob/402ec10de7a314ba9f124ddac7514621e92496df/installation.rst), ; - and [development guidelines](https://github.com/qutip/qutip-doc/blob/2ffd6d1cc581e858674d43fe97a9297e9476a278/qutip_dev_contrib.md).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-560280938:300,depend,dependencies,300,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560280938,1,['depend'],['dependencies']
Integrability,All of the individual terms in the dense version of the time-dependent BR solver are now tested and working. Now I need to write the codegen module. A sparse version is just a simple extension once the codegen is done.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/676#issuecomment-295576774:61,depend,dependent,61,https://qutip.org,https://github.com/qutip/qutip/pull/676#issuecomment-295576774,1,['depend'],['dependent']
Integrability,Allow general callable objects to define a time-dependent Hamiltonian,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1107:48,depend,dependent,48,https://qutip.org,https://github.com/qutip/qutip/pull/1107,1,['depend'],['dependent']
Integrability,"Also for `operator_to_vector`, though this is harder to mis-use. The documentation now spells out exactly what we expect, and we verify that we do have the correct inputs, rather than exploding with a misleading error message (at best) or silently doing something very unexpected (at worst). Fix gh-1204.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1475:218,message,message,218,https://qutip.org,https://github.com/qutip/qutip/pull/1475,1,['message'],['message']
Integrability,"Also, I used a piece-wise-constant approximation to a time-dependent hamiltonian with the bloch-redfield solver lately (here http://arxiv.org/abs/1409.6014) - it was useful, but I'm not really sure if it was the most elegant approach. It was just what I could figure out on a short notice... so I'm conflicted as to whether or not it would be a feature useful to add, do you have any thoughts?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/258#issuecomment-63407763:59,depend,dependent,59,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-63407763,1,['depend'],['dependent']
Integrability,"Also, could you give me a realistic example of an instance in which `qutip.squeeze` can be used? I'm still puzzled when I think that its entries depend on the cutoff.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/661#issuecomment-286313605:145,depend,depend,145,https://qutip.org,https://github.com/qutip/qutip/issues/661#issuecomment-286313605,1,['depend'],['depend']
Integrability,"Also, instead of adding a third entry to the nested list characterizing the time-dependence, I think the real and imag parts should be in the [1] list entry as a tuple. That way, all of the time-dependence is in a single list item. We may in the future want to add additional items to the list (e.g. on-off times for the time-dependent terms.). I also think that we should get some feedback from @ajgpitch and @cgranade. Chris has some experience with opencl, and he probably is bette suited for feedback than myself. . Another question would be the issue of maintainability. If, for some reason, you are unable to address bug issues or incompatibilities with future QuTiP versions, then can we support this large code submission without having authored it ourselves. For instance, the mcsolve_f90 routine has largely been non-maintained since Arne added it years ago.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/554#issuecomment-259879928:81,depend,dependence,81,https://qutip.org,https://github.com/qutip/qutip/pull/554#issuecomment-259879928,4,"['depend', 'rout']","['dependence', 'dependent', 'routine']"
Integrability,Ambiguous error message for circuit plotting,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1426:16,message,message,16,https://qutip.org,https://github.com/qutip/qutip/issues/1426,1,['message'],['message']
Integrability,An IPython notebook example should be provided for using this time-dependent option.; A test should also be added.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/396#issuecomment-155855645:67,depend,dependent,67,https://qutip.org,https://github.com/qutip/qutip/pull/396#issuecomment-155855645,1,['depend'],['dependent']
Integrability,"Another approach, if your system size is not too large, is to express your time-dependent operator a time-dependent linear combination of the basis operators on the system's Hilbert space. For example if you were looking at a qubit, you would write `expm(f(t)) = sum a_i(t) * sigma_i`. Then you can pass vectorized coefficients in the form `[[a_i_list,sigma_i],...]`. This should be much faster. It's ideal if you can do this analytically, but it would be sufficient to pre-compute the collapse operator at each timestep (which will be expensive for large systems) and then project them onto your operator basis. The relaxation generators are usually Hermitian, so you can find the projections onto the Pauli basis by examining the matrix elements, rather than computing lots of inner products.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1398#issuecomment-1681460936:80,depend,dependent,80,https://qutip.org,https://github.com/qutip/qutip/issues/1398#issuecomment-1681460936,2,['depend'],['dependent']
Integrability,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:61,message,message,61,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['message'],['message']
Integrability,"Apologies for another long delay. I'd be happy to hop on a video call sometime to discuss the design. I think the `__qutip_qobj__` interface is likely to remain fairly simple and be just:; ```python; def __qutip_qobj__(self, copy=True):; """""" Return a Qobj representation of this object. Parameters; ---------------; copy : {True, False}, default True; If True, a new independent Qobj should be returned. If False, a reference to an existing Qobj; may be returned. Returns; ----------; Qobj; The Qobj representation of this object.; """""" ; return qutip.Qobj(self._stuff, copy=copy); ```; and we can figure out how to make that work on our side. How that looks under the hood depends quite a bit on whether the `Data` object will grow `dims` support or not. We have another use case for `dims` on the data layer (a tensor network data backend that we're starting work on) but it is a bit of a philosophical shift in what the `Data` layer is, so we'll need to think carefully (e.g. all `Data` operations would have to keep track of `dims` which is a big change; and it's also a bit strange because the operations themselves are just 2D matrix operations, where dims are meaningless). @PhilipVinc I'm not sure if we discussed this before, but do you have some short code snippets showing how you see this Qobj support being used in user code? Apologies if I missed such examples elsewhere in the discussion already.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-951087841:131,interface,interface,131,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-951087841,2,"['depend', 'interface']","['depends', 'interface']"
Integrability,"Apply your squeeze operator to a state vector and check the norm of the; output. Is the operator really unitary?. -P. On Mar 13, 2017 11:48 AM, ""ziofil"" <notifications@github.com> wrote:. > When I tried to use the qutip.squeeze function for my simulations I; > noticed that something was off. Upon further investigation I found out that; > the output is not a truncated version of the single-mode squeezing unitary,; > but rather the matrix exponential of the truncated generator. These are; > *very* different things!; >; > Am I right in assuming that the most useful matrix would be the truncated; > unitary? If that's the case, the current method to compute it is wrong. To; > compute the right matrix one can use the disentangling formula for SU(1,1); > (formula (31) here <http://aip.scitation.org/doi/pdf/10.1063/1.3413923>):; >; > def squeeze(n,z):; > s0 = np.exp(1j*np.angle(z))*np.tanh(abs(z)); > s1 = -2*np.log(np.cosh(abs(z))); > s2 = -np.exp(-1j*np.angle(z))*np.tanh(abs(z)); >; > L = s0*0.5*(qt.create(n)*qt.create(n)); > K = s1*(0.5*qt.num(n)+0.25*qt.identity(n)); > R = s2*0.5*(qt.destroy(n)*qt.destroy(n)); >; > return (L.expm())*(K.expm())*(R.expm()); >; > As you can see, this definition does *not* depend on the truncation; > parameter. Specifically, the upper-left portion of the matrix that; > qutip.squeeze outputs converges to my squeeze function for large n.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/661>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqdPPw6WOAYMpYw_kA9pRxVhgVyxIks5rlYF9gaJpZM4MbmLX>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/661#issuecomment-286216795:1217,depend,depend,1217,https://qutip.org,https://github.com/qutip/qutip/issues/661#issuecomment-286216795,1,['depend'],['depend']
Integrability,Arbitrary tensor contraction.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/268:17,contract,contraction,17,https://qutip.org,https://github.com/qutip/qutip/pull/268,1,['contract'],['contraction']
Integrability,"As I mentioned in #853, I wonder if it's possible to completely encapsulate any use of sparse matrices to allow for different implementations, assuming a common interface. This would support both int32 and int64, as well as any other specialized implementation anyone might want to use. Obviously, this falls into the ""quite a bit of work"" category, assuming it's possible at all. Personally, I also want to clarify that in #853, I wasn't thinking clearly when I titled it ""moderately big tensor products"" (obviously, it was an insanely large product). I don't actually foresee needing anything bigger than int32. Is there a CPU-time penalty for switching to int64? If so, I would consider that more of a downside than an increase in memory usage.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-382528173:161,interface,interface,161,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-382528173,1,['interface'],['interface']
Integrability,"As a comparison, here's the output of `matrix_histogram` from [the example in the _current_ build of the docs](https://qutip.org/docs/latest/guide/guide-visualization.html#visualizing-operators) (QuTiP 4.6.2):. ![QuTiP 4.6.2 guide-visualization-8](https://user-images.githubusercontent.com/5968590/122970595-06e9dc00-d386-11eb-9905-ad65f9254c0a.png). compared to the version produced by this PR:. ![this PR guide-visualization-8](https://user-images.githubusercontent.com/5968590/122970672-19641580-d386-11eb-973b-39423e53637c.png). The original certainly isn't great, but I think its defaults have produced a somewhat better result in this case. It might be worth having a look at some of the defaults here, particularly with regards to the z-axis tic labelling. While we're at it, the rainbow colour scheme is not a good choice - it'd be much better to use a diverging colourmap, and preferably something a bit more perceptually uniform. ---. I'm not completely sold on the idea that our functions should take so many different optional arguments. We return the figure and axes instances, which means anything the user can do anything that's basic matplotlib commands - we don't need to reimplement their interface. Things like the figure size, azimuth and elevation are particular examples of this - it's very simple to set them using matplotlib's interface, and we don't really provide any added benefit by having the options here. Another is the truncated colourbars: why not only accept a `cmap` argument, and allow the user to pass anything that `matplotlib.pyplot.plot` would accept? Then the interface to our function is much simplified, and the user has as much (more, even) control over the colouring.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1573#issuecomment-866187912:1207,interface,interface,1207,https://qutip.org,https://github.com/qutip/qutip/pull/1573#issuecomment-866187912,3,['interface'],['interface']
Integrability,"As before, options can be set as keywork at initialization or when setting items. The default can be changed using context (mainly for tests) or setting items at the class:. ```; SolverOptions['method`] = 'bdf' # Set default method ; with SolverOptions(atol=1e-5):; opt = SolverOptions(store_state=True); opt['progress_bar'] = False; print(opt). progress_bar : False; store_state : True; method : 'bdf'; atol : 1e-5; ...; ```; The option can also be initialized from a dict or another options instance, it will make a copy. I added the capacity to add a safety check when setting an options. It is only used for `use_cython` which will error when trying to set it to `True` without cython installed. Otherwise, it will fail when trying to use the options. *Solver's options*; Each solver has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are f",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:1579,integrat,integrator,1579,https://qutip.org,https://github.com/qutip/qutip/pull/1812,2,['integrat'],['integrator']
Integrability,As discussed in #664 this PR is regarding citation reminders for QuTiP as it seems that many times users are unaware of the papers to cite when they use QuTiP. I have added a bibtex file in the source now and into the MANIFEST file. We should discuss how to get this to the users attention. Creation of a cite() function which generates a bibtex entry in the working directory whenever qutip is imported could be one option. The other option is to put it in /home/qutip or print it out whenever a result class is called. We can also add a welcome message at setup which reminds users regarding the papers and points them to the bibtex file. I am in favour of having a bibtex generator in __init__.py such that qutip.bib appears in the code folder whenever QuTiP is used.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/752:547,message,message,547,https://qutip.org,https://github.com/qutip/qutip/pull/752,1,['message'],['message']
Integrability,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/448#issuecomment-192570921:440,depend,dependent,440,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921,3,"['depend', 'message']","['dependent', 'message']"
Integrability,"Assuming Simon's point isn't just a complete answer to your question: in the general case, this is an impossible question to answer - it touches on many parts of numerical integration, such as tolerance limits and adaptive step-size methods. When you're dealing with completely arbitrary time-dependence, there's not really any one-size-fits-all approach that'll work (despite how RK45 is often taught as a magic bullet in physics courses). Here, you will likely find that your RK45 results depend strongly on how many intermediate timesteps you use, whereas QuTiP's results will be (marginally) more stable. This is because QuTiP will internally subdivide the timesteps more to achieve internal precision goals, but then only returns the results at the time points you ask for. You can increase the maximum number of allowed subdivisions by increasing the `nsteps` parameter in a `qutip.Options` object, and with the `options` keyword argument.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986661136:172,integrat,integration,172,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986661136,3,"['depend', 'integrat']","['depend', 'dependence', 'integration']"
Integrability,"Assuming you have Anaconda 2.5 installed (so that you can use the Intel MKL on all platforms), the default number of threads is one. Therefore, you don't get much benefit. To change the number of threads used you can do:. ``` python; import mkl; mkl.set_num_threads(N); ```. or in QuTiP it is easy to set using:. ``` python; n_threads = hardware_info()['cpus']; mkl.set_num_threads(n_threads); ```. One can not access the spare MKL routines directly as there is no support in the scipy.sparse library. However, you can get to all of the functions using ctypes. An example of complex SpMV is here:. https://gist.github.com/nonhermitian/74c3ddbbd006b2f8d306. The only issue with the attached method, is that finding the MKL runtime library is platform dependent (maybe should file an issue with the Anaconda people?). Therefore, it is a bit cumbersome to work with. Moreover, it is not possible to access these routines via Cython as they do not have any of the development stuff available. That may not really be an issue at the end of the day though as one needs quite a large system to get any benefit, and at large Hilbert dimensions, the overhead from calling Python funcs. directly is not an issue. I will be chatting with the [Intel Python](https://software.intel.com/en-us/python-distribution) people tomorrow to give them some suggestions and talk about our project. Hopefully we can hash out some plan to make our life a bit easier, and take advantage of the MKL tools. Their parallel direct sparse solver may also be of interest.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/438#issuecomment-186864518:432,rout,routines,432,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186864518,3,"['depend', 'rout']","['dependent', 'routines']"
Integrability,"At present the only known working option that works with the runtime compile features (e.g. string type time-dependence) requires Visual Studio 2015 with C++ options. The community edition is fine, which has no monetary cost, but it does come with a considerable install time and disk space (11GB) cost. . According to the [Python wiki on Windows compilers](https://wiki.python.org/moin/WindowsCompilers) These [build tools](https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2017) are supposed to work, but so far I did not succeed. Not tried in a while, as I don't have very easy access to a Windows machine I can play with. So if someone else wants to give a try, then that would be just great. This issue would ideally be closed after a merging of a PR updating the installation instructions in https://github.com/qutip/qutip-doc",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/954:109,depend,dependence,109,https://qutip.org,https://github.com/qutip/qutip/issues/954,1,['depend'],['dependence']
Integrability,"Badges tell some features of a project, such as code coverage, build status, downloads. ; A comprehensive list of badges can be generated on [shields.io](https://shields.io).; Not any badge that can be generated is interesting to be displayed, but some badges might be cool and informative. ; Anaconda provides some of them at https://anaconda.org/conda-forge/qutip/badges. ; Recently the `conda-forge` download counter was added to Readme.md: [![Anaconda-Server Badge](https://anaconda.org/conda-forge/qutip/badges/downloads.svg)](https://anaconda.org/conda-forge/qutip).; It could be interesting to add meaningful badges from shields.io. On https://github.com/badges/shields it is even possible to generate new badges (one could eventually think of badges providing information about the integration with the quantum-tech ecosystem).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/983:790,integrat,integration,790,https://qutip.org,https://github.com/qutip/qutip/issues/983,1,['integrat'],['integration']
Integrability,Better citation message,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/809:16,message,message,16,https://qutip.org,https://github.com/qutip/qutip/pull/809,1,['message'],['message']
Integrability,Better handling of scipy ode in integrator,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1734:32,integrat,integrator,32,https://qutip.org,https://github.com/qutip/qutip/pull/1734,1,['integrat'],['integrator']
Integrability,Bleh -- build error: `ERROR: Some build dependencies for file:///project conflict with the backend dependencies: numpy==1.13.3 is incompatible with numpy>=1.16.6.`; Probably I need to loosen the build dependencies in setup_requires.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1735#issuecomment-990081489:40,depend,dependencies,40,https://qutip.org,https://github.com/qutip/qutip/pull/1735#issuecomment-990081489,3,['depend'],['dependencies']
Integrability,Bloch-Redfield master equation solver for time-dependent Hamiltonians and c_ops,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/525:47,depend,dependent,47,https://qutip.org,https://github.com/qutip/qutip/pull/525,1,['depend'],['dependent']
Integrability,"Bumps [certifi](https://github.com/certifi/python-certifi) from 2022.12.7 to 2023.7.22.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/certifi/python-certifi/commit/8fb96ed81f71e7097ed11bc4d9b19afd7ea5c909""><code>8fb96ed</code></a> 2023.07.22</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/afe77220e0eaa722593fc5d294213ff5275d1b40""><code>afe7722</code></a> Bump actions/setup-python from 4.6.1 to 4.7.0 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/230"">#230</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/2038739ad56abec7aaddfa90ad2ce6b3ed7f5c7b""><code>2038739</code></a> Bump dessant/lock-threads from 3.0.0 to 4.0.1 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/229"">#229</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/44df761f4c09d19f32b3cc09208a739043a5e25b""><code>44df761</code></a> Hash pin Actions and enable dependabot (<a href=""https://redirect.github.com/certifi/python-certifi/issues/228"">#228</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/8b3d7bae85bbc87c9181cc1d39548db3d31627f0""><code>8b3d7ba</code></a> 2023.05.07</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/53da2405b1af430f6bafa21ba45d8dd8dfc726b8""><code>53da240</code></a> ci: Add Python 3.12-dev to the testing (<a href=""https://redirect.github.com/certifi/python-certifi/issues/224"">#224</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/c2fc3b1f64d6946f1057971ee897ea828ae848d8""><code>c2fc3b1</code></a> Create a Security Policy (<a href=""https://redirect.github.com/certifi/python-certifi/issues/222"">#222</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/c211ef482a01aff5f1bc92c4128bfa0c955f4a01""><code>c211ef4</code></a> Set up permissions to github workflows (<a href=""https://redirect.github.com/certifi/python-certifi/issues/218"">#218</a>)</li>; <li><a href=""https://github.com/c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2205:965,depend,dependabot,965,https://qutip.org,https://github.com/qutip/qutip/pull/2205,1,['depend'],['dependabot']
Integrability,"Bumps [ipython](https://github.com/ipython/ipython) from 7.22.0 to 7.31.1.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ipython/ipython/commit/e321e760a4aefbe872e1703b24a19a28f87619c9""><code>e321e76</code></a> release 7.31.1</li>; <li><a href=""https://github.com/ipython/ipython/commit/67ca2b3aa9039438e6f80e3fccca556f26100b4d""><code>67ca2b3</code></a> Merge pull request from GHSA-pq7m-3gw7-gq5x</li>; <li><a href=""https://github.com/ipython/ipython/commit/27943302db129464b33bae8cb6cfa552b52b46c2""><code>2794330</code></a> back to dev</li>; <li><a href=""https://github.com/ipython/ipython/commit/be343e755af76193909f13027d87561b1765b5ae""><code>be343e7</code></a> release 7.31.0</li>; <li><a href=""https://github.com/ipython/ipython/commit/0fcf2c43facb7ba5144cdcc47118aa1e55085c20""><code>0fcf2c4</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13428"">#13428</a> from meeseeksmachine/auto-backport-of-pr-13427-on-7.x</li>; <li><a href=""https://github.com/ipython/ipython/commit/b8db9b1371fff1b89d0f058e19a48a4ca7b93c51""><code>b8db9b1</code></a> Backport PR <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13427"">#13427</a>: wn 731</li>; <li><a href=""https://github.com/ipython/ipython/commit/7f253dcf7b1c3a791a98d44b0dfc848d62bd27df""><code>7f253dc</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13412"">#13412</a> from bnavigator/backport-inspect</li>; <li><a href=""https://github.com/ipython/ipython/commit/4f26796cf368d24edadbb3d62e052e6aa4ddc820""><code>4f26796</code></a> fix xxlimited_35 import name</li>; <li><a href=""https://github.com/ipython/ipython/commit/77ca4a6312374f0659fb6973925e5b696d5dc74e""><code>77ca4a6</code></a> don't run nose-based iptest on py310, only pytest</li>; <li><a href=""https://github.com/ipython/ipython/commit/533e5094aa36b51549cf6a316fc439c6404643c9""><code>533e509</code></a> back to decorator skip</li>; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780:893,depend,dependabot,893,https://qutip.org,https://github.com/qutip/qutip/pull/1780,1,['depend'],['dependabot']
Integrability,"Bumps [ipython](https://github.com/ipython/ipython) from 7.31.1 to 8.10.0.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ipython/ipython/commit/15ea1ed5a886d6c19c1cc4856f2cf04a2a547c57""><code>15ea1ed</code></a> release 8.10.0</li>; <li><a href=""https://github.com/ipython/ipython/commit/560ad109197c0f8373865896af369bb3b36fd229""><code>560ad10</code></a> DOC: Update what's new for 8.10 (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13939"">#13939</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/7557ade0ed927475d5ab5b573d0ea4febfb22683""><code>7557ade</code></a> DOC: Update what's new for 8.10</li>; <li><a href=""https://github.com/ipython/ipython/commit/385d69325319a5972ee9b5983638e3617f21cb1f""><code>385d693</code></a> Merge pull request from GHSA-29gw-9793-fvw7</li>; <li><a href=""https://github.com/ipython/ipython/commit/e548ee23ac460a99901f1cd43b94ae84a35ec393""><code>e548ee2</code></a> Swallow potential exceptions from showtraceback() (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13934"">#13934</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/0694b08b436203817059ec7e7136cf8561a6f013""><code>0694b08</code></a> MAINT: mock slowest test. (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13885"">#13885</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/865591252a67c6907fe03228b4053305715286e6""><code>8655912</code></a> MAINT: mock slowest test.</li>; <li><a href=""https://github.com/ipython/ipython/commit/a011765b44febfb11bae122d2ed7db763621ac8f""><code>a011765</code></a> Isolate the attack tests with setUp and tearDown methods</li>; <li><a href=""https://github.com/ipython/ipython/commit/c7a9470e540392c575aac46c3ee5cf4fe5123eb1""><code>c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085:452,depend,dependabot,452,https://qutip.org,https://github.com/qutip/qutip/pull/2085,1,['depend'],['dependabot']
Integrability,"Bumps [pillow](https://github.com/python-pillow/Pillow) from 8.2.0 to 8.3.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>8.3.2</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html</a></p>; <h2>Security</h2>; <ul>; <li>; <p>CVE-2021-23437 Raise ValueError if color specifier is too long; [hugovk, radarhere]</p>; </li>; <li>; <p>Fix 6-byte OOB read in FliDecode; [wiredfool]</p>; </li>; </ul>; <h2>Python 3.10 wheels</h2>; <ul>; <li>Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</li>; </ul>; <h2>Fixed regressions</h2>; <ul>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle removing orientation from alternate types of EXIF dat",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:719,depend,dependabot,719,https://qutip.org,https://github.com/qutip/qutip/pull/1654,2,['depend'],['dependabot']
Integrability,"Bumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>9.0.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Restrict builtins for ImageMath.eval() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Ensure JpegImagePlugin stops at the end of a truncated file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed ImagePath.Path array handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed redundant part of condition <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5915"">#5915</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Explicitly enable strip chopping for large uncompressed TIFFs <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5517"">#5517</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Use the Windows method to get TCL functions on Cygwin <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5807"">#5807</a> [<a href=""https://github.com/DWesl""><code>@​DWesl</code></a>]</li>; <li>Changed error",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:515,depend,dependabot,515,https://qutip.org,https://github.com/qutip/qutip/pull/1760,3,['depend'],['dependabot']
Integrability,"Bumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>9.0.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>In show_file, use os.remove to remove temporary images. CVE-2022-24303 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6010"">#6010</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>, <a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Restrict builtins within lambdas for ImageMath.eval. CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6009"">#6009</a> [radarhere]</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.0.1 (2022-02-03)</h2>; <ul>; <li>; <p>In show_file, use os.remove to remove temporary images. CVE-2022-24303 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6010"">#6010</a>; [radarhere, hugovk]</p>; </li>; <li>; <p>Restrict builtins within lambdas for ImageMath.eval. CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6009"">#6009</a>; [radarhere]</p>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6deac9e3a23caffbfdd75c00d3f0a1cd36cdbd5d""><code>6deac9e</code></a> 9.0.1 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c04d812b902356b8c20ee2ab881e1d96f7d66b4b""><code>c04d812</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:547,depend,dependabot,547,https://qutip.org,https://github.com/qutip/qutip/pull/1835,2,['depend'],['dependabot']
Integrability,"Bumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.1 to 9.3.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>9.3.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/9.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Initialize libtiff buffer when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit SAMPLESPERPIXEL to avoid runtime DOS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a> [<a href=""https://github.com/wiredfool""><code>@​wiredfool</code></a>]</li>; <li>Inline fname2char to fix memory leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>GHA: replace deprecated set-output command with GITHUB_OUTPUT file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6697"">#6697</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Upload fribidi.dll to GitHub Acti",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:514,depend,dependabot,514,https://qutip.org,https://github.com/qutip/qutip/pull/2023,3,['depend'],['dependabot']
Integrability,"But again, we use runtime code generation for the time-dependent stuff. Cython is in every Python dist, so I see little in the way of having that as a requirement. Getting a compiler is also trivial on every supposed platform.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/580#issuecomment-271109100:55,depend,dependent,55,https://qutip.org,https://github.com/qutip/qutip/issues/580#issuecomment-271109100,1,['depend'],['dependent']
Integrability,"By installing qutip via. pip2 install qutip==4.3.1. (I had another problem with qutip 4.4.1 with the python2.7 interpreter) I ran into a problem with cython - several ""Error compiling Cython file"" messages. Here I have cython v. 0.23.4 and the minimum requirement is displayed as 0.21. I guess this minimum requirement should be changed",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1129:197,message,messages,197,https://qutip.org,https://github.com/qutip/qutip/issues/1129,1,['message'],['messages']
Integrability,"By the way, if you're organising your next major release right now, I wouldn't wait for us before you release it - we certainly won't define any interface until at least QuTiP 5.0, and we don't expect to even be in the first alpha until around September.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830021551:145,interface,interface,145,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830021551,1,['interface'],['interface']
Integrability,Calling a QobjEvo with array time dependence uses a different interpolation from passing the QobjEvo to a solver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2063:34,depend,dependence,34,https://qutip.org,https://github.com/qutip/qutip/issues/2063,1,['depend'],['dependence']
Integrability,"Can you please say something about result.photocurrent? I can see it contains all the jumps from all the trajectories, but what is the meaning of the value associated with each jump? It believe it goes down when I increase the number of trajectories or timesteps, so I think it is perhaps dividing by those numbers? But I don't know what else it might depend on. Thanks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2539#issuecomment-2400213467:352,depend,depend,352,https://qutip.org,https://github.com/qutip/qutip/issues/2539#issuecomment-2400213467,1,['depend'],['depend']
Integrability,Cannot use arrays for time-dependent control fields,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932:27,depend,dependent,27,https://qutip.org,https://github.com/qutip/qutip/issues/932,1,['depend'],['dependent']
Integrability,Catch and raise the error message of the subprocess. **Description**; See https://github.com/qutip/qutip/issues/1426#issuecomment-770080582. **Related issues or PRs**; This should fix #1426 . **Changelog**; Improve the error message of circuit plotting,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1427:26,message,message,26,https://qutip.org,https://github.com/qutip/qutip/pull/1427,2,['message'],['message']
Integrability,"Change `bloch_redfield_tensor` to be an equivalent to the `liouvillian` function.; As the former, it is now placed in core and support the both constant and time-dependant systems. (Removing the need for `br_codegen.py`). Previously, `bloch_redfield_tensor` returned the tensor in the frame where the Hamiltonian was diagonalized, now it offer the option between returning the tensor in that frame of the the lab frame. The function `brterm` as been added as the equivalent to `lindblad_dissipator`, it compute the contribution of one `a_op` of a bloch Redfielf tensor. The last user facing addition is `SpectraCoefficient`, it transform a coefficient of `t` to one of `w`. The coupling with the environment include a frequency response function which, in `brmesolve`, could be a function, string or `Cubic_Spline`, thus a `Coefficient`, but with a `w` input. `SpectraCoefficient` is to have interpolation based coefficient take the `w` input. . `QobjEvo` created by `brterm` use a custom element: `_BlochRedfieldElement` to allow faster matmul with a state. Since the operator in computed in a basis and the state is in another, having `matmul` change the state basis is usually faster than changing the operator basis. Each `_BlochRedfieldElement` of a `QobjEvo` share a `_EigenBasisTransform`, the object that does the Hamiltonian diagonalization at each call. It would be nice to support to computation of the tensor using `Data`. but it would require `ndarray.__mul__` equivalent to the dispatched function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1651:162,depend,dependant,162,https://qutip.org,https://github.com/qutip/qutip/pull/1651,1,['depend'],['dependant']
Integrability,Closing this for now. Will get back with a new PR implementing a time-dependent implementation as well as general spectral densities for the HEOM method.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/793#issuecomment-384165413:70,depend,dependent,70,https://qutip.org,https://github.com/qutip/qutip/pull/793#issuecomment-384165413,1,['depend'],['dependent']
Integrability,"Coming soon! I did more digging and modified the sphinx_rtd_theme to add this warning message. ![screenshot 2019-02-27 17 11 28](https://user-images.githubusercontent.com/6968324/53504756-d003a400-3ab2-11e9-9578-87761dddfce2.png). @ajgpitch At this moment, do we rebuild the old docs or add this message manually to them? . Also, for the future docs, how are we going to make sure that everytime we make a new release, the old documentation gets this warning message? Maybe we make some release-documentation notes similar to the release notes, and add this as one of the steps. When you build new documentation, you also have to rebuild the older version and change the conf.py file to include the warning message. I poked around a bit and could change the sphinx_rtd_theme so that we can have something like . ```; version = 4.2; is_latest = False; ```. and the documentation inserts this message based on this value.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1516#issuecomment-468017470:86,message,message,86,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-468017470,5,['message'],['message']
Integrability,Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; [ 1/31] Cythonizing qutip/core/_brtools.pyx; [ 2/31] Cythonizing qutip/core/cy/coefficient.pyx; [ 3/31] Cythonizing qutip/core/cy/math.pyx; [ 4/31] Cythonizing qutip/core/data/add.pyx; [ 5/31] Cythonizing qutip/core/data/base.pyx; [ 6/31] Cythonizing qutip/core/data/csr.pyx; [ 7/31] Cythonizing qutip/core/data/dense.pyx; [ 8/31] Cythonizing qutip/core/data/dia.pyx; [ 9/31] Cythonizing qutip/core/data/dispatch.pyx; [10/31] Cythonizing qutip/core/data/matmul.pyx; [11/31] Cythonizing qutip/core/data/mul.pyx; [12/31] Cythonizing qutip/core/data/norm.pyx; [13/31] Cythonizing qutip/core/data/permute.pyx; [14/31] Cythonizing qutip/core/data/ptrace.pyx; [15/31] Cythonizing qutip/core/data/reshape.pyx; [16/31] Cythonizing qutip/core/data/tidyup.pyx;,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:9252,depend,depends,9252,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"Compute the projector of a ket or bra Qobj via Q.proj(). This routine is ~3x faster than doing the outer product explicitly, and does not need a temp matrix.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/760:62,rout,routine,62,https://qutip.org,https://github.com/qutip/qutip/pull/760,1,['rout'],['routine']
Integrability,"Consider the following code:. ```; import qutip; import matplotlib.pyplot as plt. b = qutip.Bloch(); b.show(); ```. When run in a Jupyter notebook, as per the tutorial on http://qutip.org/docs/latest/guide/guide-bloch.html, the Bloch sphere is immediately displayed in the cell output. However, nothing is displayed (no matplotlib window opens) when this code is run as a standalone script from the terminal, or even in IPython. For this, an additional call to `plt.show()` is required. I understand how this behaviour could be useful when moving code that has been developed in a notebook into a standalone script, as `plt.show()` is a blocking command. However, I still see this as inconsistent as we get distinctly different results depending on where the code is being run. If this is indeed intentional behaviour, might I suggest a note in the tutorial/API documentation? At present, there is no way to tell that this is what happens and if this is consistent. (It is possible that this is specific to my OS/environment, so I can provide those details if necessary)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1182:736,depend,depending,736,https://qutip.org,https://github.com/qutip/qutip/issues/1182,1,['depend'],['depending']
Integrability,"Consider the following example:; ~~~; >>> import qutip; >>> from qutip.operators import *; >>> import numpy as np; >>> ket = (qutip.tensor(qutip.ket('0'), qutip.ket('0')) - 1j * qutip.tensor(qutip.ket('1'), qutip.ket('1')))/np.sqrt(2); >>> rho = qutip.ket2dm(ket); >>> H = qutip.tensor(sigmaz(), identity(2)) + qutip.tensor(identity(2), sigmaz()); >>> c_ops = [qutip.tensor(sigmam(), identity(2)), qutip.tensor(identity(2), sigmam())]; >>> L = qutip.superoperator.liouvillian(H, c_ops=c_ops); ~~~. Now, it seems very sensible to want to apply the superoperator to the density matrix via a simple product. However, this fails:; ~~~; >>> L * rho; Traceback (most recent call last):; File ""<ipython-input-50-c0fe3dea3c39>"", line 1, in <module>; L * rho; File ""/Users/goerz/anaconda3/lib/python3.5/site-packages/qutip/qobj.py"", line 515, in __mul__; raise TypeError(""Incompatible Qobj shapes""); TypeError: Incompatible Qobj shapes; ~~~. The only way to do it seems to be:. ~~~; >>> qutip.vector_to_operator(L * qutip.operator_to_vector(rho)); Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[-1.0+0.j 0.0+0.j 0.0+0.j 2.0-0.5j]; [ 0.0+0.j 0.5+0.j 0.0+0.j 0.0+0.j ]; [ 0.0+0.j 0.0+0.j 0.5+0.j 0.0+0.j ]; [ 2.0+0.5j 0.0+0.j 0.0+0.j 0.0+0.j ]]; ~~~. I would argue that the product `L * rho` should do this kind of conversion internally instead of throwing an exception. It seems to me the intention of `L * rho` is completely unambiguous, but maybe I'm missing something?. Having the product work out of the box means that I can write a simple propagation routine as `(A * dt).expm() * state` and it would work independent of whether (A, state) are a (Hamiltonian, vector) or a (Liouvillian, density matrix). Currently, I have to catch the different cases and handle them separately.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/939:1599,rout,routine,1599,https://qutip.org,https://github.com/qutip/qutip/issues/939,1,['rout'],['routine']
Integrability,Consider using pytest xdist in continuous integration,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1267:42,integrat,integration,42,https://qutip.org,https://github.com/qutip/qutip/issues/1267,1,['integrat'],['integration']
Integrability,"Continuing the work of #1164 - this is part two of many more to come, depending on how long I can keep doing this! Of particular note is the first commit in this PR, which registers `pytest.mark.slow` with `pytest` to stop it warning about an unknown mark in use. There are several additional comments and explanations in the expanded commit messages, where I've tried to explain a little bit about bugs I found and reasons for swapping over to certain libraries (e.g. for temporary file handling). I'm in part opening a new PR now so that I can see if the CodeClimate tests are passing. I shouldn't have many pep8 issues because I have a tool to check, but I don't have CodeClimate working locally for things like the complexity (if it even checks them for tests...). I've been really rather aggressively using the parametrisation that `pytest` offers for fixtures, which is cutting out an awful lot of code duplication, and hopefully making it a bit clearer when things are exactly the same. One common theme I'm finding when I'm running these tests is that there's an awful lot of warnings caused by `pyximport`, a part of `Cython`, which is using the Python 2 era `imp` instead of the newer `importlib`. I'm not sure there's anything we can or should do about this, though.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181:70,depend,depending,70,https://qutip.org,https://github.com/qutip/qutip/pull/1181,2,"['depend', 'message']","['depending', 'messages']"
Integrability,"Continuous integration software: Travis CI, CirceCI, etc.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/959:11,integrat,integration,11,https://qutip.org,https://github.com/qutip/qutip/issues/959,1,['integrat'],['integration']
Integrability,Control - time dependent drift,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/506:15,depend,dependent,15,https://qutip.org,https://github.com/qutip/qutip/pull/506,1,['depend'],['dependent']
Integrability,Convert superop-contract tutorial to v5,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2266:16,contract,contract,16,https://qutip.org,https://github.com/qutip/qutip/issues/2266,1,['contract'],['contract']
Integrability,"Copying here the message of the failed build, as I cannot find the message of the successful one in the build history (since it refers to the same PR, it looks like it was not kept). . ```; QuTiP Version: 4.4.0.dev0+109c09d; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: None; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.4.0.dev0+109c09d-py3.7-macosx-10.7-x86_64.egg/qutip; ```; from https://travis-ci.org/qutip/qutip/builds/521534881",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/961#issuecomment-484740433:17,message,message,17,https://qutip.org,https://github.com/qutip/qutip/pull/961#issuecomment-484740433,2,['message'],['message']
Integrability,Correlation functions produce incorrect results with multiple time dependant functions,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1048:67,depend,dependant,67,https://qutip.org,https://github.com/qutip/qutip/issues/1048,1,['depend'],['dependant']
Integrability,Correlation support time dependent c_ops,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1979:25,depend,dependent,25,https://qutip.org,https://github.com/qutip/qutip/pull/1979,1,['depend'],['dependent']
Integrability,"Could you comment on the difference between. ```; qt.tensor_contract(qt.to_super(qt.cnot()), (1, 3)) * s_prep; ```. and. ```; s_prep.dag() * qt.to_super(qt.cnot()) * s_prep; ```. ? These does not give the same results, and I'm not saying that they should, I just wonder about the physical interpretation doing a tensor contraction on a superoperator. Can it be thought of as a projection on the superoperator level, in analogy to projecting an operator using something like `P.dag() * O * P` ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/268#issuecomment-65368470:319,contract,contraction,319,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65368470,1,['contract'],['contraction']
Integrability,Could you please post the code snippet and the traceback of the error message ? Thank you.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/682#issuecomment-292698585:70,message,message,70,https://qutip.org,https://github.com/qutip/qutip/issues/682#issuecomment-292698585,1,['message'],['message']
Integrability,"Currently QuTiP solvers are pure batch jobs. One calls a function, e.g. `mesolve`, which then runs until the state has been propagated to all requested time steps and then the function returns the result. There are a variety of use cases where having access to results as they are calculated can be useful:. * Implementing a progress bar; * Limiting how long a solver runs for; * Stopping a solver early if a steady state or other desired or undesired state is detected.; * Implementing adaptive solvers where parameters are changed depending on the current state. We're currently refactoring the QuTiP solvers for QuTiP v5, so perhaps now is a good time to consider whether this feature will see enough use to be worth the effort. Implementation options:. * The solver could call a `callback function` each time a new result becomes available.; * The solver could `yield` each time a new result becomes available.; * The solver could do something asynchronous (I think this is not worth supporting natively in QuTiP -- either of the others would allow something asynchronous to be implemented by a QuTiP users themselves if they wanted). Probably these are not mutually exclusive. To make porting easier, it should still be possible to call some solve function without a callback or yielding as one can do now. Related issues:. * qucontrol/krotov#93",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571:533,depend,depending,533,https://qutip.org,https://github.com/qutip/qutip/issues/1571,1,['depend'],['depending']
Integrability,"Currently, trying to convert a Qobj to a numpy array with `np.array(qobj)` does not work the way I would expect:. ~~~; >>> import numpy as np; >>> import qutip; >>> a = np.random.random((10, 10)); >>> A = qutip.Qobj(a); >>> b = np.array(A); >>> b.shape; (); ~~~. What it does is it handles `A` like it would a scalar.; ~~~; >>> np.array(1).shape; (); ~~~. I generally think of a `Qobj` as ""array-like"", and thus I would expect `np.array(A)` to be equivalent to `np.array(A.full())` (or just `A.full()` directly). ~~~; >>> b = np.array(A.full()); >>> b.shape; (10, 10); ~~~. The reason why I'd want `np.array(A)` to work is that it makes it much easier to write code that works for any array-like types (see https://stackoverflow.com/questions/40378427/numpy-formal-definition-of-array-like-objects). I'm thinking of routines like this:; https://github.com/qucontrol/weylchamber/blob/9a7607363901034da5aca3abb1c4fae7b15db940/src/weylchamber/cartan_decomposition.py#L11 that are intended to accept quantum gates in a wide range of formats. For now, I have to catch `Qobj` explicitly:; https://github.com/qucontrol/weylchamber/blob/9a7607363901034da5aca3abb1c4fae7b15db940/src/weylchamber/cartan_decomposition.py#L41. If I'm not mistaken, the only thing required is to define an `__array__` method on `Qobj` that returns `self.full()`. I thought that the idea would probably have come up when `full()` was implemented, so I'm wondering if there was a conscious design decision not to implement an array interface, and what the reasoning was (if any).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/938:816,rout,routines,816,https://qutip.org,https://github.com/qutip/qutip/issues/938,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,Cython error with time dependent Hamiltonian on Win10,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1026:23,depend,dependent,23,https://qutip.org,https://github.com/qutip/qutip/issues/1026,1,['depend'],['dependent']
Integrability,"Dear @Coxious, thanks for opening the issue. At the moment, I can see only a method to return the propagators for a given quantum circuit in [qutip.qip.circuit](https://github.com/qutip/qutip/blob/master/qutip/qip/circuit.py#L892). I am guessing that you would be interested in implementing something there to return the full time dependent Hamiltonian for the circuit and then use mesolve to simulate this Hamiltonian with some collapse operators?. If you have any prototype code, please do share and we can discuss more. @nwlambert and @ajgpitch are on board with this too and this seems very relevant.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-460813617:331,depend,dependent,331,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-460813617,1,['depend'],['dependent']
Integrability,"Dear @Ericgig,. I have a problem with interrupting calculation of sesolve with time dependent Hamiltonian. It just doesn't stop and shows this:. > ---------------------------------------------------------------------------; > KeyboardInterrupt Traceback (most recent call last); > //miniconda3/lib/python3.7/site-packages/qutip-4.5.0.dev0-py3.7-macosx-10.7-x86_64.egg/qutip/qobjevo.py in __call__(self, t, args); > 1639 self.args[name] = op.expect(t, state); > 1640 ; > -> 1641 def __call__(self, t, args=None):; > 1642 if args:; > 1643 now_args = self.args.copy(); > ; > KeyboardInterrupt: ; > ; > Exception ignored in: 'qutip.cy.cqobjevo.CQobjEvo._factor'; > Traceback (most recent call last):; > File ""//miniconda3/lib/python3.7/site-packages/qutip-4.5.0.dev0-py3.7-macosx-10.7-x86_64.egg/qutip/qobjevo.py"", line 1641, in __call__; > def __call__(self, t, args=None):; > KeyboardInterrupt. Any idea what can cause this problem?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1081:84,depend,dependent,84,https://qutip.org,https://github.com/qutip/qutip/issues/1081,1,['depend'],['dependent']
Integrability,"Dear @hodgestar and @AGaliciaMartinez , I have made the changes as Simon suggested -- modified the `add_arc` and `add_line` function to include `Qobj` inputs. By default, have set the arc to be solid blue and the line segment to be solid black, which the user can change as per their wish. Also, have removed the dependency of `add-arc` on `add_points`. Have also included `plot_arc` and have updated `plot_line`. ; Whenever you guys find time, please review the code. Below, I am attaching an image containing a variety of ways we can now change the appearance of arcs and lines. The code used is:. ```; b = Bloch( fig= None, figsize=[10,10]). ... b.add_line([x,y,z],[z,x,y],'m--') ; b.add_line([x,y,z],[y,z,x],'r') ; b.add_line([z,x,y],[y,z,x]). b.add_arc([0.5,0,0],[0,.5,0]); b.add_arc([1,0,0],[0,1,0],'r'); b.add_arc([0,0,1], [1,0,0],'g:'); b.add_arc([0,1,0],[0,0,1],'y--'). b.add_arc([x,y,z],[z,x,y]) ; b.add_arc([x,y,z],[y,z,x]) ; b.add_arc([z,x,y],[y,z,x]) ; ```; where `[x,y,z] = [1/np.sqrt(2), 1/np.sqrt(2), 0]`; ![qutip_bloch](https://user-images.githubusercontent.com/33507538/145733327-80f71c48-7401-4e06-a55e-9cd0378c66b4.png)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1690#issuecomment-991988829:313,depend,dependency,313,https://qutip.org,https://github.com/qutip/qutip/pull/1690#issuecomment-991988829,1,['depend'],['dependency']
Integrability,"Dear @spmvg, It could be interesting to look into implementing something along this line in QuTiP, even a small snippet. Or looking into possible integrations with [QuSpin](https://github.com/weinbe58/QuSpin) and [OpenFermion](https://github.com/quantumlib/OpenFermion), which implement fermionic commutation relations, although generally looking at other applications. If you develop on this, please feel free to get in touch. Cheers, Nathan",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/863#issuecomment-394585029:146,integrat,integrations,146,https://qutip.org,https://github.com/qutip/qutip/issues/863#issuecomment-394585029,1,['integrat'],['integrations']
Integrability,"Dear Alex, this can be reviwed by you. I implemented your single line; comments (I thought pep8 recommends wrapping top level functions with two; newlines but I understand that it's just for new classes). In addition, I; changed some bits and added some more tests to make the test coverage 92%. On Tue 6 Mar, 2018, 7:38 PM Alexander Pitchford, <notifications@github.com>; wrote:. > Are we ready for me to check this again?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/753#issuecomment-370738864>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBASWPWSKscWoJuJ4YyVn3xeC9jlrks5tbmcfgaJpZM4PgbIo>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-370741295:107,wrap,wrapping,107,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-370741295,1,['wrap'],['wrapping']
Integrability,"Dear Everyone,. Thanks for the great job with Qutip package. I am amazed by the package and how various models and techniques are implemented on it. . I have been using the time-dependent bloch-redfield solver lately and the runtime is superb when I convert all the Hamiltonian and the collapse operators to string format, and use the solver option reuse_rhs=True. I really wish I could run sweeps over the bath parameters while still retaining the original Hamiltonian without having to recompile it. It would be nice if you could extend the scope of args so that bath parameters could also be passed as arguments of the call. . The second issue is that the cython file that the brmesolver creates is missing the import scypi.spe, that is the special functions from Scipy. One needs to add the following lines to the BR_codegen:. import scipy.special as spe; cimport scipy.special as spe",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1366:178,depend,dependent,178,https://qutip.org,https://github.com/qutip/qutip/issues/1366,1,['depend'],['dependent']
Integrability,"Dear Qutip admin,. Thank you for your fast reply. I tried the above method. However, it doesn't work. It gives me an error message saying that ""Time list does not match"". Here is one sample on how I applied it. import qutip; import numpy as np; options = qutip.Options(); options.nsteps = 100000; hamiltonian = qutip.sigmax(); args = {'omega':1000}; timelist = np.linspace(0, 1, 1000); omegatlist = np.cos(args['omega']*timelist); H = qutip.QobjEvo([qutip.sigmax(),[qutip.sigmax(),omegatlist]], tlist=1000); state = qutip.basis(2, 0).proj(); times = np.linspace(0, 1, 2); qutip.mesolve(H,state,times,[],qutip.sigmax(),args=args,options=options). Although in the above, I used an analytic function for my Hamiltonian, actually my real Hamiltonian is a time-dependent non-analytic function which has to be represented by an array. Your comment on how to solve the problem associated with the above code will be much appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-808615925:123,message,message,123,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-808615925,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"Dear Qutip admin,. Thank you for your fast reply. Unfortunately, my hamiltonian is a time-dependent function which is nonanalytic. So I need to use a large number of tgrid (on the order of 1000000 grid size) for my hamiltonian. Is there a way that you can add a feature to mesolve so that it can store only the final_state without storing the states at all time even for the case where my tlist has a large grid size. Or is there a way for mesolve to evaluate the expectation operator at the final time only without having to evaluate it at all time?. Your help will be well appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-808459933:90,depend,dependent,90,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-808459933,1,['depend'],['dependent']
Integrability,"Dear all,. I'm trying to install the latest release of QuTip on Ubuntu system. Since; our workstation hasn't been connected to internet, I; downloaded Anaconda3-2019.03-Linux-x86_64 and qutip-4.3.1.tar, and attempt; to install from source code. Firstly I successfully installed Anaconda with the command:; bash ~/Downloads/Anaconda3-2019.03-Linux-x86_64.sh. Then in the conda environment I typed the command:; python setup.py install. I get the following error message:. gcc -pthread -B /home/pz/anaconda3/compiler_compat -Wl,--sysroot=/; -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -Iqutip/cy; -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; -I/home/pz/anaconda3/include/python3.7m -c qutip/cy/spmatfuncs.cpp -o; build/temp.linux-x86_64-3.7/qutip/cy/spmatfuncs.o -w -O3 -march=native; -funroll-loops; gcc: error trying to exec 'cc1plus': execvp: No such file or directory; error: command 'gcc' failed with exit status 1. It seems the gcc compiler isn't correctly located? Or what else problem. I checked the gcc version on the workstation:; gcc --version; gcc (Ubuntu 8.3.0-6ubuntu1~18.10) 8.3.0; Copyright (C) 2018 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. whereis gcc; gcc: /usr/bin/gcc /usr/lib/gcc /usr/share/man/man1/gcc.1.gz. How can I direct the installer to find the gcc compiler?. Thanks!; Best regards, Pu Zhang; --; Faculty at School of Physics, Huazhong University of Science and Technology; Room 819 (N.), Yifu Science and Technology Building; 1037 Luoyu Road, Wuhan, China; E-mail: puzhang0702@hust.edu.cn <puzha@fotonik.dtu.dk>; Homepage: www.researchgate.net/profile/Pu_Zhang4; Phone: +86 18871860394",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-501605757:461,message,message,461,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-501605757,1,['message'],['message']
Integrability,"Dear ladies and gentlemen,; Is it possible to calculate expactation values of time-dependent operators (using, for example, mesolve)?; I do not know how to evaluate <psi | O(t) | psi>, where O(t) is time-dependent and psi is the solution of the Schroedinger equation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/930:83,depend,dependent,83,https://qutip.org,https://github.com/qutip/qutip/pull/930,4,['depend'],['dependent']
Integrability,"Dear qutip admin,. I have a question related to the question about mesolve returning only final state. Here, I would like to ask how to save only the propagator matrix at the final time from qutip.propagator without saving the propagator matrix at all time steps? If I followed the method given in the previous thread titled ""mesolve returning only final state"", the method does not work. Basically if I declared H as QobjEvo and use it in qutip.propagator, I got the following error message ""Invalid time-dependent format"". Any idea how to rectify this problem? Below is the code. import qutip; import numpy as np. fast_ts = np.linspace(0, 1, 1001); omegalist = 2.91e2*fast_ts; fast_xs = 2.9e3*np.pi * np.cos(2*np.pi * omegalist * fast_ts). H = qutip.QobjEvo([[qutip.sigmax(), fast_xs]], tlist=fast_ts); rho = qutip.basis(2, 0).proj(); times = np.array([0., 1]). e_ops = [qutip.sigmay()]; options = qutip.Options(nsteps=10_000_000, atol=1e-14, rtol=1e-12). two_times = qutip.mesolve(H, rho, times, e_ops=e_ops, options=options); many_times = qutip.mesolve(H, rho, fast_ts, e_ops=e_ops, options=options). U = qutip.propagator(H, times, [], options=options); print(U[1]*rho)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1482:484,message,message,484,https://qutip.org,https://github.com/qutip/qutip/issues/1482,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"Dear qutip developers,. In the documentation of version 4.5 the c_ops argument is said to support callback functions, however they are not implemented in that version and as far as I can tell neither in the current branch. It would be nice to have this feature added to allow for arbitrary time-dependent Lindbladians to be implemented. There are cases where Lindbladians cannot simply be described as the product of a time-dependent scalar and a time-independent Lindbladian, this is where the callback becomes useful. I envisage a single callback passed to c_ops as being useful, where the user has to manually add multiple decoherence channels. This way, arbitrary data can be passed through the args parameter of the callback to build the operators at a given time step. I believe this would also allow channel cross-correlations to be implemented too. I have hacked my local copy of qutip 4.5 to check this can in principle be done with mesolve, and it has worked. Here is a link to a patch file that shows the changes I made to get this working:; https://pastebin.com/iZCgBbNQ. I am happy to add this functionality properly to a clone and make a pull request.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1254:295,depend,dependent,295,https://qutip.org,https://github.com/qutip/qutip/issues/1254,2,['depend'],['dependent']
Integrability,"Deleting the pycache and running nosetests gives the following warning messages; ```; /Users/nathanshammah/miniconda3/envs/qutip44/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjCte size changed, may indicate binary incompatibility. Expected 344 from C header, got 352 from PyObject; return f(*args, **kwds); /Users/nathanshammah/miniconda3/envs/qutip44/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvoTd size changed, may indicate binary incompatibility. Expected 560 from C header, got 568 from PyObject; return f(*args, **kwds); /Users/nathanshammah/miniconda3/envs/qutip44/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvoTdMatched size changed, may indicate binary incompatibility. Expected 1344 from C header, got 1352 from PyObject; return f(*args, **kwds); /Users/nathanshammah/miniconda3/envs/qutip44/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo_factor.CoeffFunc size changed, may indicate binary incompatibility. Expected 32 from C header, got 40 from PyObject; return f(*args, **kwds); /Users/nathanshammah/miniconda3/envs/qutip44/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo_factor.StrCoeff size changed, may indicate binary incompatibility. Expected 40 from C header, got 488 from PyObject; return f(*args, **kwds); /Users/nathanshammah/miniconda3/envs/qutip44/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjEvo size changed, may indicate binary incompatibility. Expected 288 from C header, got 296 from PyObject; return f(*args, **kwds); /Users/nathanshammah/miniconda3/envs/qutip44/lib/python3.7/importlib/_bootstrap.py:219: RuntimeWarning: qutip.cy.cqobjevo.CQobjCteDense size changed, may indicate binary incompatibility. Expected 496 from C header, got 504 from PyObject; return f(*args, **kwds); /Users/nathanshammah/miniconda3/envs/qutip44/lib/python3.7/importlib/_bootstrap",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496378866:71,message,messages,71,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496378866,1,['message'],['messages']
Integrability,Dependency conflict on ubuntu 20.04,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:0,Depend,Dependency,0,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['Depend'],['Dependency']
Integrability,"Dicke class does not support list based time-dependent Hamiltonian.; But if the Hamiltonian is a `QobjEvo`, it should work: `qutip.piqs.Dicke(N, hamiltonian=qutip.QobjEvo(H_td), emission=...)`; Otherwise you can use the Dicke class to compute the dissipation part and use `mesolve`:; ```; dicke = qutip.piqs.Dicke(N, hamiltonian=None, emission=...); qutip.mesolve(H_td, ..., c_ops =dicke.liouvillian()); ```; For more help, please use the google groupe: https://groups.google.com/g/qutip.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1928#issuecomment-1153908260:45,depend,dependent,45,https://qutip.org,https://github.com/qutip/qutip/issues/1928#issuecomment-1153908260,1,['depend'],['dependent']
Integrability,"Different platforms have some subtle differences in how multiprocessing works: On linux, processes ""fork"". My basic understanding is that sub-processes are created as copies of the parent process, thus inheriting their entire state (global variables/functions). Windows, and [macOS with Python >= 3.8](https://twitter.com/raymondh/status/1180209729609420800) uses ""spawn"". There, I believe subprocesses start from blank slate, and relevant global state is injected via IPC. Sadly, limitations of the pickle protocol can cause ""spawn""-based multiprocessing to have problems. Jupyter notebooks are affected by this: you cannot use multiprocessing-map using functions defined within the notebook. . Within qutip, this definitely affects the `parallel_map` function: It currently will cause freezes on Windows (See https://qucontrol.github.io/krotov/v1.0.0/notebooks/08_example_ensemble.html). With Python 3.8, macOS is also affected by this. See https://github.com/qutip/qutip-notebooks/issues/100. One possible workaround is to use a third-party replacement for multiprocessing. An work-in-progress implementation of this is in https://github.com/qutip/qutip/pull/1092, using [loky](https://loky.readthedocs.io). In #1197, we also identified a freeze in `mcsolve` when running tests on macOS/Python 3.8. This is suspected to be an issue with spawn-based multiprocessing, although we haven't been able to determine this with complete confidence. If the freeze is indeed caused by spawn-multiprocessing, the problem *should* also show up on Windows. Is anyone running Windows able to reproduce this?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1202:456,inject,injected,456,https://qutip.org,https://github.com/qutip/qutip/issues/1202,2,"['inject', 'protocol']","['injected', 'protocol']"
Integrability,"Directly in VS code. My launch.json looks like; ```json; 	""version"": ""0.2.0"",; 	""configurations"": [; 		{; 			""name"": ""Python: Current File"",; 			""type"": ""python"",; 			""request"": ""launch"",; 			""program"": ""${file}"",; 			""console"": ""integratedTerminal""; 		}; 	]; }; ```; When using the plt.show() command, the second window only appears after a b.render() command, but thats also necessary for any vectors I want to draw to appear.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616#issuecomment-883458011:230,integrat,integratedTerminal,230,https://qutip.org,https://github.com/qutip/qutip/issues/1616#issuecomment-883458011,1,['integrat'],['integratedTerminal']
Integrability,Docstring change to the `qutip.about()` message.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1122:40,message,message,40,https://qutip.org,https://github.com/qutip/qutip/pull/1122,1,['message'],['message']
Integrability,Documentation builds looks good. Thank you @dependabot. *botsnack*,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767#issuecomment-1016299366:44,depend,dependabot,44,https://qutip.org,https://github.com/qutip/qutip/pull/1767#issuecomment-1016299366,1,['depend'],['dependabot']
Integrability,ENH : Time-Dependent Bloch-Redfield Solver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/676:11,Depend,Dependent,11,https://qutip.org,https://github.com/qutip/qutip/pull/676,1,['Depend'],['Dependent']
Integrability,ENH: Qtrl time depend ctrl dyn gen,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/716:15,depend,depend,15,https://qutip.org,https://github.com/qutip/qutip/pull/716,1,['depend'],['depend']
Integrability,ENH: Remove dnorm cvxpy dependence,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874:24,depend,dependence,24,https://qutip.org,https://github.com/qutip/qutip/issues/874,1,['depend'],['dependence']
Integrability,ENH: Use openmp in time-dependent BR solver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/706:24,depend,dependent,24,https://qutip.org,https://github.com/qutip/qutip/pull/706,1,['depend'],['dependent']
Integrability,"Error message:; ```; ../anaconda/lib/python3.4/site-packages/qutip/bloch3d.py"", line 115, in __init__; raise Exception(""This function requires the mayavi module.""); ```; It seems that we cannot use python3 and mayavi at the same time. Anyone has similar issues?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/671:6,message,message,6,https://qutip.org,https://github.com/qutip/qutip/issues/671,1,['message'],['message']
Integrability,"Every routine that uses multiple processes has a kwarg to change the number and if this is not set then it falls back on qutip.settings.num_cpus which is set in **init**.py. On May 2, 2014, at 1:04 PM, Robert Johansson notifications@github.com wrote:. > You can use it to select number of processes to use, right? I think it is useful if you don't want to use all processors for a calculation, although I usually use the .qutiprc configuration file for this rather than environment variables. I guess it is not really necessary but could be useful I guess.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/119#issuecomment-41985338:6,rout,routine,6,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41985338,1,['rout'],['routine']
Integrability,"Except for setting the type of the `Qobj` (which is deleted at the end of `Qobj.__init__`), there's no need for the 'mc' or 'mc-dm' fast-paths to exist in `Qobj.__init__` at all, even in `master`. If we were to fix the handling of a passed `type` - nothing else is overwritten if passed explicitly - you could achieve all the same effects at approximately the same speed with correct application of the kwargs, such as; ```python; Qobj(data, dims=dims, copy=False, type='oper', isherm=...); ```; providing `data` is actually of a valid (`fast_csr_matrix`) format. Technically the `Qobj.data` attribute will be a new object that wraps the same numpy arrays as was passed, rather than the same `fast_csr_matrix`. In various forms, `expect` already does check the Hermicity, that's why `mc-dm` is careful to set it to avoid recalculating it. The expect functions in `qutip.expect` do this directly, and aren't aware of column-stacked density matrices - they'll just raise a TypeError. `mesolve` and `mcsolve` now bypass the `Qobj` stage and go direct to Cython - in 5.0 it might not be a terrible idea to route everything back through the `Qobj` form, since the performance issues there are solved (a column-stacked dense matrix can be directly wrapped by an f-ordered `Dense` type), and it's the natural central point of the code (and those parts are called from Python-space anyway, so no C concerns). Here though, the problem is actually that the expectation generator in `mesolve` correctly calculates the dtype of the output expectation array using both the state and the expectation operator, but then it does it incorrectly in the loop, and passes the hermicity down to Cython using only the expectation operator, which promptly throws out the complex part. So setting `fast='mc-dm'` in `Qobj` is a symptom of the same root cause as the problem here, rather than the cause itself. At the start of `mesolve` we don't assume that the state is Hermitian, but then inside the integration loop we do. W",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1460#issuecomment-796835048:628,wrap,wraps,628,https://qutip.org,https://github.com/qutip/qutip/issues/1460#issuecomment-796835048,1,['wrap'],['wraps']
Integrability,Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1623:15,integrat,integration,15,https://qutip.org,https://github.com/qutip/qutip/issues/1623,1,['integrat'],['integration']
Integrability,Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/806:15,integrat,integration,15,https://qutip.org,https://github.com/qutip/qutip/issues/806,2,['integrat'],['integration']
Integrability,Failure in doc builds was `ipython 8.10.0 depends on prompt-toolkit<3.1.0 and >=3.0.30` so we likely just need to bump the version of prompt-toolkit.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085#issuecomment-1426687909:42,depend,depends,42,https://qutip.org,https://github.com/qutip/qutip/pull/2085#issuecomment-1426687909,1,['depend'],['depends']
Integrability,Faster routine to compute inner products. About 30x faster than previous versions.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/763:7,rout,routine,7,https://qutip.org,https://github.com/qutip/qutip/pull/763,1,['rout'],['routine']
Integrability,"Finally, `Qobj` can use any backing data store. This fairly small and simple PR is effectively the culmination of all the work on `dev.major` over the last few months, and effectively is just like flicking a switch to turn on all the capabilities that we've built up through #1282, #1296, #1332, #1338 and #1341. There is still a lot of work to be done, but I'm trying to transition to smaller, easier-to-check PRs to make review easier. Possibly incomplete to do list:; - write a proper `data.create`; - possibly add the dispatchers in as `data.Data` mathematical methods (e.g. `__matmul__`); - add options for controlling default output types from the dispatchers; - tests for `Qobj` with both types; - tests for creation and property routines of the data layer; - tests for the dispatch operation; - tests for conversion operations; - more specialisations to be written for `Dense` and `CSR`/`Dense`; - more ergonomic selection of _method_, not just output type (for example, you should be able to specify you want the `Dense` specialisation of `eigs` even if you pass it a `CSR`); - more ergonomic dispatchers for matrix creation (e.g. how exactly will `qutip.basis` function, and how will users add specialisations?); - documentation, both user-facing and developer-facing; - fix algorithms in `add_csr` and `matmul_csr` to use `csr.Accumulator` (should provide a speedup and remove some sorts); - fix `isherm_csr` (see #1350 - `isherm_csr` uses the same algorithm, so has the same problem)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1351:737,rout,routines,737,https://qutip.org,https://github.com/qutip/qutip/pull/1351,1,['rout'],['routines']
Integrability,"Finding the full power spectrum given a time-dependent Hamiltonian usually requires a 2-sided power spectrum. For convenience, it would be useful to be able to access this data in a properly ordered array. Additionally, the majority of literature regarding cavity optomechanics uses a positive e^(i w t) Fourier convention. Passing a simple boolean parameter to this function would allow for the use of scipy's ifft function, scaled by the number of elements.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/821:45,depend,dependent,45,https://qutip.org,https://github.com/qutip/qutip/pull/821,1,['depend'],['dependent']
Integrability,"First of all I'm glad you could get it to run under OSX. Which OpenCL environment are you using?; - Is the failure of `test_mcsolve_cl_time_dep_h` reproducible?; - You can probably ignore the compiler warning. I assume it is related to the pragma statement. Some OpenCL implementations refuse to work without it, others give you a warning that it is unnecessary. Maybe we can omit the statement based on the platform version and hide some warning, but that would require more testing (on different platforms). At the moment there is a lot of debug information to ease testing.; - The AttributeError you get is something I have not encountered yet. If you do consider merging this branch, it is a good idea to get more people involved in testing. The code has not been reviewed and probably contains some bugs. The questions you raised concerning the maintainability are all valid. On top of that setting up OpenCL is somewhat troublesome, which makes `mcsolve_cl` a kind of experimental feature. Ultimately it is up to the maintainers of qutip to decide whether such a feature should be included. The advantage `mcsolve_cl` has over `mcsolve_f90` is that it supports some time-dependence and introduces no build dependencies. If, for some reason `mcsolve_cl` does not work, the user can always fall back to `mcsolve`. By the way, is it wise to rebase this branch all the time or only when necessary?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/554#issuecomment-260134503:1177,depend,dependence,1177,https://qutip.org,https://github.com/qutip/qutip/pull/554#issuecomment-260134503,2,['depend'],"['dependence', 'dependencies']"
Integrability,"Firstly, just to underline @jakelishman comment. We *cannot* change the public interface unless we make a new major release. I also don't like the `.N` property, but it snuck in before my time. We could look to change this in v.5, but not before. . It seems this PR does contain some enhancements that are not part of #1209. However, @mlaguna10 did seem to make quite clear that they were already working on the issue. I believe #1209 is ready to merge, but we'll wait for @BoxiLi to confirm. . So what I suggest is that we merge #1209. @MartinSandeCosta can then merge the master into this PR and see what is left that adds to enhancement request outlined #1208. Assuming (with good reason) that there are valuable additions, then we will merge this too. Thanks everyone for contributing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1212#issuecomment-605881345:79,interface,interface,79,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-605881345,1,['interface'],['interface']
Integrability,Fix `brmsolve` time-dependent a_ops detection,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2541:20,depend,dependent,20,https://qutip.org,https://github.com/qutip/qutip/pull/2541,1,['depend'],['dependent']
Integrability,Fix bug in `IntergratorScipyZvode` when starting integration at time other than `0`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1880:49,integrat,integration,49,https://qutip.org,https://github.com/qutip/qutip/pull/1880,1,['integrat'],['integration']
Integrability,Fix bugs in QobjEvo's args depending on state and added solver tests using them.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1127:27,depend,depending,27,https://qutip.org,https://github.com/qutip/qutip/pull/1127,1,['depend'],['depending']
Integrability,Fix for Qtrl Qobj integration,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/401:18,integrat,integration,18,https://qutip.org,https://github.com/qutip/qutip/pull/401,1,['integrat'],['integration']
Integrability,"Fix misleading documentation which said that `c_ops` could be a callback function. It currently cannot, though all functionality that could be achieved through that can be emulated by passing a callback function returning the full time-dependent Liouvillian as the `H` parameter. See #1254, fixes #1260.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1261:236,depend,dependent,236,https://qutip.org,https://github.com/qutip/qutip/pull/1261,1,['depend'],['dependent']
Integrability,Fix typos in docs for time-dependent Hamiltonians,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1936:27,depend,dependent,27,https://qutip.org,https://github.com/qutip/qutip/pull/1936,1,['depend'],['dependent']
Integrability,"Fixed some causes of travis tests not succeeding. In particular e303b0e fixes use of `round` in the function `_td_wrap_array_str` in rhs_generate.py. This function uses `round` to get an integer number that is then passed as an array index. Since `round` returns a float, this causes the deprecation warning ""DeprecationWarning: using a non-integer number instead of an integer will result in an error in the future"". I therefore wrapped the call to `round` with a call to `int`. The travis tests now pass succesfully for this pull request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/404#issuecomment-162598230:430,wrap,wrapped,430,https://qutip.org,https://github.com/qutip/qutip/pull/404#issuecomment-162598230,1,['wrap'],['wrapped']
Integrability,Floquet rates integration,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1961:14,integrat,integration,14,https://qutip.org,https://github.com/qutip/qutip/pull/1961,1,['integrat'],['integration']
Integrability,Floquet using v5's Solver interface,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2034:26,interface,interface,26,https://qutip.org,https://github.com/qutip/qutip/pull/2034,1,['interface'],['interface']
Integrability,"For 3 I meant to point that `c_ops` can be complex time-dependent systems by using 3 layers of list in its definition. We only test for list in this situation, but having the last layer as a tuple should work in `mesolve`. Tuple are not tested for nested time dependent system anywhere. If they give a different result, it's probably the wrong one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2065#issuecomment-1410542360:56,depend,dependent,56,https://qutip.org,https://github.com/qutip/qutip/issues/2065#issuecomment-1410542360,2,['depend'],['dependent']
Integrability,"For clarity: I ran your code with 1,000 timesteps and 10,000 timesteps and found a linalg norm difference in the outputs of 4.4e-4 (compared to QuTiP's 6.5e-8), which is what I meant. I considered that difference ""not fully convergent"" in part because QuTiP's default tolerance goals have an absolute tolerance of ~1e-8 (that's per-element, not the full norm). Here's a couple more things to look at:; - if you're using QuTiP objects without our solvers like this, we tidy up sparse matrices at every operation. You probably don't want that - you might get different results if you convert your RK method to work on raw Numpy arrays.; - your RHS isn't accurate - it takes `sqrt(gamma)`, but your time-dependent function already does that. This is perhaps a mistake, and very likely the source of the discrepancy? Also, while it's irrelevant here, your Lindbladian has `c_op * c_op.dag() * rho` as the last term, but it should be `c_op.dag() * c_op * rho`.; - your RK method isn't using updated versions of the Hamiltonian or the collapse operator at the intermediate timesteps.; - you say you're using RK45, but you've only got 4 different evaluations? That looks like an RK4 method to me (not that it should matter).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986723762:701,depend,dependent,701,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986723762,1,['depend'],['dependent']
Integrability,"For jax, the issue is with `isherm`, not the casting. We cannot call it in jitted functions since they cannot branch depending on the input data. The casting itself cause issues with tensorflow. The `isherm_jax` could be set to always return `False`, but returning `False` only inside jitted function is too hacky and could break with jax release. When applied everywhere, it will have strange side effect such as `qeye(n) *2` is hermitian but `qeye(n)+qeye(n)` is not. Don't want that. If the `Qobj` are always the inputs of the function, then we could probably compute the hermiticity in `qobj_tree_flatten`, but it would not be any help when the object is build inside the function. I am somewhat at a lost of idea other than that... I see a helper function like `qutip_jax.set_as_default()` that would set all the settings for the user for the session in one go. Not have them manually updated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2329#issuecomment-1953261235:117,depend,depending,117,https://qutip.org,https://github.com/qutip/qutip/pull/2329#issuecomment-1953261235,1,['depend'],['depending']
Integrability,"For large matrices (`dim > ~500`), the dense matrix dot product is still a pretty large cost, but you're still saving a fair amount. That said, at that kind of dimension, the analytical formula may do you well enough. If you want derivatives wrt alpha, you should be able to get analytic ones from my method - there's no ""black box"" numerical work that goes on in `__call__`, everything is just matrix multiplication. Given that it appears non-linearly in a possibly large multiplication, though, and I would imagine the derivatives are pretty smooth, you may well just be faster just numerically approximating it with finite differences (I don't know anything about autodifferentiation). If you're so inclined, you can sacrifice some speed for higher accuracy in the eigenvector calculations, as we can find the eigenvalues semi-analytically. There are a few places in numpy and scipy that can find the roots of the Hermite polynomials for you (i.e. get the eigenvalues), which will be found exactly wrt double precision (I believe). You can then call out to the LAPACK routine `dstein` to get the eigenvectors from the eigenvalues. `dstein` is slower than `dstemr`/`dsteqr` (which is what scipy uses, I think), but it allows us to supply the eigenvalues, removing some numerical error. I didn't test that very thoroughly though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1293#issuecomment-646100632:1071,rout,routine,1071,https://qutip.org,https://github.com/qutip/qutip/issues/1293#issuecomment-646100632,1,['rout'],['routine']
Integrability,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:1173,depend,depend,1173,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776,1,['depend'],['depend']
Integrability,"For v5, to use time dependent `c_ops`, you would need to make the `QobjEvo` first:; ```; c_ops = [QobjEvo(op, tlist=t) for op in c_ops]; ```; and pass `tlist=t` to the propagator function. `H` taking list format but `c_ops` only prebuild `QobjEvo` is bad design. We will fix. But for the spline times, I believe it's better to keep it independent on the output times. It is useful be able to have different times for the output and input pulse sampling. So I improve the documentation for that issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2532#issuecomment-2400426686:20,depend,dependent,20,https://qutip.org,https://github.com/qutip/qutip/issues/2532#issuecomment-2400426686,1,['depend'],['dependent']
Integrability,"Formally you need to check U*U.dag and U.dag*U. There is a more optimal way of doing this by slighly modifying the zcsr_mult routine, but may not be worth the effort.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/817#issuecomment-364167424:125,rout,routine,125,https://qutip.org,https://github.com/qutip/qutip/pull/817#issuecomment-364167424,1,['rout'],['routine']
Integrability,"Further notes: in numpy 1.20 defining `__array__` breaks `np.asarray`, except in the case where the user explicitly defines `np.asarray([qutip.qeye(2)], dtype=object)`. This is actually a very very common function in numpy operations; things like `np.shape` or `np.all` implicitly call `np.asarray` _without_ a `dtype`, which will result in a `TypeError`:; ```python; >>> import qutip; >>> import numpy as np; >>> np.all([qutip.qeye(2)]); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<__array_function__ internals>"", line 5, in all; File ""/Users/jake/.anaconda3/anaconda3/envs/qutip-dev/lib/python3.9/site-packages/numpy/core/fromnumeric.py"", line 2411, in all; return _wrapreduction(a, np.logical_and, 'all', axis, None, out, keepdims=keepdims); File ""/Users/jake/.anaconda3/anaconda3/envs/qutip-dev/lib/python3.9/site-packages/numpy/core/fromnumeric.py"", line 87, in _wrapreduction; return ufunc.reduce(obj, axis, dtype, out, **passkwargs); TypeError: must be real number, not Qobj; ```. I think we may be able to get around this with a suitable definition of `Qobj.__array_function__`, though I am a little worried that we'll keep turning up these knock-on effects of `Qobj.__array__`. One major problem is that I'm not sure how we'll define `__array_function__` to satisfy this case, without having to manually disable every single numpy function. We can't have `np.asarray()` not work on `Qobj` because that would break parity with `np.array(qobj)`, however we also can't implicitly convert ourselves to an array if we're in a nested sequence, because then `np.all([qobj])` will pretty much always be false; it will have implicitly become an element-wise operation, even though the user _probably_ meant to check if every object in the array was not the zero operator. This isn't just `np.all`, it's also `np.shape`, `np.any`, and several more that make up the non-ufunc interface of numpy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-778512258:1910,interface,interface,1910,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-778512258,1,['interface'],['interface']
Integrability,"GB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/82541b6dec8452cb612067fcebba1c5a1a2bfdc8""><code>82541b6</code></a> 9.0.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cae5ac495badd7c7ecfad8223a08f55f5d2eaacb""><code>cae5ac4</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5924"">#5924</a> from radarhere/cves</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/ed4cf7813777ad8478cac46f448bc45416a2a99e""><code>ed4cf78</code></a> CVEs TBD</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d7f60d1d5a746eb01d4cb3c7fb05b6593f46b0f5""><code>d7f60d1</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a> from radarhere/imagemath_eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8531b01d6cdf0b70f256f93092caa2a5d91afc11""><code>8531b01</code></a> Restrict builtins for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1efb1d9fabd1dfdbf7982035eca0dae7306abef1""><code>1efb1d9</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5922"">#5922</a> from radarhere/releasenotes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f6c78713a491764dfac576f6c42127755f2c62b3""><code>f6c7871</code></a> Added release notes for <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> and <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a></li>; <li><a href=""https://github.com",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:14109,depend,dependabot,14109,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"GES</li>; <li><a href=""https://github.com/pygments/pygments/commit/ef0abbaece522732031d61391567c017d48d87b7""><code>ef0abba</code></a> Add PostgreSQL Explain lexer (<a href=""https://redirect.github.com/pygments/pygments/issues/2398"">#2398</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/3c6e2af8fbc44bb1ef77389d09118c37faea8746""><code>3c6e2af</code></a> Update CHANGES</li>; <li>Additional commits viewable in <a href=""https://github.com/pygments/pygments/compare/2.14.0...2.15.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:14311,depend,dependabot,14311,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['depend'],['dependabot']
Integrability,"General comment about plotting on the Bloch sphere:. QuTiP currently supports drawing either ""points"" or ""vectors"" (i.e. arrows). Both are specified as `(x, y, z)` coordinates and these are *not* required to lie on the surface of the sphere. Lying outside the sphere is perhaps a bit odd, but lying inside the sphere is a common occurrence -- e.g. when plotting sub-components of a density matrix. There is a method `add_states` that converts states into `(x, y, z)` coordinates and adds them as either points or vectors as requested. I would thus recommend being able to specify lines and arcs using either `(x, y, z)` coordinates or states and not introducing spherical coordinates right now. I'm not against duplicating some of the functionality of `add_points(..., meth=""l"")` in the new functions we add here. For one, the `meth=""l""` is not particular intuitive when looking for a function to draw lines, and, secondly, it doesn't provide particularly flexible styling. My vote is to keep the old method interfaces fairly consistent with how they are now so as not to disrupt existing uses (adding some new optional parameters or tweaking things to look better is fine), and to add a couple of new methods. Let's try not to make the internals of `Bloch` more messy though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1685#issuecomment-934332552:1008,interface,interfaces,1008,https://qutip.org,https://github.com/qutip/qutip/pull/1685#issuecomment-934332552,1,['interface'],['interfaces']
Integrability,Generate time-dependent Hamiltonian for given quantum circuit,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946:14,depend,dependent,14,https://qutip.org,https://github.com/qutip/qutip/issues/946,1,['depend'],['dependent']
Integrability,Gitter integration for QuTiP,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/564:7,integrat,integration,7,https://qutip.org,https://github.com/qutip/qutip/issues/564,1,['integrat'],['integration']
Integrability,Give better warning message when $HOME not defined,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/366:20,message,message,20,https://qutip.org,https://github.com/qutip/qutip/pull/366,1,['message'],['message']
Integrability,Going to merge this now so that I can start to embed it into the time-dependent stuff.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/517#issuecomment-242631394:70,depend,dependent,70,https://qutip.org,https://github.com/qutip/qutip/pull/517#issuecomment-242631394,1,['depend'],['dependent']
Integrability,"Good points. I suggest to simply remove the comment in `test_qobj`, and change to pytest in the `setup.py`. Something like what's [here](https://doc.pytest.org/en/3.0.4/goodpractices.html#integrating-with-setuptools-python-setup-py-test-pytest-runner) should work (basically changing `nose` with `pytest`). It seems however that testing it's a thorny [issue](https://github.com/pypa/setuptools/issues/1684), but these changes for the time being make the whole package at least consistent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1161#issuecomment-576003587:188,integrat,integrating-with-setuptools-python-setup-py-test-pytest-runner,188,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576003587,1,['integrat'],['integrating-with-setuptools-python-setup-py-test-pytest-runner']
Integrability,"Good to hear that it is working. There are classical nonlinear systems where the state can reach different limit cycles depending on the initial state. I have not investigated any of these in the quantum regime, and I not think that limit cycles would satisfy the steady state formula. So, in short, I have not seen or heard of multiple steady states.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/556#issuecomment-259241227:120,depend,depending,120,https://qutip.org,https://github.com/qutip/qutip/issues/556#issuecomment-259241227,1,['depend'],['depending']
Integrability,"Hahaha, thanks! One of the earlier things I did on Qiskit was to get the docs building with current Sphinx (4, at the time) too - we had found a couple of bugs in extensions that I then patched, and we needed to be on latest Sphinx to use them. You'll be ahead of us if you're up to Sphinx 6 - we still have a UI toolkit dependency that limits us (unnecessarily) to Sphinx 5 right now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2149#issuecomment-1494605382:321,depend,dependency,321,https://qutip.org,https://github.com/qutip/qutip/pull/2149#issuecomment-1494605382,1,['depend'],['dependency']
Integrability,"Half related to this, what do you think about having data-layer's data _mostly_ immutable? We could ignore the tracking of copies of the states, which are sometime done by the integrator or solver (normalization in `Solver._restore_state` ?). There are some gains to work in-place: stochastic evolution is 30% faster inplace. But I see ways around it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1907#issuecomment-1141474154:176,integrat,integrator,176,https://qutip.org,https://github.com/qutip/qutip/pull/1907#issuecomment-1141474154,1,['integrat'],['integrator']
Integrability,"Having `Qobj * matrix` work at the moment is to make it easier to transition to the 5.x branch when it releases, since it's the current behaviour of 4.x. Once we've had a bit of time for people to make the transition, I think we should be completely removing this ""functionality"". To me, matrices aren't quantum objects; if you're working with a Numpy array, you should expect Numpy semantics to occur, i.e. Numpy should see `Qobj` as a scalar type, and broadcast against it like that. It's an implementation detail that the backing data is a matrix; the linear algebra theory certainly doesn't demand it. Raising-and-catching is slower than just having the `mul` functions return `NotImplemented`. The only implementations that would need a wrapper are our Cython-based ones, and they can both be wrapped in something like; ```python; class only_allow_numeric:; def __init__(self, inner):; self.inner = inner; def __call__(self, other):; if not isinstance(other, numbers.Number):; return NotImplemented; return self.inner(complex(other)); ; mul.add_specialisations([; (CSR, CSR, only_allow_numeric(mul_csr)),; (Dense, Dense, only_allow_numeric(mul_dense)),; ]); ```. I'm generally fine with `Variable * Qobj` only working sometimes; I think the general intent is that you'd configure the dispatchers to only allow TensorFlow data output, so it would always work for you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1611#issuecomment-880850027:742,wrap,wrapper,742,https://qutip.org,https://github.com/qutip/qutip/pull/1611#issuecomment-880850027,2,['wrap'],"['wrapped', 'wrapper']"
Integrability,"Having any callable as a time-dependent components is good but the way here breaks the tests.; Moving the callable check after the check for `Cublic_Spline`, should fix the problem. `Cublic_Spline` is callable but not treated as a function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1107#issuecomment-543197728:30,depend,dependent,30,https://qutip.org,https://github.com/qutip/qutip/pull/1107#issuecomment-543197728,1,['depend'],['dependent']
Integrability,"Hello Harsh,. Thank for your interest in qutip. The most efficient way for us to interact with code is through Github.; Please attempt a draft PR for this. There are many test functions in our; project that you can use as a template. Assuming that you are interested in GSoC, when assessing candidates, an; ability to work independently is a key criteria. All the best with it, we look forward to reviewing your PR. Alex. On Tue, 21 Mar 2023, 18:06 Harsh Khilawala, ***@***.***>; wrote:. > @Ericgig <https://github.com/Ericgig> Thanks for getting back to me. I; > will refer to pytest tutorials on web but I found some code lines like; > following:; >; > @pytest.mark.parametrize; > @check_pngs_equal; > @pytest.fixture; > @pytest.mark.repeat(10)...; >; > Can you please let me know when and why were these used? Is there a; > resource also for this one?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/2127#issuecomment-1478364599>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ACGFP3MUPPBWDTOQGGBNOTLW5HU2ZANCNFSM6AAAAAAV7J6OKU>; > .; > You are receiving this because you are subscribed to this thread.Message; > ID: ***@***.***>; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2127#issuecomment-1478682804:1182,Message,Message,1182,https://qutip.org,https://github.com/qutip/qutip/pull/2127#issuecomment-1478682804,1,['Message'],['Message']
Integrability,"Hello! I'm trying to use the steadystate solver. When not using MKL, my program runs (albeit a bit slow). When using MKL, I get the following error message. I have tried to figure it out myself, to no avail. Traceback (most recent call last):; File ""cubicH_quantumPump_loop.py"", line 54, in <module>; rho = steadystate(H, c_ops); File ""/home/ingrid/anaconda3/lib/python3.6/site-packages/qutip/steadystate.py"", line 234, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""/home/ingrid/anaconda3/lib/python3.6/site-packages/qutip/steadystate.py"", line 400, in _steadystate_direct_sparse; v = mkl_spsolve(L, b, perm = in_perm, verbose = ss_args['verbose']); File ""/home/ingrid/anaconda3/lib/python3.6/site-packages/qutip/_mkl/spsolve.py"", line 384, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""/home/ingrid/anaconda3/lib/python3.6/site-packages/qutip/_mkl/spsolve.py"", line 167, in solve; raise Exception(pardiso_error_msgs[str(error)]); KeyError: '[-4]'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/791:148,message,message,148,https://qutip.org,https://github.com/qutip/qutip/issues/791,1,['message'],['message']
Integrability,"Hello,. I have a time dependent hamiltionian with a simple polynomial function, whose gradient I find using Numpy's gradient function. I also specify the step size that the gradient function should use. However, when passing the function and its gradient to Qutips mesolve function, i get the error:. ValueError: Shape of array too small to calculate a numerical gradient, at least (edge_order + 1) elements are required. I think this is because usually you would pass the whole array of time which Numpy would calculate the gradient of, but in the case of mesolve in qutip, we are passing a float instead of an array, i.e. calculating 1 time point which numpy cannot use.; I need the gradient function and its step size, rather than using the analytical gradient as a simply function due to the simulations I am trying to make. I would appreciate any and all insight into this problem, thank you. ```python; import scipy as sp; import numpy; from qutip import *; import matplotlib.pyplot as plt. # pre define transport functions (time dependent functions for use in hamiltonian); def q_c(t,t_f,d): #position of ion; return d*(10*(t/t_f)**3 - 15*(t/t_f)**4 + 6*(t/t_f)**5). def grad_q_c(t,t_f,step,d): #velocity; return np.gradient(q_c(t,t_f,d),step). def grad2_q_c(t,t_f,step,d): #acceleration; return np.gradient(grad_q_c(t,t_f,step,d),step). def q_0(t,args): #position of trap (harmonic well); '''; t: time step; t_f: final time (total time); step: step size for gradient function; d: total distance of transport'''; t_f,step,d = args['t_f'],args['step'],args['d']; return grad2_q_c(t,t_f,step,d)/(w_z**2) + q_c(t,t_f,d). def q_02(t,args): #position of trap; t_f,step,d = args['t_f'],args['step'],args['d']; return (grad2_q_c(t,t_f,step,d)/(w_z**2) + q_c(t,t_f,d))**2. # set up initial conditions and parameters for ion; N = 200 # hilbert space dimension ; w = 2 * pi * 200e3 # angulr frequency of oscillator (Hz); m = 171 * 1.66e-27 # mass of ion (kg); hbar = 1 # reduced plancks constant (eVs) . ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1834:22,depend,dependent,22,https://qutip.org,https://github.com/qutip/qutip/issues/1834,1,['depend'],['dependent']
Integrability,"Hello,. I'm using qutip alongside another library, which does something like this:; ```py; import logging; logger = logging.getLogger(); logger.setLevel(logging.DEBUG); ```; Im not entirely sure why it does so, but nevertheless debug messages don't show up anywhere, since the root logger doesn't print anything without it being configured. If you run the above code in Ipython but add `import qutip` before it, `logging.debug(""foo"")` prints to the stderr (without qutip it doesn't). So when I started using the library with qutip, suddenly all debug messages started getting printed to stderr. Apparently, this is somewhat on purpose, by looking at the code [here](https://github.com/qutip/qutip/blob/eff1c3a606cad64b8d16f3232181b0463d65d746/qutip/logging_utils.py#L99). I'm not entirely sure what tho think about that, because as shown above this causes something unexpected. Nevertheless, I thought I could work around this by setting `log_handler = ""null""` in my settings file, but that in turn causes qutip to crash, because the rc loader [expects](https://github.com/qutip/qutip/blob/eff1c3a606cad64b8d16f3232181b0463d65d746/qutip/configrc.py#L97) `log_handler` to be a boolean for some reason. Also, it took me a while to find this, since the `log_handler` option is [not documented](http://qutip.org/docs/latest/guide/guide-settings.html?highlight=log). I'm using python 3.7.4 and QuTiP 4.4.1 installed with pip.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1156:234,message,messages,234,https://qutip.org,https://github.com/qutip/qutip/issues/1156,2,['message'],['messages']
Integrability,"Hello,; I'm the Lead developer of [netket](https://github.com/netket/netket), a jax-based framework for using Machine-Learning techiques to study quantum systems (open and closed). We are finalising the next release and as I am a big fan of extensibility, I would like our two frameworks to coexist and provide a sensible, easy api to work together.; Mainly, what I would like to do is provide an easy-to-use no-documentation-needed to convert NetKet's types to Qutip, so that it becomes easy to use it to check our variational calculations. TLDR: I propose creating and documenting a `__qobj__` interface so that arbitrary objects having this method will support conversion to a QuTiP Qobj. --. NetKet has mainly three types that are concerned: hilbert spaces, operators and variational states. ; Hilbert spaces describe the space every object is defined upon, and can be easily converted to your `dims` format. Operators are used to represent operators and super-operators acting on hilbert spaces. We use a very custom format roughly corresponding to a lazy kronecker product. Those object satisfy the numpy `__array__` interface and can be converted by calling `np.array(netket_operator)` or `np.asarray(netket_operator)`. We can also obtain sparse representations (but there is no nice api to do that, so we simply provide a method `netket_operator.to_sparse()`. Variational states can also be converted to vectors or matrices (kets and density operators) as they also support the `__array__` interface. I would like our users to be able to call `Qobj(netket_operator)` or `Qobj(netket_state)` and obtain the corresponding qutip object. We could, in principle support a `netket_operator.to_qobj()` conversion method, but I am strongly opposed to that as this is an ugly design pattern: a way to construct a `Qobj` already exists, it's `Qobj(...)`, and the simplest-to-use api is, in my opinion, to overload this constructor to perform the conversion.; This is a standard design pattern in Julia, ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508:596,interface,interface,596,https://qutip.org,https://github.com/qutip/qutip/issues/1508,1,['interface'],['interface']
Integrability,"Hello. I am currently running a simulation with `mesolve` (yet the same error occurs with `sesolve`) with a slow perturbation, such that close to zero the Hamiltonian is very close to zero (the perturbation is a thin Gaussian distribution). When I run `mesolve`, instead of running my time-dependent coefficients for the values in `tlist` (where in this case I had 250 times in `tlist`), **QuTiP** uses about 20 seemingly random time values, some of which are not even in `tlist`. . I believe this error is stemming from the Hamiltonian changing extremely slowly and being close to zero for a long period of time. This is because **QuTiP** began working normally when I added the constant 0.00001 to my time-dependent coefficient. Is there a bug here, or is there something I am missing about small-frame limits of the software?. An example piece of code that reproduces this error is below.; ```python; import numpy as np; import qutip as qt. def StandardGaussianPi(t):; def gauss_distr(x, sigma, mu):; return np.exp(-((x - mu)/sigma)**2 / 2) / (sigma * np.sqrt(2 * np.pi)); return np.pi * gauss_distr(t, 2, 20). def run_experiment(waveform, tlist, a):; def coeff_1(t, args):; print(t); return -1/2 * waveform(t) * -1; coeff_2 = lambda t, args: coeff_1(t, args) * np.sqrt(2) * np.cos(a * t); coeff_3 = lambda t, args: coeff_1(t, args) * np.sqrt(2) * np.sin(a * t); hamiltonian = [[gm(1), coeff_1], [gm(6), coeff_2], [gm(7), coeff_3]]; initial_state = qt.basis(3, 0); e_ops = [gm(1), gm(2), gm(3)]; return qt.mesolve(hamiltonian, initial_state, tlist, None, e_ops).expect. run_experiment(StandardGaussianPi, np.linspace(0, 40, 250), -0.2); ```; The function `gm` was used to generate matrices. These matrices come from:; ```python; gell_mann = [[], [], [], [], [], [], [], []]. gell_mann[0] = np.array([[1, 0, 0], [0, 1, 0], [0, 0, 1]]) / np.sqrt(2 / 3); gell_mann[1] = np.array([[0, 1, 0], [1, 0, 0], [0, 0, 0]]); gell_mann[2] = np.array([[0, -1j, 0], [1j, 0, 0], [0, 0, 0]]); gell_mann[3] = np.array",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1638:290,depend,dependent,290,https://qutip.org,https://github.com/qutip/qutip/issues/1638,2,['depend'],['dependent']
Integrability,Help simulating time dependence with unitary decay operator,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1492:21,depend,dependence,21,https://qutip.org,https://github.com/qutip/qutip/issues/1492,1,['depend'],['dependence']
Integrability,"Here is [sesolve](https://github.com/Ericgig/qutip/blob/solver.integrator/qutip/solver/sesolve.py) using it. And here is the [base solver](https://github.com/Ericgig/qutip/blob/solver.integrator/qutip/solver/solver_base.py).; I planned to do the dimension check in the solver. So `Sesolve.step(t)` and will call will `Integrator.integrate` and build the `Qobj`.; Likewise `SeSolver.run` call `Integrator.run`, there the `Result` object create the `Qobj`. I want the solver to copy the state only if it stores it, not if it only compute the expectation values. ; All the physics, which I consider the dims check to be part of, is done at the `Solver` level. We also don't have a no dims `QobjEvo`. . I made the `Integrator` to focus more on the ODE mathematics, but the creation of `Qobj` is quite fast so I don't mind either ways for the input types, but the dims check will still be done at the `Solver` level, not `Integrator`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643#issuecomment-925137656:63,integrat,integrator,63,https://qutip.org,https://github.com/qutip/qutip/pull/1643#issuecomment-925137656,7,"['Integrat', 'integrat']","['Integrator', 'integrate', 'integrator']"
Integrability,"Here is a parallel version of the spmv_csr function that we use almost everywhere. I get quite a bit of speedup as the dimensionality of the system goes above ~500 or so states (depends on the problem though). Here is a plot of the speedup from serial for a spin-chain. ![parallel_spmv](https://cloud.githubusercontent.com/assets/1249193/14974780/82bc2754-10b6-11e6-94cb-35c046be5f97.png). It uses the openmp from cython so the GCC is required. On linux this is fine, but on OSX the GCC needs to come from homebrew or macports as the builtin clang does not support openmp. On Win, my guess is that the intel compiler could be used. Integrating this into the various solvers will be done in the next couple of days.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/470:178,depend,depends,178,https://qutip.org,https://github.com/qutip/qutip/pull/470,2,"['Integrat', 'depend']","['Integrating', 'depends']"
Integrability,"Hey Eric,. I've been working on improving the underlying structure of FLiMESolve and; making it more efficient. I haven't done another review request yet because; I want to try to address as many things as I can at once. I've been delayed; heavily by a system I'm trying to solve for my paper about this solver, on; which Simon has offered to help such that I'll hopefully be moving forward; again soon. Additionally, there are some changes I want to make that I'm; not sure how to do which I'm going to try to address with Simon when we are; able to meet next. Most of those are in regards to structural things, e.g.; how to filter input ""args"" arguments to pull out the frequency of the; Hamiltonian in the same manner as other solvers in QuTiP are able to filter; arguments. I've been trying to avoid submitting review requests/questions; in the PR comments too much so as not to be a bother. I have definitely not; abandoned this PR, and plan on seeing it through fully, although I; apologize for my relative lack of communication the last few weeks. Thanks!. On Mon, Aug 21, 2023, 11:29 AM Eric Giguère ***@***.***>; wrote:. > @magnamancer <https://github.com/magnamancer> are you waiting for review,; > still working on the PR or abandoned it?; >; > There are still issues I raised here and in magnamancer#4; > <https://github.com/magnamancer/qutip/pull/4>, that you have not been; > addressed and I am waiting for them before the next round of review.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/2186#issuecomment-1686550860>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AV5WL5GN3R6GPKYKYNOWSGDXWN5GDANCNFSM6AAAAAAZWI6GRQ>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1686607935:1771,Message,Message,1771,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1686607935,1,['Message'],['Message']
Integrability,"Hi @Ericgig , could you be a little more specific about what reworking the kwargs treatment would entail? Also if you could emphasize more concretely what you're looking for in updates to the notebooks and docs, that would be great. I do have some other observations.; 1. I do not get the KeyError message if I run the same jupyter notebook locally with the same versions of code as specified by version_table( ). I get another error instead, which actually seems more reasonable to me (something along the lines of 'use_precond' wasn't found in the keys of the dict, which clearly indicates that there's something off with the optional args thing).; 2. Also using mech_dms = np.asarray(mech_dms) fails, I think because it sees a Qobj instead of a real number.; 3. The direct patch to the KeyError mentioned above, based on my understanding of the code, would simply be to nest the assignment to 'max_iter_refine' in the 'info' dictionary inside a condition that checks if the solver is 'scipy'?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1017#issuecomment-539805676:298,message,message,298,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-539805676,1,['message'],['message']
Integrability,"Hi @Ericgig, @jakelishman,. Thanks very much for the very helpful replies! I will try these suggestions in my application Eric!. Jake, when you say the following:; > Oh of course, I had `mcsolve` in mind as to why that couldn't be done (and in that case, my interpolation wouldn't work either because of the separation of the decay channels)... Is it that, this:; ```; def L(t, args):; H = H(t, ...); c_op = C(H, t, ...); return qutip.liouvillian(H, [c_op]). mcsolve(L, ..., c_ops=[]); ```. won't work due to `_funcrhs` treating `h_func` as a Hamiltonian always? If this is the only factor (as far as I can see), then I think I can further hack this to make callbacks work for me locally. I'm not yet sure if the numpy arrays method will work here but this is what I will strive for. Some details of my plans: I am doing dynamics simulations of quantum annealing processes. We use a certain number of qubits (between 4 and 8) biased and coupled in certain ways to produce examples of 'difficult' problems for adiabatic quantum computation, where the instantaneous energy gaps can have very small minima during evolution. The resulting ODEs appear to be 'stiff' and long evolution times are required to observe high probabilities of being in the ground state. The combination of these things appears to make solving for long evolution times very time consuming. I observed a massive speedup using `mcsolve` however. What I wish to do is include various decay channels, which in the physical systems we use, we understand to be in the 'weak coupling limit' defined by T. Albash here:; https://arxiv.org/pdf/1503.08767.pdf. Another note: A number of colleagues have found most useful the RK45 method implemented in what I understand to be 'new' ode solver scipy code `scipy.integrate.solve_ivp`. I notice that the 'dopri5' option for `scipy.integrate.ode` is likely the same thing. This is something I will play with also.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1260#issuecomment-630067552:1771,integrat,integrate,1771,https://qutip.org,https://github.com/qutip/qutip/issues/1260#issuecomment-630067552,2,['integrat'],['integrate']
Integrability,"Hi @Phenix00, I could reproduce the issue and this looks like an issue of pip messing up the dependencies in the requirements for QuTiP. The workaround is to install numpy, cython and scipy manually before running pip install qutip. Please let me know if this works. Also, I am assuming the complete error message that you got was something like the error message below. Thank you for bringing this to notice.; ```; (qtest) air:qtest shahnawaz$ pip install qutip; Collecting qutip; Downloading qutip-4.1.0.tar.gz (1.9MB); 100% |████████████████████████████████| 1.9MB 523kB/s; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/private/var/folders/yp/zkfwkv252nl6jtzqy2_tt88m0000gn/T/pip-build-7Mg7bn/qutip/setup.py"", line 54, in <module>; from Cython.Build import cythonize; ImportError: No module named Cython.Build. ----------------------------------------; Command ""python setup.py egg_info"" failed with error code 1 in /private/var/folders/yp/zkfwkv252nl6jtzqy2_tt88m0000gn/T/pip-build-7Mg7bn/qutip/; ```; @ajgpitch ; I am looking into why this is happening and how it can be resolved. Relevant issues - https://github.com/h5py/h5py/issues/535, https://github.com/bayespy/bayespy/issues/14, https://github.com/pypa/pip/issues/988",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739#issuecomment-321727923:93,depend,dependencies,93,https://qutip.org,https://github.com/qutip/qutip/issues/739#issuecomment-321727923,3,"['depend', 'message']","['dependencies', 'message']"
Integrability,"Hi @VolodyaCO, thanks for reporting this!; I think the reason for `tlist` being overridden is because the result will be independent of `tlist` when the input is a steady-state. This can be seen in the following equations:; ![image](https://user-images.githubusercontent.com/57414022/121327018-5d313680-c913-11eb-9760-ca6004daca18.png); where rho is the initial state (`state0`) and H is the Hamiltonian of the system. I use the fact that rho is a steady-state to remove its temporal dependence. This derivation is simplified assuming unitary evolution (no collapse operators) but the same applies in the most general case where we include the collapse operators. This is my guess on why `tlist=[0]` is employed when using `state0=None`: the result does not depend on `tlist`. Hence, this is probably not a bug as the result should be mathematically correct. That being said, I would also expect the same output shape for the cases shown above unless explicitly mentioned in the docstring of the function. Thus, I think the way to go here is to document this behaviour in the docstring (as well as removing the t appearing in correlation_..._1t docstring) as any change in the output shape will break backwards compatibility. However, it may be worth considering whether this is the intended behaviour for QuTiP 5. I would suggest removing `state0=None` as possible input for simplicity in the maintenance and testing or at least I would make the example shown by @VolodyaCO to be consistent and have the same output. Let us see what the QuTiP admin team thinks :smile:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1566#issuecomment-857532355:484,depend,dependence,484,https://qutip.org,https://github.com/qutip/qutip/issues/1566#issuecomment-857532355,2,['depend'],"['depend', 'dependence']"
Integrability,"Hi @christian512, thanks for the help! I've increased `nsteps` for that particular simulation and the integration runs fine without any errors. One caveat is I have not checked the correctness of the result. . On the other hand, as soon as I tried `mesolve` on a simple Larmor precession problem, `mesolve` started either (1) throwing the typical ODE integration error or (2) integrating but producing a manifestly incorrect result (the final state is not on the Bloch sphere). The code I am using is ; ```; from qutip import * ; import numpy as np. sz = sigmaz(). init_ket = 2 ** (-1/2) * Qobj([[1], [1]]) # Bloch vector is unit x; init_dm = init_ket * init_ket.dag(). b_0 = 1; gam = 1; h_zeem = gam * b_0 * sz; h = [h_zeem]. larmor_freq = gam * b_0 ; period = 2 * np.pi / (larmor_freq); t = np.linspace(0, period / 2, 100). print(mesolve(h, init_dm, t, options=Options(nsteps=1e6)).states[-1]); ```. Which produces ; ```; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[ 0.5 +0.j -263.5988765-267.24047092j]; [ -2.1425229 +0.49907152j 0.5 +0.j ]]; ```; Edit: I have also tried playing around with `atol` and `rtol` without any success.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896#issuecomment-1140305503:102,integrat,integration,102,https://qutip.org,https://github.com/qutip/qutip/issues/1896#issuecomment-1140305503,3,['integrat'],"['integrating', 'integration']"
Integrability,"Hi @dweigand, this looks interesting. It would you be nice to push this forward, adding some tests for this and integrating @Ericgig suggested changes. I am wondering whether there is a more intuitive (explicit) option than `qfunc_amat `. Something like a Boolean `precompute`?. Writing some documentation for this, in https://github.com/qutip/qutip-doc, would allow users to discover this option more easily at http://qutip.org/docs/latest/guide/guide-visualization.html#husimi-q-function, it's very nice you have some performance checks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-536368295:112,integrat,integrating,112,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-536368295,1,['integrat'],['integrating']
Integrability,"Hi @epelofske-LANL. This behaviour in QuTiP is intentional for the following reason: If the dims of the system are `[2, 2]` then it's unambiguous how the system should be partitioned into two parts because the dims specify what the two parts. If the dims are `[4]` then one could divide the system in multiple ways depending on how one considers the four basis vectors. If one knows that the four basis states are `00`, `01`, `10`, `11`, one can override the dims by writing `dm.dims = [[2, 2], [2, 2]]` or `qutip.Qobj(dm, dims=[[2, 2], [2, 2]])`. Hope this helps. I agree this could be made more intuitive. Perhaps `maximally_mixed_dm` should allow specifying `dims` too instead of just `N`. I'm closing this issue for now, but please feel free to continue the discussion in the comments.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2058#issuecomment-1384473486:315,depend,depending,315,https://qutip.org,https://github.com/qutip/qutip/issues/2058#issuecomment-1384473486,1,['depend'],['depending']
Integrability,"Hi @jakelishman you were right about the contraction, I changed the indexes as in http://qutip.org/docs/latest/guide/guide-tensor.html so that it represents a trace-like channel. On the other hand I find that mixed dimensions operator `[[m,n], [m,n ]]` appear in some of the tests that were already in place, I will try to write my thoughts on their meaning later. I am still going to refactor this a little bit more, and tell you when it is ready for review.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-831049708:41,contract,contraction,41,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-831049708,1,['contract'],['contraction']
Integrability,"Hi @jakelishman, I like your implementation but this will sometimes return a Qobj and other times a class instance when you call `displace()`. I am not in favour of that just out of the principle that functions should be simple and do one thing only as you also point out. . I would say if we do not want to break the user-interface, we keep the same implementation as `displace()` returning a `Qobj` (even if internally it calls the faster private `_Displace` method). . Users who want to use the class anyway can dig in and find `_Displace`. The use case here for moving to classes is rather specific and related to optimisation/control. We want to compute this operator very fast with multiple values of `alpha`, independently, on multiple cores (this was why we needed the faster implementation to run a GPU optimisation routine). Of course for sigmax(), or sigmay() we do not have any parameters to optimise and it is overkill to make them into classes. I do not suggest that at all. . I understand the inclination to be `functional`. It is how QuTiP was written and is supposed to be used, mostly. But one of the arguments for classes is that for some solvers, or operations we needed to re-use information, eg. qutip.piqs or the heom solvers where we had to make classes anyways. . I would propose just having a private `_Displace` method which is called by `displace` but not changing the output to be conditioned on `alpha`. Later on, if we incline a bit more towards classes we can make `Displace` public. Any other thoughts and opinions? @qutip/core-workers",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1293#issuecomment-646667559:323,interface,interface,323,https://qutip.org,https://github.com/qutip/qutip/issues/1293#issuecomment-646667559,2,"['interface', 'rout']","['interface', 'routine']"
Integrability,"Hi @lzawbrito, I guess that choosing `nsteps=1e6` is a pretty big value and that it leads to problems in the ODE integration. However, again running on my system, I get a reasonable output even with these high `nsteps`: . ``` ; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[0.5 +0.00000000e+00j 0.49999938-4.02511613e-06j]; [0.49999938+4.02511613e-06j 0.5 +0.00000000e+00j]]; ``` ; I guess that this is a problem with SciPy's integrator and your system. I don't have enough experience with QuTiP to give a more detailed analysis. Maybe someone else knows about this? @BoxiLi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896#issuecomment-1140428420:113,integrat,integration,113,https://qutip.org,https://github.com/qutip/qutip/issues/1896#issuecomment-1140428420,2,['integrat'],"['integration', 'integrator']"
Integrability,"Hi @sarsid, if you are going to play with it. It would be very helpful if you could give some feedback ;) Like if the doc is clear or if the interface is reasonable, or if there are any bugs. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273#issuecomment-661857844:141,interface,interface,141,https://qutip.org,https://github.com/qutip/qutip/pull/1273#issuecomment-661857844,1,['interface'],['interface']
Integrability,"Hi @tehruhn.; The call to steadystate take different kwargs depending on whether scipy of mkl is solved. It make an error if you give it a keyword not belonging to the right solver. I believe it should be better to accept all keyword and ignore the unused one. If you want to rework it, I would suggest to set the most stable solver/method as a default. I heard the default method sometime fails (#1077). . 2. Since a few version back, when we added a `__array__` method to Qobj. We need to do `np.asarray(mech_dms, dtype=object)`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1017#issuecomment-540010694:60,depend,depending,60,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-540010694,1,['depend'],['depending']
Integrability,Hi @yurivict. Could you give more detail?; I can't reproduce the issue and the error messages are not enough to understand what is happening.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190#issuecomment-1622081465:85,message,messages,85,https://qutip.org,https://github.com/qutip/qutip/issues/2190#issuecomment-1622081465,1,['message'],['messages']
Integrability,"Hi Alex. Nice to see your PR!. It is looking very good indeed, but deeper integration with qutip's frameworks for representing of operators and its evolution solvers would be nice. I'll test it for a few days and code review with inline comments in the code. You can make changes and push commits to your repository, and they will be automatically added to PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/246#issuecomment-61043885:74,integrat,integration,74,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-61043885,1,['integrat'],['integration']
Integrability,"Hi Arne. Thanks a lot for the bug report. I'll go through the code fix it so that the qutip_gui = NONE flag is handled consistently. In the long run I think we need to refactor the code a little bit, so that GUI dependent module aren't imported at all if qutip_gui = NONE, rather that having a lot of if-else statements scattered around, but for now I'll try to make a quick fix by adding more if statements.. Rob",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/24#issuecomment-18720853:212,depend,dependent,212,https://qutip.org,https://github.com/qutip/qutip/issues/24#issuecomment-18720853,1,['depend'],['dependent']
Integrability,"Hi Ben. Thanks a lot for your contribution. It's looking great!. A couple of small things:; - We try to make qutip python3 compatible, so please use python3 compatible print(...) function calls instead of print ... statements.; - Functions super_to_choi and choi_to_super seems to do the same thing, while the function names suggest complementary conversion. Is this intentional?; - I think it would be better if you move the test code from within the if **name** == '**main**' to a separate file in the examples directory, or even better as unit tests in qutip/tests/; - Avoid global import of qutip ""from qutip import *"" by only selectively importing the functions that you need (we try to do this internally in qutip to avoid circular module dependencies).; - Make relative import of qutip functions (for example from qutip.super_to_choi import super_to_choi). This is also required for python3 compatibility.; - Add an import of the main functions (for example subsystem_apply) to qutip/**init**.py ; - I would probably prefer the super_to_choi.py module be called something more general, like choi_decomposition,py (or something like that), which would reflect that it does not only contain the super_to_choi function but other related functions as well.; - Avoid printouts in choi_to_kraus function. If you want to enable debugging or diagnostic info, consider adding an optional function argument debug=False or verbose=False and print the vals and vecs variables only if the user explicitly asks for it. Otherwise, one could get an excessive amount of printouts if your code is used in a loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/22#issuecomment-18592742:745,depend,dependencies,745,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18592742,1,['depend'],['dependencies']
Integrability,"Hi Bilal,. The conda-forge qutip package should install without VS-15. Most of qutip; functions should still work. This was certainly the intention when we; worked on it. I can't remember now though how well we tested without VS-15,; as the main focus was getting it to work with VS-15. The string type time-dependence needs a C++ compiler, so those functions; won't work. This means a lot of tests will fail. So, give it a go and let us know how you get on. Alex. On 26 February 2018 at 04:07, Bilal Riaz <notifications@github.com> wrote:. > Thanks for suggesting Linux subsystem, but it is not good enough to run; > simulations, it is slower for even day to day file manipulations, so from; > your comment and documentation you shared I come to conclusion that there; > is no alternative of VS to run Qutip in windows 10.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/826#issuecomment-368384720>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7ZQXPfD6q0cVTq1mY17St18hseO5ks5tYi4agaJpZM4SSlE1>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826#issuecomment-368824556:308,depend,dependence,308,https://qutip.org,https://github.com/qutip/qutip/issues/826#issuecomment-368824556,1,['depend'],['dependence']
Integrability,"Hi Filippo,. On Wed, Apr 28, 2021 at 6:03 PM Filippo Vicentini ***@***.***>; wrote:. > However, our foundations do not prevent us to work with time-dependent; > objects.; >; > We simply will need to write the relevant class.; >; Perhaps slightly off-topic: How similar will this class look to QobjEvo? Or; do you not know yet?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-828711218:148,depend,dependent,148,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-828711218,1,['depend'],['dependent']
Integrability,"Hi Fillipo,. Are any of netket's operators time-dependent? I.e. is there a need to; support something similar for QobjEvo?. Yours sincerely,; Simon Cross",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-827902600:48,depend,dependent,48,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-827902600,1,['depend'],['dependent']
Integrability,"Hi Kevin. I think that would be very interesting! Since we don't have any support for time-dependent systems in the Bloch-Redfield master equation at the moment, I think it would be a nice addition. With time-dependent systems one would have to diagonalize the Hamiltonian at each time-step, so I can't think of a better way of doing this than to consider a piecewise-constant approximation. How did you implement it? Did you for example put additional logic in brmesolve? I think that the ""array-based"" time-dependent format (see mesolve) could be suitable for defining piecewise constant problems for brmesolve.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/258#issuecomment-63427565:91,depend,dependent,91,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-63427565,3,['depend'],['dependent']
Integrability,"Hi Paul, I have some free time so I was thinking that if you're not currently working on this I'll try to put it together (the full time-dependent solver). Thanks",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/525#issuecomment-290627908:137,depend,dependent,137,https://qutip.org,https://github.com/qutip/qutip/pull/525#issuecomment-290627908,1,['depend'],['dependent']
Integrability,"Hi Paul,; How do you use openblas from python? I found that some blas routines are exposed in numpy but not all of them. Are there some examples of sparse blas calls from python? ; EPD and Anaconda python include MKL so I would like to play a bit with sparse blas routines.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/55#issuecomment-25367184:70,rout,routines,70,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25367184,2,['rout'],['routines']
Integrability,"Hi QuTiP users,. I am not quite sure how I should introduce the issue that I have, but basically it comes down to the fact that my Hamiltonian and a particular function seems to require >500 GB of RAM for some parameters used. For the desired parameters, this can even become Terabytes which is hard to implement. . The main parameters by the way is N, which is the dimension of the Hilbert Space. The maximum is N=111 when running the program on the 500 GB node. The memory usage fits very good to a RAM (MB) = 0.0008804*N^4 dependence. A strange thing is that Slurm's MaxRSS command says that only 133,690 MB was needed to run the program, which is not close to the 500 GB. The memory profiler said that one function required 145,766.2 MiB (152,846.9 MB) at some point, and 327,769.4 MiB (343,691.1 MB) was freed. Together this comes close to the 500 GB, although I don't understand the numbers. I have no profound knowledge of the memory allocation in Python and QuTiP, but I would like to check if this can be improved. I went to two IT consultants who are in charge of the National Supercomputer in the Netherlands, and they also found no errors in my code. One of their suggestions was to ask you for advice on this topic. Of course, I can provide you with more details (the whole code, the outcome of the memory profiler, the meaning of the parameters and the infrastructure), but I don't want to overwhelm you. I look forward to hearing from you. Best regards,. Xavier",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/845:526,depend,dependence,526,https://qutip.org,https://github.com/qutip/qutip/issues/845,1,['depend'],['dependence']
Integrability,"Hi QuTip team,. when I run multiple `mesolve` calculations in parallel using. `enumerate(pool.imap(parallel_calculation, taus))`. I sometimes get the following error. ` ZVODE-- At current T (=R1), MXSTEP (=I1) steps; taken on this call before reaching TOUT; In above message, I1 = 1000; In above message, R1 = 0.9633584757678D+00; D:\...\Anaconda3\lib\site-packages\scipy\integrate\_ode.py:869: UserWarning: zvode: Excess work done on this call. (Perhaps wrong MF.); 'Unexpected istate=%s' % istate))`. Interestingly this only happens sometimes and as far as I can tell not in the single-threaded case...; Any ideas? Thanks",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/822:267,message,message,267,https://qutip.org,https://github.com/qutip/qutip/issues/822,3,"['integrat', 'message']","['integrate', 'message']"
Integrability,"Hi Robert. I think the bug is still there for the sparse solver. Also, just by looking at the code, I think there is some bug in the sparse routine in terms of what the eigenvalues are sorted by for sort='high'. It appears that if sparse=True, sort='high' and op.isherm=False, then eigenvalues are sorted by largest magnitude (which='LM' argument to sp.linalg.eigs), whereas in non-sparse solver they are sorted by largest real part (which='LR'). Cheers, Arne.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/16#issuecomment-16361728:140,rout,routine,140,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16361728,1,['rout'],['routine']
Integrability,"Hi Simon,. No we do not have time-dependent operators at the moment and focus on ground state/steady-state/dynamics of fixed hamiltonians or liouvillians. Actually nobody has (yet) studied with neural networks time-dependent systems as far as i know. However, our foundations do not prevent us to work with time-dependent objects. ; We simply will need to write the relevant class.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-828576313:34,depend,dependent,34,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-828576313,3,['depend'],['dependent']
Integrability,"Hi Subimal,. This happens because of the truncation of the Fock space. You can see a related discussion here ; https://groups.google.com/g/qutip/c/DD6z8kYUU1I/m/k48XZS1AAgAJ. But in short, with truncation there is always an error in the commutators, so for truncating the Fock states at N photons, I think you find that [a,a.dag()] = \sum_{n=0}^(N-1) |n><n| - N|N><N| (you can check this by writing out these operators as projectors onto fock states, you will notice a*a.dag() is missing a term due to the truncation that should cancel with a term in a.dag()*a). Similarly putting the creation and annihilation operators into the position/momentum definition of the Hamiltonian, you find H = sum_{n=0}^(N-1)(n+0.5) |n><n| + N/2 |N><N|. Hence, since you truncated at 9 photons in your example, there is a degeneracy of the 4.5 eigenvalue. I am not sure if there is much can be done about this in general, perhaps the discussion I linked above might be useful. The main message I suppose is always take a larger cut-off than you think you might need, particularly if you are relying on the commutation relations to simplify things for you (which, given your example, can be a bad idea some times!). . I guess there is an interesting question about what is the best practice in these things, e.g., if you have a non-linear model, what form is it best to put it in before moving to a truncated basis? given your example, I would expect something like normal ordering to be better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1587#issuecomment-869408770:968,message,message,968,https://qutip.org,https://github.com/qutip/qutip/issues/1587#issuecomment-869408770,1,['message'],['message']
Integrability,"Hi again. I've looked at your notebook and code in some more detail now, and I have attempted to make the change in how the rhs function behaves. I had not seen an example where the contributions form different stochastic collapse operators depended on each other before, but I now see the need for having this possibility from looking at your implementation of the Milstein implementation with multiple Wiener processes. I have created a new branch in qutip called sme-rhs-restructuring (see commit 0b4a1a7a6591aca27ff6cb71310cf73af7ae2d7f and https://github.com/qutip/qutip/tree/sme-rhs-restructuring) where I have experimented with rhs functions that internally loop through the A_ops list. In simple cases it only loops through the list and calculates a contribution for each stochastic collapse operator, but now it is also possible to do something more sophisticated, like in your milstein solver. I've edited your notebook so that it uses the standard (now modified) smesolve and your rhs functions for the milstein methods. http://nbviewer.ipython.org/6153688. Note that I still only use the rhs function for the contributions due to the stochastic collapse operators (both the deterministic and stochastic part), and it does not include the unitary part or the deterministic collapse operators (if those are given as well), so it is not quite what you suggested when proposing that the rhs should calculate \rho_{n+1}. Do you think this approach is reasonable, or do you see any problems with it?. Regarding your milstein implementation, it seems that it is only valid for homodyne detection, since your have hardcoded the d1 and d2 function into the rhs function. I've tried to separate the definition of the SDE (d1 and d2) from the implementation of the SDE integrator (rhs), and naively it seems like you could use the d1 and d2 functions in rhs_milstein to make it possible to use it with hetrodyne detection as well. Is there any difficulties in generalizing the milstein method and par",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35#issuecomment-22088170:241,depend,depended,241,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22088170,1,['depend'],['depended']
Integrability,"Hi all, . A little while back, we had [this conversation](https://groups.google.com/forum/?fromgroups#!topic/qutip/AlMMzkRtijo) about adding some code I recently wrote to QuTiP. I've got a fairly primitive version of the code working now, so I'd like to see what you think. I tried to mimic the appearance of partial_transpose as much as possible, for familiarity to QuTiP users. Things yet to be done include:; - Rewriting the 'kernel' of the efficient application code in Fortran 90, f2py-ing and wrapping for increased speed; - Ensuring that no un-needed copies of the various arrays involved are being made; - (Perhaps, if you're so inclined) adding more structure to superoperators objects, so that they can be more easily handled. I think we've got a good start, let me know what I can do to bring the code up to your standards. Cheers,. Ben",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/22:499,wrap,wrapping,499,https://qutip.org,https://github.com/qutip/qutip/pull/22,1,['wrap'],['wrapping']
Integrability,"Hi all, I have three questions.; Q1. ; As mentioned in the API doc [http://qutip.org/docs/3.1.0/apidoc/functions.html](url) ; Under the section of master equation solver . > Time-dependent operators; > ; > For time-dependent problems, H and c_ops can be callback functions that takes two arguments, time and args, and returns the Hamiltonian or Liouvillian for the system at that point in time (callback format).; > ; > Alternatively, H and c_ops can be a specified in a nested-list format where each element in the list is a list of length 2, containing an operator (qutip.qobj) at the first element and where the second element is either a string (list string format), a callback function (list callback format) that evaluates to the time-dependent coefficient for the corresponding operator, or a NumPy array (list array format) which specifies the value of the coefficient to the corresponding operator for each value of t in twist. It seems that **in the version 3.1.0**, c_ops can be implemented as a callback functions in `mesolve`. Is this true? . Q.2; As mentioned in [https://groups.google.com/forum/#!topic/qutip/aIxxnbQ56W4](url), the callback function has not been developed for `mesolve` at the time of that post. But . > you have a callback function that is called for each time step and which constructs the system Liouvillian Here you are free to construct the collapse operators or Liouvillian in whichever way you want. From this, I think I can use the callback function to define the c_ops and integrate them in **Liouvillian** for `mesolve`. If I am interpreting it right, this can be done for c_ops with some complicated time dependence. Is that right? . _(However it is mentioned in [https://groups.google.com/forum/#!searchin/qutip/time$20dependent/qutip/S0IskSRy2M0/_2L6BzqAKTEJ](url) that I can use a callback function for `mesolve`?)_. Q.3; I know that I cannot use callback functions to define the c_ops directly in `mcsolve`. Can I use the callback functions to define the",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/223#issuecomment-223873117:179,depend,dependent,179,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223873117,3,['depend'],['dependent']
Integrability,"Hi all,; currently we are working on a time depended version of the SME solver. There is a strategic decision to be made. At the moment, the stochastic.py file is the second largest file in qutip due to variety of methods involved. So it is a kind of mess. We think it makes sense to create stochastic_td.py to contain all the related time depended cases for solvers etc. Should we do it or is it better to keep enlarging the stochastic.py file?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/738:44,depend,depended,44,https://qutip.org,https://github.com/qutip/qutip/issues/738,2,['depend'],['depended']
Integrability,"Hi and thanks for the PR. This seems like reasonable functionality, however time dependence using arrays is already supported if you use scipy.interp to create a function for the array. I have used that method myself (see PR #109 for an example), and at that time decided that it was not necessary with a new time-dependence format in qutip for that functionality. But there could be performance advantages with your method. I will test and compare the two methods and get back to you. . Regarding the implementation: I would preferably avoid using global variables. Can you not use the args argument to store the values instead of using globals() ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/141#issuecomment-44495147:81,depend,dependence,81,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44495147,2,['depend'],['dependence']
Integrability,"Hi guys,; yeah, the conflicts are because of the now merged #1224, which we knew about when we merged that one. It's a simple fix, but I'm hesitant to do it directly on this PR, depending on how we want to merge it. The simplest way is that I make the required changes, fix the merge conflict, and we keep going until this whole behemoth merges in one go. This ends up in the commit history being a bit of a mess, and it'll take ages. Instead, I think it might be better if I instead split this PR into a few different ones:; 1. add `pytest` markers and other test niceties; 2. the test files that Eric is checking; 3. the QIP-related ones so that Boxi can check those; 4. `brmesolve` tests; 5. trivially changed files; 6. whatever's left. This has the advantage that I can rebase them all individually to neaten them up with any changes suggested, and we can get parts merged in faster. PRs 2 to 6 will depend on PR 1, so this would require getting that first one merged ASAP, then the others will all be modular and can be merged in any order at any speed. If you're happy with that plan, I'll cherry-pick/rebase out the necessary bits of the history and form the new PRs. The end result will be 6 PRs, which, when merged, will have no conflicts, and will leave the repository in the exact same state it would be if this PR was merged in one lump (with the relevant conflict fixed). For each PR, then we just have a simple process:; 1. you review files; 2. I make suggested changes; 3. repeat until happy; 4. I rebase the PR to squash it into a logical form; 5. you merge",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-619434033:178,depend,depending,178,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-619434033,2,['depend'],"['depend', 'depending']"
Integrability,Hi! How did you import the function `read_qasm`? Could also include your `import qutip ...` or `from qutip.qip import ...` statements? Does any warning or error message show up during the execution of the import?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2334#issuecomment-1962937455:161,message,message,161,https://qutip.org,https://github.com/qutip/qutip/issues/2334#issuecomment-1962937455,1,['message'],['message']
Integrability,"Hi!. About the comments: yes, absolutely I'll leave more. It's a bit silly that I haven't yet, since one thing that was frustrating me previously was not understanding what was trying to be done! I think as time goes by I'm getting a bit better about being clearer in the code - some of the earlier parametrizations I did were too aggressive because I wasn't used to the tools yet. The `test_control_pulseoptim` parts are very complex, in part because the underlying calling convention of that code is complex too. I'll try and add more comments to it to ease that along, especially in the part where I just defined a load of systems to test. That certainly should have been commented. There are general comments about what I was using the `pytest` tooling for in the commit messages, but I didn't necessarily want to leave ""intro to pytest"" comments throughout, because it would mostly crowd out the actual tests, and the `pytest` documentation online is probably going to be a better explanation than what I can do. I'm also learning `pytest` by doing this (I'd not used it before I opened the first PR)!. About the PRs: I'm happy with whatever workflow works best for you guys - I don't have any control over when the PR gets merged. It might be a little difficult for me to maintain two branches at once (i.e. if the first PR with ~10 tests is awaiting merging), because there's likely to be conflicts in `conftest.py` (in particular). Even if I branched the new PR off the previous one on the expectation that it would be merged, I'd have to keep adding merge commits into (or force-rebasing) the other branch to keep it up-to-date, which wouldn't be completely ideal in that it would make a bit of a mess in the git log. If you want to merge this one (after I've gone through and put some more comments in), I'm happy to start a new one. I can also start a new one on a new branch, I think it might just make a bit more of a mess than it solves. I think this one only got big because I had a goo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241:775,message,messages,775,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241,1,['message'],['messages']
Integrability,"Hi!; I was thinking to use Floquet Formalism to solve some time-dependent problem.; So I firstly try the case in Users Guide, but some unexpected errors occurred. ---------------------------------------------------------------------------; ```; %matplotlib inline; import matplotlib.pyplot as plt; import numpy as np; from qutip import *; delta=0.2*2*np.pi;; eps0=1.0*2*np.pi;; A=2.5*2*np.pi;; omega=1.0*2*np.pi;; H0=-delta/2.0*sigmax()-eps0/2.0*sigmaz(); H1=A/2.0*sigmaz(); args={'w':omega}; H=[H0,[H1,'sin(w*t)']]; T=2*np.pi/omega; f_modes_0, f_energies = floquet_modes(H, T, args); ```. Here is the error information：. ---------------------------------------------------------------------------; ```; DistutilsPlatformError Traceback (most recent call last); F:\Anaconda3\lib\site-packages\pyximport\pyximport.py in load_module(name, pyxfilename, pyxbuild_dir, is_package, build_inplace, language_level, so_path); 215 so_path = build_module(module_name, pyxfilename, pyxbuild_dir,; --> 216 inplace=build_inplace, language_level=language_level); 217 mod = imp.load_dynamic(name, so_path). F:\Anaconda3\lib\site-packages\pyximport\pyximport.py in build_module(name, pyxfilename, pyxbuild_dir, inplace, language_level); 191 inplace=inplace,; --> 192 reload_support=pyxargs.reload_support); 193 assert os.path.exists(so_path), ""Cannot find: %s"" % so_path. F:\Anaconda3\lib\site-packages\pyximport\pyxbuild.py in pyx_to_dll(filename, ext, force_rebuild, build_in_temp, pyxbuild_dir, setup_args, reload_support, inplace); 101 obj_build_ext = dist.get_command_obj(""build_ext""); --> 102 dist.run_commands(); 103 so_path = obj_build_ext.get_outputs()[0]. F:\Anaconda3\lib\distutils\dist.py in run_commands(self); 954 for cmd in self.commands:; --> 955 self.run_command(cmd); 956 . F:\Anaconda3\lib\distutils\dist.py in run_command(self, command); 973 cmd_obj.ensure_finalized(); --> 974 cmd_obj.run(); 975 self.have_run[command] = 1. F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in run(s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854:64,depend,dependent,64,https://qutip.org,https://github.com/qutip/qutip/issues/854,1,['depend'],['dependent']
Integrability,"Hi, I am trying to take tensor product of time dependent collapse operators but following error crops up,. TypeError: One of inputs is not a quantum object. Following is the tensor product I wanted to take:. V_ft=np.sqrt(kappa_f)*tensor([[destroy(2),[Qobj(np.array([[0,complex(0,-1)*np.conj(H_a01)],[0,0]]),dims=[[2],[2]]), u_t]],[destroy(2),[Qobj(np.array([[0,complex(0,-1)*np.conj(H_b01)],[0,0]]),dims=[[2],[2]]), u_t]],[destroy(2),[Qobj(np.array([[0,complex(0,-1)*np.conj(H_c01)],[0,0]]),dims=[[2],[2]]), u_t]]]",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1183:47,depend,dependent,47,https://qutip.org,https://github.com/qutip/qutip/issues/1183,1,['depend'],['dependent']
Integrability,"Hi, I am wondering if qutip can calculate the average of a time-dependent observable or probability of a time-dependent state when simulate a time-dependent Hamiltonian. It sounds a little weird, but it indeed occurs when we consider a time-dependent Hamiltonian in a new state representation. The related unitary transformation can be time-dependent. Do built-in solver support it? . For example, ; ```; observable = [[O1,coeff1],[O2,coeff2],...]; output = qt.sesolve(H,psi0,times,observable); ```; where `coeff1(t,args)` and `coeff2(t,args)` are coefficient functions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1364:64,depend,dependent,64,https://qutip.org,https://github.com/qutip/qutip/issues/1364,5,['depend'],['dependent']
Integrability,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:221,depend,dependent,221,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315,4,['depend'],['dependent']
Integrability,"Hi, I have updated the interface to make it much much easier to use. And, I added the unit test and now the test will succeed. The test is the following: generate random Hamiltonians and run perturbation and see whether the energy levels match with the exact solutions. I have done all I want to do up to now. So, please review these codes again and consider merging them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/282#issuecomment-109847098:23,interface,interface,23,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-109847098,1,['interface'],['interface']
Integrability,"Hi, I was reading about builder patterns and came across this [discussion](https://stackoverflow.com/questions/11977279/builder-pattern-equivalent-in-python) which seems to suggest that builder patterns are not necessarily needed in Python. Instead, all the functions could probably be bundled into a single ```PulseOptimizer``` class and whatever the wrapper functions are doing right now can be methods of this class. The input arguments can be initialised in the __init__ of this class. This you could have something like. ```; from qutip.control.pulseoptim import PulseOptimizer. optimizer = PulseOptimizer(drift="""", ctlr="""", ....); crab = optimizer.opt_pulse_crab(args, ...); unitary_crab = optimizer.opt_pulse_crab_unitary(args,...); ```. @MichalKononenko - if you are suggesting something like [this](https://sourcemaking.com/design_patterns/builder/python/1) then perhaps it is that same as what I suggested on top.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/692#issuecomment-313407939:352,wrap,wrapper,352,https://qutip.org,https://github.com/qutip/qutip/issues/692#issuecomment-313407939,1,['wrap'],['wrapper']
Integrability,"Hi, I've been starting to learn qutip to write my dissertation on Quantum computing. I was running the script on Vacuum Rabi oscillations in the Jaynes-cummings model from the example section on [qutip.com](http://qutip.com/). Originally it was working correctly. However, I have come back to it after about a month and I have run into an issue. When I run the code copied straight from the website it returns this error . ""ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class."". so I increase the nsteps to 100000:; output = mesolve(H, psi0, tlist, c_op_list, [a.dag() * a, sm.dag() * sm], options = Options(nsteps= 10000)). however I get an output that is completely different to what I should be getting. What I should be getting: . ![image](https://user-images.githubusercontent.com/75099190/186995018-26029946-bba2-4b71-888d-74b88361c832.png). What my code is outputting:. ![image](https://user-images.githubusercontent.com/75099190/186995092-75b9d285-f854-487f-bd11-7dffc19d57cb.png). Do you have any idea what could be causing this error?; Any help would be hugely appreciated . my code:. import matplotlib.pyplot as plt; import numpy as np; from qutip import *. wc = 1.0 * 2 * np.pi # cavity frequency; wa = 1.0 * 2 * np.pi # atom frequency; g = 0.05 * 2 * np.pi # coupling strength; kappa = 0.005 # cavity dissipation rate; gamma = 0.05 # atom dissipation rate; N = 15 # number of cavity fock states; n_th_a = 0.0 # temperature in frequency units; use_rwa = True. tlist = np.linspace(0, 25, 100). psi0 = tensor(basis(N, 0), basis(2, 1)) # start with an excited atom. a = tensor(destroy(N), qeye(2)); sm = tensor(qeye(N), destroy(2)). if use_rwa:; H = wc * a.dag() * a + wa * sm.dag() * sm + g * (a.dag() * sm + a * sm.dag()); else:; H = wc * a.dag() * a + wa * sm.dag() * sm + g * (a.dag() + a) * (sm + sm.dag()). c_op_list = []. rate = kappa * (1 + n_th_a); if rate > 0.0:; c_op_list.append(np.sqrt(rate) * a). rate = ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987:428,integrat,integration,428,https://qutip.org,https://github.com/qutip/qutip/issues/1987,1,['integrat'],['integration']
Integrability,"Hi, just to clarify: the intention here is to have the two behaviours mediated by a `settings` flag or just an in-place version check?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1502#issuecomment-823238444:70,mediat,mediated,70,https://qutip.org,https://github.com/qutip/qutip/issues/1502#issuecomment-823238444,1,['mediat'],['mediated']
Integrability,"Hi, matplotlib is an optional dependency and there is a warning on import.; You should install them separately. On Thu, Jun 7, 2018, 2:47 PM Tejas Shetty <notifications@github.com> wrote:. > Doesn't install matplotlib when installing on windows.; > And then produces errors; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/878>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBD8arMQpOQc40gQMwSImZ3fq6Cm7ks5t6L57gaJpZM4Udxhh>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/878#issuecomment-395303939:30,depend,dependency,30,https://qutip.org,https://github.com/qutip/qutip/issues/878#issuecomment-395303939,1,['depend'],['dependency']
Integrability,"Hi, sorry for coming late to the party. This is a very nice PR and I have a couple of comments on the naming of the functions. Instead of having three different measurement functions - `measurement_ket`, `measurement_density` and `measurement_comp_basis` why not have a single `measure` function that has the same signature as `qutip.measurement.measure`, i.e., measure(op, state) where internally you check if the state is a ket or dm and just apply the operation internally? You could also have a `basis='computational`` keyword if you need to specify the basis. But I do not see why you make that distinction? . Also, in a real experiment you will not be able to make multiple measurements on the same state which seems to be possible now in your PR. We need to either not allow this or leave a warning message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-640714799:806,message,message,806,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-640714799,1,['message'],['message']
Integrability,"Hi, thank you very much for the quick responses and linking the other issues. . > But your making sparse matrices dense. Yes, I agree. But I was trying to just work out a simple problem which looks like. `dp[n]/dt = spre(Q)*p[n-1] + spost(Q)*p[n+1]. where p is a list of flattened density matrices. I understand that a better version of this would be to completely flatten p and write the RHS as a large `L` as Alex points out and then use `cy_ode_rhs`. But here is the issue, in the HEOM case, building `L` runs out of memory if we consider a large size for the set of auxiliary density matrices `p`. As such, I cannot completely build the `L` for the cases I am looking into. The approach that I was trying to take was to keep building the p's as we integrate. In this case, each RHS computation is a small dense matrix-vector computation and I can choose to keep or discard it depending on the max value of its elements. This gives the flexibility to truncate how many auxiliary density matrices I keep. The motivation is that in some papers on the Heom method, there is a dynamic filtering of the auxiliary matrices and it has been shown that with just a few 100s of auxiliary matrices, you can get a reasonable result. But the way we have the code in QuTiP now pre-computes the `L` and gets stuck due to memory limitations. @agpitch Thanks for the suggestions. I am trying to make the HEOM work without building the `L`. Perhaps I will still run into memory issues if I try to initialize the full set of `p` but if the dynamic filtering approach works out, then I can escape the memory problem by only building a few of the `p`'s and deciding to append them or not based on some conditions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/831#issuecomment-368980965:752,integrat,integrate,752,https://qutip.org,https://github.com/qutip/qutip/issues/831#issuecomment-368980965,2,"['depend', 'integrat']","['depending', 'integrate']"
Integrability,"Hi, the first part for this is ready for review. A typical use case would be to generate the matrix M.; @nathanshammah I made some small changes in the names of functions.; @ajgpitch Please suggest any changes if necessary for pep8, function naming, testing or the API in general. We have the examples and ipynb notebooks that @nathanshammah wrote. Where do they go ? . Once, this is merged, there are additional helper functions to calculate operator expectations, thermal states etc which can be added. However, this forms the core of the module.; ```; from qutip.pim.dicke import *; import numpy as np; from scipy.integrate import odeint. # system parameters. N = 10; gS, gL, gD, gP, gCP = .1, .1, .1, .1, .1. # define the model; model = Pim(N, emission=gS, loss=gL, dephasing=gD, pumping=gP, collective_pumping=gCP). M = model.generate_M(). # Evolve the system according to dp/dt = M.p. rho0 = initial_dicke_state(N, (5, 5)); t = np.linspace(0, 10, 100). def generate_rhs(rho, M):; return M.dot(rho). p = odeint(generate_rhs, rho0, t, args=(M,)); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-332110217:617,integrat,integrate,617,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-332110217,1,['integrat'],['integrate']
Integrability,"Hi, this was discussed before in https://github.com/qutip/qutip/issues/702. You may be missing some LateX packages or other dependencies:; pdflatex, pdfcrop, pdf2svg, imagemagick (convert). Also you may be missing the following latex packages:. \usepackage{xy}; \xyoption{matrix}; \xyoption{frame}; \xyoption{arrow}; \xyoption{arc}; \usepackage{ifpdf}",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/754#issuecomment-331759789:124,depend,dependencies,124,https://qutip.org,https://github.com/qutip/qutip/issues/754#issuecomment-331759789,1,['depend'],['dependencies']
Integrability,"Hi,. According to the `mesolve` doc, . > For problems with time-dependent problems H and c_ops can be callback functions that takes two arguments, time and args, and returns the Hamiltonian or Liouvillian for the system at that point in time (callback format). Then, I would have expected something very basic such as. ``` python; import numpy as np; import qutip. a = qutip.destroy(40); tlist = np.arange(0, 100, 10); results = qutip.mesolve(lambda t, args: a,; qutip.coherent(40, 2),; tlist,; [],; [],; progress_bar=True); ```. to be working. Instead, it gives (full traceback). ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-116-e35e17a7e3ab> in <module>(); 6 [],; 7 [],; ----> 8 progress_bar=True). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar); 319 types.BuiltinFunctionType, partial)):; 320 res = _sesolve_func_td(H, rho0, tlist,; --> 321 e_ops, args, options, progress_bar); 322 else:; 323 res = _sesolve_const(H, rho0, tlist,. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _sesolve_func_td(H_func, psi0, tlist, e_ops, args, opt, progress_bar); 565 #; 566 return _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, norm,; --> 567 dims=psi0.dims); 568 ; 569 . /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, state_norm_func, dims); 656 ; 657 if t_idx < n_tsteps - 1:; --> 658 r.integrate(r.t + dt[t_idx]); 659 ; 660 progress_bar.finished(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in integrate(self, t, step, relax); 406 self._y, self.t = mth(self.f, self.jac or (lambda: None),; 407 self._y, self.t, t,; --> 408 self.f_params, self.jac_params); 409 except System",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/505:64,depend,dependent,64,https://qutip.org,https://github.com/qutip/qutip/issues/505,1,['depend'],['dependent']
Integrability,"Hi,. I have a problem when trying to visualize the quantum circuit with the command ""q.png"".; I have installed ImageMagick, Perl, and Ghostscript as explained in the tutorial: https://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/examples/quantum-gates.ipynb. However, I still receive the next error message:. FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'. The pdf file is generated but for some reason, is not converted to a .png file. Thanks a lot,; Ariel",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1888:316,message,message,316,https://qutip.org,https://github.com/qutip/qutip/issues/1888,1,['message'],['message']
Integrability,"Hi,. I have been trying to use `qutip.floquet.floquet_master_equation_steadystate` method to get the steadystate of my system, but the docstring is not super useful. From the docstring, I guess I should call it as `qutip.floquet.floquet_master_equation_steadystate(H, A)` where. * `H` is my (time-dependent) hamiltonian, similar as the one used in http://qutip.org/docs/latest/guide/dynamics/dynamics-floquet.html#floquet-formalism-in-qutip.; * `A` is the [`A` matrix output](https://github.com/qutip/qutip/blob/master/qutip/floquet.py#L587-L588) from `floquet_master_equation_rates` call. I think I missed something as I am getting an error; ```; TypeError: Solving for steady states requires Liouvillian (super) operators; ```; from https://github.com/qutip/qutip/blob/master/qutip/steadystate.py#L224. Additionnally, I think there is a much easier way to find the steadystate of such a system, using something like (not really well written nor optimised):. ```python; def floquet_master_equation_steadystate2(A):; """"""; TODO. Parameters; ----------. A : TODO; A matrix used to build the master equation.; """"""; B = np.zeros_like(A); N = A.shape[0]; for a in range(N):; for b in range(N):; # Convergence of off-diagonal terms in density matrix to 0; assert(-0.5 * np.sum(A[:, a] + A[:, b]) < 0); # Diagonal terms of density matrix; if a != b:; B[a, b] = A[a, b]; else:; B[a, b] = -1.0 * np.sum([; A[nu, a] for nu in range(N) if nu != a]; ); eigval, eigvec = Qobj(B).eigenstates(); assert(np.isclose(eigval[-1], 0, atol=1e-15)); return eigvec[-1] * eigvec[-1].dag(); ```. which basically looks for the eigenvector associated with 0 eigenvalue of a matrix derived from `A`, which is basically coming directly from equation 251 of [Gri98](http://qutip.org/docs/latest/biblio.html#gri98).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/768:297,depend,dependent,297,https://qutip.org,https://github.com/qutip/qutip/issues/768,1,['depend'],['dependent']
Integrability,"Hi,. I notice that there are cases that the Python version of QuTIP is slower; than the QOToolbox written in Matlab. I naively think, for those cases, can; you make an interface so that users can call the corresponding Matlab; programs from Python? Seems PyMat, Pymatbridge, Mlabwrap and maybe other; programs can do this job. Have you considered this option to make QuTIP; better at this stage? Thanks. Kind regards,; Qi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/48#issuecomment-27609676:168,interface,interface,168,https://qutip.org,https://github.com/qutip/qutip/pull/48#issuecomment-27609676,1,['interface'],['interface']
Integrability,"Hi,. I noticed that the current message regarding the citations gets lost in the end of the build messages and warnings. A small modification to make the message stand out. @ajgpitch",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/809:32,message,message,32,https://qutip.org,https://github.com/qutip/qutip/pull/809,3,['message'],"['message', 'messages']"
Integrability,"Hi,. I was trying to run some simulations with [Floquet formalism in Qutip](http://qutip.org/docs/4.1/guide/dynamics/dynamics-floquet.html) in a Jupyter notebook, when I ran into a ""The kernel appears to died unexpectedly, it will restart"" error message. I tried to understand what is happening, and it seems it is due to a segmentation fault. It happens also when run in CPython 3.5.2. `gdb` was not super useful, and I could not get it to output any interesting backtrace. Manually tracking the issue down, it seems that `qutip.floquet.floquet_modes` call `qutip.propagator.propagator` which itself calls `sesolve`. As far as I could track the error down for the moment, it seems to happen in [this call](https://github.com/qutip/qutip/blob/master/qutip/propagator.py#L159-L160). My code is quite lengthy, and I did not yet manage to isolate a small snippet to reproduce the error :/ Not sure what is the best way to debug this either :/. ```python; >>> qutip.about(). QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.3; Scipy Version: 0.19.1; Cython Version: 0.27.1; Matplotlib Version: 2.0.0; Python Version: 3.5.2; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip; ```. Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/761:246,message,message,246,https://qutip.org,https://github.com/qutip/qutip/issues/761,1,['message'],['message']
Integrability,"Hi,. I was writing a simple code for a time dependent driving of a two level atom with the excited state decay and encountered the following problem: If I evolve the system using mesolve for particular time dependence of my driving field, namely if the evolution time is set to be from t = 0 to t = 3.5 in the units of 1/(Rabi frequency) and the driving is only present between t = pi/2 and t = pi, I get expected results if I do not include any collapse operators (using []), however as soon as I use the usual collapse operator corresponding to the excited state decay it gives me for all the time the initial values of the quantities. It happens even if I set the decay rate to zero! Also, mcsolve works fine in both cases.; Here is the code that I use:; ```; import numpy as np; import pylab as plt; import scipy as scipy; from qutip import *. #System parameters; Omega = 1; Gamma = 0.1. g = basis(2,0); e = basis(2,1); sgg = g * g.dag() #ground state population; see = e * e.dag() #excited state population; sge = g * e.dag() #atomic coherence sigma_ge. #Driving Hamiltonian; H1 = Omega * (sge + sge.dag()). #Time dependence of the drive; def H1_coeff(t,args):; if t > np.pi:; c =0; elif t >= np.pi/2:; c = 1; else:; c = 0; return c. #Complete Hamiltonian; H = [[H1, H1_coeff]]. #Time; tspan = np.linspace(0,3.5,500). #initial state; psi0 = g. #collapse operators; c_ops = [np.sqrt(Gamma) * sge]. #calculated expectation values; e_ops = [sgg, see]; results = mesolve(H, psi0, tspan, c_ops, e_ops). #plotting the results; fig, ax = plt.subplots(1,1); ax.plot(tspan, results.expect[0]); ax.plot(tspan, results.expect[1]); plt.show(); ```; And here is the information about the packages that I'm using; ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.1; Scipy Version: 0.19.1; Cython Version: 0.26; Matplotlib Version: 2.0.2; Python Version: 3.6.2; Number of ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771:44,depend,dependent,44,https://qutip.org,https://github.com/qutip/qutip/issues/771,2,['depend'],"['dependence', 'dependent']"
Integrability,"Hi,. I'm having some trouble installing QuTiP onto my computer. I'm running Python 2.7 on Windows 7 and using Anaconda 2.10 64 bit and PyCharm 4.0.4.; I tried installing QuTiP in PyCharm by using file->settings->project interpreter and that successfully installed. However, when I go to the python console and type; from qutip import \* I get the following error message:. Backend Qt4Agg is interactive backend. Turning interactive mode on.; Traceback (most recent call last):; File ""C:\Users\daniel\Anaconda\lib\site-packages\IPython\core\interactiveshell.py"", line 2883, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-2-674d9281af88>"", line 1, in <module>; from qutip import *; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip__init__.py"", line 213, in <module>; from qutip.qobj import *; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip\qobj.py"", line 60, in <module>; from qutip.ptrace import _ptrace; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip\ptrace.py"", line 38, in <module>; from qutip.sparse import sp_reshape; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip\sparse.py"", line 49, in <module>; from qutip.cy.sparse_utils import (_sparse_profile, _sparse_permute,; File ""C:\Program Files (",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/343:363,message,message,363,https://qutip.org,https://github.com/qutip/qutip/issues/343,1,['message'],['message']
Integrability,"Hi,. It seems there are some errors in the Floquet `mesolve`-equivalent function, which are not seen when considering a simple qubit. Consider for instance an harmonic oscillator with a drive, which should converge towards a coherent state:. ```python; %matplotlib notebook. import numpy as np; from qutip import (basis, destroy, expect, fsesolve, sigmax, sigmaz, rand_ket, num,; mesolve); from qutip.floquet import (floquet_modes, floquet_modes_table,; floquet_modes_t_lookup, fmmesolve). # Parameters; wc = 1.0 * 2 * np.pi; wp = 1.5 * 2 * np.pi; T = 2 * np.pi / wp; N = 20; epsilon_p = np.sqrt(2) * np.sqrt(8) * (wp - wc). psi0 = basis(N,0); a = destroy(N); H = [; wc * a.dag() * a,; [1.0j * epsilon_p * (a.dag() - a), 'cos(wp * t)']; ]. args = {; 'wp': wp; }. # noise power spectrum; gamma1 = 0.05; def noise_spectrum(omega):; return 0.5 * gamma1 * omega / (2 * np.pi). tlist = np.linspace(0, 5 / gamma1, 100). # find the floquet modes for the time-dependent hamiltonian; f_modes_0, f_energies = floquet_modes(H, T, args). # precalculate mode table; f_modes_table_t = floquet_modes_table(f_modes_0, f_energies,; np.linspace(0, T, 500 + 1),; H, T, args). # solve the floquet-markov master equation; output = fmmesolve(H, psi0, tlist,; [a], [], [noise_spectrum], T, args). # For reference: calculate the same thing with mesolve; output_ref = mesolve(H, psi0, tlist, [np.sqrt(gamma1) * a],; [], args); ```. `output_ref.states[-1]` is a coherent state as expected. ![image png 1200 x 1200 pixels - redimensionnee 79](https://user-images.githubusercontent.com/3856586/31828448-433fd44a-b588-11e7-9305-e44f88ed8c1b.png). But `output.states[-1]` is far from being a coherent state. ![image png 1200 x 1200 pixels](https://user-images.githubusercontent.com/3856586/31828469-56631e42-b588-11e7-8950-0ca04ce3c70c.png). I tried to debug it, without real success for now :/. EDIT: Might be partially related to #624.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/772:952,depend,dependent,952,https://qutip.org,https://github.com/qutip/qutip/issues/772,1,['depend'],['dependent']
Integrability,"Hi,. Sometimes I want to simulate the exact behavior of my quantum circuit, i.e. work out the time-dependent Hamiltonian for a specific gate sequence and Hamiltonian of each gate. Then solve the Lindblad master equation with some collapse operator. Is there an easy way to generate the time-dependent Hamiltonian?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946:99,depend,dependent,99,https://qutip.org,https://github.com/qutip/qutip/issues/946,2,['depend'],['dependent']
Integrability,"Hi,. Thanks a lot for this great package. Here are two patches I would like to suggest:; - support for numpy arrays as cython args to allow time dependence using arrays. I use this in the following way: H.append([op/1e9, '(0 if (t<0 or t>100) else ch0[round(t)])']), where ch0 is a numpy array containing the actual waveform. It will be in the args dictionary given to mesolve/sesolve. Tensor:; - Add back support for the following: tensor([1, Qobj(...)]), which makes life easier when constructing operators programmatically (and used to work in earlier versions). I'd be happy to hear what you think. Regards,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/141:145,depend,dependence,145,https://qutip.org,https://github.com/qutip/qutip/pull/141,1,['depend'],['dependence']
Integrability,"Hi,. There is a [manual integration](https://github.com/qutip/qutip/blob/master/qutip/floquet.py#L602-L624) using rectangles method in `qutip.floquet` file which sometimes fail. Problem is that the number of timesteps, `nT`, is hardcoded and not accessible to the user. In my case, `nT = 100` does not seem to be enough and the integral is wrong. A quick and dirty fix is to have an extra `nT=100` keyword argument to `floquet_master_equation_rates`, so that user can overload it. Still, it does not seem to be the most efficient way of doing it. I have a quick fix I can contribute which is using `scipy.integrate.simps` instead. This requires keeping an array of values to integrate in memory (which is less memory-efficient) but I could keep `nT=100` and get the correct integral by using this method. I guess the best option would be to use [`scipy.integrate.quad`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.quad.html#scipy.integrate.quad), as it uses an adaptive algorithm. I can contribute a fix for this, just looking for feedback on the best available option :). Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/767:24,integrat,integration,24,https://qutip.org,https://github.com/qutip/qutip/issues/767,6,['integrat'],"['integrate', 'integration']"
Integrability,"Hi,; I had a similar issue recently. See; https://stackoverflow.com/questions/11912878/gcc-error-gcc-error-trying-to-exec-cc1-execvp-no-such-file-or-directory. The second suggestion. sudo apt-get update; sudo apt-get install --reinstall build-essential. worked for me. Best of luck with it. Alex. On Thu, 13 Jun 2019 at 09:32, PZJuly <notifications@github.com> wrote:. > Dear all,; >; > I'm trying to install the latest release of QuTip on Ubuntu system. Since; > our workstation hasn't been connected to internet, I; > downloaded Anaconda3-2019.03-Linux-x86_64 and qutip-4.3.1.tar, and attempt; > to install from source code.; >; > Firstly I successfully installed Anaconda with the command:; > bash ~/Downloads/Anaconda3-2019.03-Linux-x86_64.sh; >; > Then in the conda environment I typed the command:; > python setup.py install; >; > I get the following error message:; >; > gcc -pthread -B /home/pz/anaconda3/compiler_compat -Wl,--sysroot=/; > -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -Iqutip/cy; > -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; > -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; > -I/home/pz/anaconda3/include/python3.7m -c qutip/cy/spmatfuncs.cpp -o; > build/temp.linux-x86_64-3.7/qutip/cy/spmatfuncs.o -w -O3 -march=native; > -funroll-loops; > gcc: error trying to exec 'cc1plus': execvp: No such file or directory; > error: command 'gcc' failed with exit status 1; >; > It seems the gcc compiler isn't correctly located? Or what else problem.; >; > I checked the gcc version on the workstation:; > gcc --version; > gcc (Ubuntu 8.3.0-6ubuntu1~18.10) 8.3.0; > Copyright (C) 2018 Free Software Foundation, Inc.; > This is free software; see the source for copying conditions. There is NO; > warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; >; > whereis gcc; > gcc: /usr/bin/gcc /usr/lib/gcc /usr/share/man/man1/gcc.1.gz; >; > How can I direct the installer to find the gcc compiler?; >; > Thanks!; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-501609220:863,message,message,863,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-501609220,1,['message'],['message']
Integrability,"Hi,; I want to discuss 2 points about how we manage time dependent Hamiltonian, relating to the discussion started on qucontrol/krotov#56. First, presently function coefficients are defined as:; ```; def f(t, args):; return ...; ```; With `args` is a dictionary containing extra variables to pass to the function. For backward compatibility; ```; def f(t, state, args):; return ...; ```; is also accepted if the option `rhs_with_state` is set to `True`. . But there have been demand to accept more signatures: `f(t)` and `f(t, **args)`. PR #1123, when ready, should allow both signature using options. . The best signature I believe is `f(t, **args)` since it allows to use more natural function call using kwargs (`f(t, w=0, a=1)`). However, it is the slowest in the #1123 implementation (up to 10x): some items are added to `args` for internal use and they need to be filtered at each call. It could be brought to 2.5x with some work, but no better. `f(t)` is about 2x slower than `f(t, args)`. But it's less agile: if the Hamiltonian use `f(t, w1=0)`, we cannot add a c_ops using `f(t, w2=0)`, both function must accept `w1` and `w2`. `args` could just hide unused items. Which ever we choose as the main one will be 2~3x faster than the other. We can have automatic detection of the signature if we want to be fancy. Which signature do you think is better?. Second, these function can depend on the state with the option `rhs_with_state`. Thus the coefficients are `f(t, state, args)` with `state` a 1D numpy array.; When making QobjEvo, I added special `args`' keys that indicate that the value should be updated with the state: setting `args = {""val=Qobj"":psi0, ""val"":psi0}` would tell `args[""val""]` to be updated with the state at each use in the solver. The state can be obtained as Qobj, np.array or the args could be updated to be the expectation value of another Qobj.; There are some bug for it in master presently but it will work with PR #1127. Using these special keys for this work wel",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1136:57,depend,dependent,57,https://qutip.org,https://github.com/qutip/qutip/issues/1136,1,['depend'],['dependent']
Integrability,"Hi,; There are many methods for the steadystate solver, some are faster, some are less stable. I would suggest trying other method until your find a good one for your problem.; Available method are: ; `'direct', 'eigen', 'iterative-gmres', 'iterative-lgmres', 'iterative-bicgstab', 'svd', 'power', 'power-gmres', 'power-lgmres', 'power-bicgstab'`. `'direct'` and `'power'` can use mkl as a solver, all can use scipy. You can also try to change some options such as the tolerance and max iteration number. ; The options for each solver are different depending on the solver and not all are documented. ; I list them here if you want to go deeper:. For scipy:; ```; 'sparse': True, ; 'use_rcm': False,; 'use_wbm': False, ; 'weight': None, ; 'use_precond': False,; 'all_states': False, ; 'M': None, ; 'x0': None, ; 'drop_tol': 1e-4,; 'fill_factor': 100, ; 'diag_pivot_thresh': None, ; 'maxiter': 1000,; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None,; 'permc_spec': 'COLAMD', ; 'ILU_MILU': 'smilu_2',; 'restart': 20, ; 'return_info': False,; 'info': _empty_info_dict(),; 'verbose': False, ; 'solver': 'scipy'; ```. For mkl:; ```; 'max_iter_refine': 10, ; 'scaling_vectors': True, ; 'weighted_matching': True, ; 'return_info': False, ; 'info': _empty_info_dict(), ; 'verbose': False, ; 'solver': 'mkl', ; 'use_rcm': False, ; 'use_wbm': False, ; 'weight': None, ; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None, ; 'maxiter': 1000; ```. Lastly, most steadystate's method have a logger if you activate debug in setting:; ```; import qutip.settings as settings; settings.debug = True; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834:549,depend,depending,549,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834,1,['depend'],['depending']
Integrability,"Hi. I replaced scipy wrapper with _data.solve. I ran pytest and error occurred. Does anybody know how to solve this? Thank you. File ""qutip/core/data/dispatch.pyx"", line 582, in qutip.core.data.dispatch.Dispatcher.__call__; raise TypeError(""unknown types to dispatch on: "" + str(dispatch)) from None; TypeError: unknown types to dispatch on: [<class 'scipy.sparse._csr.csr_matrix'>, <class 'numpy.ndarray'>]; Traceback (most recent call last):; File ""/root/opt/qutip/qutip/solver/countstat.py"", line 83, in _solve; return _data.solve(A, V, ""splu"")",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2109#issuecomment-1458453064:21,wrap,wrapper,21,https://qutip.org,https://github.com/qutip/qutip/issues/2109#issuecomment-1458453064,1,['wrap'],['wrapper']
Integrability,"Hi. OK, I see. For implicit SDE solvers there is and advantage in having the rhs function calculating the state at the next time-step. I hesitated doing it like that, because I didn't want to mix up the definition of the stochastic SDE contribution with the deterministic part, which sometime in the future should use qutip's existing framework for time-dependent hamiltonian and collapse operators. Having the stochastic rhs function exposed to all that is a bit unnecessary and makes things more complicated than it needs to be. However, I think I found a reasonable compromise in that I created new _rhs_psi_deterministic and _rhs_rho_deterministic where the current deterministic contributions are calculated. These functions can now be called from a stochastic rhs implementation, like this. ```; dpsi_t = _rhs_psi_deterministic(H, psi_t, t, dt, args); ```. In this way the implementation of a stochastic rhs function is relatively isolated from how the deterministic part is calculated (which right now is trivial, but which could become more complex when time-dependent systems are implemented). However, it also gives all the flexibility needed in the rhs function, and these deterministic rhs functions do not need to be used if it is not suitable in a particular stochastic rhs implementation. . I've added the changes to the rhs behavior to the https://github.com/qutip/qutip/tree/sme-rhs-restructuring and updated the gist with the variant of your notebook. http://nbviewer.ipython.org/6153688. Note that a few other things, like the rhs function signature, had to change in the process. I hope that this updated API will be flexible enough to let you implement implicit solver. Regards rhs implementation and d1,d2 function: Yes, I understand that not all possible rhs schemes might be compatible with the parameterization with d1 and d2 functions, but when it is possible it has the great advantage that the user do not need to worry about how the rhs is implemented, only define the SDE",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35#issuecomment-22156426:354,depend,dependent,354,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22156426,2,['depend'],['dependent']
Integrability,"Hi. Thanks for reporting this problem. I'm not sure if I'd call it a bug or not, but I understand that this behavior can be a bit confusing. With odeOpts.rhs_reuse = True the same function will be use until rhs_clear() is called, which in your case would be. qtp.rhs_clear(); qtp.propagator([H0, [Hint, '1-w*t']], 5, [], {'w':1/5.}, opt=odeOpts). when yo change the time-dependency function strings. . Maybe this needs to be emphasized more in the documentation, or perhaps rhs_clear() could be called automatrically from within propagator, but this could prevent one from really reusing the rhs function for several propagators with the same rhs function (for example with different H0 or Hint). . I'll leave this ticket open for now so we'll remember to think some more about how this issue should be handled in the best way. . Thanks again for your feedback!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/18#issuecomment-17106896:371,depend,dependency,371,https://qutip.org,https://github.com/qutip/qutip/issues/18#issuecomment-17106896,1,['depend'],['dependency']
Integrability,"Hi. Thanks, but I am now getting a new error. If the code is-. `from qutip import *. import numpy as np. import matplotlib.pyplot as plt. print(Qobj())`. Then there is no error whatsoever. If the code is-. `from qutip import *. import numpy as np. import matplotlib.pyplot as plt. print(Qobj()). print(Qobj([[1],[2],[3],[4],[5]]))`. Then it gives expected result if I run it first thing after launching spyder. But if I have already run any qutip code and then try to run this code, then I get the following error-. File ""/home/premkr/.local/lib/python3.7/site-packages/scipy/sparse/base.py"", line 283, in __bool__; raise ValueError(""The truth value of an array with more than one "". ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(). The full error message is-. runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'); Traceback (most recent call last):. File ""<ipython-input-2-af424448e75a>"", line 1, in <module>; runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'). File ""/usr/lib/python3/dist-packages/spyder_kernels/customize/spydercustomize.py"", line 678, in runfile; execfile(filename, namespace). File ""/usr/lib/python3/dist-packages/spyder_kernels/customize/spydercustomize.py"", line 106, in execfile; exec(compile(f.read(), filename, 'exec'), namespace). File ""/home/premkr/Dropbox/work/python/qutip/gksl_learning.py"", line 19, in <module>; print(Qobj([[1],[2],[3],[4],[5]])). File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/qobj.py"", line 256, in __init__; _tmp = sp.csr_matrix(data, dtype=complex). File ""/home/premkr/.local/lib/python3.7/site-packages/scipy/sparse/compressed.py"", line 86, in __init__; self._set_self(self.__class__(coo_matrix(arg1, dtype=dtype))). File ""/home/premkr/.local/lib/python3.7/site-packages/scipy/sparse/compressed.py"", line 86, in __init__; self._set_self(self.__class__(c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2121#issuecomment-1469601223:804,message,message,804,https://qutip.org,https://github.com/qutip/qutip/issues/2121#issuecomment-1469601223,1,['message'],['message']
Integrability,Hi.How could I use the Hamiltonian in mesolve.I mean for time dependent Hamiltonian I need to know the elements of Hamiltonian that mesolve use.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1411:62,depend,dependent,62,https://qutip.org,https://github.com/qutip/qutip/issues/1411,1,['depend'],['dependent']
Integrability,"Hi; Lambda is diagonal matrix that describes repopulation in atomic system; and not act on density matrix in master equation ; You can see more details in chapter 5 of book:; Optically polarized atoms; By Simon M. Rochester. Thanks again . Sent from my iPhone. > On Sep 20, 2021, at 11:47 PM, Eric Giguère ***@***.***> wrote:; > ; > I cannot give an example without knowing what lambda is.; > If the lambda term does not depend on rho, I would not use mesolve but just build the matrix using numpy and scipy.; > The other terms can be represented as qutip.liouvillian(H) - (qutip.spre(T) - qutip.spost(T))/2.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or unsubscribe.; > Triage notifications on the go with GitHub Mobile for iOS or Android.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1665#issuecomment-923607868:421,depend,depend,421,https://qutip.org,https://github.com/qutip/qutip/issues/1665#issuecomment-923607868,1,['depend'],['depend']
Integrability,"Hi; String coefficient do not work in parallel on windows. ; There are no other windows specific bug reported, so if you stick to function coefficient for time dependent system, you should be fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084#issuecomment-531317211:160,depend,dependent,160,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531317211,1,['depend'],['dependent']
Integrability,"Hmm, it still seems to use the old travis ci configuration, where I tried to install numpy/scipy with pip without wheels. But took too long to install the dependencies that way, and the tests will probably timeout and get cancelled. In the current travis ci configuration uses pip with wheels to install numpy/scipy much faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36083480:155,depend,dependencies,155,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083480,1,['depend'],['dependencies']
Integrability,"Hmm, this would add a run-time dependency on distutils... which probably in normal cases would not be an issue, but we would have to add it as a dependency in the deb package and perhaps also in macports etc.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/207#issuecomment-50951673:31,depend,dependency,31,https://qutip.org,https://github.com/qutip/qutip/issues/207#issuecomment-50951673,2,['depend'],['dependency']
Integrability,"Hopefully `sin(t) if t > 4 else cos(t)` should work for you?. Internally the relevant data structures either compile standard Python to code objects or go native via Cython, so the rule of thumb is ""would `eval(my_string)` give me what I want?"". QuTiP provides some basic wrapping of the scoping rules so things like `t` are available, and the standard numpy functions `sin`, `cos`, etc., are available without needing the namespace, but it's not got a full DSL for specifying time-dependence - it just uses regular Python.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1240#issuecomment-620486072:272,wrap,wrapping,272,https://qutip.org,https://github.com/qutip/qutip/issues/1240#issuecomment-620486072,2,"['depend', 'wrap']","['dependence', 'wrapping']"
Integrability,How can I use QobjEvoFunc to write collapse operator with time dependent operator?could you give an example?; @Ericgig,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1398#issuecomment-740542623:63,depend,dependent,63,https://qutip.org,https://github.com/qutip/qutip/issues/1398#issuecomment-740542623,1,['depend'],['dependent']
Integrability,How to implement a time-dependent measurement or observable,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1364:24,depend,dependent,24,https://qutip.org,https://github.com/qutip/qutip/issues/1364,1,['depend'],['dependent']
Integrability,"I agree that unifying the interface would be ideal for QuTiP 5.0. I was aiming to do so with Bloch and also clean-up the code on my way. For tomography, visualization and distribution, we may be able to include them in the Unitary Hack if we make a more detailed issue with the requirements (provided there is still enough room for new bounties).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1910#issuecomment-1142357617:26,interface,interface,26,https://qutip.org,https://github.com/qutip/qutip/issues/1910#issuecomment-1142357617,1,['interface'],['interface']
Integrability,I agree with @jakelishman's general principle (and maybe we should even move the tests out of the `qutip` package for v5 still) but it's also really important to have an easy way for data layer implementations to run a comprehensive test suite *that is defined by the data layer*. I suspect that if anyone is running tests against master (i.e. what is currently dev.major) they will *want* tests to break if we add new methods. I have a slightly different proposal:. What if we create `qutip.core.data.testing` which is an explicitly exported suite of pytest classes that we intentionally expose for data layers to use? Initially the file can just import test classes from `qutip.tests.core.data`. I would also not use `__all__` in the individual test packages but instead import the test classes explicitly in `qutip.core.data.testing` so that it's 100% clear by reading just that file what the exported interface is (and adding new tests requires explicitly adding them into the exposed package).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-979884874:905,interface,interface,905,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-979884874,1,['interface'],['interface']
Integrability,"I agree with this, with some additional points:; 1. `QobjEvo` also needs to be handled by `__matmul__`, but this should be handled by returning `NotImplemented`, and letting `QobjEvo.__rmul__` dispatch it to `QobjEvo.__rmatmul__`.; 1. however we choose to do this, `__mul__` should return `NotImplemented` if the other element can't be handled correctly; it shouldn't raise an exception by itself. The ""Pythonic"" way is to try/catch an exception in handling, but this just means we need to be sure that all `__mul__` methods do proper error checking, and _do_ reject invalid input rather than just silently doing weird stuff.; 1. what do we want to do in response to being multiplied with Numpy arrays? We have to be careful, because otherwise we might do very different things depending on whether we're being multiplied from the left or right by the Numpy array, which isn't really desirable. My first instinct is to say we should make ourselves appear as a scalar type to Numpy, so it broadcasts the multiplication over the scalar values in its array. To do that, we may need to play a little with `__array__`, `__array_ufunc__` and `__array_function__`, and return `NotImplemented` from `Qobj.__mul__(array)`. I think this maybe gives the most useful behaviour? I can't imagine a situation where it would make sense for a data-layer type to accept a Numpy array in a scalar-multiplication routine, and doing things this way allows people to use the broadcasting support of Numpy for convient looping. Just for posterity, I'm really strongly against any automatic promotion to `Qobj`, with the exception of handling scalar numbers in `__add__` and `__sub__`, where mathematical convention is that they mean the relevant identity operator scaled by the scalar. Having that is also necessary to have `sum()` work with `Qobj` ergonomically. I know that's not the suggestion here, just thought I'd mention it again!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1611#issuecomment-882613672:778,depend,depending,778,https://qutip.org,https://github.com/qutip/qutip/pull/1611#issuecomment-882613672,2,"['depend', 'rout']","['depending', 'routine']"
Integrability,"I also come across these questions on time-dependent evolutions where the time-dependent part of the Hamiltonian does not look like what QuTiP asks, i.e., A f(t), where A is an operator and f(t) some time-dependent function giving the coefficients. In those cases, I suggest directly moving to a superoperator picture and solving the equation,. dp/dt = L(t) p where L(t) now contains the superoperator representation of the full Hamiltonian. @nonhermitian could you please comment if the QuTiP TD stuff was made only for Hamiltonians which can be written in this A f(t) form only?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-460973144:43,depend,dependent,43,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-460973144,3,['depend'],['dependent']
Integrability,"I also got some wrong result with mesolve, which uses ZVODE integration method. The mesolve raises no warning. But I was able to get the right result with ISODA method. . The situation was applying a Pi pulse(~50 ns) to the qubit and wait about 1000 ns and then apply another Pi pulse. The second Pi pulse had no effect for the final state.; I was using [qobj, func] pairs for the time dependent Hamiltonian, where func is the self-defined gate envelope.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1038#issuecomment-607315509:60,integrat,integration,60,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-607315509,2,"['depend', 'integrat']","['dependent', 'integration']"
Integrability,"I also just tried an mesolve simulation after removing the collapse operators (in Qutip 4.7) and now the propagator results seem to match; ```shell; results = mesolve(H, psi_0, t, c_ops = []); U = propagator(H, t, c_ops=[]); plt.plot(t, expect(a_u.dag() * a_u, results.states), label=""mesolve""); for i in range(len(t)):; plt.plot(t[i], expect(a_u.dag() * a_u, U[i]*psi_0), ""x"", color=""orange""); plt.ylabel(""Population""); plt.xlabel(""Time""); plt.legend(); plt.show()```. ![image](https://github.com/user-attachments/assets/ae1f3097-044e-419b-98f1-1f0462edb9f2). It makes me think that the propagator is not using a time-dependent collapse operator possibly?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2532#issuecomment-2356706508:619,depend,dependent,619,https://qutip.org,https://github.com/qutip/qutip/issues/2532#issuecomment-2356706508,1,['depend'],['dependent']
Integrability,"I also note that I'm not replying to the thread I thought I was - I thought I was in `krotov`! For my response to the discussion points:; - I think the function `qutip.mesolve` shouldn't change interface at all for 5.0 - we can change its backend, but I think it'll be a huge hindrance to adoption of 5.0 if we make major breaking changes to effectively our premier function, and I don't see a need to do that. We can add, rather than change, and keep `mesolve` as the ""quick-and-dirty"" method that just works.; - I'm in favour of exposing the different parts of the `mesolve` process as user-accessible, composable chunks. So something like exposing a `mesolve_prepare_ode(H, state, c_ops) -> OdeState` function, where `OdeState` has properties `rhs: QobjEvo`, `state: Qobj`, `time: float` (`sesolve_prepare_ode` and `mcsolve_prepare_ode` would presumably return the same object, or a derived object). Then we'd have an `Integrator` class, which encapsulates an integration step using whatever integrator of choice, so there's one that encapsulates the scipy integrator, one which is a Cython-ised RK4 implementation, etc. Then the low-level user would simply write the `for time in times` loop themselves; at this level, there's nothing fancy that QuTiP adds, so we may as well just expose it directly. I think this architecture is approximately what Eric had in mind too, though I presumably haven't used the same names.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859917462:194,interface,interface,194,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859917462,5,"['Integrat', 'integrat', 'interface']","['Integrator', 'integration', 'integrator', 'interface']"
Integrability,"I am checking out Azure pipelines, which seems to have some (preferential?) integration with GitHub https://azure.microsoft.com/en-us/services/devops/pipelines/. Cc @tehruhn also for the previous comments.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/959#issuecomment-540523107:76,integrat,integration,76,https://qutip.org,https://github.com/qutip/qutip/issues/959#issuecomment-540523107,1,['integrat'],['integration']
Integrability,I am happy with the changes and explanations. ; I see the Python2.7 check has failed though. I am not sure what the error message implies. @cgranade do you have any idea?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/358#issuecomment-128688035:122,message,message,122,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128688035,1,['message'],['message']
Integrability,"I am having some trouble with the function mesolve. The situation is the following: I have a collection of Hamiltonians and Jump Operators which includes 69 timesteps each, and I want to evolve a initial state to each of this timesteps. However, Qutip is returning ""Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class."". I tryied to change nsteps parameter but it just doesnt work for any value of it, no matter how big the number is. H= Hamiltonian, shape: 69,2,2; list_Jump-op= Jump operators, shape:69,2,2; time= timesteps, shape (69,); estados_val= the different states that I want to evolve on this dynamics, shape( 6,69,2,2) . Note that I am only taking the 0th element on the axis with lenght of 69. predictions=[mesolve(H,; Qobj(estados_val[i][0]),; time,list_Jump_op,options=Options(nsteps=10000000000000000)) for i in range(len(estados_val))]. The terminal out put is; /home/andrius/anaconda3/lib/python3.8/site-packages/scipy/integrate/_ode.py:1013: UserWarning: zvode: Excess accuracy requested. (Tolerances too small.); warnings.warn('{:s}: {:s}'.format(self.__class__.__name__,; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-11-0bc27bfd6f01> in <module>; 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. <ipython-input-11-0bc27bfd6f01> in <listcomp>(.0); 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605:281,integrat,integration,281,https://qutip.org,https://github.com/qutip/qutip/issues/1605,1,['integrat'],['integration']
Integrability,"I am new to quantum computing and I want to use Qutip to calculate the entanglement entropy on my M1 MacBook Pro. However, I cannot import the Qutip library into either Jupyter notebook or Python3.9. The error message as shown in follow. May I ask how to solve this problem? Thank you. . ```python; IndexError Traceback (most recent call last); <ipython-input-4-82c62ef8635d> in <module>; ----> 1 from qutip import *. /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/qutip/__init__.py in <module>; 145 # if num_cpu is 0 set it to the available number of cores; 146 import qutip.hardware_info; --> 147 info = qutip.hardware_info.hardware_info(); 148 if 'cpus' in info:; 149 qutip.settings.num_cpus = info['cpus']. /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/qutip/hardware_info.py in hardware_info(); 121 """"""; 122 if sys.platform == 'darwin':; --> 123 out = _mac_hardware_info(); 124 elif sys.platform == 'win32':; 125 out = _win_hardware_info(). /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/qutip/hardware_info.py in _mac_hardware_info(); 46 l[1].strip('.\n '); 47 results.update({'cpus': int(info['physicalcpu'])}); ---> 48 results.update({'cpu_freq': int(float(os.popen('sysctl -n machdep.cpu.brand_string'); 49 .readlines()[0].split('@')[1][:-4])*1000)}); 50 results.update({'memsize': int(int(info['memsize']) / (1024 ** 2))}). IndexError: list index out of range; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1473:210,message,message,210,https://qutip.org,https://github.com/qutip/qutip/issues/1473,1,['message'],['message']
Integrability,"I am running a IPython/Jupyter Notebook via [supervisor](http://supervisord.org/) which does not export the `$HOME` environment variable (this is of course easily fixable). When importing qutip, I get the following warning message:. ```; WARNING:qutip.settings:Error loading RC file.; Traceback (most recent call last):; File ""/home/mvd/miniconda3/lib/python3.4/site-packages/qutip/__init__.py"", line 138, in <module>; os.environ['HOME'], "".qutiprc""; File ""/home/mvd/miniconda3/lib/python3.4/os.py"", line 633, in __getitem__; raise KeyError(key) from None; KeyError: 'HOME'; ```. Since this is just a warning, does it mean that there are no problems, or will it have some effects?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/365:223,message,message,223,https://qutip.org,https://github.com/qutip/qutip/issues/365,1,['message'],['message']
Integrability,"I am trying to create an exponential of some operators multiplied by time-dependent functions. I am using the[ standard](http://qutip.org/docs/latest/guide/dynamics/dynamics-time.html) method to define the time-dependent operators. However, the expm method cannot exponentiate this list format. Is there another way to obtain the exponential of quantum operators multiplied by time-dependent coefficients in qutip?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1308:74,depend,dependent,74,https://qutip.org,https://github.com/qutip/qutip/issues/1308,3,['depend'],['dependent']
Integrability,"I am trying to run this code to test mcsolve():; ```; import numpy as np; from qutip import *. def hamiltonian_t(t, args):; #; # evaluate the hamiltonian at time t. ; #; H0 = args['H0']; H1 = args['H1']; w = args['w']. return H0 + H1 * np.sin(w*t). N = 2 # set where to truncate Fock state for cavity; a = destroy(N); psi0 = basis(N, 0) # define initial state. w_c = 1.0 * 2 * np.pi # cavity frequency; w = w_c; kappa = 0.001 * 2 * np.pi. H0 = w_c * a.dag()*a # time-independent term; H1 = kappa*(a.dag() + a) # time-dependent term. c_ops = [] # Build collapse operators; c_ops.append(np.sqrt(kappa) * a). args = {'H0': H0, 'H1': H1, 'w': w}. times = np.linspace(0, 10, 100) # define time vector. output = mcsolve(hamiltonian_t, psi0, times, c_ops, [a.dag()*a], args=args); ```. I am getting this error:; ```; Traceback (most recent call last):; File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 365, in run_test; rhs, ode_args = self.ss.makefunc(ss); NameError: name 'ss' is not defined. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""mc_solve_example2.py"", line 33, in <module>; output = mcsolve(hamiltonian_t, psi0, times, c_ops, [a.dag()*a], args=args); File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 223, in mcsolve; mc.run_test(); File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 368, in run_test; raise Exception(""Error calculating H""); Exception: Error calculating H; ```. Here is the output of qutip.about(); ```; QuTiP Version: 4.5.1; Numpy Version: 1.18.4; Scipy Version: 1.4.1; Cython Version: 0.29.19; Matplotlib Version: 3.2.1; Python Version: 3.6.8; Number of CPUs: 112; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. Any advice how to fix that?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1368:517,depend,dependent,517,https://qutip.org,https://github.com/qutip/qutip/issues/1368,1,['depend'],['dependent']
Integrability,"I am trying to solve the following type of problem with time-dependent Hamiltonian; . H = H_0 - f(t) H_1; f(t) = $ A exp(-(t/sigma)^2) $. # When A is constant, the usual thing to do is. ```; def H1_coeff(t, args):; A = args['A']; sig = args['sigma']; return A * np.exp(-(t/sig)**2). H = [H0, [H1, H1_coeff]]; args = {'A': 9, 'sigma': 5}. result = mesolve( H, psi0, t, [], e_ops, args = args); ```. # I am trying to solve a problem where A is a list. ```; A = [1, 3, 5, 7, 9]; ```; # How do I implement **""mesolve**"" to get the final_states in this case?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2026:61,depend,dependent,61,https://qutip.org,https://github.com/qutip/qutip/issues/2026,1,['depend'],['dependent']
Integrability,"I am unable to find the list of states returned by the essolve function. For example:. ```python; import qutip as qt; test = qt.essolve(qt.qeye(2), qt.ket2dm(qt.basis(2, 0)), [1,2,3], c_op_list=[], e_ops=[]); ```; Returns the message; ```; Result object with essolve data.; --------------------------------; states = True, expect = True; num_expect = 0, num_collapse = 0; ```; but if I try to access the states; ```; test.states; >>> []; ```; Should this contain a list of states like mesolve()? It seems a similar issue has been raised before: https://groups.google.com/forum/#!topic/qutip/st3i6STPrQY. Here's my environment details:. ```; QuTiP: Quantum Toolbox in Python; ================================; QuTiP Version: 4.5.0; Numpy Version: 1.16.4; Scipy Version: 1.1.0; Cython Version: 0.27.3; Matplotlib Version: 2.1.2; Python Version: 3.6.4; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\chris\Anaconda3\lib\site-packages\qutip; ============================================; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1262:226,message,message,226,https://qutip.org,https://github.com/qutip/qutip/issues/1262,1,['message'],['message']
Integrability,"I am using `mesolve` in the test now. I am not sure if that is considered a good style, since the test also depends on this function. I could also just hardcode the expected output. What do you think is better, @AGaliciaMartinez ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1843#issuecomment-1086200210:108,depend,depends,108,https://qutip.org,https://github.com/qutip/qutip/pull/1843#issuecomment-1086200210,1,['depend'],['depends']
Integrability,"I am using anaconda and qutip on Win10 system with VS2015 (community version). When solving Hamiltonian with time dependent coefficients, I get an ""ImportError"" that caused by cython which does not occur on linux. I've re-installed VS2015 and qutip many times, but this problem still exists. Is there any way to solve it? Here is my error message. **ImportError: Building module rhs22280 failed: [""distutils.errors.CompileError: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio 14.0\\\\VC\\\\bin\\\\cl.exe' failed with exit status 2\n""]**. [error_message.txt](https://github.com/qutip/qutip/files/3317876/error_message.txt)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1026:114,depend,dependent,114,https://qutip.org,https://github.com/qutip/qutip/issues/1026,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"I am using spyder. When I run the code once by pressing F5 button, then I get expected behaviour. But when I press F5 again, then I get error. If I modify the code and press F5, same error. If I restart spyder, then again I do not get any error on the first run, but the error repeats on subsequent runs. Yes, just running `import qutip` also gives the same error. I guess you are asking for the full error message and not just the last two lines. Here it is for `import qutip` for two subsequent runs.-. IN [1]: runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'). IN [2]: runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'); Traceback (most recent call last):. File ""<ipython-input-2-af424448e75a>"", line 1, in <module>; runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'). File ""/usr/lib/python3/dist-packages/spyder_kernels/customize/spydercustomize.py"", line 678, in runfile; execfile(filename, namespace). File ""/usr/lib/python3/dist-packages/spyder_kernels/customize/spydercustomize.py"", line 106, in execfile; exec(compile(f.read(), filename, 'exec'), namespace). File ""/home/premkr/Dropbox/work/python/qutip/gksl_learning.py"", line 11, in <module>; import qutip. File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/__init__.py"", line 106, in <module>; from qutip.qobj import *. File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/qobj.py"", line 2526, in <module>; import qutip.superop_reps as sr. File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/superop_reps.py"", line 74, in <module>; _SINGLE_QUBIT_PAULI_BASIS = (identity(2), sigmax(), sigmay(), sigmaz()). File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/operators.py"", line 278, in sigmax; return 2 * jmat(1 / 2, 'x'). File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/operators.py"", line 80, in jmat; A ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2121#issuecomment-1469319817:407,message,message,407,https://qutip.org,https://github.com/qutip/qutip/issues/2121#issuecomment-1469319817,1,['message'],['message']
Integrability,I believe a bad call to the integrate command was responsible.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-64521594:28,integrat,integrate,28,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64521594,1,['integrat'],['integrate']
Integrability,"I believe that all permutation are run with `parametrize`. So the input (`qobj`) is compared to each outputs `(expected`), not just the matching one. Also the rotation matrix (`U = rand_unitary(3)`) must be constant. Here, at least 4 different random operators are created. Instead of `parametrize` and `yield` simply calling the function `case` would work:; ```; yield case(""Test Qobj: trunc_neg works for positive opers.""), \; rand_dm(5), method; ```; to; ```; case(rand_dm(5), method, None); ```; To keep the message, `assert_almost_equal` has a `err_msg` keyword to raise if the test fails. I do not believe the `yield` is the cause of the no cython fails. ps. I will make a branch of this PR and will add `mark` to prepare a subset of tests for faster testing #1147.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-571198523:512,message,message,512,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571198523,1,['message'],['message']
Integrability,I believe the detailed comments from [pmenczel](https://github.com/pmenczel) is sufficient to wrap up this case.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2501#issuecomment-2250974952:94,wrap,wrap,94,https://qutip.org,https://github.com/qutip/qutip/issues/2501#issuecomment-2250974952,1,['wrap'],['wrap']
Integrability,"I believe the issue is on lines 833-835:. ``` python. if ODE.t > tlist[k]:; ODE.set_initial_value(y_prev, t_prev); ODE.integrate(tlist[k], step=0); ```. removing these lines gives similar performance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-64523119:119,integrat,integrate,119,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64523119,1,['integrat'],['integrate']
Integrability,"I believe this is the only `-march=native` we have. It will cause problem if left here so it's better to remove it. . However it may create a bigger slowdown than expected. If you look at [qutip/cy/src/zspmv.cpp](https://github.com/qutip/qutip/blob/master/qutip/cy/src/zspmv.cpp), you will see low level optimization that only activate on certain cpus. This is the main function used in solver (mat*vec) and can be 30% slower or faster than than scipy's version depending on the situation. Without this low level optimization, we are essentially doing the same thing as scipy so should get similar times.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/949#issuecomment-463470158:462,depend,depending,462,https://qutip.org,https://github.com/qutip/qutip/pull/949#issuecomment-463470158,1,['depend'],['depending']
Integrability,"I can move a part of the changes in coefficient to another PR, but not all of them.; I removed `shift` and `norm` from `Coefficient`, they become unused only with the new `QobjEvo`.; I will move the immutable `Coefficient` changes to another PR. The signature of `_BaseElement._call` would be `cdef (double complex, Qobj) _call(self, double t, dict function_qobj)`.; `_EvoElement` would return `(coefficient(t), qobj)` with `qobj` fixed.; `_FuncElement` would return `(1., func(t, args))` with `func` a function based time dependant system.; I also keep a copy of the `Data` instead of reading it from the `Qobj` each time, since it's a python object. For example, in `expect` I do:; ```; element._call(t, ...); out += expect(element.data, state) * element.coeff; ```; If another call to `_call` arrive between the commands, the output would be wrong.; But this call all be solved by splitting `_call`...; `out += expect(element.data(t, ...), state) * element.coeff(t, ...)`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1481#issuecomment-822857273:523,depend,dependant,523,https://qutip.org,https://github.com/qutip/qutip/pull/1481#issuecomment-822857273,1,['depend'],['dependant']
Integrability,I can reproduce it with matplotlib `3.9` but actually I am not sure if it is a qutip problem. The error message seems pure matplotlib,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2400#issuecomment-2146968944:104,message,message,104,https://qutip.org,https://github.com/qutip/qutip/issues/2400#issuecomment-2146968944,1,['message'],['message']
Integrability,"I can reproduce the problem by the following codes: . from qutip import *; ; N = 10; v = rand_ket(N); p1 = v * v.dag(); p2 = Qobj([[ v[n,0]*v[m,0].conj() for m in range(0,v.shape[0])] ; for n in range(0,v.shape[0])]); print(p1-p2). where p1 is not giving correct result. Everything is correct using smaller N. The code also works fine on my server, so it seems to be environment dependent. . I am working on Arch Linux, Python3.6.1 with latest version of qutip from AUR (4.1.0-1). . Any suggestion of what I can try? ; Thank you!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/690:379,depend,dependent,379,https://qutip.org,https://github.com/qutip/qutip/issues/690,1,['depend'],['dependent']
Integrability,"I can't merge it if you close the pull request (well technically i can, but not using the github web interface).. Please reopen the PR and I'll try to merge it tomorrow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/246#issuecomment-64207826:101,interface,interface,101,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-64207826,1,['interface'],['interface']
Integrability,"I cannot give an example without knowing what lambda is.; If the lambda term does not depend on rho, I would not use `mesolve` but just build the matrix using `numpy` and `scipy`.; The other terms can be represented as `qutip.liouvillian(H) - (qutip.spre(T) - qutip.spost(T))/2`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1665#issuecomment-923207818:86,depend,depend,86,https://qutip.org,https://github.com/qutip/qutip/issues/1665#issuecomment-923207818,1,['depend'],['depend']
Integrability,"I cannot reproduce this on either Ubuntu or Windows... `nstep` only sets the maximally allowed number of time steps. That exception is a quite general one. It only says that the ODE integrator fails. But the Larmor example is really a trivial one and if it fails then something very important must have been contaminated. If resinstalling in a fresh environment does not work, I can only suggest to debug at the scipy level.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896#issuecomment-1140440000:182,integrat,integrator,182,https://qutip.org,https://github.com/qutip/qutip/issues/1896#issuecomment-1140440000,1,['integrat'],['integrator']
Integrability,"I changed back the default integration method to `taylor1.5` for `smesolve` and `platen` for `ssesolve`.; The property that the state stay physical of `rouchon` is actually problematic since even when the `dt` is too large, the state still look fine but is totally wrong. Whereas other methods will get negative eigenvalues or Nan.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131#issuecomment-1481913534:27,integrat,integration,27,https://qutip.org,https://github.com/qutip/qutip/pull/2131#issuecomment-1481913534,1,['integrat'],['integration']
Integrability,"I closed the issue; it is too vague, sorry about that. From: hrahman12 ***@***.***>; Sent: Wednesday, April 20, 2022 5:16 PM; To: qutip/qutip ***@***.***>; Cc: Anna Naden ***@***.***>; Author ***@***.***>; Subject: Re: [qutip/qutip] Details of QuTiP user's guide (Issue #1759). Hi Anna, thank you for replying can you please give some more information about which particular part/s of the user guides you are finding these errors?. —; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/1759#issuecomment-1104512322>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AN2AJU6X7MKML5BRRV4IWHLVGB62PANCNFSM5LYUHNQA>.; You are receiving this because you authored the thread.Message ID: ***@***.******@***.***>>",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1759#issuecomment-1104665213:720,Message,Message,720,https://qutip.org,https://github.com/qutip/qutip/issues/1759#issuecomment-1104665213,1,['Message'],['Message']
Integrability,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:228,depend,depend,228,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492,2,"['depend', 'interface']","['depend', 'interface']"
Integrability,I do not get a build failure under NumPy 1.10.1. What was the particular error message? Any changes would also have to be backward compatible with earlier NumPy versions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-154863591:79,message,message,79,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154863591,1,['message'],['message']
Integrability,"I do not have much time to look into this until Monday. However, attached is a time-dependent three-level system, driven by a cavity , that works just fine. Maybe some clues can be found there. ```python; #; # Single photon source based on a three level atom strongly coupled to a cavity; #; # We follow the treatment presented in Kuhn et al.,; # Appl. Phys. B 69, 373-377 (1999),; # http://www.mpq.mpg.de/qdynamics/publications/library/APB69p373_Kuhn.pdf,; # for more details see M. Hennrich's thesis,; # http://mediatum2.ub.tum.de/node?id=602970.; #; # We study the following lambda system,; #; # |e>; # --------; # / \; # Omega / \ g; # / \; # / -------; # ------- |g>; # |u>; #; # where |u> and |g> are the ground states and |e> is the exicted state.; # |u> and |e> are coupled by a classical laser field with Rabi frequency; # Omega, and |g> and |e> by a cavity field with 2g being the single-photon; # Rabi frequency.; #; from qutip import *; from pylab import *. # Define atomic states. Use ordering from paper; ustate = basis(3, 0); excited = basis(3, 1); ground = basis(3, 2). # Set where to truncate Fock state for cavity; N = 2. # Create the atomic operators needed for the Hamiltonian; sigma_ge = tensor(qeye(N), ground * excited.dag()) # |g><e|; sigma_ue = tensor(qeye(N), ustate * excited.dag()) # |u><e|. # Create the photon operator; a = tensor(destroy(N), qeye(3)); ada = tensor(num(N), qeye(3)). # Define collapse operators; c_op_list = []; # Cavity decay rate; kappa = 1.5; c_op_list.append(sqrt(kappa) * a). # Atomic decay rate; gamma = 6; # Use Rb branching ratio of 5/9 e->u, 4/9 e->g; c_op_list.append(sqrt(5 * gamma / 9) * sigma_ue); c_op_list.append(sqrt(4 * gamma / 9) * sigma_ge). # Define time vector; t = linspace(-15, 15, 100); # Define pump strength as a function of time; wp = lambda t: 9 * exp(-(t / 5) ** 2). # Set up the time varying Hamiltonian; g = 5; H0 = -g * (sigma_ge.dag() * a + a.dag() * sigma_ge). H1 = (sigma_ue.dag() + sigma_ue). H = [H0, [H1, '-9 * exp(-",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771#issuecomment-338360375:84,depend,dependent,84,https://qutip.org,https://github.com/qutip/qutip/issues/771#issuecomment-338360375,1,['depend'],['dependent']
Integrability,"I do not think that much can be done for the mesolver. The update here ; just addresses the resetting of the ODE solver, which is not done in the ; mesolver. I still think that spawning ntraj processes is not a very ; efficient thing to do. So I am working on cleaning that up. However, ; you are correct, moving the ODE creation outside of the mc_alg routine ; does have little effect. > Robert Johansson mailto:notifications@github.com; > December 1, 2014 at 13:48; > ; > Nice speed up! Is there anything here that we could also benefit from ; > in mesolve? Or is it specific to mcsolve in that it mostly affect the ; > ODE restart?; > ; > I doubt that the initial setup of an ODE instance before spawning ; > processes would have any significant impact on the performance (note ; > that multiprocessing does not use threads, it uses processes, so there ; > is no sharing of ODE instances between processes). Creating the ODE ; > instance once in the parent processor, or N times in N processes in ; > parallel therefore should not make much difference, if any.; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/pull/264#issuecomment-65020496.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-65020643:352,rout,routine,352,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65020643,1,['rout'],['routine']
Integrability,"I doc [http://qutip.org/docs/3.1.0/apidoc/functions.html](url) ; Under the section of master equation solver . > Time-dependent operators; > ; > For time-dependent problems, H and c_ops can be callback functions that takes two arguments, time and args, and returns the Hamiltonian or Liouvillian for the system at that point in time (callback format).; > ; > Alternatively, H and c_ops can be a specified in a nested-list format where each element in the list is a list of length 2, containing an operator (qutip.qobj) at the first element and where the second element is either a string (list string format), a callback function (list callback format) that evaluates to the time-dependent coefficient for the corresponding operator, or a NumPy array (list array format) which specifies the value of the coefficient to the corresponding operator for each value of t in twist. It seems that **in the version 3.1.0**, c_ops can be implemented as a callback functions in `mesolve`. Is this true? . Q.2; As mentioned in [https://groups.google.com/forum/#!topic/qutip/aIxxnbQ56W4](url), the callback function has not been developed for `mesolve` at the time of that post. But . > you have a callback function that is called for each time step and which constructs the system Liouvillian Here you are free to construct the collapse operators or Liouvillian in whichever way you want. From this, I think I can use the callback function to define the c_ops and integrate them in **Liouvillian** for `mesolve`. If I am interpreting it right, this can be done for c_ops with some complicated time dependence. Is that right? . _(However it is mentioned in [https://groups.google.com/forum/#!searchin/qutip/time$20dependent/qutip/S0IskSRy2M0/_2L6BzqAKTEJ](url) that I can use a callback function for `mesolve`?)_. Q.3; I know that I cannot use callback functions to define the c_ops directly in `mcsolve`. Can I use the callback functions to define the c_ops and integrate them in **Liouvillian** for `mcsolve` ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/223#issuecomment-223873117:1514,integrat,integrate,1514,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223873117,3,"['depend', 'integrat']","['dependence', 'integrate']"
Integrability,"I don't get any error in both cases. ; What is your `qutip.about()` message? ; By the way, QuTiP does not support anymore Python 2.7, see #882. ; My specifications are; ```; QuTiP Version: 4.3.1; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.28.5; Matplotlib Version: 2.2.3; Python Version: 3.6.7; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/796#issuecomment-497299113:68,message,message,68,https://qutip.org,https://github.com/qutip/qutip/issues/796#issuecomment-497299113,1,['message'],['message']
Integrability,"I don't know if it is relevant, but I copy-pasted the block in the first [post](https://github.com/qutip/qutip/issues/932#issue-378533309) of the thread and I do not get an error message by running it on OS High Sierra 10.13.6 in a Jupyter notebook. There is a clang warning ; ```; libstdc++ is deprecated; move to libc++ with a minimum deployment target of OS X 10.9 [-Wdeprecated]; ```; Other details. ```; QuTiP Version: 4.3.1; Numpy Version: 1.14.2; Scipy Version: 1.1.0; Cython Version: 0.28.5; Matplotlib Version: 2.2.3; Python Version: 3.6.7; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-466251384:179,message,message,179,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-466251384,1,['message'],['message']
Integrability,I don't know what the `continuous-integration/travis-ci/push` failing means...,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1188#issuecomment-593098940:34,integrat,integration,34,https://qutip.org,https://github.com/qutip/qutip/pull/1188#issuecomment-593098940,1,['integrat'],['integration']
Integrability,"I don't know, since jax is developed by google I expect it to work well with gpus it provide through collab... We don't use schur decomposition for mesolve directly. I think it's the integrator from diffrax that does, if not it could be the norm (it's using trace norm which call sqrtm instead of trace, fixed in #2408). Maybe trying other ODE solver or not normalizing would work. Neill seems to have run most of his test using dopri:. ```; from diffrax import Dopri5, PIDController. options = {; ""method"": ""diffrax"",; ""normalize_output"": False,; ""stepsize_controller"" : PIDController(rtol=1e-8, atol=1e-6), # This is now the default.; ""solver"": Dopri5(),; }; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2320#issuecomment-2090722078:183,integrat,integrator,183,https://qutip.org,https://github.com/qutip/qutip/issues/2320#issuecomment-2090722078,1,['integrat'],['integrator']
Integrability,"I don't think either ""missing"" or ""full"" should be used much with pure qutip. Only with plugins like qutip-jax it makes any sense to me. With ""missing"", you could set it so it will end up all in jax format and not have too much issues. . ""full"" will probably break HEOM, some steadystate feature, slow down scipy integrators, etc. ""missing? should be safe. Ok for `default_dtype_scope`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2519#issuecomment-2407529422:313,integrat,integrators,313,https://qutip.org,https://github.com/qutip/qutip/pull/2519#issuecomment-2407529422,1,['integrat'],['integrators']
Integrability,"I don't think it breaks the functional API at all - in fact it almost makes it stronger, since everything is a ""function"" at every stage. This kind of partial application is classic part of functional programming. Perhaps I don't understand _why_ you want to move to a class-based API? I'd be quite strongly against having the user have to instantiate classes to do very simple parts like creating operators. Certainly in Python programming, I don't think a class-based interface is de facto the right sort to aim for, and procedural is much more ""Pythonic"". For one, it's a lot of unnecessary boilerplate for simple operations. It adds cognitive complexity for the advanced user to decide ""should I use `displace` or `Displacer`?"", and in the strong majority of use-cases, the operator creation is not a computational bottleneck so we'd be adding it for no gain. A lot of operators have no meaningful reason to live in a class, like `sigmax` and so on, so now you have a split between operators that need a class and operators that don't, or you do something really crazy like requiring the user to do; ```python; sx_builder = qutip.operators.SigmaX(); sx = sx_builder.get_operator(); sy_builder = qutip.operators.SigmaY(); sy = sy_builder.get_operator(); sz_builder = qutip.operators.SigmaZ(); sz = sz_builder.get_operator(); ```; when all they wanted was `qutip.sigmax(), qutip.sigmay(), qutip.sigmaz()`. Obviously that example is a bit facetious, but what benefit does the user derive from having to write boilerplate to access simple functionality?. All the operators already share a class in `Qobj`, and things like `displace` and `sigmax` are factory methods of `Qobj`. What shared functionality do the factory methods possess that means they should be classes?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1293#issuecomment-646631332:470,interface,interface,470,https://qutip.org,https://github.com/qutip/qutip/issues/1293#issuecomment-646631332,1,['interface'],['interface']
Integrability,"I don't think it's your code, but I haven't looked in to it in sufficient detail yet. As it stands installing qutip is fine but importing it fails, as it is unable to find the C headers, and is spitting out multiple errors of the form ""distutils.errors.CompileError: command '/usr/bin/clang' failed with exit status 1"". I can provide the full error messages sometime tomorrow if I'm still unable to solve the problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/552#issuecomment-260194878:349,message,messages,349,https://qutip.org,https://github.com/qutip/qutip/issues/552#issuecomment-260194878,1,['message'],['messages']
Integrability,"I don't think we should print the whole bibtex content to screen by default when calling about(). I think a message to say.; ""Please cite QuTiP in your publication - for you convenience a bibtex file was saved to:\n"".join(filepath). I think really we should provide some way to turn off the saving of the bibtex file in settings as well",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/752#issuecomment-357751449:108,message,message,108,https://qutip.org,https://github.com/qutip/qutip/pull/752#issuecomment-357751449,1,['message'],['message']
Integrability,"I don't want the way to catch error depend on the map, `serial_map` and `loky_map` both return the error of the first failing iteration and stop there. Having `parallel_map` failing differently will mean that every time we want to catch an error in `mcsolve`, etc. we will have to catch both the expected error and the custom `ParallelMapException`. It also hide the kind of error and prevent us to act on it. I still think that stopping the map and returning the first error is the best options. It will ensure that all map functions fail the same way. In our case, the raised exceptions should be consistent so we should not need run all iteration to see every ways it can fail. And we don't waste computing time to compute result that will not be returned. Another options would to not raise any error and return the finished iteration. For mcsolve, we could have a result returning 99% of the asked trajectories with the note that 1% failed because of overwork from the solver. Trowing away all the work done for one error feels bad. However I can see this not being safe, so it would be a solver options for the user to set.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1969#issuecomment-1209406180:36,depend,depend,36,https://qutip.org,https://github.com/qutip/qutip/pull/1969#issuecomment-1209406180,1,['depend'],['depend']
Integrability,"I don’t know. It worked for me when I tried to install QuTiP from source; —with-openmp. The error was a different and I am on a different MacOS (I; also tried a conda install llvm, but what worked was gcc for me, with; openmp). I understand that you trying to install QuTiP? If so, how? conda / source /; pip? Consider doing it via conda if you are interested in the stable; version release (4.3), by activating the conda-forge channel as detailed in; the documentation. If QuTiP is installed and you receive this error while doing a specific; task, can you copy paste the message of qutip.about() here?. On Sat, 9 Mar 2019 at 14:37, Xiao <notifications@github.com> wrote:. > Try conda install gcc.; >; > Does that mean I should use gcc from the Anaconda directory?; >; > —; > You are receiving this because you commented.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/965#issuecomment-471148065>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AN5ffFcanH6qaCezLIKtW4SflaVsZ63Aks5vU0iCgaJpZM4bmfhd>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-471153754:573,message,message,573,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-471153754,1,['message'],['message']
Integrability,"I encountered a numerical error while simulating a Ramsey experiment using mesolve in QuTiP. Specifically, the simulation shows unexpected discontinuities and unphysical results in the oscillatory pattern. I have highlighted these problematic points with red circles in the plot for clarity.; <div align=""center"">; <img width=""314"" alt=""image"" src=""https://github.com/user-attachments/assets/e7a6fb3e-c9e8-4cf9-96ba-aefaf7e9a554"">; </div>. To make the problem clearer, I simplified the simulation model. The Hamiltonian used is:. $$ H_{\rm rot} = {\rm Re}[\Omega(t)]\frac{\sigma_x}{2} + {\rm Im}[\Omega(t)]\frac{\sigma_y}{2} $$. where $\Omega(t)$ is a time-dependent coefficient. The tlist and coefficients are both numpy arrays. Providing the entire code that generates these coefficients would be lengthy, so I preselected a few sets of coefficients and tlist where the issue is present. Specifically, the problematic data is from indices 92, 93, and 94, which have been highlighted in the plot. These are stored using np.savetxt. Below is the plot of the coefficients, showing that they are mainly real and differ only slightly. ```; plt.figure(); ax0 = plt.subplot(221); ax1 = plt.subplot(222). for wavedata_name in [""index92"",""index93"",""index94""]:; coef = np.loadtxt(f""{wavedata_name}_coef.txt"",dtype=np.complex128); tlist = np.loadtxt(f""{wavedata_name}_tlist.txt"",dtype=np.float64); ax0.plot(tlist, coef.real, label=f""{wavedata_name}""); ax1.plot(tlist, coef.imag, label=f""{wavedata_name}""); ax0.legend(); ax1.legend(); ; ax0.set_title(r""$\sigma_x$ coefficient""); ax1.set_title(r""$\sigma_y$ coefficient""); ```. <div align=""center"">; <img width=""314"" alt=""image"" src=""https://github.com/user-attachments/assets/b07b3a64-a2d4-458b-a04e-4c83c0c4c093"">; </div>; Despite these small differences, the simulation results show significant and unexpected variations. ; Below is simulation code and results. ```; import qutip; import numpy as np; import matplotlib.pyplot as plt. sx = qutip.sigmax(); sy = ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2552:657,depend,dependent,657,https://qutip.org,https://github.com/qutip/qutip/issues/2552,1,['depend'],['dependent']
Integrability,"I ended up here while implementing a Lyapunov-based control algorithm that uses the state to generate time dependent controls as some thing like:. f(t, args) = sin(args[""A""]*t)*(args[""current_state""]).tr() . It was a bit difficult to understand how to setup the solver to use this feature. I kind of got it to work and have a nice example that I can make into a tutorial. Will post soon. But we should definitely write some documentation about it both in the Qobj evo part, options section as well as mesolve. Is there an agreement on how this should be handled? Are we happy with passing it as an ""args""? I still am not sure why I have to use the ""state_as_Qobj=Qobj"" key in the args initialization to get this working. . In any case this should be documented well. In future versions of the Solvers, I suppose this problem would be easier to handle with stepping through the solver.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/947#issuecomment-1141501061:107,depend,dependent,107,https://qutip.org,https://github.com/qutip/qutip/issues/947#issuecomment-1141501061,1,['depend'],['dependent']
Integrability,"I find Python's `collections` module a good example (https://docs.python.org/3/library/collections.html). Python moved Collections Abstract Base Classes like `Iterable` to the `collections.abc` submodule. In python3.7, . The following code still works but there will be a deprecation warning; ```; from collections import Iterable; ```; ```; import collections; collections.Iterable; ```. It won't disturb other users since there is no warning when; ```; import collections; ```; ```; from collections import *; ```. But the following will give an error, ; ```; >>> from collections import *; >>> Iterable; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'Iterable' is not defined; ```; So for those who use ``from qutip import *``, they still don't know what happens. I'm not sure if it is possible to add a deprecation warning for this case separately. Maybe we can modify the top-level __init__.py so that we `qip` function is imported directly with the `qutip` namespace, it is wrapped with a deprecation warning. In this way, the warning only shows when the functions are called. Not sure if this is practical, though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1071#issuecomment-520506756:1023,wrap,wrapped,1023,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-520506756,1,['wrap'],['wrapped']
Integrability,"I find the discussion here relevant to a question I asked in QuTip mail; list. (Hope it doesn't interrupt your discussions:p). My previous question with the title ""Possible to realize a decay rate; depending on state occupation?"" can be seen here; https://groups.google.com/forum/#!topic/qutip/BqUZQEQN1c4. Paul Nation; kindly gave me some directions there. He suggested me define a Liouvillian with a Python function and; use rhs_with_state for solving. But unfortunately I didn't figure out how; this should be done. In case you are familiar with this approach, would you; please enlighten me? Thanks a lot!. Best regards, Pu Zhang; --; Faculty at School of Physics, Huazhong University of Science and Technology; Room 819 (N.), Yifu Science and Technology Building; 1037 Luoyu Road, Wuhan, China; E-mail: puzhang0702@hust.edu.cn <puzha@fotonik.dtu.dk>; Homepage: www.researchgate.net/profile/Pu_Zhang4; Phone: +86 18871860394. On Wed, Feb 6, 2019 at 6:56 PM Paul Nation <notifications@github.com> wrote:. > It is. But what is the use case where that cannot be done?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/946#issuecomment-460981727>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AGc5W_SnXDRo3hWJnnYT1BjkhC5A3Rvsks5vKrTNgaJpZM4agDjP>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-461354069:198,depend,depending,198,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-461354069,1,['depend'],['depending']
Integrability,"I get the following error message. My code runs fine on the first try, but gives the error if I try to run it again. I can restart the kernel every time, but would like to know if there's a fix. Could someone help please?. ---------------------------------------------------------------------------; UnboundLocalError Traceback (most recent call last); <ipython-input-7-becee6304ad3> in <module>; 60 ; 61 ; ---> 62 output3 = mesolve(HDGRnew, tpss.states[i], tlist_reg, c_opsn, [Xp], args=param); 63 ; 64 Xppt = output3.expect[0]*np.exp(1j*wlo*(tlist_reg)). /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 252 ss = H; 253 elif isinstance(H, (list, Qobj, QobjEvo)):; --> 254 ss = _mesolve_QobjEvo(H, c_ops, tlist, args, options); 255 elif callable(H):; 256 ss = _mesolve_func_td(H, c_ops, rho0, tlist, args, options). /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/mesolve.py in _mesolve_QobjEvo(H, c_ops, tlist, args, opt); 298 ; 299 nthread = opt.openmp_threads if opt.use_openmp else 0; --> 300 L_td.compile(omp=nthread); 301 ; 302 ss = SolverSystem(). /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo.py in compile(self, code, matched, dense, omp); 1553 if self.use_cython:; 1554 # All factor can be compiled; -> 1555 self.coeff_get, Code, file_ = _compiled_coeffs(; 1556 self.ops,; 1557 self.args,. /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo_codegen.py in _compiled_coeffs(ops, args, dyn_args, tlist); 121 """"""; 122 code = _make_code_4_cimport(ops, args, dyn_args, tlist); --> 123 coeff_obj, filename = _import_str(code, ""cqobjevo_compiled_coeff_"",; 124 ""CompiledStrCoeff"", True); 125 return coeff_obj(ops, args, tlist, dyn_args), code, filename. /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 80 if not import_list:; 81 raise",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1196:26,message,message,26,https://qutip.org,https://github.com/qutip/qutip/issues/1196,1,['message'],['message']
Integrability,"I had a quick play with the feature, for the cases I had stumbled on before, with `eigenstates()' ignoring default_dtype, using the scope of 'full' covers it now. I understand having this work with just 'creation' scope is problematic because you want to make sure the dtype is not used on results lists. heom+full breaks with dia and dense, as expected!. speaking of heom, manually converting the RHS to jaxdia and doing stuff it worked fine. i think generalizing the RHS construction in heom away from csr is probably very difficult without huge performance drop in the construction, so perhaps some kind of wrapper or option to do conversion of types after construction would be fine?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2519#issuecomment-2418554815:610,wrap,wrapper,610,https://qutip.org,https://github.com/qutip/qutip/pull/2519#issuecomment-2418554815,1,['wrap'],['wrapper']
Integrability,"I have a trouble in solving a time dependent Bloch-Redfield master equation with arguments.; Let me use an example discussed in [here](https://github.com/qutip/qutip/issues/966); The schedule functions of the time dependent Hamiltonian are defined by using some parameters which are passed to mesolve as args.; This method works well for sesolve and mesolve.; However, if I try to use the same method in brmesolve, it returns error in compiling Cython. I attached a python code which demonstrates the above observation. . I also noticed that in bloch_redfield.py it says; args : dict ; Placeholder for future implementation, kept for API consistency. Would it be possible to use arguments in brmesolve? If not, how could I use parametrically defined schedule functions while avoiding the issue raised in [here](https://github.com/qutip/qutip/issues/966)?. I need this for my research and I would appreciate your help very much. [Qutip Redfield master issue.py.zip](https://github.com/qutip/qutip/files/4028211/Qutip.Redfield.master.issue.py.zip)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1150:35,depend,dependent,35,https://qutip.org,https://github.com/qutip/qutip/issues/1150,2,['depend'],['dependent']
Integrability,"I have added the unit tests and moved the old ptrace to a new 'legacy' folder. . The permute method for Qobj's has a similar routine to those for selecting indices in ptrace. I have switched that code to the new ptrace functions as well, but there is some additional cleanup that needs to be done.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/634#issuecomment-272784039:125,rout,routine,125,https://qutip.org,https://github.com/qutip/qutip/pull/634#issuecomment-272784039,1,['rout'],['routine']
Integrability,"I have added this to 3.3, but it can likely be squeezed into the 3.2 branch, depending on the release timeframe.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/470#issuecomment-216433792:77,depend,depending,77,https://qutip.org,https://github.com/qutip/qutip/pull/470#issuecomment-216433792,1,['depend'],['depending']
Integrability,"I have also found that using the iterative SS solver with the preconditioner gives invalid answers for large systems. The following code will give negative numbers of particles for both oscillators (the correct values should be 0.1 and 9.7 for a and b respectively :. from scipy import *; from qutip import *; from pylab import *; import time. Nc=6 #Number of cavity states; Nm=46 #Number of mechanical states; alpha=0.311 #Coherent state amplitude; g0=0.36 #Coupling strength; kappa=0.3 #Cavity damping rate; gamma=0.00147 #Mech damping rate; xvec=linspace(-10,10,500) #Wigner area and sampling; delta=0; # operators. idc=qeye(Nc); idm=qeye(Nm); a=tensor(destroy(Nc),idm); b=tensor(idc,destroy(Nm)); # Hamiltonian terms that do not depend on detuning or coupling. H=(-delta+g0_(b.dag()+b))_(a.dag()_a)+b.dag()_b+alpha*(a.dag()+a); # collapse operators. cc=sqrt(kappa)_a; cm=sqrt(gamma)_b; c_op_list=[cc,cm]; print('Beginning SS'); s=time.time(); # rho_ss=steadystate_direct(H,c_op_list,use_umfpack=True). rho_ss=steadystate_iterative(H,c_op_list,use_precond=False); print('SS Elapsed time: ',time.time()-s); numa=expect(a.dag()_a,rho_ss); numb=expect(b.dag()_b,rho_ss); print('cavity number ',numa); print('mech. number ',numb); rho_b=ptrace(rho_ss,1); W=wigner(rho_b,xvec,xvec); wmap=wigner_cmap(W); contourf(xvec,xvec,W,100,cmap=wmap); colorbar(); show()",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/29:733,depend,depend,733,https://qutip.org,https://github.com/qutip/qutip/issues/29,1,['depend'],['depend']
Integrability,"I have an updated version of this using our new spmv code. Should be coming in the next couple of days. Lots of underlying stuff needs to be done for this to be integrated, and turned on automatically. Checked on Win using mingwpy and it works as well. Since the clang with OSX does not have openmp support, that is the only platform where some work needs to be done.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/438#issuecomment-277362135:161,integrat,integrated,161,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-277362135,1,['integrat'],['integrated']
Integrability,"I have been spending quite a bit of time in sesolve.py and mesolve.py recently. I have noticed a few things that could potentially be tidied up. 1. There are deprecated functions for `list` type time dependence. Can these be deleted now.; 2. The order of the internal functions is slightly different. Confuses me a lot. Suggest changing both to (as this seems like some kind of valid hierarchy):; - const; - func; - list_func; - list_str; - generic_ode. 3. The parameters in the ode func are `L_list_and_args` in sesolve and `L_list, args` in mesolve. I can't see any reason for the difference.; 4. The ode functions (for const and list_func) could be considered internal. Should they have a leading underscore?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/867:200,depend,dependence,200,https://qutip.org,https://github.com/qutip/qutip/issues/867,1,['depend'],['dependence']
Integrability,"I have been trying to simulate a 3 level system which has a time-dependent Hamiltonian. However, the plots I obtain are wrong. I am new to qutip so I might be missing something very silly.; Here's the code: ; ```; from qutip import *; import numpy as np; import matplotlib.pyplot as plt. qd0 = basis(3,0); qd1 = basis(3,1); qd2 = basis(3,2). hbar = 6.582*10**-4. times = np.linspace(0.0,1,100000). sig00 = tensor(qd0*qd0.dag(), qeye(3)); sig11 = tensor(qd1*qd1.dag(), qeye(3)); sig22 = tensor(qd2*qd2.dag(), qeye(3)); sig01 = tensor(qd0*qd1.dag(), qeye(3)); sig02 = tensor(qd0*qd2.dag(), qeye(3)); sig12 = tensor(qd1*qd2.dag(), qeye(3)); sig21 = tensor(qd2*qd1.dag(), qeye(3)). a = tensor(qeye(3), destroy(3)). w1 = 2000.0/hbar; w2 = 2001.0/hbar; wph = 1.0/hbar; g = 120; pump1 = 10.0; pump2 = 1; gamma = 10**-3; nth = 10**-6; y = 0*times + nth. T1 = 0.001; T2 = 1. H01 = w1*sig11 + w2*sig22 + wph*a.dag()*a + g*(sig12*a.dag() + sig21*a); H1a = pump1*sig01; H2a = pump1*sig01.dag(). H1b = pump2*sig01; H2b = pump2*sig01.dag(). def H1_coeff(times, args):; return np.exp(w1*times*1j); def H2_coeff(times, args):; return np.exp(-w1*times*1j). Ha = [H01, [H1a, H1_coeff],[H2a, H2_coeff]]; Hb = [H01, [H1b, H1_coeff],[H2b, H2_coeff]]. psi0 = tensor(qd0, fock(3,1)). result1 = mesolve(Ha, psi0, times, [np.sqrt(T1)*sig01, np.sqrt(T2)*sig02, np.sqrt(gamma*(nth + 1))*a, np.sqrt(gamma*nth)*a.dag()], [a.dag()*a, sig00, sig11, sig22], progress_bar=True); result2 = mesolve(Hb, psi0, times, [np.sqrt(T1)*sig01, np.sqrt(T2)*sig02, np.sqrt(gamma*(nth + 1))*a, np.sqrt(gamma*nth)*a.dag()], [a.dag()*a, sig00, sig11, sig22], progress_bar=True). plt.figure(); plt.plot(times, result1.expect[0], label = 'pump = 10'); plt.plot(times, result2.expect[0], label = 'pump = 1'); plt.plot(times, y,'k'); plt.xlabel('Time (ns)'); plt.ylabel('Phonon number'); legend = plt.legend(); plt.savefig(""phonon number.png""); plt.savefig(""phonon number.pdf""); output_data = np.vstack((times, result1.expect[0])); file_data_store('phon",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1038:65,depend,dependent,65,https://qutip.org,https://github.com/qutip/qutip/issues/1038,1,['depend'],['dependent']
Integrability,"I have commented out numba. I agree with you that grape.py is not suitable, but I couldn't really wrap my head around the pulseoptim class. Hence, the code. I will have a look at https://github.com/lifeishard/PADQOC",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1031#issuecomment-542520840:98,wrap,wrap,98,https://qutip.org,https://github.com/qutip/qutip/issues/1031#issuecomment-542520840,1,['wrap'],['wrap']
Integrability,I have found the issue. The wrapper to zvode provided by scipy does not allow for setting itask=5 in the single step mode. This mode does not overshoot the endpoint of the interval like mode 2 which is the fixed mode in scipy. One must also bypass much of the scipy code to efficently reset the integrator. I will begin working on both and work on sending a pull to the scipy people. In the mean time we could probably overload the builtin class to get what we want before scipy gets around to it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-64601865:28,wrap,wrapper,28,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64601865,2,"['integrat', 'wrap']","['integrator', 'wrapper']"
Integrability,I have just successfully installed qutip using pip into a fresh conda env (python=3.6) on Linux Mint. I believe this Mint is pretty much identical to Ubuntu.; All dependencies were installed automatically. qutip tests run fine.; So I don't think that there is anything wrong with our setup configuration.; Note we do not recommend installing qutip into a system python env - especially on Linux.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739#issuecomment-323319515:163,depend,dependencies,163,https://qutip.org,https://github.com/qutip/qutip/issues/739#issuecomment-323319515,1,['depend'],['dependencies']
Integrability,"I have managed to get everything moved over to c++. Should address #647. There are still a few issues to address, but the tests pass on unix based systems. - CFLAGS need to be set for visual studio builds.; - zspmv src files need to be platform dependent (i.e. win/unix versions). This is mainly due to a few minor variations in how compiler hinting is done. No big deal. Also, when moving to openmp, visual studio uses v2.0, which is a bit dated.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648:245,depend,dependent,245,https://qutip.org,https://github.com/qutip/qutip/pull/648,1,['depend'],['dependent']
Integrability,"I have not been using qutip for a long time yet, so I apologize in case I am missing something stupid. I'm solving a simple problem with t-dependent Hamiltonian. I have simplified up to the point where the solution should actually just be a constant occupation of ground and first excited state. Here is the setup:. ``` python; from qutip import *; from pylab import *. dim = 40 # number of harmonic oscillator states kept in decomposition; # -- always need to check convergence w.r.t. this. E_j = 20.0 # Josephson energy. a = destroy(dim) # definition of the annihilation operator via qutip. exponent = 1j * (a + a.dag()) # argument of the matrix exponential; exp_iphi = exponent.expm(); cos_phi = 0.5*(exp_iphi + exp_iphi.dag()). H_0 = a.dag() * a # Hamiltonian of LC harmonic oscillator; h_j = - cos_phi # Hamiltonian for the Josephson tunneling contribution; prefactor E_j(t) to be provided separately . energies, states = (H_0 + E_j * h_j).eigenstates() . jump_op_list = [] # no jump operators. # monitor projectors onto the ground and first excited eigenstates; projector0 = states[0] * states[0].dag(); projector1 = states[1] * states[1].dag(). monitor_ops = [projector0, projector1]. psi_0 = states[0] # initial state is the ground state . # tlist = np.linspace(0, Delta_t_min + Delta_t_max + 6*dt, 300) # evenly-spaced time values; tlist = np.linspace(0, 0.5, 300) # evenly-spaced time values; ```. The crucial piece comes now:. ``` python; timefunc_string1 = '20.0'; H1 = [H_0, [h_j, timefunc_string1]]; odesolution1 = mcsolve(H1, psi_0, tlist, jump_op_list, monitor_ops). # NOTE: ONLY ""DIFFERENCE"" W.R.T. PREVIOUS EXAMPLE IS ADDING ZERO!; timefunc_string2 = '0.0*20.0 + 20.0'; H2 = [H_0, [h_j, timefunc_string2]]; odesolution2 = mcsolve(H2, psi_0, tlist, jump_op_list, monitor_ops). plot(tlist, odesolution1.expect[0], tlist, odesolution1.expect[1], lw=2); legend(('Ground state','1st exc.')); ylabel('Occupation probability'); xlabel('Time'). show(). plot(tlist, odesolution2.expect[0], tl",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/215:139,depend,dependent,139,https://qutip.org,https://github.com/qutip/qutip/issues/215,1,['depend'],['dependent']
Integrability,"I have noticed some performance benefits with openblas but nothing noticeable for the sparse matrix routines. Multithreading gets some extra performance but the scaling is sublinear for sure. Just a couple of percent. From what I understand many sparse routines are limited by memory bandwidth. This is usually discussed in the context of the spmv. The biggest benefit when going to openblas is the removal of the umfpack out of memory errors. I dont think this has anything to do with the actual openblas functions but somewhere in the build process (suitesparse, metis, or something) the memory limitation is removed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/55#issuecomment-25365509:100,rout,routines,100,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25365509,2,['rout'],['routines']
Integrability,"I have recently released a package, [sequencing](https://github.com/sequencing-dev/sequencing), which provides an ""experimentalist-friendly"" layer on top of QuTiP for constructing and simulating time-dependent Hamiltonians, especially those composed of sequences of pulses. - Repo: https://github.com/sequencing-dev/sequencing; - Docs: https://sequencing.readthedocs.io/en/latest/. I think this package could be of great use to many QuTiP users who are interested in simulating realistic pulse sequences acting on noisy devices. There is some conceptual overlap with `qutip.qip`, but the implementation is rather different. I'm not sure if GH issues is the right forum on which to share this information - I apologize if it's not. What would be the best way to share this project with the QuTiP community?. Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1439:200,depend,dependent,200,https://qutip.org,https://github.com/qutip/qutip/issues/1439,1,['depend'],['dependent']
Integrability,"I have such error whenever my the ratio between j or h for my hamiltonian and the total duration time(now in the following code is 0.1) is a certain number and above, mesolve produces this error. However, I need this ratio to be a certain number and above which produces the error. What do you recommend that I do? Thank you so much!. Here is the code:. j = 1000; h = 100000. \begin{equation}; H= j \sum_{\langle ij\rangle} \sigma_i^x\sigma_j^x +h \sum_i \sigma_i^z; \end{equation}. psi0=tensor(basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0)). times = np.linspace(0.0, 0.1, 100). result3 = mesolve(H, psi0, times, [], []); ; print fidelity(result3.states[99],psi0). ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-25-49de88b6cc71> in <module>(); 8 times = np.linspace(0.0, 0.1, 100); 9 ; ---> 10 result3 = mesolve(H, psi0, times, [], []); 11 ; 12 print fidelity(result3.states[99],psi0). /Users/anaconda/lib/python2.7/site-packages/qutip/mesolve.pyc in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 341 else:; 342 res = _sesolve_const(H, rho0, tlist,; --> 343 e_ops, args, options, progress_bar); 344 ; 345 if e_ops_dict:. /Users/anaconda/lib/python2.7/site-packages/qutip/sesolve.pyc in _sesolve_const(H, psi0, tlist, e_ops, args, opt, progress_bar); 325 #; 326 return _generic_ode_solve(r, psi0, tlist, e_ops, opt,; --> 327 progress_bar, dims=psi0.dims); 328 ; 329 . /Users/anaconda/lib/python2.7/site-packages/qutip/sesolve.pyc in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, dims); 689 ; 690 if not r.successful():; --> 691 raise Exception(""ODE integration error: Try to increase ""; 692 ""the allowed number of substeps by increasing ""; 693 ""the nsteps parameter in the Options class.""). **Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.**",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/806:1713,integrat,integration,1713,https://qutip.org,https://github.com/qutip/qutip/issues/806,2,['integrat'],['integration']
Integrability,I have time-dependent collapse operator that the time dependent part is matrix format.how should I write this ?; my collapse operator is consist of expm(f(t)),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1398:12,depend,dependent,12,https://qutip.org,https://github.com/qutip/qutip/issues/1398,2,['depend'],['dependent']
Integrability,"I have two matrices `A` and `B`. I run. eigvals, eigvecs = simdiag([A, B]); and get. AttributeError Traceback (most recent call last); <ipython-input-8-966464195054> in <module>(); ----> 1 eigvals, eigvecs = simdiag([A, B]); /usr/lib/python3.6/site-packages/qutip/simdiag.py in simdiag(ops, evals); 82 eigvals, eigvecs = la.eig(A.full()); 83 zipped = zip(-eigvals, range(len(eigvals))); ---> 84 zipped.sort(); 85 ds, perm = zip(*zipped); 86 ds = -np.real(np.array(ds)); AttributeError: 'zip' object has no attribute 'sort'. The solution is to change the lines. zipped.sort(); in `simdiag` and the private function `degen` to. zipped = sorted(zipped); I did this and it works. However, I'm also wondering if there are plans to rewrite `simdiag` to be more numerically stable (if possible). I've found that the eigenvalues returned and the accuracy of the eigenvectors depends significantly on the order that they are passed. For instance, I know that `A` has integer eigenvalues, and when I run. eigvals, eigvecs = simuldiag([A, B]); eigvals[0]. I get. array([ 8., 7., 7., 7., 7., 7., 7., 7., 7., 6., 6., 6., 6.,; 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,; 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 5., 5.,; 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,; 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,; 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,; 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,; 5., 5., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,; 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,; 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,; 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,; 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,; 4., 4., 4., 4., 4., 4., 4., 3., 3., 3., 3., 3., 3.,; 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,; 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,; 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,; 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 2., 2.,; 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/756:867,depend,depends,867,https://qutip.org,https://github.com/qutip/qutip/issues/756,1,['depend'],['depends']
Integrability,"I haven't checked, but I'd bet it's because we construct a new Liouvillian `QobjEvo` on entry to `mesolve` with collapse operators. If so, this is definitely a bug - we should have detected that the collapse operators have no time-dependence, so don't need to overwrite the `tlist`. As a temporary work-around, you can construct the Liouvillian directly and pass it to `mesolve`:; ```python; liouvillian = qutip.liouvillian(ham, collapse); qutip.mesolve(liouvillian, rho, eval_times); ```; which should work fine for now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1560#issuecomment-849604641:231,depend,dependence,231,https://qutip.org,https://github.com/qutip/qutip/issues/1560#issuecomment-849604641,1,['depend'],['dependence']
Integrability,"I just ran locally:; `make latexpdf SPHINXOPTS=""-W --keep-going -T""`; And got `build succeeded` message.; The error on the project pipeline shows:; `Unknown interpreted text role ""cls"".` for the `me_solver`. Do you have an idea of why could this be happening?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1567334034:96,message,message,96,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1567334034,1,['message'],['message']
Integrability,"I just signed up. Let me know if you need anything else. On Sat, Jun 25, 2022, 6:12 AM Nathan Shammah ***@***.***>; wrote:. > @trentfridey <https://github.com/trentfridey> we cannot find your contact; > details on unitaryHACK, please sign up; > https://airtable.com/shrJeycewBFqdot2B to be able to claim your bounty!; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/1927#issuecomment-1166247981>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AC4OOFYJ47HU6VQVYITDIULVQ3LQ3ANCNFSM5YMIBCDQ>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1927#issuecomment-1166314030:623,Message,Message,623,https://qutip.org,https://github.com/qutip/qutip/pull/1927#issuecomment-1166314030,1,['Message'],['Message']
Integrability,"I made a custom exception class that depend on all the raised exceptions classes so we can catch it.; It feel somewhat hacky, `ExceptionGroup` would work a lot better, but we won't be able to use it for a few years.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1969#issuecomment-1208599699:37,depend,depend,37,https://qutip.org,https://github.com/qutip/qutip/pull/1969#issuecomment-1208599699,1,['depend'],['depend']
Integrability,"I mean the motivation behind the np array format itself. And indeed, the spline assumes equidistant points. > On Aug 24, 2016, at 12:04, kafischer notifications@github.com wrote:; > ; > I'm a bit confused by your comment: Are asking about the purpose of the np array format itself or did you mean why it should accept non-linear tlists?; > ; > The reason it should accept non-linear tlists is because such a thing is good to have when you simulate rapid dynamics followed by slow dynamics. This currently works for all other types of time-dependent formats, so it should also work for this one to avoid confusion. The cubic spline would indeed be nicer here, except it seems to me like it assumes the x values are linear?; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub https://github.com/qutip/qutip/pull/520#issuecomment-242156352, or mute the thread https://github.com/notifications/unsubscribe-auth/ABMPqQvb7gOJPOTVk9VN5KseYyslkRUTks5qjIe8gaJpZM4JpQHD.; > ; > Untracked with Trackbuster https://trackbuster.com/?sig",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/520#issuecomment-242156997:539,depend,dependent,539,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-242156997,1,['depend'],['dependent']
Integrability,"I might want to have a Hamiltonian that is two consecutive different pulses. To do this in `mesolve` I just call it like this:. ```; mid_state = mesolve(H1, init_state, ...).states[-1]; end_state = mesolve(H2, mid_state, ...).states[-1]; ```. However in `mcsolve` I can not give a thousand initial states each to be considered as a single trajectory, so I have to use slower time dependent Hamiltonians. Would such an enhancement be welcomed? I will probably have to implemented it for myself anyway.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/120:380,depend,dependent,380,https://qutip.org,https://github.com/qutip/qutip/issues/120,1,['depend'],['dependent']
Integrability,I need to fix (or hide) some warning given out by the integrator during the test. I will do that before I merge,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/455#issuecomment-194686130:54,integrat,integrator,54,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194686130,1,['integrat'],['integrator']
Integrability,"I noticed that the action of a superoperator could be extremely slow in QuTiP depending on how it is called. This came up when I was writing some code which loops over repeatedly and calculates `spre(Q)*vec`. I understand that this is probably a subtle point which the user might overlook but using `np.dot(spre(Q).full(), rho)` take ns while the more readable `spre(Q)*vec` takes us. In most cases, we get away with this since we always pack the elements in `spre` into a sparse Liouvillian and invoke `cy_ode_rhs` but if there was some way to modify the `.__mul__` method of superoperators to use `np.dot`, it might be helpful to get up to 1000x speed improvement. This comes of use when the RHS is calculated on the fly by the action of these superoperators (eg., the Heom method). The comparisons are below. I pre-compute all the *operators* and *vectors* before running `%timeit` and these are the timing for the matrix-vector multiplication only. @nwlambert @ajgpitch Should we do something about this or mention it somewhere if it is important?. ```; np.dot(spre(Q).full(), vec); 789 ns ± 6.68 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each). spre(Q).data * vec; 5.66 µs ± 57.8 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each). spre(Q)*vec; 7.35 µs ± 213 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each). spre(Q)*operator_to_vector(rho); 62.5 µs ± 1.73 µs per loop (mean ± std. dev. of 7 runs, 10000 loops each); ```. The code to reproduce this:; ```; from qutip.superoperator import spre, spost, operator_to_vector; from qutip import sigmax, basis; import numpy as np; from numpy.testing import assert_array_equal. Q = sigmax(); rho = basis(2,0)*basis(2,0).dag() \; + 0.25*basis(2,1)*basis(2,1).dag() \; - 0.1*basis(2,0)*basis(2,1).dag() . spreQ = spre(Q). numpy_vec = np.array(rho.data.todense().ravel(""F""), dtype=np.complex); vec = numpy_vec.T; qutip_vec = operator_to_vector(rho). spreQ_full = spreQ.full(); spreQ_data = spreQ.data. print(""np.dot(spre(Q).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/831:78,depend,depending,78,https://qutip.org,https://github.com/qutip/qutip/issues/831,1,['depend'],['depending']
Integrability,"I observed something strange after your update. On windows, with Jupyter Notebook, the kernel crashes every time when I try to plot the circuit. No error message. Does it run normally on your OS?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605285010:154,message,message,154,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605285010,1,['message'],['message']
Integrability,"I prefer 2 in for openmp, it is fixed at install. It could be in `setup.py` or in a cython file with conditional compilation. The mkl flag depends on numpy's blas python interface. Cython use of blas/lapack is independent of it. . (Yes, since this week, I did not know this existed before)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1282#issuecomment-638966604:139,depend,depends,139,https://qutip.org,https://github.com/qutip/qutip/pull/1282#issuecomment-638966604,2,"['depend', 'interface']","['depends', 'interface']"
Integrability,"I quickly ran the problem, and it is still the slope is too large. Going from 100->50 in tanh resolves the issue. In order to look like a step pulse, you want the rate of change of the pulse to be much higher than the system time-scales. In your case, the system is on the time-scale of O(1), while, for tanh(100) the rate is ~60 at front and back, where as for tanh(50), it is ~30. In both cases, your system will see an effective step pulse. . My thinking is that if the argument of tanh is too large, then there is a big separation of time-scales in the problem. The ODE solver is trying to capture both the slow system dynamics, and the rapid step terms, and it is finding it difficult. This is a common issue with multiple, wide-ranging time scales. > On Oct 20, 2017, at 21:44, nlphysics <notifications@github.com> wrote:; > ; > Thanks. It's not that urgent. I'm just curious what the reason for that behavior might be. It's puzzling; > why does it apparently depend on the dimensions of dm as well as on the number of time steps.; > ; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub <https://github.com/qutip/qutip/issues/771#issuecomment-338361319>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ABMPqbL-dF5jtatZLSmpxx_RYASR_2zEks5suWiugaJpZM4P__42>.; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771#issuecomment-338362826:966,depend,depend,966,https://qutip.org,https://github.com/qutip/qutip/issues/771#issuecomment-338362826,1,['depend'],['depend']
Integrability,"I rechecked the equations:; The stochastic integration has the general form:; ![image](https://user-images.githubusercontent.com/17770236/140782543-9d8ff092-b9cb-4b17-98e8-85ab0254b425.png); For `ssesolve`:; ![image](https://user-images.githubusercontent.com/17770236/140783379-72e48698-4f2d-4ebc-bfac-95630e8724b1.png). And for `smesolve`:; ![image](https://user-images.githubusercontent.com/17770236/140784174-e9fdb33b-2fee-4795-a93d-e7d1abe32ddd.png). The liouvillian use both the `sc_ops` and `c_ops` for collapse, but the `d_2` part only use `sc_ops`. In heterodyne detection, each `sc_ops` is split into 2 parts computed individually: ; ![image](https://user-images.githubusercontent.com/17770236/140784227-39e67d38-33bf-47c8-ab57-afd41c23afa6.png). `m_ops` for homodyne:; ![image](https://user-images.githubusercontent.com/17770236/140784715-a7861965-6b30-4a47-a7a6-e19d4dd8b430.png). `m_ops` for heterodyne:; ![image](https://user-images.githubusercontent.com/17770236/140784760-5adb2535-ff63-4b2d-bba8-b10b6422b5db.png). In both case the `dW`'s default is `1`. In the heterodyne case, the `sqrt(2)` is expected to be included inside `dW_factor` when it's length is the same as `m_ops`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1706#issuecomment-963395778:43,integrat,integration,43,https://qutip.org,https://github.com/qutip/qutip/issues/1706#issuecomment-963395778,1,['integrat'],['integration']
Integrability,"I remember we also encountered this os dependency before. `np.int` is also not the same on Windows and Linux, which has its root in C long.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1313#issuecomment-655137114:39,depend,dependency,39,https://qutip.org,https://github.com/qutip/qutip/pull/1313#issuecomment-655137114,1,['depend'],['dependency']
Integrability,"I report local tests failing on my MacOS 10.13.6 by running qutip.testing.run(). Tests fail for python 3.7 and 3.6 environments, if QuTiP 4.4. is installed in develop mode (openmp = True). ; Tests fail also for QuTiP 4.3.1 installed with conda. . ### py36; Broken test for python 3.6 with: (1) QuTiP 4.4-dev, with openmp =True and (2) conda install qutip, QuTiP 4.3.1: ; Error Message below: ; ``` ; Metrics: Trace dist. & Fidelity mixed/pure inequality ... ok ; Metrics: Check avg gate fidelities for random ... ; python(35852,0x7fff9757f380) malloc: *** error for object 0x7fe189168a10: incorrect checksum for freed object - object was probably modified after being freed. *** ; set a breakpoint in malloc_error_break to debug ; Abort trap: 6 ---------------------------------------------- ; ``` . Building the dev environment: ; ``` conda create --name qutip-dev-44-py36 ; source activate qutip-dev-44-py36 ; conda install python=3.6 cython numpy scipy nose jupyter matplotlib; python setup.py develop --with-openmp; ``` . ### py37; Broken test for python 3.7 with: (1) QuTiP 4.4-dev, with openmp =True and (2) conda install qutip, QuTiP 4.3.1. Error Message below: ; ``` ; qutip.tests.test_qobj.test_expect_exception ... ok Qobj data ... ok Qobj type ... ok Qobj Hermicity ... ok ; Qobj unitarity ... ok ; Qobj shape ... ok ; Qobj: multiplication w/ non-square qobj.dims ... ok ; Qobj addition ... ok ; Qobj subtraction ... ok ; Qobj multiplication ... ok ; Qobj division ... ok ; Qobj power ... ; python(35379,0x7fff9757f380) malloc: *** error for object 0x7fbf1089fa90: incorrect checksum for freed object - object was probably modified after being freed. *** ; set a breakpoint in malloc_error_break to debug ; Abort trap: 6 ; ``` . Building the dev environment: ; ``` conda create --name qutip-dev-44-py37 ; source activate qutip-dev-44-py37 ; conda install python=3.7 cython numpy scipy nose jupyter matplotlib; python setup.py develop --with-openmp```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-473772867:377,Message,Message,377,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-473772867,2,['Message'],['Message']
Integrability,"I said above):. > Oh, one thing that I'd like to suggest we _don't_ do: use this interface to _implicitly_ create `Qobj` inside our functions.; ; To me, this is absolutely one of the mistakes that Numpy made in their implementation, and we shouldn't be copying it. You can see that it didn't work as intended, because they've had to add `__array_function__` and other additional methods on top to start to make it work, and it's still not perfect - even `scipy.sparse` have/had problems implementing them. While it might work in your particular case, making sure that nothing funny happens in the abstract across _all_ possible implementors of the interface while still having it do something useful is a very tricky problem, as evidenced by Numpy. Any conversion is going to be lossy for some people (perhaps not you, but it will be for others), and that means the behaviour for users will be surprising in some cases. In my opinion, if we're going to have a `__qutip_qobj__` interface, the interface should be defined for one operation only, and should never be called implicitly. I'm not entirely close-minded to alternate views here, but given the problems Numpy had (whose team I have no doubt are much smarter than I am), I'm really not enthusiastic about any implicit conversions. I really do appreciate the interest, and I _am_ keen to let us have better compatibility with the rest of the community, but there are a lot of design concerns that we're going to want to work on our side first - I just want to caution you in case you're trying to work towards a PR, because I'm not close to being happy to accept one, yet. If we're going to do this (and we haven't decided if we will yet), we're going to need to get a lot of wide-ranging input from many different libraries, and we'll want to write out a proper design document and get approval of it before we get deep into the implementation. > The latter would make it harder to support multiple versions of qutip in the implementers, but I ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:2630,interface,interface,2630,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,2,['interface'],['interface']
Integrability,"I see, `tensor` does not support this. You need to use `tensor` for each `Qobj` and then construct the time-dependent format.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1183#issuecomment-588902598:108,depend,dependent,108,https://qutip.org,https://github.com/qutip/qutip/issues/1183#issuecomment-588902598,1,['depend'],['dependent']
Integrability,"I see, the docs look very nice indeed!; @sahmed95 Go ahead and merge this when the tests pass. Better if you do it, as you can tidy the commit message during the squash.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861#issuecomment-396895055:143,message,message,143,https://qutip.org,https://github.com/qutip/qutip/pull/861#issuecomment-396895055,1,['message'],['message']
Integrability,I see. `propagator` performed better with a system of d=2^5 in a simple test. I better do some testing of even larger systems then before merging this. Any thoughts on why `propagator` might be slower also for small systems and short integration times? Some overhead related to parallelization? Thanks for the info.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/502#issuecomment-230108497:234,integrat,integration,234,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-230108497,1,['integrat'],['integration']
Integrability,I slightly edited the question to make the code easier to read. You should probably consider using the array-based format https://qutip.org/docs/latest/guide/dynamics/dynamics-time.html#methods-for-writing-time-dependent-operators. Precompute the `q_0` and `q_02` as NumPy arrays with respect to each `t` in the `t_list` using `np.gradient`. Then give them to the solver.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1834#issuecomment-1065163266:211,depend,dependent-operators,211,https://qutip.org,https://github.com/qutip/qutip/issues/1834#issuecomment-1065163266,1,['depend'],['dependent-operators']
Integrability,"I started to look into pypi a while ago and plan to add qutip there before the next release. However qutip depends on a C compiler and optionally fortran compiler, and some changes in our setup.py file is required to get it to work with pip, so it hasn't been done yet. It's on the todo list though. As for homebrew, it doesn't seem to have many of the requirements that qutip needs, such as numpy and scipy etc. For some reason they are in a separate homebrew repository.. Without these it wouldn't make much sense to submit a qutip formula to the official homebrew repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/62#issuecomment-27491906:107,depend,depends,107,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27491906,1,['depend'],['depends']
Integrability,"I think it should be possible to do this within the pytest framework without touching the package `setup.py` or `MANIFEST`. [`pytest.fixture`](https://docs.pytest.org/en/stable/fixture.html#sharing-test-data) seems a natural choice for loading data. For file accessibility, [this](https://stackoverflow.com/questions/46019170/how-do-you-properly-integrate-unit-tests-for-file-parsing-with-pytest) might help. Porbably @jakelishman knows more about the natural way of doing this with pytest?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-655970508:346,integrat,integrate-unit-tests-for-file-parsing-with-pytest,346,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-655970508,1,['integrat'],['integrate-unit-tests-for-file-parsing-with-pytest']
Integrability,"I think it should work if lines 398 - 405 are replaced with this:. ```; if not args_new:; args_new = args; elif isinstance(args, dict):; args_new.update(args); else:; raise ValueError(""Time-dependent array format requires args to "" +; ""be a dictionary""); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/199#issuecomment-49743536:190,depend,dependent,190,https://qutip.org,https://github.com/qutip/qutip/issues/199#issuecomment-49743536,1,['depend'],['dependent']
Integrability,"I think it was indeed a version problem, but I can't tell exactly why it happened. Re-installing dependencies from scratch seems to have solved the issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2468#issuecomment-2186847059:97,depend,dependencies,97,https://qutip.org,https://github.com/qutip/qutip/issues/2468#issuecomment-2186847059,1,['depend'],['dependencies']
Integrability,"I think it would be great to have a fast implementation of tensor contraction. However, QuTiP has moved on since this PR and I think the right way to implement this now would be to add a new specialization to the data layer for tensor contraction (maybe something like einsum) and to implement that instead (or even just to re-implement methods for the new CSR representation). @IIAOPSW If you're up for giving that a try, that would be awesome. If not, I might close this PR and we can revisit it after QuTiP v5 alpha has been released. @IIAOPSW Separately, I've read through the code the PR, but I'd still like to get a high-level summary of the algorithm you're implementing (or a reference). Quite a lot of work has been done in optimizing these contractions in recent years, and it would be nice to implement a good algorithm in QuTiP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/883#issuecomment-983852684:66,contract,contraction,66,https://qutip.org,https://github.com/qutip/qutip/pull/883#issuecomment-983852684,3,['contract'],"['contraction', 'contractions']"
Integrability,"I think it's okay for the integrator options to be described in the documentation for the integration -- it can't really go anywhere else. The solver documentation can then point to the documentation for the built-in integrators, and mention that it is possible for third-party packages to provide additional integrators.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947#issuecomment-1174444894:26,integrat,integrator,26,https://qutip.org,https://github.com/qutip/qutip/pull/1947#issuecomment-1174444894,4,['integrat'],"['integration', 'integrator', 'integrators']"
Integrability,"I think that this is the correct solution though, so big bonus points for hunting this down! At work, we have no use for OSX, and would love py3 on win, so I can fiddle around to get something working. Having two separate sources may be the route we need to go. It wouldn't be the end of the world, but should be avoided unless absolutely necessary.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/647#issuecomment-279727419:241,rout,route,241,https://qutip.org,https://github.com/qutip/qutip/issues/647#issuecomment-279727419,1,['rout'],['route']
Integrability,"I think the best solution for this might be to set logging level to DEBUG by default in get_logger, and only actually log debug messages if qutip.settings.debug is True. This is anyways the way it should be done, because calling logger.debug(...) gives an overhead that we don't want if the debug flag is set to false. So the usage pattern should be. ```; if qutip.settings.debug:; logger.debug(....); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/261#issuecomment-63601461:128,message,messages,128,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-63601461,1,['message'],['messages']
Integrability,"I think the code ciuld be simplified for the user. The interface should be like the other solvers. E.g. no need to call odeint by hand, etc..",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-332188600:55,interface,interface,55,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-332188600,1,['interface'],['interface']
Integrability,"I think the current behaviour is fine, it just depends on the way the kronecker product is done in QuTiP. Pinging @nwlambert.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1285#issuecomment-643272712:47,depend,depends,47,https://qutip.org,https://github.com/qutip/qutip/issues/1285#issuecomment-643272712,1,['depend'],['depends']
Integrability,"I think the module should really be `qutip.testing` (or `qutip.test` if the name's already taken), not `qutip.core.data.testing`, if you're going to add one. It's very likely to be the case in the future (if it isn't already) that you'll need additional dependencies to define the tests, and you don't want to force _all_ runtime users to have them to install QuTiP. If you put the package in a separate top-level module, it's _far_ easier to separate out all the code, and have `qutip/__init__.py` not import `qutip.testing`, so things won't break. Also, tests generally need to work with a fully imported version of the module. If we start putting testing infrastructure in the core, we're going to encode a whole lot of cyclical dependencies right away, or end up with `testing` modules scattered all across the codebase, for no real gain. For discovery: that would only happen during test generation, which comes after importing the modules and defining the classes, so you'd still be able to define tolerances and influence how the tests ran. The problem with _not_ having discovery is that it becomes very easy to forget to test a function, and with so much of the machinery automated, it's also easy to forget it when reviewing a PR. That's particularly true once you have external contributors writing these sorts of things - we have it in Qiskit, where people add things to our ""standard equivalence library"", and new contributors and new reviewers don't know where all the different tests are, so our discovery tests have helped catch bugs. That happens even with super experienced team members. I'd argue that code coverage metrics are possibly a better way of detecting missing tests - that fails safe if you add broken code and forget to test it, whereas having to specify the tests explicitly means you can accidentally add broken code to a dispatcher and not know, if you forgot to add the test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-981562735:254,depend,dependencies,254,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-981562735,2,['depend'],['dependencies']
Integrability,"I think the renaming is fine for 4.6.3, it is called by `expect` of the python interface, but the cython interface is not expected to be used by the users.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1784#issuecomment-1027982472:79,interface,interface,79,https://qutip.org,https://github.com/qutip/qutip/pull/1784#issuecomment-1027982472,2,['interface'],['interface']
Integrability,I think there are some optimized Cython routines which for some of the solvers which need cython in run-time. Not completely sure about it. Let me check.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/893#issuecomment-403675579:40,rout,routines,40,https://qutip.org,https://github.com/qutip/qutip/issues/893#issuecomment-403675579,1,['rout'],['routines']
Integrability,"I think you might be able to achieve a lot of what you want already. The pseudo-code looks like it's not using `mesolve` super efficiently, though maybe it's only because of simplifications to make a MWE. For example, if your controls are piecewise constant, then it might be inefficient to represent those terms as ""time dependent""; doing so means you incur the cost of multiplying each term by a scalar at every intermediate step the integrator chooses to take, then you have to perform the matrix-vector product for each one individually and add them up. It might be faster already if you evaluate the piecewise varying parts into one ""constant"" part at each point. This isn't guaranteed, because it involves copying rather more data _before_ the call (to construct the constant matrix once), but if the integrator would need to take many intermediate time steps, I expect it would win out. Would something like this work for you?; ```python; times = [0, ...]; # Liouvillians for parts you have control over; control_liouvillians = [qutip.liouvillian(h) for h in control_hamiltonians]; # The time-dependent Hamiltonian for stuff you're not controlling; base_hamiltonian = qutip.QobjEvo([H0, [H1, time_dependence], ...]); # Turn it into a Liouvillian once, so we don't repeat the cost; base = qutip.liouvillian(base_hamiltonian, collapse_operators); state = ...; options = qutip.Options(store_states=False, store_final_state=True); for prev, time in zip(times[:-1], times[1:]):; controls = krotov.get_next_controls(time, state, ...); current_liouvillian = base.copy(); for control, operator in zip(controls, control_liouvillians):; current_liouvillian += control * operator; # ^^^^^^^^^^^^^^^^^^; # each of these terms is a single time-independent Qobj,; # and the sum is a single QobjEvo with all the uncontrolled; # time dependence already handled.; state = qutip.mesolve(current_liouvillian, state, [prev, time], options=options).final_state; ```. By giving `mesolve` the Liouvillian instead of t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859873615:322,depend,dependent,322,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859873615,3,"['depend', 'integrat']","['dependent', 'integrator']"
Integrability,"I thought we had resolved the installation issues with the Fortran side by making the MC solver a optional (default to False).; I am not that I have fully digested everything in this thread, but @zerothi seems confident that there is just some small change that we need to improve integration with the latest Numpy. Its not clear to me what are the risks or other downsides.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-155040632:281,integrat,integration,281,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155040632,1,['integrat'],['integration']
Integrability,"I tried modifying the frequency of a periodic pulse using the `init_pulse_params` argument to `qutip.control.optimize_pulse` (GRAPE algorithm). I tried passing, for example,. ```; init_pulse_params = {'num_waves': 2.0}; ```. but no matter what I choose for 'num_waves', I always get exactly one period (`num_waves`=1.0) for the initial pulse. Similarly if I try to pass a 'freq' key in the dictionary. Looking at the code, it looks like this is hard coded in `create_pulse_optimizer` (line 1942: `pgen.num_waves = 1.0`). Either this is a bug, or I'm misunderstanding how to use the interface.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/412:582,interface,interface,582,https://qutip.org,https://github.com/qutip/qutip/issues/412,1,['interface'],['interface']
Integrability,"I tried to solve this issue. It seems like this is known, and expected, behavior of `plt.show()`, described e.g. here https://stackoverflow.com/questions/50452455/plt-show-does-nothing-when-used-for-the-second-time/51005555. The workaround depends on the user environment. For Ipython one uses `display()` function from `IPython.display`, while in other cases using `fig.show()` instead of `plt.show(fig)` works. This would however make the code more involved and environment-dependent, so I didn't decide to submit a PR right away, but I can do with the above fix if somebody from qutip team agrees.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/989#issuecomment-493659601:240,depend,depends,240,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493659601,2,['depend'],"['dependent', 'depends']"
Integrability,"I wanted to follow up on the previous message. Are there indeed important performance reasons why basis(N, n) is by default implemented densely:. `dtype = dtype or settings.core[""default_dtype""] or _data.Dense`. as opposed to . `dtype = dtype or settings.core[""default_dtype""] or _data.CSR` ?. I similarly have run into issues where much of my existing code using collapse operators of the form `basis(N, n) * basis(N, n).dag()` takes significantly longer to run (or runs out of memory) in 5.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2328#issuecomment-2028822978:38,message,message,38,https://qutip.org,https://github.com/qutip/qutip/issues/2328#issuecomment-2028822978,1,['message'],['message']
Integrability,"I was claiming that the algorithm from the Molmer paper is different because it relies on small timesteps and it does not use stepping back (or more generally, it does not use any form of root finding). They are probably equivalent, but I did not find the equivalence obvious. Thanks for the reference, I will check it out. Also, for the sake of more efficient root finding (if I understand correctly currently you are just repeating the integration over a smaller interval) you might find this interesting: http://mail.scipy.org/pipermail/scipy-user/2010-March/024890.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/344#issuecomment-105091967:438,integrat,integration,438,https://qutip.org,https://github.com/qutip/qutip/issues/344#issuecomment-105091967,1,['integrat'],['integration']
Integrability,"I was imagining something much simpler for the exception class. There is a backport of the exceptiongroup stuff to older Pythons that we could use if we wanted to: https://pypi.org/project/exceptiongroup/. It's another dependency, but it will mean that on Python 3.11 people could start using ExceptionGroup and `except*` immediately if they wanted to. Users on Python 3.10 and below would have to catch ExceptionGroup or use the backport's ugly `with catch(...)` mechanism. . Then, many years from now when Python 3.10 is obsolete, we could drop the backport entirely. Personally I'm in favour of the simpler `ParallelMapException` that doesn't inherit from all the other exceptions. Then when 3.11 is out we can make `ParallelMapException` inherit from `ExceptionGroup` and 3.11 users will be able to use `except*`. People supporting 3.10 and below will have to use `except ParallelMapException`, but that will work just as well on 3.11.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1969#issuecomment-1209370437:219,depend,dependency,219,https://qutip.org,https://github.com/qutip/qutip/pull/1969#issuecomment-1209370437,1,['depend'],['dependency']
Integrability,"I was recently helping a colleague install qutip on his macbook. We had a lot of trouble installing the requisites scipy and cython, with issues relating to their dependencies (gcc). We were following the instructions in INSTALL.txt and using Mac Ports version 2.3.2 on OSX Yosemite and Xcode 6.1. In the end we had to use 'brew' to install these packages. I know that this is not an issue with qutip, but rather scipy / cython. However, I am sure that we not like to put off mac users, so perhaps offering alternative INSTALL instructions to 'brew' rather than 'port' might help. . As a disclaimer, please note I have very limited experience on mac.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/265:163,depend,dependencies,163,https://qutip.org,https://github.com/qutip/qutip/issues/265,1,['depend'],['dependencies']
Integrability,"I was trying to figure out why tests on #943 and #942 were failing for MacOS and could pin-point it down to the `qutip.superop_reps.to_kraus` function. The test `tests.test_superop_reps.test_ChoiKrausChoi` leads to the same malloc error with the message,; ```; python(2234,0x7fff95aef380) malloc: *** error for object 0x7fde6f2f0ff0: incorrect checksum for freed object - object was probably modified after being freed.; ```; Investigating more.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/944:246,message,message,246,https://qutip.org,https://github.com/qutip/qutip/issues/944,1,['message'],['message']
Integrability,"I was trying to see the phase transition of magnetization of a transverse Ising model, and I have the following graph. The magnetization changes unusually rapidly under the change of magnetic field and, I don't have this problem using my own library. Since the code I wrote is extremely simple and there is no error message, I wonder do you possibly have encountered the similar issues and have some suggestions on what it happens. Here is the code, and the graph. ----------------------------------------------------------; harray = np.zeros(11); for i in range(11):; harray[i] = 0.0001 * i; ; #print harray; ; marray4 = np.zeros(11). Mx = tensor(sigmaz(),identity(2),identity(2),identity(2))\; + tensor(identity(2),sigmaz(),identity(2),identity(2))\; + tensor(identity(2),identity(2),sigmaz(),identity(2))\; + tensor(identity(2),identity(2),identity(2),sigmaz()). earray4 = np.zeros(11); ; for ii in range(0, 11):; ; H = -(tensor(sigmaz(),sigmaz(),identity(2),identity(2)) \; + tensor(identity(2),sigmaz(),sigmaz(),identity(2)) \; + tensor(identity(2),identity(2),sigmaz(),sigmaz()) \; + tensor(sigmaz(),identity(2),identity(2),sigmaz())) \; - harray[ii]*(tensor(sigmax(),identity(2),identity(2),identity(2))\; + tensor(identity(2),sigmax(),identity(2),identity(2))\; + tensor(identity(2),identity(2),sigmax(),identity(2))\; + tensor(identity(2),identity(2),identity(2),sigmax())); . marray4[ii] = expect(Mx, H.eigenstates()[1][0]); ; plt.plot(harray, marray4, 'o-'); plt.show(). ![screen shot 2018-02-05 at 11 59 45 am](https://user-images.githubusercontent.com/35711575/35817669-17d7afe2-0a6c-11e8-859f-6ae1d686a7fe.png)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/811:316,message,message,316,https://qutip.org,https://github.com/qutip/qutip/issues/811,1,['message'],['message']
Integrability,"I will update my contribution as soon as I come back from holidays. Best, Jérôme. -------- Message original --------; Objet : Re: [qutip/qutip] Update steadystate.py (#1275); De : Simon Cross ; À : qutip/qutip ; Cc : NS2 group at LPS ,Mention . @NS2LPS Apologies for the slow reviews. Would you be up for updating this PR and then we can review it properly? It would be good to somehow add tests to these cases, but I'm not sure how easy that is to do. -- ; You are receiving this because you were mentioned.; Reply to this email directly or view it on GitHub:; https://github.com/qutip/qutip/pull/1275#issuecomment-893440155",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1275#issuecomment-893447309:91,Message,Message,91,https://qutip.org,https://github.com/qutip/qutip/pull/1275#issuecomment-893447309,1,['Message'],['Message']
Integrability,"I wonder if there is something wrong with your new QuTiP install? Since I can't reproduce the issue locally it might be difficult to suggest solutions, but I can give some debugging advice:. - Try reducing the code used to produce the issue as much as possible (perhaps just a single cell that calls the solver without any c_ops and checks the initial and final expectation values, without plots).; - Check all the inputs to the solver (psi0, etc).; - If a solver prints the ""ODE Integration Error"" warning it usually means that the solver has not converged to an output it trusts, so the solution returned is likely wrong.; ; If you manage to find a smaller reproducer of the error, report it here with as much information about your setup as possible (you can start with the output of `qutip.about()`).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229174846:480,Integrat,Integration,480,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229174846,1,['Integrat'],['Integration']
Integrability,"I would be more keen to keep the internal drift as either single operator (array / Qobj) or a list for when working with time-dependent drift dynamics. This would then mean that methods such as combine_dyn_gen would need to check if the drift is a list or single object.; Two reasons for this:; 1. In the vast majority of cases the drift will be fixed, and in may be confusing for new users as to why it is a list; 2. In cases where users set the drift directly using the dynamics object (like the test that you had to change) this change would not be backwards compatible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/396#issuecomment-155855251:126,depend,dependent,126,https://qutip.org,https://github.com/qutip/qutip/pull/396#issuecomment-155855251,1,['depend'],['dependent']
Integrability,"I would have preferred if the squeez function was called squeeze... but that's just a personal preference. There are many very generic symbol names in qutip, such as tensor, create, etc. These could easily appear in some other package, such as scipy or numpy sometime in the future, and then become a conflict, so I tend to prefer not relying on distorting the function names to make them more unique. For example, identity seems more readable to qeye, which is why i prefer it. What is your suggestion? That we remove identity again? If you think that's the best thing to do that I'm ok with that. However, if best practices python programming is followed, either by not importing into the global namespace or by importing packages in dependency order (for example numpy, matplotlob, scipy. followed by qutip), then this isn't really a problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/25#issuecomment-18952812:736,depend,dependency,736,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18952812,1,['depend'],['dependency']
Integrability,"I would like to try to build the solution for this. **Task 1:** For chrome, the error seems to be due to the CORS (Cross-origin Resource Sharing) policy of google chrome.; `Access to XMLHttpRequest at 'file:///C:/Users/Sid/Desktop/qutip-doc/QuTiP_tree_plot/d3_data/qutip.json' from origin 'null' has been blocked by CORS policy: Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https.`. To fix this, I created a local server (on port 8080) from the `../qutip-doc/QuTiP_tree_plot` folder and then ran the URL `http://localhost:8082/qutip_org.html` on chrome.; Egde doesn't seemed to have any problem in running `qutip-doc.html`. **Task 2:** ; Clarification - We would right a new script to generate `qutip.json` from `apidoc/functions.rst`, just like `QuTiP_tree_plot/qutip-structure.py`. Am I right?. **Task 4:** ; Can you please elaborate on task 4 as to link to which API docs. **Task 5:**; The script written in Task 2 can be made to run for `classes.rst` and a json file would be created which would be used to generate a tree, right?; Where would we put it in the docs? guide-overview?. PS: I'm sorry if I've asked or stated an obvious thing, I am new to this community and am still trying to fimiliarize myself. Thanks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1525#issuecomment-469209588:374,protocol,protocol,374,https://qutip.org,https://github.com/qutip/qutip/issues/1525#issuecomment-469209588,1,['protocol'],['protocol']
Integrability,"I would write it as two separate collapse operators, just like you would do for a Hamiltonian with a constant and time-dependent term i.e. c_ops=[Op1,[Op2,’f(t)’]]. See the docs here,. http://qutip.org/docs/3.0.1/guide/dynamics/dynamics-time.html. for more info. Paul; On Sep 3, 2014, at 12:00 AM, Stefan Krastanov notifications@github.com wrote:. > What is the appropriate way to implement a colapse operator in mesolve that can not be expressed as time_dependent_function \* constant_operator (for instance Op1 + Op2*f(t))?; > ; > Is it only possible through rewriting the equation to be solved?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/223#issuecomment-54382667:119,depend,dependent,119,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-54382667,1,['depend'],['dependent']
Integrability,"I wouldn't fracture the user-interface like that, personally. Instead, make the `alpha` parameter in `qutip.displace` optional, such that `qutip.displace` now effectively supports partial application:. ```python; class _displace:; def __init__(self, n):; [same as before]; def __call__(self, alpha):; [same as before]. def displace(N, alpha=None):; out = _displace(N); return out if alpha is None else out(alpha); ```. Now there's a single entry point for the user, but you get all the same benefits as before. The user can now do `qutip.displace(100)` and get a reusable partially applied object, or do `qutip.displace(100, 0.5j)` if they only need the one number.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1293#issuecomment-646616290:29,interface,interface,29,https://qutip.org,https://github.com/qutip/qutip/issues/1293#issuecomment-646616290,1,['interface'],['interface']
Integrability,I'd agree on dropping the try-catch as well. The about.py is dependant on a successful hardware_info() call. So there's little use on catching an error just to invoke another one with an empty array one level higher. Shall I make a new clean pull request with a more sophisticated commit message?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/780#issuecomment-348168206:61,depend,dependant,61,https://qutip.org,https://github.com/qutip/qutip/pull/780#issuecomment-348168206,2,"['depend', 'message']","['dependant', 'message']"
Integrability,I'd be happy to help on the future improvements (e.g. chi and Stinespring) and integrating these changes with other parts of qutip. The more piecemeal we can make the changes the easier it will be to review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-570133990:79,integrat,integrating,79,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-570133990,1,['integrat'],['integrating']
Integrability,"I'd be interested in providing these changes. I have a few points to ask/consider:; 1. which function is meant by `zero_oper()`? I can't find any reference to it in the code, and judging by the name, I'd guess it's equivalent to `qzero()`, which already supports this.; 2. should we extend the automatic tensoring to other operators, e.g. `create()`, `destroy()`, and so forth? I can't necessarily think of any particular use-case, but _not_ having it causes an odd inconsistency with `qeye()`.; 3. for `projection()` and `basis()` in particular: should the interface allow only scalar `m` and `n`, which must be the same for all dimensions, or should there be broadcasting rules? The latter seems like a more useful choice to me, with the rules for all arguments being:; - if `m` is a list, then `max_len == len(m)`; - if `m` is a scalar, then `m = [m] * max_len`. For example, this would provide `tensor(basis(2, 0), basis(2, 1)) == basis(2, [0, 1]) == basis([2,2], [0, 1])`, which seems the ""least surprising"" to me.; 4. should there be error-checking that supplied scalars/lists are the correct format? For lists in particular, the current behaviour is to silently flatten nested lists, though this is presumably a user error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/363#issuecomment-575273170:558,interface,interface,558,https://qutip.org,https://github.com/qutip/qutip/issues/363#issuecomment-575273170,1,['interface'],['interface']
Integrability,I'll give that a shot. Are there any other hidden dependencies that could be at fault?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/508#issuecomment-237678785:50,depend,dependencies,50,https://qutip.org,https://github.com/qutip/qutip/issues/508#issuecomment-237678785,1,['depend'],['dependencies']
Integrability,"I'll go on and do that, then. Just to summarize, this came up in finding a channel that represents tensoring a state with a preparation of an ancilla, evolving according to a larger channel, then partial tracing out the ancilla. That last step can be written down as a contraction of the indices of a superoperator, giving a rectangular supermatrix representation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/268#issuecomment-65021685:269,contract,contraction,269,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65021685,1,['contract'],['contraction']
Integrability,"I'll have to trust you mostly on actual operation of the code, but it looks like you've covered everything I could see as particular problems. I don't use this part of QuTiP, so I'm really not the best placed person to talk about how natural the APIs seem or anything like that. I'm still a fan of fixing the issues CodeClimate is complaining about because I think the cognitive complexity tests are a semi-decent indicator of maintainability, but at the end of the day, you're the code owner and that's your call. The other seemingly major potential headache is the dependence on that internal `_EvoElement` API in `QobjEvo` - I know for sure that that's going to go to hell in 5.0 - but I get that this PR didn't really cause this, so that's maybe a problem for another time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1444#issuecomment-815033004:567,depend,dependence,567,https://qutip.org,https://github.com/qutip/qutip/pull/1444#issuecomment-815033004,1,['depend'],['dependence']
Integrability,"I'll take a look at the merge. It seems like it might have gone bad. I'll add in some tests once I fix the merge, as well. I'll look into the diag method and try to move everything over to separate; everything as you described. On Wed, Jun 28, 2023, 3:43 PM Eric Giguère ***@***.***> wrote:. > ***@***.**** requested changes on this pull request.; >; > Are you sure there was not a bad merge somewhere?; > Some code is duplicated, seemingly important variable are never used, a; > typo in the import of flimesolve.py stop it from being imported, etc...; >; > Please add tests covering most case and have them passing.; >; > Also the separation of task is not well used. We split the data container,; > ODE integration and the physics, but here they are mixed together...; >; > The quicksolve is the ""diag"" integrator, you don't have to re implement it; > here. You could just set it as the default method since the rhs is always; > constant (but it seems like this is not desired when time_sense != 0).; > ------------------------------; >; > In doc/guide/scripts/floquet_ex3.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245104940>:; >; > > @@ -35,7 +35,6 @@ def noise_spectrum(omega):; > # Alternatively; > psi_t = output.states[idx]; > p_ex[idx] = qutip.expect(qutip.num(2), psi_t); > -; >; > Why did you erase this line?; > ------------------------------; >; > In VERSION; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245585117>:; >; > > @@ -1 +1 @@; > -5.0.0.dev; > +5.0.0a1; >; > The version change when we do a release, not with each PR.; > ------------------------------; >; > In qutip/solver/correlation.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245591365>:; >; > > + G1 = correlation_3op(; > + solver, state0, [0], taulist, None, a_op.dag(), a_op)[0]; >; > ⬇️ Suggested change; >; > - G1 = correlation_3op(; > - solver, state0, [0], taulist, None, a_op.dag(), a_op)[0]; > + G1 = correlation_3op(; > + solver, state0, [0], taulist, None, a_op.dag",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847:706,integrat,integration,706,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847,2,['integrat'],"['integration', 'integrator']"
Integrability,"I'm a bit confused by your comment: Are asking about the purpose of the np array format itself or did you mean why it should accept non-linear tlists?. The reason it should accept non-linear tlists is because such a thing is good to have when you simulate rapid dynamics followed by slow dynamics. This currently works for all other types of time-dependent formats, so it should also work for this one to avoid confusion. The cubic spline would indeed be nicer here, except it seems to me like it assumes the x values are linear?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/520#issuecomment-242156352:347,depend,dependent,347,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-242156352,1,['depend'],['dependent']
Integrability,"I'm a bit confused on that and I'm sure it will make sense after you write this, but would you mind explaining how that works - are you diagonalizing the time-dependent bloch-redfield tensor in the cythonized version of the function?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/525#issuecomment-249343829:159,depend,dependent,159,https://qutip.org,https://github.com/qutip/qutip/pull/525#issuecomment-249343829,1,['depend'],['dependent']
Integrability,"I'm a fan of the CodeClimate complexity tests, but I wouldn't be averse to removing its complaints about ""TODO"" comments - I'm not sure what we really gain from that in this sort of open-source development. In a business where people are working full-time then I imagine it can be worth preventing a merge to finalise some details, but in our very decentralised development, really in some cases (especially in the next major release), we do need to merge in parts of code we know to be imperfect. That said, we probably should make an effort to clear out some of the TODOs and FIXMEs that are in the codebase already. Pushed fix-up changes since last review:; - wrapped the steadystate SciPy linalg functions so they're simplified at the point of call, and unknown keywords in old SciPy versions are just silently ""eaten"" (this is the same behaviour that the file used to have, just formalised a little more).; - added `TODO` in a comment in `qutip.cy.pyxbuilder`; - changed the static class attributes in `test_superoper.py` into a `setup_method` function. *edit*: oh yeah, forgot that there were still errors in some old SciPy bits in the control module as well. I'll push a fix to that before this needs reviewing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826074305:663,wrap,wrapped,663,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826074305,1,['wrap'],['wrapped']
Integrability,"I'm a student using qutip.piqs for the first time, don't know if there is an example of this kind of problem, for the time-dependent Hamiltonian call the function liouvillian() of the Dicke class",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1928:123,depend,dependent,123,https://qutip.org,https://github.com/qutip/qutip/issues/1928,1,['depend'],['dependent']
Integrability,"I'm also using Anaconda on Macbook M1 and ran into 2 errors today when importing qutip. . 1. With the M1 chip, qutip had a problem with hardware detection and as @jakelishman said, commenting lines 48 and 49 on `qutip/hardware_info.py` fixed this error. 2. Then I got the same error message with ""IPYTHON not defined"" and ""'qutip' has no attribute 'settings'."" I thought my conda environment must have been missing the ipython package somehow(?) so I tried `conda install ipython` and importing qutip again and it worked! (I then ran qutip.testing.run() to test out all functions and everything worked perfectly).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-759733240:283,message,message,283,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-759733240,1,['message'],['message']
Integrability,"I'm hitting the limit of ints in python, which causes troubles with large ket vectors. . Minimal example (I can go up to size 16 before it crashes):; ```; ket = tensor([basis(2,0) for i in range(0,20)]); ket.ptrace(1); ```; Returns:; ```; OverflowError Traceback (most recent call last); <ipython-input-22-8485eed3b16f> in <module>(); 1 ket = tensor([basis(2,0) for i in range(0,20)]); ----> 2 ket.ptrace(1). /usr/lib/python2.7/site-packages/qutip-4.3.0.dev0+0b068fc4-py2.7-linux-x86_64.egg/qutip/qobj.pyc in ptrace(self, sel); 1282 """"""; 1283 q = Qobj(); -> 1284 q.data, q.dims, _ = _ptrace(self, sel); 1285 return q.tidyup() if settings.auto_tidyup else q; 1286 . /usr/lib/python2.7/site-packages/qutip-4.3.0.dev0+0b068fc4-py2.7-linux-x86_64.egg/qutip/cy/ptrace.pyx in qutip.cy.ptrace._ptrace(); 89 perm = fast_csr_matrix((data,ind,ptr),shape=(M * M, N * N)); 90 # No need to sort here, will be sorted in reshape; ---> 91 rhdata = zcsr_mult(perm, zcsr_reshape(rho.data, np.prod(rho.shape), 1), sorted=0); 92 rho1_data = zcsr_reshape(rhdata, M, M); 93 dims_kept0 = np.asarray(rho.dims[0], dtype=np.int32).take(sel). /usr/lib/python2.7/site-packages/qutip-4.3.0.dev0+0b068fc4-py2.7-linux-x86_64.egg/qutip/cy/spconvert.pyx in qutip.cy.spconvert.zcsr_reshape(); 187 @cython.boundscheck(False); 188 @cython.wraparound(False); --> 189 def zcsr_reshape(object A not None, int new_rows, int new_cols):; 190 """"""; 191 Reshapes a complex CSR matrix. OverflowError: value too large to convert to int. ```. Similar code works fine in MS LiQui|> using the same workstation so my hardware should be able to support this state size. What is the current ket size limit that is officially supported in qutip? 16?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/828:1303,wrap,wraparound,1303,https://qutip.org,https://github.com/qutip/qutip/issues/828,1,['wrap'],['wraparound']
Integrability,"I'm not at all a fan of making tests part of the public interface like this. It's something that we make absolutely no stability guarantees about, and coupling downstream packages to our own tests just sounds like a recipe for disaster - if we find a bug in main QuTiP and need to change tests or add methods (which we should be able to do completely freely), we're going to inject a ton of extra code into downstream packages, and may completely break them. To be honest, I'm not even wild about how we distribute our tests as part of the module code at all, but that's what we've got. It _could_ be ok if you import the test case base, and redefine your tests from there. We still don't make any stability guarantees about that, but it's conceivable that we could (though of course, the problem of ""what if we need to add methods"" persists). That would also solve your problems about saying you can't import individual tests. You can import individual tests anyway, you just need to rename them to things like `_TestAdd`, or use one of the pytest hooks in your local `conftest.py` to reject tests whose `__module__` isn't your local module, or do one of the other methods of filtering.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-976540355:56,interface,interface,56,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-976540355,2,"['inject', 'interface']","['inject', 'interface']"
Integrability,"I'm not entirely sure what's being asked of us here, because the code numba supports is to do with the numba developers, not us? numba is a compiler for Python code accessing NumPy arrays in ways other than internal NumPy compiled C code. The benefit to QuTiP users even if numba _were_ to add support would be minor, because a) we use custom sparse matrices which numba couldn't currently target to a GPU efficiently and b) almost all of our heavy code is compiled C, which is already as the same target as standard numba. We aren't going to convert (e.g.) `Qobj` to a numba `jitclass` because our entire library is written in Cython, and besides, the speed-ups come from the internal `Qobj.data` attributes, which we are already low-level. GPU-based sparse matrix routines are an interesting side-note, but will require very specialised data structures and accesses. This is more possible in the new data-layer added in 5.0, but still would require a huge amount of work. We're not likely to achieve this by using numba, but instead to use specialised GPU-enabled data structures like cupy instead, since that fits into our data model better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/900#issuecomment-809667000:766,rout,routines,766,https://qutip.org,https://github.com/qutip/qutip/issues/900#issuecomment-809667000,1,['rout'],['routines']
Integrability,"I'm not sure about any of these options:; 1. this absolutely should not happen. Trying to detect ""magic"" behaviour based on size is counterintuitive, and breaks other behaviour; it makes it impossible for `Qobj` to correctly handle 1x1 Hilbert spaces. While very infrequently used in practice, trying to backdoor different behaviour through something because it's already there is a nightmare to maintain, and prevents any other use. We've had large problems with 1x1 Hilbert spaces in the past, and 5.x is very strict about handling them safely now.; 2. `mul` should not be defined between two instances of `Data`, because `Data` represents a matrix, and `mul` is between a scalar and a matrix. Still, this seems closest to the correct solution to me, but instead, perhaps the `mul` dispatcher might take an arbitrary Python object as the scalar, and the inner function is responsible for returning `NotImplemented` if it can't handle it? This would require a couple of wrappers around the existing `csr` and `dense` methods, but that's not a huge deal, since the dispatchers are meant to be called from Python space anyway.; 3. same argument as the start of 2: `mul` is already defined as ""scalar \* matrix"", and there's no need for ""matched-shape elementwise multiplication"" to be a defined operation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1607#issuecomment-880740863:971,wrap,wrappers,971,https://qutip.org,https://github.com/qutip/qutip/issues/1607#issuecomment-880740863,1,['wrap'],['wrappers']
Integrability,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:1187,wrap,wrapper,1187,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955,1,['wrap'],['wrapper']
Integrability,"I'm not sure, I've never used MKL, but I don't think it give much (or any) improvement for sparse matrix products since it probably doesn't use BLAS routines. Perhaps @nonhermitian knows something about it, or perhaps if sparse matrix products is any faster with OpenBLAS?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/55#issuecomment-25364351:149,rout,routines,149,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25364351,1,['rout'],['routines']
Integrability,"I'm sorry I don't have a huge amount of time at the moment, but just to add an extra point (that it looks like I didn't think about before): if we _do_ add this, then any method that requires an unconditional `import qutip` in downstream packages probably isn't a suitable solution - `import qutip` already takes far too long (though a lot of this is importing various parts of `scipy`, which another library might do on our behalf), and it means that they'd have to do their own import checking to handle optional dependencies. In that sense, (ab)using Python's duck-typing with a magic method might be the best way to break the dependency/import problem. I'm definitely still against implicit conversion to `Qobj` in pretty much any situation - I can imagine we could define a safe, fairly forward-compatible interface for letting people do `qutip.Qobj(x)`, but as it stands, that's the limit that I'd want the interface to be used for. I particularly am really against the idea of implicit conversion. I don't see an advantage to allowing QuTiP functions to act implicitly on other objects; it means our own functions are slower (because we have to explicitly test inputs on _everything_), and it restricts us more from improving `Qobj`'s internals, because we have to maintain compatibility with the interface. We'd never really be able to output anything _other_ than a `Qobj` without this, so there's no reason not to just have the user convert the inputs to `Qobj` explicitly themselves - that isolates the efficiency penalty so you only pay it if you need it, and it'll likely be clearer in the end anyway, because explicit is better for following the logic than implicit.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-908380301:515,depend,dependencies,515,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-908380301,5,"['depend', 'interface']","['dependencies', 'dependency', 'interface']"
Integrability,"I'm still fairly new to QuTiP but I've found that `mesolve` allows `H` and `rho0` to have different dimensions. Of course getting it right is the users responsibility, an informative warning may be useful. A minimal example is as follows:. ```; from qutip import *; import numpy as np. N = 3; a = tensor(destroy(N),identity(2)); sz = tensor(identity(N),sigmaz()). H = sz*a.dag() + sz.dag()*a; collapse = [a]; tlist = np.linspace(0,1,100); solution = mesolve(H, basis(2,0), tlist, collapse, [a.dag()*a]); ```. which gives a numerical integration error:; `UserWarning: zvode: Repeated convergence failures. (Perhaps bad Jacobian supplied or wrong choice of MF or tolerances.)`; Rather than a more direct warning about the (more likely) problem of mis-matched Hilbert spaces. I'm happy to add a check to the `mesolve` function and submit a PR, but I wanted to be sure that I'm not missing some use case where `H` and `rho0` should be allowed to differ.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/479:533,integrat,integration,533,https://qutip.org,https://github.com/qutip/qutip/issues/479,1,['integrat'],['integration']
Integrability,"I'm trying to simulate a Rabi oscillating Hamiltonian with unitary decay operators (the real simulation has decay on a different tensored component, so I tensor with qeye). Even though the decay operators are unitary, I keep seeing decay. It's independent of the unitary prefactor, and doesn't seem to depend on the timestep. If I remove the time dependence I don't see decay. If I remove the decay operators it Rabi oscillates fine. Can someone please tell me what I'm doing wrong?; Thank you; '; import numpy as np; import qutip as qt; import matplotlib.pyplot as plt. tlist=np.linspace(0, 10, 10000). Hq=5e3 * 2 * np.pi / 2 * qt.sigmaz(); HDrive = qt.sigmax(); def Hdrive_Coef(t,args):; return 2 * np.pi * np.sin(2 * np.pi * 5e3 * t); H=[Hq, [HDrive, Hdrive_Coef]]. psi0=qt.basis(2,0). result=qt.mesolve(H, psi0, tlist, [qt.qeye(2)], qt.sigmaz(), progress_bar=True). plt.figure(1); plt.clf(); plt.plot(result.times, result.expect[0]); '. ![image](https://user-images.githubusercontent.com/79229341/113942940-8ec43f00-97b6-11eb-8a33-f0da7293ab71.png)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1492:302,depend,depend,302,https://qutip.org,https://github.com/qutip/qutip/issues/1492,2,['depend'],"['depend', 'dependence']"
Integrability,"I'm using qutip to simulate lindblad dynamics. However, compared to the method I wrote myself with scipy, the one I wrote with qutip mesolve() was much slower. Did I do something wrong or it's expected?; Here's my code. ```python; def simulate_lind (self, t):; 		""""""simulate the lindblad dynamics; 		Arguments:; 			t -- time for propagation; 		""""""; 		if self.impl == 'direct':#my implementation; 			rho0 = np.reshape(self.psi0, (self.n)**2); 			r = ode(self.__lind).set_integrator('zvode', method='bdf'); 			r.set_initial_value(rho0, 0); 			r.set_f_params(self.H, self.gamma, self.A, self.n); 			r.integrate(r.t); 			rhot = r.y; 			rhot = np.reshape(rhot, (self.n, self.n)); 		elif self.impl == 'qutip': #with qutip; 			rho0 = Qobj(self.psi0); 			rhot = mesolve(Qobj(self.H), rho0, [0, t], [np.sqrt(self.gamma) * Qobj(self.A)]).states[-1].full(); 		self.psi0 = rhot; 		return self.psi0; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1180:598,integrat,integrate,598,https://qutip.org,https://github.com/qutip/qutip/issues/1180,1,['integrat'],['integrate']
Integrability,"I'm very surprised to see that there is a failing test on qutip.qip, which is pure python and is unlikely to be platform dependent. I have a guess that this one may have something to do with pytest parameterization. I had a problem with that on Mac OS (not M1) before, which I still don't fully understand and I left a comment back then:; https://github.com/qutip/qutip/blob/3ff3f42d2cd950c99af8936b12d9221ed79de5e3/qutip/tests/test_scheduler.py#L92-L94; If I split the test and run them (`test_scheduling_gates2` and `test_scheduling_gates3`) one by one, it is fine. But if I use pytest parameterization to initialize several of them, it fails. And now this time it happens at exactly the same place. If you would like to, you can copy that failing test and run it (without using pytest parameterization but giving the input explicitly) in a Python console. If it works well, then my guess should be right. But it doesn't apply to all other failing tests I think.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755#issuecomment-1007367078:121,depend,dependent,121,https://qutip.org,https://github.com/qutip/qutip/issues/1755#issuecomment-1007367078,1,['depend'],['dependent']
Integrability,"I've been playing around with larger systems recently; when I started out ptrace had a memory issue and couldn't handle what I was doing, so I had written a home-made version to do it. Recently I ended up doing the ptrace with the fixed built-in function and I found it to be much slower. I did some testing with my new function. At least on the machine I'm running on, with 9+ qubits it's about 10x faster for calculating a partial trace on a density matrix. If you're starting out with a ket, you can go even faster, an additional 5x improvement: (test code below); ```; Running time (ms/trace); 2 3 4 5 6 7 8 9 10 qubits; ptrace (dm) 0.4 0.3 0.3 0.3 0.6 1.9 6.6 33.4 137.9; new func (dm) 0.5 0.4 0.4 0.4 0.5 0.7 1.0 2.8 13.1 ; ptrace (ket) 0.6 0.5 0.5 0.5 0.9 2.7 8.5 37.2 167.7; new func (ket) 0.5 0.4 0.4 0.4 0.5 0.6 0.9 1.0 3.2 ; sum((rho-rho).norm()); dm 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0; ket 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0; ```. My new version is pretty simple, using numpy's built-in ndarray routines. I've looked at the code for ptrace and it's a bit opaque to me; at the moment I don't feel quite up to modifying it, so I'm just putting up the code I've used instead of doing a pull request. My new function is here:; ```; def ptracealt(rho,qkeep) :; rd = rho.dims[0]; nd = len(rd); qkeep = list(sort(qkeep)); dkeep = (np.array(rd)[qkeep]).tolist(); qtrace = list(set(np.arange(nd))-set(qkeep)); dtrace = (np.array(rd)[qtrace]).tolist(); if isket(rho) :; vmat = (rho.full(); .reshape(rd); .transpose(qkeep+qtrace); .reshape([prod(dkeep),prod(dtrace)])); rhomat = vmat.dot(vmat.conj().T); else :; rhomat = np.trace(rho.full(); .reshape(rd+rd); .transpose(qtrace+[nd+q for q in qtrace]+qkeep+[nd+q for q in qkeep]); .reshape([prod(dtrace),prod(dtrace),prod(dkeep),prod(dkeep)])); return Qobj(rhomat,dims=[dkeep, dkeep]); ```; and the test code here: ; ```; Nqmax=10; ntest = 100; trdiff = np.zeros([2,Nqmax-1]); ttr = np.zeros([4,Nqmax-1]); for nd in range(2,Nqmax+1) :; r0 = [ rand_d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1076:1009,rout,routines,1009,https://qutip.org,https://github.com/qutip/qutip/issues/1076,1,['rout'],['routines']
Integrability,"I've done some simple benchmarks and indeed there seems to be a nice speedup. http://nbviewer.ipython.org/gist/jrjohansson/e63daeb3a41f95f163ad. so it definitely seems worthwhile to add support for this type of time-dependence in QuTiP. But string part of the definition of H is your example can be automatically generated knowning the times array, as I did in the notebook linked above. Therefore, I wonder if it may not be even more convenient if one simply could do. ```; >>> H = [H1, [H2, pulse]]; ```. It would require a few more changes in mesolve/sesolve and in _ode_check.py, but would give a nice clean API for using arrays to define time-dependences. How do you feel about that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/141#issuecomment-44613285:216,depend,dependence,216,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44613285,2,['depend'],"['dependence', 'dependences']"
Integrability,"I've got this code which uses a rotating frame approximation. I got it to work when the Hamiltonian was time independent, but now I'm trying to implement a time dependent Hamiltonian and nothing happens to the graph. I understand how to do this, but I'm not sure how it differs when using a rotating frame approximation. ```python; h = 6.62607015e-34; b = 0.1786195317554453 #magnetic field; b_AC = 3.572390635108906e-05 #oscillating magnetic field; g = 2 #g-factor; u = 9.274E-24 #bohr magneton; w = g*u*b/h #omega ; w0 = 5e9 # omega0 is the rotating frame frequency. gamma_phi = 999000; gamma_minus = 1000. epsilon = g*u*b/h*(2*cmath.pi); Delta = g*u*b_AC/h*(2*cmath.pi). H0 = (w-w0)*epsilon/2 * sz #+ Delta/2*sy. def pulse(t0,t):; return np.heaviside(t0,2e-9). def H1_coeff(t,args):; t0=args['t0']; phi=args['phi']; return Delta*pulse(t0,t)*np.sin((w-w0)*t+phi). H = [H0,[sx,H1_coeff]]. times=np.linspace(0, 0.0001, 1000). #our initial qubit state ; state0=(state_z_plus)/(np.sqrt(1)); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1466:161,depend,dependent,161,https://qutip.org,https://github.com/qutip/qutip/issues/1466,1,['depend'],['dependent']
Integrability,"I've had a thorough look. Simplifying the SolverOptions class is an excellent idea, but I think the PR currently doesn't go far enough and ends up with the solver classes, the integrator classes and the solver option classes required to share too much internal state with each other. As a next step to try untangle things, I suggest the following:. - Let's remove the `known_solvers` and the solver `name` from the SolverOptions and instead have the base solver pass the allowed options with defaults in to the SolverOptions constructor directly. If the allowed options list is `None`, then we can allow all options (for the convenience of users who really want to make their own SolverOptions instances).; - Having the options able to notify a listener of changes seems great -- let's keep that.; - When a solver is created, let's have the base solver create a new SolverOptions instance, either from a dictionary or another SolverOptions instance, but with the allowed options and defaults now specified.; - To deal with the integrator options, let's go back to having a single option named `ode`, but have the value of `ode` have type `SolverOptions`, and be a child of the solver options (if the child has a value modified, it should notify the parent of the change).; - For convenience, when passing options as a dictionary, one should be able to use `{""ode.method"": ""vern9""}` or `{""ode"": {""method"": ""vern9""}`. I think that should be enough to disentangle things from each other. The base solver would need to update the integrator if integrator options change and deal with any changes to the base options. It's not completely clear to me whether the result options should also be sub-options or just be included in the solver options. I'm happy for them to be included in the solver options, as long as the solver options are passed to the result class constructor. That keeps things a bit simpler and if solver needs new result options it can always create its own result sub-class and just pr",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947#issuecomment-1173137945:176,integrat,integrator,176,https://qutip.org,https://github.com/qutip/qutip/pull/1947#issuecomment-1173137945,1,['integrat'],['integrator']
Integrability,"I've just pushed an extra commit purely to keep CodeClimate happy - I had to touch a line in a logic block that CodeClimate already didn't like, so it moaned that I hadn't fixed it. This just separates out the logic to make it a bit easier to read. As a side-effect, it allows iterable type to be used inside the time-dependent object list of `QobjEvo` (only - doesn't affect anywhere that doesn't use `QobjEvo`), so; ```python; qutip.QobjEvo([qutip.sigmax(), (qutip.sigmay(), '1')]); ```; is now a valid specifier (note the tuple in the list).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1561#issuecomment-849750278:318,depend,dependent,318,https://qutip.org,https://github.com/qutip/qutip/pull/1561#issuecomment-849750278,1,['depend'],['dependent']
Integrability,"I've lost the plot a bit with a whole load of changes to `Coefficient` now merged into this PR. Is there a chance we can split that out into its own PR?. I would expect `QobjEvo.__call__` to be thread-safe/re-entrant. The fact that coefficients seemingly don't support this immediately is worrying to me. A simple call like that changing ""global"" state of the object is dangerous; it has a habit of leaking out even in single-threaded applications, just like the bug I described previously with a call to `mesolve` modifying an existing `QobjEvo` in place. In this case I don't see an immediate bug, but it's very non-obvious behaviour and it would be easy to accidentally introduce one in it in the future (or maybe I just can't think of one now). Having `_BaseElement` be mutable makes all time-dependent operations of `QobjEvo` unresolvably thread-unsafe without copying on every operation. That said, looking again, I'm not sure I understand `_BaseElement`: it seems like `_EvoElement` and `_FuncElement` do entirely different things on `call`? What's the purpose of it, and if we put all speed considerations aside what would the signature and behaviour of `_BaseElement._call` be?. Could you write some docstrings on all the elements to explain their use-cases as well, so we've got it all stored for the future?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1481#issuecomment-822817122:797,depend,dependent,797,https://qutip.org,https://github.com/qutip/qutip/pull/1481#issuecomment-822817122,1,['depend'],['dependent']
Integrability,Ial time dependent drift,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/396:9,depend,dependent,9,https://qutip.org,https://github.com/qutip/qutip/pull/396,1,['depend'],['dependent']
Integrability,"If I have a superoperator already in the Kraus form (that is, as a list of operators), I cannot directly compute its average gate fidelity: `average_gate_fidelity` will try to convert it to Kraus anyway:; https://github.com/qutip/qutip/blob/2aa51b92df57f995778940815d20d293f00f8a9d/qutip/metrics.py#L144; and `to_kraus` will raise an error because the input does not have a `type`:; https://github.com/qutip/qutip/blob/b0c6e59a4914816ff68163b03a37ab40ecf0d809/qutip/superop_reps.py#L543-L555. As a minimal example, shouldn't something like; ```; kraus_ops = [qutip.sigmax(), qutip.sigmay()]; qutip.average_gate_fidelity(kraus_ops); ```; be made to work?. What about adding a check in `average_gate_fidelity` so that if the input is already a list then don't do anything (although it seems more robust to have some kind of wrapper to flag an object as list of operators of a Kraus decomposition)?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/869:822,wrap,wrapper,822,https://qutip.org,https://github.com/qutip/qutip/issues/869,1,['wrap'],['wrapper']
Integrability,"If I use a time-dependent collapse operator in `mcsolve`:. ``` python; import numpy as np; from qutip import destroy, basis, mcsolve. b = destroy(5); H = b.dag() * b; collapse = [[b, '9 * exp(-(t / 5.) ** 2)']]; psi0 = basis(5, 1). times = np.linspace(0, 100, 100); data = mcsolve(H, psi0, times, collapse, [b.dag() * b]) ; ```. I get the following error:. ``` python; Error compiling Cython file:; ------------------------------------------------------------; ...; @cython.boundscheck(False); @cython.wraparound(False); def col_expect(int which, double t, complex[::1] data, int[::1] idx, int[::1] ptr, complex[::1] vec):. if which == 0:; out *= conj(9 * exp(-(t / 5.) ** 2)); ^; ------------------------------------------------------------; ```. I looked into `cy/codegen.py` and found, that the line. ``` python; out_string.append("" out *= conj("" + self.c_tdterms[ind] + "")""); ```. of the function `func_which_expect(self)` (currently line 355) should be replaced with. ``` python; out_string.append("" out = conj("" + self.c_tdterms[ind] + "")""); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/844:16,depend,dependent,16,https://qutip.org,https://github.com/qutip/qutip/issues/844,2,"['depend', 'wrap']","['dependent', 'wraparound']"
Integrability,"If it helps in the future, you can use `pycodestyle` (available in `pip` and `conda`) to check pep8 compliance on your end before pushing a commit. As to the actual command, we might not actually want to remove the usage of `convert` - it's quite possible that a lot of people are still using ImageMagick 6, since for most people it's just a dependency that got installed by something else, and isn't frequently updated. `qutip` doesn't list it as an official dependency, so it wouldn't get updated on our behalf. We could catch which version of `ImageMagick` to use with something like; ```python; def _magick_comamnd():; for command in ['magick', 'convert']:; try:; subprocess.run((command, '--version'), capture_output=True); return command; except OSError:; pass; raise FileNotFoundError(""Couldn't locate system ImageMagick""); ```; and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; ```python; subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); ```; or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473:342,depend,dependency,342,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473,2,['depend'],['dependency']
Integrability,"If it's something we want to support, we'll need a bit of a rewrite of the data-layer testing infrastructure, but nothing too major. I'd be in favour of a bit of a larger restructure:; - rearrange the repo root to have `/src/qutip` and `/test/qutip` instead of `/qutip/tests` (I originally didn't like it, but I now see more and more benefits of the `/src` (or `/lib`) convention in Python projects).; - the current `qutip/tests` should entirely become `/test/qutip`; - a new `/src/qutip/test` becomes a fully-supported _public_ module, including base classes (such as the data-layer mixins) and things like that. We'd need to be careful, because reducing your possibilities for flexibility in testing generally sounds like a bad idea to me, but if we take care to be very limited, it could work. I suspect you won't be able to import the test suite from inside `qutip.core.data` because of cyclical dependencies, which is probably a good thing - it'll force us to put the structure the right way round immediately. For an idea pretty far out of left field:; - the data layer tests should really _discover_ the specialisations rather than us needing to specify them (this is true regardless of this PR); - if so, in the new form, we _could_ directly export this part of the test suite from `qutip.test` (our test suite would import this as well), and add a little bit of logic to allow filtering of which tests need to be run (class decorators, probably); - downstream packages could then test just by importing our classes and disabling any specialisations that are only on internal data-layer objects. I'm not 100% sure how I feel about this, but it's plausible - we'd still be able to add extra methods in our own test suite if we wanted them, because we could just derive from the classes, rather than defining the names into the test suite in those cases. ---. About us breaking downstream CI: having been a maintainer of QuTiP and now Qiskit, I have a deep-rooted hatred for any upstream package",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-979917075:900,depend,dependencies,900,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-979917075,1,['depend'],['dependencies']
Integrability,"If the initial state was found to be of type 'oper', no further testing was done in initialisation of mesolve on the dimensions. For example, if a user incorrectly created a density matrix, such as by doing; ```python; tensor(basis(20, 0), qeye(20)/20); ```; (presumably intending `basis(20, 0).proj()` or similar), it would have a type of 'oper' inside Qobj, and mesolve would recognise it as a ""proper"" density matrix, even though the shape was actually incorrect. Such an object would get passed down into the C layer, which does no shape checking, without having its shape explicitly tested, and eventually could cause a segfault in the matrix multiplication routine. The correct check in this setup is to test the shapes when passed into `mesolve`, if this is possible. If the Hamiltonian/Liouvillian is generated by a Python callable, we have to test every time the time-dependence function is called. A user could make a pathalogical function that changes its dimensions on different times, and we cannot allow a segfault. Fix qutip/qutip#1456",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1459:663,rout,routine,663,https://qutip.org,https://github.com/qutip/qutip/pull/1459,2,"['depend', 'rout']","['dependence', 'routine']"
Integrability,"If they call BLAS functions then they should use threads. It looks like scipy is calling the mkl blas where as numpy is not. A bit odd. . > On Apr 8, 2016, at 09:52, Alexander Pitchford notifications@github.com wrote:; > ; > Yes, I did the mkl.set_num_threads. This is my test script; > ; > import numpy as np; > import timeit; > ; > NUM_THREADS = 1; > ; > try:; > import mkl; > use_mkl = True; > except:; > use_mkl = False; > ; > def timing(f):; > def wrap(_args):; > time1 = timeit.default_timer(); > ret = f(_args); > time2 = timeit.default_timer(); > print('{} function took {:0.3f} ms'.format(f.**name**, (time2-time1)*1000.0)); > return ret; > return wrap; > ; > if use_mkl:; > mkl.set_num_threads(NUM_THREADS); > print(""Number of threads is {}"".format(mkl.get_max_threads())); > else:; > print(""mkl unavailable""); > ; > d = 10000; > n_reps = 10; > A = np.random.random([d, d]); > ; > print(""Starting tests""); > ; > @timing; > def calc_exp(A):; > for i in range(n_reps):; > E = np.exp(A); > ; > calc_exp(A); > Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same.; > ; > This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date.; > ; > Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/462#issuecomment-207494345:453,wrap,wrap,453,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207494345,2,['wrap'],['wrap']
Integrability,"If you click into ""Files changed"" you can just tick the files as you've looked at them. To make it easier for you, I'd suggest having a copy of the old version next to them and reading the full commit message, because I usually explain what I'm doing in them and why I'm doing it that way. If you're worried about the size of the PR in total, then I'd strongly recommend _not_ squashing this PR if/when it's merged, but instead just rebasing it onto `master` or doing a direct merge. That way it doesn't look huge, it looks like a series of commits which each change one file, which is what you'd get if the PR was initially split. The review doesn't end at the point the code is merged - somebody in the future may very well want to see why I made certain changes. I know I've spent a long time looking through the old `git` logs to work out why tests were the way they were, and it's always much much more difficult when you've got one of those squash commits with like 30 sub-parts. The commits in this PR are already modular, and with the exception that 7a0d6e6 could be squashed into ; 1d60b46, they all represent an isolated unit of progression and there aren't any ""work in progress"" commits. I didn't perform that squash locally because I would have had to force-push over 10+ commits. Squashing the PR does make sense when there are a lot of wip commits for a small unit of work, but for a very large unit of work like this one, it's much better to interactive rebase to keep it neat locally (I've already done that for the most part), and never push wip commits in the first place.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-605494875:201,message,message,201,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-605494875,1,['message'],['message']
Integrability,"If you have extra_link_args in the site.cfg, then a double keyword argument; happens when reading the options for the blas library. If you use openblas, add this to your site.cfg; [openblas]; extra_link_args = ... whatever ... and the error will happen.; The error is this. TypeError: config.add_extension() got multiple values for keyword argument; 'extra_link_args'. 2015-11-08 21:12 GMT+01:00 Paul Nation notifications@github.com:. > I do not get a build failure under NumPy 1.10.1. What was the particular; > error message? Any changes would also have to be backward compatible with; > earlier NumPy versions.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/392#issuecomment-154863591. ## . Kind regards Nick",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-154867711:519,message,message,519,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154867711,1,['message'],['message']
Integrability,"If you only need the final state and you don't need any intermediate times, your `tlist` should only have two elements in it. So; ```python; import qutip; hamiltonian = qutip.sigmax(); state = qutip.basis(2, 0).proj(); times = [0, 10]; qutip.mesolve(hamiltonian, state, times); ```; should give the correct result. If you want to integrated for a long time, you might get errors about the integration not converging. If so, you will need to increase the `nsteps` solver option, such as; ```; options = qutip.Options(nsteps=10_000_000); qutip.mesolve(..., options=options); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-808417826:330,integrat,integrated,330,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-808417826,2,['integrat'],"['integrated', 'integration']"
Integrability,"If you would like another item for the todo list, I'd really like to see the matplotlib aspects of the interface cleaned up. When we added the new lines and arcs features, we allowed passing arbitrary matplotlib plotting arguments as additional parameters. Perhaps we can do the same for the other functions and remove the old means of setting colours, etc?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1913#issuecomment-1142616351:103,interface,interface,103,https://qutip.org,https://github.com/qutip/qutip/issues/1913#issuecomment-1142616351,1,['interface'],['interface']
Integrability,Implemented a time-dependent version of the Bloch-Redfield master equation solver for time-dependent Hamiltonians and c_ops. It makes use of the list array format. Also fixed some formatting inconsistencies in the correlation docstrings (yet again... I think I got it this time),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/525:19,depend,dependent,19,https://qutip.org,https://github.com/qutip/qutip/pull/525,2,['depend'],['dependent']
Integrability,"Implements the changes mentioned in #1203. The `qutip.graph` functions are pure mathematical functions which are beyond the purview of the package. Most of them have already been merged into `scipy.sparse.csgraph`, so we now move to using those and mark the functions as deprecated. Only two functions are actually used, and they're not even currently tested. `weighted_bipartite_matching` is not present in `scipy`, but is still marked as deprecated because we can move it into being an internal-only function, or simply remove the code that depends on it since those paths are not tested. This will allow the removal of a good amount of Cython code, and simplify maintenance.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1206:543,depend,depends,543,https://qutip.org,https://github.com/qutip/qutip/pull/1206,1,['depend'],['depends']
Integrability,Improve the error message of circuit plotting,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1427:18,message,message,18,https://qutip.org,https://github.com/qutip/qutip/pull/1427,1,['message'],['message']
Integrability,"In QuTiP 4.5.0 conda release on Mac, I get an error if I call a quantum circuit to print in jupyter notebook. However, the circuit is printed after the message. . This did not happen with QuTiP 4.4.1. Imagemagick is installed. This issue may be related to the closed issues #1179 and #702. ```; ---------------------------------------------------------------------------; FileNotFoundError Traceback (most recent call last); /miniconda3/lib/python3.7/site-packages/IPython/core/formatters.py in __call__(self, obj); 343 method = get_real_method(obj, self.print_method); 344 if method is not None:; --> 345 return method(); 346 return None; 347 else:. /miniconda3/lib/python3.7/site-packages/qutip/qip/circuit.py in _repr_svg_(self); 1117 ; 1118 def _repr_svg_(self):; -> 1119 return _latex_compile(self.latex_code(), format=""svg""); 1120 ; 1121 @property. /miniconda3/lib/python3.7/site-packages/qutip/qip/circuit_latex.py in _latex_compile(code, filename, format); 64 else:; 65 os.system(""pdf2svg %s.pdf %s.svg"" % (filename, filename)); ---> 66 with open(""%s.svg"" % filename) as f:; 67 result = f.read(); 68 . FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.svg'; ```; <img width=""1137"" alt=""Screenshot 2020-02-26 17 44 05"" src=""https://user-images.githubusercontent.com/14573436/75327357-9af58180-58bf-11ea-9989-6892f5b7af41.png"">",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1185:152,message,message,152,https://qutip.org,https://github.com/qutip/qutip/issues/1185,1,['message'],['message']
Integrability,"In general in pytest we use the bare keyword `assert` for almost everything. All the functions in `np.testing` are from the ""before times"", when test tooling wasn't as good as it is nowadays - they were a big improvement on available warning messages back before 2015. Nowadays, though, `pytest` does introspection on assertion failures, so it has even better message reporting than the `np.testing` functions, and it lets you write much clearer code. For example, `assert_equal(x, y)` is much better spelled in pytest as `assert x == y`, because it's much faster to read and pytest does better error reporting for it. Similarly, testing for exceptions is better with; ```python; with pytest.raises(ValueError):; call_that_raises(1, ""hello, world""); ```; as opposed to the numpy form `np.testing.assert_raises(ValueError, call_that_raises, 1, ""hello, world"")` - the pytest one is much easier to read, and the error message is better. The only numpy one we still use is `np.testing.assert_allclose` when we're comparing several numpy arrays. That's just because `pytest` doesn't have a good function that's aware of multidimensional arrays (at least not one that I know). This file still has a load of old numpy testing code in it (e.g. `np.testing.assert_equal`) because it was written quite a long time ago, when that was the recommended way of doing things. We're changing over slowly, so we can take advantage of all the nice features of pytest. In this case, I changed `np.testing.assert_allclose(x, y, atol=tol)` to `assert abs(x - y) < tol`. I removed `np.testing.assert_allclose`, because that gives the mistaken impression that we're comparing arrays (we're not, we're comparing two scalars). I could have changed it to `assert x == pytest.approx(y, tol=tol)`, except in this case the test file hasn't been converted to `pytest` style yet, and I wanted to keep the total change of this PR as small as possible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-822737671:242,message,messages,242,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-822737671,3,['message'],"['message', 'messages']"
Integrability,"In general the biggest thing you should consider is readability, and to be fair, that's a little subjective. You're welcome to comment on my PR if you think I've done anything that's unreadable. You can scope fixtures at whatever level is appropriate. In this particular case, I scoped the `dimension` fixture at the module level, because there's loads of places that needed to test varying dimensions, and it's very convenient to define it just once. In the few cases where we needed to override that (e.g. in `dnorm`), I overrode it by providing a definition in a tighter scope - either at class level or per-function (via `pytest.mark.parametrize` directly). The correct scoping just depends a lot on the type of tests you're writing - if you're going to have to overwrite something constantly then module scoping isn't good, but if you have lots of different functions to test, and every test for a given function will want the same parametrisation, then class scoping might be a good choice. If you only need the parametrisation once, then it's best to put it right next to the place it's used (like in the case of mine that you've highlighted). It means that if you've opened that file to read the tests, then everything you need to understand `Test_fidelity.test_known_cases` will be on your screen if you just scroll to it. That makes it much easier for the next person who has to come along to edit your code. I used a couple of temporary variables in that case just to aid readability - my cases wouldn't have nicely fit on one line if I'd shoved the `qutip.basis(2, 0)` stuff inside the `pytest.param` constructors, and it would be hard to read. This way you can easily verify that the code is correct bit-by-bit; you can see clearly that the names are descriptive and match exactly what they say, and that means you can trust them when they then appear in the parametrisation. I won't pretend to be perfect at any part of coding, and particularly testing. I rewrote all the testing files s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487#issuecomment-815044706:687,depend,depends,687,https://qutip.org,https://github.com/qutip/qutip/pull/1487#issuecomment-815044706,1,['depend'],['depends']
Integrability,"In moving to c++, we did not update the Cython cleanup routine. Also, using Visual Studio leads to a different set of temp files than GCC. Here, I take advantage of the fact that all the temp files start with 'tdname' and then just walk the dir to clean them, regardless of extension and what not.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/655:55,rout,routine,55,https://qutip.org,https://github.com/qutip/qutip/pull/655,1,['rout'],['routine']
Integrability,"In my earlier PR, I had forgotten to add a check for trace preservation in the `iscptp` property. This has now been added, along with test cases for the new `istp` and `iscp` properties. I'm not entirely satisfied with importing within the property bodies, but I'm not sure how else to avoid circular dependencies.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/94:301,depend,dependencies,301,https://qutip.org,https://github.com/qutip/qutip/pull/94,1,['depend'],['dependencies']
Integrability,"In my tries yesterday, I did not have problem with `scipy.linalg.eigh` for C array. Since `scipy` does not use the same lapack interface for C and Fontran continuous array, I though it was fine. I guess I did not run enough tests. . Using `eig` and `zgeev` seems a good idea. I don't have any error with it yet.; It would then be good to change all the `eigh` in the code, not just the `zheevr` call in cython. ; And probably raise an issue in `scipy`. @jakelishman since most computation of eigenvalue in Qutip go through the `Qobj` could you fix that call this summer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628833918:127,interface,interface,127,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628833918,1,['interface'],['interface']
Integrability,"In the current code there is no automatic generation of the bibtex files but a polite message to cite qutip and use the cite function to generate the same. I hope that is okay. ```; print(""Please cite QuTiP in your publication - for you convenience a bibtex file can be easily generated using `qutip.about.cite()`""; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/752#issuecomment-357853478:86,message,message,86,https://qutip.org,https://github.com/qutip/qutip/pull/752#issuecomment-357853478,1,['message'],['message']
Integrability,"In the documentation, qutip is build with `pip install qutip[full]`, while in test it is installed with `pip install qutip[$QUTIP_TARGET]`, with the target changing depending on the test. We don't have any test using extra yet... The mpi4py team made a GitHub Actions workflow to run it in test: https://github.com/mpi4py/setup-mpi. You can add that workflow and the `extra` to have every test run with mpi:; ```; - uses: actions/checkout@v3; - uses: mpi4py/setup-mpi@v1; ```. `QUTIP_TARGET=""tests,graphics,semidefinite,ipython,extra"" `. By I am not sure it would work for windows. Also if installing mpi is slow, we may not want it in all test.; But conditional workflow are tricky so lets see want if it just works first. Yes, the test failures are related to last weekend scipy release, not this code.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1904189729:165,depend,depending,165,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1904189729,1,['depend'],['depending']
Integrability,In this branch I will make tensor contraction work on sparse matrices.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/784:34,contract,contraction,34,https://qutip.org,https://github.com/qutip/qutip/pull/784,1,['contract'],['contraction']
Integrability,"In writing documentation examples for #385 and fixing #386, I ran across a problem with the current implementation of `tensor_contract`. In particular, it assumes that the order of the tensor indices into `Qobj.data` is the same as the order in `Qobj.dims`, but this is true only for `Qobj` instances that do not act on vectorized operators. This problem occurs in two places: first, in the call to `reshape`, and second, in the arguments passed to `_tensor_contract_dense`. Notably, this issue does not affect code that contracts corresponding input/output pairs of rectangular superoperators, as is the case for the partial trace example, so I don't believe that the current examples are wrong. Rather, this will generate invalid results for less conventional examples of tensor contraction.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/388:521,contract,contracts,521,https://qutip.org,https://github.com/qutip/qutip/issues/388,2,['contract'],"['contraction', 'contracts']"
Integrability,Incomplete documentation in Solving Problems with Time-dependent Hamiltonians page,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1538:55,depend,dependent,55,https://qutip.org,https://github.com/qutip/qutip/issues/1538,1,['depend'],['dependent']
Integrability,"Installing `qutip` as an external dependency fails if `cython` is not installed since it's imported without checks in [`setup.py`.](https://github.com/qutip/qutip/blob/0f412cd4bf983a3b497d54406103d0209b553a7a/setup.py#L52-53). From what I can tell, this was an issue before (#426) and was subsequently fixed (#489) but then again broken (https://github.com/qutip/qutip/commit/82e209512927a0d6086de31364004fdb0da8c59a). Sidestepping this would be great since for instance readthedocs to my knowledge doesn't allow running custom commands (like `pip install cython`) before installing dependencies when building a documentation that requires `qutip`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1174:34,depend,dependency,34,https://qutip.org,https://github.com/qutip/qutip/issues/1174,2,['depend'],"['dependencies', 'dependency']"
Integrability,Installing as external dependency fails if Cython is missing,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1174:23,depend,dependency,23,https://qutip.org,https://github.com/qutip/qutip/issues/1174,1,['depend'],['dependency']
Integrability,"Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-69.5.1 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:5382,depend,depends,5382,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,Integrate scheduler into the compiler,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1444:0,Integrat,Integrate,0,https://qutip.org,https://github.com/qutip/qutip/pull/1444,1,['Integrat'],['Integrate']
Integrability,Integrate the pulse scheduler into Processor,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1365:0,Integrat,Integrate,0,https://qutip.org,https://github.com/qutip/qutip/pull/1365,1,['Integrat'],['Integrate']
Integrability,"Interesting... You see, the gate `Gate(RY, targets=[0, 1], controls=None)` is clearly wrong because RY acts only on one qubits. I guess you are probably using a released version of QuTiP (4.5.2/3 maybe) and not the master branch. This error was hidden before in those released version. If you try to install from source (http://qutip.org/docs/latest/installation.html#installing-from-source) (which you have to if you want to contribute anyway), you will probably see this error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-810554275:479,message,message,479,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-810554275,1,['message'],['message']
Integrability,Internal note: `bloch_redfield_solve` quit without raising an error when ode integration fails.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1203283104:77,integrat,integration,77,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1203283104,1,['integrat'],['integration']
Integrability,"Internally all `Qobj` use sparse matrices, no matter what type of data you give them. Whether your density matrix stays sparse during the time evolution depends on the Hamiltonian. In general, especially if there's any environmental interaction, it likely won't, but that's just down to the physics.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1737#issuecomment-990055735:153,depend,depends,153,https://qutip.org,https://github.com/qutip/qutip/issues/1737#issuecomment-990055735,1,['depend'],['depends']
Integrability,"Introduce a common ODE integrator interface for qutip's solver. Presently qutip's solver use `scipy.integratre.ode`'s zvode ODE solver, which support `adams` and `bdf` methods.; These are great method in most case, but not always optimal.; This PR introduce, a common interface to allow other ODE method to be used by solvers.; It also add 2 new scipy ODE solvers: `lsoda` and `dop853`.; `lsoda` detect if the system is stiff and switch between `adams` and `bdf`.; `dop853` is a 8th order Runge-Kutta method. The `Integrator` use `Data` as state and return the state as a pair `(t, state)`.; Often solver's run only compute the expectation values, so there is no need to create a `Qobj`.; Returning the time with the state is for `mcsolve` which have the integration advancing with one internal step and the run loop is cleaner in solver. . I did some benchmark and `adams` method is often the best scipy method.; Sparse system: loglog plot of time in function of system size.; ![image](https://user-images.githubusercontent.com/17770236/131005186-aa51aa86-8ecf-4c03-8ba4-eeddcd65af30.png). Dense time-dependent system.; ![image](https://user-images.githubusercontent.com/17770236/131005465-5c0a9e8e-9ec7-4409-8cda-70aab5129e1f.png). *`vern7`, `vern9`, and `diag` method will be introduced in another PR.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643:23,integrat,integrator,23,https://qutip.org,https://github.com/qutip/qutip/pull/1643,7,"['Integrat', 'depend', 'integrat', 'interface']","['Integrator', 'dependent', 'integration', 'integrator', 'integratre', 'interface']"
Integrability,"Is six used in qutip now? If so then go ahead and add it as a dependency, I'd say. Personally I don't like use six, and prefer to write idiomatic Python 3 code that also work for Python 2, but I don't see any problems with anyone else using it. It is a pretty standard dependency for Python 2 and 3 compatibility needs.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/378#issuecomment-145859036:62,depend,dependency,62,https://qutip.org,https://github.com/qutip/qutip/issues/378#issuecomment-145859036,2,['depend'],['dependency']
Integrability,Issue #905 and #892; Numpy Requirements updated to 1.12 from 1.8 and Optional Dependency for Matplotlib added.; MacOS test is failing as mentioned in #963,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/967:78,Depend,Dependency,78,https://qutip.org,https://github.com/qutip/qutip/pull/967,1,['Depend'],['Dependency']
Integrability,"It appears that qutip assumes that you are using the same time-dependent function(s) when computing the propagator using the rhs_reuse flag. As a result you can get an incorrect answer if one isn't aware of this assumption. Here is a demonstration of the issue:. import qutip as qtp. S = qtp.jmat(1/2.); I = qtp.qeye(2); odeOpts = qtp.Odeoptions(1e-10, 1e-8). H0 = qtp.tensor(S[2], I) + 0.1_qtp.tensor(I, S[2]); Hint = 0.1_sum([qtp.tensor(S[i], S[i]) for i in xrange(3)]); print ""H0:"", H0; print ""Hint:"", Hint. print ""Turning interaction on linearly:""; print qtp.propagator([H0, [Hint, 'w*t']], 5, [], {'w':1/5.}, opt=odeOpts). print ""Turning interaction off linearly with rhs_reuse (bug):""; odeOpts.rhs_reuse = True; print qtp.propagator([H0, [Hint, '1-w*t']], 5, [], {'w':1/5.}, opt=odeOpts). print ""Turning interaction off linearly without rhs_reuse (more like it):""; odeOpts = qtp.Odeoptions(1e-10, 1e-8); odeOpts.rhs_reuse = False; print qtp.propagator([H0, [Hint, '1-w*t']], 5, [], {'w':1/5.}, opt=odeOpts). print ""A solution is to keep the time function the same but change the arguments.""; print ""Turning interaction on linearly 'a+b_t':""; print qtp.propagator([H0, [Hint, 'a+b_t']], 5, [], {'a':0, 'b':1/5.}, opt=odeOpts). odeOpts.rhs_reuse = True; print ""Turning interaction off linearly with rhs_reuse but same 'a+b_t':""; print qtp.propagator([H0, [Hint, 'a+b_t']], 5, [], {'a':1, 'b':-1/5.}, opt=odeOpts)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/18:63,depend,dependent,63,https://qutip.org,https://github.com/qutip/qutip/issues/18,1,['depend'],['dependent']
Integrability,"It appears that the coefficients in your Hamiltonian are large, and the time-dependent part of the Hamiltonian oscillates very rapidly, The result is that the solver does not by default take small enough time steps when evolving the state. You can fix this by specifying a `max_step` to the `Options`:; ```python; max_step = 1. / (100 * gamma); options = Options(max_step=max_step, nsteps=10000); ```; With this max_step the solver correctly evolves the system for me. Closing this for now, but please feel free to continue the discussion here as needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2051#issuecomment-1366076677:77,depend,dependent,77,https://qutip.org,https://github.com/qutip/qutip/issues/2051#issuecomment-1366076677,1,['depend'],['dependent']
Integrability,"It depend how far you are into 4.5. If it is too late for 4.5.0 then master, if not then both.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-580206455:3,depend,depend,3,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-580206455,1,['depend'],['depend']
Integrability,"It depends on how many states you have, and what precision you require. Constructing the whole propagator will always have a lower precision than evolving each state individually, but if you are working with a single qubit system and need to evaluate the evolution of many many different qubits under the same Hamiltonian, then using `propagator` will be faster. Really, getting the fastest speeds depends a lot on your system Hamiltonian. Typically the more you can do analytically, the better. For example, if you plan to use a piecewise-constant Hamiltonian, then you will be most accurate if you consider the individual components of the evolution and multiply them together.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1323#issuecomment-660473253:3,depend,depends,3,https://qutip.org,https://github.com/qutip/qutip/issues/1323#issuecomment-660473253,2,['depend'],['depends']
Integrability,"It depends on the size of the row and column indices. If they cant fit in int32, the matrix must use int64 indices. . As with most things, someone just has to find the time .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-383744977:3,depend,depends,3,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-383744977,1,['depend'],['depends']
Integrability,It is just a way to get at the internal data without going through extra checks. It is specific to the ode solver interface.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/503#issuecomment-242744689:114,interface,interface,114,https://qutip.org,https://github.com/qutip/qutip/issues/503#issuecomment-242744689,1,['interface'],['interface']
Integrability,"It is likely because finding eigenvalues of non Hermitian systems depends; on the condition number. I think redoing the current code to use the; shifted inverse power method or something similar might be the way to go. On Nov 8, 2016 6:01 AM, ""Gleb Fedorov"" notifications@github.com wrote:. > While simulating the dynamics of a driven non-linear oscillator I; > discovered that with small relaxation and weak driving the steady state; > returned by the propagator_steadystate() function is incorrect compared; > with a state obtained from many successive applications of the propagator; > (see plots below):; > ; > [image: alt text]; > https://cloud.githubusercontent.com/assets/3819012/20099571/a213fb02-a5d2-11e6-92cd-481f0a60667d.png; > Populations of the ground and first excited states for two ways of finding; > the steady state.; > ; > The problem is with numpy.linalg.eig() which fails to find a correct; > eigenvector for U. I don't know if this problem is tractable; instead, I; > suggest adding a function to propagator.py which calculates the steady; > state from U and some initial state using the successive application; > approach. If you think this is useful, I would be happy to implement it.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/qutip/qutip/issues/556, or mute the thread; > https://github.com/notifications/unsubscribe-auth/ABMPqeETpQvlQ6B0GUyajpgnHwt12EVPks5q8HKmgaJpZM4KsZfk; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/556#issuecomment-259147457:66,depend,depends,66,https://qutip.org,https://github.com/qutip/qutip/issues/556#issuecomment-259147457,1,['depend'],['depends']
Integrability,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-64520821:138,integrat,integrate,138,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821,9,['integrat'],['integrate']
Integrability,"It is strange. The failure is not dependent on the changes that you made here since the failure is due to some missing header files in Numpy. I am at a loss on what is happening. But your other PRs are going through so I am sure, it is something small. I will try restarting the builds for this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/883#issuecomment-398284232:34,depend,dependent,34,https://qutip.org,https://github.com/qutip/qutip/pull/883#issuecomment-398284232,1,['depend'],['dependent']
Integrability,"It is there because one has to build all the cython modules in the cy folder. Since cython is used for time dependent stuff, we stopped packaging the c code itself and just let the user build it since cython is a required package. > On Mar 4, 2016, at 10:05, Alexander Pitchford notifications@github.com wrote:; > ; > There is a section in qutip/init.py that checks the cython version, then re cythonizes all the pyx. It prints a warning if cython is not found. So after install, during which all the cython modules get built, during the first import of qutip all the building happens again. This seems unnecessary, and is actually an issue if we are making a pre-built package. I have patched out this section in the conda-forge feedstock. All but 7 of the tests are successful.; > ; > Cython is not actually needed at run time for most of QuTiP. Why is it sometimes needed at runtime?; > ; > Should we look remove this section from the init.py, and put some warning in the methods that use cython at runtime?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/448#issuecomment-192387820:108,depend,dependent,108,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192387820,1,['depend'],['dependent']
Integrability,"It looks like we are going to just go with installing dependencies with macports and do a pip install for qutip itself from here on out. This is already the procedure listed in the 3.1 docs. Therefore, I am going to close this issue if there are no other thoughts on the matter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/283#issuecomment-67802461:54,depend,dependencies,54,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-67802461,1,['depend'],['dependencies']
Integrability,"It probably depends on the C++ environment I guess? I just reinstalled qutip `dev.major`, ran the above script and saw; ```; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/O2' with '/O1'; cqobjevo_compiled_coeff_117945645340.cpp; E:\Miniconda3\envs\qutip5\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\pyrex\cqobjevo_compiled_coeff_117945645340.cp39-win_amd64.lib and object C:\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\pyrex\cqobjevo_compiled_coeff_117945645340.cp39-win_amd64.exp; Generating code; Finished generating code; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1190#issuecomment-1171712449:12,depend,depends,12,https://qutip.org,https://github.com/qutip/qutip/issues/1190#issuecomment-1171712449,1,['depend'],['depends']
Integrability,"It seems like this routine is geared toward a specific problem, rather than a general input. Regardless, I think a notebook explaining this method is required, including better examples on the usage. This can be added to the documentation once it is converted to IPython notebooks. A few things I noticed are given below:; - The output is not a list, but a Result class object.; - Why is it not possible to directly calculate expectation values other than the coupling term?; - Why are the default input values what they are?; - The print statement at the end should be optional depending on the setting of the debugger.; - The call to Odeoptions in mesolve needs to be user accessible.; - tlist should not be the last input argument and should probably not be a kwarg.; - The call to eigenstates should also have an optional argument to call the sparse eigenstates solver if needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/341#issuecomment-103712771:19,rout,routine,19,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-103712771,2,"['depend', 'rout']","['depending', 'routine']"
Integrability,"It seems that over the last year, nearly all packages in the scientific Python ecosystem have started to provide wheels. This is great news, as it make installation on platforms that don't have the necessary compilers installed very easy, and it's also extremely fast. So far, `conda` has been the only realistic option to install qutip outside of Linux development workstation, and it's not without caveats (https://github.com/qutip/qutip/issues/674). Conda has also been getting extremely slow; (https://github.com/conda/conda/issues/7239), which causes problem with continuous integration services or readthedocs (together with the fact that setting up conda on these services isn't entirely trivial, and, for readthedocs, buggy: https://github.com/rtfd/readthedocs.org/issues/3925, https://github.com/rtfd/readthedocs.org/issues/3829). If qutip were to provide wheels, this might alleviate all of these problems. Depending on how complicated the process is compared compared to a conda package, it might then even be ok to drop conda support.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/933:580,integrat,integration,580,https://qutip.org,https://github.com/qutip/qutip/issues/933,2,"['Depend', 'integrat']","['Depending', 'integration']"
Integrability,"It sounds great, thank you @wrzadkow. I am going to look into it. . * It would be great to add some details about it in the Users Guide, so that they show up in the [States](http://qutip.org/docs/latest/guide/guide-states.html#density-matrices) part. To do so you would need to make an .rst file in [qutip-doc](https://github.com/qutip/qutip-doc). . What actually would be much needed in a broader view is a (short) Metric subsection in the Users Guide, showing which equations are implemented in LaTeX. This is beyond this PR but your expertise might be very helpful. . Also, recently some advanced functionalities relative to metrics were developed in [Qptomographer](https://qptomographer.readthedocs.io/) @phfaist. This library optimally implements the diamond norm and uses QuTiP's classes https://qptomographer.readthedocs.io/en/latest/figures_of_merit/. It would be great to see if this can be used to address an open issue of non-maintained dependencies that @ajgpitch has been assessing, issue #874.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/998#issuecomment-494625047:949,depend,dependencies,949,https://qutip.org,https://github.com/qutip/qutip/pull/998#issuecomment-494625047,1,['depend'],['dependencies']
Integrability,"It will be useful for solver feedback.; In v4 we can define Hamiltonian to depend on the state: `H(t, args, psi/rho)`.; We don't have it working in v5, but we will need to restore it before release.; This `_prepare` catch the time and state at the start of `matmul` and `expect` and update the arguments according to feedback.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2016#issuecomment-1302681575:75,depend,depend,75,https://qutip.org,https://github.com/qutip/qutip/pull/2016#issuecomment-1302681575,1,['depend'],['depend']
Integrability,"It would be good to include the zenodo bib reference that relates to the specific version that is being used. It would be good if users included this zenodo reference, as this pinpoints a version, which could be important for people trying to repeat the results. In the same vein it could be a good idea to automatically output a file into the cwd that contains the `qutip.about()` output. We could include a citation reminder in the `qutip.about()` and also a message that explains that bib files have also be produced for their convenience. In order to placate those who may object to all of this, we should provide some setting that allows users to turn off this bib and about() output. We should mention this setting in the `about()`. We also need to handle file errors that may occur.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/752#issuecomment-330591675:461,message,message,461,https://qutip.org,https://github.com/qutip/qutip/pull/752#issuecomment-330591675,1,['message'],['message']
Integrability,"It would be much better to thoroughly code review this pull request before merging rather than merging sooner and make additional PRs later. You can keep working on the PR while getting feedback on it without merging now. Things like model names and API is better to sort out once and for all before the first merge. . With this PR, I think the ossolve modeule name is not very appropriate. Most of qutip is related to open system solvers. I think rcsolve (reaction coordinate solver) is a more accurate name for this module. Also, depending on how much code you have in mind to include in this module, it might be more appropriate to put all of it in a file called rcsolve rather than creating a new module directory like you propose here. Also, don't use underscores in module names (rc_model -> rcmodel or better yet rcsolve).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/341#issuecomment-102566203:532,depend,depending,532,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-102566203,1,['depend'],['depending']
Integrability,"It's interesting to see how my style of writing tests changes and matures. It's being particularly influenced at the moment, because on Qiskit we use a fairly thin wrapper around raw `unittest`, rather than `pytest`, so I'm being exposed to writing in other styles as well.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1614#issuecomment-882516763:164,wrap,wrapper,164,https://qutip.org,https://github.com/qutip/qutip/pull/1614#issuecomment-882516763,1,['wrap'],['wrapper']
Integrability,"It's really too early to know, and I know little of the structure of QobjEvo.; From the little i know you keep a sum of standard operators with a time dependent prefactor, right?. We will probably go for something similar. Since we are storing the single operators in an hamiltonian (like \sigma_x*\sigma_y) and their domains, we can easily insert a time dependence in front of every operator for a negligible cost.; However this representation is very different from the dense/sparse representation in QuTiP, as we need to support hilbert spaces with order of 100s spins and have a very different usage of the matrix elements during the computations.; ; But again, this is very premature... I doubt we'll get to time-dependent objects before an year or so. ; Higher on our priority is representing circuits.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-828730210:151,depend,dependent,151,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-828730210,3,['depend'],"['dependence', 'dependent']"
Integrability,"JpegImagePlugin stops at the end of a truncated file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a>; [radarhere]</p>; </li>; <li>; <p>Fixed ImagePath.Path array handling. CVE-2022-22815, CVE-2022-22816 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a>; [radarhere]</p>; </li>; <li>; <p>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a>; [radarhere]</p>; </li>; <li>; <p>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a>; [radarhere]</p>; </li>; <li>; <p>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a>; [radarhere]</p>; </li>; <li>; <p>Fixed palette index for zeroed color in FASTOCTREE quantize <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5869"">#5869</a>; [radarhere]</p>; </li>; <li>; <p>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a>; [radarhere]</p>; </li>; <li>; <p>Pass SAMPLEFORMAT to libtiff <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5848"">#5848</a>; [radarhere]</p>; </li>; <li>; <p>Added rounding when converting P and PA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5824"">#5824</a>; [radarhere]</p>; </li>; <li>; <p>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a>; [radarhere]</p>; </li>; <li>; <p>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a>; [hugovk]</p>; </li>; <li>; <p>Fixed freeing pointer in ImageDraw.Out",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:11580,depend,dependabot,11580,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"Just adding my two cents. From my experience, a lot of our users don't know how to efficiently locate the error and find the solution. Simply posting a HOW-TO guide along with the release notes might not be sufficient, because the users may not be aware of its existence. It would help I think if we could; - raise an error or warning message that locates the error as clear as possible and; - if feasible, leave a link in the error/warning message directing the users to the HOW-TO guide.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1949#issuecomment-1179740053:335,message,message,335,https://qutip.org,https://github.com/qutip/qutip/issues/1949#issuecomment-1179740053,2,['message'],['message']
Integrability,"Just another small issue, I found that if I use UnderDampedEnvironment.spectral_density() with brmesolve(), it fails in numpy 2.1.1 unless I wrap the SD function in another function. Strangely works without needing to wrap it in numpy 1.26.4. Seems to some difference in the way zero-dimensional arrays are treated, but not super sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2534#issuecomment-2372823795:141,wrap,wrap,141,https://qutip.org,https://github.com/qutip/qutip/pull/2534#issuecomment-2372823795,2,['wrap'],['wrap']
Integrability,Krylov as an integrator,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1986:13,integrat,integrator,13,https://qutip.org,https://github.com/qutip/qutip/pull/1986,1,['integrat'],['integrator']
Integrability,"Last review re-request, hopefully. I think everything's correct and ready now. 1. I had forgotten to build the sdist here, so it would have been missing from the pip package. That's fixed now.; 2. It's harder than you might expect to quickly fail all jobs in a GitHub Actions workflow right now. It seems that they expect you to try and continue for as long as possible for jobs on different runners, so I had to make everything depend on the confirmation verification to get the fail-fast behaviour.; 3. Hopefully neatened up the language we've been talking about.; 4. Removed installation of unnecessary VC++ tools for Python 2.7 on Windows.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465#issuecomment-807184002:429,depend,depend,429,https://qutip.org,https://github.com/qutip/qutip/pull/1465#issuecomment-807184002,1,['depend'],['depend']
Integrability,"Last week we added numpy 2 support but did not update the requirements in `setup.cfg`. This update dependency to build using numpy 2 instead of oldest-supported-numpy.; I also increased the minimum requirements for matplotlib and scipy to version tested. I added more test using numpy 2, only one tests build and run using numpy 1.X.; I added more windows / mac tests. Using these os for testing numpy versions and no cython.; `cvxopt` (`dnorm`) does not run with numpy 2 yet, so it's only tested with older numpy version. Fix sqrtm needing copy. This mean that the test intended to run with numpy 2 previouly did not...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2457:99,depend,dependency,99,https://qutip.org,https://github.com/qutip/qutip/pull/2457,1,['depend'],['dependency']
Integrability,Leaving the full error message here:. ```; anaconda3/lib/gcc/x86_64-apple-darwin11.4.2/4.8.5/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030#issuecomment-505449699:23,message,message,23,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-505449699,1,['message'],['message']
Integrability,"Let me look at this tonight. I have uploaded the spline interp method, and just need to integrate it with the solvers. I have done something similar elsewhere so it should be straightforward (provided I find the time). The nonlinear list is also easy to incorporate, for SciPy 0.18+, so I think that there interp methods will replace the array based format in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/520#issuecomment-245346539:88,integrat,integrate,88,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-245346539,1,['integrat'],['integrate']
Integrability,"List format time dependant Hamiltonian:; ```; def f(t, args):; return np.sin(args['w']*t). H = [H0, [H1, f]]; ```; would give the same Hamiltonian and work with `mcsolve`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1368#issuecomment-704945305:17,depend,dependant,17,https://qutip.org,https://github.com/qutip/qutip/issues/1368#issuecomment-704945305,1,['depend'],['dependant']
Integrability,"Local multiplication routine, targeted at Dense Qobj",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405:21,rout,routine,21,https://qutip.org,https://github.com/qutip/qutip/pull/1405,1,['rout'],['routine']
Integrability,"Looking into the function `_mc_alg_evolve` in the source code of mcsolve, I have two questions in mind:; 1. Why do you divide the interval into each `tlist[k]` (`while ODE.t < tlist[k]:`) and run the ode internal step `ODE.integrate(tlist[k], step=1)` one at a time and evaluate `if norm2_psi <= rand_vals[0]:`?; Alternatively, can I run the ode `ODE.integrate(tlist, step=n)` without collapse until `norm2_psi <= rand_vals[0]`? It seems to be faster if `ODE.integrate(tlist, step=n)` can store the state. In this way I ignore `tlist[k]` totally.; 2. After `if norm2_psi <= rand_vals[0]:`, you find the collapse time to within specified tolerance. Can I just take the collapse time as the time immediately after `ODE.integrate(tlist[k], step=1)`? Since the step in the `ODE` should be small enough, would it make a lot difference by ignoring the steps of finding the collapse time to within specified tolerance?. Thank you very much.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/503:223,integrat,integrate,223,https://qutip.org,https://github.com/qutip/qutip/issues/503,4,['integrat'],['integrate']
Integrability,"Looks cool, you can make the PR against the master branch. We do not have a; dev branch. On Mon, 22 Jul 2019 at 19:14, Michael Goerz <notifications@github.com>; wrote:. > Sorry.. got a little distracted, and wanted to check the contributing; > guidelines on what branch to make the pull request against. Currently it’s; > master. Is that ok? If yes, I’ll undraft it.; >; > Draft PRs are pretty new, and a very nice way to kick off the Continuous; > Integration. Like in this case, I wanted to check if any of the tests; > involve that message. As they don’t, this actually is ready to go.; >; > —; > You are receiving this because you were mentioned.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/1049?email_source=notifications&email_token=ABVFIBCN7YWP77NBJVTZA2LQAXTJDA5CNFSM4IEC7VHKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2QRIRA#issuecomment-513872964>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABVFIBHWIDKPIYAU6NMZXILQAXTJDANCNFSM4IEC7VHA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1049#issuecomment-513873973:449,Integrat,Integration,449,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513873973,2,"['Integrat', 'message']","['Integration', 'message']"
Integrability,"Looks interesting! Possibly a bit out of scope for qutip? In principle you could put this progress bar in a separate module and still use it with qutip (as long as it supports qutip's basic progressbar interface). Then it could also be used in non-qutip related projects. . If its to be included in qutip, I think it should not be added to qutip/ui/progressbar, but as an module of its own that would not be loaded by default, so a user would have to load it explicitly when using it, like the way the current ipynbtools and picloud modules work. . Perhaps it would make sense to move these ""extras"" or ""extensions"" modules to a subdirectory of their own, say ""qutip/extensions"" or ""qutip/ext"" to keep the import paths manageable. In that case I think that qutip.picloud should be moved to that directory as well. I think this would keep these extensions reasonably isolated for the core qutip modules, which I think we should prioritize if we are to allow these kind of peripheral modules to increase in number in the future. @nonhermitian any opinions on this?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/255#issuecomment-63268318:202,interface,interface,202,https://qutip.org,https://github.com/qutip/qutip/pull/255#issuecomment-63268318,1,['interface'],['interface']
Integrability,"Looks like it's resolved now (unless documentation should be updated on how to use the --with-openmp option with the new build method. I'm not sure if end users should now be using wheels builds). Both `--config-setting=""--global-option=--with-openmp""` and `--config-setting=""--build-option=--with-openmp""` achieve a wheels (PEP517) build and `python -c ""import qutip; qutip.about()""` reports `OPENMP Installed: True` for both python3.10 and python 3.11. `--global-option` gets a warning message:; ```; $ python3.10 -m build --skip-dependency-check --no-isolation --wheel --outdir /projects/misc/build/qutip/.pybuild/cpython3_3.10_qutip --config-setting=""--global-option=--with-openmp""; * Building wheel...; /usr/lib/python3/dist-packages/setuptools/build_meta.py:307: SetuptoolsDeprecationWarning: ; The arguments ['--with-openmp'] were given via `--global-option`.; Please use `--build-option` instead,; `--global-option` is reserved to flags like `--verbose` or `--quiet`.; ; warnings.warn(msg, SetuptoolsDeprecationWarning); ...; ```; So it's saying we should be using `--build-option` not `--global-option`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875#issuecomment-1368866726:488,message,message,488,https://qutip.org,https://github.com/qutip/qutip/issues/1875#issuecomment-1368866726,2,"['depend', 'message']","['dependency-check', 'message']"
Integrability,"Looks like sesolve with list func time-dependence and rhs_with_state option will fail.; `psi_list_td` and `psi_list_td_with_state` are exactly the same. However, looking at def of `constant_func`, in the latter, `H_td`, should take a third parameter, assumedly `psi`. Maybe no-one ever tried this. Found this by accident when doing something else. Just raised here as a reminder to investigate more some other time. Probably an easy fix.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/824:39,depend,dependence,39,https://qutip.org,https://github.com/qutip/qutip/issues/824,1,['depend'],['dependence']
Integrability,"MESolver`, `SSESolver`. The main change is that the options used to be passed as keywords (`**kwargs`) and are now passed as an options dict.; - `m_ops` and `dW_factors` are properties of the classes, but not available to overwrite through the function interface. ; - The multiples end condition (`target_tol`, `timeout`) are added.; - The `solver` keyword is now `method` options, as it is in other solver.; - The method that was referring the homodyne or heterodyne detection is now the `heterodyne` keyword. ie before `method=""heterodyne""` now `heterodyne=True`.; - The default integration method is now `rouchon`, instead of `taylor1.5`. ie the method coming from a physic paper and not a mathematics textbook. . - The stochastic integration methods have been spitted in smaller chunk instead of the huge classes in _stochastic.pyx. I kept most methods, only skipping the taylor order 2.0 method. The python interface is kept very similar to the `Integrator` as `SIntegrator`, the main difference being that `set_state` and `get_state` use an extra random number generator with the time and state. The integration methods are usually 5%~10% slower than they where for medium size problems (shape ~100). Most method are computed the same way as before, but the rouchon method no longer use super operator, but keep the density matrix as a matrix and not an oper-ket. - The derivative computation for used by the integration method has also been split into multiple functions and made only available for `smesolve`. For there methods to be valid, the each diffusion contribution must commute. For `smesolve`, this means that each `sc_ops` must commute, as documented. For `ssesolve`, each `sc_ops` must not only commute, but also commute with other `sc_ops`'s adjoint, this last part being missing from v4's documentation. It also meant that the sc_ops needed to commute with it's own adjoint when using heterodyne detection... - `ssepdpsolve`, `smepdpsolve`, `photocurrent_mesolve`, `photocurrent_s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131:1089,interface,interface,1089,https://qutip.org,https://github.com/qutip/qutip/pull/2131,2,"['Integrat', 'interface']","['Integrator', 'interface']"
Integrability,Managing args in time dependent system.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1136:22,depend,dependent,22,https://qutip.org,https://github.com/qutip/qutip/issues/1136,1,['depend'],['dependent']
Integrability,Manual integration in floquet.floquet_master_equation_rates fail sometimes,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/767:7,integrat,integration,7,https://qutip.org,https://github.com/qutip/qutip/issues/767,1,['integrat'],['integration']
Integrability,Many of the demo examples doesn't work with current master. The error messages are for example. ```; NameError: global name 'mcsolve' is not defined; ```. or. ```; NameError: global name 'mesolve' is not defined; ```. Seen on Linux and OS X.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/19:70,message,messages,70,https://qutip.org,https://github.com/qutip/qutip/issues/19,1,['message'],['messages']
Integrability,"Many thanks for your kind reply. Unfortunately, I can not do that, because there is cases in my hamiltonian in which that matrix is not diagonal, I am just trying from the simplest case, actually my goal is to have a term ""S_vector * D_matrix *S_vector"" . Could you please explain how I am using Qobj incorrectly and how to used right. The error message states that since S_vector is a Qobj I can not multiply it with the D_matrix. If I put Qobj(D_matrix) then I can not multiply them because all terms are Qobj.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1848#issuecomment-1093795266:346,message,message,346,https://qutip.org,https://github.com/qutip/qutip/issues/1848#issuecomment-1093795266,1,['message'],['message']
Integrability,"Matrix exponentiation is a costly operation. See [1][Nineteen Dubious Ways to Compute the Exponential of a Matrix, Twenty-Five Years Later∗](https://www.cs.cornell.edu/cv/ResearchPDF/19ways%2B.pdf). In a quantum optics, the displacement operator is one of the most basic. It is used to create coherent states from vacuum and forms one of the two gates for universal control of a cavity (Displacement + SNAP gates) [2] [Efficient cavity control with SNAP gates](https://arxiv.org/abs/2004.14256). When we want to write an optimisation routine that finds best displacement parameters in a routine similar to the paper above [2], it would be nice if we can compute the operator faster without doing matrix exponentiation as qutip does now:; https://github.com/qutip/qutip/blob/master/qutip/operators.py#L732. I have some notes from a colleague who calculated an analytical formula to compute the matrix elements of the displacement operator without having to do matrix exponentiation [3]: ; [Displacement_operator.pdf](https://github.com/qutip/qutip/files/4791455/Displacement_operator.pdf). A PR to implement this in QuTiP would be great. We could first write a `_displace_analytical` function that calculates the displacement matrix using the [Scipy Laguerre polynomial](https://docs.scipy.org/doc/scipy/reference/generated/scipy.special.genlaguerre.html) and have it as an option as `displace(N, alpha, offset, method=`analytical` )`. Could it also come in handy for optimal control? @ajgpitch . In the paper above [2], the authors use gradient descent to fine tune the parameters of a gate sequence containing displacement gates and SNAP gates to target some Bosonic quantum state. We wish to do similar things for @araza6 s GSoC project.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1293:534,rout,routine,534,https://qutip.org,https://github.com/qutip/qutip/issues/1293,2,['rout'],['routine']
Integrability,Maybe `Qobjevo` can be of help. See this [notebook at this point](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/qobjevo.ipynb#String-time-dependence) by @ericgig and @jakelishman,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1308#issuecomment-654285852:171,depend,dependence,171,https://qutip.org,https://github.com/qutip/qutip/issues/1308#issuecomment-654285852,1,['depend'],['dependence']
Integrability,Maybe a wrapper (like we have for spmv) can replace every sp.kron in qutip,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/530#issuecomment-243506780:8,wrap,wrapper,8,https://qutip.org,https://github.com/qutip/qutip/pull/530#issuecomment-243506780,1,['wrap'],['wrapper']
Integrability,"Measuring the statistics of electron transport though nanostructures has been found to be a powerful experimental tool to gather information about such structures. The functions in countstat.py return the first two cumulants of a transport process, which are associated with measuring the current and shot noise, respectively. However at the moment they are a little buggy, and the current noise function fails sometimes, depending on the dimensionality of the system. As well as fixing this issue, there a couple of enhancements that can be done:. 1) Making the current noise function frequency dependant. This just requires adding a list of frequencies to return, and calculating the noise power for each given frequency ( at the moment it returns the zero frequency current noise). 2) Adding higher-order current cumulants. This is a straightforward generalization of the current noise function, though for very high orders the expansion of a given cumulant in terms of pseudo-inverse and current operators can be a little complicated. An iterative method for generating these can be found in C. Flindt et al., Phys. Rev. Lett. 100, 150601 (2008). and C. Flindt, T. Novotny, A. Braggio, and A.-P. Jauho, Phys. Rev. B 82, 155407 (2010). 3) Calculate the large-deviation function of the current. Such functions return the probability of observing deviations from the average transport behaviour, and have been found to give insight on a range of physical phenomena, including bistability and criticality (and, more practically, life insurance!).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/442:422,depend,depending,422,https://qutip.org,https://github.com/qutip/qutip/issues/442,2,['depend'],"['dependant', 'depending']"
Integrability,"Mine will be done in a week or so, depending on time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/525#issuecomment-290628674:35,depend,depending,35,https://qutip.org,https://github.com/qutip/qutip/pull/525#issuecomment-290628674,1,['depend'],['depending']
Integrability,Modified 4op 2t correlator for hamiltonians with time dependence; works with cython or function td format. Added relevant test functions.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/206:54,depend,dependence,54,https://qutip.org,https://github.com/qutip/qutip/pull/206,1,['depend'],['dependence']
Integrability,"Most of it is already in qutip or in development:; - We already have a progress bar.; - We have feedback to support solvers where parameters are changed depending on the current state. Those should not updated at each time-step, but included in the rhs. Otherwise, it will increase runtime and often the numerical error. We mostly use multistep method (Adams and BDF) which are particularly sensible to that.; - In my rework of `mcsolve`, I'm including the capacity to stop after a certain time, (already merged) and after the error bar gets under a certain tolerance. I have not though an equivalent for `me/sesolve` would be needed but it would be simple enough to add. We could have function that takes the expect value and tell the solver to stop or continue. ; - I was thinking of adding the ability to step through the evolution (draft in #1455):; ```; solver = MeSolver(H, c_ops, options=opt); solver.start(t0, rho0); for t in [t1,t2, ...]:; rho_t = solver.step(t, args=new_args); ```; Which would work like a `yield`:; ```; solver = MeSolver(H, c_ops, options=opt); for rho_t in solver.yield_run(rho0, tlist):; if needed:; solver.update_parameter(args=new_args); ```; I prefer using steps since you don't have do define `tlist` first, you could use it in a `while True` loop or interactively.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-858740451:153,depend,depending,153,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-858740451,1,['depend'],['depending']
Integrability,"Mostly by replacing explicit loops with vectorized numpy expressions. For a simple test Hamiltonian with a single N-level bosonic operator, it is faster by a factor of ~40 for N=100 (Hamiltonian 100x100), i.e., it takes 12 seconds instead of 460 seconds. The speedup improves about linearly with N for this system. I checked for some test systems that the results are the same as before. The only difference in interface is that c_ops is [] by default, and c_ops=None is not accepted anymore. This seems to me more in line with the rest of qutip, but could be changed back trivially.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/336:411,interface,interface,411,https://qutip.org,https://github.com/qutip/qutip/pull/336,1,['interface'],['interface']
Integrability,"Moved the loops to cython, and reworked the indices selection. Now 2x - 100x+ faster, depending on size. This pull also switches the fast_csr_matrix multiplication to our own version. This eliminates the need to call A.prune() after the SciPy matmat call. We also handle the nnz=0 case better. Still need to do:; - ptrace unit tests; - move old ptrace to a 'legacy' folder for testing against.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/634:86,depend,depending,86,https://qutip.org,https://github.com/qutip/qutip/pull/634,1,['depend'],['depending']
Integrability,"My current understanding is that if NumPy is installed but not Cython, then when `egg-info` is called, NumPy distutils will happily follow `add_subpackage` to pull in `qutip/cy/setup.py`, then choke on the missing Cython dependency. On the other hand, if both are missing, the new fallbacks introduced in this PR will be tripped, such that the `add_subpackage` call will not happen, and `qutip/cy/setup.py` will not get called. I'll readily admit that NumPy but not Cython is an edge case, but it's one that we can probably deal with by trying to import Cython at the top and letting the `ImportError` branch us onto the fallback path. Thoughts?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/489#issuecomment-225778916:221,depend,dependency,221,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-225778916,1,['depend'],['dependency']
Integrability,"My guess is it is a side effect of using the step function time-dependence. Instead, try a tanh, or other continuous and differentiable approximation, and see if that works.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771#issuecomment-338078907:64,depend,dependence,64,https://qutip.org,https://github.com/qutip/qutip/issues/771#issuecomment-338078907,1,['depend'],['dependence']
Integrability,My problem may be more serious. I cannot execute the demo of time-dependent in LZ transition. I guess it is the problem of OS. My platform is MAC OS 10.14 and GCC is 4.2.1. I don't have MS VS 2015. May the environment is not satisfied.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1038#issuecomment-536151814:66,depend,dependent,66,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-536151814,1,['depend'],['dependent']
Integrability,"Nevermind, sorry I was being stupid. Changed the integrator tolerance and it work :/.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1492#issuecomment-815315471:49,integrat,integrator,49,https://qutip.org,https://github.com/qutip/qutip/issues/1492#issuecomment-815315471,1,['integrat'],['integrator']
Integrability,New Integrator methods,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1644:4,Integrat,Integrator,4,https://qutip.org,https://github.com/qutip/qutip/pull/1644,1,['Integrat'],['Integrator']
Integrability,"No problem. I would suggest that at merge time, this PR is _not_ squashed but is simply rebased onto or merged into master. A merge would ensure that the PR number is included in the git history if that's desired, but all the relevant explanations are also already in the commit messages. It's a very large change, there's a lot of exposition in the commit messages, and each commit is a modular unit of work already, while the PR title won't actually be true (since not all of the tests are converted). I know that the commit messages are all combined on github, but it's much more difficult to search for the small bit you need out of several pages of writing, rather than having only the relevant parts presented to you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-603938885:279,message,messages,279,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-603938885,3,['message'],['messages']
Integrability,"Nope, my point is that we should have a full-blown time dependent brsolver before we have approximate versions. If anything just for comparison, and if someone wants to do the whole sim. I can write it, but time is the issue. I am trying to have a bunch of these things done before I go meet everyone in Japan to work on the PRX paper and what not.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/525#issuecomment-249343664:56,depend,dependent,56,https://qutip.org,https://github.com/qutip/qutip/pull/525#issuecomment-249343664,1,['depend'],['dependent']
Integrability,"Not in list format, but some solvers (`sesolve`, `mesolve` ) accept time-dependant Hamiltonian as a function returning a `Qobj`:; ```; H = lambda t, args: qutip.Qobj(my_array(t)); qutip.mesolve(H, ...); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1801#issuecomment-1034893883:73,depend,dependant,73,https://qutip.org,https://github.com/qutip/qutip/issues/1801#issuecomment-1034893883,1,['depend'],['dependant']
Integrability,"Not in that way. `0` is the right value when the system is constant or the time dependence is always active (`sin(w*t)`, `exp(-t)`, etc.) In these case, it is best to let the solver decide the right step length. Also pulse shorter that 5% of `tlist` could still be missed. Lastly. in some cases, the `tlist` may not be available to the solver. We certainly need to be better documentation of this. Maybe a notebook showing this trap could be useful. But without being able to look into the coefficient, I don't see an easy fix.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1945#issuecomment-1168820859:80,depend,dependence,80,https://qutip.org,https://github.com/qutip/qutip/issues/1945#issuecomment-1168820859,1,['depend'],['dependence']
Integrability,"Not sure if I can answer your specific question but I have used QUTIP GRAPE before. I would first suggest opening a pull request or linking to your fork, so it's easier to compare your modifications to the original code.; I have briefly looked at your code and I would suggest dropping numba as qutip doesn't currently have numba as a dependency. I am confused about why you choose the cnot notebook as your example? There is an example of quantum optimal control using open quantum systems, control-pulseoptim-Lindbladian.ipynb .; Nonetheless, I believe grape.py is definitely not the place to place your additional support for open quantum systems. Grape is an optimization method, you should be looking extending support for open quantum systems in the pulseoptim class.; If you are interested you can also take a look at the quantum optimal control tool I built, QUTIP's quantum optimal control didn't satisfy my needs. ; https://github.com/lifeishard/PADQOC",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1031#issuecomment-541810845:335,depend,dependency,335,https://qutip.org,https://github.com/qutip/qutip/issues/1031#issuecomment-541810845,1,['depend'],['dependency']
Integrability,"Not sure if it's that simple.; ```; --config-setting=""--global-option=--with-openmp""; ```; actually gives me a build error:; ```shell; $ python3.10 -m build --skip-dependency-check --no-isolation --wheel --config-setting=""--global-option=--with-openmp""; * Building wheel...; Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 363, in <module>; main(); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 345, in main; json_out['return_val'] = hook(**hook_input['kwargs']); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 261, in build_wheel; return _build_backend().build_wheel(wheel_directory, config_settings,; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 230, in build_wheel; return self._build_with_temp_dir(['bdist_wheel'], '.whl',; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 211, in _build_with_temp_dir; sys.argv = (sys.argv[:1] + setup_command +; TypeError: can only concatenate list (not ""str"") to list. ERROR Backend subproccess exited when trying to invoke build_wheel; ```. The other method; ```; --config-setting=""--build-option=--with-openmp""; ```; appears to work in the sense that it builds successfully. But after installing the package it reports that openmp is still missing; ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0; Numpy Version: 1.21.5;",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875#issuecomment-1219841152:164,depend,dependency-check,164,https://qutip.org,https://github.com/qutip/qutip/issues/1875#issuecomment-1219841152,1,['depend'],['dependency-check']
Integrability,"Not sure what is causing conda-forge/qutip-feedstock#18, but switching to a vector in sort may help as there was no issues with the previous 4.0.2 build that has a similar routine in the COO -> CSR inplace conversion function. Note also that building with VS 2015, mingpy, clang-3.9 from homebrew, and clang from Apple itself does not raise the error mentioned in conda-forge/qutip-feedstock#18.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/660:172,rout,routine,172,https://qutip.org,https://github.com/qutip/qutip/pull/660,1,['rout'],['routine']
Integrability,Note that int_argsort uses the c++ sort routine that does not guarantee that the array remains unchanged if sorting is not necessary. Thus the bucky test had to be removed as the returned perm array was compiler specific.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/654#issuecomment-285196142:40,rout,routine,40,https://qutip.org,https://github.com/qutip/qutip/pull/654#issuecomment-285196142,1,['rout'],['routine']
Integrability,"Note: in theory you can install QuTiP from the test PyPI server right now by doing; ```; pip install -i https://test.pypi.org/simple qutip-jakelishman; ```; (that's just the name - you still do `import qutip`) but since it's on the ""wrong"" server, you first have to manually install `numpy` and `scipy`. When it's released properly on PyPI it'll handle the dependencies correctly - this is only an artifact of being on the testing server. Running that command will install a binary version with no compilation, and should work on any (reasonable) Linux machine, Mac (possibly not M1 chips) and Windows. It's possible you may get an error about `ndarray size changed ... this may indicate binary incompatibility` - if so, either force `numpy` up to the new 1.20 or down to 1.19 (whichever one you don't have). This was a breaking change in numpy 1.20. Per my reading of the release notes, it won't be an issue provided in the future we always build against `numpy>=1.20` (even when using lower `numpy` at runtime) because the new version updates a certain C-API macro to take into account the possibility of runtime variability. I have pushed an additional change to the build requirements to ensure this always happens. This has another knock-on effect: numpy 1.20 only supports Python 3.7+ (released June 2017). Currently, officially QuTiP supports Python 3.6, but I think it's reasonable to follow numpy's footsteps and **drop support for python 3.6 from qutip 5.0**. It's offset by gaining support for 3.9. (Apologies for all the force-pushing - whenever I want to re-run a test release on my own branch I have to temporarily add an extra commit to swap to the testing server, then force-push a rewind of this PR's branch.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-770459519:357,depend,dependencies,357,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-770459519,1,['depend'],['dependencies']
Integrability,"Note: the reported changes (other than the deletion of the licence from each source file) are all whitespace-only, or simply a reflow of the hard-wrapped text in `LICENSE.txt`. I didn't change the licence at all, other than the holder. I've also checked this with the same tool that GitHub uses, and it will definitely recognise the licence correctly after this. The whitespace-only changes in other files weren't actually 100% intended, but it was a function of how I did the licence detection - I normalised the whitespace at the ends of lines first. Looking through, I guess I only did that when changing the `doc` folder, not the main source code (I had to handle those two cases separately).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1579#issuecomment-863997684:146,wrap,wrapped,146,https://qutip.org,https://github.com/qutip/qutip/pull/1579#issuecomment-863997684,1,['wrap'],['wrapped']
Integrability,Nothing at all. IPython also crushes. None of them leaves any message... Let me try to make some breakpoints to locate it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605322812:62,message,message,62,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605322812,1,['message'],['message']
Integrability,"Notionally fixes #1179, #1185. Converts the `os.system` calls to `subprocess.run` because they're now the recommended way of doing things. I check for existence of the dependencies at import time, and emit a warning (`ImportWarning`) if they don't exist. This is ignored by the typical warning filters, so it won't actually show up for most users. If a dependency doesn't exist, then we don't define the relevant methods on the `QubitCircuit` class to avoid IPython introspecting the class object and thinking that it can make a PNG/SVG. This may not be the best way of doing things, but in this delocalised setting I think it's easier to talk/discuss around a problem with an example in front of us. In particular, I think raising `NotImplementedError` on failing to find `pdflatex` might not be the right call: if it doesn't exist, then the PNG and SVG methods of `QubitCircuit` are currently still created, and then IPython would try to call them and produce an error that isn't the fault of the user. Also, maybe there's a nicer way to make sure that the user sees the ""not found"" warnings the first time that they do something which involves a conversion? At the moment, the class just doesn't get the methods defined.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194:168,depend,dependencies,168,https://qutip.org,https://github.com/qutip/qutip/pull/1194,2,['depend'],"['dependencies', 'dependency']"
Integrability,ODE Integration Error in Tutorial Code,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:4,Integrat,Integration,4,https://qutip.org,https://github.com/qutip/qutip/issues/1896,1,['Integrat'],['Integration']
Integrability,"OK, I see. If you are refactoring the parallelization of the mcsolve (which is currently tightly integrated in the mc code and quite messy) I would strongly recommend and lobby for using the new parallel_map API, and do away with all multiprocessing code in the mcsolve module and not using the callback function. I think this could make the mcsolve module vastly more readable and easier to maintain.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-65020826:97,integrat,integrated,97,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65020826,1,['integrat'],['integrated']
Integrability,"OK, I think I understand. But it would be great with more info on this in the notebook as you suggest. Looking forward to that. Yes, to keep the tutorial notebook clean I think it would a good idea to add the plotting functions to qutip.visualization, if they are reasonably general purpose. Also, we have a version of the hinton graph i qutip.visualization, so if you can use it (or fix it up so that you can use it) you can remove the dependency on mpl_tools in the notebook, if you wish.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/268#issuecomment-65413267:437,depend,dependency,437,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65413267,1,['depend'],['dependency']
Integrability,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085#issuecomment-1426693519:204,depend,dependabot,204,https://qutip.org,https://github.com/qutip/qutip/pull/2085#issuecomment-1426693519,2,['depend'],['dependabot']
Integrability,"Oh man, yeah, that's embarrassing. Yeah, that's exactly what I _meant_ to put. I dunno how I screwed up the patch that badly!. I'll rebase these commits onto `master` and squash them into one or two nice modular commits. I think a little bit of the development here is worth preserving in the commit history for if someone looks at it in the future (there's no guarantee that this PR discussion will _always_ be up, but commit messages are forever). I'll force-push to this branch, so you'll have to force-pull a copy (or just delete your copy of this branch). Not the best practice, but better for keeping the `master` commit history neat.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605528198:427,message,messages,427,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605528198,1,['message'],['messages']
Integrability,"Oh yeah, I totally agree with that perspective - it's in part why I've gone on my little crusade over the past couple of weeks to remove all the warnings and errors from all the build processes. What do you think a sensible strategy is for handling bug fixes that touches code that issues complaints? CodeClimate will typically restate its complaint if you change a line that contributes to it (e.g. here I changed a ""return"" statement in a function that has too many). I guess there's either ""maintainers state whether any particular PR is acceptable with a failing warning""; ""write a [skip ci] commit message"" (or whatever it's called); or ""any PR that touches complained-about code must fix the error"". Without any experience, to my mind it seems like points 1 and 2 are basically the same, but point 1 gives the power to override to maintainers, and point 2 to contributors - seems like version 2 works well in a business where ""everyone"" is trusted to modify the code, but in the distribued opensource world, maybe not? Point 3 seems ideal in principle, but it seems like it would make it very hard to have first-time contributors do anything with older parts of the library - there'd be a huge onus to completely overhaul functionality, even just to fix small stuff. I really don't know what recommended practices are here - I was roughly working under the assumption that we'd have maintainers be allowed to override complexity failures on occasion, but we've never really discussed it as far as I know, and I do recognise the problems with it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826673175:603,message,message,603,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826673175,1,['message'],['message']
Integrability,"Oh yeah, that's a good point we should push out the change sooner rather than later. With how the data-layer classes are implemented, ufunc handling on them wouldn't actually add any memory footprint, but it does add complexity whenever someone wants to implement a new data-layer class. It's hard to fit general ufunc machinery into the Dispatcher spec, because the ufunc interface is rather general, and we don't want to entirely reimplement numpy. You also can't dispatch on ""unary"" / ""binary"" / ""arbitrary"" ufuncs as groups (could have been an alternative), because (e.g.) `sin` has very different performance characteristics to `cos` on sparse matrices. If the dispatchers aren't in use, then having a separate function (`apply_ufunc`) doesn't make a performance difference over defining `__array_ufunc__` in a Cython class in speed or memory, but it does make it harder for a user. Class functions like that in Cython are actually implemented as separate C-backed functions - you can't override them on an instance-by-instance basis, so the instances aren't carrying around extra vtables or anything like that. One option for user convenience there could be to allow unary ufuncs on data-layer objects and forbid binary+ ones. We can do that with `__array_ufunc__`. It's not so difficult to keep track of the few numpy ufuncs that have f(0) = 0 so different sparse structures can optimise based on that. *Edit*: oh, I think I misunderstood what you were saying about ""lightness"" - do you mean the spec of what they have to support is light, or their memory impact is light?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-774106830:373,interface,interface,373,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-774106830,1,['interface'],['interface']
Integrability,"Oh, I didn't see that this issue existed. I was able to rebuild the image for 4.6 without the pain being _too_ excruciating, but it was a very manual process. In qutip/qutip-doc#137 I completely rewrote the `qutip-structure.py` file to map out arbitrary Python packages by importing it (not ideal if you're running it on untrusted code, but I assume we trust `qutip`!) and recursing through every known name and reference. That fixes the concerns people had above about the structure; you can see in the latest version of the docs that the visualisation isn't just a single layer any more. Right now, the main issue is getting `d3.js` to give us a proper image file without running it through an entire browser. If we're commited to using `d3.js`, then the right solution is presumably to use Node in CI with a small JS wrapper to dump out the correct SVG file. However, the new `qutip-structure.py` produces a pretty standard `dict`-tree representation of every name in the package and its parent, so it'd probably not be too difficult to use a Python visualisation package to do it for us. This is the only really difficult bit of the procedure now - once we've got a reproducible step to retrieve a vector image, automating both vector conversions and rasterisation is trivial.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1525#issuecomment-828488287:820,wrap,wrapper,820,https://qutip.org,https://github.com/qutip/qutip/issues/1525#issuecomment-828488287,1,['wrap'],['wrapper']
Integrability,"Oh, I just noticed that if I do this in a jupyter notebook, I get a somewhat useful error message from the server: ; ~~~; /Users/goerz/.pyxbld/temp.macosx-10.6-x86_64-3.5/pyrex/rhs72670.cpp:541:10: fatal error: 'complex' file not found; #include <complex>; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-436875871:90,message,message,90,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-436875871,1,['message'],['message']
Integrability,"Oh, a thought: perhaps I should modify the commit messages of PRs in the old qutip-doc to make them link correctly. For example, instigate a rewrite rule of #xxx goes to qutip/qutip-doc#xxx?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1513#issuecomment-829621066:50,message,messages,50,https://qutip.org,https://github.com/qutip/qutip/pull/1513#issuecomment-829621066,1,['message'],['messages']
Integrability,"Oh, and I haven't exactly decided how the dispatchers will store their ""constructed"" methods yet. It'll depend a little on if there are major speed implications one way or the other (I'm especially concerned with the speed of binding to arbitrary function signatures), and whether they will require a huge amount of memory. I suspect that memory won't ever be too much concern - at their hearts, the dispatchers will mostly need a couple of `dict` attributes and a whole bunch of references to pre-existing objects. All that stuff is pretty light-weight.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338#issuecomment-672881468:104,depend,depend,104,https://qutip.org,https://github.com/qutip/qutip/pull/1338#issuecomment-672881468,1,['depend'],['depend']
Integrability,"Oh, one thing that I'd like to suggest we _don't_ do: use this interface to _implicitly_ create `Qobj` inside our functions. `__array__` was also originally meant as a method for allowing Numpy's ufuncs to act on other types. This actually caused us rather annoying problems in QuTiP when they decided to change up its semantics a little bit in version 1.20, which is in part is why I'm very cautious around this topic. Since we weren't super careful when we introduced `Qobj.__array__`, we allowed things like `np.sin(qutip.sigmax())` which we shouldn't have, and then the Numpy 1.20 changes completely altered how `ndarray(dtype=object)` arrays behaved when containing objects that all implemented `__array__`. To get around _some_ of these problems, they've introduced `__array_function__` and `__array_ufunc__`, though to me at best these are bandages. Those two concerns aren't immediately applicable in QuTiP, but they're sort of indicative of potential problems when using a `__qutip_qobj__` method implicitly in functions like `Qobj.__add__`. These are where it becomes very evident that Julia-style programming doesn't apply in the same way in Python. Python is only a single-dispatch language, so `a + b` will dispatch using the table of `a` predominantly, whereas `b + a` will dispatch on `b`. In a proper multiple-dispatch library the rules are separate to the classes, so neither class is called preferentially, there's just one rule and either library can define it. My point with this is that if `Qobj.__add__` has a case where it handles Qobj-like types, then we prevent the other library from overriding the method. Multi-methods like this simply don't work the same in Python as they do in Julia, so even if `Qobj` implements interfaces from a variety of other libraries, we'd never get good consistent behaviour with functions like this. Operations that ought to be commutative like `+` would become dependent on operand order. To some degree, implementing the interface would be a ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825646108:63,interface,interface,63,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825646108,1,['interface'],['interface']
Integrability,"Ok no worries, lets merge it in there. -P. On Jul 14, 2017 06:36, ""Denis Vasilyev"" <notifications@github.com> wrote:. > The problem is that at the moment this error crashes the entire python; > kernel unexpectedly for a user without any messages. It can be very; > frustrating for a newbie.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/699#issuecomment-315348946>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqYXiiBT-6u_46schRBDuTuOPQ-isks5sN2C3gaJpZM4Nr1OC>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/699#issuecomment-315354193:237,message,messages,237,https://qutip.org,https://github.com/qutip/qutip/pull/699#issuecomment-315354193,1,['message'],['messages']
Integrability,"Ok, I think I understand now. The QObjEvo class is well documented. The `cqobjevo` classes are not really exposed to the user, and so they don't need full documentation.; I would suggest that any new files added by this PR have a short file level docstring that explains the purpose of the classes / functions that it defines. Consider these as messages to developers rather than users.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/815#issuecomment-454724726:345,message,messages,345,https://qutip.org,https://github.com/qutip/qutip/pull/815#issuecomment-454724726,1,['message'],['messages']
Integrability,"Ok, I'll merge it for now, but I'll try and return to look at `dnorm` in more detail in the future, and particularly its tests; I'm also not a huge fan of having a secondary test dependence, but for the most part that's not really an issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1490#issuecomment-815673461:179,depend,dependence,179,https://qutip.org,https://github.com/qutip/qutip/pull/1490#issuecomment-815673461,1,['depend'],['dependence']
Integrability,"Ok, I've updated all PR links. It was no harder than basically running `sed s_#_qutip/qutip-doc#_g` on the commit messages - I checked that nothing untoward got changed as well. I've also updated the PR template - thanks Eric, I never would have thought of that (not sure how I missed it while using `grep` though!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1513#issuecomment-829953403:114,message,messages,114,https://qutip.org,https://github.com/qutip/qutip/pull/1513#issuecomment-829953403,1,['message'],['messages']
Integrability,"Ok, cool. I don't think there's any situation we should be mutating the `Options` class we're passed in though - I'd consider that a bug no matter what, since that leaks like your print statement shows. We can just duplicate it on entry, then modify that. To me it's not clear that passing several items in `tlist` should override an explicit `store_states=False` - as long as we allow you to pass an array as time-dependence, there is a sensible reason to pass more items in `tlist` than you need results for. Sure, you may also be able to use `Cubic_Spline`, but if we punish you for using arrays by swapping your options, why do we provide them? I think we should only warn and change the settings if _nothing_ is going to be stored - `store_final_state` should be enough to suppress it and not store the intermediate states, even if that implies the user might not be doing the fastest possible thing. I don't necessarily think we should try to promote ideal usage through runtime warnings if that's more verbose to type - that's what documentation is for, and some people will do stuff because it's faster to type, since they work interactively.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1437#issuecomment-775332513:415,depend,dependence,415,https://qutip.org,https://github.com/qutip/qutip/issues/1437#issuecomment-775332513,1,['depend'],['dependence']
Integrability,"Ok, great! I'll work on adding it in too, then. I actually just implemented it outside brmesolve, but in a way that should be easy to put back in. I'll check out the array-based time-dependent format (I actually haven't used it yet, still behind the times!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/258#issuecomment-63558912:183,depend,dependent,183,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-63558912,1,['depend'],['dependent']
Integrability,"Ok, it turns out I got the numpy release notes the wrong way round; we have to build our binaries with `1.16.6 <= numpy < 1.20` to maintain ABI compatibility no matter the numpy version. I have updated the compiler infrastructure to take this into account - this is in some ways a temporary restriction until two or three years in the future when we can drop support for all numpy versions less than 1.20. This is ready for final review. If you're fast, you can also try installing from the test PyPI server to see if the wheels work for you. While it's on the temporary server, you need to install `numpy` and `scipy` manually yourself (as they don't exist on test.pypi.org), but pip will do the dependencies correctly for you once it's publishing to the full repo.; ```bash; conda create -n pypi-test; conda install python pip numpy scipy; pip install -i https://test.pypi.org/simple qutip-jakelishman; python -c 'import qutip; qutip.about()'; ```. @hodgestar, @nathanshammah: perhaps you could just glance over this again and make sure everything looks right to you? Simon, I know you already looked over it once, so if you've not got time again, no problem - barely anything has changed since you last saw it. Nathan: in theory once we're in a position where deployments push to PyPI I think I can write an action for qutip/qutip.github.io to push a commit updating the website with the new information too. However, with the docs currently using a completely separate build process in a different repo, they can't really be triggered by a release here. I wrote this PR against `dev.major`, but I suppose in theory I could backport it to the 4.x branch if that's absolutely required. I think some parts of the setup changed for `dev.major`, which is why I didn't originally try to make it to the current version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-774353158:697,depend,dependencies,697,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-774353158,1,['depend'],['dependencies']
Integrability,"Ok, let's drop the tensor thing then. I'll make a new patch which includes the time-dependence syntax that you suggest, indeed a more convenient way. Do you think it would be necessary to perform linear interpolation as I did or would just rounding to the nearest point be ok. It looks like I'll need to add code to sesolve and mesolve, and these files seem to have some duplicate code already, do you think it would be useful to make a new file with some shared helper functions (mostly for generating the cython code)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/141#issuecomment-44796169:84,depend,dependence,84,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44796169,1,['depend'],['dependence']
Integrability,"Ok, my bad, I specified the wrong folder. It works for me on windows (except for some tests that are known to be failing), although it takes a bit longer to solve the dependency. It might be very useful for downstream packages since these issues kept popping up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1309#issuecomment-654983411:167,depend,dependency,167,https://qutip.org,https://github.com/qutip/qutip/pull/1309#issuecomment-654983411,1,['depend'],['dependency']
Integrability,"Ok, so I did some benchmarking at https://nbviewer.ipython.org/gist/goerz/34af142b78d7e344417d838bbea78aaf/06_example_3states_benchmark.ipynb ([gist](https://gist.github.com/goerz/34af142b78d7e344417d838bbea78aaf)), based on [one of the example notebooks from the Krotov package](https://qucontrol.github.io/krotov/v1.2.1/notebooks/06_example_3states.html). I'll be referring to the numbered cells in that notebook in the discussion below. @jakelishman in https://github.com/qutip/qutip/issues/1571#issuecomment-859873615:. > I think you might be able to achieve a lot of what you want already. The pseudo-code looks like it's not using `mesolve` super efficiently, though maybe it's only because of simplifications to make a MWE. For example, if your controls are piecewise constant, then it might be inefficient to represent those terms as ""time dependent""; doing so means you incur the cost of multiplying each term by a scalar at every intermediate step the integrator chooses to take, then you have to perform the matrix-vector product for each one individually and add them up. That's certainly worth trying: when calling `mesolve` in a loop over the time grid, I did indeed see a significant speedup when summing the Lindbladian into a single constant `Qobj`, see `In [21]` vs `In [24]`. On the other hand, it doesn't always give a speedup: in the low-level [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) it actually makes the propagation slower, see `In [29]` vs `In [32]`. It's a bit surprising, but then, as you say:. > [...] This isn't guaranteed, because it involves copying rather more data _before_ the call. So that's ok. > Would something like this work for you? [...]; >; > By giving `mesolve` the Liouvillian instead of the Hamiltonian and collapse operators separately. To be clear, I personally never use collapse operators (and the Krotov documentation heavily discourages it). Inst",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:848,depend,dependent,848,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,2,"['depend', 'integrat']","['dependent', 'integrator']"
Integrability,"Ok. I wrote a test for it. The error message can be seen below. I will open a PR to resolve this. Thank you very much for raising the issue.; ```; qc = QubitCircuit(3); qc.add_gate(""CNOT"", targets=[1], controls=[0]); test_gate = Gate(""RZ"", targets=[1], arg_value = 1.570796,; arg_label=""P""); qc.add_gate(test_gate); qc.reverse_circuit(); ```. ```; ERROR: Reverse a circuit; ----------------------------------------------------------------------; Traceback (most recent call last):; dev/qutip/qutip/qip/circuit.py"", line 371, in reverse_circuit; temp.append(self.gates[self.N - i - 1]); AttributeError: 'QubitCircuit' object has no attribute 'append'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/682#issuecomment-292698877:37,message,message,37,https://qutip.org,https://github.com/qutip/qutip/issues/682#issuecomment-292698877,1,['message'],['message']
Integrability,"On a subsequent run, the build on Travis CI failed. . The two runs were prompted by the same branch, minutes apart, but differed for the version of Python that Travis CI picked up (3.72 working, 3.73 failing) and some minor decimal difference in release version of one dependency (Cython if I remember correctly). . Making a branch with a special .travis.yml file with additional osx_image instructions for the Mac OS build might help to sort this out. Two days ago Travis switched to Python 3 as default installation language and unexpectedly yesterday I noticed that some of the failing builds on previous branches were successful. We are always building with Python 3, as it says in the change log, I am just wondering if some dependency was doing something incorrectly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/961#issuecomment-484739775:269,depend,dependency,269,https://qutip.org,https://github.com/qutip/qutip/pull/961#issuecomment-484739775,2,['depend'],['dependency']
Integrability,"On the page of the documentation talking about qutip.mcsolve (""Monte Carlo Solver""), it describes the algorithm for the monte carlo simulation as:. > I: Choose a random number r between zero and one, representing the probability that a quantum jump occurs.; > II: Integrate the Schrödinger equation, using the effective Hamiltonian (1) until a time τ such that the norm of the wave function satisfies ⟨ψ(τ)|ψ(τ)⟩=r, at which point a jump occurs.; > III: The resultant jump projects the system at time τ into one of the renormalized states given by Eq. (3). The corresponding collapse operator Cn is chosen such that n is the smallest integer satisfying:; > (5); > ∑_{i=1}^{n} P_n(τ)≥r. In actuality, through my own reading of the code, **two** random numbers are generated, one for determining if a jump occurs, and another to determine which jump operator was responsible. I suggest the following change (changes highlighted in bold):. > I: Choose a random number **r_1** between zero and one, representing the probability that a quantum jump occurs.; > II: Integrate the Schrödinger equation, using the effective Hamiltonian (1) until a time τ such that the norm of the wave function satisfies ⟨ψ(τ)|ψ(τ)⟩=**r_1**, at which point a jump occurs.; > **III: Choose a random number r_2 between zero and one, used to select which collapse operator was responsible for the jump.**; > IV: The resultant jump projects the system at time τ into one of the renormalized states given by Eq. (3). The corresponding collapse operator Cn is chosen such that n is the smallest integer satisfying:; > (5); > ∑_{i=1}^{n} P_n(τ)≥**r_2**. While this is not an issue in the code, the way the documentation is written at the moment implies that jumps which occur after a short amount of time will primarily be due to collapse operators at the end of the c_ops list, while jumps that happen after a long time will be biased towards collapse operators at the start of the c_ops list. Again, the code is correct, but the do",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1666:264,Integrat,Integrate,264,https://qutip.org,https://github.com/qutip/qutip/issues/1666,1,['Integrat'],['Integrate']
Integrability,"One can reduce the number of variables of the DM by N(N+1)/2 when operating on the upper (or lower) triangle of the DM only. This leads to a overdetermined least-squares problem that can be solved in SciPy. Since the scaling of these solution methods depends heavily on N, this should hopefully lead to a good speed up.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/101:251,depend,depends,251,https://qutip.org,https://github.com/qutip/qutip/issues/101,1,['depend'],['depends']
Integrability,One idea was to randomly print a message on `import qutip`. I am not sure on whether this would go against established etiquette. Anyone have a view on this?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/664#issuecomment-286357609:33,message,message,33,https://qutip.org,https://github.com/qutip/qutip/issues/664#issuecomment-286357609,1,['message'],['message']
Integrability,"Our diamond norm calculation in [QPtomographer](https://github.com/Tomographer/QPtomographer/) is written in C++ in the file [QPtomographer/cxx/diamond_norm_scs.h](https://github.com/Tomographer/QPtomographer/blob/master/cxx/diamond_norm_scs.h) (see [QPtomographer/test/test_diamond_norm.cxx](https://github.com/Tomographer/QPtomographer/blob/master/test/test_diamond_norm.cxx) for an example usage) and uses the C interface of [the SCS solver](https://github.com/cvxgrp/scs). The way it stands, it also depends on [Eigen C++ header library](http://eigen.tuxfamily.org/), but it should be easy to remove this dependency as it is only used to specify the input matrices. Other minor dependencies are easily removed. I'm not sure what underlying mechanism you use in QuTiP, but it should be relatively straightforward to reformat the whole class into a C implementation with only SCS as a dependency. Unfortunately the python `scs` package does not install C headers, so that dependency might turn out to be something to worry about. Perhaps SCS itself can be integrated in the QuTiP source?. I'd be happy if our code is useful for you, and let me know if you'd like any clarifications about our implementation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-494716341:415,interface,interface,415,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-494716341,7,"['depend', 'integrat', 'interface']","['dependencies', 'dependency', 'depends', 'integrated', 'interface']"
Integrability,Parallelizing `mcsolve` doesn't work with qutip Integrators with `improved_sampling=False`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2450:48,Integrat,Integrators,48,https://qutip.org,https://github.com/qutip/qutip/issues/2450,1,['Integrat'],['Integrators']
Integrability,"Path array handling. CVE-2022-22815, CVE-2022-22816 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a>; [radarhere]</p>; </li>; <li>; <p>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a>; [radarhere]</p>; </li>; <li>; <p>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a>; [radarhere]</p>; </li>; <li>; <p>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a>; [radarhere]</p>; </li>; <li>; <p>Fixed palette index for zeroed color in FASTOCTREE quantize <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5869"">#5869</a>; [radarhere]</p>; </li>; <li>; <p>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a>; [radarhere]</p>; </li>; <li>; <p>Pass SAMPLEFORMAT to libtiff <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5848"">#5848</a>; [radarhere]</p>; </li>; <li>; <p>Added rounding when converting P and PA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5824"">#5824</a>; [radarhere]</p>; </li>; <li>; <p>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a>; [radarhere]</p>; </li>; <li>; <p>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a>; [hugovk]</p>; </li>; <li>; <p>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a>; [radarhere]</p>; </li>; <li>; <p>Added ImageShow support for xdg-open <a href=""https://",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:11775,depend,dependabot,11775,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"Perhaps an example will help:. Say that I want to squeeze the vacuum with z=1. What I should do is compute the vector S(z)|0> for z=1. What I would expect is that the amplitudes of the result shouldn't depend on whether I decide to truncate at dimension 10 or 20 or 30, but with the current implementation of `qutip.squeeze` it does:; ```python; (qt.squeeze(5,1)*qt.basis(5,0)); ```; tells me that (for instance) the 5-photon state has amplitude 0.453, while according to ; ```python; (qt.squeeze(10,1)*qt.basis(10,0)); ```; the same state has amplitude 0.310. This is a physically relevant difference, so how do I answer the question: what's the probability of detecting n photons in the S(z)-squeezed vacuum? With the current implementation of `qutip.squeeze` I cannot. Do you see the problem?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/661#issuecomment-286262389:202,depend,depend,202,https://qutip.org,https://github.com/qutip/qutip/issues/661#issuecomment-286262389,1,['depend'],['depend']
Integrability,"Perhaps someone else can give a more concrete answer, but I guess the driving frequency is too high for the number of time-steps? Try tweaking the ODE solver with options like the following:. `; options = Options(nsteps=15000, atol=1e-13, rtol=1e-13) ; `. and passing it to mesolve. `result1 = mesolve(Ha, psi0, times, [np.sqrt(T1)*sig01, np.sqrt(T2)*sig02, np.sqrt(gamma*(nth + 1))*a, np.sqrt(gamma*nth)*a.dag()], [a.dag()*a, sig00, sig11, sig22], progress_bar=True, options=options); `. More practically speaking, for the problem you are solving I guess explicitly including the time dependence is unneccessary, since you have already made a RWA on the drive and the coupling? . Moving to an interaction picture in w1, w2 and wph, and removing the explicit time-dependence might simplify the problem and might give you equivalent results, and in the process make your code much simpler and more efficient?. In other words just set w1=w2=wph=0, and put the drive as a time-independent term in the hamiltonian . `; H01 = g*(sig12*a.dag() + sig21*a) + pump1*(sig01 + sig01.dag()); `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1038#issuecomment-508634514:586,depend,dependence,586,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-508634514,2,['depend'],['dependence']
Integrability,"Pillow/issues/6699"">#6699</a>; [radarhere]</p>; </li>; <li>; <p>Inline fname2char to fix memory leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a>; [nulano]</p>; </li>; <li>; <p>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a>; [nulano]</p>; </li>; <li>; <p>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a>; [hugovk]</p>; </li>; <li>; <p>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a>; [cgohlke]</p>; </li>; <li>; <p>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a>; [radarhere]</p>; </li>; <li>; <p>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a>; [cgohlke]</p>; </li>; <li>; <p>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a>; [hmaarrfk]</p>; </li>; <li>; <p>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a>; [radarhere]</p>; </li>; <li>; <p>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a>; [radarhere]</p>; </li>; <li>; <p>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a>; [npjg, radarhere]</p>; </li>; <li>; <p>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a>; [radarhere]</p>; </li>; <li>; <p>Added GPS TIFF tag info <",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:11572,depend,dependabot,11572,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"Please feel free to contribute improvements upstream! You can blame me for the scipy implementations of those functions, I'm just a postdoc who needed them for some computational biology calculations. Sorry if they are bad. Also they may be bit-rotting further due to the questionable 'LinearOperator' situation in scipy and the inconsistencies among the np.ndarray, np.matrix, scipy.sparse, and linear operator interfaces.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/464#issuecomment-210592220:412,interface,interfaces,412,https://qutip.org,https://github.com/qutip/qutip/pull/464#issuecomment-210592220,1,['interface'],['interfaces']
Integrability,"Please update this pull to the latest master so that we can check if it passes with all of the new changes. Also, your last correlation pull did not clean up the *.pyx files generated for the time-dependent code. Please check that no *.pyx files are left hanging around in this pull.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/520#issuecomment-272532379:197,depend,dependent,197,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-272532379,1,['depend'],['dependent']
Integrability,"Previously, passing a Hamiltonian to `mesolve` which used ""array"" time dependence with a tlist not equal to `mesolve`'s would fail if any constant collapse operators were present. This was because `mesolve` was a little over-zealous in promoting `c_ops` to time-dependent `QobjEvo` using the `mesolve` time list. This would cause an unnecessary failure if the Hamiltonian was a `QobjEvo` specified previously with a different tlist. Fix #1560. #### Changelog; - Specialise exception types in ``QobjEvo`` failure paths; - Fix ``tlist`` ``QobjEvo`` with constant collapse operators in ``mesolve``; - 2-element list elements in ``QobjEvo`` specifiers can now be any iterable type, not just ``list``",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1561:71,depend,dependence,71,https://qutip.org,https://github.com/qutip/qutip/pull/1561,2,['depend'],"['dependence', 'dependent']"
Integrability,Propagator not working with time-dependent hamiltonian,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2532:33,depend,dependent,33,https://qutip.org,https://github.com/qutip/qutip/issues/2532,1,['depend'],['dependent']
Integrability,Proposal for 4.4.1 Mostly to fix the bugs reported since 4.4.0's release but include small improvements. Bug Fixes; -------------. - Fixed the pickling but that made solver unable to run in parallel on Windows. (Thank **lrunze** for reporting); - Removed warning when mesolve fall back on sesolve (by **Michael Goerz**).; - Fixed dimension check and confusing documentation in random ket (by **Yariv Yanay**).; - Fixed Qobj isherm not working after using Qobj.permute. (Thank **llorz1207** for reporting); - Correlation functions call now properly handle multiple time dependant functions. (Thank **taw181** for reporting); - Removed mutable default values in mesolve/sesolve (by **Michael Goerz**); - Fixed simdiag bug (Thank **Croydon-Brixton** for reporting); - Better support of constant QobjEvo. (by **Boxi Li**). Improvements; ------------------. - QobjEvo do not need to start from 0 anymore. (by **Eric Giguere**); - Add a quantum object purity function. (by **Nathan Shammah** and **Shahnawaz Ahmed**); - Add step function interpolation for array time-coefficient. (by **Boxi Li**),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1069:569,depend,dependant,569,https://qutip.org,https://github.com/qutip/qutip/pull/1069,1,['depend'],['dependant']
Integrability,Pull allows for passing the interpolation Cubic_Spline functions as time-dependent arguments for the collapse operators in mesolve.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/810:73,depend,dependent,73,https://qutip.org,https://github.com/qutip/qutip/pull/810,1,['depend'],['dependent']
Integrability,"Pure numerically speaking, the last `diss_coeff` is a way larger than the others.; ```python; >>>diss_coeff; [0.19836061612310207j,; 0.25470007277190326j,; 0.223606797519535j,; 4925.267477050309j]; ```; With this large frequency, if you want to solve the dynamics using ODE, I don't think there is a way to make it faster. You have to either simplify your model mathematically, or, because there is no time dependency in your system, use the (deprecated) `essolve` that computes the dynamics using eigenvalues. Thinking about the physics, the T2 time is much smaller than your `tlist`, the system has already fully decohered. PS: @jakelishman It seems that the `essolve` does have some use-cases? Like in small systems for verification perpose. I remember there is another PR that also mentions it. As we deprecated it, I'm wondering if there is an efficient alternative in QuTiP?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1623#issuecomment-886175452:407,depend,dependency,407,https://qutip.org,https://github.com/qutip/qutip/issues/1623#issuecomment-886175452,1,['depend'],['dependency']
Integrability,Python 2.7 builds failed. Assuming this is because the blas module does not exist.; See commit message for details of this new attempt,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/876#issuecomment-394758248:95,message,message,95,https://qutip.org,https://github.com/qutip/qutip/pull/876#issuecomment-394758248,1,['message'],['message']
Integrability,QIP module extension and integration with other modules,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/441:25,integrat,integration,25,https://qutip.org,https://github.com/qutip/qutip/issues/441,1,['integrat'],['integration']
Integrability,"Qobj currently use sparse matrix representation for operators and kets/bras, which is optimal for large systen but suboptimal for small systems. We want Qobj to support both sparse and dense matrix representation for the quantum object it represents. This should probably be implemented with two different classes, QobjSparse and QobjDense which inherit a common interface from a parent class Qobj.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/26:363,interface,interface,363,https://qutip.org,https://github.com/qutip/qutip/issues/26,1,['interface'],['interface']
Integrability,QuTiP VS RK45: Which one gives the correct results for time-dependent systems?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733:60,depend,dependent,60,https://qutip.org,https://github.com/qutip/qutip/issues/1733,1,['depend'],['dependent']
Integrability,"QuTiP doesn't have one built in at the moment, but [`toqito`](https://vprusso.github.io/toqito/) can do it as numpy arrays, which you can just wrap in `Qobj`. There's no scope for `density` there, though (and it would be very difficult to do so, I think!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1642#issuecomment-905715259:143,wrap,wrap,143,https://qutip.org,https://github.com/qutip/qutip/issues/1642#issuecomment-905715259,1,['wrap'],['wrap']
Integrability,"QuTiP is currently incompatible with numpy 1.20. Tests will fail to even collect with an error such as; ```; AttributeError: 'numpy.ndarray' object has no attribute 'dag'; ```; and a lot of functionality will break - anything that requires `Qobj.eigenstates()` for example. This is because `Qobj` defines `__array__`, one of numpy's ""array interface"" functions, intended for classes that can be safely converted _implicitly_ into an `ndarray`. This isn't really the case for `Qobj` - it loses all sorts of information when you do that, which is why we've maintained the separate `Qobj.full()` for explicitly getting the dense matrix representation of a `Qobj`. This is not to mention that numpy ufuncs probably should not be able to implicitly convert `Qobj` - I'd strongly argue that `np.sin(qutip.basis(2, 1))` should be `TypeError`, _not_ `array([[0. +0.j], [0.84147098+0.j]])` (like it is right now). We actually already removed this ""functionality"" in `dev.major`. The most pressing incompatibility is that a few points in QuTiP put a few `Qobj` into a `np.array(dtype=object)`. In numpy 1.20, this no longer produces a 1D array of `Qobj`, but a 3D array of complex. This breaks `Qobj.eigenstates`, and prevents test collection due to it being present in `states.py::qutrit_basis()`, which is called during parametrisation. There are a two possible ways to solve this, and we ought to release a fix with one of them in a patch ASAP:; 1. remove `Qobj.__array__`; 2. remove all use of `Qobj` in `np.array`. I'm personally in favour of ""explicit is better than implicit"" in this case, i.e. removing `Qobj.__array__` and relying on `Qobj.full()`. As another example along this vein, note `scipy.sparse` matrices don't implement this either, and they're arguably closer to being safely coerced to `ndarray` than we are. ### Related issues. #938: feature request for implementing `__array__`. This only asks for `np.array(qobj)` as a convenience, acknowledging the availability of `Qobj.full()`.; #1017",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433:340,interface,interface,340,https://qutip.org,https://github.com/qutip/qutip/issues/1433,1,['interface'],['interface']
Integrability,"QuTiP: Quantum Toolbox in Python. ================================. Copyright (c) QuTiP team 2011 and later. Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed,; Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross, Asier; Galicia, Paul Menczel, and Patrick Hopf. Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco; Nori and Will Zeng. Original developers: R. J. Johansson & P. D. Nation. Previous lead developers: Chris Granade & A. Grimsmo. Currently developed through wide collaboration. See https://github.com/qutip; for details. QuTiP Version: 5.0.4. Numpy Version: 1.24.3. Scipy Version: 1.14.1. Cython Version: None. Matplotlib Version: 3.7.2. Python Version: 3.11.5. Number of CPUs: 16. BLAS Info: INTEL MKL. INTEL MKL Ext: False. Platform Info: Windows (AMD64). Installation path: C:\Users\sabhy\anaconda3\Lib\site-packages\qutip. ================================================================================. Please cite QuTiP in your publication. ================================================================================. For your convenience a bibtex reference can be easily generated using; `qutip.cite()`. On Wed, Sep 25, 2024 at 4:09 AM Paul ***@***.***> wrote:. > Could you please include the output of the command qutip.about()? Because; > your code does not give an error on my setup.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/2536#issuecomment-2372741589>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJVIYE6VAXW7QIVMRM4WQTDZYILLZAVCNFSM6AAAAABOYAR32CVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDGNZSG42DCNJYHE>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2536#issuecomment-2373078683:1744,Message,Message,1744,https://qutip.org,https://github.com/qutip/qutip/issues/2536#issuecomment-2373078683,1,['Message'],['Message']
Integrability,QuTip. Expactation values of time-dependent operators,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/931:34,depend,dependent,34,https://qutip.org,https://github.com/qutip/qutip/issues/931,1,['depend'],['dependent']
Integrability,"Question regarding '[', '(' and correlated time-dependent operators",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2065:48,depend,dependent,48,https://qutip.org,https://github.com/qutip/qutip/issues/2065,1,['depend'],['dependent']
Integrability,"Quick example is below. To add a bit more, the ''slowness'''of the standard brmesolve() run in this example depends on whether I install mkl or not. without mkl, its >10 mins, with mkl, about one minute. The run with converting the tensor to sparse always takes around 30-40 seconds, and doesn't depend too much on mkl. ```; import qutip as qt; import numpy as np. #spectral density; def Jw(w): ; return lam**2 * gamma * w / ((w0**2 - w**2)**2 + (gamma**2) * (w**2)); ; ; #power spectrum; def J_power_spectrum(w):; """""" The Ohmic bath power spectrum as a function of w; (and the bath parameters).; """"""; return (; Jw(w) * 2 * (w>0); ); def Ising_solve(N, g0, J0, gamma, tlist, options, use_csr=True):; # N : number of spins; # g0 : splitting; # J0 : couplings. #Setup operators for individual qubits; sx_list, sy_list, sz_list = [], [], []; for i in range(N):; op_list = [qt.qeye(2)] * N; op_list[i] = qt.sigmax(); sx_list.append(qt.tensor(op_list)); op_list[i] = qt.sigmay(); sy_list.append(qt.tensor(op_list)); op_list[i] = qt.sigmaz(); sz_list.append(qt.tensor(op_list)). # Hamiltonian - Energy splitting terms; H = 0.; for i in range(N):; H += g0 * sz_list[i]. # Interaction terms; for n in range(N - 1):; H += -J0 * sx_list[n] * sx_list[n + 1]. # Initial state; state_list = [qt.basis(2, 1)] * (N-1); state_list.append(qt.basis(2, 0)); psi0 = qt.tensor(state_list); fx = 1; fy = 1.1; fz = 0.9; coup = (fx * (sx_list[N-1]) ; + fy * (sy_list[N-1]); + fz * (sz_list[N-1])). ; if use_csr:; R = qt.bloch_redfield_tensor(H, [[coup, J_power_spectrum]], fock_basis=True, sparse_eigensolver=True,br_dtype = 'sparse', sec_cutoff=-1); R = R.to('csr').tidyup(); result = qt.mesolve(R,psi0, tlist, options=options); else:; result = qt.brmesolve(H, psi0, tlist, a_ops = [[coup, J_power_spectrum]], e_ops=sz_list, options=options, sec_cutoff=-1); return result. #bath sd params; lam = 5; w0 = 10; gamma = 5; . #system params; N = 5; g0 = 1; J0 = 5. tlist = np.linspace(0, 100, 1000); options ={""nsteps"": 15000, ""s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2530#issuecomment-2403834583:108,depend,depends,108,https://qutip.org,https://github.com/qutip/qutip/issues/2530#issuecomment-2403834583,2,['depend'],"['depend', 'depends']"
Integrability,"Qutip use Scipy's Ode solvers. The interface of scipy solvers chaged in recent version, but we are still using [ode](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.ode.html#scipy.integrate.ode). We are using zvode integrator and adams method per default. Most of qutip's solver accept an options arguments which can change the method to 'bdf' but cannot be changed to Isoda or dopri. Mpi is not supported but multiprocessing is used by mcsolve and the stochastic solvers. If you [compile qutip](http://qutip.org/docs/latest/installation.html?highlight=openmp) yourself, we have a openmp parallelized matrix-vector product which can be used to speed up problem with large Hamiltonian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1101#issuecomment-542843153:35,interface,interface,35,https://qutip.org,https://github.com/qutip/qutip/issues/1101#issuecomment-542843153,4,"['integrat', 'interface']","['integrate', 'integrator', 'interface']"
Integrability,"R; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (mc_avg=True) ... ok; > > > mcsolve_f90: check for correct dtypes (mc_avg=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 5.72e+15); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as string list ... ERROR; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ERROR; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > quantum process tomography for snot gate ... ok; > > > quantum process tomography for cnot gate ... ok; > > > Test mesolve ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:3880,depend,dependence,3880,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['depend'],['dependence']
Integrability,"ROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. I know this is quite an old OS and Python version, but that's what I have available. Numpy 1.24 should be supported in Python 3.8.10. ### Code to Reproduce the Bug. ```shell; $ python3 -m venv /tmp/test-venv. $ source /tmp/test-venv/bin/activate. $ pip install --upgrade pip; Collecting pip; Using cached pip-24.0-py3-none-any.whl (2.1 MB); Installing collected packages: pip; Attempting uninstall: pip; Found existing installation: pip 20.0.2; Uninstalling pip-20.0.2:; Successfully uninstalled pip-20.0.2; Successfully installed pip-24.0. $ pip list; Package Version; ------------- -------; pip 24.0; pkg_resources 0.0.0; setuptools 44.0.0. $ pip install qutip; Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if it's of any help. <details><summary>Output</summary>. ```; pip install --verbose qutip; Using pip 24.0 from ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:1113,depend,dependencies,1113,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['dependencies']
Integrability,ReadTheDocs QuTiP build fails after adding MPI as a dependency.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2317:52,depend,dependency,52,https://qutip.org,https://github.com/qutip/qutip/issues/2317,1,['depend'],['dependency']
Integrability,"Referencing this : https://github.com/qutip/qutip-doc/pull/70. 1. Having manually compiled the changelog for v4.4.1 and v4.5.x today, I think that maybe we should try automating the release notes/changelogs with something like this : https://github.com/github-tools/github-release-notes; I'm attaching release notes generated by this for QuTiP.; [RELEASE_NOTES.txt](https://github.com/qutip/qutip/files/3728179/RELEASE_NOTES.txt). 2. We could also, in pursuit of having an automated release notes/changelog system start with making commits in more of a standard format, using some pre-decided keywords like [bugfix] or [improvement] in the commit message. I understand that this is a rather ambitious thing to say, but we can then use `grep` and `git log` itself to generate these in markdown. As a first step, I am proposing to use **Pull request /Issue** templates, something like this for instance : https://github.com/angular-translate/angular-translate/blob/master/.github/ISSUE_TEMPLATE.md; This way, all our Pull Requests and Issues will be homogeneously formatted.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1108:647,message,message,647,https://qutip.org,https://github.com/qutip/qutip/issues/1108,1,['message'],['message']
Integrability,"Regarding the suggestions in the TODO list:. > Have qutip-qip be an optional dependency. I'm wondering about this. Having `pip install qutip[qip]` is nice, but what should happen with `pip install qutip[full]`? Should that also install `qutip_qip`? If not should we then leave `qutip_qip` out of `full`? And should we have `qutip[full-family]`?. > Add installation of qutip-qip to the CI workflow. This we should not do -- we don't want anything in core qutip to accidentally require qutip_qip (that was sort of the point of the family packages).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1920#issuecomment-1147715338:77,depend,dependency,77,https://qutip.org,https://github.com/qutip/qutip/pull/1920#issuecomment-1147715338,1,['depend'],['dependency']
Integrability,"Regarding your questions:. - It's the same in QuTiP 5 currently. I am creating a PR also for that version, but I will include support for multiple coupling operators to the PR.; - Yes, I will add a test for this.; - This parameter is only relevant for `fmmesolve` ( master equation solver ). There is already the parameter `kmax` which sets the truncation of sidebands to be considered for the integration of the coupling operator. The integral to solve reads as:. $$ \frac{1}{T} \int_0^T dt e^{-ik\Omega t} f(t) $$. where $k \in \[-k_{max}, k_{max} \]$ and $f(t)$ is a $T$-periodic function. Hence, we know the frequency of the integrand and therefore the required number of grid points for the numerical integration can be set based on `kmax`.; I think, we don't need to create another parameter for `nT`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1961#issuecomment-1198959790:394,integrat,integration,394,https://qutip.org,https://github.com/qutip/qutip/pull/1961#issuecomment-1198959790,2,['integrat'],['integration']
Integrability,"Related to this, the qutip User Guide mentions that the (function) ""callback format"" for input of time-dependent operators works for _both_ Hamiltonians and jump operators (bottom of pg. 148). If I put a function into the Ham input, I am fine. But putting the same function into the list of jumps throws:. ```; AttributeError: 'function' object has no attribute 'issuper'; ```. I guess the Note 2 on pg. 149 sort of implies this only works for Hams.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/223#issuecomment-54542286:103,depend,dependent,103,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-54542286,1,['depend'],['dependent']
Integrability,"Removed the inconsistency in the dimension argument of Qutip operators in the naming, type, and description.; Proposed generalization - use N to denote the dimension of Hilbert space if it's int or denote a list with the number of states in each sub-system if it's a list. fixes https://github.com/qutip/qutip/issues/1722. Used the following conventions-; in States.py-; dimensions : int or list of ints; Number of Fock states in Hilbert space. If a list, then the resultant; object will be a tensor product over spaces with those dimensions. N: int ; Number of Fock states in Hilbert space. dims : list or array; The quantum state dimensions array, as it would appear in a Qobj. dim: list; A list with the number of states in each sub-system. in Opearator.py- . dimensions : (int) or (list of int) or (list of list of int); Dimension of Hilbert space. If provided as a list of ints, then the; dimension is the product over this list, but the ``dims`` property of; the new Qobj are set to this list. This can produce either `oper` or; `super` depending on the passed `dimensions`.; N: int ; Number of Fock states in Hilbert space.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2075:1043,depend,depending,1043,https://qutip.org,https://github.com/qutip/qutip/pull/2075,1,['depend'],['depending']
Integrability,"Removing list and forcing dict does not feels making things nicer... Being forced to use dict is mostly a nuisance for me. Presently we support both list ans dict output without much issues, there are very few place that would have issue supporting multiple interfaces. (I can only think of `plot_expectation`.). But how about using `namedtuple`?. It act as a list for loop and numpy, but elements can be called by both the number and name, and I like having result's output somewhat immutable. The biggest issue is that we must provide field names for list inputs... For MC, if e_ops callable return weird things, they will have to choose the option to store all trajectories instead of averaging the result. If they ask for the average or standard derivation of a dict, they will and should get an error, the best we should do is making this error message useful. Custom reduce function could be doable, but probably be a mess, especially if we need one for both `mean` and `std`... So unless someone present a good use case for it, I don't plan going that way.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1907#issuecomment-1141402988:258,interface,interfaces,258,https://qutip.org,https://github.com/qutip/qutip/pull/1907#issuecomment-1141402988,2,"['interface', 'message']","['interfaces', 'message']"
Integrability,Replace division with mult in time-dependent a_op terms,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/698:35,depend,dependent,35,https://qutip.org,https://github.com/qutip/qutip/pull/698,1,['depend'],['dependent']
Integrability,"Right now there's no way to make `Qobj` use a dense representation, but that is something that's been discussed elsewhere. If you just want to use `qutip` functions to build up a system then do the heavy lifting using `numpy`, you can convert a `Qobj` to a dense array with `Qobj.full` (e.g. `qutip.qeye(10000).full()`). Your question certainly did spot a place where the error message could be improved, though!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1204#issuecomment-601795001:378,message,message,378,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-601795001,1,['message'],['message']
Integrability,"Right now, QuTiP doesn't support passing `c_ops` as an arbitrary function to `mcsolve`. @Ericgig might have more ideas for other things you may try, but in general to us `mcsolve` you need to have your collapse operators as constant matrices multiplied by time-dependent scalars. Depending on your collapse operators, you may be able to move to an interaction picture such that the collapse operators lose their time-dependence, or move to being scalars multiplied by constant matrices. Otherwise, if your system size and available memory permit, you can use `mesolve` to directly solve the Lindblad master equation for the full density matrix rather than single trajectories.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1398#issuecomment-739026681:261,depend,dependent,261,https://qutip.org,https://github.com/qutip/qutip/issues/1398#issuecomment-739026681,3,"['Depend', 'depend']","['Depending', 'dependence', 'dependent']"
Integrability,"Routine computes matrix elements about 10x faster than previous method. It is slightly better not to actually use a bra-vector, but use a ket-vector instead, and let the computation handle the difference internally.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/757:0,Rout,Routine,0,https://qutip.org,https://github.com/qutip/qutip/pull/757,1,['Rout'],['Routine']
Integrability,Running it through the profiler suggests that cy_expect_psi_csr is only responsible for a small part of the time (accumulative time 4.2 sec as compared to total run time of 148 sec). ```; Wed Nov 26 15:04:59 2014 profile.out; 5155120 function calls (5143582 primitive calls) in 148.280 seconds; Ordered by: cumulative time; List reduced from 3097 to 100 due to restriction <100>; ncalls tottime percall cumtime percall filename:lineno(function); 441/1 0.014 0.000 148.283 148.283 {built-in method exec}; 1 0.001 0.001 148.283 148.283 mcsolve-performance.py:1(<module>); 2 0.000 0.000 147.463 73.732 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:69(mcsolve); 2 0.000 0.000 147.411 73.706 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:446(run); 2 0.000 0.000 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:423(parallel); 2 0.011 0.006 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:415(serial); 1000 8.867 0.009 147.340 0.147 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 453518 1.543 0.000 130.497 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 453518 127.846 0.000 128.245 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 395940 0.709 0.000 74.413 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 171960 4.219 0.000 4.219 0.000 {built-in method cy_expect_psi_csr}; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-64519867:1249,integrat,integrate,1249,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64519867,4,['integrat'],['integrate']
Integrability,"Several functions in `qutip.superoperator` return Qobj instances with `type=""super""` (though notably not `spre` and `spost`, which return `type=""oper""`). While this is very useful for distinguishing quantum maps from other quantum objects, additional metadata to tell apart Liouville (supermatrix) and Choi representations would be very useful in writing functions that act on quantum maps. For instance, the average gate fidelity of a map is easily calculated in terms of its Kraus decomposition, such that to find the fidelity of the map represented by a `Qobj`, one would either call `super_to_choi` and then `choi_to_kraus`, or would skip directly to `choi_to_kraus`, depending on how the map was represented. Moreover, having this metadata would be especially important if more superoperator representations are added, such as system+environment or Steinspring pairs.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/88:672,depend,depending,672,https://qutip.org,https://github.com/qutip/qutip/issues/88,1,['depend'],['depending']
Integrability,"Since the update to version 4.4, calling `mesolve` without collapse operators prints a message ""no collapse operator, using sesolve"" to stdout. Is printing this message really necessary? It breaks our examples for the `krotov` package, see e.g. the notebook https://krotov.readthedocs.io/en/latest/notebooks/01_example_simple_state_to_state.html, where these messages show up in the notebook when it runs with qutip 4.4. Of course I understand that the message is technically correct, and we could work around the problem in `krotov`, but it was nice to be able to use `mesolve` as a catch-all for either a Schrödinger equation or a master equation. We'd have to start routing different cases to `mesolve` and `sesolve` manually, otherwise. Personally, I would argue that this kind of message should be emitted as `logger.debug` instead of `print`, if at all.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1047:87,message,message,87,https://qutip.org,https://github.com/qutip/qutip/issues/1047,6,"['message', 'rout']","['message', 'messages', 'routing']"
Integrability,"So I pushed two commits here - one which makes the changes to `setup.py`, and another which doesn't just remove the commented reference to `nose`, it completely overhauls `test_qobj.py` into a more `pytest`-friendly format. I found that removing the comment would have left a very odd function that was used to decorate test cases, which isn't necessary in `pytest` so much because you can use parametrisation, more description function names, and grouping in `Test*` classes to achieve the same goal with less custom wrappers. Once I was on that, I kind of got carried away changing the rest of the file. Let me know if that's too much - I could rebase this PR (and resubmit it) to split up the commits if you'd rather, or I can I just remove that last commit which makes all those changes. At the time of writing, the CI tests haven't run, and I'm a little worried that they'll fail due to the added dependency on `pytest-runner` in `setup.py`, when I haven't modified `.travis.yml`. Even if the CI tests don't fail, I think there might be some knock-on effects for documentation or packaging from that change?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1161#issuecomment-576056085:518,wrap,wrappers,518,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576056085,2,"['depend', 'wrap']","['dependency', 'wrappers']"
Integrability,"So, I did a lot of digging around trying to add the banner for all the older documentation to point towards the latest. But it was a pain to modify and add manually a message on each page to point towards the latest docs. However, for future releases, we could use the `cannonical_url` option of `sphinx_rtd_theme` which makes search engines index the latest links to the documentations. https://docs.readthedocs.io/en/stable/canonical.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1516#issuecomment-467538074:167,message,message,167,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-467538074,1,['message'],['message']
Integrability,"So, in summary, this issue affects only MacOS running Python 3.8. As it is not possible to handle seg faults (because Python crashes), then I think we should, for now, identify which tests we know will seg fault and fail them with a message to say something like ""known fault with Python 3.8 on MacOS"". This way the rest of the tests will complete. We can they work on a proper fix, for which we should raise another issue. I am working on creating a MacOS test platform for myself. In the meantime, if anyone can isolate which tests will cause a seg fault, that would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257:233,message,message,233,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257,1,['message'],['message']
Integrability,Solver contain unique integrator,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1879:22,integrat,integrator,22,https://qutip.org,https://github.com/qutip/qutip/pull/1879,1,['integrat'],['integrator']
Integrability,"Solvers: absolutely the solvers should always be packaged with the main `qutip`. I had sort of envisaged that we'd put them in a `solve` package, which would be exported into the main namespace just like `core` is. This way is more just for greater separation, so that the full core isn't entangled with the solvers themselves - I think separating them like this will help us ensure that we specify the data layer API much more cleanly if the solvers aren't referenced within it. (i.e. there's no reference to any solver within `core`, but the API is built sufficiently cleanly that they can still access all the internals). OpenMP check: I think there's two neater ways:; 1. perhaps `settings` should just be in `core` too? I avoided putting the check in `core/__init__.py` because I'm really trying to avoid bi-directional dependencies between the packages, but moving `settings.py` into `core` would solve that.; 2. alternatively, we could just write `settings.py` as part of `setup.py` - determine whether we built against OpenMP/MKL at compile-time, and then just write it in? We can still choose whether or not to use it in various runtime situations. As for the current test - yeah, the comparative complexity is kind of indicative that this isn't the right way to do it. It's a relatively straightforward use of `importlib`, but still it's more difficult. (By the way: are you and @ajgpitch getting notified when I post in [the discussion board](https://github.com/orgs/qutip/teams/data-layer-devs)?)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1282#issuecomment-638730654:825,depend,dependencies,825,https://qutip.org,https://github.com/qutip/qutip/pull/1282#issuecomment-638730654,1,['depend'],['dependencies']
Integrability,"Solving time-dependent Hamiltonian problems, where the time array provided to mesolve doesn't have t[0]=0, gives unexpected results. This happens both for the list callback format and for the list array ; format. Example [here](https://gist.github.com/asafpm/a86cd9f33f9ec7e5e360c348c1b0506e). Using qutip 3.1.0 and python 2.7",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/561:13,depend,dependent,13,https://qutip.org,https://github.com/qutip/qutip/issues/561,1,['depend'],['dependent']
Integrability,"Some TestDicke tests in `test_piqs.py` (test_lindbladian, test_lindbladian_dims, test_liouvillian) fail with the recent scipy 1.6.1 release. They were previously passing with scipy 1.6.0. **To Reproduce**. ```; $ cp -r qutip/tests/ /tmp/qutip; $ cd /tmp/qutip; $ pytest-3 -v -k ""TestDicke""; ```. The test error message from `TestDicke.test_lindbladian` is; ```; ___________________________________________________________________________________________ TestDicke.test_lindbladian ____________________________________________________________________________________________. self = <tests.test_piqs.TestDicke object at 0x7f55475a0c10>. def test_lindbladian(self):; """"""; PIQS: Test the generation of the Lindbladian matrix.; """"""; N = 1; gCE = 0.5; gCD = 0.5; gCP = 0.5; gE = 0.1; gD = 0.1; gP = 0.1; ; system = Dicke(; N=N,; emission=gE,; pumping=gP,; dephasing=gD,; collective_emission=gCE,; collective_pumping=gCP,; collective_dephasing=gCD,; ); ; > lindbladian = system.lindbladian(). tests/test_piqs.py:450: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; /usr/lib/python3/dist-packages/qutip/piqs.py:509: in lindbladian; return cythonized_dicke.lindbladian(); qutip/cy/piqs.pyx:313: in qutip.cy.piqs.Dicke.lindbladian; ???; qutip/cy/piqs.pyx:431: in qutip.cy.piqs.Dicke.lindbladian; ???; /usr/lib/python3/dist-packages/scipy/sparse/compressed.py:54: in __init__; other = self.__class__(coo_matrix(arg1, shape=shape,; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. self = <[AttributeError('dtype not found') raised in repr()] coo_matrix object at 0x7f55475a0ca0>; arg1 = ([(-0.6000000238418579+0j), (0.6000000238418579+0j), (-0.9000000357627869+0j), (-0.90000003576",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1451:311,message,message,311,https://qutip.org,https://github.com/qutip/qutip/issues/1451,1,['message'],['message']
Integrability,Some updates to the Cython code. Also removed the test scripts for the mcf90 routine as Pull #648 removed the ability to install the module.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/650:77,rout,routine,77,https://qutip.org,https://github.com/qutip/qutip/pull/650,1,['rout'],['routine']
Integrability,Some updates:. 1. All measurements (except the one in the computational basis) have now been moved to qutip/measurement.py. The interface for the previous measurement style (using observables and eigenstates) remains the same. The only difference is that the `measure` and `measurement_statistics` functions now act as dispatch functions that can carry out projective measurements instead when the `op : list of projection operators` ; 2. I have moved all measurement tests to qutip/tests/test_measurement.py as well as moved all measurement tests to pytest style,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-643731499:128,interface,interface,128,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-643731499,1,['interface'],['interface']
Integrability,Something is way off about that test failure again... Is it possible Travis isn't cleaning up properly? I can't reproduce the failure (it's also clearly nothing to do with this change) and the error message doesn't match up. If anything it looks like the error message is coming from a hash collision inside QobjEvo _maybe_?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672:199,message,message,199,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672,2,['message'],['message']
Integrability,Sorry for not getting back to this earlier and thanks a lot for putting the array-based time-dependence in. It works like a charm.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/141#issuecomment-47146087:93,depend,dependence,93,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-47146087,1,['depend'],['dependence']
Integrability,"Sorry for the delay in getting involved in this.; @bencbartlett Thank you for what looks like an excellent contribution.; @sahmed95 Thanks a lot for reviewing this. Personally I am ambivalent about 1 or 2 lines between functions. I just pick people up on it, as I was picked up on it by Rob with my first contribution. I thought pep8 says 1 between function and 2 between classes, but I happy to go with either. Regarding classes...; Yes, class objects could broadly fall into two categories: ; 1. data containers; 2. processing objects. QuTiP has historically used only the first kind.; Personally I am a big believer in the benefits of object-oriented (OO) programming. As can be seen in the control modules I contributed. I won't write an essay on it here, but being able to pass around processors of different kinds, with similar interfaces, has a many benefits. I would like to see all the solvers in QuTiP move to a class structure, as this would allow for some more code re-use, and this helps with maintainability.; Some of the more recent contributions have started using processor type classes, these I think @sahmed95 has already highlighted. If @sahmed95 has recommended an significant advantage of using some class object, then I support this. If it's not a lot of work, then I suggest implement it now. Otherwise I suggest merge now and consider a PR to implement in the near future, as @bencbartlett has waited patiently for us to look at this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-385964143:834,interface,interfaces,834,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-385964143,1,['interface'],['interfaces']
Integrability,"Sorry for the noise, I got what was wrong, it was basically a mistake from my part. I was using a time-dependent hamiltonian written with strings, such as. ```python; H = [H_0, [H_1, 'sin(t)']; ```. and `H_0` and `H_1` had incompatible shapes… :/ Maybe it would be worth adding an extra check on this, to ease debugging? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/761#issuecomment-333949911:103,depend,dependent,103,https://qutip.org,https://github.com/qutip/qutip/issues/761#issuecomment-333949911,1,['depend'],['dependent']
Integrability,"Sorry for the slow response... It seems to me like @Ericgig summed it up pretty concisely. Although I'm not sure I understand how #1123 fits in: what is the plan for `Qobjevofunc`, and how would it fit in to specifying time-dependent Hamiltonians?. The only thing that's ever really bothered me was the mandatory `args` as part of the signature, even if it's not used. That's lead to the need for workarounds like the `allow_args` parameter in; https://github.com/qucontrol/qdynpylib/blob/f7b54af3e586683cdfd9b3dd666c5cf540d843e1/src/qdyn/pulse.py#L555. If there's a future `f(t)` option, I should be happy. In the abstract, `f(t, **args)` and `f(t, state_vec, **args)` would be the most elegant, but if there's a severe performance hit, that could be a problem. I'm surprised, though: I would have thought that `f(t, **args)` and `f(t, args)` should be almost the same thing in the Python internals, since you can modify `args` inside of `f` and pass it to lowerlevel function as `**args` again. Even from the user's perspective any current code with signature `f(t, args)` could have its signature replaced with `f(t, **args)` without requiring any change to the function body. But I'm clearly missing something. Can you point me to lines in the code where this becomes a bottleneck?. I'm also quite in favor of introspection to accept a wide variety of signatures: you can even introspect argument names, so the possibilities are endless. The introspection is probably slow, but if it only has to be done in a very high level function, that might be alright.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1136#issuecomment-562812696:224,depend,dependent,224,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562812696,1,['depend'],['dependent']
Integrability,"Sorry.. got a little distracted, and wanted to check the contributing guidelines on what branch to make the pull request against. Currently it’s master. Is that ok? If yes, I’ll undraft it. Draft PRs are pretty new, and a very nice way to kick off the Continuous Integration. Like in this case, I wanted to check if any of the tests involve that message. As they don’t, this actually is ready to go.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1049#issuecomment-513872964:263,Integrat,Integration,263,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513872964,2,"['Integrat', 'message']","['Integration', 'message']"
Integrability,"Sounds good to me. Yeah, even if `packaging` _were_ in `setuptools`, it'd still be an explicit dependency of ours, so you're right to put it in, thanks. Yeah, that coveralls thing just looked like a network timeout on their side. Not the fault of this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1715#issuecomment-973127486:95,depend,dependency,95,https://qutip.org,https://github.com/qutip/qutip/pull/1715#issuecomment-973127486,1,['depend'],['dependency']
Integrability,"Status: Completed.; - New functions for parallelization: parallel_map in parfor module (using multiprocessing) and ipynbtools module (using IPython.parallel). These functions are designed to be as general as possible, and to support the qutip.ui.progressbar interface for displaying progress.; - They will be used to parallelize solvers in qutip.stochastic ; - Perhaps qutip.mcsolve could use this interface too, sometime in the future, instead of rolling its own parallelization using multiprocessing.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/253:258,interface,interface,258,https://qutip.org,https://github.com/qutip/qutip/pull/253,2,['interface'],['interface']
Integrability,Steadystate function for a time-dependent Hamiltonian,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1377:32,depend,dependent,32,https://qutip.org,https://github.com/qutip/qutip/issues/1377,1,['depend'],['dependent']
Integrability,Stochastic solver using v5 class interface,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131:33,interface,interface,33,https://qutip.org,https://github.com/qutip/qutip/pull/2131,1,['interface'],['interface']
Integrability,Strange behavior of mesolve for a time depended problem in the presence of collapse operators,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771:39,depend,depended,39,https://qutip.org,https://github.com/qutip/qutip/issues/771,1,['depend'],['depended']
Integrability,"String format coefficients (`'sin(w * t)' ` in H) which use cython for compilation often fails on windows. Using functions instead work better.; ```; def f(t,args):; return sin(args[""w""]*t); H = [H0, [H1, f]]; ```; Here there is also an error in the error message, we will fix that bug soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1207#issuecomment-600826564:256,message,message,256,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-600826564,1,['message'],['message']
Integrability,"String-based QobjEvo generates several warning messages when it is compiled. The terminal is overwhelmed by those messages when using string-based solvers. Is it possible to suppress/correct them?. Example:; ```python; import numpy as np; from qutip import *; tlist = np.array([0., 1., 2., 3.]); H = [[sigmaz(), 'exp(-t)']]; qu = QobjEvo(H, tlist=tlist); qu.compile(); ```. Terminal output:; ```; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_4851660043300.cpp; c:\users\boxi\miniconda3\envs\qutip-dev-py3\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; cqobjevo_compiled_coeff_4851660043300.obj : warning ; LNK4197: export 'PyInit_cqobjevo_compiled_coeff_4851660043300' specified multiple times; using first specification; Creating library C:\Users\Boxi\.pyxbld\temp.win-amd64-3.6\Release\Users\Boxi\.pyxbld\temp.win-amd64-3.6\Release\pyrex\cqobjevo_compiled_coeff_4851660043300.cp36-win_amd64.lib and object C:\Users\Boxi\.pyxbld\temp.win-amd64-3.6\Release\Users\Boxi\.pyxbld\temp.win-amd64-3.6\Release\pyrex\cqobjevo_compiled_coeff_4851660043300.cp36-win_amd64.exp; Generating code; Finished generating code; ```. Environment:; ```; QuTiP Version: 4.5.0.dev0+0f412cd4; Numpy Version: 1.17.5; Scipy Version: 1.2.1; Cython Version: 0.29.14; Matplotlib Version: 2.2.4; Python Version: 3.6.7; Number of CPUs: 12; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1190:47,message,messages,47,https://qutip.org,https://github.com/qutip/qutip/issues/1190,2,['message'],['messages']
Integrability,"Supporting both int32 and int64 requires modifying much of the QuTiP internals. Not difficult, but will requires a lot of work. . What your willing to accept depends on you. I would look at what the output density matrices look like. If they are mainly non-zeros, then there is not much to do. One could write a lower-order ODE at makes fewer copies. If the density matrices are mostly sparse, then there might be some benefit of having a ODE solver with sparse vector. That would not be as general, and would need to be written by hand.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/845#issuecomment-379746564:158,depend,depends,158,https://qutip.org,https://github.com/qutip/qutip/issues/845#issuecomment-379746564,1,['depend'],['depends']
Integrability,"Sure, but I suppose I meant: are you planning to integrate that process in the ODE passed to the scipy integrator?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/525#issuecomment-249344184:49,integrat,integrate,49,https://qutip.org,https://github.com/qutip/qutip/pull/525#issuecomment-249344184,2,['integrat'],"['integrate', 'integrator']"
Integrability,Swappable ODE integrators.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643:14,integrat,integrators,14,https://qutip.org,https://github.com/qutip/qutip/pull/1643,1,['integrat'],['integrators']
Integrability,Synchronize `dev.major`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2470:0,Synchroniz,Synchronize,0,https://qutip.org,https://github.com/qutip/qutip/pull/2470,1,['Synchroniz'],['Synchronize']
Integrability,Tensor product of time dependent collapse operators,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1183:23,depend,dependent,23,https://qutip.org,https://github.com/qutip/qutip/issues/1183,1,['depend'],['dependent']
Integrability,"Test ""mesolve: time-dependence as string list"" fails with clang compiler",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/411:20,depend,dependence,20,https://qutip.org,https://github.com/qutip/qutip/issues/411,1,['depend'],['dependence']
Integrability,"Thank you Eric, this must have been a lot of work. I haven't had time yet to look at it in full detail, but I have a few preliminary comments / questions:; * Having the no-jump trajectory not count towards the `ntraj` seems like a good idea to me. In particular the handling of the seeds becomes much more sane.; * Also the change of having the weights part of the multi-result instead of the the trajectory-results makes a lot of sense in hindsight.; * What is the reason that the time-dependent weights are still part of the trajectory result? That seems a bit inconsistent to me and I wonder if the `TrajectoryResult` class could perhaps just be removed?; * We now have three names for more-or-less the same concept, ""no jump"", ""deterministic"" and ""absolute"". I guess the ""no jump"" name is used within the mcsolve module, which is fine. In the multitrajresult module, perhaps we could use either ""deterministic"" or ""absolute"" always? (Out of those, I would probably prefer ""deterministic"")",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2502#issuecomment-2295659950:487,depend,dependent,487,https://qutip.org,https://github.com/qutip/qutip/pull/2502#issuecomment-2295659950,1,['depend'],['dependent']
Integrability,"Thank you Jake for taking a quick look!; I checked once more and the following produces an error (used in an ""empty"" virtual environment):; ```; > pip install setuptools wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0'; > python setup.py develop. Traceback (most recent call last):; File ""/home/kaladin/Documents/git/qutip/qutip4/setup.py"", line 13, in <module>; import packaging.version; ModuleNotFoundError: No module named 'packaging'; ```; So I think `packaging` it is not included with `setuptools`. . > `requirements.txt` has no special meaning at all so it doesn't really matter,; Lets not add wheels and setuptools to the requirements then. Updating it with the latest dependency versions in setup.cfg dependencies should be fine though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1715#issuecomment-973123214:687,depend,dependency,687,https://qutip.org,https://github.com/qutip/qutip/pull/1715#issuecomment-973123214,2,['depend'],"['dependencies', 'dependency']"
Integrability,"Thank you for doing this quickly, I guess you did until quite late. Yes, tests in `test_integrator` are parameterized over all integrators registered in `sesolve_integrators`, etc.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643#issuecomment-925428011:127,integrat,integrators,127,https://qutip.org,https://github.com/qutip/qutip/pull/1643#issuecomment-925428011,1,['integrat'],['integrators']
Integrability,"Thank you for reporting.; The feedback interface changed a few times (and will change in future version.); The documentation in guide is wrong, but the apidoc should be up to date.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1538#issuecomment-1398778915:39,interface,interface,39,https://qutip.org,https://github.com/qutip/qutip/issues/1538#issuecomment-1398778915,1,['interface'],['interface']
Integrability,"Thank you for reporting.; There seems to be an issue with our detection of mkl for a while.; Since it's an optional dependancy, the related tests have been quietly skipped for a while... You could probably manually import it until we make a patch:; ```; from ctypes import cdll; import sys; import os. qutip.settings._mkl_lib = cdll.LoadLibrary( os.path.dirname(sys.executable) + r'\Library\bin\mkl_rt.dll' ); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2496#issuecomment-2243309367:116,depend,dependancy,116,https://qutip.org,https://github.com/qutip/qutip/issues/2496#issuecomment-2243309367,1,['depend'],['dependancy']
Integrability,"Thank you for the comments! . Also, as someone who uses QuTip on a daily basis as part of my work, I was really happy with the changes and restructuring of the solver module. Thank you for the work 😄 . If I may take this opportunity to ask two things:; * I have been looking on Qutip 4.7 for ways to speed up the mc solver simulations, and one of them was to not compute the average density matrix for all times, but only for the last time. Since the behaviour at 4.7 of `mcsolve` was to average the state anyways (despite what I passed on the options object), I found a workaround by having an independent list to create my time dependant Hamiltonian and the `tlist` argument of the solver. Is this something achievable more straightforwardly/differently in Qutip 5.0?; * (shorter): Is there a roadmap for when will Qutip 5.0 be released?. Thank you for your time, and I hope its fine me asking here 😆",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1571077559:630,depend,dependant,630,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1571077559,1,['depend'],['dependant']
Integrability,"Thank you for the explanation @phfaist. I don't know the answer unfortunately. There are upcoming developments in quantum tomography with QuTiP, including recently added [notebooks](https://github.com/qutip/qutip-notebooks/pull/79), that warrant looking into this library integration further. . Besides this, regarding cvxpy, the package is now actively maintained also on conda forge https://anaconda.org/cvxgrp/cvxpy/files?page=1, we could add a check in the test failures to the to-do list...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-500419184:272,integrat,integration,272,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-500419184,1,['integrat'],['integration']
Integrability,Thank you for the fix! I tested it locally and I was able to reproduce the error in #1753 and confirm it is fixed with this PR. `qutip.about()` also returns same message locally (not sure where it is tested if it is tested). It seems that CI was not complaining because we do not test for numpy 1.22 yet (although build requirements do install latest numpy version) but I think @hodgestar plans to include numpy 1.22 in the CI soon (see comments in #1747). I hope this PR can be merged soon as tests in PR qutip/qutip-tensornetwork#10 are failing due to `qutip.about()` not working with numpy 1.22.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1752#issuecomment-1005999347:162,message,message,162,https://qutip.org,https://github.com/qutip/qutip/pull/1752#issuecomment-1005999347,1,['message'],['message']
Integrability,"Thank you for your prompt reply. @sahmed95. QuTip was installed on Windows; ```; pyhton 3.6.4; ```; We download anaconda and install QuTip from conda-forge with; ```; conda install -c conda-forge qutip; ```; but when run ; ```; import qutip.testing as qt; qt.run(); ```; the following message occurred:; ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.3; Scipy Version: 1.0.0; Cython Version: 0.27.3; Matplotlib Version: 2.1.2; Python Version: 3.6.4; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Anaconda3\lib\site-packages\qutip. DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transf",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:285,message,message,285,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,1,['message'],['message']
Integrability,"Thank you!, it does work. But there is another problem regarding solving time-dependent Hamiltonian evolution in qutip-jax:; ```; import qutip as qt; import numpy as np; import qutip_jax; import jax; from math import pi; from diffrax import diffeqsolve, ODETerm, Dopri5, PIDController; sequence = np.linspace(0, 100, 100); wq = 2. * 2 * pi; g = 0.05 * 2 * pi. with qt.CoreOptions(default_dtype=""jaxdia""):; H0 = -0.5 * 2. * qt.sigmaz() + g * qt.sigmax(); H = [H0, [-0.5 * qt.sigmaz(), sequence]]; psi0 = qt.basis(2, 0); psi1 = qt.basis(2, 1); proj0 = psi0 @ psi0.dag(); proj1 = psi1 @ psi1.dag(); expect_ops = [proj1]; times = np.linspace(0, 100, 100); psi_init = psi1; options = {; ""method"": ""diffrax"", ; ""normalize_output"": False,; ""stepsize_controller"" : PIDController(rtol=1e-5, atol=1e-5),; ""solver"": Dopri5(); }; # result = mesolve(H, psi_init, times, e_ops=expect_ops); result = mesolve(H, psi_init, times, e_ops=expect_ops, options=options); ```; And this will give:; ```; TypeError Traceback (most recent call last); [<ipython-input-63-2fb6110bc952>](https://localhost:8080/#) in <cell line: 21>(); 19 }; 20 # result = mesolve(H, psi_init, times, e_ops=expect_ops); ---> 21 result = mesolve(H, psi_init, times, e_ops=expect_ops, options=options). 20 frames; [... skipping hidden 15 frame]. [... skipping hidden 1 frame]. [... skipping hidden 14 frame]. [... skipping hidden 1 frame]. [... skipping hidden 9 frame]. [... skipping hidden 2 frame]. [... skipping hidden 1 frame]. [... skipping hidden 1 frame]. [... skipping hidden 5 frame]. [/usr/local/lib/python3.10/site-packages/jax/_src/api_util.py](https://localhost:8080/#) in _shaped_abstractify_slow(x); 586 dtype = dtypes.canonicalize_dtype(x.dtype, allow_extended_dtype=True); 587 else:; --> 588 raise TypeError(; 589 f""Cannot interpret value of type {type(x)} as an abstract array; it ""; 590 ""does not have a dtype attribute""). TypeError: Cannot interpret value of type <class 'qutip.core.cy.coefficient.InterCoefficient'> as an abstr",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2320#issuecomment-2092884561:78,depend,dependent,78,https://qutip.org,https://github.com/qutip/qutip/issues/2320#issuecomment-2092884561,1,['depend'],['dependent']
Integrability,Thank you. The checks fail with this message `ERROR: Husimi Q: Compare with/without precomputation for rand. ket`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-541546142:37,message,message,37,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-541546142,1,['message'],['message']
Integrability,Thanks @PierreGuilmin!. I made the changelog message a bit more detailed and will merge now.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1964#issuecomment-1200402896:45,message,message,45,https://qutip.org,https://github.com/qutip/qutip/pull/1964#issuecomment-1200402896,1,['message'],['message']
Integrability,"Thanks @nonhermitian for taking a look. I understand that the general way of doing things in QuTiP would be something like; ```python; mesolve(H, rho0, tlist, c_ops, e_ops, ..); ```; which returns a `Result` object:; ```; An instance of the class :class:`qutip.Result`, which contains; either an *array* `result.expect` of expectation values for the times; specified by `tlist`, or an *array* `result.states` of state vectors or; density matrices corresponding to the times in `tlist` [if `e_ops` is; an empty list], or nothing if a callback function was given in place of; operators for which to calculate the expectation values.; ```; So, we could probably have a new solver wrapper called `pisolve` which works as:; ```; model = Pim(N, emmision, pumping); pisolve(model, rho0, tlist, ...); ```; The Hamiltonian does not change here I think, so instead of passing that, the user could pass an instance of a Pim object describing the particular system (N, emission, ...) and this new solver could return a `Result` object. I will discuss this with @nathanshammah and get back on how we can have the API similar to the other QuTiP solvers as this is slightly different from the standard master equation solving.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-332424552:677,wrap,wrapper,677,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-332424552,1,['wrap'],['wrapper']
Integrability,Thanks @nonhermitian. I will add the other check.; Its not immediately apparent to me what I can do with zcsr_mult to optimise things. Do you mean have a routine like (pseudo code?):; ```; zcsr_mult_adj(A):; return A*A.dag(). ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/817#issuecomment-364409039:154,rout,routine,154,https://qutip.org,https://github.com/qutip/qutip/pull/817#issuecomment-364409039,1,['rout'],['routine']
Integrability,"Thanks Chris,; This seems like a useful addition. I have taken a quick look at the code, and it seems like it is fairly independent, and so could be merged with little risk. The interface seems good, so I can't see any issues immediately. . Are you planning to do a notebook example?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/358#issuecomment-127953580:178,interface,interface,178,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-127953580,1,['interface'],['interface']
Integrability,"Thanks Jake this is brilliant. This conveniently lets us construct the displacement operator repeatedly for new alphas with the one-time cost incurred in the beginning to solve the eigenvector problem. I think if we fix the Hilbert space cutoff in the beginning of a calculation, this should be fine. Actually, the reason why my colleagues (and even myself) are interested in this is to let optimisation routines run on a series of displacement operations. I suppose now it will become easier to compute gradients wrt ""alpha"" using some automatic differentiation tool such as Jax which was previously kind of complicated : https://github.com/google/jax/pull/2062",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1293#issuecomment-646090490:404,rout,routines,404,https://qutip.org,https://github.com/qutip/qutip/issues/1293#issuecomment-646090490,1,['rout'],['routines']
Integrability,"Thanks all, I am new to this and I apologise for the extra help required. Here is the plot. Just FYI, the function ""matrix_histogram"" is much more robust than; ""matrix_histogram_complex"", and has cbar_pad as an option. It may be better; in the long run to base the complex version on the ""matrix_histogram""; function.; [image: image.png]. On Wed, 28 Jun 2023 at 09:00, Yuji TAMAKOSHI ***@***.***>; wrote:. > @SJUW <https://github.com/SJUW> Hi. Can you show me a plot? I want to see; > that your change is better.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/2181#issuecomment-1610330125>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/A3KQ4AJKUOCE7MJK42H7APDXNNQYLANCNFSM6AAAAAAZTS45QQ>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2181#issuecomment-1610360194:825,Message,Message,825,https://qutip.org,https://github.com/qutip/qutip/pull/2181#issuecomment-1610360194,1,['Message'],['Message']
Integrability,"Thanks both @jakelishman and @hodgestar for your comments! I agree that I may be depending too much on the classes in `qutip.tests.core.data` to do the testing both in qutip-tensorflow and qutip-tensornetwork. I myself was worried of ""who is going to tests the tests"" if this trend continued with other packages. Reusing the `qutip.tests.core.data`'s code though helps to speed things up in the development process and also allows QuTiP to strictly define what each specialisation is meant to do. . As you mentioned above, I think it would be best to create a `qutip.core.data.testing` module where all the classes for testing are implemented. Then these classes could be tested to ensure that the proper tests are created and these classes ca be used by both QuTiP and downstream packages. I do not have time for this now but I will come to this later, so lets keep this PR open to discuss any ideas!. ----. > the data layer tests should really discover the specialisations rather than us needing to specify them (this is true regardless of this PR). I am not sure about this one. Automatic discovery of tests for specialisations seems to lead to very restricted flexibility in how tests are parametrized. For instance, I needed to change the `rtol` to accommodate the tests for the complex64 data layer in qutip-tensorflow and I am not sure how this could be added automatically. . Also, as @hodgestar mentioned today, you probably want to be explicit on adding tests so that you are confident that those tests are running. Otherwise you need to constantly check the log to ensure the proper tests are running. . Another thing is that by being explicit on what is tested, you could assert if the tested specialisation has not been registered (which actually happened to both qutip-cupy and qutip-tensorflow before: specialisations where being tested but, surprisingly, they were not registered).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-981550356:81,depend,depending,81,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-981550356,1,['depend'],['depending']
Integrability,"Thanks for looking deeply into it. It's good to know the cause. We shouldn't remove support for SciPy 1.4 unless we _absolutely_ have to. Most users won't use matrices that large so won't be affected, and SciPy 1.5 is only a year old which is too recent to be a requirement in an academic setting. We should maintain at least a 2-year dependency window (like NumPy). Any constraints we make on allowable versions affect any packages downstream of us as well, so we want to try and stay as permissive as possible, as long as there's not new features that we absolutely must have. We already have mechanisms for working around an unstable `eigh` implementation because of problems with mac OpenBLAS `zheevr` in some cases, so we can add in this additional test when setting `eigh_unsafe` in our initialisation. The principle is that we decay to using the general-purpose `eig`, and include a specific orthonormalisation step to stabilise the eigensystem afterwards. This code is already in `qutip/sparse.py`, so it shouldn't be too hard to add an extra condition in `qutip/__init__.py`. Could you also test if the issue is also confined to MKL, or if it persists in OpenBLAS with SciPy 1.4 as well? We lose precision when swapping down to `eig` in place of `eigh`, so it's good to confine the switch to the minimum known-bad set.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-818719109:335,depend,dependency,335,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-818719109,1,['depend'],['dependency']
Integrability,"Thanks for pointing this out.. I had a quick play around, this seems to be some overhead from the normalization flag in mesolve. In v5 if I use ` options = {""normalize_output"": False}` I see basically same runtimes as v4.7. we should probably think about making this default to false if its having such a big cost. To make it really ""like for like"" you can also wrap it so that it uses CSR format for everything . ```; with qt.CoreOptions(default_dtype=""csr""):; kwargs = init(); options = {""normalize_output"": False}; %timeit qt.mesolve(**kwargs, options = options); ```. Which data-type is best for is a bit problem dependent. let us know if this gives you comparable results!. On the topic of dynamiqs, you might be interested in trying out the jax/jaxdia data layer, there's some examples here ; https://github.com/nwlambert/QuTiP-Jax-GPU-example. We also tried this example with dynamiqs (with its double precision setting), I think you guys came out slightly ahead speed-wise because I think you dont vectorize/use superoperators, which seems to suit jax/diffrax! though if i did that manually with qutip we essentially get the same, which I guess makes sense. The jaxdia data layer lets us go to a few more spins (more with sesolve, not so many with mesolve!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2406#issuecomment-2074966338:362,wrap,wrap,362,https://qutip.org,https://github.com/qutip/qutip/issues/2406#issuecomment-2074966338,2,"['depend', 'wrap']","['dependent', 'wrap']"
Integrability,"Thanks for reporting this. This is actually a bit of a concern - as far as I know none of the developers have the new ARM chips (or even macOS 11) and I don't know how long it'll be until CI servers have them, so there may be more bugs lurking for you. Please let us know if you have any more problems, especially building from source or string-format time-dependence - I'd expect those to be the most fragile to new kernel and hardware changes. @ajgpitch This is actually going to be a nuisance for distributing wheels too. I _think_ GH actions will have the necessary Xcode 12 support, but I'm not sure the multi-wheel tool I'm using does - the new Apple silicon is ARM not x86 so it needs different compilation. We may not be able to support M1 macs in binary releases initially.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1395#issuecomment-735863085:357,depend,dependence,357,https://qutip.org,https://github.com/qutip/qutip/issues/1395#issuecomment-735863085,1,['depend'],['dependence']
Integrability,"Thanks for testing it. Macports still have some advantages over pip, since it supports dependencies on non-python packages. I'm not sure if installing qutip via pip from on a fresh system will resolve all dependencies properly (will have to test this more carefully before next qutip release). Homebrew looks interesting from this point of view (I don't like that everything has to be built from source with macports..) but it is a bit unfortunate that not all qutip dependencies are in the standard homebrew repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/62#issuecomment-27496281:87,depend,dependencies,87,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27496281,3,['depend'],['dependencies']
Integrability,"Thanks for the bug report and the detailed look into it! As a temporary work-around, in file `qutip/cy/piqs.pyx`, change lines 431 to 433 https://github.com/qutip/qutip/blob/2aaae75d3ba52067f747dd928d67d66307fc5de9/qutip/cy/piqs.pyx#L431-L433 to; ```cython; cdef lindblad_matrix = csr_matrix((lindblad_data,; (lindblad_row, lindblad_col)),; shape=(nds**2, nds**2),; dtype=np.complex128); ```; and recompile. If you want to make a PR of something similar against QuTiP, I'll accept it. I would actually file this against `scipy.sparse` - I think our usage is completely in line with the contract of `scipy.sparse.csr_matrix` and they've got a bug in their dtype handling. You currently can't construct a CSR matrix using the COO triplet format for complex data, unless the dtype is made explicit _somewhere_, but the constructor is meant to correctly infer a suitable dtype if one is not passed. Basic Scipy reproducer to illustrate the problem:; ```python; >>> import scipy.sparse; >>> scipy.__version__; '1.6.1'; >>> scipy.sparse.csr_matrix(([1+1j], ([0], [0])), shape=(2, 2)); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/scipy/sparse/compressed.py"", line 54, in __init__; other = self.__class__(coo_matrix(arg1, shape=shape,; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/scipy/sparse/coo.py"", line 161, in __init__; self.data = np.array(obj, copy=copy, dtype=data_dtype); TypeError: can't convert complex to float; ```. This can be fixed either by passing `dtype=np.complex128` to the constructor, or passing the data inside a NumPy array, since that'll also fix the dtype. I imagine with their implicit conversions, SciPy may also need to test the special cases where all list elements are things like `1+0j`, which have type `complex` but can be safely represented by reals - the Python call `float(1 + 0j)` is forbidden even though the imaginary part is 0. I actually ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1451#issuecomment-784265398:586,contract,contract,586,https://qutip.org,https://github.com/qutip/qutip/issues/1451#issuecomment-784265398,1,['contract'],['contract']
Integrability,"Thanks for the clue, it was helpfull.; The source of problem is localization of `lscpu` util, which used by `_linux_hardware_info()` function.; The function expects `'Socket(s)'`, `'Core(s) per socket'`, etc in `lscpu` output, but in my system it actually `'Потоков на ядро'`, `'Сокетов'`, etc.; I think, maybe better less system dependent ways to calculate cpu count, for example, we could use `multiprocessing` module and it's `cpu_count` function. Or `len(os.sched_getaffinity(0))`for computers with dynamic cpu management (see [this](https://stackoverflow.com/questions/31346974/portable-way-of-detecting-number-of-usable-cpus-in-python) for details).; Or show exception/error, if we try to use lscpu and `LANG` is not english (or we couldn't found mentioned above `'Socket(s)'`).; Ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1004#issuecomment-497325045:330,depend,dependent,330,https://qutip.org,https://github.com/qutip/qutip/issues/1004#issuecomment-497325045,1,['depend'],['dependent']
Integrability,Thanks for the comment and sorry for the typo. I corrected it. The issue still persists. I also updated [the question](https://quantumcomputing.stackexchange.com/questions/22187/qutip-vs-rk45-which-one-gives-the-correct-results-for-time-dependent-systems) on stack exchange.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986660625:237,depend,dependent-systems,237,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986660625,1,['depend'],['dependent-systems']
Integrability,"Thanks for the interest! To be clear, I wasn't trying to suggest that the whole thing is in scope for QuTiP per se; this PR concerns calling a small one-file [client library](https://github.com/cgranade/tskmon-client) from QuTiP. Given the similarity with that and the PiCloud functionality's goal (integrate QuTiP with third-party web services), maybe a good architecture would be something like a `qutip.services` package, where the expectation is that each submodule would require some additional client library?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/255#issuecomment-63312872:299,integrat,integrate,299,https://qutip.org,https://github.com/qutip/qutip/pull/255#issuecomment-63312872,1,['integrat'],['integrate']
Integrability,"Thanks for the quick reply! . > Should it raise a warning for users that tries to access each trajectories? Or add a note in the docstring? The trajectories would look strange if you don't read the documentation.; > ; Maybe, though I'm not sure why they would look strange? It's possible a user could get confused if they don't see any no-jump trajectories other than the first one, but hopefully they wouldn't be confused if they set the flag to use this algorithm. > I am wondering if `MCSolverImprovedSampling` could be merged in `MCSolver`. I am not a fan of having `mcsolve` use 2 different solvers and it should be accessing by the new class interface. Another options would be that make `MCSolverImprovedSampling` public and add a new function to call it `mcissolve`?; > ; Yeah this might be the way to go. I only had it the way I did to have `MultiTrajSolverImprovedSampling` get inherited before `MCSolver` so that the functionality there gets used and also have `resultclass = McResultImprovedSampling`. We could do a conditional inheritance in `MCSolver`, but I'm worried that might be messy/ugly?. > I would prefer that you revert the changes made by black. It add a lot of changes that are unrelated to the new feature and makes reviewing the PR annoying. Also we use the pep8 line width of 80 instead of black's 88. For now, we mostly use black in new code and adding black to existing file should be their own PR.; >; Sorry about that, will revert",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2218#issuecomment-1687054681:648,interface,interface,648,https://qutip.org,https://github.com/qutip/qutip/pull/2218#issuecomment-1687054681,1,['interface'],['interface']
Integrability,"Thanks for the quick reply.; Will this error affect other examples and notebooks present on the website where a spectra_cb is needed? Because right now I'm trying to run this example ( https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/brmesolve-time-dependent-Liouvillian.ipynb ) and the code hungs on the 8th cell, from the Jupyter terminal I get the following message; ```AttributeError: Can't get attribute 'brme_step' on <module '__main__' (built-in)>```. Conda env is the same as the above.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223#issuecomment-605704959:279,depend,dependent-Liouvillian,279,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605704959,2,"['depend', 'message']","['dependent-Liouvillian', 'message']"
Integrability,"Thanks for the quick response @bencbartlett. . Feel free to ignore the comments regarding the shortening of arguments. That was just a suggestion to make things shorter. But as you said clarity is more important. I will not change `waveguide` to `wg` and I think you should leave the others as they are if you can't think of shorter ones. Same applies to the `temporal_basis_vector`. I think you can even add a `temporal_basis` as you mentioned. Regarding the double line breaks wrapping top-level functions, I know the pep8 standard is two newlines but some other QuTiP modules follow just a single line break, e.g., [floquet](https://github.com/qutip/qutip/blob/master/qutip/floquet.py). But again some other modules in QuTiP follow the pep8 standard and wrap two newlines for top-level functions. I am in favor of the pep8 standard and have two newlines. @ajgpitch what do you suggest?. Please remove the helper function `count_filled` without the test if it is not required. We aim to test as much as possible and remove redundancy in code. About `__all__`, I will shift all the rest in a new PR and we can keep yours as it is now. Coming to the more important discussion regarding the `class` based implementation, I have started pushing for similar approaches in newer modules such as [qutip.models.piqs](https://github.com/qutip/qutip/blob/master/qutip/models/piqs.py). I am also working on a new non-Markovian method which requires a class. Something of that sort is already used in `qutip.nonmarkov.heom`. I understand that many of qutip's solvers are written to be isolated functions but that should not mean that we should not write code to fully use the object oriented framework Python provides. Moreover, I noticed that you have to rewrite wrappers for the functions anyways to deal with repeatedly calculating things such as `scattering_probability` which clearly can be made much more compact if we use a class based approach. I am not making this suggestion just for the minor perform",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-384860713:479,wrap,wrapping,479,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-384860713,2,['wrap'],"['wrap', 'wrapping']"
Integrability,"Thanks for the quick review. I hadn't seen the scipy.interp1d approach to time-dependence yet, and it seems a good way. However, it still involves a (potentially costly?) python function callback which is not required in my approach. Not sure how much that matters, so it would be very nice to compare speed. As for tensor, I would expect it to do the same as tensor([Qobj(...)]), which I _think_ is what it used to do.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/141#issuecomment-44606063:79,depend,dependence,79,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44606063,1,['depend'],['dependence']
Integrability,"Thanks for the review!. > * Should we stop the user from passing a list of kets to `mcsolve` directly?; > Presently it work but it's not documented (and list `ntraj` don't.). You are right, done. Of course we could also allow the same arguments for `mcsolve` as for `run`, but I thought it might be good to keep the `mcsolve` interface simpler. > * It would be nice to have the trajectories per initial state information stored in the result somewhere. I have added that information and checking it in a test. Edit: I forgot that I still haven't updated the docs. Will do that. Edit 2: Done",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2437#issuecomment-2149017143:326,interface,interface,326,https://qutip.org,https://github.com/qutip/qutip/pull/2437#issuecomment-2149017143,1,['interface'],['interface']
Integrability,"Thanks for the useful feedback, both here and in PR #1611 ! From the discussion in PR #1611 it seems that the second option with the modifications proposed by Jake in this issue seems to be the most sensible approach. Hence, if there are no objections, I will open a PR (which I will probably do tomorrow) where I implement the following changes (adapted from Simon's comment in PR #1611):. - `Qobj.__mul__(self, other) ` ; - dispatch to `data.matmul` if `other` is a `Qobj`; - dispatch to `data.mul` otherwise which will return `NotImplemented` if it does not know how to handle `other`. ; - `Qobj.__rmul__(self, other) `:; - Dispatch to `data.mul` (`other` will never be a Qobj): Notice that in this way both left and right multiplication will behave in the same way. This would also ""solve"" the inconsistency PR #1611 was trying to solve but this time `data.mul` will handle it and will raise NotImplemented whenever required. . - `mul_dense` and `mul_csr`:; - Use a thin wrapper that returns `NotImplemeneted` if input is not a complex python scalar. There are a few things I would like to discuss before opening a PR:; 1) These changes will break backwards compatibility as:; ```python; matrix = np.random.random((2, 2)); qobj = qutip.Qobj(array). qobj * matrix # With the changes this also returns NotImplemented.; matrix * qobj # With the changes this also returns NotImplemented; ```; will now behave consistently (""fixes"" PR #1611). Is this acceptable? I would say yes given that we are doing a major version change. However, it may be a good idea to start raising a deprecation warning in QuTiP 4 if these changes go forward. 2) `data.add` has a similar behaviour to `data.mul` in that it accepts `scale` which is not a `Data` (there are a few more specialisations that also accept an argument that is not a `Data`). Should these specialisations behave in the same way allowing arbitrary python objects as ""scale"" and raise NotImplemented when required or should they just allow a complex py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1607#issuecomment-883317473:975,wrap,wrapper,975,https://qutip.org,https://github.com/qutip/qutip/issues/1607#issuecomment-883317473,1,['wrap'],['wrapper']
Integrability,Thanks for your contribution. I have merged your changes together with other an implementation of the simplified array-based time-dependence format discussed above in PR #162.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/141#issuecomment-46521430:130,depend,dependence,130,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-46521430,1,['depend'],['dependence']
Integrability,"Thanks for your suggestion! I tried to increase the sub-steps, but the optimal (a tradeoff between precision and speed) `nsubsteps` is very sensitive to the parameter of the Hamiltonian (bias). To simulate a time-dependent bias, I have to set an extremely large `nsubsteps` then practical unable to complete. Mcsolve works perfect for this setup, but I also want to add some extra c_ops later. I would like to ensure if the `nsubsteps` is the only way to control the precision? If so, I will make things simpler and use mcsolve.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1357#issuecomment-691302246:213,depend,dependent,213,https://qutip.org,https://github.com/qutip/qutip/issues/1357#issuecomment-691302246,1,['depend'],['dependent']
Integrability,"Thanks very much @Ericgig for preparing this!. I feel like it will be quite confusing if gates like `cnot` have different signatures than the ones in qutip-qip. Moreover, many of those gates/transformations are not only relevant to `qip`, but also used in other applications, so maybe we should keep more of them in the main qutip. One of the reasons that we want to include those gates into `qutip.operators` is because a few other downstream packages (e.g. `krylovsolver` that is now merged into qutip, and `qutip-tensornetwork` also uses Hadamard transform) also use them for testing (only) purposes. Having them in the main qutip may save them from depending on qutip-qip. I guess it would be better if we either; - Remove all qip and only define a few `_cnot`, `_swap` as private functions for testing inside the main qutip. And ask whoever else wants to use some gates to install `qutip-qip`. This may result in e.g. `qutip-tensornetwork` depending on `qutip-qip or having to implement a copy of some gates. or; - Include some more commonly used gates like `rx`, `ry` (they are unitaries generated by the Paulis and directly relevant to quantum control) `iswap` etc and keep them identical to the ones in qutip-qip, so that those who just want some gates for testing does not have to download the full qutip-qip. If the problem is the `qutip.qip.expand_operator`. I would argue that we can even include it into the main qutip. It is `tensor` + `permutation` and works not just for qubit systems, but also for other composite Hilbert spaces (provided a `dims`). It is quite handy not just for `qip`, but also for control and probably some other applications. What do you think?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1890#issuecomment-1120403103:653,depend,depending,653,https://qutip.org,https://github.com/qutip/qutip/pull/1890#issuecomment-1120403103,2,['depend'],['depending']
Integrability,"Thanks victor!  My main worry as it stands is that, as I mentioned in the previous issue, this fix, on its own, introduces an unwanted additional error for the case with a time-dependent Hamiltonian, as then that time dependence essentially gets shifted twice, once by the H_shifted change, and once again by adding tlist[idx] to tau_list. ; This case of a time-dependent H could do with a test as well I guess. . This can be easily remedied by completely omitting the old method of shifting the time-dependence (e.g., using H and c_ops instead of H_shifted and c_ops_shifted in the call to mesolve(), for example).    But I am a little concerned that the the old method of shifting the time-dependence in H_shifted and C_ops_shifted was there for a reason.  @Ericgig any thoughts?. As an aside, I guess _correlation_mc_2t()  also needs a fix, but maybe better to do that in a separate issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1929#issuecomment-1153462129:177,depend,dependent,177,https://qutip.org,https://github.com/qutip/qutip/pull/1929#issuecomment-1153462129,5,['depend'],"['dependence', 'dependent']"
Integrability,Thanks! I wasn't sure if this was something which should have been caught or dealt with in qutip (rather than thrown in scipy) since the exception doesn't **immediately** tell one the underlying cause. (Perhaps through throwing a specific message indicating that the data type should be changed).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/613#issuecomment-270225804:239,message,message,239,https://qutip.org,https://github.com/qutip/qutip/issues/613#issuecomment-270225804,1,['message'],['message']
Integrability,"Thanks!. @Ericgig ; > If you need to use an array coefficient and this is your restriction on tlist, use qutip.Cubic_spline (or build the QobjEvo before the solver, but I don't remember if it is safe in v4). This is exactly my case. I see, I can just give mesolve a Cubic_spline object, very nice. I didn't know that give `tlist` to mesolve is same as asking these intermediate results. I was using it just as a match for array coefficient. Actually, I've been using array coefficient for a while and I don't even know such functionality exists. And I remember someone else mentioned this to me before, so I shouldn't be the only one. I see in the doc there is a section mentioning it. Probably we could stress it a bit more. @jakelishman ; > We probably shouldn't mutate the given Options object, but the call as written here doesn't make a huge amount of sense - why would you want to run the integrator but not have any output stored at all? You'd just be spinning your processor. Sorry, my post was a bit unclear. I only need the final result. So I set `store_final_state=True`, but that doesn't change the behaviour of `store_state` at all. Indeed, I'm doing so just because I didn't know the solution Eric pointed out before. For me a warning before changing `Options` would be nice. And probably pointing out the solution Eric mentioned?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1437#issuecomment-775319207:895,integrat,integrator,895,https://qutip.org,https://github.com/qutip/qutip/issues/1437#issuecomment-775319207,1,['integrat'],['integrator']
Integrability,Thanks. It's not that urgent. I'm just curious what the reason for that behavior might be. It's puzzling; why does it apparently depend on the dimensions of dm as well as on the number of time steps.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771#issuecomment-338361319:129,depend,depend,129,https://qutip.org,https://github.com/qutip/qutip/issues/771#issuecomment-338361319,1,['depend'],['depend']
Integrability,"That is true. I'll try to look into why this is the case. However, it does have three expectation calculated. You can check this with output.expect ! . Edit: . So, I just realized that the noise-spectrum is associated with the coupling operator [sigmax()], I think the correct call to brmesolve must infact be (updated to current qutip standards) . `output = brmesolve(H, psi0, tlist, [[sigmax(), ohmic_spectrum]], e_ops)`. This is in line with the notation we use in example (https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/brmesolve-time-dependent-Liouvillian.ipynb). I will make a pull request updating both the example notebook (http://qutip.org/docs/4.0.2/guide/dynamics/dynamics-bloch-redfield.html ) to reflect this and make sure we depreciate the spectra_cb argument in bloch_redfield_tensor to eliminate the confusion. Thanks for bringing this to notice !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223#issuecomment-605711703:571,depend,dependent-Liouvillian,571,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605711703,1,['depend'],['dependent-Liouvillian']
Integrability,"That was my first thought as well and it worked for the above example. However, it seems that this issue somehow depends on the dimensionality of the system, since what I actually need is a system of two three level atoms which can be driven independently. So if I modify the code to; ``` ; g = basis(3,0); e = basis(3,2); s = basis(3,1). #Single atom operators; sgg = g * g.dag() #ground state population; see = e * e.dag() #excited state population; sge = g * e.dag() #atomic coherence sigma_ge. #Composed atomic operators; A1sgg = tensor(sgg, qeye(3)); A1see = tensor(see, qeye(3)); A1sge = tensor(sge, qeye(3)). H1 = Omega1 * (A1sge + A1sge.dag()); def H1_coeff(t,args):; return 0.5 * (np.tanh(100.0*(t-np.pi/2.0))-np.tanh(100.0*(t-np.pi))); H = [[H1, H1_coeff]]; c_ops = np.sqrt(Gamma) * A1sge; e_ops = [A1sgg, A1see]; psi0 = tensor(g, g); ```; I again get only the initial values. With that being said, the same time dependence function works fine for two two level atoms. So it's still puzzling to me. And again if I put `[]` for the `c_ops` it works! After looking into `mesolve` source code I noticed that in that case other solver function is used `sesolve`, which uses the states without converting them to density matrices and hence has lower dimensionality.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771#issuecomment-338094461:113,depend,depends,113,https://qutip.org,https://github.com/qutip/qutip/issues/771#issuecomment-338094461,2,['depend'],"['dependence', 'depends']"
Integrability,"That would be punishing long time qutip user and making it hard for package depending on qutip to support both v4 and v5. ; We should do our best to support both fully knowing that it will never be perfect. The new method require inspecting the signature anyway,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1609#issuecomment-892750814:76,depend,depending,76,https://qutip.org,https://github.com/qutip/qutip/pull/1609#issuecomment-892750814,1,['depend'],['depending']
Integrability,"That's a good question... I'm not sure if we should update parfor or create new functions parallel_map, but this is a first attempt to try to generalize the parfor functions we have to work with functions that take arbitray arguments and keyword arguments, and that works with the ui.progressbar interface. The main point here is that I want the multiprocessing and IPython.parallel backed impementation of ""par_something"" to be swappable. The ones we have now are not. If we can agree on a new API for how these functions should behave we could update the old parfor functions instead of creating new ones. However, this would break backwards compatibility in some minor ways, so I didn't want to mess with the existing parfor functions, since they are part of our published API. Hence the new functions.. I know it's not ideal to have alternative functions that does the same thing, but also not good to break backwards compatibility.. Also, the parfor name is a bit of a misnomer, since it is a map function rather than a for loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/253#issuecomment-63156126:296,interface,interface,296,https://qutip.org,https://github.com/qutip/qutip/pull/253#issuecomment-63156126,1,['interface'],['interface']
Integrability,"That’s what I thought too in hindsight, so I deleted that part of the; docstring, but nosetests now just gives a segmentation fault and quits. On Tue, 28 May 2019 at 21:33, Wojciech Rzadkowski <notifications@github.com>; wrote:. > If I understand correctly it refers to line 300 in test_metrics, which has; > a new hellinger metric test by @wrzadkow <https://github.com/wrzadkow> .; > Could it be that using ""for _ in range(10):"" is a problem?; >; > The following observations:; >; > - for _ in range(10) is already in line in 128 in test_metrics.py; > https://github.com/qutip/qutip/blob/master/qutip/tests/test_metrics.py#L128; > - line 300 is the end of docstring of test_hellinger_monotonicity(); > https://github.com/qutip/qutip/blob/master/qutip/tests/test_metrics.py#L300; > - the presence of invalid escape sequence \o in the error message; > - this thread; > https://stackoverflow.com/questions/52335970/how-to-fix-string-deprecationwarning-invalid-escape-sequence-in-python; >; > make me think that the issue may be caused by \otimes that I used in the; > docstring explanations. Don't have a Mac to reproduce, though.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/963?email_source=notifications&email_token=ADPF67GLVSBPTSYBEWHF753PXURAZA5CNFSM4G4MKE72YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODWL7DBA#issuecomment-496497028>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ADPF67BCDAJ2I55ZNP3VBB3PXURAZANCNFSM4G4MKE7Q>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496582231:840,message,message,840,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496582231,1,['message'],['message']
Integrability,"The LaTeX code generated for the following simple circuit is invalid, and trying to plot the circuit results in a RuntimeError:. ```; qc = QubitCircuit(1, num_cbits=1, reverse_states=False); qc.add_measurement(""M0"", targets=0, classical_store=0); qc.png; ```; Setting `reverse_states=True` works fine. The following line in `QubitCircuit.latex_code()` needs to include a sign dependent on the value of `reverse_states`:; https://github.com/qutip/qutip/blob/00d0fe43055cff44fad803bd1ad1530e17fedeee/qutip/qip/circuit.py#L1741",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1842:376,depend,dependent,376,https://qutip.org,https://github.com/qutip/qutip/issues/1842,1,['depend'],['dependent']
Integrability,"The PR is in good shape for merging I believe. I'd like to discuss the parameters API a bit. The parameters used now for measurement function is `ops` and `state`. I guess @hodgestar coined this interface in his PR. It fully made sense for observable and state. However, if we now generalize it to the measurement from the perspective of experimentalists. The parameter `state` becomes a more prominent one whereas `ops` becomes secondary because it only offers a basis for the measurement. This become clearer if one list all the possible use scenarios where:. - `state=Qobj, ops=None`: measure the `state` in default computational basis; - `state=Qobj, ops=ket`: Probability of measure `state` and get `ket`, (together with the post-measurement state); - `state=Qobj, ops=Qobj`: Measure the `state` with one POVM operator specified by `ops`; - `state=Qobj, ops=list of ket`; - `state=Qobj, ops=list of Qobj`. More generally, we can even provide the user with the optional parameter `targets`, where the given `ops` is only for those targets qubits. We can add identity to the measurement operator for the rest of the qubits automatically for the user.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-648113340:195,interface,interface,195,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-648113340,1,['interface'],['interface']
Integrability,"The RK45 code here has no notion of error associated with it; you have no way of saying whether a particular step size `dt` is actually good. It ideally should converge to something as the step size goes to zero. QuTiP has an adaptive solver that modifies the step size to keep the error below the supplied tolerances. For time-dependent problems one could run into issues with very narrow pulses, but that is not the case here. Writing ones own ODE solver is not really the best thing to do outside of a learning exercise for reasons along these lines.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986722508:328,depend,dependent,328,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986722508,1,['depend'],['dependent']
Integrability,"The `from scipy.misc import factorial` generated some error when building win py27 builds in conda-forge/qutip-feedstock#18. So I moved it to the only function in `utilities` that used it. Not strictly good practice. Would perhaps be better to move `_version2int` and `_blas_info` to another module, but quite a bit more work and I was not sure what to call the module: `sysutils`?. The error came from inside scipy due to a call to `multiprocessing.cpu_count()`. As we had one of those inside `__init__()` I wrapped that up as well.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/668:509,wrap,wrapped,509,https://qutip.org,https://github.com/qutip/qutip/pull/668,1,['wrap'],['wrapped']
Integrability,"The `metrics.dnorm` function uses the cvxpy library to calculate the diamond norm. Twice now it has caused many test failures out of the blue #484 and #872.; It would seem like the developers do not prioritise maintaining a conda package. As this is our recommended platform, then it is a risk having this cvxpy dependence. Perhaps there is a method using scipy that we could employ?. @cgranade perhaps could provide some context?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874:312,depend,dependence,312,https://qutip.org,https://github.com/qutip/qutip/issues/874,1,['depend'],['dependence']
Integrability,"The `test` subcommand for `setup.py` depends on `setuptools`, rather than just `distutils`. We don't want to require `setuptools`, however, so I think the best strategy is to try and import it but fall back to `distutils` if we can't. I'll post a PR soon that will follow this strategy. Hopefully, that should make it a bit more convenient to run unit tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/410#issuecomment-183607483:37,depend,depends,37,https://qutip.org,https://github.com/qutip/qutip/issues/410#issuecomment-183607483,1,['depend'],['depends']
Integrability,"The array interface is now working for qutip master, but I don't know when it will be made in a release.; overlap between operator is also added.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/938#issuecomment-445046066:10,interface,interface,10,https://qutip.org,https://github.com/qutip/qutip/issues/938#issuecomment-445046066,1,['interface'],['interface']
Integrability,"The block-redfield solver only supports string-based time-dependence, ; http://qutip.org/docs/latest/guide/dynamics/dynamics-bloch-redfield.html#time-dependent-bloch-redfield-dynamics; so in your example something like H=[[initial_H,'1-0.01*{i}*t'.format(i=i)],[final_H,'0.01*{i}*t'.format(i=i)]] should work. I don't know whether that will give you the same issue as reported for repeated calls to mesolve/sesolve. Probably will, if that hasn't been resolved yet?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1150#issuecomment-575503917:58,depend,dependence,58,https://qutip.org,https://github.com/qutip/qutip/issues/1150#issuecomment-575503917,2,['depend'],"['dependence', 'dependent-bloch-redfield-dynamics']"
Integrability,"The bra--ket inner product had an unnecessary loop when looking up the row in the ket, where we already knew which element we needed to lookup. This function does not check the shapes of the inputs are valid and can therefore segfault on improper input, but it's a low-level Cython function, so that's expected behaviour. The previous version could segfault only in the ket--ket product, not the bra--ket product, but now it's both. This only affected `qutip.overlap` when neither input was a ket. Original timing:; ```python; In [1]: import qutip; ...: b, k = qutip.rand_ket(1000).dag(), qutip.rand_ket(1000); ...: %timeit b.overlap(k); 233 µs ± 214 ns per loop (mean ± std. dev. of 7 runs, 1000 loops each); ```; New timing:; ```python; In [1]: import qutip; ...: b, k = qutip.rand_ket(1000).dag(), qutip.rand_ket(1000); ...: %timeit b.overlap(k); 8.35 µs ± 47 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each); ```. Compare ket--ket timing (which is unchanged):; ```python; In [2]: k1, k2 = qutip.rand_ket(1000), qutip.rand_ket(1000); ...: %timeit k1.overlap(k2); 8.86 µs ± 119 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each); ```. **Changelog**; - Fix quadratic dependency affecting `Qobj.overlap` with bra inputs.; - Fix segfault in `Qobj.overlap` when passed `Qobj` of incompatible shapes.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1306:1188,depend,dependency,1188,https://qutip.org,https://github.com/qutip/qutip/pull/1306,1,['depend'],['dependency']
Integrability,"The compulsive renaming continues.; I also reduced the number of time steps in the test to speed things up, and set to ignore the IntegrationWarning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/455#issuecomment-194836741:130,Integrat,IntegrationWarning,130,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194836741,1,['Integrat'],['IntegrationWarning']
Integrability,"The core of `mesolve` is also `scipy.ode`, but the default method is `adams` instead of `bdf` and we use sparse matrix for the liouvillian. There are a lot of small time lost with using mesolve like this. Just looking at rhos' datatype: ; `self.psi0: dense -> rho0: Qobj(sparse matrix) -> dense vector (for ode) -> mesolve return: sparse matrix -> rhot: dense...`; Also `mesolve` will check if the Hamiltonian is really an Hamitonian or a Liouvillian or a function returning an Hamiltonian, if the system depend on time, if all the dimensions match, etc. So the overhead of `mesolve` will be important. Finally, depending on the Hamiltonian there can be a good difference in speed. We use sparse matrix for the Liouvillian, good if the Hamiltonian is large with few non-zeros, but slower that simple dense matrices otherwise.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1180#issuecomment-583781780:505,depend,depend,505,https://qutip.org,https://github.com/qutip/qutip/issues/1180#issuecomment-583781780,2,['depend'],"['depend', 'depending']"
Integrability,The correlation solvers were rewritten using args=None that is incompatible with the mesolver for time-dependent systems. This fixes that by replacing with args={}.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/457:103,depend,dependent,103,https://qutip.org,https://github.com/qutip/qutip/pull/457,1,['depend'],['dependent']
Integrability,"The coverall integration is nice, but could we configure it not to comment each and every travis build on every PR? I think is is rather noisy and generates a lot of email notifications... Perhaps the badge in the README file would be sufficient?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/254:13,integrat,integration,13,https://qutip.org,https://github.com/qutip/qutip/issues/254,1,['integrat'],['integration']
Integrability,"The current error handling for failure in ode integration, in mesolve/sesolve, is very bad. Now exceptions are raised when this occur, so that these errors can be caught more easily by users.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/243:46,integrat,integration,46,https://qutip.org,https://github.com/qutip/qutip/pull/243,1,['integrat'],['integration']
Integrability,"The current version of `clebsch` gives wildly incorrect results for high `j`, because it relies on the precise cancellation of extremely large quantities. This leads to incorrect answers for anything that depends on this function, such as the spin Wigner function for Rydberg atoms. Example of problem:. ```; clebsch(15, 15, 30, 0, 0, 0) ; > 7.03237620084722 ; clebsch(20, 20, 40, 0, 0, 0); > 8986860.153685257; clebsch(30, 30, 60, 0, 0, 0); > nan; ```. Is it possible to implement one of the many higher-precision methods to compute Clebsch-Gordan coefficients? If that would be slower, is it possible to add a flag to toggle between the methods?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1141:205,depend,depends,205,https://qutip.org,https://github.com/qutip/qutip/issues/1141,1,['depend'],['depends']
Integrability,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:846,message,message,846,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774,1,['message'],['message']
Integrability,"The difference between those two lines is that left-multiplication by `s_prep.dag()` will project onto the prepared ancilla state, whereas tensor contraction will implement partial trace over the ancilla; they're both perfectly valid channels (up to normalization in the projection case), but have subtly different physical interpretations. I can explain that better in the notebook, and submit as a PR, then. There's some plotting code there as well that I was planning on cleaning up better for a later PR to QuTiP, but I can clean it up now and include it if you like, so that I can simply use it in the tutorial notebook without a page of function definitions first.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/268#issuecomment-65412516:146,contract,contraction,146,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65412516,1,['contract'],['contraction']
Integrability,The difference in performance is huge for large dimensions. In the case of cy_expect_rho_vec we calculate n*(n-1) unnecessary values which we drop immediately with trace operation.; I didn't replace the cy_expect_rho_vec because of the API change. I don't know exactly where it is used. Maybe it make sense to use cy_expect_rho_vec as a wrapper for cy_expect_rho_vec_fast?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/56#issuecomment-25357042:337,wrap,wrapper,337,https://qutip.org,https://github.com/qutip/qutip/pull/56#issuecomment-25357042,1,['wrap'],['wrapper']
Integrability,"The easiest would be to make special integrators for HEOM which take a dict of `QobjEvo`: `system = {(from, to): H0,}` and list of states. Then we loop over the items: `drho[from] = QobjEvo(t) @ rho[to]`. As long as the state can be represented in an array, every ODE from scipy, jax, etc can be used. We have tools to stack, unstack, split columns, etc, so the conversion between array and list of `Dense` is easy and efficient. For scipy integrators, that would only need to change 3 methods. Would that work on the HEOM side?; This mean we would need specialised integrator in JAX etc, but would be a lot easier than the stochastic ones so I don't think it's an issue. Changing the `QobjEvo` would be more work, but doable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2384#issuecomment-2310307934:37,integrat,integrators,37,https://qutip.org,https://github.com/qutip/qutip/issues/2384#issuecomment-2310307934,3,['integrat'],"['integrator', 'integrators']"
Integrability,"The eigenenergies method is defined for Qobj. Try calling ""type(H)"", if you don't get ""Qobj"" then the Hamiltonian is not in the right format. ; Some solvers (sesolve, mesolve, ...) accept time dependent Hamiltonian in list format, eigenenergies does not.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/918#issuecomment-426622573:193,depend,dependent,193,https://qutip.org,https://github.com/qutip/qutip/issues/918#issuecomment-426622573,1,['depend'],['dependent']
Integrability,"The error reported here; ```; /Users/goerz/.pyxbld/temp.macosx-10.6-x86_64-3.5/pyrex/rhs72670.cpp:541:10: fatal error: 'complex' file not found; #include <complex>; ```; Suggests that any string format time-dependence would fail to compile. @goerz Could you try to reproduce with simple example, e.g.; ```; H = [[sigmaz(), ""sin(t)""]]; ```; ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-463246180:207,depend,dependence,207,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-463246180,1,['depend'],['dependence']
Integrability,"The following error occurred several times while running the tests on my machine:; ```; ======================================================================; ERROR: Stochastic: ssesolve: heterodyne, time-dependent H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_stochastic_se.py"", line 208, in test_ssesolve_heterodyne; map_func=parallel_map, args={""a"":2}); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\stochastic.py"", line 698, in ssesolve; args=args, **kwargs); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\stochastic.py"", line 417, in __init__; self.noise = np.random.randint(0, 2**32, ntraj).astype(""u4""); File ""mtrand.pyx"", line 990, in mtrand.RandomState.randint; ValueError: high is out of bounds for int32. ----------------------------------------------------------------------; ```; It is due to the fact that the default integer of python on windows is int32 instead of int64. `np.random.randint(0, 2**32)` produces the same error on my machine. Maybe it is better to add `dtype=np.int64` or `dtype=np.uint32` since they are platform independent. If you agree I can work on fixing it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/968:206,depend,dependent,206,https://qutip.org,https://github.com/qutip/qutip/issues/968,1,['depend'],['dependent']
Integrability,"The hardware info is wrapped in a `try` statement, thus hiding the error. To see what the problem is, just remove the try statement, and see what error Travis is returning.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/780#issuecomment-347419067:21,wrap,wrapped,21,https://qutip.org,https://github.com/qutip/qutip/pull/780#issuecomment-347419067,1,['wrap'],['wrapped']
Integrability,"The include a new class to represent time dependent Qobj system.; It's take the list of Qobj and coefficient in the format normally accepted by solvers like mesolve and mcsolve and make an object of it.; The td_Qobj is callable and return the Qobj at the desired time, it support math (+,-,*) and unitary transformations: conj, dag, transpose.; The object has a cython compiled version with cython call to spmv and expect in order to be efficient in solvers.; I made it as a tool used by solver (stochatic/mcsolve), therefore may lack some features for users. Also the naming of some methods only make sense in a solver (rhs).; Lastly, this branch include it's own cubic spline code since the version available when I started working on it only accepted uniformly sampled data. This part may have become redundant. This branch only contain the new object, not the solvers using it.; This pull request replace half the ""cythonizing mcsolve"" pull request.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/814:42,depend,dependent,42,https://qutip.org,https://github.com/qutip/qutip/pull/814,1,['depend'],['dependent']
Integrability,"The latest attempt seems to correctly generate `egg_info` if NumPy is missing, if NumPy is present by not Cython, or if both are present. That should make it much easier to list QuTiP as an external dependency in `requirements.txt`, as our`setup.py` should no longer assume a particular install order. If the latest CI passes, I'll add the review merge ready label.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/489#issuecomment-225887759:199,depend,dependency,199,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-225887759,1,['depend'],['dependency']
Integrability,"The latest version of QuTIP uploaded to PyPI (4.0.1 uploaded on 2016-12-29) has scipy (>=0.15) listed as a dependency. However, the file fastsparse.py imports `get_sum_dtype` from scipy.sparse.sputils, which is only available in scipy 0.18 and newer. I believe that the function was not actually used, and the import was removed in commit #596. . I am not certain that the current version still requires scipy(>=0.18), but the version currently available on PyPI (and thus auto-installed with pip) does require it. If the user has an earlier version of scipy, qutip will fail on import (ImportError).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/616:107,depend,dependency,107,https://qutip.org,https://github.com/qutip/qutip/issues/616,1,['depend'],['dependency']
Integrability,"The main function of the `Options` class is to hold the documentation of the options supported by solver, mostly integrator related ones are an issue. Since sub-packages can add new integration methods, it should be somewhere dynamic that can fetch them at runtime. We can't have them in the description of the function interface directly, but it must be clear from that documentation where to find them.; We can't have them in the documentation of the solver class. It could be in a solver instance, but that too late: needing to initialize a `BrSolver` or `HEOMSolver` just to know which options `bsmesolve` and `heomsolve` support is not user friendly.; The Integrator class is useless for the users: if they want to solve ODE, they should use `scipy.integrate`, for quantum systems evolution, `mesolve` etc. So we should not ask them to look there. `SolverOptions(name)` make it reasonably easy to check the supported options and their default before using the solver. Another approach I see is to fix the integrator when using the functions interface, this way we could properly document the function with all items from both the solver and integrator. When using the class interface, we keep both options separated (and make the choice of integrator it's own keyword):; ```; solver = SeSolver(H, integrator_method='adams', options=solver_options, ode_options=ode_options); solver.options # Solver options only. solver.set_integrator('vern7', ode_options); help(solver.ode_options) # See description of integrator options; ```. That way the function calls is very close to v4 and easy to use, and the class interface give access to new features. ; This also makes `krylovsolve` fit more. Since `method` is used by the solver, not the integrator, it should not be under the `options.ode`, but it seems confusing to have it with the normal options, so having it as an independent parameter could make it clearer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947#issuecomment-1174438897:113,integrat,integrator,113,https://qutip.org,https://github.com/qutip/qutip/pull/1947#issuecomment-1174438897,13,"['Integrat', 'integrat', 'interface']","['Integrator', 'integrate', 'integration', 'integrator', 'interface']"
Integrability,"The main issue causing these errors though is that `cvxpy.Variable` and `cvxpy.Parameter` expect the first arg to be a tuple with dimensions. We are passing `num_rows, num_cols` is two args. Who knows how this has happened - cvxpy changed its interface?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/872#issuecomment-394201690:243,interface,interface,243,https://qutip.org,https://github.com/qutip/qutip/issues/872#issuecomment-394201690,1,['interface'],['interface']
Integrability,"The message in `qutip.cite()` is updated with current lead developers. The previous lead/core developers can be added, uniformly with the names listed in the [readme](https://github.com/qutip/qutip) page.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1121:4,message,message,4,https://qutip.org,https://github.com/qutip/qutip/issues/1121,1,['message'],['message']
Integrability,"The only operator we normalise are density matrices, so `isoper` work as well. Propagator computation turn the normalisation off. Other cases should only happen when the user pass an arbitrary super operator. I which case they probably don't want any normalisation on our side. My issue is that in these cases, we still set the `isherm` flag while not having any ideas what the user is trying to do:; ```; >>> H = qt.qeye(2) * 1j; >>> L = qt.spre(H); >>> qt.mesolve(L, qt.basis(2,1), [0, 1]).final_state; Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dense, isherm=True; Qobj data =; [[0.+0.j 0.+0.j ]; [0.+0.j 1.+1.55740849j]]; ```. We don't set the flag when the input are super operators? We try to check if the Liouvillian preserve hermiticity (not easy for time dependant operator)? Junk in, junk out?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2408#issuecomment-2077231842:787,depend,dependant,787,https://qutip.org,https://github.com/qutip/qutip/pull/2408#issuecomment-2077231842,1,['depend'],['dependant']
Integrability,"The problem is indeed the use of `blas_opt['extra_compile_args']`which works well on my mac too, but for some reason that I couldn't get to the bottom with, it does not work on the macports build environment. Perhaps the numpy dependency is not properly specified in the ports file, or something similar. I agree with the OP that it would be highly desirable to get this working, but right now i don't have the time work on trying to fix it. Unless it this get fixed somehow, we should probably revise the recommended installation instructions to use macports+pip or homebrew+pip instead.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/283#issuecomment-66273918:227,depend,dependency,227,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-66273918,1,['depend'],['dependency']
Integrability,The problem is that at the moment this error crashes the entire python kernel unexpectedly for a user without any messages. It can be very frustrating for a newbie.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/699#issuecomment-315348946:114,message,messages,114,https://qutip.org,https://github.com/qutip/qutip/pull/699#issuecomment-315348946,1,['message'],['messages']
Integrability,"The problem with OPENMP is that the point where parallel processing begins to have an advantage is platform, and hardware dependent. As such, I have added a simple benchmark routine that calculates a good number of NNZ that a matrix should have for OPENMP to be utilized. This also required me to change the way the qutiprc file is done, i.e. it now uses the standard configparser module. This benchmark is called on first run, or anytime where the qutiprc 'openmp_thresh' flag is missing, or the qutiprc file itself does not exist.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/652#issuecomment-283874454:122,depend,dependent,122,https://qutip.org,https://github.com/qutip/qutip/pull/652#issuecomment-283874454,2,"['depend', 'rout']","['dependent', 'routine']"
Integrability,"The requirements are described in the pyproject.toml file (which seems to be considered the current ""best practice"" for Python projects) and the setup.cfg file (which is an older best practice). Typically for development one would install with either `python setup.py develop` or `pip install -e '.[full]'` both of which should read the dependencies from the pyproject.toml file. Closing this for now but happy to help more if needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1763#issuecomment-1014882006:337,depend,dependencies,337,https://qutip.org,https://github.com/qutip/qutip/issues/1763#issuecomment-1014882006,1,['depend'],['dependencies']
Integrability,"The scalar product (f_modes_t[a].dag() * c_op * f_modes_t[b])[0, 0] is computed at each loop in the for loop on k. But it only depends on a and b and can then be computed outside of the loop. In my case, I was dealing with Hilbert spaces of size 100, which resulted in a significantly reduced run time. Please, let me know about any feedback about this PR :). Follow up of !762.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/766:127,depend,depends,127,https://qutip.org,https://github.com/qutip/qutip/pull/766,1,['depend'],['depends']
Integrability,"The scalar product `(f_modes_t[a].dag() * c_op * f_modes_t[b])[0, 0]` is computed at each loop in the `for` loop on `k`. But it only depends on `a` and `b` and can then be computed outside of the loop. In my case, I was dealing with Hilbert spaces of size 100, which resulted in a significantly reduced run time. Please, let me know about any feedback about this PR :)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/762:133,depend,depends,133,https://qutip.org,https://github.com/qutip/qutip/pull/762,1,['depend'],['depends']
Integrability,"The stochastic solver have been redone.; smesolve and ssesovle can be used for time dependent systems (H, c_ops and sc_ops).; The available solvers are : 'euler-maruyama', 'pc-euler, 'milstein', 'platen', 'milstein-imp', 'taylor15', 'taylor15-imp', 'explicit15'. All solvers are usable by both ssesolve and smesolve, for time-dependent cases and for both heterodyne and homodyne methods. There is no restriction on the number of sc_ops. The solvers are in cython, making them 2~3 time faster than the previous version, with the exception of the implicit solvers, where the timing is about the same. The photocurrent method as been moved to it's own functions: photocurrentmesolve and photocurrentsesolve. It can take time-dependent Hamiltonian. The stochastic (piecewse deterministic process) PDP solvers (ssepdpsolve and smepdpsolve) are untouched. The previous version of smesolve/ssesolve allowed the user to determine it's own d1 and d2 function. This capacity have been moved to the function general_stochastic. However the function only has access to some solver: 'euler-maruyama', 'platen', 'explicit15'. . I created a function which list the solvers with the references: stochastic_solver_info(). The convergence of the solvers was tested with a tests similar to https://github.com/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb .",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/815:84,depend,dependent,84,https://qutip.org,https://github.com/qutip/qutip/pull/815,3,['depend'],['dependent']
Integrability,"The string type time-dependent solvers generate pyx files and compile them in runtime. Much of qutip will run without Cython. But not the string type time-dependent solvers, which are one of the main features of qutip.; @yurivict you could try removing Cython from your Python env and then run the tests - see how many fail",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/893#issuecomment-404095769:21,depend,dependent,21,https://qutip.org,https://github.com/qutip/qutip/issues/893#issuecomment-404095769,2,['depend'],['dependent']
Integrability,"The styling all got added in 5b4777450f5ba2becb790efb3af85482a1704c73 which has the cryptic commit message ""add github fix"". :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1678#issuecomment-929097733:99,message,message,99,https://qutip.org,https://github.com/qutip/qutip/pull/1678#issuecomment-929097733,1,['message'],['message']
Integrability,"The test failure on Python 3.6 appears to be due to some exceptionally weird behaviour by `conda` in the Travis setup - if you look closely, you can see that when it runs `conda uninstall cython`, it _downgrades_ `numpy` to 1.14.2. This would not be a problem in a `conda-forge` release build, because the `numpy` API dependency is pinned in the feedstock, but it is a potential problem on `pip` source builds. It's possible this super odd behaviour of `conda` is the cause of people's complaints on the email lists about failed imports. I will push a change to the requirements here to try and enforce `numpy >= 1.16.6`, which ought to solve the dependency issues. I will make a similar change on `master` and in #1429 (which I will likely back-port to master before 4.6).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1448#issuecomment-782105359:318,depend,dependency,318,https://qutip.org,https://github.com/qutip/qutip/pull/1448#issuecomment-782105359,2,['depend'],['dependency']
Integrability,The time-dependent Hamiltonian cannot call the function liouvillian() of the Dicke class,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1928:9,depend,dependent,9,https://qutip.org,https://github.com/qutip/qutip/issues/1928,1,['depend'],['dependent']
Integrability,"The times at which the `L` are computed are not those at which the states are computed. It computes the derivative at times farther than the desired time and do an interpolation step to get the state. . Some feature (pulse) may be skipped by this method and you should set `Options(max_step=...)` with a `max_step` smaller than half the pulse width, but it should have no issue with a linear ramp. We use the `zvode` integrator of `scipy.integrate.ode`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1821#issuecomment-1058493500:417,integrat,integrator,417,https://qutip.org,https://github.com/qutip/qutip/issues/1821#issuecomment-1058493500,2,['integrat'],"['integrate', 'integrator']"
Integrability,"The usage of the `tensor_contract` function is explained in [QuTiP Example: Superoperators, Pauli Basis and Channel Contraction](http://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/examples/example-superop-contract.ipynb). It is explained in terms of the graphical notation in http://arxiv.org/abs/1111.6950. However, there is no figure explaining how the ""tensor wires"" are numbered. In the notebook it says ""Numbering the tensor wires from 0 to 3, this corresponds to a tensor_contract argument of (1, 3)."" But it is not clear what the convention is... does the numbering follow in an anticlockwise fashion, starting with 0 at the top left?. A figure in the notebook showing the numbering convention would be extremely helpful.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/385:116,Contract,Contraction,116,https://qutip.org,https://github.com/qutip/qutip/issues/385,2,"['Contract', 'contract']","['Contraction', 'contract']"
Integrability,"The variable e does not exist outside the except block even if the try failed...; So trying to give more information about the error resulted in more confusion, sorry. I would suggest to use functions instead of string for your coefficient, the speedpup is often less than the time it take to compile the string, (which is not included in the progressbar). . It is the first case where it would work once, but not the following times. I would be interested in the real error message and/or a code to reproduce the bug. If you are comfortable hacking your version of qutip: adding `print(e)` in the except block; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/qobjevo_codegen.py#L77-L80; should do it give the proper error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1196#issuecomment-595847212:475,message,message,475,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-595847212,2,['message'],['message']
Integrability,"There are ""breaking"" changes within the scipy private code which various parts of QuTiP depended on (see gh-1298, gh-1301 and commits 46e04a1, 6c85261 and 663d7d2). We ensure that at least one test on Travis uses a scipy version before 1.5 so that we always maintain support for it - the other tests will typically install scipy>=1.5. This particular test is chosen by elimination:; - we want the ""default"" case testing against the newest versions of Python to use the newest versions of the libraries available; - we want the Cython parts to be tested against both versions of scipy, since we link against their versions of LAPACK/BLAS.; - the Mac tests (at the time of writing) skip some tests which are problematic because of intermittent segfaults, including at least one which has issues with scipy 1.5. The MKL/OMP one skips some tests, but not any which use scipy.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1302:88,depend,depended,88,https://qutip.org,https://github.com/qutip/qutip/pull/1302,1,['depend'],['depended']
Integrability,"There are two different issues and now I am realizing I should have filed them separately. One issue is that when I use a time-dependent Hamiltonian given in the list array format I get the wrong result. Your example doesn't contain a time-dependent Hamiltonian given in list array format. To reproduce the issue in your example I replaced; ```; H = [H0, [H1, 't']]; output = mesolve(H, psi0, tlist, c_op_list, [sm.dag() * sm], {}); ```; with; ```; H = [H0, [H1, tlist]]; output = mesolve(H, psi0, tlist, c_op_list, [sm.dag() * sm], {}); ```; For the other case (list callback format) I cannot reproduce the issue with your example. I am starting to think that this problem is not directly caused by having t[0] != 0. What I see is that for `t0 > 5` in my example, I get a constant output from mesolve when I should get an oscillatory solution. Is it possible that the numerical integration is failing silently and the returned expectation values are just for the initial condition?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/561#issuecomment-264643370:127,depend,dependent,127,https://qutip.org,https://github.com/qutip/qutip/issues/561#issuecomment-264643370,3,"['depend', 'integrat']","['dependent', 'integration']"
Integrability,"There are two reasons I did not go with `isinstance(other, numbers.Number)`:; - This returns False when `other` is a NumPy array or TensorFlow tensor which makes `__mul__` significantly less flexible.; - If we accept objects that are not instances of `numbers.Number`, we will still have to use `complex(other)`. This is necessary to infer if the output is hermitian or unitary. Hence, instead of doing a set of `isinstance` checks and `shape` checks for NumPy TensorFlow or any other future library we may want to be somewhat compatible with, we just check whether other it can be casted to `complex`. If it can, `mul` makes sense and we let the specialisation do whatever they ""want"" (they could always just do complex(value) in any case). I must admit that the try except with complex also seems not ideal to me. But I could not find a better implementation that fitted the requirements. I mean, we do use this same code pattern at some other points in the code (in `__matmul__` we raise not implemented if `other` can not be casted to Qobj and we catch this with a try) but what worries me is: what happens if `complex(other)` raises TypeError not because we do not know how to do the cast but because the user made a mistake in the code? An example of this could be:; ```python; arrray = np.array([1,2]) # length 2 array; qobj*array; ```; This will return `TypeError` but with a different message if we catch it in the `complex(other)` try execpt. ; - _With_ a try execpt that returns NotImplemented (current implementation) the error message is:` TypeError: operand 'Qobj' does not support ufuncs (__array_ufunc__=None)`; - Wehreas _without_ the try expect (not returnt NotImplemented if `complex(other)` fails), the error message is: `TypeError: only length-1 arrays can be converted to Python scalars`, which could be a useful error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1620#issuecomment-885550798:1394,message,message,1394,https://qutip.org,https://github.com/qutip/qutip/pull/1620#issuecomment-885550798,4,['message'],['message']
Integrability,"There is a bug in `brmesolve`. When it prepare the system, it convert everything to `QobjEvo` to allows list format. But then `bloch_redfield_tensor` use `Qobj` vs `QobjEvo` to determine if the system depend on time (since the spectra could depend on time and there is no check for that, we use the class of the corresponding `a_op`). Therefore, when using `brmesolve`, it always use the time-dependent version that compute the eigen states at each time step...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2530#issuecomment-2405171533:201,depend,depend,201,https://qutip.org,https://github.com/qutip/qutip/issues/2530#issuecomment-2405171533,3,['depend'],"['depend', 'dependent']"
Integrability,"There is no agreement on how this should be handled yet. It's been removed from `dev.major` with the plan to restore it before the release, but the exact interface is not fixed. It certainly will not be some special keyword in args. It could be a special value, or a special parameter / method for the solver class.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/947#issuecomment-1142124017:154,interface,interface,154,https://qutip.org,https://github.com/qutip/qutip/issues/947#issuecomment-1142124017,1,['interface'],['interface']
Integrability,"There is nothing in the code that should prevent one from doing that, provided that the problem is still in Lindblad form. The mesolve routine does not normalize or check the trace for the return density matrices, so I naively think that it should work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/416#issuecomment-171740710:135,rout,routine,135,https://qutip.org,https://github.com/qutip/qutip/issues/416#issuecomment-171740710,1,['rout'],['routine']
Integrability,"There is nothing in the heom ode solve that is not in the mesolve. mesolve can take superop L, that is solve dp/dt = L(t) p, just so long as L(t) = f1(t)L1 + f2(t)L2 ...; I have given some thought to how we can have a more general L(t), in the context of the heom, where for instance we might want to have time-dependent Matsubara terms. These would then occur many times in elements of the L, and so could potentially be solved efficiently. I'll add it to my list of things to discuss with @Ericgig when we meet in a few weeks. The new `QobjEvo` may perhaps have gone some way in this direction already.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-461018021:311,depend,dependent,311,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-461018021,1,['depend'],['dependent']
Integrability,"There is numerical error in the answer due to the need for the sqrtm method. I am not sure if I would call this error significant as the error is of order 1e-7, while the fidelity is of order unity. However, as Chris said, there might be a better way for pure states. Paul. > On Aug 26, 2015, at 13:11, dick-t notifications@github.com wrote:; > ; > fidelity() returns >1 by a significant amount for certain pure states. States are normalised, and taking the inner product returns 1. Code below provides two examples of states which give fidelity >1 with themselves.; > ; > #to test qutip's fidelity routine; > import qutip as qu; > ; > psi0=qu.Qobj(); > ; > i=0; > while i<=1:; > j=0; > while j<=1:; > psi0+=qu.state_number_qobj([2,2],[i,j]) #even superposition of qubit states; > j+=1; > i+=1; > ; > psi0=psi0.unit() #normalise; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > print(""\n""); > ; > psi0=qu.tensor(psi0,qu.basis(10,1)) #tensor product with Fock state; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > ; > Output:; > ; > 1.00000002107; > 1.0; > ; > 1.00000003485; > 1.0; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/361#issuecomment-134832098:599,rout,routine,599,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134832098,1,['rout'],['routine']
Integrability,"There isn't a QuTiP build for Apple ARM CPUs on PyPI because we don't have the hardware to build it. I recommend installing from conda-forge by following the instructions at https://qutip.org/docs/latest/installation.html#installing-with-conda. You can also compile from source yourself by installing all the necessary dependencies, but I think try conda-forge first.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2027#issuecomment-1335129564:319,depend,dependencies,319,https://qutip.org,https://github.com/qutip/qutip/issues/2027#issuecomment-1335129564,1,['depend'],['dependencies']
Integrability,"There seems to be a bug when trying to solve the Schrödinger equation with the sesolve and essolve functions using an initial state vector. The following code reproduces the error:; ```python; ### import dependencies; %matplotlib inline; from qutip import *; import numpy as np; import matplotlib.pyplot as plt. ### define spin operators at each site ; N = 3 # Number of spins; def sz(i):; if i==N:; i=0; l = [qeye(2) for j in range(0,i)] + [sigmaz()] + [qeye(2) for j in range(i+1,N)]; return tensor(l); def sp(i):; if i==N:; i=0; l = [qeye(2) for j in range(0,i)] + [sigmap()] + [qeye(2) for j in range(i+1,N)]; return tensor(l); def sm(i):; if i==N:; i=0; l = [qeye(2) for j in range(0,i)] + [sigmam()] + [qeye(2) for j in range(i+1,N)]; return tensor(l). ### Hamiltonian with on-site field and XX-type coupling between spins 0&1 and spins 0&2; delta = 1; V1 = 0.1; V2 = 0.1 ; H0 = -0.5*delta*(sz(0) + sz(1) + sz(2)) + V1*(sp(0)*sm(1) + sm(0)*sp(1)) + V2*(sp(0)*sm(2) + sm(0)*sp(2)) . ### no collapse operaters; e_op is total magnetization in z-direction ; c_ops = []; e_ops = [sz(0)+sz(1)+sz(2)]. ### initial state: each spin polarized in x-y-plane; psi0 = tensor([(basis(2,0) + (1j)**i *basis(2,1)).unit() for i in range(0,N)]); rho0 = psi0*psi0.dag(). ### compute time evolution with different solvers; t_list = np.linspace(0, 50, 500); output0 = mesolve(H0, rho0, t_list, c_ops, e_ops); output1 = essolve(H0, rho0, t_list, c_ops, e_ops); output2 = sesolve(H0, psi0, t_list, e_ops). ### plot result; plt.plot(t_list, output0.expect[0], label='mesolve'); plt.plot(t_list, output1.expect[0], label='essolve'); plt.plot(t_list, output2.expect[0], label='sesolve'); plt.legend(). ### time evolution with essolve, use state vector --> Exception raised; output3 = essolve(H0, psi0, t_list, c_ops, e_ops); plt.plot(t_list, output0.expect[0], label='essolve, state vector'); plt.legend(); ```; The Hamiltonian commutes with the operator for which the expectation value is computed as is easily checked. ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/841:204,depend,dependencies,204,https://qutip.org,https://github.com/qutip/qutip/issues/841,1,['depend'],['dependencies']
Integrability,"There were a few invalid escape sequences and scipy imports that somehow escaped being fixed #1493, so this fixes those. Also, in #1480 we issued deprecation warnings for user-facing uses of `eseries`, `essolve` and `ode2es`, however we are not deprecating the correlation and spectrum methods (in QuTiP 5.0 the necessary components are just absorbed into private functions inside `correlation.py`), so these should not generate warnings. Simon (@hodgestar) and I briefly discussed whether we needed a special warnings filter inside those functions, but we thought we didn't need it because default Python filters would prevent `DeprecationWarning` from being shown, since it is triggered by library code and not code in `__main__`. The problem is that not everything uses the default filters; both `pytest` and the documentation build do not suppress all `DeprecationWarning` messages. This was a particular problem in `pytest`, where approximately 68,000 warnings (!) were generated. Since this is _not_ deprecated functionality, nor is it using deprecated functionality, so there shouldn't be any warnings. This PR removes those as well. The end result is that a completely clean documentation build now should generate 0 warnings. My eventual intent is to create an automatic documentation build process, which treats warnings as errors to prevent us from breaking it in PRs. This cannot happen until the merger of the documentation into this repository, however, because otherwise new features/feature removals could get into an impossible situation where the two PRs to `qutip` and `qutip-doc` would not be aware of each other, so would return failed CI. Tests still generate several warnings, but that's for a different PR.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1505:877,message,messages,877,https://qutip.org,https://github.com/qutip/qutip/pull/1505,1,['message'],['messages']
Integrability,"There's a distinction between `git` and GitHub here, in that PRs are purely a GitHub thing. As far as `git` is concerned, there's actually no problem at all with a PR being merged from `master` on somebody else's fork (`master` after all is an arbitrary label). The reason to do it is that the person who created the PR will find it harder to incorporate upstream changes, because their `master` will now always be out-of-sync from ours until they fetch from our `master` and do a `git reset --hard` onto it, which would delete their commits and force their branch to line up with ours again. From our side, it makes no difference except that the default commit message that Github gives us will say `Merge branch mlaguna10:master into qutip:master`. You can just change the message and no-one would ever know from looking at the `git log`. I think this is all Boxi meant - it's no issue on our side. If you do the funky two-PR merge/rebase that Alex and I were talking about (by email) then it's all moot anyway, because all commits from this PR and #1212 will get squashed together and GitHub won't know that the PRs were actually merged (the author contributions will count, but I think the PRs will have to be manually closed).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-606714637:662,message,message,662,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-606714637,2,['message'],['message']
Integrability,"There's no link, just bad luck. This won't prevent merge - the tests clearly show your change is fine. Unfortunately our test suite isn't perfect, and sometimes it tries to integrate an insanely stiff system or something like that by accident.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1380#issuecomment-729963050:173,integrat,integrate,173,https://qutip.org,https://github.com/qutip/qutip/pull/1380#issuecomment-729963050,1,['integrat'],['integrate']
Integrability,"This PR addresses #410 by attempting to import `setuptools`, which has support for unittesting and nose integration. Upon failure, it should leave the setup process as it was. This PR also fixes a rare exception in `settings.py` that can be caused if you have a `*.pyc` file for `logging.py` and call into QuTiP from something like nose.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/429:104,integrat,integration,104,https://qutip.org,https://github.com/qutip/qutip/pull/429,1,['integrat'],['integration']
Integrability,"This PR adds support for contraction along arbitrary dimensions of a qobj, whether those dimensions are state, operator or superoperator indices. The generalization is provided by a small number of utility functions for manipulation `dims` properties with few assumptions. Unfortunately, due to the limitations of `scipy.sparse`, this functionality is implemented on dense arrays, but for small matrices, it works suitably fast.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/268:25,contract,contraction,25,https://qutip.org,https://github.com/qutip/qutip/pull/268,1,['contract'],['contraction']
Integrability,"This PR fixes #386 by changing checking if `j == i + 1`, in which case NumPy doesn't automatically move fancy indices to the left. In particular, for adjacent indices, we should sum over index `i`, not over index `0` as was assumed before. To catch regressions, this PR also adds more robust unit tests that check more unusual tensor contractions. Thanks to @arnelg for pointing this out!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/387:334,contract,contractions,334,https://qutip.org,https://github.com/qutip/qutip/pull/387,1,['contract'],['contractions']
Integrability,"This PR fixes every warning reported in `pytest`, and then makes `pytest` treat warnings as errors to hopefully make sure we stick to this state of affairs. (Or at least it fixes all the ones that appear on my particular machine...). The reason this is desirable is that it means we cannot ignore deprecation warnings in dependencies or even in our own code. It also helps us not let certain parts of the codebase get lost in the sands of time, or at least compels us to do something about potential problems before they actually become catastrophic. This is _somewhat_ of a trial, though I hope we can stick to it; warnings usually indicate that something's wrong. Tests can still test run code that generates warnings, but you now have to mark it explicitly in `pytest`. This doesn't mean you should just ""blank out"" warnings by filtering them away. You should first consider if what you're doing is the right way to do it (fix the warning), and then only if it absolutely is and you're testing something that is _supposed_ to warn, then you can use `pytest.warns` to _assert_ that it warns. Of note: a `warnings.catch_warnings` block _inside_ a test (i.e. in test code, not module code) does not work when `pytest` is treating warnings as errors. There are a few classes of fixes in this PR:. - filtering ""expected"" warnings from `pyximport` (hoping to remove QuTiP's dependence on this in 5.0 anyway); - removal of the old `np.matrix` type in favour of `ndarray`, with some changes to accommodate the different arithmetic semantics; - convert an `__init__` method in a test into just class attributes to allow `pytest` to collect it; - bug fixes for behaviour that was raising warnings we hadn't been paying attention to. I'll be mightily surprised if all 5 CI runs pass immediately with warnings enabled; I haven't tested MKL on my laptop, and a quick glance at old logs suggests that SciPy 1.4 might be issuing a few more.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506:321,depend,dependencies,321,https://qutip.org,https://github.com/qutip/qutip/pull/1506,2,['depend'],"['dependence', 'dependencies']"
Integrability,"This PR now includes test cases that cover even quite strange tensor contractions. Hopefully these should be good canaries for pretty much all typical usages. That said, the new cases are failing for a surprising reason: `Qobj.isket` fails for ""ragged"" dims:. ``` python; In [1]: import qutip as qt. In [2]: import numpy as np. In [3]: qt.Qobj(np.arange(2 * 3 * 3 * 3 * 2 * 3).reshape((2 * 3 * 3, 2 * 3 * 3)), dims=[[[2], [3, 3]], [[3], [2, 3]]]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-3-46359a4eb5bd> in <module>(); ----> 1 qt.Qobj(np.arange(2 * 3 * 3 * 3 * 2 * 3).reshape((2 * 3 * 3, 2 * 3 * 3)), dims=[[[2], [3, 3]], [[3], [2, 3]]]). C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.pyc in __init__(self, inpt, dims, shape, type, isherm, fast, superrep); 281 self.superrep = superrep; 282 else:; --> 283 if self.type == 'super' and self.superrep is None:; 284 self.superrep = 'super'; 285. C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.pyc in type(self); 1542 if self.isoper:; 1543 self._type = 'oper'; -> 1544 elif self.isket:; 1545 self._type = 'ket'; 1546 elif self.isbra:. C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.pyc in isket(self); 1572 @property; 1573 def isket(self):; -> 1574 return (np.prod(self.dims[1]) == 1 and; 1575 isinstance(self.dims[0], list) and; 1576 isinstance(self.dims[0][0], (int, np.integer))). C:\Anaconda\lib\site-packages\numpy\core\fromnumeric.pyc in prod(a, axis, dtype, out, keepdims); 2347 except AttributeError:; 2348 return _methods._prod(a, axis=axis, dtype=dtype,; -> 2349 out=out, keepdims=keepdims); 2350 return prod(axis=axis, dtype=dtype, out=out); 2351 else:. C:\Anaconda\lib\site-packages\numpy\core\_methods.pyc in _prod(a, axis, dtype, out, keepdims); 33; 34 def _prod(a, axis=None, dtype=None, out=None, keepdims=False):; ---> 35 return umr_prod(a, axis, dtype, out, keepdims); 36; 37 def _any(a, axis=None, dtype=No",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/389#issuecomment-152932921:69,contract,contractions,69,https://qutip.org,https://github.com/qutip/qutip/pull/389#issuecomment-152932921,1,['contract'],['contractions']
Integrability,"This Pull allows for passing operators of the form H = f(t)*a+g(t)*a.dag() as a_ops to the td-BR solver. Since the a_ops are Hermitian, this implies that f(t) = conj[g(t)]. You can also pass more than two terms if needed. The signature for the a_ops in this form is:. a_ops = [ [(a,a.dag()), (w, t1, t2)],...],. where `w` is a placeholder for the spectra string, and `t1` and `t2' are the time-dependent string for the operators `a` and `a.dag()`, respectively.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/714:394,depend,dependent,394,https://qutip.org,https://github.com/qutip/qutip/pull/714,1,['depend'],['dependent']
Integrability,This Pull attempts to fix the issues with Win not finding RHS functions when repeated time-dependent solvers are used in the tests. I have also added some unit tests to verify that rhs_reuse still works.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/729:91,depend,dependent,91,https://qutip.org,https://github.com/qutip/qutip/pull/729,1,['depend'],['dependent']
Integrability,This Pull implements a faster way to create the output array in the time-dependent codegen function.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/686:73,depend,dependent,73,https://qutip.org,https://github.com/qutip/qutip/pull/686,1,['depend'],['dependent']
Integrability,"This all looks very sensible to me. I'm happy with `qobj * matrix` and `matrix * qobj` both being disallowed (though I also wouldn't mind allowing Numpy to broadcast the multiplication treating `Qobj` as a scalar). The thin wrappers around `add_csr` and `add_dense` (and `add_csr_dense_dense`, etc, if they exist), only need to be done when they're passed to the dispatcher - the functions themselves should remain as they are, so they can conveniently be called with C semantics without needing to cast up to a Python object and back down again. `data.add(left, right, scale)` done at arbitrary precision with no tidying up should be identical to `data.add(left, data.mul(right, scale))` (the operation is called ""fused multiply-add""), so yeah, `add` should agree with `mul`. Good catch!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1607#issuecomment-883321575:224,wrap,wrappers,224,https://qutip.org,https://github.com/qutip/qutip/issues/1607#issuecomment-883321575,1,['wrap'],['wrappers']
Integrability,"This branch adds the ability to calculate two-time correlations with fully time-dependent Hamiltonians and collapse operators. The time-dependence may now either be in the Hamiltonian or the collapse operators, or both. Additionally, support for the numpy list format was added. New tests were made to test all of these functionalities. Bugs were fixed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/509:80,depend,dependent,80,https://qutip.org,https://github.com/qutip/qutip/pull/509,2,['depend'],"['dependence', 'dependent']"
Integrability,"This change enables the use of Python standard logging, and backs it by a new qutip.settings entry. A few instances of classic `if debug: print` style logging have been refactored. The new `qutip.settings` entry is based on [configobj](http://configobj.readthedocs.org), with a fallback to classic `~/.qutiprc` parsing if that library is not available. Errors in the new functionality introduced by this commit are also logged, and can be accessed by setting up `logging.basicConfig` _before_ importing QuTiP. The optional configobj dependency should almost always be met, since it's shipped with matplotlib.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/248:533,depend,dependency,533,https://qutip.org,https://github.com/qutip/qutip/pull/248,1,['depend'],['dependency']
Integrability,"This class allows counts and timings (and general messages) to be collected about solver performance.; These can then be reported at the end.; I could not see anything similar already in qutip. I hope I have not duplicated effort. I have been outputting some counts and timings in hsolve in order to look for efficiency improvements. They are a bit untidy at the moment, so I wanted a more tidy way to achieve the same. . Hopefully this can be used in other solvers too. I intend to make the control stats subclass from this at some point.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/454:50,message,messages,50,https://qutip.org,https://github.com/qutip/qutip/pull/454,1,['message'],['messages']
Integrability,"This contain a new solver for `mcsolve`, `dopri5` which don't go through scipy and is faster for small system. It also contain a new class for time-dependent Qobj. It allow to create an object from the usual list of Qobj and string/function. The object can then be called to obtain the Qobj at a time. It is used in `mcsolve`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/774:148,depend,dependent,148,https://qutip.org,https://github.com/qutip/qutip/pull/774,1,['depend'],['dependent']
Integrability,"This contain a new solver for mcsolve, dopri5 which don't go through scipy and is faster for small system, and replace the treatment of time dependent cases with the use of td_Qobj. Replace the ""cythonizing mcsolve"" pull request: The new pull request split the td_qobj part and mcsolve part so that the pull request for stochastic stays independent from this one (both use td_Qobj).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/816:141,depend,dependent,141,https://qutip.org,https://github.com/qutip/qutip/pull/816,1,['depend'],['dependent']
Integrability,"This could be a possible solution of deprecating the importing `qip` functions to the `qutip `namespace. I wrote a wrapper in the top-level `__init__.py` so that functions from the `qip` module will be wrapped with a deprecation warning when they are imported to the qutip namespace. In this way the all the members of `qip` module still work as usual and the warning will only be given if they are imported in the wrong way. The following code will give a warning; ```; >>> from qutip import *; >>> cnot(); __main__:1: DeprecationWarning: Importing functions/classes of the qip submodule directly from the namespace qutip is deprecated. Please import them from the submodule instead, e.g. qutip.qip import `func_name`.; Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[1. 0. 0. 0.]; [0. 1. 0. 0.]; [0. 0. 0. 1.]; [0. 0. 1. 0.]]; ```; ```; >>> import qutip; >>> qutip.cnot(); __main__:1: DeprecationWarning: Importing functions/classes of the qip submodule directly from the namespace qutip is deprecated. Please import them from the submodule instead, e.g. qutip.qip import `func_name`.; Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[1. 0. 0. 0.]; [0. 1. 0. 0.]; [0. 0. 0. 1.]; [0. 0. 1. 0.]]; >>> import qutip # warning appears only once.; >>> qutip.cnot(); Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[1. 0. 0. 0.]; [0. 1. 0. 0.]; [0. 0. 0. 1.]; [0. 0. 1. 0.]]; ```. The help function still works correctly:; ```; >>> help(cnot); Help on function cnot in module qutip.qip.gates:; cnot(N=None, control=0, target=1); Quantum object representing the CNOT gate. Returns; -------; cnot_gate : qobj; Quantum object representation of CNOT gate. Examples; --------; >>> cnot(); Quantum object: dims = [[2, 2], [2, 2]], shape = [4, 4], type = oper, isHerm = True; Qobj data =; [[ 1.+0.j 0.+0.j 0.+0.j 0.+0.j]; [ 0.+0.j 1.+0.j 0.+0.j 0.+0.j]; [ 0.+",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1074:115,wrap,wrapper,115,https://qutip.org,https://github.com/qutip/qutip/pull/1074,2,['wrap'],"['wrapped', 'wrapper']"
Integrability,"This could be a way of wrapping all the qip functions in `__init__.py` with a deprecation warning without disturbing other users. I use functools.wraps to make all the name, doc attributes come with the wrapping. https://stackoverflow.com/questions/308999/what-does-functools-wraps-do; ```; import inspect; from functools import wraps; import warnings; import qutip.qip as qip. # all the functions in qutip; func_pairs = inspect.getmembers(qip, inspect.isfunction); # choose cnot as an example; qip_cnot = func_pairs[1][1]. def qip_func_wrapper(func):; # use functools.wraps so that help(cnot) give correct doc.; @wraps(func); def deprecated_func(*args, **kwargs):; warnings.warn(; ""Importing functions from the `qip` module under ""; ""the namespace `qutip` will be deprecated, please use from ""; ""`qutip.qip import {}` instead."".format(; func.__name__, func.__name__),; DeprecationWarning); return func(*args, **kwargs); return deprecated_func. cnot = qip_func_wrapper(qip_cnot); ```; It will only give a deprecation warning when `cnot` imported under the namespace of `qutip` is called It should be possible to write something similar for class objects",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1071#issuecomment-521029871:23,wrap,wrapping,23,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-521029871,7,['wrap'],"['wrapping', 'wraps', 'wraps-do']"
Integrability,"This error comes from the integration algorithm.; Take a differential equation like dy/dt = -i*y.; With a simple method like euler: ; y(t+dt) = y(t) + f' dt = y(1-i*dt); So the norm increase exponentially *(1+dt**2) at each iteration, not somewhat randomly.; The default method we use is ""adams"" from scipy's solver, which is a lot better than euler, but still have a bias. We also stop the solver for re-normalization of the state from time to time, introducing another bias.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1085#issuecomment-531322708:26,integrat,integration,26,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531322708,1,['integrat'],['integration']
Integrability,This error message suggests to me that one of the things you're trying to add might be a numpy array:; ```; TypeError: operand 'Qobj' does not support ufuncs (__array_ufunc__=None); ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2326#issuecomment-1960290022:11,message,message,11,https://qutip.org,https://github.com/qutip/qutip/issues/2326#issuecomment-1960290022,1,['message'],['message']
Integrability,This fails because time only contain `0.5`. ; You probably meant `time.append(0.5*i)`. The error message is a catch-all for failure in scipy solver and certainly not clear.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879178905:97,message,message,97,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879178905,1,['message'],['message']
Integrability,"This fixes the calls to the `qutip.configrc` module in `qutip/__init__.py` when setting up OpenMP. Also, this tidies up a lot of very old code out of `__init__.py` that was testing for ancient versions of SciPy and Numpy. Since we have hard requirements at installation time for those, it's fine for us not to test their versions at initialisation. We still should check the version of Cython because it's an optional dependency, so isn't always constrained by the package manager. Some of the changes deliberately make `qutip/__init__.py` less forgiving of exceptions, especially when it comes to loading up `pyximport`. This is deliberate, even though it may make a couple more errors surface that have previously gone undetected. As it stands right now, the file will causes several errors to be silently ignored, even if they weren't the error we were testing for. That masks problems for a short while, but they usually resurface during use when they're much harder to debug. We should be solving the underlying problems, not sweeping them under the rug. In particular, we've frequently had complaints about `pyximport` failing, or trying to import OpenMP modules that have previously been compiled but aren't currently active, and things like that. This patch won't fix all those problems, but it hopefully will make some of them easier to debug when they do appear. There is more explanation to the logic behind each change in the commit messages. Fix #1470.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1471:418,depend,dependency,418,https://qutip.org,https://github.com/qutip/qutip/pull/1471,2,"['depend', 'message']","['dependency', 'messages']"
Integrability,"This happens to me as well, except that I'm running Ubuntu.; I should note that these are created particularly when running qutip.testing.run().; This test also produces warning messages pertaining to these files. The image below depicts the problem.; ![rhstest](https://user-images.githubusercontent.com/45544401/59579796-70420080-9083-11e9-9b66-df1c48686cbd.png)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1009#issuecomment-502516544:178,message,messages,178,https://qutip.org,https://github.com/qutip/qutip/issues/1009#issuecomment-502516544,1,['message'],['messages']
Integrability,This is a cubic spline interpolation object that is compatible with being called from the string-based time-dependent format in the solvers.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/517:108,depend,dependent,108,https://qutip.org,https://github.com/qutip/qutip/pull/517,1,['depend'],['dependent']
Integrability,"This is a draft for the qutip-jax related project for GSoC 2023. Based on the ideas discussed internally, I made the focus of the project to be the design of an integrator that can benefit from autodifferentiation. @quantshah, @Ericgig, @hodgestar what are your thoughts? for instance, I am worried that the project is too specific (?).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2064:161,integrat,integrator,161,https://qutip.org,https://github.com/qutip/qutip/pull/2064,1,['integrat'],['integrator']
Integrability,"This is a fix for #847. Since we already have a minimum requirement for Scipy, the error catching here does not make sense. It is better to leave the error returned from the scipy function `scipy.diags` untouched as the qutip version just wraps the result into a `qutip.Qobj`. . @ajgpitch",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/851:239,wrap,wraps,239,https://qutip.org,https://github.com/qutip/qutip/pull/851,1,['wrap'],['wraps']
Integrability,"This is a tidied up and completed version of #934. The first commit is credited to the original author (although I fixed up some little concerns in the PR and rebased it), because it's logically built off that PR, although in the end it's a complete reimplementation. This is a complete rewrite of the Husimi Q calculations, to make a more formal split between the iterative (low-memory) and precomputed (faster) algorithms, giving full access to both of them. It's a bit easier to use from a user's perspective, and it's faster than #934 as well. The concept of the precomputed matrix is encapsulated into a class with a cached tensor, so that the same precomputed system can be used for many states of different sizes, and autoexpands (up to the memory limit) to accommodate larger states. This is called `QFunc` as opposed to the standard function interface `qfunc`. It also adds rather more error checking on its inputs, and adds a complete testing suite for the new implementation. Closes #934. ## Examples. Let's say we have some states, and the phase-space coordinates we want to calculate the Husimi Q function at.; ```python; >>> import qutip; >>> states = [qutip.rand_dm(32, density=0.2) for _ in [None]*100]; >>> xs = np.linspace(-2, 2, 401); ```. Now the normal way of calculating the Q distribution for a single state is; ```python; >>> qutip.qfunc(states[0], xs, xs); array( ... ); ```. This already has some speed advantages over the pre-PR version of `qfunc`, because it caches a lot of its intermediary results, to avoid recomputing them. This results in calculating more matrix-vector products than before, but far fewr FLOPS overall. By default, `qfunc` issues a warning if it exceeds a certain amount of memory, and falls back to the low-memory version. You can control this limit with the `precompute_memory` option:; ```python; >>> qutip.qfunc(states[0], xs, xs, precompute_memory=0); qutip/qutip/wigner.py:822: UserWarning: Falling back to iterative algorithm due to lack of mem",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583:851,interface,interface,851,https://qutip.org,https://github.com/qutip/qutip/pull/1583,1,['interface'],['interface']
Integrability,"This is an artifact of `auto_tidyup`; the object in the picture is zero everywhere except the diagonal, whose values are of the order 1e-7. The first step of calculating the trace norm is to do `op @ op.dag()`, which you can see will make all the diagonal entries of order 1e-14. This is below the default tolerance for `auto_tidyup`, so the resulting sparse matrix gets contracted to zero. This happens within `Qobj.norm`, so cannot be intercepted by the user. Can be worked around by temporarily setting `qutip.settings.auto_tidyup = False`, but that's just a work-around. Fixed already in `dev.major`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/952#issuecomment-809684497:371,contract,contracted,371,https://qutip.org,https://github.com/qutip/qutip/issues/952#issuecomment-809684497,1,['contract'],['contracted']
Integrability,This is an extension of PR #141 which adds a simplified way of defining array based time-dependent hamiltonians and collapse operators.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/162:89,depend,dependent,89,https://qutip.org,https://github.com/qutip/qutip/pull/162,1,['depend'],['dependent']
Integrability,"This is because I switched the linear solver used by expm to the sparse version added to scipy. The upside is that we can use expm for larger systems, the downside is that the routine now obviously takes longer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/50#issuecomment-29263828:176,rout,routine,176,https://qutip.org,https://github.com/qutip/qutip/issues/50#issuecomment-29263828,1,['rout'],['routine']
Integrability,"This is causing test failures in all CI builds against scipy 1.5 currently. The other failing tests on scipy 1.5 are due to changes to the handling of `csr` matmul operations, which is fixed in patch #1298. As far as I can see, there is no way to recover the exact same behaviour as existed in scipy < 1.5 (there's optimisations of the `lwork` input to the LAPACK routine), and consequently we are not getting the exact same set of eigenvectors for problem dimensions > 32. This does not mean that `brtools` is suddenly doing something wrong. It just means that the test assumed we would have the exact same output as `scipy`, and we don't any more. . This is an annoying problem to fix, I think. Two possible methods:. 1. attempt to ""trick"" scipy into doing the same pre-1.5 behaviour. Possibly this would involve monkey-patching out the ability of `eigh` to optimise the `lwork` parameters (i.e. stubbing out `scipy.linalg.lapack._compute_lwork` to always return `lwork=18*nrows`, `lrwork=24*nrows` and `liwork=10*nrows` to match `qutip.cy.brtools.ZHEEVR`).; 2. do some linear algebra work to determine that the eigenvectors we have returned are equivalent to the ones scipy has returned. 2 is a better solution, but harder to implement, especially in the presence of degenerate or near-degenerate eigenvalues (of which there are likely a lot around 0). 1 is very unsatisfying, but might be enough. In general, this problem will hopefully be solved a bit more thoroughly when `brmesolve` is updated to use the new data layer types, and we standardise the calculation of eigenvalues and -vectors across QuTiP. Hopefully someone has a better idea than me? @Ericgig, @nonhermitian.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1299:364,rout,routine,364,https://qutip.org,https://github.com/qutip/qutip/issues/1299,1,['rout'],['routine']
Integrability,"This is definitely a bug. Looking at correlation.py it looks like _transform_L_t_shift_new() and _args[""_t0""] = tlist[t_idx] are supposed to take care of this, but it seems broken for time-dependent collapse operators for two reasons. 1) _args[""_t0""] = tlist[t_idx] is only set if H is time-dependent, not if the c_ops are. 2) The parsing of the c_ops list in _transform_shift_one_op() is a bit broken (it seems to expect [[c,func]] to be one list deeper or something like that?). I am wondering if the above proposed fix of just shifting tlist in the mesolve() call might clash with (potentially) working code for time-dependent Hamiltonians and introduce a new bug in that case? It could perhaps better to fix the existing functionality by fixing the two issues above. On the other hand, that existing functionality is fairly clunky..... any reason not just to ditch it all and have the shifted tlist in mesolve for all cases?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1808#issuecomment-1148761424:189,depend,dependent,189,https://qutip.org,https://github.com/qutip/qutip/issues/1808#issuecomment-1148761424,3,['depend'],['dependent']
Integrability,"This is due to numerical error in the integration, you can change the precision in options:; `Options(max_step=1/(wr * 100), atol=1e-9, rtol=1e-9)`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2258#issuecomment-1793050302:38,integrat,integration,38,https://qutip.org,https://github.com/qutip/qutip/issues/2258#issuecomment-1793050302,1,['integrat'],['integration']
Integrability,"This is minor, but I would recommend to get rid of the division of terms in H by 2\pi in the function `visualization.plot_energy_levels()`.; Depending on the units that one uses, such a division may not be desired, and is currently a little confusing (as right now it's not explicitly mentioned in the function's doc, so one has to check the code to see what's going on).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/782:141,Depend,Depending,141,https://qutip.org,https://github.com/qutip/qutip/issues/782,1,['Depend'],['Depending']
Integrability,This is my conda env file for linux; ```yaml; name: nbdev; channels:; - fastai; - defaults; - conda-forge; dependencies:; - _r-mutex; - _tflow_select; - absl-py; - alabaster; - asn1crypto; - astor; - astroid; - attrs; - babel; - backcall; - backports; - backports.functools_lru_cache; - blas; - bleach; - bwidget; - bzip2; - c-ares; - ca-certificates; - cairo; - certifi; - cffi; - chardet; - cloudpickle; - compiler-rt; - constantly; - cryptography; - curl; - cycler; - cython; - dbus; - decorator; - defusedxml; - docutils; - entrypoints; - expat; - fastcache; - flake8; - fontconfig; - freetype; - fribidi; - gast; - gettext; - glib; - gmp; - gmpy2; - graphite2; - grpcio; - gsl; - h5py; - harfbuzz; - hdf5; - html5lib; - icu; - idna; - imagesize; - intel-openmp; - ipykernel; - ipython; - ipython_genutils; - isort; - jbig; - jedi; - jinja2; - jpeg; - jsonschema; - jupyter_client; - jupyter_contrib_core; - jupyter_contrib_nbextensions; - jupyter_core; - jupyter_highlight_selected_word; - jupyter_latex_envs; - jupyter_nbextensions_configurator; - keras-applications; - keras-preprocessing; - keyring; - krb5; - lazy-object-proxy; - libcurl; - libcxx; - libcxxabi; - libedit; - libffi; - libgcc; - libgfortran; - libiconv; - libopenblas; - libpng; - libprotobuf; - libsodium; - libssh2; - libtiff; - libxml2; - libxslt; - llvm; - llvm-openmp; - lxml; - make; - markdown; - markupsafe; - matplotlib; - mccabe; - mistune; - mkl; - mkl_fft; - mkl_random; - mock; - mpc; - mpfr; - mpmath; - nbconvert; - nbformat; - ncurses; - nomkl; - notebook; - numpy; - numpy-base; - numpydoc; - olefile; - openblas; - openblas-devel; - openssl; - packaging; - pandas; - pandoc; - pandocfilters; - pango; - pari; - parso; - patsy; - pbr; - pcre; - perl; - pexpect; - pickleshare; - pillow; - pip; - pixman; - prometheus_client; - prompt_toolkit; - protobuf; - psutil; - ptyprocess; - pycodestyle; - pycparser; - pyflakes; - pygments; - pylint; - pyopenssl; - pyparsing; - pyqt; - pyrsistent; - pysocks; - python;,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1558#issuecomment-842089563:107,depend,dependencies,107,https://qutip.org,https://github.com/qutip/qutip/pull/1558#issuecomment-842089563,1,['depend'],['dependencies']
Integrability,"This is post for discussion over whether it might be beneficial to consider additional continuous integration (CI) tools for QuTiP, beyond Travis CI. . Some open-source projects use multiple CI tools, possibly to do different tasks and test different configurations. For example by adding QuTiP to the list of projects using Sphinx for the documentation I noticed they use concurrently Travis CI, CircleCI and [Appveyor](https://github.com/marketplace/appveyor). . [Stackshare](https://stackshare.io/stackups/circleci-vs-jenkins-vs-travis-ci) allows to compare multiple developers tools.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/959:98,integrat,integration,98,https://qutip.org,https://github.com/qutip/qutip/issues/959,1,['integrat'],['integration']
Integrability,This is the Pull that will contain the time-dependent Bloch-Redfield solver.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/676:44,depend,dependent,44,https://qutip.org,https://github.com/qutip/qutip/pull/676,1,['depend'],['dependent']
Integrability,"This issue has been fixed by #1000, but don't you think there should be a new release of QuTiP to integrate it? A minor release integrating only the corresponding commit could be enough. There is nothing more frustrating for a beginner than when the installation instructions fail. I can grantee that most QuTiP users are not expert of packages dependencies and follow installation instructions without understanding them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1019#issuecomment-503156655:98,integrat,integrate,98,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-503156655,3,"['depend', 'integrat']","['dependencies', 'integrate', 'integrating']"
Integrability,"This issue is mostly obseleted by the merging of #1465, since the complete build structure is now different. In that we didn't necessarily implement the complete change requested here (we don't have `pytest` as a requirement), but we do have the PEP-517-approved way of fully specifying build requirements, so getting a correct build environment is automated. I will note that `pip install -e .` doesn't play very nicely with packages with Cython components to build; at the time of writing, `pip` would tend to install dependencies and perform the build in a venv regardless of what was installed in the activated Python environment (especially if conda), which meant that the complete set of Cython files needed to be re-compiled every time this command was run. That's fine if you just want to edit the Python files, but `setup.py develop` would correctly remember which Cython files actually _needed_ to be re-compiled, so remains much more useful for low-level QuTiP development for practical purposes right now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1263#issuecomment-809340570:520,depend,dependencies,520,https://qutip.org,https://github.com/qutip/qutip/issues/1263#issuecomment-809340570,1,['depend'],['dependencies']
Integrability,"This issue is on behalf of [a post in the forums by Louis Fry](https://groups.google.com/forum/#!topic/qutip/93uSuJGK_Jk) who is trying to implement Lindblad operators which cannot be written in the form of a known `f(t) * A`, because the operators are related to the instantaneous eigenstates of a time-dependent Hamiltonian. The documentation in the docstring of `mesolve` says that `c_ops` may be a callback function of the signature `f(t, args) -> Qobj`, similarly to the Hamiltonian. This is not the case, and as best as I can tell, has never been the case. Basic reproduction (though the functionality is just completely missing, so this won't ever succeed).; ```python; import qutip; def c_ops(t, args):; return qutip.create(3); qutip.mesolve(qutip.num(3), qutip.basis(3, 1).proj(), [0, 1], c_ops); ```. ## History. - @jrjohansson originally wrote the docstring saying that `c_ops` could be a callback function in 2012 (pre-QuTiP 1.1.4) in commit 1bf006d4, although the code did not support it at this time; - in issue #40 (2013), he commented that this functionality should be implemented, and this issue was closed without further action in 2018.; - in issue #223 (2014) there is some further discussion, but nothing is done until @Ericgig closes it in 2019, saying it is addressed by QuTiP 4.4.0 (the big swap to QobjEvo), but this doesn't appear to be the case. As of tag `v4.4.0`, the code does not support it. The failing line of code would be https://github.com/qutip/qutip/blob/fc9d9915d0f6242587828ce716ff3cd444edf82a/qutip/mesolve.py#L227-L236; as a function type is truth-y but has no length, but the underlying problem is more just that there's no support for it at all - there's no check for `callable(c_ops)`. At the current `master` at the time of writing (QuTiP ~4.5.1, 4102b99), we're in the same place as at tag `v4.4.0`. ## Solution. In previous issues, people have been told to rewrite the Liouvillian in the supported form, however that's not reasonably possible here. Tech",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1260:304,depend,dependent,304,https://qutip.org,https://github.com/qutip/qutip/issues/1260,1,['depend'],['dependent']
Integrability,"This latest commit 77c21f8 fixes several bugs in the testing of `qutip.qip.operations.gates` - see the commit message for more details. (Force-pushed a new version of it to increase the commit hash references by one character, so GitHub would pick them up and link them.). We should also add tests that the explicit forms of the gates are correct (comparing to hard-coded arrays) in their base forms. These tests should never really fail, but they should be there as a fail-safe sanity check against somebody changing things in that module in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553:110,message,message,110,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553,1,['message'],['message']
Integrability,"This looks good to me. Good to have a test as well. The stochastic functions also need documentation. Since you have some experience with this functionality, it would be great if you could help generate some docs. Also, expanded time-dependence, for example as discussed here:. https://groups.google.com/d/msg/qutip/MoN5VNHvTgk/Liy2v6OKBQAJ. would also be of great help.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/529#issuecomment-245490262:234,depend,dependence,234,https://qutip.org,https://github.com/qutip/qutip/pull/529#issuecomment-245490262,1,['depend'],['dependence']
Integrability,"This looks good. I will look at merging this tonight. I think it would be nice to have a more general time-dependent method as well. I have a function based version working, but not a string one. I will look at trying to implement this sometime this week.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/525#issuecomment-245345549:107,depend,dependent,107,https://qutip.org,https://github.com/qutip/qutip/pull/525#issuecomment-245345549,1,['depend'],['dependent']
Integrability,This looks good. I've tested with both stable and development versions of dependencies (numpy/scipy) and the tests passes. There are two failing tests but they are not related to this issue (but the long-standing issue #30). Nice code cleanup too.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-35965183:74,depend,dependencies,74,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-35965183,1,['depend'],['dependencies']
Integrability,"This looks great and I think it will help a lot in cleanly implementing more complex solvers light the HEOMSolver. I have two suggestions for future improvements:. - I'd like to see `.options = ...` become a method because it now modifies the existing integrator and `.options(...)` would both make that clearer and more flexible. E.g. with a method we could allow both `.options(new_options)` to completely override the options and `.options(key=new_value)` to update just one setting. - The first call to `result.add(t, X)` uses `X = state0` but state0 could be almost anything the user passed in (and not necessarily the canonical form returned by `_restore_state`). It would be better if either there was a separate method to override to convert `state0` into the canonical form, or `result.add(t, X)` was called initially with `X = _restore_state(_data0)`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1879#issuecomment-1108749616:252,integrat,integrator,252,https://qutip.org,https://github.com/qutip/qutip/pull/1879#issuecomment-1108749616,1,['integrat'],['integrator']
Integrability,"This looks great! . The references are sufficient I guess. We can add some more in the example notebook?. One minor terminology point in the explanation: for the Drude-Lorentz bath the correlation functions can be exactly analytically expressed as an infinite sum of exponentials which depend on the temperature, and these are called the Matsubara terms or Matsubara frequencies. . In general, when not dealing with a Drude-Lorentz bath, or something similar, we have to approximate the correlation functions by numerically fitting them to exponentials, but in that case they don't have any particular name I guess. When we get around to adding it as an option, lets call them Fruchtman terms, as it was Amir Fruchtman who told me to try doing it that way!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/455#issuecomment-194752885:286,depend,depend,286,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194752885,1,['depend'],['depend']
Integrability,"This makes a `qutip[full]` target for pip, to make it easier to install qutip and all its optional dependencies.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1510:99,depend,dependencies,99,https://qutip.org,https://github.com/qutip/qutip/pull/1510,1,['depend'],['dependencies']
Integrability,"This may not really be an issue per se, but I thought it would a good idea to post it anyway.; On updating my conda environment which is devoted for qutip I get, . > Collecting package metadata: done; Solving environment: \ ; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:; conda-forge/osx-64::qutip==4.2.0=np113py36_2; done; All requested packages already installed. Is this because qutip depends on somewhat older versions of it's dependencies (like numpy, etc)?; MacOS 10.13.6",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/988:471,depend,depends,471,https://qutip.org,https://github.com/qutip/qutip/issues/988,2,['depend'],"['dependencies', 'depends']"
Integrability,"This moves our entire testing apparatus over to GitHub Actions, since Travis has changed its pricing model and we can no longer rely on it. This actually has several advantages for us right now:; - better integration with other GitHub Actions workflows; - more concurrent jobs; - more access to Windows and macOS machines; - easier job dependency graphs within our resources. This first commit does not add in any Windows tests because they're currently known to fail, but the intention is to turn them on. The blocking issue is currently a failure of the multiprocessing capabilities, which also affects mcsolve. We can now reasonably run coverage reporting on every test run, and upload all of them to Coveralls at the end, so we get accurate stats on what lines were actually tested. I've also turned pytest's timer, so it reports all tests that took longer than a second to run. This should really help identify where the real problems in our testing are - right now you should see that there's a `correlation` test that takes around 2 minutes to run, which is a very sizable chunk of the entire test suite. We can concentrate on rewriting the longest tests to make sure we're still testing all the behaviour, without excessively long runtimes. I've been fairly conservative with the number of tests I set in motion. On the free GitHub plan we can have 20 concurrent VMs running across the whole QuTiP organisation, which I think spreads across all repositories and all test runs. With no Windows tests currently active this is 6 test runs plus the documentation build. If we want more, we could consider spending some money ($4/user/month) to convert into a Teams account which gets us 60 concurrent VMs, but I don't see any need to do this right now. All the test runners now start up almost instantly, which really solves a lot of the slowdown we were getting on Travis. The actual speeds of the Linux VMs seem to be similar to what we had on Travis - the walltimes are slightly longer because ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551:205,integrat,integration,205,https://qutip.org,https://github.com/qutip/qutip/pull/1551,2,"['depend', 'integrat']","['dependency', 'integration']"
Integrability,"This one seems to be due to a quirk of NumPy's fancy indexing, but `tensor_contract` fails to contract out a pair `(i, j)` if `j == i + 1 and i > 0`. For example::. ``` python; In [1]: import numpy as np. In [2]: import qutip as qt. In [3]: dat = np.arange(2 * 3 * 3 * 4).reshape((2 * 3, 3 * 4)). In [4]: qobj = qt.Qobj(dat, dims=[[2, 3], [3, 4]]). In [5]: qt.tensor_contract(qobj, (1, 2)); ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-5-cfa6198a0fa3> in <module>(); ----> 1 qt.tensor_contract(qobj, (1, 2)). C:\Anaconda\lib\site-packages\qutip-3.2.0.dev_8af111f-py2.7-win-amd64.egg\qutip\; tensor.pyc in tensor_contract(qobj, *pairs); 421; 422 # Reshape back into a 2D matrix.; --> 423 qmtx = qtens.reshape((l_mtx_dims, r_mtx_dims)); 424; 425 # Return back as a qobj. ValueError: total size of new array must be unchanged; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/386:94,contract,contract,94,https://qutip.org,https://github.com/qutip/qutip/issues/386,1,['contract'],['contract']
Integrability,"This patch obsoletes #1429, by applying the packaging changes to the current version of `master` rather than needing the new structure on `dev.major`. This patch should (mostly) apply cleanly to `dev.major` as well, so merging this up will be easy - the new automated systems in `setup.py` also mean that the distribution can handle both the current `master` and the `dev.major` package layouts with no changes. The rest of this text is very similar to the original message in #1429. ---. This patch overhauls how QuTiP is packaged and distributed. Once this patch is merged, there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - all directory-tree access is done in a completely platform-agnostic manner, rather than just hoping that Unix-style paths will work on Windows; - the file is tidied and structured into a small script, ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465:466,message,message,466,https://qutip.org,https://github.com/qutip/qutip/pull/1465,1,['message'],['message']
Integrability,This prevents intermediate calls to Python from the time-dependent string format.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/471:57,depend,dependent,57,https://qutip.org,https://github.com/qutip/qutip/pull/471,1,['depend'],['dependent']
Integrability,"This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:92,message,message,92,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749,1,['message'],['message']
Integrability,This second commit fixes the test error in `test_ptrace.py` - the commit message in 6c85261 explains what I've done. The errors in `brtools` are due to a much more difficult fix to implement. See #1299.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1298#issuecomment-649502147:73,message,message,73,https://qutip.org,https://github.com/qutip/qutip/pull/1298#issuecomment-649502147,1,['message'],['message']
Integrability,"This won't be easy to fix, if the compilation is in the task, `parfor` cannot know about it to wait for it.; The simplest would be to have only the main process able to compile. This code will still raise an error, but the solution would be in the error message.; Otherwise communication between process would be needed and this can get tricky. Also `parfor` will be removed. It says in its [documentation](https://qutip.org/docs/latest/apidoc/functions.html#qutip.parallel.parfor) to use `parallel_map` instead since v3.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1963#issuecomment-1199314433:254,message,message,254,https://qutip.org,https://github.com/qutip/qutip/issues/1963#issuecomment-1199314433,1,['message'],['message']
Integrability,Time Dependent Functions returning matrices,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1801:5,Depend,Dependent,5,https://qutip.org,https://github.com/qutip/qutip/issues/1801,1,['Depend'],['Dependent']
Integrability,Time dependent Hamiltonian,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2026:5,depend,dependent,5,https://qutip.org,https://github.com/qutip/qutip/issues/2026,1,['depend'],['dependent']
Integrability,Time dependent Hamiltonian in mcsolve and mesolve product different result,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/490:5,depend,dependent,5,https://qutip.org,https://github.com/qutip/qutip/issues/490,1,['depend'],['dependent']
Integrability,Time dependent SMEsolver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/738:5,depend,dependent,5,https://qutip.org,https://github.com/qutip/qutip/issues/738,1,['depend'],['dependent']
Integrability,Time dependent collapse operators (str-format) in mcsolve don't work,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/844:5,depend,dependent,5,https://qutip.org,https://github.com/qutip/qutip/issues/844,1,['depend'],['dependent']
Integrability,Time dependent collapse oprators,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1398:5,depend,dependent,5,https://qutip.org,https://github.com/qutip/qutip/issues/1398,1,['depend'],['dependent']
Integrability,Time dependent hamiltonian in a rotating frame approximation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1466:5,depend,dependent,5,https://qutip.org,https://github.com/qutip/qutip/issues/1466,1,['depend'],['dependent']
Integrability,Time dependent hamiltonians in 4op 2t correlator,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/206:5,depend,dependent,5,https://qutip.org,https://github.com/qutip/qutip/pull/206,1,['depend'],['dependent']
Integrability,Time-dependent Hamiltonian problems,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/215:5,depend,dependent,5,https://qutip.org,https://github.com/qutip/qutip/issues/215,1,['depend'],['dependent']
Integrability,Time-dependent coefficients without cubic interpolation in QobjEvo,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1050:5,depend,dependent,5,https://qutip.org,https://github.com/qutip/qutip/pull/1050,1,['depend'],['dependent']
Integrability,Time-dependent exponentiation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1308:5,depend,dependent,5,https://qutip.org,https://github.com/qutip/qutip/issues/1308,1,['depend'],['dependent']
Integrability,Time-dependent superoperator input in list callback format,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/226:5,depend,dependent,5,https://qutip.org,https://github.com/qutip/qutip/issues/226,1,['depend'],['dependent']
Integrability,"To be honest, I'm not 100% sure myself since it's just turned into a string and cythonized anyways. When it was initially added, I had assumed the purpose was because occasionally a function doesn't work well in the string format or is slow in the list-function format. Though I'm working on adding time-dependence to the Bloch Redfield solver by using piece-wise constant Liouvillians and there I guess the format makes a bit more sense intuitively, PR #525.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/520#issuecomment-242163512:304,depend,dependence,304,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-242163512,1,['depend'],['dependence']
Integrability,"To clarify, you want me to implement something like this message:. ```python; if 'c_ops' in kwargs:; warnings.warn(""please use c_op_list argument in current version. c_op_list will be deprecated in favour of c_ops in future versions.""); c_ops = c_op_list; ```. but not change 'c_op_list' to 'c_ops'? Then you want me to change it in the dev.major branch?. Thanks",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1716#issuecomment-974810877:57,message,message,57,https://qutip.org,https://github.com/qutip/qutip/issues/1716#issuecomment-974810877,1,['message'],['message']
Integrability,"To reproduce the problem:. - run Lecture 8 - Adiabatic sweep from qutip lectures with qutip 4.02. - Error message:. Traceback (most recent call last):; File ""as.py"", line 92, in <module>; mesolve(h_t, psi0, taulist, [], process_rho, args); File ""/usr/local/lib/python2.7/site-packages/qutip/mesolve.py"", line 208, in mesolve; _solver_safety_check(H, rho0, c_ops, e_ops, args); File ""/usr/local/lib/python2.7/site-packages/qutip/solver.py"", line 822, in _solver_safety_check; for ii in range(len(e_ops)):; TypeError: object of type 'function' has no len()",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/645:106,message,message,106,https://qutip.org,https://github.com/qutip/qutip/issues/645,1,['message'],['message']
Integrability,"Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR; BR Tools : zheevr ...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197:982,depend,dependent,982,https://qutip.org,https://github.com/qutip/qutip/issues/1197,4,['depend'],['dependent']
Integrability,TravisCI integration for QuTiP,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/78:9,integrat,integration,9,https://qutip.org,https://github.com/qutip/qutip/pull/78,1,['integrat'],['integration']
Integrability,"Trying to run the Qutip `propagator` for a Hamiltonian that is a `QobjEvo` object does not work and will result in _Invalid time-dependent format_ error. Example of a piece of code. ```; N = 3; a = destroy(N); t_total = 10; tlist = np.linspace(0, t_total, 1000); H = a.dag()**2 * a**2; H1 = a.dag()*a; H_tot = QobjEvo([H,[H1,np.cos(tlist)]],tlist=tlist); prop = propagator(H_tot, tlist, []); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1166:129,depend,dependent,129,https://qutip.org,https://github.com/qutip/qutip/issues/1166,1,['depend'],['dependent']
Integrability,"Unfortunately I have had some issues with `conda` in CI (for instance, it's solver uses quite a bit of memory, which had readthedocs actually shoot it down when solving the environment at some point). Also build matrices that test various combinations of optional dependencies are much cleaner when using a pure `pip` setup. I see your point though. I'll have to work around it for now. Thanks anyway!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-777706377:264,depend,dependencies,264,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-777706377,1,['depend'],['dependencies']
Integrability,"Unfortunately it doesn't really help here for the steady state stuff. I; guess generally speaking systems which are strongly driven don't have a; steady state in the normal sense, however periodic driving sometimes leads; to periodic steady states. I guess propagator_steadystate calculated the rho which satisfies. U(t)rho= rho ?. Given that in the original code snippet t=2 pi/w I suppose this gives one; part of the potentially periodic solution? (Though if the driving is weak; and on resonance this periodic oscillation will be a small modulation on; top of the rwa result). As for calculating the spectrum, I am not sure. I guess; s I would argue that the steady state used as the initial condition in the; correlation function should be the average of the periodic steady state; over one period?. On Thu, 5 Nov 2020, 00:53 Tarun Raheja, <notifications@github.com> wrote:. > @nwlambert <https://github.com/nwlambert> didn't we fix this by natively; > allowing time dependent Hamiltonians in our solver? Maybe we should mention; > the repo here since it's relevant.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1377#issuecomment-721813998>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABG3YHPABJ7DLKBEJNQYMPLSOF2GNANCNFSM4TJJWPPQ>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1377#issuecomment-722055681:971,depend,dependent,971,https://qutip.org,https://github.com/qutip/qutip/issues/1377#issuecomment-722055681,1,['depend'],['dependent']
Integrability,Unify qutip's graphing interface,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1910:23,interface,interface,23,https://qutip.org,https://github.com/qutip/qutip/issues/1910,1,['interface'],['interface']
Integrability,"Update from Google Meet discussion:. @jakelishman @Ericgig and I had a quick video call and decided that `.replace(...)` should be renamed something like `.replace_arguments(...)` and accept either a dictionary of arguments (as a positional only argument) or keyword arguments (with the new values for the arguments). In either case, the given argument keys should be update to their new values and any other keys should retain their previous values. For the other attributes `.replace(...)` was supporting replace:. * the shift value can just be updated by wrapping the coefficient with `ShiftCoefficient` or updating the `t0` of an existing shift coefficient.; * the `tlist` value really doesn't make that much sense to update without also updating the associated function values and there are many ways this can go wrong (e.g. sub-expressions with different tlists, supplying a new tlist with the incorrect length).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1507#issuecomment-856760085:558,wrap,wrapping,558,https://qutip.org,https://github.com/qutip/qutip/pull/1507#issuecomment-856760085,1,['wrap'],['wrapping']
Integrability,"Update to 4.1 dev or do [e_ops]. -P. On Feb 9, 2017 06:10, ""WolfgangLechner"" <notifications@github.com> wrote:. > To reproduce the problem:; >; > -; >; > run Lecture 8 - Adiabatic sweep from qutip lectures with qutip 4.02; > -; >; > Error message:; >; > Traceback (most recent call last):; > File ""as.py"", line 92, in; > mesolve(h_t, psi0, taulist, [], process_rho, args); > File ""/usr/local/lib/python2.7/site-packages/qutip/mesolve.py"", line 208,; > in mesolve; > _solver_safety_check(H, rho0, c_ops, e_ops, args); > File ""/usr/local/lib/python2.7/site-packages/qutip/solver.py"", line 822,; > in _solver_safety_check; > for ii in range(len(e_ops)):; > TypeError: object of type 'function' has no len(); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/645>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqUOt9R6_QP67bFpCcaIVV3D2Su2cks5raxBggaJpZM4L8Gzy>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/645#issuecomment-278673105:239,message,message,239,https://qutip.org,https://github.com/qutip/qutip/issues/645#issuecomment-278673105,1,['message'],['message']
Integrability,"Update to the original 4.5.1 which is already a month old. New inclusions: . Better error message for failed string coefficient compilation.; Run the python 3.8 test in travis. (by Simon Cross ); Fix clebsch function for half-integer (by Thomas Walker); Deprecate graph function (by Jake Lishman); Fix travis warning (by Ivan Carvalho); Fix spin husimi/wigner functions (by maij). I would like the mac stuff to be fixed and moving the mac test to 3.8, but that will take some time.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1215:90,message,message,90,https://qutip.org,https://github.com/qutip/qutip/pull/1215,1,['message'],['message']
Integrability,Use double erf function in time-dependent strings,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/587:32,depend,dependent,32,https://qutip.org,https://github.com/qutip/qutip/pull/587,1,['depend'],['dependent']
Integrability,"Users should not be installing pip dependencies into a conda environment. They should be using conda, not pip. You are only running into this because you are using pip inside a conda environment, and yes, you'll need the dependencies (with their proper conda names) in that environment. (And, since wheels work inside conda, `pip install cutip` should work inside a conda env, even if they should be using conda - it's only because you are building inside it, which is very much not supported for normal users)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1738#issuecomment-990018307:35,depend,dependencies,35,https://qutip.org,https://github.com/qutip/qutip/pull/1738#issuecomment-990018307,2,['depend'],['dependencies']
Integrability,"Uses a tuple (f(w), g(t)) to give product of noise power spectrum f(w) and time-dependence g(t). Both can be strings or Cubic_Spline objects.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/707:80,depend,dependence,80,https://qutip.org,https://github.com/qutip/qutip/pull/707,1,['depend'],['dependence']
Integrability,Using 1/t dependence in the collapse operator for mesolve,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1353:10,depend,dependence,10,https://qutip.org,https://github.com/qutip/qutip/issues/1353,1,['depend'],['dependence']
Integrability,"Using Time dependent Hamiltonian in mcsolve and mesolve product different result for expectation value for `sigmay()`. It seems to work well for expectation value for `sigmax()` or `sigmaz()`. I wonder if dealing with complex number leads to this or there is another issue. This is a simple code illustrating the problem. ```; from qutip import *; from scipy import *; from pylab import*; #sigmay problem. psi0 = (basis(2,0) + basis(2,1)).unit() ; rho0 = psi0*psi0.dag(). H0 = 0*sigmax(); H1 = sigmax(); print(psi0); print(H0*psi0); H2 = sigmaz(); def H1_coeff(t,args):; return t-1. def H2_coeff(t,args):; return -t. h_t = [H0,[H1, H1_coeff],; [H2, H2_coeff]]. ntraj = 500. tlist = linspace(0, 3, 100); medata = mesolve(h_t, rho0, tlist, [], [sigmay()], args = {}); mcdata = mcsolve(h_t, psi0, tlist, [], [sigmay()], ntraj = ntraj, args = {}). fig,axes = subplots(1,1,figsize=(12,6)); axes.plot(mcdata.expect[0], color=""green"", alpha =0.6, label = ""mcsolve""); axes.plot(medata.expect[0], color=""blue"", alpha =0.6, label = ""mesolve""); axes.set_xlabel(r'$\frac{t}{t_f}$'); axes.set_ylabel('Expectation value'); axes.legend((""mcsolve"", ""mesolve"")). show(); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/490:11,depend,dependent,11,https://qutip.org,https://github.com/qutip/qutip/issues/490,1,['depend'],['dependent']
Integrability,"Using integer-like floats in `math.factorial` is deprecated as of Python 3.9. Glancing over the rest of the code, I'm fairly sure `math.factorial` is only called on floats formed by (e.g.) `N / 2 + 0.5`, which is guaranteed be an integer for all odd `N` integers, but to be safe I inserted the same test that `math.factorial` will do as well. By the way: depending on how accurate you actually want/need to be with your degeneracy calculations, a common way to deal with these binomial quantities is to work in the logarithmic space --; ```python; def factln(x):; return scipy.special.gammaln(x + 1). def energy_degeneracy(N, m):; return int(np.exp(Decimal(factln(N) - factln(N/2 + m) - factln(N/2 - m)))); ```; This is pretty much guaranteed to be faster, but a little less precise; double-precision floats have ~15 decimal digits of precision compared to the `Decimal` default of 28. You have to be careful that the `np.exp` call doesn't overflow (unless you can use the number in logarithmic space as well), but you can just use a single `Decimal` instance like I did if it really matters to you to have huuuuge numbers output. I suspect it doesn't, since you multiply it by a float right after, which will overflow to `inf`. Timings:; ```python; from math import factorial; from decimal import Decimal; import numpy as np; from scipy.special import gammaln. def degeneracy_all_decimal(N, m):; return int(Decimal(factorial(N)) / (Decimal(factorial(int(N/2+m))) * Decimal(factorial(int(N/2-m))))). def degeneracy_log_then_decimal(N, m):; return int(np.exp(Decimal(gammaln(N+1) - gammaln(N/2+m+1) - gammaln(N/2-m+1)))). def degeneracy_log(N, m):; return int(np.exp(gammaln(N+1) - gammaln(N/2+m+1) - gammaln(N/2-m+1))); ```; ```python; In [3]: %timeit degeneracy_all_decimal(1000, 0); ...: %timeit degeneracy_log_then_decimal(1000, 0); ...: %timeit degeneracy_log(1000, 0); 831 µs ± 1.91 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each); 31.9 µs ± 190 ns per loop (mean ± std. dev. of 7 runs,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1550:355,depend,depending,355,https://qutip.org,https://github.com/qutip/qutip/pull/1550,1,['depend'],['depending']
Integrability,"Using the stable release of QuTiP doesn't really help me: I'm trying to prepare a pull request for QuTiP, so I need to be able to run tests on `master` and my topic branch. I've been relying on the CI to run the tests for me, but that gets tricky once you run into test failures. You can't really debug the tests if you can't run them locally. I'm also not surprised you're not able to reproduce this on your machine on Linux: this is definitely a platform-dependent problem. The issue is that QuTiP's use of Cython is *extremely* brittle. This makes contributing to the library quite difficult. Until the most recent release (4.4.1), these kinds of problems were also affecting me and colleagues a lot as a user, but luckily that seems to have gotten better. Nonetheless, it would be great if QuTiP's low-level parts became even more robust. I know this is not a trivial problem (or I'd contribute some fixes myself), and I'm very thankful for all the core developers' work, but it's definitely a source of frustration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634:457,depend,dependent,457,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634,1,['depend'],['dependent']
Integrability,"Very probably. The integrator doesn't know what you're trying to achieve, and you've set it exact tolerance limits (either implicitly or explicitly), so it has to integrate within those limits. If you want the steady-state solution, you can try `qutip.steadystate` instead.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-886246136:19,integrat,integrator,19,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-886246136,2,['integrat'],"['integrate', 'integrator']"
Integrability,WIP: Citation message and bibtex generator,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/752:14,message,message,14,https://qutip.org,https://github.com/qutip/qutip/pull/752,1,['message'],['message']
Integrability,WIP: Cubic spline compatible with time-dependent format.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/517:39,depend,dependent,39,https://qutip.org,https://github.com/qutip/qutip/pull/517,1,['depend'],['dependent']
Integrability,Warning message when os.environ['HOME'] is not defined,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/365:8,message,message,8,https://qutip.org,https://github.com/qutip/qutip/issues/365,1,['message'],['message']
Integrability,"We can remove it here. It is working but does not have a user facing interface or documentation, so I don't think any user use it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1575#issuecomment-861872837:69,interface,interface,69,https://qutip.org,https://github.com/qutip/qutip/pull/1575#issuecomment-861872837,1,['interface'],['interface']
Integrability,We can set up packages dependencies easily enough. It's already done automatically in fact. Our numpy package provides a versioned python3-numpy-abi (currently python3-numpy-abi9) and an debhelper dh_numpy3 tool which sets the versioned dependency for dependent packages at build time,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1720#issuecomment-977842255:23,depend,dependencies,23,https://qutip.org,https://github.com/qutip/qutip/issues/1720#issuecomment-977842255,3,['depend'],"['dependencies', 'dependency', 'dependent']"
Integrability,"We could take this PR as an example of how to work with a very messy git history. I see some forced pushes which should probably have been rebases to avoid conflicts. But at this point I would suggest to Boxi that you open a fresh PR branching from the current master on your local qutip repo. So do:. ```; git checkout master; git pull upstream master; git push origin master; ```. This syncs your master to QuTiP. Then, start a new branch and make the same changes that you did here on that new branch. . Make the changes, add commit etc.; ```; git checkout -b user_gate2; ...; git add .; git commit -m ""message""; ```. and then make a new PR and close this (without merging). Then delete this branch (locally and remote). ```; git branch -D user_gate; git push origin -delete user_gate; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1025#issuecomment-505060556:606,message,message,606,https://qutip.org,https://github.com/qutip/qutip/pull/1025#issuecomment-505060556,1,['message'],['message']
Integrability,"We get warnings when compiling using the mingw32 compiler under windows.; ```; ""unknown conversion type 'z' in format""; ```; The warnings only seem to occur during the tests and not the build_ext, so there may be something we can do with CFLAGS. ; I have done quite a lot of reading around and it seems many projects suffer from this. There did not seem to be a clear resolution, other than to change the C code. We don't seem to use the 'z' in any of our source, but it is found in all the so files, so I guess it is used in one of the dependencies, and hence I don't think we can take that approach.; The tests still seem to pass, so I am putting it down as a won't fix.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/597:537,depend,dependencies,537,https://qutip.org,https://github.com/qutip/qutip/issues/597,1,['depend'],['dependencies']
Integrability,"We have made some progress! But I also have some questions for the experts here.; * We have added a Users Guide for the new solver, as a new subsection of the ""Monte Carlo Solver"" guide. On my machine, I can build the documentation without problems (there are some warnings, but unrelated to this pull request). However, the check here failed and I do not see a useful error message. Does someone have an idea what is going on?; * We have two example notebooks to add to qutip-notebooks. How to proceed in practice: do we open a separate pull request in qutip-notebooks?; * The _run_one_traj function now exists 3 times, with practically identical code:; https://github.com/qutip/qutip/blob/master/qutip/solver/multitraj.py#L197; https://github.com/qutip/qutip/blob/master/qutip/solver/mcsolve.py#L427; https://github.com/pmenczel/qutip/blob/nonmarkovian-mcsolve/qutip/solver/nm_mcsolve.py#L160; I've noticed a small bug that has gone unnoticed because of this: ""step"" [here](https://github.com/qutip/qutip/blob/master/qutip/solver/multitraj.py#L206) should be ""integrate"", I think. Maybe it would be a good idea to make the type of `Result` that is used for single trajectories generic in multi-trajectory solvers (just like the `resultclass` is already generic in solvers in general)? I have implemented that [here](https://github.com/pmenczel/qutip/commit/4a25709f90ed7c6dc2153011ee5a8110f3957c95) and could merge that commit into this PR if you think that's a good idea. Side note: due to a WSL bug, some of my commit timestamps are messed up. Because of that, some commits seem to be shown out of order here...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2070#issuecomment-1446149901:375,message,message,375,https://qutip.org,https://github.com/qutip/qutip/pull/2070#issuecomment-1446149901,2,"['integrat', 'message']","['integrate', 'message']"
Integrability,"We probably shouldn't mutate the given `Options` object, but the call as written here doesn't make a huge amount of sense - why would you want to run the integrator but not have any output stored at all? You'd just be spinning your processor. That said, if we're going to do something different to what the user requested we should at least emit a warning. There's also interplay with `store_final_state` here too; it's questionable technique to do `e_ops=None, store_final_state=True` with a `tlist` with more than two elements, but probably people who aren't familiar with `nsteps` will do something like that, and it seems a bit picky to prevent/warn on that when the intention seems clear. I think that the current behaviour doesn't take this case into account when falling back - it'll store all states, which in the 4.x branch is a fairly major time sink (but much much faster in 5.0). What behaviour would you expect for your use case? I'd probably do something like:; 1. if we change the `Options`, we have to clone it first to prevent leaking our mutations; 2. if we're not going to save anything, we should warn the user but then do it anyway - maybe their time-dependence functions leak state, and they're just doing something weird with that; 3. `store_final_state` should count as ""storing something"", so no need to set `store_states` if `store_final_states=True` and there are no `e_ops`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1437#issuecomment-775216824:154,integrat,integrator,154,https://qutip.org,https://github.com/qutip/qutip/issues/1437#issuecomment-775216824,2,"['depend', 'integrat']","['dependence', 'integrator']"
Integrability,"We removed the need for cython at run time (officially) recently. It is still needed at installation for installation from sources, but conda can be used if cython is not available. I am not sure about the minimum version, but it does not have to be that recent. Pickling of cdef class is done manually and depend more on pickle version than cython's.; We don't support python2 anymore since numpy also removed it's support, but 4.3 or 4.2 should date from a time it was still supported. Are some of the cython files compiling or are they all failing?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1129#issuecomment-607866651:307,depend,depend,307,https://qutip.org,https://github.com/qutip/qutip/issues/1129#issuecomment-607866651,1,['depend'],['depend']
Integrability,"We use the scipy ode solver. In their documentation ; https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.ode.html; they state that for the ZVODE solver. > Warning; > This integrator is not re-entrant. You cannot have two ode instances using the “zvode” integrator at the same time. This does seem a big shame, as there are of course many good reasons to want to parallelise solving ODEs.; Not really sure that there is any easy way around this. Only one of the ode integrators does not carry this warning. We currently don't have any setting that allows switching integrator method",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/822#issuecomment-365680262:113,integrat,integrate,113,https://qutip.org,https://github.com/qutip/qutip/issues/822#issuecomment-365680262,5,['integrat'],"['integrate', 'integrator', 'integrators']"
Integrability,"Well how about we just stick with the way it is, change squeez to squeeze in the next release (with squeez depreciated and calling the new version), and mentioning in the docs that qutip should probably be imported last?. On Wednesday, June 5, 2013 at 11:54 AM, Robert Johansson wrote:. > I would have preferred if the squeez function was called squeeze... but that's just a personal preference. There are many very generic symbol names in qutip, such as tensor, create, etc. These could easily appear in some other package, such as scipy or numpy sometime in the future, and then become a conflict, so I tend to prefer not relying on distorting the function names to make them more unique. For example, identity seems more readable to qeye, which is why i prefer it.; > What is your suggestion? That we remove identity again? If you think that's the best thing to do that I'm ok with that.; > However, if best practices python programming is followed, either by not importing into the global namespace or by importing packages in dependency order (for example numpy, matplotlob, scipy. followed by qutip), then this isn't really a problem.; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/25#issuecomment-18952812).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/25#issuecomment-18955374:1031,depend,dependency,1031,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18955374,1,['depend'],['dependency']
Integrability,Well the performance depends strongly on the number of elements in tlist. For the given example the only calls that change is the increased number of expectation value calculations and a larger number of times the overall for-loop is run.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-64520234:21,depend,depends,21,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520234,1,['depend'],['depends']
Integrability,"Well the usual way is command+R for running through a ruby interface. Although, one can do shift+command+R to run directly in the terminal. The latter works fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/121#issuecomment-63265342:59,interface,interface,59,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63265342,1,['interface'],['interface']
Integrability,"What about the c99 complex math functions? Are those a possibility? Perhaps we could specify that 'j' is a reserved variable and then search the input string for 'j' and then call math or cmath, depending on the result.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/154#issuecomment-61041717:195,depend,depending,195,https://qutip.org,https://github.com/qutip/qutip/pull/154#issuecomment-61041717,1,['depend'],['depending']
Integrability,"What do you think is more efficient than doing; ```python; states = [qutip.basis(2, 0), qutip.basis(2, 1)]; results = [qutip.sesolve(H, state, times) for state in states]; ```; ?. I'm saying that to do each state independently, `mesolve` and `sesolve` have to independently integrate each state, so even if we added this functionality into those functions directly, it would be little more than that loop I just wrote if you have used the tools I described in the first comment. If you want the entire system propagator, `qutip.propagator` can calculate that for you. Lots of people have successfully used QuTiP already as part of reinforcement learning protocols - I've worked with at least a couple, but if you have very specific domain knowledge of your system, you often will be able to write an integrator which is faster for your cases, rather than the full general-purposes ones in QuTiP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1323#issuecomment-660471465:274,integrat,integrate,274,https://qutip.org,https://github.com/qutip/qutip/issues/1323#issuecomment-660471465,3,"['integrat', 'protocol']","['integrate', 'integrator', 'protocols']"
Integrability,"What if for different time slices, A itself changes as A(t)? i.e., one would like to explicitly define the time-dependent part as a function which returns an operator and not just some constant A with the coefficients changing as f(t).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-460997135:112,depend,dependent,112,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-460997135,1,['depend'],['dependent']
Integrability,What is different between this and the built in routine that seems to do the sane thing?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/912#issuecomment-469413174:48,rout,routine,48,https://qutip.org,https://github.com/qutip/qutip/pull/912#issuecomment-469413174,1,['rout'],['routine']
Integrability,What is the motivation behind having the np array time dependence? Is this some thing that the cubic spline function could be used for?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/520#issuecomment-242132546:55,depend,dependence,55,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-242132546,1,['depend'],['dependence']
Integrability,"What's wrong with just using a loop? Adding the `combine` statement is already extra work for you, and using the solver in a loop will be much clearer about what's going on. The `Qobj` object container is not meant to a vector of objects itself - use a list for that, or a numpy array if you're only going to do simple mathematical operations that you want broadcasting for (numpy will broadcast `*`, `/`, `+`, `-` and `**` correctly). The calculational complexity of the solver isn't helped by knowing you're going to do it a few times, but there are some setup costs that QuTiP already gives you the tools to alleviate. `mesolve` constructs a Liouvillian out the Hamiltonian and collapse operators; if you want to reuse the result of this, you should use `qutip.liouvillian` and `qutip.QobjEvo`, and use the `compile` method of the latter. You can pass the result of this directly as the `H` parameter of `mesolve` and it'll skip all the setup. There is some work going on about making a class-based interface to the solvers, which allows easier use of the tools to reduce setup time, but those likely won't be released for some time yet. In the meantime, just use a loop here. There will not be a notable slow down (unlike numpy maths operations) because the Python iteration over elements takes a negligible amount of time compared to single numerical intergration. As a side note, in this particular case you're doing unitary dynamics with state vectors, so this call to `mesolve` is actually translated into one to `sesolve`, which does not need to construct the Liouvillian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1323#issuecomment-660459774:1002,interface,interface,1002,https://qutip.org,https://github.com/qutip/qutip/issues/1323#issuecomment-660459774,1,['interface'],['interface']
Integrability,"When I tried to use the `qutip.squeeze` function for my simulations I noticed that something was off. Upon further investigation I found out that the output is not a truncated version of the single-mode squeezing unitary, but rather the matrix exponential of the truncated generator. These are _very_ different things!. Am I right in assuming that the most useful matrix would be the truncated unitary? If that's the case, the current method to compute it is wrong. To compute the right matrix one can use the disentangling formula for SU(1,1) (formula (31) [here](http://aip.scitation.org/doi/pdf/10.1063/1.3413923)):. ```python; def squeeze(n,z):; s0 = np.exp(1j*np.angle(z))*np.tanh(abs(z)); s1 = -2*np.log(np.cosh(abs(z))); s2 = -np.exp(-1j*np.angle(z))*np.tanh(abs(z)); ; L = s0*0.5*(qt.create(n)*qt.create(n)); K = s1*(0.5*qt.num(n)+0.25*qt.identity(n)); R = s2*0.5*(qt.destroy(n)*qt.destroy(n)); ; return (L.expm())*(K.expm())*(R.expm()); ```. As you can see, this definition does *not* depend on the truncation parameter. Specifically, the upper-left portion of the matrix that `qutip.squeeze` outputs converges to my `squeeze` function for large `n`. I suspect that one can apply similar arguments to other functions in `qutip`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/661:994,depend,depend,994,https://qutip.org,https://github.com/qutip/qutip/issues/661,1,['depend'],['depend']
Integrability,"When calculating the propagators analytically it does not include the drift hamiltonian, which can result in a significantly different operator. This is particularly relevant to me as the drift hamiltonian changes depending on which qubit is being controlled because the basis is changed to a different rotating frame. This means I replace the drift when operating a pulse. If the drift is not included in the propagator calculation it results in a substantially incorrect matrix. I think there should be an include_drift=True/False option in the function definition which if true adds the drift hamiltonian before it exponentiates.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1602:214,depend,depending,214,https://qutip.org,https://github.com/qutip/qutip/issues/1602,1,['depend'],['depending']
Integrability,"When no options and no e_ops are given, the solver should store the states, otherwise nothing is done. Since the default value si `store_states=False`, the solver don't know that the value was explicitly given or the default. We should have `store_states=None` as the default. This allow us to respect an explicit False while keeping the expected behaviour when no options are given. I will make this change in the v5 solver (And make sure no Options are modified). `tlist` was never meant to control time dependence, it represent the time at which the solver look at the state (+ first and last times). I added array support as coefficient as a shortcut to Cubic_Spline and I used the already existing tlist, but this is clearly a limitation and in v5 they will be controlled independently.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1437#issuecomment-775976194:506,depend,dependence,506,https://qutip.org,https://github.com/qutip/qutip/issues/1437#issuecomment-775976194,1,['depend'],['dependence']
Integrability,"When using multiple time dependant functions (i.e. H = [H0,[H1,H1_coeff],[H2,H2_coeff],...]) the functions in qutip.correlations produce incorrect results. A couple observations:. - You get different results depending on the order of the time dependant parts. mesolve produces identical results.; - Even if the time-varying Hamiltonian is empty or the function returns zero, it can still affect the results. I've attached some code demonstrating this (3 level atom and a laser) and some images of the plots produced.; [corrtest.txt](https://github.com/qutip/qutip/files/3398074/corrtest.txt); [norder2](https://user-images.githubusercontent.com/42548316/61312064-962c0380-a7ef-11e9-84e7-964a5ff49f21.png); [corrorder2](https://user-images.githubusercontent.com/42548316/61312065-962c0380-a7ef-11e9-8e28-5797fb4004d3.png); [norder1](https://user-images.githubusercontent.com/42548316/61312066-962c0380-a7ef-11e9-9e5a-dce127d8be11.png); [corrorder1](https://user-images.githubusercontent.com/42548316/61312067-962c0380-a7ef-11e9-8eb2-532eec7bbb61.png). I'm assuming this is to do with how the Hamiltonian is propagated, maybe only one of the functions is being shifted in time? Any chance of a fix on this? A workaround is to make the entire Hamiltonian a single time dependant function but obviously this isn't ideal.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1048:25,depend,dependant,25,https://qutip.org,https://github.com/qutip/qutip/issues/1048,4,['depend'],"['dependant', 'depending']"
Integrability,When using the `average_states` solver option `general_stochastic` seemed to error when summing the timeslot states. This PR provides a fix for this. Also included is some hopefully more succinct messages from the safety checks in `general_stochastic`.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1115:196,message,messages,196,https://qutip.org,https://github.com/qutip/qutip/pull/1115,1,['message'],['messages']
Integrability,"When using the `rhs_with_state=True` with list func type time dependence the state is passed to the user defined func as a numpy vector. I think users would expect this to be a `Qobj`, as in:; https://groups.google.com/forum/#!topic/qutip/BqUZQEQN1c4. The question is whether this should be considered a bug, and hence whether we can fix this without worrying too much about how this will affect other users. My guess it that it is not a well used feature anyway @nonhermitian what do you think? There is no documentation on it's usage for instance, and I don't think there are any tests for it. This is perhaps related #824, insomuchas any fix we do here should be replicated in sesolve as well. The fix seems quite easy, as I think we can assume that the `rho` can be converted as; ```; def drho_list_td_with_state(t, rho, L_list, args):; d = np.sqrt(len(rho_vec)); rho_qobj = QObj(dense2D_to_fastcsr_fmode(vec2mat(rho), d, d)); ```; @Ericgig how do you accommodate rhs_with_state in `QobjEvo`?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/947:62,depend,dependence,62,https://qutip.org,https://github.com/qutip/qutip/issues/947,1,['depend'],['dependence']
Integrability,"Whether it is an issue likely depends on you school of thought. The error comes from the finite accuracy of the solvers. By default, the solutions are found using a method that is accurate 12-order in the step size and looks for absolute and relative errors at the 1e-8 and 1e-6 levels, respectively. If you evolve for long enough then inevitably there is going to be some error, and you will not get perfectly Hermitian matrices. One can accept this, and possibly lower the tolerance levels for more accuracy, or you can take 0.5*(A+A.dag()) to force the Hermicity. What method you use likely depends on your question and taste. Either way, I do not think that I would call this an issue. It is more of a fact of life when doing numerics. Paul. > On Jun 1, 2015, at 20:00, mmensing notifications@github.com wrote:; > ; > I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/qutip/qutip/issues/122#issuecomment-107400015.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/122#issuecomment-108683653:30,depend,depends,30,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-108683653,2,['depend'],['depends']
Integrability,"While running the above example on a jupyter notebook I am faced with the following error ; ```; {; 	""name"": ""TypeError"",; 	""message"": ""_remove_margins.<locals>._get_coord_info_new() missing 1 required positional argument: 'renderer'"",; 	""stack"": ""---------------------------------------------------------------------------; TypeError Traceback (most recent call last); File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/pyplot.py:265, in _draw_all_if_interactive(); 263 def _draw_all_if_interactive() -> None:; 264 if matplotlib.is_interactive():; --> 265 draw_all(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/_pylab_helpers.py:131, in Gcf.draw_all(cls, force); 129 for manager in cls.get_all_fig_managers():; 130 if force or manager.canvas.figure.stale:; --> 131 manager.canvas.draw_idle(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/backend_bases.py:1919, in FigureCanvasBase.draw_idle(self, *args, **kwargs); 1917 if not self._is_idle_drawing:; 1918 with self._idle_draw_cntx():; -> 1919 self.draw(*args, **kwargs). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/backends/backend_agg.py:387, in FigureCanvasAgg.draw(self); 384 # Acquire a lock on the shared font cache.; 385 with (self.toolbar._wait_cursor_for_draw_cm() if self.toolbar; 386 else nullcontext()):; --> 387 self.figure.draw(self.renderer); 388 # A GUI class may be need to update a window using this draw, so; 389 # don't forget to call the superclass.; 390 super().draw(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/artist.py:95, in _finalize_rasterization.<locals>.draw_wrapper(artist, renderer, *args, **kwargs); 93 @wraps(draw); 94 def draw_wrapper(artist, renderer, *args, **kwargs):; ---> 95 result = draw(artist, renderer, *args, **kwargs); 96 if renderer._rasterizing:; 97 renderer.stop_rasterizing(). File ~/.local",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2400#issuecomment-2142000903:125,message,message,125,https://qutip.org,https://github.com/qutip/qutip/issues/2400#issuecomment-2142000903,1,['message'],['message']
Integrability,"While solving some time-dependent Hamiltonians, I decided to refactor the list-style definition of my Hamiltonian and completely get rid of all ```partial``` calls which made my code much cleaner. In particular, I implemented a small class to construct the time-dependent components that go into the Hamiltonian and overwrote the ```__call__``` method to make my class object directly callable by Qutip. However, this was rejected by Qutip as an ""Incorrect Hamiltonian specification"" due to the format check. Since, as far as I know, subclassing the built-in FunctionType ```function``` is not possible in Python, and subclasses of FunctionType would not be accepted by Qutip either (```_td_format_check``` calls ```isinstance``` and not ```issubclass```), I suggest that Qutip also accepts general objects which have the ```__call__``` attribute defined. Changes: Update ```_td_format_check``` by one extra condition to allow any object with attribute ```__call__``` in the definition of a Hamiltonian.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1107:24,depend,dependent,24,https://qutip.org,https://github.com/qutip/qutip/pull/1107,2,['depend'],['dependent']
Integrability,"While the tests now pass for Mac on Travis CI, this is the error messages I get locally on Mac, . ```; (base) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-4.6.2, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 0 items / 60 errors. ==================================== ERRORS ====================================; __________ ERROR collecting qutip/tests/test_basis_transformation.py ___________; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:171: in <module>; from qutip.qobj import *; qutip/qobj.py:60: in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; qutip/fastsparse.py:406: in <module>; from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult); qutip/cy/__init__.py:1: in <module>; from qutip.cy.spmatfuncs import *; stringsource:105: in init qutip.cy.spmatfuncs; ???; E AttributeError: type object 'qutip.cy.spmatfuncs.array' has no attribute '__reduce_cython__'; ________________ ERROR collecting qutip/tests/test_brmesolve.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_brmesolve_td.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = F",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:65,message,messages,65,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['message'],['messages']
Integrability,"While you could probably make it work but manually updating the state at each times of `tlist` is certainly not a usage I planned for... If you could use `mesolve` instead of `mcsolve` it would be simpler:; ```; solver = MeSolver(...); solver.start(rho0, t0); for t in tlist[1:]:; rho_t = solver.step(t); solver.start(rho_t @ projection, t); ```. With `mcsolve`, if you use it like this, it would normalize the state at each step possibly breaking the montecarlo part of the evolution. The way I would do it is by making a child class overwriting the step of `McTrajectorySolver`:. ```; class MyMcTrajectorySolver(McTrajectorySolver):; def _step(self, t):; super()._step(t); _, raw_state = self._integrator.get_state() # state not normalized; new_state = _data.matmul(projector, state) # projector is a Data object: Qobj.data; self._integrator.set_state(t, new_state); return _data.mul(new_state, 1 / _data.norm.l2(new_state)). class MyMcSolver(McSolver):; _traj_solver_class = MyMcTrajectorySolver; ```; If done this way, you should be able to use the normal solver interface. This projection should be done once per call of `step` or per time in `tlist`, but I would confirm it before running simulation. `step` does not return the `collapse` part of the results. So if a collapse happen, it will not output it nor the time at which it happen. But the state evolution is done normally, collapse will happen as expected. To get them, you will need to fetch them with `solver.traj_solvers[i].collapse`. Feel free to comment on the new solver interface. If you think that something is missing or confusing, now is a good time to tell us. We should come back on this PR in April.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1710#issuecomment-1068480013:1067,interface,interface,1067,https://qutip.org,https://github.com/qutip/qutip/pull/1710#issuecomment-1068480013,2,['interface'],['interface']
Integrability,"With the Google Summer of Code 2019 project by @BoxiLi on noise models, we are making some big changes to update the QIP module. One of the things that came up is having a `DeviceProcessor` or `Device`` class which interfaces with hardware implementations directly and runs quantum circuits on models such as SpinChain, cQED. We will also work towards linking the OptPulseProcessor to find optimal pulses to implement a circuit and add a `noise` module. I am opening this issue to discuss the restructuring of the QIP module and also adding a `measure` function/module (later) to get samples and expectation values from a circuit. We c can use this thread to discuss other issues too regarding the QIP module and how we can interface it better to QuTiP core functionalities. . - qip; - device/; - processor (which has DeviceProcessor (base class for spinchain, cqed), OptPulseProcessor etc); - spinchain; - cqed; - circuit.py; - operations.py (gates.py + qft.py); - noise.py; - measurement. @ajgpitch @nathanshammah @qutip/owners ; @BoxiLi please feel free to suggest, change or discuss more on this issue as you continue working on it. Thanks.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1072:216,interface,interfaces,216,https://qutip.org,https://github.com/qutip/qutip/issues/1072,2,['interface'],"['interface', 'interfaces']"
Integrability,"Would it be okay to use `_path_from_env(""XDG_CONFIG_HOME"", Path.home() / "".config"")` rather than depend on the `xdg` package?. How does one know if one is on a system where XDG is supported? E.g. I know Windows used to use a special APP configuration folder of its own.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1876#issuecomment-1219758222:97,depend,depend,97,https://qutip.org,https://github.com/qutip/qutip/issues/1876#issuecomment-1219758222,1,['depend'],['depend']
Integrability,"Would the use of [plotly](https://plotly.com/) to make the 3d plots better looking and reactive? I'm no expert but it seems very nice especially for 3D visualization in the browser that got integration with [Jupyter notebooks](https://github.com/plotly/plotly.py) (Another app that natively runs in the browser is Bokeh, but that may be more oriented toward data science visualization, while plotly seems more general). It also seems that plotly surpassed [mayavi](https://docs.enthought.com/mayavi/mayavi/) in recent times, with more users, features and more actively developed. This could be relevant for notebooks especially when on My Binder, etc.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1276:190,integrat,integration,190,https://qutip.org,https://github.com/qutip/qutip/issues/1276,1,['integrat'],['integration']
Integrability,"Yeah in my experience this is something one has to be careful of with the steady-state solver as it is. Depending on the method chosen it can either fail, return one of the possibilities, or some linear combination of them. The default one (direct) tends to fail, which at least sometimes lets you know you have this issue. . We could consider adding null_space solver which returns all possibilities, or modify the existing svd solver to do so if possible? ; Still, if the default ""direct"" method is silently failing it may trip people up still, so adding some examples to the documentation might help, as a minimum. I don't know of a way to extend that direct method to return all possible solutions, and connect those to possible initial conditions. It would be very interesting if its possible!. One minor thing; looking at the the example in the linked paper you provided seems to badly constructed. The dephasing operator they define there is actually just an identity, so does nothing, so technically the second example has no well-defined steady-state at all. A more useful example would be a proper dephasing through a collapse operator = sigma_z, and no driving on the qubit, so the degenerate steady-states are <sigmaz>=\pm 1.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2175#issuecomment-1594101812:104,Depend,Depending,104,https://qutip.org,https://github.com/qutip/qutip/issues/2175#issuecomment-1594101812,1,['Depend'],['Depending']
Integrability,"Yeah, `qutip-qip` is a much easier build and installation process because you don't need to be concerned about compiler infrastructure, ABI compatibility or stuff like that. In addition in that particular test run, there were three individual calls to change the installed packages, which meant plenty of space for stuff to go wrong. In this case, I think it was a strange interaction between the old `.travis.yml` specifically installing `numpy` and all other dependencies from `conda-forge`, without the channel being in the defaults list. Since `conda uninstall` doesn't specify an additional channel, the dependency calculator considers `defaults` to be higher priority, so it sets various packages to arbitrary allowed ones from `defaults`, which with `openblas` installed like this meant numpy `1.14`. That's my guess at least - it's a pretty weird set up circumstances, but the new `.travis.yml` file that's already in `master` is far simpler about the build process.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1448#issuecomment-782177609:461,depend,dependencies,461,https://qutip.org,https://github.com/qutip/qutip/pull/1448#issuecomment-782177609,2,['depend'],"['dependencies', 'dependency']"
Integrability,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:167,depend,dependent,167,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182,3,['depend'],['dependent']
Integrability,"Yeah, in the context of #850, I was only thinking of a global switch for the storage format. But #437 makes a good point about using full storage. I'd add to that the [Lapack banded storage format](http://www.netlib.org/lapack/lug/node124.html) which is extremely efficient for diagonal or tri-diagonal operators (or scipy's [DIA](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.dia_matrix.html#scipy.sparse.dia_matrix), which I think is mostly equivalent). I've actually had to solve the equivalent problem of allowing multiple internal formats in the [Fortran QDYN package](https://www.qdyn-library.net), so I'm not sure why I didn't think of that in the first place ;-). I can definitely vouch for the efficiency gained by being able to switch internal sparse representations. So yeah, you'd definitely have the most flexible solution by allowing `Qobj.data` to use varying storage classes from object to object. Maybe the ""protocol"" could be for `Qobj.data` to be any subclass of the [scipy `spmatrix` base class]( https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.spmatrix.html#scipy.sparse.spmatrix)? Then the `Qobj` constructor would probably need an additional parameter `format` for the class that should be used to convert the `inpt` argument to the `data` attribute. The onus would then be on Scipy to provide a full matrix that is a subtype of `scipy.spmatrix` (just to keep the interface contract), and also to have `int64` versions of all their existing sparse classes. From a community standpoint, it would seem like one would get much more bang for the buck to have this problem solved inside SciPy, instead of doing a lot of low-level stuff in QuTiP -- at least if they're amenable to pull requests, but worst case you can still define necessary new `scipy.spmatrix` subclasses externally. Take all of my musings with a little grain of salt... I never really looked too deep into QuTiP's low-level internals, specifically where QuTiP is using Cython.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-383937610:945,protocol,protocol,945,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-383937610,1,['protocol'],['protocol']
Integrability,"Yeah, it runs completely normally for me... ![jupyter output](https://i.imgur.com/9LkOQzO.png). I can only think that there is some problem with the temporary directory on Windows, since the calls to all the external programmes are the functionally the same. Do you get any error messages in the kernel log? If not, can you try running it in raw `python` or `ipython` on the command line, and just run; ```python; from qutip.qip.circuit import QubitCircuit; qc = QubitCircuit(2); qc.add_gate(""CNOT"", 0, 1); qc.png; qc.svg; ```; and see if there are any error messages?. I kind of hope it's a mistake in my code somewhere, because if it is the `tempfile.TemporaryDirectory` on Windows then I'll have to re-think some parts of #1181 too.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605289820:280,message,messages,280,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605289820,2,['message'],['messages']
Integrability,"Yeah, looking at it, this functionality still does not exist. The `essolve` function is pretty out-of-date (its last real activity was back in 2013), and may well be completely deprecated in an upcoming version of QuTiP. Hopefully `qutip.mesolve` should be a near drop-in replacement for you (`c_ops_list` is now called `c_ops`, but other than that you're fine), and it may well be a lot faster as well. @Ericgig, @ajgpitch: shall we commit to maintaining `essolve` and/or the `eseries` class, or issue a deprecation warning as soon as possible? They're pretty unloved, and `QobjEvo` really is a far far more general way of specifying time-dependence. My vote (should I have one) is for deprecation. I'm always in favour of slimming down codebases if it doesn't remove useful functionality!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1262#issuecomment-628260933:640,depend,dependence,640,https://qutip.org,https://github.com/qutip/qutip/issues/1262#issuecomment-628260933,1,['depend'],['dependence']
Integrability,"Yeah, so this bug is fixed in QuTiP 4.5.3 and above. You can also fix it by downgrading Numpy to 1.19 or below (in 1.20 they changed how they handle object arrays, which broke us and a few other packages). That's strange that Conda won't let you upgrade beyond 4.5.2; there's no constraint on our conda package which should prevent it. Do you have any other packages installed that depend on QuTiP? If so, they might be pinning our version. What happens when you run `conda update qutip`? (By the way, you can also install `qutip` from `pip` easily since the 4.6 release).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1634#issuecomment-895511734:382,depend,depend,382,https://qutip.org,https://github.com/qutip/qutip/issues/1634#issuecomment-895511734,1,['depend'],['depend']
Integrability,"Yeah, that's a memory leak. It doesn't really matter how ""silly"" the method is that causes it to appear, the fact is that it shouldn't exist. It's actually not to do with `add_dense` but `Dense.copy` - I didn't set the `Dense._deallocate` flag in that routine, so when the Python object goes out of scope, the C destructor ignores the pointer and it goes stale. You can probably achieve very similar behaviour with `for _ in [None]*1_000_000: rho.copy()`, even if you force `gc.collect()` after every iteration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1415#issuecomment-755211133:252,rout,routine,252,https://qutip.org,https://github.com/qutip/qutip/issues/1415#issuecomment-755211133,1,['rout'],['routine']
Integrability,"Yeah, this feels like a bug in `propagator` - I bet at some point we do `qeye(L.shape[0])` instead of `qeye(L.dims[0])`. There's sometimes quite a bit of that in older code - it used to slip through because we weren't super strict about dimension handling, so in certain cases (like this one), we'd accept bad dimensions. I might try and have a look tonight (UK time), if I have time - I've wanted to break up the large `propagator` monolith into smaller components for quite a while. ---. About numerical precision: if you want to try increasing the precision of the integrators, try passing `options=qutip.Options(nsteps=1_000_000, atol=1e-12, rtol=1e-10)` to `propagator`. `atol` and `rtol` are absolute and relative tolerances respectively, and `nsteps` is the number of subdivisions the integrator is _allowed_ to take (if it reaches its tolerance goals, it won't take all of them). You'll find that `atol` and `rtol` will have only a loose relation to the tolerance of your fidelity value, because there's a _lot_ of floating-point operations between those points in which the errors compound, and there's a hard limit on the tolerances the integrator can achieve, so you might not be able to get a perfect answer. The fidelity calculation involves finding the square root of a density operator, so that's another large possible source of error. About times: if you only care about the state at the last time, setting `tlist = np.linspace(0, x, 201)` is quite inefficient. Instead, set `tlist = [0, x]`, and then pass `options=qutip.Options(nsteps=<very very big integer>)`. It's more efficient because it doesn't need to achieve tolerance goals and construct/store `Qobj` instances at every intermediate timestep. Temporary workaround: this is _very_ temporary, and generally a bad idea in QuTiP, but you can ""flatten"" all your operators into a single space for now, while we implement a fix. To do that:; ```python; # initial setup; H = qutip.tensor(...); c_ops = [qutip.tensor(...)]. original",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199:568,integrat,integrators,568,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199,2,['integrat'],"['integrator', 'integrators']"
Integrability,"Yeah, this is a ""true"" merge of the qutip-doc repository with this one. Technically all the commits have been rewritten (you'll find that the hashes won't match between the repositories), but they'll all be credited to the same authors on GitHub. Everyone will actually get the credit ""twice"" - once for the archived qutip/qutip-doc repo, and once for the new commit object in here. If anybody was in the habit of signing their commits with a private key, that will have been lost, but the only people that's likely to have affected are me and the GitHub merge bot. It doesn't mean anything in the greater scheme of things, because I've signed the merge commit. (signing is mostly just a way of verifying that the author really was who it says it was). *edit:* I checked, the only two types of signed commits in qutip/qutip-doc are those from me and those from the GitHub bot. Answers:; - I'll migrate all open issues on qutip-doc into the qutip/qutip repository, and tag them with a ""docs"" tag. GitHub has a built-in mechanism to migrate issues.; - We'll archive it, posting a message on the front page of it (or the README if GitHub doesn't have a separate mechanism). We need to leave the repository up and available on the web, because old documentation refers to it in links.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1513#issuecomment-830106458:1078,message,message,1078,https://qutip.org,https://github.com/qutip/qutip/pull/1513#issuecomment-830106458,1,['message'],['message']
Integrability,"Yes I will have a look this weekend. On Thu, 1 Jul 2021 at 14:32, Jake Lishman ***@***.***> wrote:. > @Ericgig <https://github.com/Ericgig>: yeah, it's not a perfect naming; > choice. Can you think of a better one? It ended up like that because I; > started off just calling in _qfunc_alpha_matrix, then realised about; > halfway through that I was actually constructing the conjugate of the; > matrix formed by stacking coherent states (since that's how it's used), but; > the name isn't really ideal.; >; > @quantshah <https://github.com/quantshah>: I'm just thinking now you; > might want to have a look at this - you had some thoughts about user; > interfaces for class-based creation schemes last year, with regards to the; > displacement operator, which I'll build up into a proper PR at some point; > as well. Don't worry if you've no time, though.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/1583#issuecomment-872207526>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABVFIBH3GWFKFVFVL4ZBR2DTVRN6VANCNFSM47AL5RKA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583#issuecomment-872210777:653,interface,interfaces,653,https://qutip.org,https://github.com/qutip/qutip/pull/1583#issuecomment-872210777,1,['interface'],['interfaces']
Integrability,"Yes `multiprocessing` is used by `mcsolve`. If there are issues pickling function, then it will cause errors. I hope that this could be fixed with the function `set_start_method` from `multiprocessing`. In the segfault case, the problematic function call lapack from cython by using scipy interface. So it could be a couple of things. On mac, there is the accelerate blas/lapack implementation which does not have the same interface, so if it links to this, then a segfault would not be surprising. But I can't say for sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-596712910:289,interface,interface,289,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596712910,2,['interface'],['interface']
Integrability,"Yes that would be nice, I've thought about that too, and this question also comes up on the IPython mailing list from time to time, by answer always seems to be that it is not possible for the kernel to know what client interface is used, and that in principle there can be multiple clients (notebook, qtconsole, etc.) connected to it simultanouesly...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/276#issuecomment-66559712:220,interface,interface,220,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66559712,1,['interface'],['interface']
Integrability,"Yes, I did the mkl.set_num_threads. This is my test script. ```; import numpy as np; import timeit. NUM_THREADS = 1. try:; import mkl; use_mkl = True; except:; use_mkl = False. def timing(f):; def wrap(*args):; time1 = timeit.default_timer(); ret = f(*args); time2 = timeit.default_timer(); print('{} function took {:0.3f} ms'.format(f.__name__, (time2-time1)*1000.0)); return ret; return wrap. if use_mkl:; mkl.set_num_threads(NUM_THREADS); print(""Number of threads is {}"".format(mkl.get_max_threads())); else:; print(""mkl unavailable""). d = 10000; n_reps = 10; A = np.random.random([d, d]). print(""Starting tests""). @timing; def calc_exp(A):; for i in range(n_reps):; E = np.exp(A). calc_exp(A); ```. Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same. This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date. Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/462#issuecomment-207490289:197,wrap,wrap,197,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207490289,2,['wrap'],['wrap']
Integrability,"Yes, definitely! I would like to tackle that when with the item list ""Make the interface consistent ...""",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1913#issuecomment-1145099472:79,interface,interface,79,https://qutip.org,https://github.com/qutip/qutip/issues/1913#issuecomment-1145099472,1,['interface'],['interface']
Integrability,"Yes, that also fails, with the same error (on Windows):. `Building module rhs44481 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']`. I just realized that this particular problem is probably just that this Windows VM doesn't have Visual Studio installed (maybe I should try again with the 20GB developer's VM that Microsoft has). So as a user on Windows, having installed QuTiP through Anaconda, I can't do any time propagation? Somehow, I would have thought that having Cython though Anaconda would also come with some compiler like gcc (which is what it seems to be doing on the Mac). Otherwise, that seems like a very limiting factor to any Windows user. There's no way to run QuTiP while preventing it to cythonize time-dependencies, right? That is, aside from workarounds like the one I did here: https://github.com/qucontrol/krotov/blob/247d4066c83ee4923769b934486da9dae95f6879/src/krotov/objectives.py#L175. Anyway, this is likely not really the same issue as the original problem on the Mac.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-464148578:759,depend,dependencies,759,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-464148578,1,['depend'],['dependencies']
Integrability,"Yes, there are some cases where the dense operation is much faster. But there will be others (larger H space) where the sparse routine is faster. And it's not really fair to compare when you don't include the preops in the timeit. It's difficult, but not impossible, for us to tell in the code which situation we are in when make a superop vector multiplication. If we add lots of checks in, then this will slow things too. I think this is similar to #818. If we are going to address this, that is use dense matrix algebra for small systems, then we need to do it comprehensively. As is outlined in #437. I don't think we should make small changes in individual functions, this could make a big mess. I am putting a proposal together for a funding application. I have included work to something like #437. Maybe I will have time before also. You could maybe do something in your HEOM work where you have a `dense_oper` attribute, in which case you use numpy dense operations. I do this in the control modules, where typically the Hamiltonians are small. You can quickly run out of memory though, as the `L` gets very big, esp for `k >> 1`. I tried some tests on this when I was working on it last year.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/831#issuecomment-368958389:127,rout,routine,127,https://qutip.org,https://github.com/qutip/qutip/issues/831#issuecomment-368958389,1,['rout'],['routine']
Integrability,"Yes, we chatted at QTD! :); Today when I do this I do not see a dependence in x on the jump rate, and yes, it is just the formula you gave. I don't quite understand what went wrong yesterday such that I was seeing a dependence on the jump rate. That was on a different computer, so perhaps its time to restart that one.; Emily",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2539#issuecomment-2405574712:64,depend,dependence,64,https://qutip.org,https://github.com/qutip/qutip/issues/2539#issuecomment-2405574712,2,['depend'],['dependence']
Integrability,"Yes, we will add a reference to the your paper with the TLS when I submit a; TLS notebook example.; I think I will just make a simple example for now. And then add the more; involved one that compares the RC method later. Thanks for the explanation on Matsubara terms (I might have to spelling to; correct :). I did not realise they were only referred to as such in the; DL spectral density. I will make some corrections now. On 10 March 2016 at 18:30, nwlambert notifications@github.com wrote:. > This looks great!; > ; > The references are sufficient I guess. We can add some more in the example; > notebook?; > ; > One minor terminology point in the explanation: for the Drude-Lorentz bath; > the correlation functions can be exactly analytically expressed as an; > infinite sum of exponentials which depend on the temperature, and these are; > called the Matsubara terms or Matsubara frequencies.; > ; > In general, when not dealing with a Drude-Lorentz bath, or something; > similar, we have to approximate the correlation functions by numerically; > fitting them to exponentials, but in that case they don't have any; > particular name I guess. When we get around to adding it as an option, lets; > call them Fruchtman terms, as it was Amir Fruchtman who told me to try; > doing it that way!; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/pull/455#issuecomment-194752885.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/455#issuecomment-194776953:804,depend,depend,804,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194776953,1,['depend'],['depend']
Integrability,"You can directly call the `expm()` method on the individual `Qobj` parts you have, but I'm slightly confused as to what mathematical operation you're representing. The time-dependent list format represents the sum of several objects, and in general `exp(A + B)` isn't the same as `exp(A) + exp(B)` or `exp(A) * exp(B)`, which is why we don't have an `expm()` method for it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1308#issuecomment-654284886:173,depend,dependent,173,https://qutip.org,https://github.com/qutip/qutip/issues/1308#issuecomment-654284886,1,['depend'],['dependent']
Integrability,"You can ignore warnings with:; `@pytest.mark.filterwarnings(""ignore:The input coordinates to pcolor:UserWarning"")`; The `The input coordinates to pcolor` is the start of the warning message. ; `UserWarning` is the kind of warnings.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2192#issuecomment-1634395932:182,message,message,182,https://qutip.org,https://github.com/qutip/qutip/pull/2192#issuecomment-1634395932,1,['message'],['message']
Integrability,"You have a couple of ways of going about this. The simplest is to use the callback form of `e_ops` - you make a single function which looks like; ```python; def e_op(t, state):; # [...]; return expectation; ```; where `t` is the time and `state` is a `Qobj`. You can return whatever you like here, really, so you can return a tuple of values if you want to track more than one. If you do this, then you do; ```python; result = qutip.sesolve(H, psi0, times, e_ops=e_op); ```; and `result.expect` is a list of the same length as `times`, where `result.expect[k]` is the output of your function at a time `times[k]` (note that this is a slightly different output format to the normal method). Alternatively, you can do the calculation yourself without too much difficulty if your observables can be put in the form `A(t) = sum_k f_k(t) A_k`, like your example here. Because the expectation is a linear operation `expect(A(t), psi(t)) = sum_k f_k(t) expect(A_k, psi(t))`, so you can pass the list of `A_k` to `sesolve` and then just calculate the time-dependent coefficients yourself afterwards and add them up. This will generally be faster than the previous method, but it's more complicated to do.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1364#issuecomment-699652426:1048,depend,dependent,1048,https://qutip.org,https://github.com/qutip/qutip/issues/1364#issuecomment-699652426,1,['depend'],['dependent']
Integrability,"You have my approval for most of it. The approach of using `preprocessors` and `processors` fells overkill for use that I have, but I don't see any reason it wouldn't work. If you need it for HEOM, let's go for it. I don't like having expect being a dict. I was actually thinking of going with supporting the 3 cases, at least for the output. If we keep `expect` as a property, the format change can be done only there and we can keep it in another format, dict or list, inside. Simplifying `_post_init` will be tricky, normalization does not depend only on the option, but also the state... We could have `Solver.run` call `add_preprocessor` to add the normalization function, but them it would make it harder for HEOM to call.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1907#issuecomment-1140082568:543,depend,depend,543,https://qutip.org,https://github.com/qutip/qutip/pull/1907#issuecomment-1140082568,1,['depend'],['depend']
Integrability,"You must have some other package installed that's conflicting with QuTiP somehow - our dependencies are pretty lax. We only ask for Numpy >= 1.16.6 and Scipy >= 1.0 as hard dependencies (with no upper bounds), and both of those versions are old. Good to know it's fixed now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1634#issuecomment-895828645:87,depend,dependencies,87,https://qutip.org,https://github.com/qutip/qutip/issues/1634#issuecomment-895828645,2,['depend'],['dependencies']
Integrability,"You're trying to plot a Hamiltonian with a principle frequency of ~32 GHz, and you want to scan time over ~3ms. That involves integrating over 5 million periods of oscillation - there's little you can do to get a sensible runtime any more because you're evolving it for so long. You might want to make a frame transformation in your Hamiltonian and make a rotating-wave approximation to suppress these very high-frequency terms.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1376#issuecomment-721217434:126,integrat,integrating,126,https://qutip.org,https://github.com/qutip/qutip/issues/1376#issuecomment-721217434,1,['integrat'],['integrating']
Integrability,[![Coverage Status](https://coveralls.io/builds/40227940/badge)](https://coveralls.io/builds/40227940). Coverage increased (+0.01%) to 64.941% when pulling **78983f00acb67892bd75a66a380d5d46018e1e7c on dependabot/pip/doc/urllib3-1.26.5** into **acb6cfe23f951673b8f4bcba7ea0b7a62b1e6305 on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563#issuecomment-852728895:202,depend,dependabot,202,https://qutip.org,https://github.com/qutip/qutip/pull/1563#issuecomment-852728895,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/42716719/badge)](https://coveralls.io/builds/42716719). Coverage increased (+0.03%) to 65.763% when pulling **f3580f770b5bc3f67b54ce90cfc7dbd1551b5960 on dependabot/pip/doc/pillow-8.3.2** into **cd525d1392bb764716a2278b3c7c0c3fdf6c64c4 on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654#issuecomment-914888716:202,depend,dependabot,202,https://qutip.org,https://github.com/qutip/qutip/pull/1654#issuecomment-914888716,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/43279924/badge)](https://coveralls.io/builds/43279924). Coverage increased (+0.2%) to 65.124% when pulling **ac8e9d40d23d253173918a2d353d47f23abdf633 on Ericgig:integrators** into **f8ed1be97946171ae8ba9242673cf2674430da56 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643#issuecomment-920331445:209,integrat,integrators,209,https://qutip.org,https://github.com/qutip/qutip/pull/1643#issuecomment-920331445,1,['integrat'],['integrators']
Integrability,[![Coverage Status](https://coveralls.io/builds/44101627/badge)](https://coveralls.io/builds/44101627). Coverage increased (+0.3%) to 65.437% when pulling **af38507293a5f1465f01682e0c34f1499b21f377 on Ericgig:solver.integrator** into **9395b959fd308afc1bf2087171f3e83f6d3387e4 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1700#issuecomment-953871052:216,integrat,integrator,216,https://qutip.org,https://github.com/qutip/qutip/pull/1700#issuecomment-953871052,1,['integrat'],['integrator']
Integrability,[![Coverage Status](https://coveralls.io/builds/44887329/badge)](https://coveralls.io/builds/44887329). Coverage remained the same at 65.525% when pulling **d3a5c6e3ebb43afa0c2eb7b2456c886cb9651bd1 on Ericgig:safe.integrator** into **298316b4f034f467788943015b3277bf88f3fc9b on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1734#issuecomment-989070040:214,integrat,integrator,214,https://qutip.org,https://github.com/qutip/qutip/pull/1734#issuecomment-989070040,1,['integrat'],['integrator']
Integrability,[![Coverage Status](https://coveralls.io/builds/45587435/badge)](https://coveralls.io/builds/45587435). Coverage increased (+0.03%) to 68.299% when pulling **40b7e86b40587898a89fc9ea58804b9795170954 on dependabot/pip/doc/pillow-9.0.0** into **52d01da181a21b810c3407812c670f35fdc647e8 on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760#issuecomment-1011788891:202,depend,dependabot,202,https://qutip.org,https://github.com/qutip/qutip/pull/1760#issuecomment-1011788891,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/45687437/badge)](https://coveralls.io/builds/45687437). Coverage increased (+0.01%) to 68.312% when pulling **6c252fbd33c8d7bad1816b72174c68dc9754e72e on dependabot/pip/doc/numpy-1.21.0** into **0ecb9612299c0c5105bf09972279efa7cb9c41be on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767#issuecomment-1014718223:202,depend,dependabot,202,https://qutip.org,https://github.com/qutip/qutip/pull/1767#issuecomment-1014718223,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/45840885/badge)](https://coveralls.io/builds/45840885). Coverage decreased (-0.008%) to 68.361% when pulling **7f3841f1f2d48cdfe7c7453eec6f966be8efc07d on dependabot/pip/doc/ipython-7.31.1** into **d4013031734790bac919344bcb8c1d462e364ea8 on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780#issuecomment-1018846737:203,depend,dependabot,203,https://qutip.org,https://github.com/qutip/qutip/pull/1780#issuecomment-1018846737,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/47299519/badge)](https://coveralls.io/builds/47299519). Coverage decreased (-0.02%) to 68.991% when pulling **6b2bb1c46f8466e3b624ae7bacc844315403fe79 on dependabot/pip/doc/pillow-9.0.1** into **b65aebe0f18e401461a5dc3d7a387129709cb346 on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835#issuecomment-1065786929:202,depend,dependabot,202,https://qutip.org,https://github.com/qutip/qutip/pull/1835#issuecomment-1065786929,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/48544268/badge)](https://coveralls.io/builds/48544268). Coverage increased (+0.02%) to 65.506% when pulling **eaae9c110b5c9a78169db01ff213b1b4b04a0043 on Ericgig:integrator.step.fix** into **539e2e4bcd730894dffaec8cd2e0ac9b72efef77 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1880#issuecomment-1108857030:210,integrat,integrator,210,https://qutip.org,https://github.com/qutip/qutip/pull/1880#issuecomment-1108857030,1,['integrat'],['integrator']
Integrability,[![Coverage Status](https://coveralls.io/builds/48593127/badge)](https://coveralls.io/builds/48593127). Coverage increased (+1.4%) to 67.07% when pulling **ec1c71c02f434b2d56fad69a8db2069f22a6b9bf on Ericgig:integrators.verner** into **414c5eccd2263a5607bf9f57b3b73381ea377504 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1644#issuecomment-953951326:208,integrat,integrators,208,https://qutip.org,https://github.com/qutip/qutip/pull/1644#issuecomment-953951326,1,['integrat'],['integrators']
Integrability,[![Coverage Status](https://coveralls.io/builds/50428231/badge)](https://coveralls.io/builds/50428231). Coverage remained the same at 69.935% when pulling **0fc3959863deb2276ba438402ce736f9526f7273 on dependabot/pip/doc/numpy-1.22.0** into **74257755d87259b94caae3dc352e3ff55930e0c1 on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940#issuecomment-1168876318:201,depend,dependabot,201,https://qutip.org,https://github.com/qutip/qutip/pull/1940#issuecomment-1168876318,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/51767419/badge)](https://coveralls.io/builds/51767419). Coverage decreased (-0.004%) to 71.553% when pulling **181f9f6ab878ce73257b4a7ef149a953a369a647 on Ericgig:random.interface** into **bc9b27f09086b0a066f6d9ddb2fb04739224624a on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1976#issuecomment-1218243721:218,interface,interface,218,https://qutip.org,https://github.com/qutip/qutip/pull/1976#issuecomment-1218243721,1,['interface'],['interface']
Integrability,[![Coverage Status](https://coveralls.io/builds/54454836/badge)](https://coveralls.io/builds/54454836). Coverage increased (+0.02%) to 69.94% when pulling **c00b13fd99d4f847e0d768c06cfc2f0c52bedf92 on dependabot/pip/doc/pillow-9.3.0** into **b29ca42b9931f029a8d1aa278c4ac75366c81a1a on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023#issuecomment-1323508204:201,depend,dependabot,201,https://qutip.org,https://github.com/qutip/qutip/pull/2023#issuecomment-1323508204,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/55196508/badge)](https://coveralls.io/builds/55196508). Coverage decreased (-0.2%) to 72.452% when pulling **c26257095ae5d7c9f6fd69c04bcc2206ab76c581 on Ericgig:krylov.integrator** into **a0ca511e15f2edb4d707096e74341a89d7a9d442 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1986#issuecomment-1228914050:216,integrat,integrator,216,https://qutip.org,https://github.com/qutip/qutip/pull/1986#issuecomment-1228914050,1,['integrat'],['integrator']
Integrability,[![Coverage Status](https://coveralls.io/builds/56839207/badge)](https://coveralls.io/builds/56839207). Coverage: 72.029%. Remained the same when pulling **b11d87127b60feaded72a1ac8261837ab5a954ff on dependabot/pip/doc/ipython-8.10.0** into **6da3fc2b87406053389e11ff68e8308e87b352e4 on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085#issuecomment-1426556497:200,depend,dependabot,200,https://qutip.org,https://github.com/qutip/qutip/pull/2085#issuecomment-1426556497,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/60213413/badge)](https://coveralls.io/builds/60213413). Coverage: 78.092%. Remained the same when pulling **e3d45a55eb8e28845301c9d507742a6dcd87c20f on dependabot/pip/doc/requests-2.31.0** into **7892453dd3ae03ce8ac17caffc0457df200a69ec on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164#issuecomment-1558641653:200,depend,dependabot,200,https://qutip.org,https://github.com/qutip/qutip/pull/2164#issuecomment-1558641653,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/61470251/badge)](https://coveralls.io/builds/61470251). coverage: 84.621%. remained the same when pulling **2e9d45226f7ecd367475624f5fe0e049973f7b35 on dependabot/pip/doc/pygments-2.15.0** into **efd39be22db0536ef0680547a6631a4f9156b922 on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201#issuecomment-1643899196:200,depend,dependabot,200,https://qutip.org,https://github.com/qutip/qutip/pull/2201#issuecomment-1643899196,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/65026523/badge)](https://coveralls.io/builds/65026523). coverage: 84.185%. first build; when pulling **60ba0a25798e27b0be550158e789850136c1b45a on dependabot/pip/doc/jinja2-3.1.3**; into **e7853099194686cfb11ce7620639a78121e964dd on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291#issuecomment-1887970000:195,depend,dependabot,195,https://qutip.org,https://github.com/qutip/qutip/pull/2291#issuecomment-1887970000,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/66694701/badge)](https://coveralls.io/builds/66694701). coverage: 86.07% (+0.03%) from 86.039%; when pulling **f09cf77ec1f8fbadc692e37cce8173a84bc7847c on dependabot/pip/doc/pillow-10.3.0**; into **5d6dc220c910b7c7bf824aba5bc05fbbfa54f017 on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381#issuecomment-2035531513:203,depend,dependabot,203,https://qutip.org,https://github.com/qutip/qutip/pull/2381#issuecomment-2035531513,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/66870601/badge)](https://coveralls.io/builds/66870601). coverage: 86.048%. remained the same; when pulling **f6f539cd443a0c3afa5b148092542ece70672eac on dependabot/pip/doc/idna-3.7**; into **8035590df7ebde21bb34fcaadc63bea2d0c6e192 on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392#issuecomment-2050867182:201,depend,dependabot,201,https://qutip.org,https://github.com/qutip/qutip/pull/2392#issuecomment-2050867182,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/67331867/badge)](https://coveralls.io/builds/67331867). coverage: 86.09%. remained the same; when pulling **cd85b13838714b55b18b7471d9ba9885be47d55f on dependabot/pip/doc/jinja2-3.1.4**; into **b6ed047def88f220318cb6337a4cfbf59971ce72 on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418#issuecomment-2096947774:200,depend,dependabot,200,https://qutip.org,https://github.com/qutip/qutip/pull/2418#issuecomment-2096947774,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/67603901/badge)](https://coveralls.io/builds/67603901). coverage: 86.266%. remained the same; when pulling **0bbe13562c4c4f43d9f229b3654810d6ad080e3c on dependabot/pip/doc/requests-2.32.0**; into **ec617416dd4294fd97f08261dd508c032be84787 on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434#issuecomment-2121810266:201,depend,dependabot,201,https://qutip.org,https://github.com/qutip/qutip/pull/2434#issuecomment-2121810266,1,['depend'],['dependabot']
Integrability,[![Coverage Status](https://coveralls.io/builds/68491593/badge)](https://coveralls.io/builds/68491593). coverage: 85.104% (+0.007%) from 85.097%; when pulling **03b6f7e3e739836b1b0c8f6a797b94b87db64e3c on dependabot/pip/doc/certifi-2024.7.4**; into **4f34877035d9ec8ecd3ad3675260c9f06b09ec79 on master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2483#issuecomment-2211556415:205,depend,dependabot,205,https://qutip.org,https://github.com/qutip/qutip/pull/2483#issuecomment-2211556415,1,['depend'],['dependabot']
Integrability,"[0], taulist, None, a_op.dag(), a_op)[0]; > + G1 = correlation_3op(; > + solver, state0, [0], taulist, None, a_op.dag(), a_op; > + )[0]; >; > ------------------------------; >; > In qutip/solver/correlation.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245592358>:; >; > > + solver_instance = FLiMESolver(; > + floquet_basis,; > + c_ops,; > + args,; > + time_sense=time_sense; > + ); >; > ⬇️ Suggested change; >; > - solver_instance = FLiMESolver(; > - floquet_basis,; > - c_ops,; > - args,; > - time_sense=time_sense; > - ); > + solver_instance = FLiMESolver(; > + floquet_basis,; > + c_ops,; > + args,; > + time_sense=time_sense,; > + options=options,; > + ); >; > ------------------------------; >; > In qutip/solver/floquet.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245594985>:; >; > > @@ -929,4 +930,5 @@ def run(self, state0, tlist, *, floquet=False, args=None, e_ops=None):; > stats[""run time""] = progress_bar.total_time(); > # TODO: It would be nice if integrator could give evolution statistics; > # stats.update(_integrator.stats); > +; >; > Why a new empty line here?; > ------------------------------; >; > In qutip/solver/floquet.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245604228>:; >; > > + self.evecs = _data.permute.indices(; > + evecs, col_perm=np.argsort(perm)); >; > This file already has black ran on it and the style is ok as is.; > (But I just learned that black exclude the newline in it's character count; > while pycodestyle include it.); > Since it's not the main part of your PR, please revert it to it's original; > state.; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245610200>:; >; > > + total_R_tensor[key] += np.reshape(flime_FirstTerm - (1 / 2); > + * (flime_SecondTerm +; > + flime_ThirdTerm),; > + (Hdim**2, Hdim**2)); > + except KeyError:; > + total_R_tensor[key] = np.reshape(flime_FirstTerm - (1 / 2); > + * (flime_SecondTer",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847:2879,integrat,integrator,2879,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847,2,['integrat'],['integrator']
Integrability,"[<a href=""https://github.com/jsbueno""><code>@​jsbueno</code></a>]</li>; <li>Moved mode check outside of loops <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6650"">#6650</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added reading of TIFF child images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6569"">#6569</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved ImageOps palette handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6596"">#6596</a> [<a href=""https://github.com/PososikTeam""><code>@​PososikTeam</code></a>]</li>; <li>Defer parsing of palette into colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6567"">#6567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Apply transparency to P images in ImageTk.PhotoImage <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6559"">#6559</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use rounding in ImageOps contain() and pad() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6522"">#6522</a> [<a href=""https://github.com/bibinhashley""><code>@​bibinhashley</code></a>]</li>; <li>Fixed GIF remapping to palette with duplicate entries <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6548"">#6548</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow remap_palette() to return an image with less than 256 palette entries <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6543"">#6543</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected BMP and TGA palette size when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6500"">#6500</a> [<a href=""https://github.com/ra",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:8947,depend,dependabot,8947,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"[<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Windows build improvements <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6562"">#6562</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Only use ASCII characters in C source file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6691"">#6691</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a> [<a href=""https://github.com/hmaarrfk""><code>@​hmaarrfk</code></a>]</li>; <li>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a> [<a href=""https://github.com/npjg""><code>@​npjg</code></a>]</li>; <li>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:3092,depend,dependabot,3092,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"[Gitter](https://gitter.im) is a networking platform with tight integration to Github. Its shows the latest activity (commits, PR, comments on issues) and can be a place for people to quickly connect with other QuTiP users and find solutions. For example, the gitter channel for Dipy is pretty active and helpful. (https://gitter.im/nipy/dipy). Has QuTiP considered [integrating](https://github.com/integrations/gitter) gitter with the repository ?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/564:64,integrat,integration,64,https://qutip.org,https://github.com/qutip/qutip/issues/564,3,['integrat'],"['integrating', 'integration', 'integrations']"
Integrability,[RFC][Ecosystem] Hooks for integrating with the Qobj constructor : `__qobj__` interface,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508:27,integrat,integrating,27,https://qutip.org,https://github.com/qutip/qutip/issues/1508,2,"['integrat', 'interface']","['integrating', 'interface']"
Integrability,"[command] = 1. ~/opt/anaconda3/lib/python3.7/site-packages/Cython/Distutils/old_build_ext.py in run(self); 185 ; --> 186 _build_ext.build_ext.run(self); 187 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in run(self); 339 # Now actually compile and link everything.; --> 340 self.build_extensions(); 341 . ~/opt/anaconda3/lib/python3.7/site-packages/Cython/Distutils/old_build_ext.py in build_extensions(self); 194 # Call original build_extensions; --> 195 _build_ext.build_ext.build_extensions(self); 196 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in build_extensions(self); 448 else:; --> 449 self._build_extensions_serial(); 450 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in _build_extensions_serial(self); 473 with self._filter_build_errors(ext):; --> 474 self.build_extension(ext); 475 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in build_extension(self, ext); 533 extra_postargs=extra_args,; --> 534 depends=ext.depends); 535 . ~/opt/anaconda3/lib/python3.7/distutils/ccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 573 continue; --> 574 self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); 575 . ~/opt/anaconda3/lib/python3.7/distutils/unixccompiler.py in _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts); 119 except DistutilsExecError as msg:; --> 120 raise CompileError(msg); 121 . CompileError: command 'gcc' terminated by signal 6. During handling of the above exception, another exception occurred:. ImportError Traceback (most recent call last); ~/opt/anaconda3/lib/python3.7/site-packages/qutip/qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 79 import_code = compile(codeString, '<string>', 'exec'); ---> 80 exec(import_code, locals()); 81 except (ModuleNotFoundError, ImportError) as e:. <string> in <module>. ~/opt/anaconda3/lib/python3.7/site-packages/pyximport/pyximport.py in lo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290:4287,depend,depends,4287,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290,1,['depend'],['depends']
Integrability,"[command] = 1. ~/opt/anaconda3/lib/python3.7/site-packages/Cython/Distutils/old_build_ext.py in run(self); 185 ; --> 186 _build_ext.build_ext.run(self); 187 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in run(self); 339 # Now actually compile and link everything.; --> 340 self.build_extensions(); 341 . ~/opt/anaconda3/lib/python3.7/site-packages/Cython/Distutils/old_build_ext.py in build_extensions(self); 194 # Call original build_extensions; --> 195 _build_ext.build_ext.build_extensions(self); 196 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in build_extensions(self); 448 else:; --> 449 self._build_extensions_serial(); 450 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in _build_extensions_serial(self); 473 with self._filter_build_errors(ext):; --> 474 self.build_extension(ext); 475 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in build_extension(self, ext); 533 extra_postargs=extra_args,; --> 534 depends=ext.depends); 535 . ~/opt/anaconda3/lib/python3.7/distutils/ccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 573 continue; --> 574 self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); 575 . ~/opt/anaconda3/lib/python3.7/distutils/unixccompiler.py in _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts); 119 except DistutilsExecError as msg:; --> 120 raise CompileError(msg); 121 . ImportError: Building module cqobjevo_compiled_coeff_1212362029172 failed: [""distutils.errors.CompileError: command 'gcc' terminated by signal 6\n""]. The above exception was the direct cause of the following exception:. Exception Traceback (most recent call last); <ipython-input-4-773196c7ecc9> in <module>; 6 U_list = []; 7 for (i,t) in enumerate(t_list):; ----> 8 U = propagator(H,t, [], args); 9 U_list.append(U); 10 print(i). ~/opt/anaconda3/lib/python3.7/site-packages/qutip/propagator.py in propagator(H, t, c_op_list, args, opti",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290:7879,depend,depends,7879,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290,1,['depend'],['depends']
Integrability,"[http://qutip.org/docs/latest/guide/dynamics/dynamics-time.html](url). Under section Accessing the state from solver, it says the state of the system can be obtained using args for the time dependent Hamiltonian, but I couldn't figure out what that key was to use the state of system in the time dependent Hamiltonian , an example would be good. ![qutipIssue](https://user-images.githubusercontent.com/7588933/109229114-d9eb3b00-7790-11eb-94ef-17d53aaabaf7.JPG)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1538:190,depend,dependent,190,https://qutip.org,https://github.com/qutip/qutip/issues/1538,2,['depend'],['dependent']
Integrability,"] or callable that; > + can be made into :class:`QobjEvo` are also accepted.; > +; > + rho0 / psi0 : :class:`qutip.Qobj`; > + Initial density matrix or state vector (ket).; > +; > + Taulist:*list* / *array*; > + List of times for :math:`t`.; > +; > + T : float; > + The period of the time-dependence of the hamiltonian.; > +; > + c_ops_and_rates : list of :class:`qutip.Qobj`.; > + List of lists of [collapse operator,collapse operator rate] pairs; >; > ⬇️ Suggested change; >; > - List of lists of [collapse operator,collapse operator rate] pairs; > + List of lists of [collapse operator, collapse operator rate] pairs; >; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245611168>:; >; > > +; > + e_ops : list of :class:`qutip.Qobj` / callback function; > + List of operators for which to evaluate expectation values.; > + The states are reverted to the lab basis before applying the; > +; > + args : *dictionary*; > + Dictionary of parameters for time-dependent Hamiltonian; > +; > + time_sense : float; > + Experimental. Value of the secular approximation (in terms of system; > + frequency 2*np.pi/T) to use when constructing the rate matrix R(t).; > + Default value of zero uses the fully time-independent/most strict; > + secular approximation.; > +; > + quicksolve: Boolean; > + True to use the quicksolve method,which utilizes the most strict; >; > ⬇️ Suggested change; >; > - True to use the quicksolve method,which utilizes the most strict; > + True to use the quicksolve method, which utilizes the most strict; >; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245613247>:; >; > > + IVP solvers. Can be overridden if desired (e.g. for; > + debuggin/troubleshooting).; >; > With overwrite you mean using quicksolve with non-zero time_sense?; > If so, how to overwrite it?; > ⬇️ Suggested change; >; > - IVP solvers. Can be overridd",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847:6170,depend,dependent,6170,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847,2,['depend'],['dependent']
Integrability,"]</li>; <li>Ensure JpegImagePlugin stops at the end of a truncated file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed ImagePath.Path array handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed redundant part of condition <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5915"">#5915</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Explicitly enable strip chopping for large uncompressed TIFFs <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5517"">#5517</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Use the Windows method to get TCL functions on Cygwin <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5807"">#5807</a> [<a href=""https://github.com/DWesl""><code>@​DWesl</code></a>]</li>; <li>Changed error type to allow for incremental WebP parsing <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5404"">#5404</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Ensure that BMP pixel data offset does not ignore palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5899"">#5899</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code><",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:1637,depend,dependabot,1637,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"]</p>; </li>; <li>; <p>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a>; [radarhere]</p>; </li>; <li>; <p>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a>; [radarhere]</p>; </li>; <li>; <p>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a>; [radarhere]</p>; </li>; <li>; <p>Fixed palette index for zeroed color in FASTOCTREE quantize <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5869"">#5869</a>; [radarhere]</p>; </li>; <li>; <p>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a>; [radarhere]</p>; </li>; <li>; <p>Pass SAMPLEFORMAT to libtiff <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5848"">#5848</a>; [radarhere]</p>; </li>; <li>; <p>Added rounding when converting P and PA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5824"">#5824</a>; [radarhere]</p>; </li>; <li>; <p>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a>; [radarhere]</p>; </li>; <li>; <p>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a>; [hugovk]</p>; </li>; <li>; <p>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a>; [radarhere]</p>; </li>; <li>; <p>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a>; [m-shinder, radarhere]</p>; </li>; <li>; <p>Support 16-bit grayscale ImageQt co",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:11930,depend,dependabot,11930,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"_**edit to put the positivity up top!**_: This is a very exciting prospect to me, and I'm always happy when other libraries want to interact with QuTiP! In the interests of inciting more discussion, I've got thrown in some more discussion points below - I'm 100% sure they're all solvable, but it also seems like there isn't one way that's unambiguously correct to do them, so they're worth discussing. ---. In principle I'm happy to implement this, though I don't really agree with your assertion that `othertype.toqobj()` is bad style! It might be so in Julia, but Python doesn't have all the same multiple-dispatch niceties that Julia has, so at the end of the day, we have to add in a method with a ""magic"" name somewhere, and it all just comes down to choosing the name of the method. The downside to having a magic name is that it means we have to eschew proper namespacing; what if another library one day wants to call their interface the same thing? Then it's completely impossible for a downstream library to interoperate with both. Having conversions be a non-special method of the downstream class, and leaving our constructor unaware of them alleviates that issue. Numpy can get away with squatting the `__array__` name because they're _huge_, but I would argue that if we do it, we could actually _harm_ the quantum software ecosystem in the long-run - what happens when a package better than QuTiP comes along that wants to call its objects `Qobj` as well? Let's face it - it's a pretty straightforward name!. All that said, I am very aware that not everyone agrees with me on this, and I _am_ a big fan of interfaces. Python doesn't give us the tools to do it properly, but we can emulate it, like you suggest. I have a few more considerations to add to a discussion:. 1. we can't have _proper_ namespacing, but let's at least make the magic name `__qutip_qobj__` so we realistically prevent any chance of a clash - by nature of a centralised package manager, we can be sure that no ot",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:933,interface,interface,933,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,1,['interface'],['interface']
Integrability,"_Last updated: 2020-08-12_. This is an issue for tracking and publicising the development status of a separated data layer. This is a major breaking change to be introduced in QuTiP 5, and will change how library functions and users access the underlying data structures of `Qobj`. This document and issue will change over time. Development is taking place on the [`dev.major` branch](https://github.com/qutip/qutip/tree/dev.major) in `qutip/qutip`. Pull requests implementing new features:; - #1282 separating out the core QuTiP operations into a (logical but user-transparent) package `qutip.core`.; - #1296 implementing the first parts of the data multiple dispatch and new data types.; - #1332 replacing the `fast_csr_matrix` with the new Cython type `CSR` all across QuTiP; - #1338 implementing the data-layer creation, conversion and dispatcher routines. We are writing a new ""developers' guide"" to explain the logic behind the design decisions, and help new QuTiP developers work on the code. You can follow initial development hosted as [a repo in my user account](https://github.com/jakelishman/qutip-devguide) until we decide how this will be added to the main documentation. You can view a rendered version of the documentation at https://jakelishman.github.io/qutip-devguide. Some design documents:; - [data layer](https://github.com/jakelishman/qutip-doc/blob/design-data-layer/design/01-data-time-layer-separation.md); - [data structure implementation choices](https://github.com/jakelishman/qutip-doc/blob/design-data-layer/design/02-data-structures.md); - [original GSoC proposal (PDF)](https://www.binhbar.com/posts/2020/05/welcome-to-google-summer-of-code-2020/proposal.pdf). New design elements under consideration:; - [improved `'type'` and `'dims'` handling for tensor-product spaces](https://github.com/qutip/qutip/issues/1320). Major breaking changes to QuTiP:; - `Qobj.data` is no longer an instance of `scipy.sparse.spmatrix`, but the new abstract ""data-layer type"" `core.data",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1278:851,rout,routines,851,https://qutip.org,https://github.com/qutip/qutip/issues/1278,1,['rout'],['routines']
Integrability,__.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Inc,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:7859,depend,depends,7859,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,__array__ interface,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/938:10,interface,interface,10,https://qutip.org,https://github.com/qutip/qutip/issues/938,1,['interface'],['interface']
Integrability,"_correlation.py"", line 278, in test_str_list_td_corr; sm.dag(), sm.dag() * sm, sm, args=args); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 392, in correlation_3op_2t; solver=solver, args=args, options=options); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 1086, in _correlation_2t; args=args, options=options); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 1135, in _correlation_me_2t; ).expect[0]; File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 280, in mesolve; progress_bar); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 618, in _mesolve_list_str_td; return _generic_ode_solve(r, rho0, tlist, e_ops, opt, progress_bar); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 867, in _generic_ode_solve; r.integrate(r.t + dt[t_idx]); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 388, in integrate; self.f_params, self.jac_params); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 867, in run; args[5:])); File ""rhs4877011.pyx"", line 19, in rhs4877011.cy_td_ode_rhs (/Users/paul/.pyxbld/temp.macosx-10.10-x86_64-3.4/pyrex/rhs4877011.c:2080); def cy_td_ode_rhs(double t, np.ndarray[CTYPE_t, ndim=1] vec, np.ndarray[CTYPE_t, ndim=1] data0, np.ndarray[int, ndim=1] idx0, np.ndarray[int, ndim=1] ptr0, np.ndarray[CTYPE_t, ndim=1] data1, np.ndarray[int, ndim=1] idx1, np.ndarray[int, ndim=1] ptr1, np.float_t tp, np.int_t t_off):; TypeError: cy_td_ode_rhs() takes exactly 10 positional arguments (11 given); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/269:1773,integrat,integrate,1773,https://qutip.org,https://github.com/qutip/qutip/issues/269,4,['integrat'],['integrate']
Integrability,"_ref = mesolve(H, rho0, times, c_ops, e_ops); #plot_expectation_values(result_ref); #plt.show(). L = liouvillian(H); D = lindblad_dissipator(c_ops[0]); d1_operator = L + D; def d1_rho_func(t, rho_vec):; return d1_operator * rho_vec. B1 = spre(c_ops[0]) + spost(c_ops[0].dag()); B2 = spre(c_ops[0]) + spost(c_ops[0].dag()); def d2_rho_func(t, rho_vec):; e1 = expect_rho_vec(B1.data, rho_vec, False); drho1 = B1 * rho_vec - e1 * rho_vec. e1 = expect_rho_vec(B2.data, rho_vec, False); drho2 = B2 * rho_vec - e1 * rho_vec. return np.vstack([1.0/np.sqrt(2) * drho1, -1.0j/np.sqrt(2) * drho2]); # Everything above is almost the same as the example. I only modified the following part; result = smesolve(H=H*0, rho0=ket2dm(rho0), times=times,; e_ops=e_ops,; d1=d1_rho_func, d2=d2_rho_func,; d2_len=2, ntraj=ntraj, nsubsteps=nsubsteps*2,; dW_factors=[np.sqrt(2/gamma), np.sqrt(2/gamma)],; store_measurement=True, map_func=parallel_map); ```. The error message; ```; ============================= test session starts ==============================; platform darwin -- Python 3.6.8, pytest-3.3.2, py-1.5.2, pluggy-0.6.0; rootdir: /Users/haiwen/PycharmProjects/Qutip_test, inifile:Total run time: 0.13s. test_smesolve2.py:None (test_smesolve2.py); multiprocessing.pool.RemoteTraceback: ; """"""; Traceback (most recent call last):; File ""/Users/haiwen/anaconda3/lib/python3.6/multiprocessing/pool.py"", line 119, in worker; result = (True, func(*args, **kwds)); File ""/Users/haiwen/anaconda3/lib/python3.6/site-packages/qutip/stochastic.py"", line 1040, in _smesolve_single_trajectory; A_ops, dt, dW[:, t_idx, j, :], d1, d2, sso.args); File ""/Users/haiwen/anaconda3/lib/python3.6/site-packages/qutip/stochastic.py"", line 1789, in _rhs_rho_euler_maruyama; dW_len = len(dW[0, :]); IndexError: index 0 is out of bounds for axis 0 with size 0; """""". The above exception was the direct cause of the following exception:; test_smesolve2.py:53: in <module>; store_measurement=True, map_func=parallel_map); ../../anaconda3/lib",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1029:1889,message,message,1889,https://qutip.org,https://github.com/qutip/qutip/issues/1029,1,['message'],['message']
Integrability,"_safe_read when size is greater than SAFEBLOCK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5872"">#5872</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>WebP: Fix memory leak during decoding on failure <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5798"">#5798</a> [<a href=""https://github.com/ilai-deutel""><code>@​ilai-deutel</code></a>]</li>; <li>Do not prematurely return in ImageFile when saving to stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5665"">#5665</a> [<a href=""https://github.com/infmagic2047""><code>@​infmagic2047</code></a>]</li>; <li>Added support for top right and bottom right TGA orientations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5829"">#5829</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected ICNS file length in header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5845"">#5845</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Block tile TIFF tags when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5839"">#5839</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added line width argument to ImageDraw polygon <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5694"">#5694</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not redeclare class each time when converting to NumPy <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5844"">#5844</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:7185,depend,dependabot,7185,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"_t; ; def col_fun(t, args): #time dependent collapse operator coefficient; return np.sqrt(gamma * np.exp(-t)); ; def omg_fun_rk(t): #time-dependent frequency for RK45; s = t/tend; ω_t = ω1 + 10*(ω2-ω1)*s**3 - 15*(ω2-ω1)*s**4 + 6*(ω2-ω1)*s**5; return ω_t; ; def col_fun_rk(t): #time dependent collapse operator coefficient for RK45; return np.sqrt(gamma * np.exp(-t)); ; N=10; m = 1 #mass; ħ = 1; x = np.sqrt(ħ/(2*m*ω1))*(create(N)+destroy(N)) #position operator; p = 1j*np.sqrt((ħ*m*ω1)/2)*(create(N)-destroy(N)) #momentum operator; H = [(p**2)/(2*m), [(1/2)*m*x**2,omg_fun]]; c_ops = [[x,col_fun]]; rho_init = fock_dm(N,1); rhot_vec = mesolve(H,rho_init,tvec,c_ops); rhot_qutip = rhot_vec.states[-1]; ; #Right hand side of the master equation; def rhs(ρ,H,gamma,op):; c_op = np.sqrt(gamma)*op; res = -1j*(H*ρ - ρ*H)+(1/2)*(2*c_op*ρ*c_op.dag()-ρ*c_op.dag()*c_op-c_op*c_op.dag()*ρ); return res; ; #Runge-Kutta Solver; def rksolver(ρ,dt,H,gamma,op):; k1 = rhs(ρ,H,gamma,op); k2 = rhs(ρ+(dt/2)*k1,H,gamma,op); k3 = rhs(ρ+(dt/2)*k2,H,gamma,op); k4 = rhs(ρ+dt*k3,H,gamma,op); rho = ρ+dt*(k1+2*k2+2*k3+k4)/6; return rho; ; dt = tvec[1]-tvec[0]; for i in range(len(tvec)):; H_rk = (p**2)/(2*m) + (1/2)*m*x**2*omg_fun_rk(tvec[i]); gamma_rk = col_fun_rk(tvec[i]); rhot_rk = rksolver(rho_init,dt,H_rk,gamma_rk,x); rho_init = rhot_rk; ```. The fidelity of the final density matrices for these two methods is 0.9312276926316011. This question is also asked [here](https://quantumcomputing.stackexchange.com/questions/22187/qutip-vs-rk45-which-one-gives-the-correct-results-for-time-dependent-systems) and the final density matrices using these two approaches are shown. Basically the density matrices are not close enough. So the question is, which one is correct and why these two methods are giving different results?. Note: For time-independent problems and for time-dependent but coherent evolution the results agree pretty well. However for the case of time-dependent Hamiltonian and dissipation they don't.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733:2525,depend,dependent-systems,2525,https://qutip.org,https://github.com/qutip/qutip/issues/1733,3,['depend'],"['dependent', 'dependent-systems']"
Integrability,"`--config-setting=""--global-option=--with-openmp""` gives a build error (qutip 4.7.0, debian unstable, python 3.10.6):; ```; $ python3.10 -m build --skip-dependency-check --no-isolation --wheel --config-setting=""--global-option=--with-openmp""; * Building wheel...; Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 363, in <module>; main(); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 345, in main; json_out['return_val'] = hook(**hook_input['kwargs']); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 261, in build_wheel; return _build_backend().build_wheel(wheel_directory, config_settings,; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 230, in build_wheel; return self._build_with_temp_dir(['bdist_wheel'], '.whl',; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 211, in _build_with_temp_dir; sys.argv = (sys.argv[:1] + setup_command +; TypeError: can only concatenate list (not ""str"") to list. ERROR Backend subproccess exited when trying to invoke build_wheel; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1978#issuecomment-1219844355:153,depend,dependency-check,153,https://qutip.org,https://github.com/qutip/qutip/pull/1978#issuecomment-1219844355,1,['depend'],['dependency-check']
Integrability,"`MESolver`, and `state` for `SMESolver`. ### Code to Reproduce the Bug. ```shell; import numpy as np; from qutip import destroy, coherent, SMESolver, expect. # parameters; DIM = 20 # Hilbert space dimension; DELTA = 5 * 2 * np.pi # cavity detuning; KAPPA = 2 # cavity decay rate; INTENSITY = 4 # intensity of initial state; NUMBER_OF_TRAJECTORIES = 500. # operators; a = destroy(DIM); x = a + a.dag(); H = DELTA * a.dag() * a. rho_0 = coherent(DIM, np.sqrt(INTENSITY)); times = np.arange(0, 1, 0.0025). stoc_solver = SMESolver(; H,; c_ops=[],; sc_ops=[np.sqrt(KAPPA) * a],; heterodyne=False,; options={""dt"": 0.00125, ""store_measurement"": True,}; ); data = [4.]; stoc_solver.start(state=rho_0, t0=times[0]); for t in times[1:]:; psi_t = stoc_solver.step(t); data.append(expect(x, psi_t)); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); Cell In[4], line 29; 27 stoc_solver.start(state=rho_0, t0=times[0]); 28 for t in times[1:]:; ---> 29 psi_t = stoc_solver.step(t); 30 data.append(expect(x, psi_t)). File /user/anaconda/envs/myenv/lib/python3.9/site-packages/qutip/solver/multitraj.py:129, in MultiTrajSolver.step(self, t, args, copy); 127 raise RuntimeError(""The `start` method must called first.""); 128 self._argument(args); --> 129 _, state = self._integrator.integrate(t, copy=False); 130 return self._restore_state(state, copy=copy). ValueError: too many values to unpack (expected 2); ```. ### Expected Behaviour. It should have returned the state at time step t instead of failing. It would also be nice if the method would return the output of the measurement current as well. ### Your Environment. ```shell; QuTiP Version: 5.0.3; Numpy Version: 1.26.4; Scipy Version: 1.13.1; Cython Version: None; Matplotlib Version: 3.6.0; Python Version: 3.9.19; Number of CPUs: 16; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2491:1973,integrat,integrate,1973,https://qutip.org,https://github.com/qutip/qutip/issues/2491,1,['integrat'],['integrate']
Integrability,"`[]` is a list while 'identity' is function, so they will invoke two different type of time-dependent functions (list-string or list-function type or function callback type, respectively). `rhs_reuse` only applies to the list-string type, so it should only affect the first type of call to `mesolve`. It might be that we have a bug in handing of empty lists as first argument to mesolve, I will look into that. Regarding `rhs_reuse` it can behave a bit differently in a script and the notebook because a notebook is one long-running python process, so the state of `rhs_reuse` might be retained from one call to `mesolve` to another, while a script would get reset between successive calls (runs of the script). I guess this is the reason for the backtrace error you show. Note that you cannot use `rhs_reuse` with successive calls to `mesolve` if you change the function signature. If this is not the case, then it would be useful with a small minimum example (script or notebook) that reproduces the error. ps.. In your second use-case you qouted `mesolve(identity, ..)`. In this case I would rather use `mesolve(identity(), ..)`, so that the first argument is a `Qobj` instance rather than the function that returns one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/123#issuecomment-42158885:92,depend,dependent,92,https://qutip.org,https://github.com/qutip/qutip/issues/123#issuecomment-42158885,1,['depend'],['dependent']
Integrability,"``; import qutip as qt; import numpy as np; import qutip_jax; import jax; from math import pi; from diffrax import diffeqsolve, ODETerm, Dopri5, PIDController; sequence = np.linspace(0, 100, 100); wq = 2. * 2 * pi; g = 0.05 * 2 * pi. with qt.CoreOptions(default_dtype=""jaxdia""):; H0 = -0.5 * 2. * qt.sigmaz() + g * qt.sigmax(); H = [H0, [-0.5 * qt.sigmaz(), sequence]]; psi0 = qt.basis(2, 0); psi1 = qt.basis(2, 1); proj0 = psi0 @ psi0.dag(); proj1 = psi1 @ psi1.dag(); expect_ops = [proj1]; times = np.linspace(0, 100, 100); psi_init = psi1; options = {; ""method"": ""diffrax"", ; ""normalize_output"": False,; ""stepsize_controller"" : PIDController(rtol=1e-5, atol=1e-5),; ""solver"": Dopri5(); }; # result = mesolve(H, psi_init, times, e_ops=expect_ops); result = mesolve(H, psi_init, times, e_ops=expect_ops, options=options); ```; And this will give:; ```; TypeError Traceback (most recent call last); [<ipython-input-63-2fb6110bc952>](https://localhost:8080/#) in <cell line: 21>(); 19 }; 20 # result = mesolve(H, psi_init, times, e_ops=expect_ops); ---> 21 result = mesolve(H, psi_init, times, e_ops=expect_ops, options=options). 20 frames; [... skipping hidden 15 frame]. [... skipping hidden 1 frame]. [... skipping hidden 14 frame]. [... skipping hidden 1 frame]. [... skipping hidden 9 frame]. [... skipping hidden 2 frame]. [... skipping hidden 1 frame]. [... skipping hidden 1 frame]. [... skipping hidden 5 frame]. [/usr/local/lib/python3.10/site-packages/jax/_src/api_util.py](https://localhost:8080/#) in _shaped_abstractify_slow(x); 586 dtype = dtypes.canonicalize_dtype(x.dtype, allow_extended_dtype=True); 587 else:; --> 588 raise TypeError(; 589 f""Cannot interpret value of type {type(x)} as an abstract array; it ""; 590 ""does not have a dtype attribute""). TypeError: Cannot interpret value of type <class 'qutip.core.cy.coefficient.InterCoefficient'> as an abstract array; it does not have a dtype attribute; ```; Any other way we can solve the evolution with time-dependent Hamiltonian?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2320#issuecomment-2092884561:2104,depend,dependent,2104,https://qutip.org,https://github.com/qutip/qutip/issues/2320#issuecomment-2092884561,1,['depend'],['dependent']
Integrability,```; mesolve: time-dependence as string list ... /home/yuri/.pyxbld/temp.freebsd-10.2-STABLE-amd64-2.7/pyrex/rhs170529.c:725:24: error: '_Complex type-name' is invalid; typedef npy_double _Complex __pyx_t_npy_double_complex;; ```. Spotted on FreeBSD-10.2,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/411:19,depend,dependence,19,https://qutip.org,https://github.com/qutip/qutip/issues/411,1,['depend'],['dependence']
Integrability,"```python; jake@tauros$ python; Python 3.7.7 (default, May 6 2020, 04:59:01); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import qutip; /Users/jake/.anaconda3/anaconda3/envs/qutip-dev/lib/python3.7/site-packages/setuptools/distutils_patch.py:26: UserWarning: Distutils was imported before Setuptools. This usage is discouraged and may exhibit undesirable behaviors or errors. Please use Setuptools' objects directly or at least import Setuptools first.; ""Distutils was imported before Setuptools. This usage is discouraged ""; >>>; ```. It was caused by the original coefficients PR. Could be interplay between `pyximport` and the later import of `setuptools`, but I'm not sure (definitely the import of `setuptools` in `core/coefficient.py` is what actually triggers the warning, but I'm not sure when `distutils` is imported). I don't think you _need_ `setuptools` (which is also causing the `build` directories) - I think you can use importlib to import the result of `cythonize` directly?. At any rate, it would be very good to drop the `pyximport` dependency from BR too.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1351#issuecomment-680183199:1152,depend,dependency,1152,https://qutip.org,https://github.com/qutip/qutip/pull/1351#issuecomment-680183199,1,['depend'],['dependency']
Integrability,`fmmesolve` multiple c_ops and rate integration fix,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1962:36,integrat,integration,36,https://qutip.org,https://github.com/qutip/qutip/pull/1962,1,['integrat'],['integration']
Integrability,"`mesolve([],...)` fails while `mesolve(identity,...)` works. There is no failure if `rhs_reuse` is not involved. ```; File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/qutip/mesolve.py"", line 269, in mesolve; progress_bar); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/qutip/mesolve.py"", line 602, in _mesolve_list_str_td; return _generic_ode_solve(r, rho0, tlist, e_ops, opt, progress_bar); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/qutip/mesolve.py"", line 949, in _generic_ode_solve; r.integrate(r.t + dt[t_idx]); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 388, in integrate; self.f_params, self.jac_params); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 866, in run; args[5:])); File ""rhs0.pyx"", line 13, in rhs0.cy_td_ode_rhs (/home/fas/jiang/sk943/.pyxbld/temp.linux-x86_64-3.4/pyrex/rhs0.c:1427); def cy_td_ode_rhs(double t, np.ndarray[CTYPE_t, ndim=1] vec, np.ndarray[CTYPE_t, ndim=1] data0, np.ndarray[int, ndim=1] idx0, np.ndarray[int, ndim=1] ptr0):; ValueError: Buffer dtype mismatch, expected 'double complex' but got 'double'; ```. Offtopic: is qutip trying to decide on its own when to use `rhs_reuse`? I had this phantom bug that never appeared in the ipython notebook, but appeared in batch scripts.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/123:594,integrat,integrate,594,https://qutip.org,https://github.com/qutip/qutip/issues/123,4,['integrat'],['integrate']
Integrability,"`mesolve` super efficiently, though maybe it's only because of simplifications to make a MWE. For example, if your controls are piecewise constant, then it might be inefficient to represent those terms as ""time dependent""; doing so means you incur the cost of multiplying each term by a scalar at every intermediate step the integrator chooses to take, then you have to perform the matrix-vector product for each one individually and add them up. It might be faster already if you evaluate the piecewise varying parts into one ""constant"" part at each point. This isn't guaranteed, because it involves copying rather more data _before_ the call (to construct the constant matrix once), but if the integrator would need to take many intermediate time steps, I expect it would win out. Would something like this work for you?; ```python; times = [0, ...]; # Liouvillians for parts you have control over; control_liouvillians = [qutip.liouvillian(h) for h in control_hamiltonians]; # The time-dependent Hamiltonian for stuff you're not controlling; base_hamiltonian = qutip.QobjEvo([H0, [H1, time_dependence], ...]); # Turn it into a Liouvillian once, so we don't repeat the cost; base = qutip.liouvillian(base_hamiltonian, collapse_operators); state = ...; options = qutip.Options(store_states=False, store_final_state=True); for prev, time in zip(times[:-1], times[1:]):; controls = krotov.get_next_controls(time, state, ...); current_liouvillian = base.copy(); for control, operator in zip(controls, control_liouvillians):; current_liouvillian += control * operator; # ^^^^^^^^^^^^^^^^^^; # each of these terms is a single time-independent Qobj,; # and the sum is a single QobjEvo with all the uncontrolled; # time dependence already handled.; state = qutip.mesolve(current_liouvillian, state, [prev, time], options=options).final_state; ```. By giving `mesolve` the Liouvillian instead of the Hamiltonian and collapse operators separately, you've already done most of its setup, so the time penalties ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859873615:1100,depend,dependent,1100,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859873615,1,['depend'],['dependent']
Integrability,"`pdf2svg` isn't part of ImageMagick, (at least on `brew`) is http://www.cityinthesky.co.uk/opensource/pdf2svg. It feels like all of these system commands should be made a bit more robust. In particular, the bare `os.system` is not the recommended way of calling out to system commands any more. It's now preferable to use [`subprocess.run`](https://docs.python.org/3/library/subprocess.html#subprocess.run). Here, the bug is, I would assume, actually on the previous line:; ```python; os.system('command_which_does_not_exist'); ```; will return a non-zero error code which isn't checked for, but will not raise an exception. . If Jupyter supports displaying embedded PDF files and that's all it's being used for, then it might be worth removing the conversion to SVG. (pdf)LaTeX certainly supports embedded PDF files as graphics. The fewer little dependencies we require, the better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1185#issuecomment-593375737:847,depend,dependencies,847,https://qutip.org,https://github.com/qutip/qutip/issues/1185#issuecomment-593375737,1,['depend'],['dependencies']
Integrability,"`requirements.txt` has no special meaning at all so it doesn't really matter, but typically it's used for runtime, not build time, so it doesn't need `setuptools` or `wheel`. `packaging` is required at both, but I had actually thought it was a dependency of `setuptools`. Still, we use it explicitly, so best add it. The actual main source-of-truth runtime requirements are in `setup.cfg`, and the build requirements are in `pyproject.toml`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1715#issuecomment-973109892:244,depend,dependency,244,https://qutip.org,https://github.com/qutip/qutip/pull/1715#issuecomment-973109892,1,['depend'],['dependency']
Integrability,"`result.measurement` is not the same as `result.expect`, the measurement is an expectation value, but not of the `e_ops` but `m_ops` which are usually automatically generated from the `c_ops` and noise is added to the computed expectation value of the state of the trajectory. The noise is usually larger than the signal and makes it hard to see, but it should converge to mesolve's solution eventually. `smesolve`'s `expect` are just the expectation value of the state of each trajectories (averaged or not depending on options) and should average to the master equation solutions with enough trajectories. Plot in cell 8 show the match is quite good. Even with enough trajectories, the numerical error from `smesolve` will be visible. The equation solved are those written in the notebook. Various stochastic integration method are provided, the default is the taylor expansion of order 1.5.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2194#issuecomment-1634520926:508,depend,depending,508,https://qutip.org,https://github.com/qutip/qutip/issues/2194#issuecomment-1634520926,2,"['depend', 'integrat']","['depending', 'integration']"
Integrability,`rhs_**.pyx` or `cqobjevo_compiled_coeff_**.pyx` are cython compiled function for string-format time-dependent systems.; `rhs_**.pyx` create a function for the right hand side (rhs) of the equation solved by the solver. It's now mostly used in `brmesolve`. `cqobjevo_compiled_coeff_**.pyx` is used in `QobjEvo` with string coefficient. . Which version are you using?; `QobjEvo` should not be found in `Results` and `QobjEvo` can be pickle in recent version...,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1684#issuecomment-933439082:101,depend,dependent,101,https://qutip.org,https://github.com/qutip/qutip/issues/1684#issuecomment-933439082,1,['depend'],['dependent']
Integrability,"`stage_linux_38: &stage_linux_38` define what to do in the test, but does not run it. This addition tell travis to run the test. When I defined the test, 3.8 just came out and there were missing dependencies. We still have no automated test running on 3.8. I am merging this and will make another PR to move other tests from 3.7 to 3.8.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1170#issuecomment-602619137:195,depend,dependencies,195,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-602619137,1,['depend'],['dependencies']
Integrability,"`steadystate` does not support time dependent Hamiltonian. It sees that H is a list, not a Qobj, then fails.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1377#issuecomment-721752193:36,depend,dependent,36,https://qutip.org,https://github.com/qutip/qutip/issues/1377#issuecomment-721752193,1,['depend'],['dependent']
Integrability,"`svd` is used by `steadystate`. There are no method in common between `Dense` and `CSR`, the default is `solve` for `Dense`, but `spsolve` for `CSR`. All iterative methods are only available in `sparse.linalg`... So we cannot pass it anywhere thus I think it won't be hard to remember. If we want to have the default change depending on whether we have mkl or not, we could read the default method from core's settings.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2002#issuecomment-1267059737:324,depend,depending,324,https://qutip.org,https://github.com/qutip/qutip/pull/2002#issuecomment-1267059737,1,['depend'],['depending']
Integrability,"a href=""https://github.com/pypa/wheel/commit/7b9e8e1022b9c850756ef34bc1a4a88042988a86""><code>7b9e8e1</code></a> Test on Python 3.11 final</li>; <li><a href=""https://github.com/pypa/wheel/commit/a04dfef41be0ab10eadbb2ed5d02b600682dc487""><code>a04dfef</code></a> Updated the pypi-publish action</li>; <li><a href=""https://github.com/pypa/wheel/commit/94bb62cb182023ac6586c5510ae9031ea56bd682""><code>94bb62c</code></a> Fixed docs not building due to code style changes</li>; <li><a href=""https://github.com/pypa/wheel/commit/d635664abe560d48723cfc3b73c52ad8c906760a""><code>d635664</code></a> Updated the codecov action to the latest version</li>; <li><a href=""https://github.com/pypa/wheel/commit/fcb94cd51f7dfd40d88dff37415750d9e3638d3b""><code>fcb94cd</code></a> Updated <strong>version</strong> to match the release</li>; <li>Additional commits viewable in <a href=""https://github.com/pypa/wheel/compare/0.37.0...0.38.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wheel&package-manager=pip&previous-version=0.37.0&new-version=0.38.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` wi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:4899,Depend,Dependabot,4899,https://qutip.org,https://github.com/qutip/qutip/pull/2052,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"a maintainer of QuTiP. And it; > seems that there is no way to make a PR to Wiki. I can also send you the; > markdown source code per email like this, but I’m not sure if it works as I; > expected.; >; > The following is the markdown source code:; >; > -----------------------------------; > ## 1. Error mitigation in QuTiP; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:1651,integrat,integration,1651,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['integrat'],['integration']
Integrability,"a/wheel/commit/94bb62cb182023ac6586c5510ae9031ea56bd682""><code>94bb62c</code></a> Fixed docs not building due to code style changes</li>; <li><a href=""https://github.com/pypa/wheel/commit/d635664abe560d48723cfc3b73c52ad8c906760a""><code>d635664</code></a> Updated the codecov action to the latest version</li>; <li><a href=""https://github.com/pypa/wheel/commit/fcb94cd51f7dfd40d88dff37415750d9e3638d3b""><code>fcb94cd</code></a> Updated <strong>version</strong> to match the release</li>; <li>Additional commits viewable in <a href=""https://github.com/pypa/wheel/compare/0.37.0...0.38.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wheel&package-manager=pip&previous-version=0.37.0&new-version=0.38.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:5216,Depend,Dependabot,5216,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['Depend'],['Dependabot']
Integrability,"a93ee""><code>da3a9f0</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/1968"">#1968</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/0ee5eb41d1a2d7d9a05a02dc26dd70e63aaaeeb1""><code>0ee5eb4</code></a> satisfy formatter, linter, and strict mypy</li>; <li><a href=""https://github.com/pallets/jinja/commit/20477c63575175196bfc8103f223cc9f5642595d""><code>20477c6</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/5457"">#5457</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/e491223739dedbb1f4fc6a71340c1484e149d947""><code>e491223</code></a> update pyyaml dev dependency</li>; <li><a href=""https://github.com/pallets/jinja/commit/36f98854c721f98ba103f97f65a8a098da5af0d7""><code>36f9885</code></a> fix pr link</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.3...3.1.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` wil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:3603,Depend,Dependabot,3603,https://qutip.org,https://github.com/qutip/qutip/pull/2418,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"a94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if it's of any help. <details><summary>Output</summary>. ```; pip install --verbose qutip; Using pip 24.0 from /tmp/test-venv/lib/python3.8/site-packages/pip (python 3.8); Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Running command pip subprocess to install build dependencies; Ignoring cython: markers 'python_version >= ""3.10""' don't match your environment; Collecting setuptools; Using cached setuptools-69.5.1-py3-none-any.whl.metadata (6.2 kB); Collecting packaging; Using cached packaging-24.0-py3-none-any.whl.metadata (3.2 kB); Collecting wheel; Using cached wheel-0.43.0-py3-none-any.whl.metadata (2.2 kB); Collecting cython<3.0.3,>=0.29.20; Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.1 kB); Collecting oldest-supported-numpy; Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl.metadata (9.8 kB); Collecting scipy>=1.8; Using cached scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Collecting numpy==1.17.3 (from oldest-supported-numpy); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl.metadata (2.0 kB); INFO: pip is looking at multiple versions of scipy to determine which version is compatible with other requirements. This could take a whil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:2277,depend,dependencies,2277,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['dependencies']
Integrability,"a>; [nulano]</p>; </li>; <li>; <p>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a>; [nulano]</p>; </li>; <li>; <p>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a>; [hugovk]</p>; </li>; <li>; <p>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a>; [cgohlke]</p>; </li>; <li>; <p>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a>; [radarhere]</p>; </li>; <li>; <p>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a>; [cgohlke]</p>; </li>; <li>; <p>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a>; [hmaarrfk]</p>; </li>; <li>; <p>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a>; [radarhere]</p>; </li>; <li>; <p>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a>; [radarhere]</p>; </li>; <li>; <p>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a>; [npjg, radarhere]</p>; </li>; <li>; <p>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a>; [radarhere]</p>; </li>; <li>; <p>Added GPS TIFF tag info <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6661"">#6661</a>; [radarhere]</p>; </li>; <li>; <p>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://g",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:11762,depend,dependabot,11762,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"aces. I'm proposing one possible way to speed this up, while also gaining some additional safety and knowledge about mathematical operations on tensor-product spaces. The steps:; 1. rigourously define the ""grammar"" of `dims`, and allow all of `dimensions.py` to assume that this grammar is followed to speed up parsing; 2. maintain a private data structure type `dimensions._Parsed` inside `Qobj` which is constructed once, and keeps all details of the parsing so they need not be repeated. Determine `Qobj.type` from this data structure; 3. maintain knowledge of the individual `type` of every subspace in the full Hilbert space (e.g. with a list). There is still a ""global"" `Qobj.type`, but this can now be one in the set `{'bra', 'ket', 'oper', 'scalar', 'super', 'other'}`. `'other'` is for when the individual elements do not all match each other. Individual elements cannot be `'other'`. `'scalar'` is added to operations can keep track of tensor elements which have been contracted, say by a `bra-ket` product - operations will then broadcast scalar up to the correct dimensions on certain operations.; 4. dimension parsing is now sped up by using the operation-specific type knowledge. For example, `bra + bra -> bra`, and `ket.dag() -> bra`. Step 3 is necessary to allow matrix multiplication to work. These lookups could be done with enum values instead of string hashing. # Technical details. As of QuTiP 4.5 (and all previous versions), `Qobj` instantiation is slow and this permeates through to all operations on `Qobj`. Matrix multiplication, scalar multiplication, addition and so forth all need to instantiate new `Qobj` instances, and the time penalty for this is on the order of ~50µs per object. This results in more and more code than needs to bypass `Qobj` for speed, and in some cases (e.g. `qutip.control`) makes the use of `Qobj` prohibitively expensive. This obviously is not ideal, since `Qobj` is our primary data type. The majority of this time loss is due to inferring the",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1320:1135,contract,contracted,1135,https://qutip.org,https://github.com/qutip/qutip/issues/1320,1,['contract'],['contracted']
Integrability,ackaging-24.0 scipy-1.8.1 setuptools-70.0.0 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/vector.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; ,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:5140,depend,depends,5140,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,"adarhere</code></a>]</li>; <li>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a> [<a href=""https://github.com/m-shinder""><code>@​m-shinder</code></a>]</li>; <li>Fixed typo <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5902"">#5902</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Switched from deprecated &quot;setup.py install&quot; to &quot;pip install .&quot; <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5896"">#5896</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a> [<a href=""https://github.com/cmbruns""><code>@​cmbruns</code></a>]</li>; <li>Fixed raising OSError in _safe_read when size is greater than SAFEBLOCK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5872"">#5872</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>WebP: Fix memory leak during decoding on failure <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5798"">#5798</a> [<a href=""https://github.com/ilai-deutel""><code>@​ilai-deutel</code></a>]</li>; <li>Do not prematurely return in ImageFile when saving to stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5665"">#5665</a> [<a href=""https://github.com/infmagic2047""><code>@​infmagic2047</code></a>]</li>; <li>Added support for top right and bottom right TGA orientations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5829"">#5829</a> [<a href=""https://github.com/rad",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:6270,depend,dependabot,6270,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"adarhere</code></a>]</li>; <li>Corrected ICNS file length in header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5845"">#5845</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Block tile TIFF tags when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5839"">#5839</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added line width argument to ImageDraw polygon <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5694"">#5694</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not redeclare class each time when converting to NumPy <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5844"">#5844</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only prevent repeated polygon pixels when drawing with transparency <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5835"">#5835</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix pushes_fd method signature <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5833"">#5833</a> [<a href=""https://github.com/hoodmane""><code>@​hoodmane</code></a>]</li>; <li>Add support for pickling TrueType fonts <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5826"">#5826</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Only prefer command line tools SDK on macOS over default MacOSX SDK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5828"">#5828</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix compilation on 64-bit Termux <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5793"">#5793</a> [<a href=""https://github.com/landfillbaby""><code>@​landfillbaby</code></a>]</li>; <li>Replace '",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:8288,depend,dependabot,8288,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"adarhere]</p>; </li>; <li>; <p>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a>; [cgohlke]</p>; </li>; <li>; <p>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a>; [hmaarrfk]</p>; </li>; <li>; <p>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a>; [radarhere]</p>; </li>; <li>; <p>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a>; [radarhere]</p>; </li>; <li>; <p>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a>; [npjg, radarhere]</p>; </li>; <li>; <p>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a>; [radarhere]</p>; </li>; <li>; <p>Added GPS TIFF tag info <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6661"">#6661</a>; [radarhere]</p>; </li>; <li>; <p>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6647"">#6647</a>; [radarhere]</p>; </li>; <li>; <p>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d594f4cb8dc47fb0c69ae58d9fff86faae4515bd""><code>d594f4c</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/909dc64ed5f676169aa3d9b0c26f132a06321b83""><code>909dc64</code></a>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:12460,depend,dependabot,12460,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"ae48513f2f51ca8547ed3b8954fa501fda""><code>0846bfa</code></a> Add to release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/799a6a01052cea3f417a571d7c64cd14acc18c64""><code>799a6a0</code></a> Fix linting</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/00b25fd3ac3648bc28eff5d4c4d816e605e3f05f""><code>00b25fd</code></a> Hide UserWarning in logs</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/05b175ef88c22f5c416bc9b8d5b897dea1abbf2c""><code>05b175e</code></a> Tighter test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/13f2c5ae14901c89c38f898496102afd9daeaf6d""><code>13f2c5a</code></a> Prevent DOS with large SAMPLESPERPIXEL in Tiff IFD</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.1...9.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.1&new-version=9.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:15263,depend,dependency-name,15263,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependency-name']
Integrability,"age for misconfiguring an HTTP proxy as HTTPS. (<code>[#3405](https://github.com/urllib3/urllib3/issues/3405) &lt;https://github.com/urllib3/urllib3/issues/3405&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/d9d85c88aa644af56d5e129634e750ce76e1a765""><code>d9d85c8</code></a> Release 1.26.19</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/8528b63b6fe5cfd7b21942cf988670de68fcd8c0""><code>8528b63</code></a> [1.26] Fix downstream tests (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3409"">#3409</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/40b6d1605814dd1db0a46e202d6e56f2e4c9a468""><code>40b6d16</code></a> Merge pull request from GHSA-34jh-p97f-mpxf</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/29cfd02f66376c61bd20f1725477925106321f68""><code>29cfd02</code></a> Fix handling of OpenSSL 3.2.0 new error message &quot;record layer failure&quot; (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3405"">#3405</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b60064388302f54a3455259ddab121618650a154""><code>b600643</code></a> [1.26] Bump RECENT_DATE (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3404"">#3404</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/7e2d3890926d4788e219f63e2e36fbeb8714827f""><code>7e2d389</code></a> [1.26] Fix running CPython 2.7 tests in CI (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3137"">#3137</a>)</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.18&new-version=1.26.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-secu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:3011,message,message,3011,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['message'],['message']
Integrability,"ages\Cython\Distutils\old_build_ext.py in run(self); 183 optimization.disable_optimization(); 184 ; --> 185 _build_ext.build_ext.run(self); 186 ; 187 def build_extensions(self):. F:\Anaconda3\lib\distutils\command\build_ext.py in run(self); 337 ; 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 ; 341 def check_extensions_list(self, extensions):. F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 191 for ext in self.extensions:; 192 ext.sources = self.cython_sources(ext.sources, ext); --> 193 self.build_extension(ext); 194 ; 195 def cython_sources(self, sources, extension):. F:\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 531 debug=self.debug,; 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 ; 535 # XXX outdated variable, kept here in case third-part code. F:\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 302 ; 303 if not self.initialized:; --> 304 self.initialize(); 305 compile_info = self._setup_compile(output_dir, macros, include_dirs,; 306 sources, depends, extra_postargs). F:\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 195 plat_spec = PLAT_TO_VCVARS[plat_name]; 196 ; --> 197 vc_env = _get_vc_env(plat_spec); 198 if not vc_env:; 199 raise DistutilsPlatformError(""Unable to find a compatible "". F:\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 83 vcvarsall, vcruntime = _find_vcvarsall(plat_spec); 84 if not vcvarsall:; ---> 85 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 86 ; 87 try:. ImportError: Building module rhs75680 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']; ```; I have tried it many times. Any other functions in Floquet Formalism will still have this problem.; Here is my version information:; ![image](https://user-images.githubus",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854:8144,depend,depends,8144,https://qutip.org,https://github.com/qutip/qutip/issues/854,1,['depend'],['depends']
Integrability,"akness; and are safe to continue to use PCG64. We have introduced a new; PCG64DXSM BitGenerator that will eventually become the new default; BitGenerator implementation used by <code>default_rng</code> in future releases.; PCG64DXSM solves the statistical weakness while preserving the; performance and the features of PCG64.</p>; <p>See <code>upgrading-pcg64</code> for more details.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/18906"">gh-18906</a>)</p>; <h2>Expired deprecations</h2>; <ul>; <li>The <code>shape</code> argument <code>numpy.unravel_index</code> cannot be; passed as <code>dims</code> keyword argument anymore. (Was deprecated in NumPy; 1.16.)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/numpy/numpy/commit/b235f9e701e14ed6f6f6dcba885f7986a833743f""><code>b235f9e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19283"">#19283</a> from charris/prepare-1.21.0-release</li>; <li><a href=""https://github.com/numpy/numpy/commit/34aebc2824cf8c2bdbe19040b82f98f18557c8ba""><code>34aebc2</code></a> MAINT: Update 1.21.0-notes.rst</li>; <li><a href=""https://github.com/numpy/numpy/commit/493b64bfe9c5396498325b87e5e80e1917555c41""><code>493b64b</code></a> MAINT: Update 1.21.0-changelog.rst</li>; <li><a href=""https://github.com/numpy/numpy/commit/07d7e72ab6880c05b5fdd98482cf88982e778393""><code>07d7e72</code></a> MAINT: Remove accidentally created directory.</li>; <li><a href=""https://github.com/numpy/numpy/commit/032fca5e2e9749b152ec56153f476e05efdff287""><code>032fca5</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19280"">#19280</a> from charris/backport-19277</li>; <li><a href=""https://github.com/numpy/numpy/commit/7d25b81025a50cc0368f5727c65e875ca769469a""><code>7d25b81</code></a> BUG: Fix refcount leak in ResultType</li>; <li><a href",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:2455,depend,dependabot,2455,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['depend'],['dependabot']
Integrability,"algorithms and better cache usage in places, but its principle advantage was the massive reduction in overhead for function calls between Python and C space, which largely affected small objects. The full aim, however, is to have QuTiP 5 support many different data representations as the backing of `Qobj`, and use the most suitable representation for the given data. This will not require every single QuTiP function to have an exponential number of versions for every possible combination of inputs, but only to have specialisations for the most common data combinations. This concept is the ""data layer"". All code examples in this PR are prefixed with. ```python; >>> from qutip.core import data; ```. ## Specification. The core to achieving this is fast, fully specified inter-conversion between all known data types, and efficient multiple-dispatch for mathematical operations. There are then four principle components of the data-layer:. 1. a creation routine which returns an appropriate data-layer type given some arbitrary Python object (`data.create`); 2. a routine which can perform the conversion from any data-layer type to any other data-layer type (`data.to`); 3. completely specialised mathematical operations (e.g. `data.add_csr_dense_dense(CSR, Dense) -> Dense`); 4. an object which provides multiple dispatch operations on its input arguments to use an exact specialisation (defined in item 3) if known, or uses the conversion routine (item 2) to convert the inputs into ones matching a specialisation if not: `data.Dispatcher`. The exported mathematical functions will all be instances of this type. The minimum work needed to define a new data-layer type is to provide `data.to` with two conversion functions; one into the new type from a current data-layer type, and one which converts the new type _into_ a current data-layer type. Once this is done, every single QuTiP component will be able to use the new data-layer type, although until specialisations are given which use i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338:1308,rout,routine,1308,https://qutip.org,https://github.com/qutip/qutip/pull/1338,1,['rout'],['routine']
Integrability,"alized(); --> 985 cmd_obj.run(); 986 self.have_run[command] = 1. ~/opt/anaconda3/lib/python3.7/site-packages/Cython/Distutils/old_build_ext.py in run(self); 185 ; --> 186 _build_ext.build_ext.run(self); 187 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in run(self); 339 # Now actually compile and link everything.; --> 340 self.build_extensions(); 341 . ~/opt/anaconda3/lib/python3.7/site-packages/Cython/Distutils/old_build_ext.py in build_extensions(self); 194 # Call original build_extensions; --> 195 _build_ext.build_ext.build_extensions(self); 196 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in build_extensions(self); 448 else:; --> 449 self._build_extensions_serial(); 450 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in _build_extensions_serial(self); 473 with self._filter_build_errors(ext):; --> 474 self.build_extension(ext); 475 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in build_extension(self, ext); 533 extra_postargs=extra_args,; --> 534 depends=ext.depends); 535 . ~/opt/anaconda3/lib/python3.7/distutils/ccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 573 continue; --> 574 self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); 575 . ~/opt/anaconda3/lib/python3.7/distutils/unixccompiler.py in _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts); 119 except DistutilsExecError as msg:; --> 120 raise CompileError(msg); 121 . CompileError: command 'gcc' terminated by signal 6. During handling of the above exception, another exception occurred:. ImportError Traceback (most recent call last); ~/opt/anaconda3/lib/python3.7/site-packages/qutip/qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 79 import_code = compile(codeString, '<string>', 'exec'); ---> 80 exec(import_code, locals()); 81 except (ModuleNotFoundError, ImportError) as e:. <string> in <module>. ~/opt/anaconda3/lib/p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290:4275,depend,depends,4275,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290,1,['depend'],['depends']
Integrability,"alized(); --> 985 cmd_obj.run(); 986 self.have_run[command] = 1. ~/opt/anaconda3/lib/python3.7/site-packages/Cython/Distutils/old_build_ext.py in run(self); 185 ; --> 186 _build_ext.build_ext.run(self); 187 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in run(self); 339 # Now actually compile and link everything.; --> 340 self.build_extensions(); 341 . ~/opt/anaconda3/lib/python3.7/site-packages/Cython/Distutils/old_build_ext.py in build_extensions(self); 194 # Call original build_extensions; --> 195 _build_ext.build_ext.build_extensions(self); 196 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in build_extensions(self); 448 else:; --> 449 self._build_extensions_serial(); 450 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in _build_extensions_serial(self); 473 with self._filter_build_errors(ext):; --> 474 self.build_extension(ext); 475 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in build_extension(self, ext); 533 extra_postargs=extra_args,; --> 534 depends=ext.depends); 535 . ~/opt/anaconda3/lib/python3.7/distutils/ccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 573 continue; --> 574 self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); 575 . ~/opt/anaconda3/lib/python3.7/distutils/unixccompiler.py in _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts); 119 except DistutilsExecError as msg:; --> 120 raise CompileError(msg); 121 . ImportError: Building module cqobjevo_compiled_coeff_1212362029172 failed: [""distutils.errors.CompileError: command 'gcc' terminated by signal 6\n""]. The above exception was the direct cause of the following exception:. Exception Traceback (most recent call last); <ipython-input-4-773196c7ecc9> in <module>; 6 U_list = []; 7 for (i,t) in enumerate(t_list):; ----> 8 U = propagator(H,t, [], args); 9 U_list.append(U); 10 print(i). ~/opt/anaconda3/lib/python3.7/site-packages/qutip/prop",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290:7867,depend,depends,7867,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290,1,['depend'],['depends']
Integrability,"allelly. It uses heuristic methods mainly from https://doi.org/10.1117/12.666419. The scheduler aims at pulse schedule and therefore does not consider merging gates to reduce the gates number. It assumes that the input circuit is optimized at the gate level (e.g. has a minimal number of CNOT gates) and matches the hardware topology. The scheduler includes two methods, ""ASAP"", as soon as possible, and ""ALAP"", as late as possible. The later is commonly used in quantum computation because of the finite lifetime of qubits. **Methods**. - The scheduler first generates a quantum gates dependency graph, containing information about which gates have to be executed before some other gates because they do not commute. The graph preserves the mobility of the gates, i.e. commuting gates are not dependent on each other, even if they use the same qubits. ; - Next, it computes the longest distance of each node to the start and end nodes. The distance for each dependency arrow is defined by the execution time of the instruction (By default, it is 1 for all gates). This is used as a priority measure in the next step. The gate with a longer distance to the end node and a shorter distance to the start node has higher priority.; - In the last step, it uses a list-schedule algorithm with hardware constraint (e.g. gates using the same qubits) and priority and returns a list of cycles for gates.; - Since it's heuristics, sometimes it does not find the optimal. It offers an option that randomly shuffles the gates (if commuting) and repeats the scheduling a few times to get a better result. For scheduling quantum instructions, of which the runtime of different gates might differ, an additional step is required to compute the scheduled start time of each instruction.; It adds the additional dependency caused by hardware constraint to the graph and recomputes the distance of each node to the start and end node. This distance is then converted to the start time of each instruction. **Example**",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273:1149,depend,dependency,1149,https://qutip.org,https://github.com/qutip/qutip/pull/1273,1,['depend'],['dependency']
Integrability,"anch 'master' into dev</li>; <li><a href=""https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98""><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>; <li><a href=""https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201""><code>5918a0e</code></a> Merge branch 'master' into dev</li>; <li>Additional commits viewable in <a href=""https://github.com/kjd/idna/compare/v3.4...v3.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:4359,depend,dependabot-automerge-start,4359,https://qutip.org,https://github.com/qutip/qutip/pull/2392,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,and Getting requirements to build wheel; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:5683,depend,depends,5683,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"and [NEP 35](https://numpy.org/neps/nep-0035-array-creation-dispatch-with-array-function.html). Later versions of numpy allowed greater control over how ufuncs get implemented, which was most recently extended in 1.16 to cover non-ufuncs like `tensordot`. These functions are intended for classes to define how ufuncs operate on their data, but implementors should still follow the `ufunc` spec for broadcasting rules, and a given ufunc should have the same conceptual behaviour (mostly elementwise operations or reductions). Several libraries implement only these, but _not_ `__array__`, but given my points 1 and 2 above, I don't think QuTiP should go this route. You can, however, set these properties to `None` to unconditionally tell Numpy that the object is incompatible with ufuncs. I think this might be a good way for us to go. ## What other libraries do. Provide everything:; - Dask: mostly trying to provide a numpy-like distributed array class. Its arrays mostly support the numpy interface, including how ufuncs should act on them. Providing `__array__` seems odd to me here in the context of other libraries, since that may easily blow out memory.; - PyTorch: CPU/GPU accelerated tensors for ML. This is a bit beyond my experience to comment on why they made the choices they did.; - Xarray: strongly extends the idea of structured arrays; this to me is the best example of how `__array__` was intended to be used.; ; Provide some things:; - Qiskit: (just changed behaviour in Qiskit/qiskit-terra#5402) implements `__array__` (but nothing else) for things that are like our `Qobj`. Discussed more at the top.; - CuPy (CUDA operations on ndarray-likes) explicitly does not allow implicit conversion to `np.ndarray` (see cupy/cupy#3421) for performance reasons, but does implement `__array_ufunc__` and `__array_function__`.; - pydata/sparse (nd-sparse _arrays_ instead of scipy.sparse's sparse _matrices_): always implement `__array_ufunc__` and `__array_function__` because they are try",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902:6366,interface,interface,6366,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902,1,['interface'],['interface']
Integrability,"and `dW_factors` are properties of the classes, but not available to overwrite through the function interface. ; - The multiples end condition (`target_tol`, `timeout`) are added.; - The `solver` keyword is now `method` options, as it is in other solver.; - The method that was referring the homodyne or heterodyne detection is now the `heterodyne` keyword. ie before `method=""heterodyne""` now `heterodyne=True`.; - The default integration method is now `rouchon`, instead of `taylor1.5`. ie the method coming from a physic paper and not a mathematics textbook. . - The stochastic integration methods have been spitted in smaller chunk instead of the huge classes in _stochastic.pyx. I kept most methods, only skipping the taylor order 2.0 method. The python interface is kept very similar to the `Integrator` as `SIntegrator`, the main difference being that `set_state` and `get_state` use an extra random number generator with the time and state. The integration methods are usually 5%~10% slower than they where for medium size problems (shape ~100). Most method are computed the same way as before, but the rouchon method no longer use super operator, but keep the density matrix as a matrix and not an oper-ket. - The derivative computation for used by the integration method has also been split into multiple functions and made only available for `smesolve`. For there methods to be valid, the each diffusion contribution must commute. For `smesolve`, this means that each `sc_ops` must commute, as documented. For `ssesolve`, each `sc_ops` must not only commute, but also commute with other `sc_ops`'s adjoint, this last part being missing from v4's documentation. It also meant that the sc_ops needed to commute with it's own adjoint when using heterodyne detection... - `ssepdpsolve`, `smepdpsolve`, `photocurrent_mesolve`, `photocurrent_sesolve` removed. They are all less efficient variants of `mcsolve`. `mcsolve` already include the photocurrent in the output. - `general_stochastic`, rem",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131:1283,integrat,integration,1283,https://qutip.org,https://github.com/qutip/qutip/pull/2131,1,['integrat'],['integration']
Integrability,"and compatible with previous syntax. **Description**; Operating System: MacOS Big Sur 11.0.1; CPU: Apple M1. The syntax of output of command ; ```; sysctl -n machdep.cpu.brand_string; ``` ; has been changed. The output for previous MacOS: ; ```; $ sysctl -n machdep.cpu.brand_string; Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz\n; ```. The updated output; ```; $ sysctl -n machdep.cpu.brand_string; VirtualApple @ 2.50GHz processor\n; ```. Therefore, the function [`_mac_hardware_info`](https://github.com/qutip/qutip/blob/cb201690a2ca3a9c904bc642ef6600f2ef54f763/qutip/hardware_info.py#L48) of file `hardware_info.py` cannot parse the frequency of CPU correctly. The popped error information is attached below. ```; ValueError: could not convert string to float: ' 2.50GHz proces'; ```. This pull request fix this problem and compatible with both syntax of hardware information. . Since the unit tests of file or function are not found, I do not add test files for this change. I attach python code below to prove the correctness of the implementation. ```python; # before change; old_str = 'Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz\n'; new_str = 'VirtualApple @ 2.50GHz processor\n'; # parse old hardware message; int(float(old_str.split('@')[1].split(' ')[1].replace('GHz', ''))*1000); # parse new hardware message; int(float(new_str.split('@')[1].split(' ')[1].replace('GHz', ''))*1000); ```. **Related issues or PRs**; No related issue. **Changelog**; Fixed error parsing hardware information for MacOS Big Sur (Apple M1 chip)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1401:1204,message,message,1204,https://qutip.org,https://github.com/qutip/qutip/pull/1401,2,['message'],['message']
Integrability,"are/v2.9.0...v2.9.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=babel&package-manager=pip&previous-version=2.9.0&new-version=2.9.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1695:3855,Depend,Dependabot,3855,https://qutip.org,https://github.com/qutip/qutip/pull/1695,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"args, reload_support, inplace); 101 obj_build_ext = dist.get_command_obj(""build_ext""); --> 102 dist.run_commands(); 103 so_path = obj_build_ext.get_outputs()[0]. F:\Anaconda3\lib\distutils\dist.py in run_commands(self); 954 for cmd in self.commands:; --> 955 self.run_command(cmd); 956 . F:\Anaconda3\lib\distutils\dist.py in run_command(self, command); 973 cmd_obj.ensure_finalized(); --> 974 cmd_obj.run(); 975 self.have_run[command] = 1. F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in run(self); 184 ; --> 185 _build_ext.build_ext.run(self); 186 . F:\Anaconda3\lib\distutils\command\build_ext.py in run(self); 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 . F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 192 ext.sources = self.cython_sources(ext.sources, ext); --> 193 self.build_extension(ext); 194 . F:\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 . F:\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 303 if not self.initialized:; --> 304 self.initialize(); 305 compile_info = self._setup_compile(output_dir, macros, include_dirs,. F:\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 196 ; --> 197 vc_env = _get_vc_env(plat_spec); 198 if not vc_env:. F:\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 84 if not vcvarsall:; ---> 85 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 86 . DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. ImportError Traceback (most recent call last); <ipython-input-9-be63b537dd61> in <module>(); 1 start_time = time.time(); ----> 2 q_energies, f_gnd_prob, wf_gnd_prob = qubit_integrate(delta, eps0, A, omega, gamma1, gamma2, ps",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854:2518,depend,depends,2518,https://qutip.org,https://github.com/qutip/qutip/issues/854,1,['depend'],['depends']
Integrability,"asis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (tau) ... ok; control.pulseoptim: Hada",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576:1252,depend,dependent,1252,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576,1,['depend'],['dependent']
Integrability,"ast 1.3 (2009 - the oldest docs still on scipy.org), and I imagine long before then too. `__array__` is mentioned (and still is) in the documentation of `np.array`, which is unchanged since 2009 and says that its argument should be; > An array, any object exposing the array interface, an object whose `__array__` method returns an array, or any (nested) sequence. and `__array_wrap__` is like the reverse - it's for coercing numpy arrays back into this class. If we were to keep `__array__` in `Qobj`, we should also implement `__array_wrap__` for coercion back (something that isn't currently implemented). At the time and up to inclusively 1.19, the presence of `__array__` caused otherwise scalar types passed alone to `np.array` to return the output of `input.__array__(*args, **kwargs)`, instead of becoming a 0D numpy array (like `np.array(1)` does). Taken purely alone, that could make sense as something we implement. However, this also implies that `Qobj` should fulfil the numpy ufunc interface; `Qobj` would be a container for data such that operations like `np.sin` is the elementwise sin, or (most notably) `np.multiply` is the *elementwise* multiplication. Our `Qobj` _does not_ fulfil the ufunc interface:; 1. elementwise operations don't make sense on quantum objects, which are arrays only as an implementation detail - the `Qobj` class is meant to represent an abstract linear algebra object, not specifically a matrix.; 2. we don't honour the `shape` guarantees of numpy as we test compatibility based on `dims`, which are not 1D (superoperators) so cannot follow numpy's broadcasting rules; 3. we treat multiplication as matrix multiplication, violating how `np.multiply` should behave. My main concern is point 1: I don't think that `Qobj` provides a similar object to an `ndarray` at all. Right now we _do_ use matrices underneath, but proposed additions to QuTiP such as symbolic `Qobj` and adaptive Hilbert spaces are compatible with the idea of ""abstract linear algebra obje",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902:3919,interface,interface,3919,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902,1,['interface'],['interface']
Integrability,"ate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent changes in QuTiP now use a re-entrant internal integrator, i.e. not `scipy.integrate.ode`. At the time I implemented the [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) by looking at what `mesolve` was doing at a low level for the specific case of density matrices, `scipy.integrate.ode` was definitely being used, and that couldn't handle propagating in parallel (and by ""parallel"" I include alternating propagation steps from two different propagations). I'm also not sure what using `QobjEvo` does: In the benchmarking, there didn't seem to be any difference whether I wrap my nested lists into `QobjEvo` or not. Is there something specific that `QobjEvo` should enable that I can't do with nested lists?. > QuTiP 5 is (probably) going to formalise that (^) sort of low-level calling convention of `mesolve`, but it should work already. The new one look a bit different because instead of doing the setup very manually, there'll be a ""low-level"" function to prepare a master equation problem (and a Schrodinger equation one, etc), and then there'll be a `step` method instead of calling the ""high-level"" interface function `mesolve`, but functionally it'll do largely the same, just with a lot less data copying than the current form has to do. In the new system, it's likely that the function `mesolve` itself will keep the exact same interface it has now, just internally most of its processing will be split into modular components, each of which will be accessible (with different names) to the user to compose themselves, if the",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:7663,wrap,wrap,7663,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['wrap'],['wrap']
Integrability,"ates for the propagator; evals, evecs = la.eig(U.full()). eargs = angle(evals). # make sure that the phase is in the interval [-pi, pi], so that; # the quasi energy is in the interval [-pi/T, pi/T] where T is the; # period of the driving. eargs += (eargs <= -2*pi) * (2*pi) +; # (eargs > 0) * (-2*pi); eargs += (eargs <= -pi) * (2 * pi) + (eargs > pi) * (-2 * pi); e_quasi = -eargs / T. # sort by the quasi energy; if sort:; order = np.argsort(-e_quasi); else:; order = list(range(len(evals))). # prepare a list of kets for the floquet states; new_dims = [U.dims[0], [1] * len(U.dims[0])]; new_shape = [U.shape[0], 1]; kets_order = [Qobj(np.matrix(evecs[:, o]).T,; dims=new_dims, shape=new_shape) for o in order]. return kets_order, e_quasi[order]. # create periodically-driven Hamiltonian (with degenerate quasienergies); XI = tensor(sigmax(), qeye(2)); ZI = tensor(sigmaz(), qeye(2)); a = 2.404825557695773; H = [ ZI , [0.5 * a * 10 *XI, 'cos(10*t)']]. T = 2*np.pi/10. # compute Floquet modes with different integration accuracy. fq_modes0, fq_energy0 = floquet_modes(H, T); fq_modes1, fq_energy1 = floquet_modes_mod(H, T, options=Options(rtol=1e-12,atol=1e-13, nsteps=1e+8)); fq_modes2, fq_energy2 = floquet_modes_mod(H, T, options=Options(rtol=1e-14,atol=1e-14, nsteps=1e+8)). # print overlap between two modes ; print('\tfloquet_modes:', abs(fq_modes0[0].overlap(fq_modes0[2]))); print('\tfloquet_modes_mod1:', abs(fq_modes1[0].overlap(fq_modes1[2]))); print('\tfloquet_modes_mod2:', abs(fq_modes2[0].overlap(fq_modes2[2]))); ```. ### Code Output. ```shell; floquet_modes: 0.042385964453357024; floquet_modes_mod1: 0.11521649304536484; floquet_modes_mod2: 5.384787239183031e-24; ```. ### Expected Behaviour. I expected the Floquet modes to be orthogonal up to numerical precision. ### Your Environment. ```shell; QuTiP Version: 4.6.3; Numpy Version: 1.20.2; Scipy Version: 1.6.2; Cython Version: 0.29.21; Matplotlib Version: 3.3.2; Python Version: 3.8.5; Number of CPUs: 8; BLAS Info: OPENBLAS; O",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1864:3436,integrat,integration,3436,https://qutip.org,https://github.com/qutip/qutip/issues/1864,1,['integrat'],['integration']
Integrability,"ator representation. Perhaps @cgranade knows?; > ; > import scipy; > ; > from qutip.mesolve import _generic_ode_solve; > from qutip.superoperator import liouvillian, mat2vec; > from qutip.settings import debug; > ; > if debug:; > import inspect; > ; > def _mesolve_const_super(H, E0, tlist, c_op_list, e_ops, args, opt,; > progress_bar):; > """"""; > Evolve the super-operator `E0` using an ODE solver, for constant ; > Liouvillian; > """"""; > ; > ```; > if debug:; > print(inspect.stack()[0][3]); > ; > """"""; > #; > # check initial state; > #; > if isket(rho0):; > # if initial state is a ket and no collapse operator where given,; > # fall back on the unitary schrodinger equation solver; > if len(c_op_list) == 0 and isoper(H):; > return _sesolve_const(H, rho0, tlist, e_ops, args, opt,; > progress_bar); > ; > # Got a wave function as initial state: convert to density matrix.; > rho0 = ket2dm(rho0); > """"""; > ; > #; > # check initial value; > #; > if not E0.issuper:; > raise TypeError(""Argument 'E0' should be a super-operator""); > ; > #; > # construct liouvillian; > #; > if opt.tidy:; > H = H.tidyup(opt.atol); > ; > L = liouvillian(H, c_op_list); > ; > #; > # setup integrator; > #; > initial_vector = mat2vec(E0.full()).ravel(); > # r = scipy.integrate.ode(cy_ode_rhs); > r = scipy.integrate.ode(_rhs); > # r.set_f_params(L.data.data, L.data.indices, L.data.indptr); > # not sure why I need to transpose L here:; > r.set_f_params(scipy.transpose(L.data)); > r.set_integrator('zvode', method=opt.method, order=opt.order,; > atol=opt.atol, rtol=opt.rtol, nsteps=opt.nsteps,; > first_step=opt.first_step, min_step=opt.min_step,; > max_step=opt.max_step); > r.set_initial_value(initial_vector, tlist[0]); > ; > #; > # call generic ODE code; > #; > return _generic_ode_solve(r, E0, tlist, e_ops, opt, progress_bar); > ```; > ; > def _rhs(t,y,data):; > ym = y.reshape(data.shape); > return (data*ym).flatten(); > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/384#issuecomment-150751174:4068,integrat,integrator,4068,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-150751174,3,['integrat'],"['integrate', 'integrator']"
Integrability,"ator via qutip. exponent = 1j * (a + a.dag()) # argument of the matrix exponential; exp_iphi = exponent.expm(); cos_phi = 0.5*(exp_iphi + exp_iphi.dag()). H_0 = a.dag() * a # Hamiltonian of LC harmonic oscillator; h_j = - cos_phi # Hamiltonian for the Josephson tunneling contribution; prefactor E_j(t) to be provided separately . energies, states = (H_0 + E_j * h_j).eigenstates() . jump_op_list = [] # no jump operators. # monitor projectors onto the ground and first excited eigenstates; projector0 = states[0] * states[0].dag(); projector1 = states[1] * states[1].dag(). monitor_ops = [projector0, projector1]. psi_0 = states[0] # initial state is the ground state . # tlist = np.linspace(0, Delta_t_min + Delta_t_max + 6*dt, 300) # evenly-spaced time values; tlist = np.linspace(0, 0.5, 300) # evenly-spaced time values; ```. The crucial piece comes now:. ``` python; timefunc_string1 = '20.0'; H1 = [H_0, [h_j, timefunc_string1]]; odesolution1 = mcsolve(H1, psi_0, tlist, jump_op_list, monitor_ops). # NOTE: ONLY ""DIFFERENCE"" W.R.T. PREVIOUS EXAMPLE IS ADDING ZERO!; timefunc_string2 = '0.0*20.0 + 20.0'; H2 = [H_0, [h_j, timefunc_string2]]; odesolution2 = mcsolve(H2, psi_0, tlist, jump_op_list, monitor_ops). plot(tlist, odesolution1.expect[0], tlist, odesolution1.expect[1], lw=2); legend(('Ground state','1st exc.')); ylabel('Occupation probability'); xlabel('Time'). show(). plot(tlist, odesolution2.expect[0], tlist, odesolution2.expect[1], lw=2); legend(('Ground state','1st exc.')); ylabel('Occupation probability'); xlabel('Time'). show(); ```. I obtain two different results, the second one being wrong (and indicating that somehow 0.0*20.0 + 20.0 is not the same as 20.0). There's a separate issue that I have run into but that's mostly harmless: to get consistent results, it seems that I have to choose the opposite sign for the coefficient function in the function-based version of including time dependence as compared to the cython based version. Thanks in advance for any help.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/215:2494,depend,dependence,2494,https://qutip.org,https://github.com/qutip/qutip/issues/215,1,['depend'],['dependence']
Integrability,"automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language; - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language; - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language. You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>. **Changelog**. Update ipython used to build documentation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780:3445,depend,dependabot,3445,https://qutip.org,https://github.com/qutip/qutip/pull/1780,12,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"b.com/ipython/ipython/commit/c7a9470e540392c575aac46c3ee5cf4fe5123eb1""><code>c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow potential exceptions from showtraceback()</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.31.1...8.10.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.31.1&new-version=8.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085:2699,depend,dependabot-automerge-start,2699,https://qutip.org,https://github.com/qutip/qutip/pull/2085,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"b.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added DDS BC6H reading <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6449"">#6449</a> [<a href=""https://github.com/ShadelessFox""><code>@​ShadelessFox</code></a>]</li>; <li>Added support for opening WhiteIsZero 16-bit integer TIFF images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6642"">#6642</a> [<a href=""https://github.com/JayWiz""><code>@​JayWiz</code></a>]</li>; <li>Raise an error when allocating translucent color to RGB palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6654"">#6654</a> [<a href=""https://github.com/jsbueno""><code>@​jsbueno</code></a>]</li>; <li>Moved mode check outside of loops <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6650"">#6650</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added reading of TIFF child images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6569"">#6569</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved ImageOps palette handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6596"">#6596</a> [<a href=""https://github.com/PososikTeam""><code>@​PososikTeam</code></a>]</li>; <li>Defer parsing of palette into colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6567"">#6567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Apply transparency to P images in ImageTk.PhotoImage <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6559"">#6559</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use rounding in ImageOps contain() and pad() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6522"">#6522</a> [<a href=""https://github.com/bibinhashley""><code>@​bibinhashley</code></a>]</li>; <li",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:8302,depend,dependabot,8302,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"b.com/urllib3/urllib3/commit/29cfd02f66376c61bd20f1725477925106321f68""><code>29cfd02</code></a> Fix handling of OpenSSL 3.2.0 new error message &quot;record layer failure&quot; (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3405"">#3405</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b60064388302f54a3455259ddab121618650a154""><code>b600643</code></a> [1.26] Bump RECENT_DATE (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3404"">#3404</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/7e2d3890926d4788e219f63e2e36fbeb8714827f""><code>7e2d389</code></a> [1.26] Fix running CPython 2.7 tests in CI (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3137"">#3137</a>)</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.18&new-version=1.26.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:3859,depend,dependency-name,3859,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['depend'],['dependency-name']
Integrability,b/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pi,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:6577,integrat,integrator,6577,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['integrat'],['integrator']
Integrability,"b47""><code>94a0cf1</code></a> Fix 6-byte OOB read in FliDecode</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cece64f4be10ab28b12a83a3555af579dad343a5""><code>cece64f</code></a> Add 8.3.2 (2021-09-02) [CI skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e42238637651f191c2fc6e3f4024348c126e0ccc""><code>e422386</code></a> Add release notes for Pillow 8.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/08dcbb873217874eee0830fc5aaa1f231c5af4fa""><code>08dcbb8</code></a> Pillow 8.3.2 supports Python 3.10 [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.2.0...8.3.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.2.0&new-version=8.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:9098,depend,dependabot-security-updates,9098,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot-security-updates']
Integrability,"b696d5dc74e""><code>77ca4a6</code></a> don't run nose-based iptest on py310, only pytest</li>; <li><a href=""https://github.com/ipython/ipython/commit/533e5094aa36b51549cf6a316fc439c6404643c9""><code>533e509</code></a> back to decorator skip</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.22.0...7.31.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.22.0&new-version=7.31.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780:2742,Depend,Dependabot,2742,https://qutip.org,https://github.com/qutip/qutip/pull/1780,1,['Depend'],['Dependabot']
Integrability,"b8548536fc16c5c5c7af946a5b1""><code>4a9569a</code></a> Bump actions/checkout from 4.1.2 to 4.1.4 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/287"">#287</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/1fc808626a895a916b1e4c2b63abae6c5eafdbe3""><code>1fc8086</code></a> Bump peter-evans/create-pull-request from 6.0.4 to 6.0.5 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/288"">#288</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2023.07.22...2024.07.04"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2023.7.22&new-version=2024.7.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2483:3180,Depend,Dependabot,3180,https://qutip.org,https://github.com/qutip/qutip/pull/2483,1,['Depend'],['Dependabot']
Integrability,"base class]( https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.spmatrix.html#scipy.sparse.spmatrix)? Then the `Qobj` constructor would probably need an additional parameter `format` for the class that should be used to convert the `inpt` argument to the `data` attribute. The onus would then be on Scipy to provide a full matrix that is a subtype of `scipy.spmatrix` (just to keep the interface contract), and also to have `int64` versions of all their existing sparse classes. From a community standpoint, it would seem like one would get much more bang for the buck to have this problem solved inside SciPy, instead of doing a lot of low-level stuff in QuTiP -- at least if they're amenable to pull requests, but worst case you can still define necessary new `scipy.spmatrix` subclasses externally. Take all of my musings with a little grain of salt... I never really looked too deep into QuTiP's low-level internals, specifically where QuTiP is using Cython. Naively, I would sort of think that Cython would remain at the level of sparse linear algebra operations (and thus mostly in scipy) and that QuTiP could be mainly pure Python. Obviously, once you start implementing higher level things like time propagation or even optimal control in Cython, everything becomes a bit of a mess, because then you really do have to manually implement everything for every possible storage format (again, something I'm familiar with from Fortran, and it's *a lot* of work). Generally, though, I've personally come to the conclusion that the lowest-level thing to really optimize for quantum dynamics simulations (in any language) is the application of a (time-dependent) operator to a Hilbert space state, respectively the commutator with a density matrix (in QuTiP, the operators would be the nested ``[H0, (u(t), H1), ...]`` lists). Everything higher level is probably fine at Python speed, as long as the algorithms are sound and you avoid allocating temporary storage as much as possible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-383937610:2692,depend,dependent,2692,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-383937610,1,['depend'],['dependent']
Integrability,"bbb6c09ddf4""><code>f271c9c</code></a> Apply latest Black formatting</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/1884878aac87ef0494b282e940c32c24ee917d52""><code>1884878</code></a> [1.26] Properly proxy EOF on the SSLTransport test suite</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.4...1.26.5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.4&new-version=1.26.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563:3422,Depend,Dependabot,3422,https://qutip.org,https://github.com/qutip/qutip/pull/1563,1,['Depend'],['Dependabot']
Integrability,bcpp/utility.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includ,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:5891,depend,depends,5891,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,bcpp/vector.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Inc,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:5430,depend,depends,5430,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,"bed79</code></a> Fix deprecation warnings for Python 3.10 ssl module</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d725a9b56bb8baf87c9e6eee0e9edf010034b63b""><code>d725a9b</code></a> Add Python 3.10 to GitHub Actions</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/339ad34c677c98fd9ad008de1d8bbeb9dbf34381""><code>339ad34</code></a> Use pytest==6.2.4 on Python 3.10+</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/f271c9c3149e20d7feffb6429b135bbb6c09ddf4""><code>f271c9c</code></a> Apply latest Black formatting</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/1884878aac87ef0494b282e940c32c24ee917d52""><code>1884878</code></a> [1.26] Properly proxy EOF on the SSLTransport test suite</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.4...1.26.5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.4&new-version=1.26.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` w",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563:2937,depend,dependency-name,2937,https://qutip.org,https://github.com/qutip/qutip/pull/1563,1,['depend'],['dependency-name']
Integrability,"bj` now supply `dims` and `type` information to the constructor so that instantiation time is down from ~50-100µs to about ~5µs. Notable removals:; - `eseries` and `essolve` are completely gone; - OpenMP is temporarily removed (though this will be added back in to the data layer later); - all functions in `correlation` and `qobj` which were marked ""deprecated"" are now actually removed; - `vec2mat` and `mat2vec` have been renamed to `vector_to_operator` and `operator_to_vector`; - all ""legacy"" files have been completely removed; - all previous scipy-CSR-like Cython code is completely gone (replaced by the data layer); - `Qobj` no longer defines `__array__`, and so will not automatically turn itself into one. Having this produced very inconsistent behaviour when multiplying by numpy arrays, or otherwise dealing with numpy functions. If you _need_ `Qobj` to be array, be explicit and call `Qobj.full()`. Notable changes in `Qobj`:; - matrix multiplication now contracts to a scalar if doing `bra @ ket`; - matrix multiplication no longer contracts 1D subspaces, but the new `Qobj.contract()` will do this; - arithmetic operations are much more strict about enforcing `Qobj.type`-safety; - `Qobj` understands the `@` operator to mean matrix multiplication, but also maintains the same behaviour of treating `Qobj * Qobj` as matrix multiplication. Package organisation:; - the solvers are now physically contained in `qutip.solve`, but are still logically available in the `qutip` namespace. This means that direct imports (like `from qutip.mesolve import mesolve`) will fail (it becomes `from qutip.solve.mesolve import mesolve`), but the ""proper"" unqualified access `from qutip import mesolve` remains unchanged. This is for internal code organisation purposes. The integral type used as the indices in the `CSR` type is now done by simple typedef in the files `qutip/core/data/base.{pyx,pxd}`, so changes it in those two files at compile-time will allow you to switch between 32-bit and 64-b",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1332:1329,contract,contracts,1329,https://qutip.org,https://github.com/qutip/qutip/pull/1332,2,['contract'],['contracts']
Integrability,"blas is cool but it is a mess.. different libraries might to the underscores and stuff differently, in c to fortran wrapping etc, but i'm guessing the header files should sort this out if used properly. it would be really nice to get this to work. nice speedup!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/39#issuecomment-22436095:116,wrap,wrapping,116,https://qutip.org,https://github.com/qutip/qutip/issues/39#issuecomment-22436095,1,['wrap'],['wrapping']
Integrability,"blem: If I evolve the system using mesolve for particular time dependence of my driving field, namely if the evolution time is set to be from t = 0 to t = 3.5 in the units of 1/(Rabi frequency) and the driving is only present between t = pi/2 and t = pi, I get expected results if I do not include any collapse operators (using []), however as soon as I use the usual collapse operator corresponding to the excited state decay it gives me for all the time the initial values of the quantities. It happens even if I set the decay rate to zero! Also, mcsolve works fine in both cases.; Here is the code that I use:; ```; import numpy as np; import pylab as plt; import scipy as scipy; from qutip import *. #System parameters; Omega = 1; Gamma = 0.1. g = basis(2,0); e = basis(2,1); sgg = g * g.dag() #ground state population; see = e * e.dag() #excited state population; sge = g * e.dag() #atomic coherence sigma_ge. #Driving Hamiltonian; H1 = Omega * (sge + sge.dag()). #Time dependence of the drive; def H1_coeff(t,args):; if t > np.pi:; c =0; elif t >= np.pi/2:; c = 1; else:; c = 0; return c. #Complete Hamiltonian; H = [[H1, H1_coeff]]. #Time; tspan = np.linspace(0,3.5,500). #initial state; psi0 = g. #collapse operators; c_ops = [np.sqrt(Gamma) * sge]. #calculated expectation values; e_ops = [sgg, see]; results = mesolve(H, psi0, tspan, c_ops, e_ops). #plotting the results; fig, ax = plt.subplots(1,1); ax.plot(tspan, results.expect[0]); ax.plot(tspan, results.expect[1]); plt.show(); ```; And here is the information about the packages that I'm using; ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.1; Scipy Version: 0.19.1; Cython Version: 0.26; Matplotlib Version: 2.0.2; Python Version: 3.6.2; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```; Another funny fact that I noti",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771:1119,depend,dependence,1119,https://qutip.org,https://github.com/qutip/qutip/issues/771,1,['depend'],['dependence']
Integrability,"c095c75943413c75ebf8ac74179757031b7f80b7""><code>c095c75</code></a> Merge branch 'master' into dev</li>; <li><a href=""https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98""><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>; <li><a href=""https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201""><code>5918a0e</code></a> Merge branch 'master' into dev</li>; <li>Additional commits viewable in <a href=""https://github.com/kjd/idna/compare/v3.4...v3.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:4330,depend,dependabot,4330,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['depend'],['dependabot']
Integrability,"c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow potential exceptions from showtraceback()</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.31.1...8.10.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.31.1&new-version=8.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085:2789,Depend,Dependabot,2789,https://qutip.org,https://github.com/qutip/qutip/pull/2085,1,['Depend'],['Dependabot']
Integrability,"cade`: This module implements the method introduced in [Phys. Rev. Lett 115, 060402 (2015)](http://journals.aps.org/prl/abstract/10.1103/PhysRevLett.115.060402) ([arXiv link](http://arxiv.org/abs/1502.06959)) to integrate the dynamics of open quantum systems coupled to a coherent feedback loop with a time-delay. I decided to refer to this method as the ""memory cascade"" method in qutip. The method essentially maps the non-Markovian problem onto a cascaded chain of identical system, where each system in the chain represents a ""memory"" of a previous version of the system. There is a companion pull request to the qutip-notebooks repo with two new notebooks documenting the usage of these two modules, qutip/qutip-notebooks#21:. examples/example-transfer-tensor-method.ipynb; examples/example-coherent-delayed-feedback.ipynb. Together with code docstrings, these two notebooks should give a good idea of how the modules are to be used. As you will see in the notebooks, the TTM implementation has a user interface that closely mimicks the `mesolve` interface. The solver is called `ttmsolve` and has the following syntax (explained in more detail in the docstring and notebook):. ```; ttmsolve(dynmaps, rho0, times, e_ops=[], learningtimes=None, tensors=None, **kwargs); ```. where `dynamps` is a list of pre-computed dynamical maps to learn from, `rho0` is the initial state, `times` are the times at which to find the solution etc. The ""memory cascade"" implementation however, diverges a bit from this standard. In general I think it will be hard to have a kind of unified interface for different types of non-Markovian solvers, because unlike the Markovian case, there is no unified theoretical approach, and different solvers work in quite different ways. For the ""memory cascade"" implementation I chose a more object oriented style for the interface. The user first creates a `MemoryCascade` object, storing all the relevant parameters, and subsequently calls class methods to runs simulation",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/405:1769,interface,interface,1769,https://qutip.org,https://github.com/qutip/qutip/pull/405,2,['interface'],['interface']
Integrability,"cally a matrix.; 2. we don't honour the `shape` guarantees of numpy as we test compatibility based on `dims`, which are not 1D (superoperators) so cannot follow numpy's broadcasting rules; 3. we treat multiplication as matrix multiplication, violating how `np.multiply` should behave. My main concern is point 1: I don't think that `Qobj` provides a similar object to an `ndarray` at all. Right now we _do_ use matrices underneath, but proposed additions to QuTiP such as symbolic `Qobj` and adaptive Hilbert spaces are compatible with the idea of ""abstract linear algebra objects"", but do not necessarily have a backing array. Point 2 is mostly an extension of that: I'm not sure there is a sensible way for numpy's broadcasting rules to be applied to quantum objects as they exist now, even without extensions. ## More control over dispatch: `__array_ufunc__` and `__array_function__`. See [NEP 13](https://numpy.org/neps/nep-0013-ufunc-overrides.html), [NEP 18](https://numpy.org/neps/nep-0018-array-function-protocol.html) and [NEP 35](https://numpy.org/neps/nep-0035-array-creation-dispatch-with-array-function.html). Later versions of numpy allowed greater control over how ufuncs get implemented, which was most recently extended in 1.16 to cover non-ufuncs like `tensordot`. These functions are intended for classes to define how ufuncs operate on their data, but implementors should still follow the `ufunc` spec for broadcasting rules, and a given ufunc should have the same conceptual behaviour (mostly elementwise operations or reductions). Several libraries implement only these, but _not_ `__array__`, but given my points 1 and 2 above, I don't think QuTiP should go this route. You can, however, set these properties to `None` to unconditionally tell Numpy that the object is incompatible with ufuncs. I think this might be a good way for us to go. ## What other libraries do. Provide everything:; - Dask: mostly trying to provide a numpy-like distributed array class. Its arrays mostl",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902:5358,protocol,protocol,5358,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902,1,['protocol'],['protocol']
Integrability,"cd8db551101cbc773""><code>f2629e9</code></a> Remove strict parameter (<a href=""https://redirect.github.com/psf/requests/issues/6434"">#6434</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/87d63de8739263bbe17034fba2285c79780da7e8""><code>87d63de</code></a> v2.29.0</li>; <li><a href=""https://github.com/psf/requests/commit/51716c4ef390136b0d4b800ec7665dd5503e64fc""><code>51716c4</code></a> enable the warnings plugin (<a href=""https://redirect.github.com/psf/requests/issues/6416"">#6416</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/a7da1ab3498b10ec3a3582244c94b2845f8a8e71""><code>a7da1ab</code></a> try on ubuntu 22.04 (<a href=""https://redirect.github.com/psf/requests/issues/6418"">#6418</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/psf/requests/compare/v2.28.2...v2.31.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.28.2&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` w",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:7413,depend,dependency-name,7413,https://qutip.org,https://github.com/qutip/qutip/pull/2164,1,['depend'],['dependency-name']
Integrability,"ce522732031d61391567c017d48d87b7""><code>ef0abba</code></a> Add PostgreSQL Explain lexer (<a href=""https://redirect.github.com/pygments/pygments/issues/2398"">#2398</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/3c6e2af8fbc44bb1ef77389d09118c37faea8746""><code>3c6e2af</code></a> Update CHANGES</li>; <li>Additional commits viewable in <a href=""https://github.com/pygments/pygments/compare/2.14.0...2.15.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:14340,depend,dependabot-automerge-start,14340,https://qutip.org,https://github.com/qutip/qutip/pull/2201,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"certifi/commit/9d514b4cad79357071c89d7dc4dc1b4df72bb997""><code>9d514b4</code></a> 2022.06.15</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4151e8849481f396537c34812068e89b32731e52""><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/196"">#196</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2020.12.05...2022.12.07"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2020.12.5&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035:2677,depend,dependabot,2677,https://qutip.org,https://github.com/qutip/qutip/pull/2035,1,['depend'],['dependabot']
Integrability,"ch will be able to handle arbitrary tensor-network operations, will end up being made up of two components:; 1. a `Dispatcher` version of something akin to `einsum`, with a couple of limitations; 2. a high-level wrapper function to handle the specific case of local multiplication, which examines the dimensions and target specifiers to produce the input to the `einsum`-like function, then calls the `Dispatcher` with this information. I think this form would likely be preferable for several reasons:; 1. it will allow arbitrary mixing of different data types (`CSR` complete space and `Dense` operator, or both `CSR`, or whatever), with the allowed conversions respecting the global dispatcher rules, not having this function use a different, special configuration; 2. it will mean that the function can also be implemented by plug-in data types (TF/CuPy/etc), installed separately to QuTiP; 3. it will be more general, and easier to maintain; the current `subsystem_apply`, `partial_transpose`, `ptrace`, `tensor_contract` and this can all become special cases of this backing `einsum`-like routine.; 4. after we've implemented new dimensions objects, we'll be able to use a more standardised description of how to refer to individual subspaces of a Hilbert space, which will provide a more consistent UX across the library. This is particularly important if we want this to work well with superoperators. Really, thank you very much for making the PR - I really am excited to see people with an interest in the new data layer! I'm sorry that I took quite so long to respond properly to it, and that when I have, I've ended up being somewhat against the implementaton as it is. I would be really interested in pursuing this, likely after the initial release of 5.0, but right now I think we might need to get our ducks in a row about licensing primarily, and then about how we're going to handle tensor networks in general. In order to prevent headaches down the line (and again, very very sorry)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566:3717,rout,routine,3717,https://qutip.org,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566,1,['rout'],['routine']
Integrability,"cking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a>; [radarhere]</p>; </li>; <li>; <p>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a>; [radarhere]</p>; </li>; <li>; <p>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a>; [t-vi, radarhere]</p>; </li>; </ul>; <h2>8.3.0 (2021-07-01)</h2>; <ul>; <li>; <p>Use snprintf instead of sprintf. CVE-2021-34552 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a>; [radarhere]</p>; </li>; <li>; <p>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a>; [kmilos]</p>; </li>; <li>; <p>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a>; [baletu, radarhere, newpanjing, hugovk]</p>; </li>; <li>; <p>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a>; [gofr, radarhere]</p>; </li>; <li>; <p>Replaced xml.etree.ElementTree <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5565"">#5565</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8013f130a5077b238a4346b73e149432b180a8ea""><code>8013f13</code></a> 8.3.2 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/23c7ca82f09df6ba1047d2d96714eb825f0d7948""><code>23c7ca8</code></a> Update CHANGES.rst</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8450366be331762ae327036e3c6658c517b05638""><co",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:6453,depend,dependabot,6453,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"ckquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/master/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>8.3.2 (2021-09-02)</h2>; <ul>; <li>; <p>CVE-2021-23437 Raise ValueError if color specifier is too long; [hugovk, radarhere]</p>; </li>; <li>; <p>Fix 6-byte OOB read in FliDecode; [wiredfool]</p>; </li>; <li>; <p>Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</p>; </li>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1 (2021-07-06)</h2>; <ul>; <li>; <p>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a>; [radarhere]</p>; </li>; <li>; <p>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a>; [radarhere]</p>; </li>; <li>; <p>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a>; [t-vi, radarhere]</p>; </li>; </ul>; <h2>8.3.0 (2021-07-01)</h2>; <ul>; <li>; <p>Use snprintf instead of sprintf. CVE-2021-34552 <a href=""https://github-redirec",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:5108,depend,dependabot,5108,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"code>3c01480</code></a> [1.26] Run coverage even with failed jobs</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d94029b7e2193ff47b627906a70e06377a09aae8""><code>d94029b</code></a> Release 1.26.16</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/18e92145e9cddbabdf51c98f54202aa37fd5d4c8""><code>18e9214</code></a> Use trusted publishing for PyPI</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d25cf83bbae850a290fe34ed1610ae55c0558b36""><code>d25cf83</code></a> [1.26] Fix invalid test_ssl_failure_midway_through_conn</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/25cca389496b86ee809c21e5b641aeaa74809263""><code>25cca38</code></a> [1.26] Fix test_ssl_object_attributes</li>; <li>Additional commits viewable in <a href=""https://github.com/urllib3/urllib3/compare/1.26.14...1.26.17"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.14&new-version=1.26.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:5070,depend,dependency-name,5070,https://qutip.org,https://github.com/qutip/qutip/pull/2236,1,['depend'],['dependency-name']
Integrability,"code>60047ad</code></a> Bump github/codeql-action from 3.24.0 to 3.25.0</li>; <li><a href=""https://github.com/psf/requests/commit/31ebb8102c00f8cf8b396a6356743cca4362e07b""><code>31ebb81</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6682"">#6682</a> from frenzymadness/pytest8</li>; <li>Additional commits viewable in <a href=""https://github.com/psf/requests/compare/v2.31.0...v2.32.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.31.0&new-version=2.32.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:10414,depend,dependabot-automerge-start,10414,https://qutip.org,https://github.com/qutip/qutip/pull/2434,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:5152,depend,dependabot,5152,https://qutip.org,https://github.com/qutip/qutip/pull/2392,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"com/pallets/jinja/issues/1968"">#1968</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/0ee5eb41d1a2d7d9a05a02dc26dd70e63aaaeeb1""><code>0ee5eb4</code></a> satisfy formatter, linter, and strict mypy</li>; <li><a href=""https://github.com/pallets/jinja/commit/20477c63575175196bfc8103f223cc9f5642595d""><code>20477c6</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/5457"">#5457</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/e491223739dedbb1f4fc6a71340c1484e149d947""><code>e491223</code></a> update pyyaml dev dependency</li>; <li><a href=""https://github.com/pallets/jinja/commit/36f98854c721f98ba103f97f65a8a098da5af0d7""><code>36f9885</code></a> fix pr link</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.3...3.1.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:3702,depend,dependency-name,3702,https://qutip.org,https://github.com/qutip/qutip/pull/2418,1,['depend'],['dependency-name']
Integrability,"com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix pushes_fd method signature <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5833"">#5833</a> [<a href=""https://github.com/hoodmane""><code>@​hoodmane</code></a>]</li>; <li>Add support for pickling TrueType fonts <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5826"">#5826</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Only prefer command line tools SDK on macOS over default MacOSX SDK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5828"">#5828</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix compilation on 64-bit Termux <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5793"">#5793</a> [<a href=""https://github.com/landfillbaby""><code>@​landfillbaby</code></a>]</li>; <li>Replace 'setup.py sdist' with '-m build --sdist' <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5785"">#5785</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use declarative package configuration <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5784"">#5784</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use title for display in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5788"">#5788</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix for PyQt6 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5775"">#5775</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.0.0 (2022-01-0",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:9367,depend,dependabot,9367,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a> [<a href=""https://github.com/t-vi""><code>@​t-vi</code></a>]</li>; </ul>; <h2>8.3.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Use snprintf instead of sprintf <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a> [<a href=""https://github.com/newpanjing""><code>@​newpanjing</code></a>]</li>; <li>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a> [<a href=""https://github.com/gofr""><code>@​gofr</code></a>]</li>; <li>Do not use background or transparency index for new color <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5564"">#5564</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Simplified code <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5315"">#5315</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Replaced xml",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:2881,depend,dependabot,2881,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd""><code>baae9ec</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><code>1059eb5</code></a> If appended EOI did not work, do not keep trying</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.3.2&new-version=9.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:16318,depend,dependabot,16318,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.14&new-version=1.26.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:6260,depend,dependabot,6260,https://qutip.org,https://github.com/qutip/qutip/pull/2236,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.17&new-version=1.26.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2246:2913,depend,dependabot,2913,https://qutip.org,https://github.com/qutip/qutip/pull/2246,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.18&new-version=1.26.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:5049,depend,dependabot,5049,https://qutip.org,https://github.com/qutip/qutip/pull/2458,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,core/data/tidyup.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:6682,depend,depends,6682,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,"crap . ---. Paul D. Nation; Assistant Professor; Korea University; Department of Physics; Anam-dong 5, Seongbuk-gu; Seoul 136-713, South Korea; Email: pnation@korea.ac.kr (mailto:pnation@korea.ac.kr); Phone: +82-02-3290-3092. ## Web: nqdl.korea.ac.kr (http://nqdl.korea.ac.kr/). On Saturday, August 10, 2013 at 5:03 PM, Robert Johansson wrote:. > qutip import now fail with the following error message; > /usr/local/lib/python3.3/dist-packages/qutip/cyQ/**init**.py in <module>() 1 from qutip.cyQ.spmatfuncs import \* ----> 2 from qutip.cyQ.blas_funcs import \* ImportError: /usr/local/lib/python3.3/dist-packages/qutip/cyQ/blas_funcs.cpython-33m.so: undefined symbol: dznrm2_ ; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/39).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/39#issuecomment-22436060:394,message,message,394,https://qutip.org,https://github.com/qutip/qutip/issues/39#issuecomment-22436060,1,['message'],['message']
Integrability,"ction calls between Python and C space, which largely affected small objects. The full aim, however, is to have QuTiP 5 support many different data representations as the backing of `Qobj`, and use the most suitable representation for the given data. This will not require every single QuTiP function to have an exponential number of versions for every possible combination of inputs, but only to have specialisations for the most common data combinations. This concept is the ""data layer"". All code examples in this PR are prefixed with. ```python; >>> from qutip.core import data; ```. ## Specification. The core to achieving this is fast, fully specified inter-conversion between all known data types, and efficient multiple-dispatch for mathematical operations. There are then four principle components of the data-layer:. 1. a creation routine which returns an appropriate data-layer type given some arbitrary Python object (`data.create`); 2. a routine which can perform the conversion from any data-layer type to any other data-layer type (`data.to`); 3. completely specialised mathematical operations (e.g. `data.add_csr_dense_dense(CSR, Dense) -> Dense`); 4. an object which provides multiple dispatch operations on its input arguments to use an exact specialisation (defined in item 3) if known, or uses the conversion routine (item 2) to convert the inputs into ones matching a specialisation if not: `data.Dispatcher`. The exported mathematical functions will all be instances of this type. The minimum work needed to define a new data-layer type is to provide `data.to` with two conversion functions; one into the new type from a current data-layer type, and one which converts the new type _into_ a current data-layer type. Once this is done, every single QuTiP component will be able to use the new data-layer type, although until specialisations are given which use it, it will always be achieved by conversion to another type, and conversion back. In this way, a new type can be added",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338:1418,rout,routine,1418,https://qutip.org,https://github.com/qutip/qutip/pull/1338,1,['rout'],['routine']
Integrability,cvxpy Variable and Parameter dims passed as tuple; cvxpy and its depends only installed in tests for NOMKL builds; Extra test added for NOMKL with OPENMP,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/873:65,depend,depends,65,https://qutip.org,https://github.com/qutip/qutip/pull/873,1,['depend'],['depends']
Integrability,"cy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (tau) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (Q",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:2743,depend,dependent,2743,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,1,['depend'],['dependent']
Integrability,"cy/sparse_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/graph_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/interpolate.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/spmath.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/heom.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/math.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/cy/spconvert.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/ptrace.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/testing.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/control/cy_grape.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; [ 1/12] Cythonizing qutip/control/cy_grape.pyx; [ 2/12] Cythonizing qutip/cy/graph_utils.pyx; [ 3/12] Cythonizing qutip/cy/heom.pyx; [ 4/12] Cythonizing qutip/cy/interpolate.pyx; [ 5/12] Cythonizing qutip/cy/math.pyx; [ 6/12] Cythonizing qutip/cy/ptrace.pyx; [ 7/12] Cythonizing qutip/cy/sparse_utils.pyx; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/state/partition1/local-scratch/kilian/16342884/pip-build-7c5rN_/qutip/setup.py"", line 216, in <module>; ext_modules = cythonize(EXT_MODULES),; File ""/home/kilian/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1016, in cythonize; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:2670,depend,depends,2670,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['depend'],['depends']
Integrability,"d numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl (20.5 MB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.6 MB); Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-69.5.1 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; C",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:5231,depend,depends,5231,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"d version of the documentation at https://jakelishman.github.io/qutip-devguide. Some design documents:; - [data layer](https://github.com/jakelishman/qutip-doc/blob/design-data-layer/design/01-data-time-layer-separation.md); - [data structure implementation choices](https://github.com/jakelishman/qutip-doc/blob/design-data-layer/design/02-data-structures.md); - [original GSoC proposal (PDF)](https://www.binhbar.com/posts/2020/05/welcome-to-google-summer-of-code-2020/proposal.pdf). New design elements under consideration:; - [improved `'type'` and `'dims'` handling for tensor-product spaces](https://github.com/qutip/qutip/issues/1320). Major breaking changes to QuTiP:; - `Qobj.data` is no longer an instance of `scipy.sparse.spmatrix`, but the new abstract ""data-layer type"" `core.data.Data`; - `bra * ket` now returns a scalar, not a `Qobj` (no need to do `(bra * ket).data[0, 0]` or `(bra * ket).tr()`) any more; - 1D subspaces in `Qobj.dims` are now never contracted silently (they were, but inconsistently before), but the new function `Qobj.contract()` can be called to do this explicitly; - `Qobj` no longer defines `__array__`, and so cannot be treated as if it is a numpy array. Having this led to inconsistent behaviour when `Qobj` was used in arithmetic with numpy arrays from the left and right, and allowed simple code to become `Qobj.dims`-unsafe _implicitly_. To get the full array view now, you must be explicit and call `Qobj.full()` - it is not enough to do `np.array(qobj)`, and this behaviour is consistent with `scipy.sparse` matrices.; - `eseries` and `essolve` are removed; - OpenMP is temporarily removed (but should be added back in before the release); - most functions marked deprecated as of version 4.5.2 are removed (e.g. in `qutip.correlation`); - `vec2mat` and `mat2vec` are renamed away from the terse MATLAB-compatible syntax to the more QuTiP-consistent `vector_to_operator` and `operator_to_vector`. Non-breaking changes:; - the internal file layout of the c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1278:2175,contract,contracted,2175,https://qutip.org,https://github.com/qutip/qutip/issues/1278,1,['contract'],['contracted']
Integrability,d.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Inc,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:6001,depend,depends,6001,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"d64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:14577,message,message,14577,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['message'],['message']
Integrability,"d64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:20495,message,message,20495,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['message'],['message']
Integrability,"d</code></a> FLI tests for Oss-fuzz crash.</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/94a0cf1b14f09626c7403af83fa9fef0dfc9bb47""><code>94a0cf1</code></a> Fix 6-byte OOB read in FliDecode</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cece64f4be10ab28b12a83a3555af579dad343a5""><code>cece64f</code></a> Add 8.3.2 (2021-09-02) [CI skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e42238637651f191c2fc6e3f4024348c126e0ccc""><code>e422386</code></a> Add release notes for Pillow 8.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/08dcbb873217874eee0830fc5aaa1f231c5af4fa""><code>08dcbb8</code></a> Pillow 8.3.2 supports Python 3.10 [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.2.0...8.3.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.2.0&new-version=8.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:8938,depend,dependency-name,8938,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependency-name']
Integrability,"dabot.com/numpy/numpy/issues/19269"">#19269</a> from charris/backport-19228</li>; <li><a href=""https://github.com/numpy/numpy/commit/d80e4738f781a1d206bbc04a2e863299e5f2e104""><code>d80e473</code></a> BUG: Removed typing for == and != in dtypes</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.19.5&new-version=1.21.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:5027,Depend,Dependabot,5027,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['Depend'],['Dependabot']
Integrability,"dd239a4647032f67a80d9b444228af2b736""><code>75b69dd</code></a> Dont need to pin for GHA</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cd938a7744cb46e2ea525a0c3dd79aa08f98c150""><code>cd938a7</code></a> Autolink CWE numbers with sphinx-issues</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2e9c461ca417083c43145a991bf9e1ec93237d89""><code>2e9c461</code></a> Add CVE IDs</li>; <li>See full diff in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.0&new-version=9.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:3920,depend,dependabot,3920,https://qutip.org,https://github.com/qutip/qutip/pull/1835,1,['depend'],['dependabot']
Integrability,"ddc820""><code>4f26796</code></a> fix xxlimited_35 import name</li>; <li><a href=""https://github.com/ipython/ipython/commit/77ca4a6312374f0659fb6973925e5b696d5dc74e""><code>77ca4a6</code></a> don't run nose-based iptest on py310, only pytest</li>; <li><a href=""https://github.com/ipython/ipython/commit/533e5094aa36b51549cf6a316fc439c6404643c9""><code>533e509</code></a> back to decorator skip</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.22.0...7.31.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.22.0&new-version=7.31.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780:2623,depend,dependabot,2623,https://qutip.org,https://github.com/qutip/qutip/pull/1780,1,['depend'],['dependabot']
Integrability,"de5d0aa1d472145fc1dbdfece3fe652bbac5""><code>2087de5</code></a> Don't let deprecation warning fail CI (<a href=""https://redirect.github.com/certifi/python-certifi/issues/219"">#219</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/e0b9fc5c8f52ac8c300da502e5760ce3d41429ec""><code>e0b9fc5</code></a> remove paragraphs about 1024-bit roots from README</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2022.12.07...2023.07.22"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2022.12.7&new-version=2023.7.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2205:3053,depend,dependabot,3053,https://qutip.org,https://github.com/qutip/qutip/pull/2205,1,['depend'],['dependabot']
Integrability,"de>0ee5eb4</code></a> satisfy formatter, linter, and strict mypy</li>; <li><a href=""https://github.com/pallets/jinja/commit/20477c63575175196bfc8103f223cc9f5642595d""><code>20477c6</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/5457"">#5457</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/e491223739dedbb1f4fc6a71340c1484e149d947""><code>e491223</code></a> update pyyaml dev dependency</li>; <li><a href=""https://github.com/pallets/jinja/commit/36f98854c721f98ba103f97f65a8a098da5af0d7""><code>36f9885</code></a> fix pr link</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.3...3.1.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:3862,depend,dependabot-security-updates,3862,https://qutip.org,https://github.com/qutip/qutip/pull/2418,1,['depend'],['dependabot-security-updates']
Integrability,"de>61127bb</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19268"">#19268</a> from charris/backport-19264</li>; <li><a href=""https://github.com/numpy/numpy/commit/143d45fff3ed9e051bdeef7bdb4df38025ea7d1c""><code>143d45f</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19269"">#19269</a> from charris/backport-19228</li>; <li><a href=""https://github.com/numpy/numpy/commit/d80e4738f781a1d206bbc04a2e863299e5f2e104""><code>d80e473</code></a> BUG: Removed typing for == and != in dtypes</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.19.5&new-version=1.21.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:4705,depend,dependabot-security-updates,4705,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['depend'],['dependabot-security-updates']
Integrability,"de></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/5457"">#5457</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/e491223739dedbb1f4fc6a71340c1484e149d947""><code>e491223</code></a> update pyyaml dev dependency</li>; <li><a href=""https://github.com/pallets/jinja/commit/36f98854c721f98ba103f97f65a8a098da5af0d7""><code>36f9885</code></a> fix pr link</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.3...3.1.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:4065,depend,dependabot,4065,https://qutip.org,https://github.com/qutip/qutip/pull/2418,1,['depend'],['dependabot']
Integrability,"de></a>]</li>; <li>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Image.NONE is only used for resampling and dithers <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5908"">#5908</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Add Tidelift alignment action and badge <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5763"">#5763</a> [<a href=""https://github.com/aclark4life""><code>@​aclark4life</code></a>]</li>; <li>Replaced further direct invocations of setup.py <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5906"">#5906</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a> [<a href=""https://github.com/m-shinder""><code>@​m-shinder</code></a>]</li>; <li>Fixed typo <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5902"">#5902</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Switched from deprecated &quot;setup.py install&quot; to &quot;pip install .&quot; <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5896"">#5896</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a> [<a href=""https://github.com/cmbruns""><code>@​cmbruns</code></a>]</li>; <li>Fixed ra",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:5167,depend,dependabot,5167,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"de>@​radarhere</code></a>]</li>; <li>Block tile TIFF tags when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5839"">#5839</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added line width argument to ImageDraw polygon <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5694"">#5694</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not redeclare class each time when converting to NumPy <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5844"">#5844</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only prevent repeated polygon pixels when drawing with transparency <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5835"">#5835</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix pushes_fd method signature <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5833"">#5833</a> [<a href=""https://github.com/hoodmane""><code>@​hoodmane</code></a>]</li>; <li>Add support for pickling TrueType fonts <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5826"">#5826</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Only prefer command line tools SDK on macOS over default MacOSX SDK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5828"">#5828</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix compilation on 64-bit Termux <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5793"">#5793</a> [<a href=""https://github.com/landfillbaby""><code>@​landfillbaby</code></a>]</li>; <li>Replace 'setup.py sdist' with '-m build --sdist' <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5785"">#5785</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:8491,depend,dependabot,8491,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"de>@​radarhere</code></a>]</li>; <li>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Ensure that BMP pixel data offset does not ignore palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5899"">#5899</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use latin1 encoding to decode bytes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5870"">#5870</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed palette index for zeroed color in FASTOCTREE quantize <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5869"">#5869</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Pass SAMPLEFORMAT to libtiff <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5848"">#5848</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added rounding when converting P and PA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5824"">#5824</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]<",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:3175,depend,dependabot,3175,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"dea1abbf2c""><code>05b175e</code></a> Tighter test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/13f2c5ae14901c89c38f898496102afd9daeaf6d""><code>13f2c5a</code></a> Prevent DOS with large SAMPLESPERPIXEL in Tiff IFD</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.1...9.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.1&new-version=9.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:15745,Depend,Dependabot,15745,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['Depend'],['Dependabot']
Integrability,dense.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Comp,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:7417,depend,depends,7417,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"dges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:4605,depend,dependabot,4605,https://qutip.org,https://github.com/qutip/qutip/pull/2291,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"dges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:4887,depend,dependabot,4887,https://qutip.org,https://github.com/qutip/qutip/pull/2418,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"direct.dependabot.com/python-pillow/Pillow/issues/6548"">#6548</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow remap_palette() to return an image with less than 256 palette entries <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6543"">#6543</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected BMP and TGA palette size when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6500"">#6500</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.3.0 (2022-10-29)</h2>; <ul>; <li>; <p>Limit SAMPLESPERPIXEL to avoid runtime DOS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a>; [wiredfool]</p>; </li>; <li>; <p>Initialize libtiff buffer when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a>; [radarhere]</p>; </li>; <li>; <p>Inline fname2char to fix memory leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a>; [nulano]</p>; </li>; <li>; <p>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a>; [nulano]</p>; </li>; <li>; <p>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a>; [hugovk]</p>; </li>; <li>; <p>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a>; [cgohlke]</p>; </li>; <li>; <p>Fixed set_variation_by_name offset <a href=""https://git",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:10384,depend,dependabot,10384,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"dnorm tests have historically been very flaky, and for as long as we're using random tests (which we possibly shouldn't be), we always run the risk of temperamental failures. In particular, the semidefinite solvers used in dnorm fail every now and again on random states; we historically haven't treated this as a bug, since it's pretty similar to an integration failing to converge because the system was too stiff. It means that the user has to adjust some settings and try again. To prevent this sort of error from failing our test suite, however, we can mark the tests as being allowed to rerun twice on a failure. We had a relatively small sample to judge the test failure rate by, but my very very approximate guess is that we'd have a failure about 1 in 10 runs on Travis. We counter this with two strategies:. 1. parametrise the tests in pytest style, so each random repetition is a separate instance, and known to pytest (some of this was done in earlier commits); 2. allow 2 reruns of every dnorm test. The two of these together should remove all random failures; since all random loops have been moved into pytest-handled repeats, there are far fewer calls to dnorm handled within each test. This means less chance that an individual test run will fail, but a slightly higher chance the entire suite will. Now with the test re-running a single failure point is tried again up to twice more, to determine if it was just a one-off, or if the test is truly broken. The reruns are handled by a pytest plugin pytest-rerunfailures. It's quite nontrivial behaviour to hook this in to the pytest mechanism, so better to use an external dependency to do it than to vendor in a custom version. The dnorm problems have resurfaced a little after lying dormant for a long time, because #1463 reactivated them. Before that, they'd not actually been running because none of the test runners had cvxpy installed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1490:351,integrat,integration,351,https://qutip.org,https://github.com/qutip/qutip/pull/1490,2,"['depend', 'integrat']","['dependency', 'integration']"
Integrability,"doing this means we have to guarantee that at _no point_ is the `ctrl_array` object copied. If you wanted to branch off execution part-way through the iterator, you'd have to copy the whole state, and then you'd lose your reference to the control array unless you kept manually walking the structure of the time-dependent object (internally it gets converted into a `QobjEvo` Liouvillian) to retrieve it. The other problem is that `state0` and the `Qobj` parts of the Hamiltonian aren't mutable; the preprocessing of `mesolve` means that none of those objects will exist inside the integrator loop. That's fine for this use-case, but it's not very general. These problems of mutability would apply to callback functions as well. A different way of using `yield` or callback function would be to really lean into a co-routine sort of pattern. So `mesolve` internally would look like; ```python; def mesolve(H, state, times, c_ops, e_ops, options):; # [... set up problem ...]; integrator = scipy.integrate.ode(...); for time in times[1:]:; state = integrator.step_to(time); instructions = yield _mesolve_output_state(state, time, e_ops); integrator = _mesolve_process_instructions(instructions, integrator); ```; and a call to `mesolve` would be like; ```python; solver = mesolve(H, rho0, times, c_ops); try:; result = next(solver); while True:; next_control = krotov.get_next_control(result.time, result.state); result = solver.send([; ('update-arguments', {'control': next_control}),; ('update-hamiltonian', ...),; ('add-c_op', ...),; # possible examples of API commands; ]); except StopIteration:; pass; ```; That's not super user friendly, but it _is_ nicely re-entrant. You'd have a single object you can copy and branch off, and QuTiP would be able to update the relevant objects for you at any given time. Still, I don't think it's a good strategy in general - we'd have to _very_ rigorously define the ""instructions"" API, and it would be pretty awkward to use. It would also be a nuisance for ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481:1849,integrat,integrate,1849,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481,1,['integrat'],['integrate']
Integrability,"dthedocs.io/en/stable/releasenotes/9.0.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/9.0.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>In show_file, use os.remove to remove temporary images. CVE-2022-24303 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6010"">#6010</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>, <a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Restrict builtins within lambdas for ImageMath.eval. CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6009"">#6009</a> [radarhere]</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.0.1 (2022-02-03)</h2>; <ul>; <li>; <p>In show_file, use os.remove to remove temporary images. CVE-2022-24303 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6010"">#6010</a>; [radarhere, hugovk]</p>; </li>; <li>; <p>Restrict builtins within lambdas for ImageMath.eval. CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6009"">#6009</a>; [radarhere]</p>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6deac9e3a23caffbfdd75c00d3f0a1cd36cdbd5d""><code>6deac9e</code></a> 9.0.1 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c04d812b902356b8c20ee2ab881e1d96f7d66b4b""><code>c04d812</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/4fabec36197735438c80c174d018498be606c46c""><code>4fabec3</code></a> Added release notes for 9.0.1</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/02affaa491df37117a7562e6ba6ac52c4c871195""><code>02affaa</code></a> Added delay after opening image with ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:1290,depend,dependabot,1290,https://qutip.org,https://github.com/qutip/qutip/pull/1835,1,['depend'],['dependabot']
Integrability,"e CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd""><code>baae9ec</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><code>1059eb5</code></a> If appended EOI did not work, do not keep trying</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.3.2&new-version=9.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:16172,Depend,Dependabot,16172,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['Depend'],['Dependabot']
Integrability,"e and mc for driven oscillator in ground state ... ERROR; correlation: legacy me and es for oscillator in steady-state ... ok; correlation: comparing me and es for oscillator in steady-state ... ok; correlation: legacy spectrum from es and pi methods ... ok; correlation: comparing spectrum from es and fft methods ... ok; correlation: comparing spectrum from es and pi methods ... ok; correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:2906,message,message,2906,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['message'],['message']
Integrability,"e any and all insight into this problem, thank you. ```python; import scipy as sp; import numpy; from qutip import *; import matplotlib.pyplot as plt. # pre define transport functions (time dependent functions for use in hamiltonian); def q_c(t,t_f,d): #position of ion; return d*(10*(t/t_f)**3 - 15*(t/t_f)**4 + 6*(t/t_f)**5). def grad_q_c(t,t_f,step,d): #velocity; return np.gradient(q_c(t,t_f,d),step). def grad2_q_c(t,t_f,step,d): #acceleration; return np.gradient(grad_q_c(t,t_f,step,d),step). def q_0(t,args): #position of trap (harmonic well); '''; t: time step; t_f: final time (total time); step: step size for gradient function; d: total distance of transport'''; t_f,step,d = args['t_f'],args['step'],args['d']; return grad2_q_c(t,t_f,step,d)/(w_z**2) + q_c(t,t_f,d). def q_02(t,args): #position of trap; t_f,step,d = args['t_f'],args['step'],args['d']; return (grad2_q_c(t,t_f,step,d)/(w_z**2) + q_c(t,t_f,d))**2. # set up initial conditions and parameters for ion; N = 200 # hilbert space dimension ; w = 2 * pi * 200e3 # angulr frequency of oscillator (Hz); m = 171 * 1.66e-27 # mass of ion (kg); hbar = 1 # reduced plancks constant (eVs) . # set up operators; a = destroy(N); n = a.dag()*a; x = np.sqrt(hbar/(2*m*w))*(a + a.dag()) #position operator (m); p = 1j*np.sqrt((hbar*m*w)/2) * (a - a.dag()) #momentum operator (kg(m/s)). # duration of ion transport; T = 1; t_f = (2*pi*T)/w; t_list = linspace(0,t_f,1001). # total distance travelled; dist = 220e-6 # distance in (m). # pre-define arguments; args = {'d' : dist, 't_f' : t_f, 'step' : t_list[1]-t_list[0]}. # hamiltonian ; H_0 = (p**2)/(2*m) + (m/2)*(w**2)*(x**2). H = [H_0,; [-m*(w**2)*x,q_0], ; [(m/2)*(w**2)*qeye(N),q_02]]. # initial state; psi0 = basis(N,0). # solve; result = mesolve(H, # hamiltonian; psi0, # initial state; t_list, # time; [], # expectation operators; args=args, # arguments to time dependent function; options=Options(nsteps=1e9), # number of steps solver can take; progress_bar=True) # progress bar; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1834:2724,depend,dependent,2724,https://qutip.org,https://github.com/qutip/qutip/issues/1834,1,['depend'],['dependent']
Integrability,"e gradient I find using Numpy's gradient function. I also specify the step size that the gradient function should use. However, when passing the function and its gradient to Qutips mesolve function, i get the error:. ValueError: Shape of array too small to calculate a numerical gradient, at least (edge_order + 1) elements are required. I think this is because usually you would pass the whole array of time which Numpy would calculate the gradient of, but in the case of mesolve in qutip, we are passing a float instead of an array, i.e. calculating 1 time point which numpy cannot use.; I need the gradient function and its step size, rather than using the analytical gradient as a simply function due to the simulations I am trying to make. I would appreciate any and all insight into this problem, thank you. ```python; import scipy as sp; import numpy; from qutip import *; import matplotlib.pyplot as plt. # pre define transport functions (time dependent functions for use in hamiltonian); def q_c(t,t_f,d): #position of ion; return d*(10*(t/t_f)**3 - 15*(t/t_f)**4 + 6*(t/t_f)**5). def grad_q_c(t,t_f,step,d): #velocity; return np.gradient(q_c(t,t_f,d),step). def grad2_q_c(t,t_f,step,d): #acceleration; return np.gradient(grad_q_c(t,t_f,step,d),step). def q_0(t,args): #position of trap (harmonic well); '''; t: time step; t_f: final time (total time); step: step size for gradient function; d: total distance of transport'''; t_f,step,d = args['t_f'],args['step'],args['d']; return grad2_q_c(t,t_f,step,d)/(w_z**2) + q_c(t,t_f,d). def q_02(t,args): #position of trap; t_f,step,d = args['t_f'],args['step'],args['d']; return (grad2_q_c(t,t_f,step,d)/(w_z**2) + q_c(t,t_f,d))**2. # set up initial conditions and parameters for ion; N = 200 # hilbert space dimension ; w = 2 * pi * 200e3 # angulr frequency of oscillator (Hz); m = 171 * 1.66e-27 # mass of ion (kg); hbar = 1 # reduced plancks constant (eVs) . # set up operators; a = destroy(N); n = a.dag()*a; x = np.sqrt(hbar/(2*m*w))*(a + a.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1834:1036,depend,dependent,1036,https://qutip.org,https://github.com/qutip/qutip/issues/1834,1,['depend'],['dependent']
Integrability,"e object satisfy the numpy `__array__` interface and can be converted by calling `np.array(netket_operator)` or `np.asarray(netket_operator)`. We can also obtain sparse representations (but there is no nice api to do that, so we simply provide a method `netket_operator.to_sparse()`. Variational states can also be converted to vectors or matrices (kets and density operators) as they also support the `__array__` interface. I would like our users to be able to call `Qobj(netket_operator)` or `Qobj(netket_state)` and obtain the corresponding qutip object. We could, in principle support a `netket_operator.to_qobj()` conversion method, but I am strongly opposed to that as this is an ugly design pattern: a way to construct a `Qobj` already exists, it's `Qobj(...)`, and the simplest-to-use api is, in my opinion, to overload this constructor to perform the conversion.; This is a standard design pattern in Julia, which I believe has the best ecosystem inter-compatibility thanks to a standardisation of this pattern through (multiple)dispatch. Numpy too, does the same, through the `__array__` interface: any object that defines a `__array__(self, dtype=None)->np.ndarray` method will be supported by `np.asarray` and `np.array`. Proposal: I would like QuTiP to support a `__qobj__` interface, meaning that your `Qobj` constructor should check if an object has this method, and if it has, then use it to convert it to a Qobj.; It should be relatively simple and involve adding another else-if in [your constructor](https://github.com/qutip/qutip/blob/624405e7c49f7c25d0623451cff5a5a5d0544559/qutip/qobj.py#L333). ```; if isinstance(inpt, Qobj):; ...; elif inpt is None:; ...; ...; elif hasattr(inpt, ""__qobj__""):; data = input.__qobj(options); self.shape = data.shape; ...; ```; The only thing to do would be discussing the interface itself and document what it should return. This will allow other software in the future to integrate with qutip, too, and I believe will help shape the ecosystem.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508:2182,interface,interface,2182,https://qutip.org,https://github.com/qutip/qutip/issues/1508,4,"['integrat', 'interface']","['integrate', 'interface']"
Integrability,"e read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; This PR adds a new class, `QInstrument`, that wraps a decomposition of a quantum instrument into completely positive trace non-increasing maps (subnormalized channels). This new class can be used to predict measurement outcomes and post-measurement states for a variety of different quantum systems:. ```python; >>> import qutip; >>> H = qutip.operations.hadamard_transform(); >>> ket_plus = H * qutip.basis(2, 0); >>> z_instrument = qutip.QInstrument.basis_measurement(2); >>> (H * z_instrument)(ket_plus); {Seq(0,): Outcome(probability=0.5000000000000002, output_state=Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[0.5 0.5]; [0.5 0.5]]), Seq(1,): Outcome(probability=0.5000000000000002, output_state=Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[ 0.5 -0.5]; [-0.5 0.5]])}; >>> z_instrument.sample(ket_plus); (Seq(1,), Outcome(probability=0.5000000000000001, output_state=Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[0. 0.]; [0. ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1687:1386,wrap,wraps,1386,https://qutip.org,https://github.com/qutip/qutip/pull/1687,1,['wrap'],['wraps']
Integrability,"e removals:; - `eseries` and `essolve` are completely gone; - OpenMP is temporarily removed (though this will be added back in to the data layer later); - all functions in `correlation` and `qobj` which were marked ""deprecated"" are now actually removed; - `vec2mat` and `mat2vec` have been renamed to `vector_to_operator` and `operator_to_vector`; - all ""legacy"" files have been completely removed; - all previous scipy-CSR-like Cython code is completely gone (replaced by the data layer); - `Qobj` no longer defines `__array__`, and so will not automatically turn itself into one. Having this produced very inconsistent behaviour when multiplying by numpy arrays, or otherwise dealing with numpy functions. If you _need_ `Qobj` to be array, be explicit and call `Qobj.full()`. Notable changes in `Qobj`:; - matrix multiplication now contracts to a scalar if doing `bra @ ket`; - matrix multiplication no longer contracts 1D subspaces, but the new `Qobj.contract()` will do this; - arithmetic operations are much more strict about enforcing `Qobj.type`-safety; - `Qobj` understands the `@` operator to mean matrix multiplication, but also maintains the same behaviour of treating `Qobj * Qobj` as matrix multiplication. Package organisation:; - the solvers are now physically contained in `qutip.solve`, but are still logically available in the `qutip` namespace. This means that direct imports (like `from qutip.mesolve import mesolve`) will fail (it becomes `from qutip.solve.mesolve import mesolve`), but the ""proper"" unqualified access `from qutip import mesolve` remains unchanged. This is for internal code organisation purposes. The integral type used as the indices in the `CSR` type is now done by simple typedef in the files `qutip/core/data/base.{pyx,pxd}`, so changes it in those two files at compile-time will allow you to switch between 32-bit and 64-bit. The C++ backing source file `zspmv.cpp` and its associated header are renamed to `matmul_csr_vector` to match the new data-layer na",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1332:1449,contract,contract,1449,https://qutip.org,https://github.com/qutip/qutip/pull/1332,1,['contract'],['contract']
Integrability,"e the Bug. ```shell; import matplotlib.pyplot as plt; from qutip.visualization import matrix_histogram; import numpy as np. fig, ax = plt.subplots(subplot_kw={""projection"": ""3d""}). rho = np.eye(4). matrix_histogram(rho, ax=ax). fig.savefig(""MWE.pdf""); ```. ### Code Output. ```shell; Traceback (most recent call last):; File ""/tmp/MWE.py"", line 11, in <module>; fig.savefig(""MWE.pdf""); File ""/home/maederan/.local/lib/python3.10/site-packages/matplotlib/figure.py"", line 3395, in savefig; self.canvas.print_figure(fname, **kwargs); File ""/home/maederan/.local/lib/python3.10/site-packages/matplotlib/backends/backend_qtagg.py"", line 75, in print_figure; super().print_figure(*args, **kwargs); File ""/home/maederan/.local/lib/python3.10/site-packages/matplotlib/backend_bases.py"", line 2204, in print_figure; result = print_method(; File ""/home/maederan/.local/lib/python3.10/site-packages/matplotlib/backend_bases.py"", line 2054, in <lambda>; print_method = functools.wraps(meth)(lambda *args, **kwargs: meth(; File ""/home/maederan/.local/lib/python3.10/site-packages/matplotlib/backends/backend_pdf.py"", line 2799, in print_pdf; self.figure.draw(renderer); File ""/home/maederan/.local/lib/python3.10/site-packages/matplotlib/artist.py"", line 95, in draw_wrapper; result = draw(artist, renderer, *args, **kwargs); File ""/home/maederan/.local/lib/python3.10/site-packages/matplotlib/artist.py"", line 72, in draw_wrapper; return draw(artist, renderer); File ""/home/maederan/.local/lib/python3.10/site-packages/matplotlib/figure.py"", line 3162, in draw; mimage._draw_list_compositing_images(; File ""/home/maederan/.local/lib/python3.10/site-packages/matplotlib/image.py"", line 132, in _draw_list_compositing_images; a.draw(renderer); File ""/home/maederan/.local/lib/python3.10/site-packages/matplotlib/artist.py"", line 72, in draw_wrapper; return draw(artist, renderer); File ""/home/maederan/.local/lib/python3.10/site-packages/mpl_toolkits/mplot3d/axes3d.py"", line 457, in draw; axis.draw_pane(renderer)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2535:1172,wrap,wraps,1172,https://qutip.org,https://github.com/qutip/qutip/issues/2535,1,['wrap'],['wraps']
Integrability,"e to generate these with a (costly) Lindblad equation in a large Hilbert space, and use the TTM to extrapolate to larger times. My code is not quite ready for a pull request yet (due to this issue amongst other things), but when it is I would also like to discuss the structure of such a package. I guess it is best to leave that to when I have a pull request re ady though.; > ; > For now I have a local modified version of the _mesolve_const function that allows a superoperator in place of rho0. The necessary modification is actually only to the function implementing the ""right hand side"" (RHS) of the differential equation, as this now needs to implement a matrix-matrix multiplication instead of a matrix-vector multiplication. For illustration purposes I will attach a code for a modified _mesolve_const below, that does the job, but the RHS is not implemented in cython.; > ; > I think implementing this feature in qutip should be relatively straight forward, but possibly a bit tedious since it there are so many different dispatch functions from mesolve depending on the different types of time-dependence etc. One would also need cython implementations of the RHS functions for superoperator evolutions.; > ; > Please let me know what you think about implementing this in qutip.; > ; > Here is the code for a function that propagates the Lindblad equation with a superoperator as initial value (written as a standalone module for illustration purposes). As you will notice in the code, there is a subtle issue with needing to transpose the Lindbladian to get the correct result. I'm not sure why this is the case.. must be something with the superoperator representation. Perhaps @cgranade knows?; > ; > import scipy; > ; > from qutip.mesolve import _generic_ode_solve; > from qutip.superoperator import liouvillian, mat2vec; > from qutip.settings import debug; > ; > if debug:; > import inspect; > ; > def _mesolve_const_super(H, E0, tlist, c_op_list, e_ops, args, opt,; > progress_bar):",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/384#issuecomment-150751174:2301,depend,depending,2301,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-150751174,2,['depend'],"['dependence', 'depending']"
Integrability,"e view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:15133,depend,dependabot,15133,https://qutip.org,https://github.com/qutip/qutip/pull/2201,8,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"e view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.28.2&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:8602,depend,dependabot,8602,https://qutip.org,https://github.com/qutip/qutip/pull/2164,8,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"e'll be a `step` method instead of calling the ""high-level"" interface function `mesolve`, but functionally it'll do largely the same, just with a lot less data copying than the current form has to do. In the new system, it's likely that the function `mesolve` itself will keep the exact same interface it has now, just internally most of its processing will be split into modular components, each of which will be accessible (with different names) to the user to compose themselves, if they want low-level access. That sounds perfect! I might wait for QuTiP 5 to come out, or if these things are already in `master`, I'll see if I can maybe revisit `DensityMatrixODEPropagator` and maybe also add something for the Hilbert space case (whatever `sesolve` is doing internally). As an aside, I was actually surprised how much better `DensityMatrixODEPropagator` performs compared to looping over `mesolve` (`In [29]` vs `In [21]`): Since the `DensityMatrixODEPropagator` also re-initializes `scipy.integrate.ode` in every time steps, it would seem like the only difference between the two is the overhead of `mesolve` deciding that it has to handle the specific case of density matrix propagation. That might be something to keep an eye on in future QuTiP development: Ideally, calling `mesolve` would have negligible overhead compared to manually doing whatever `mesolve` does internally for a particular case. > We're unlikely to add `yield` to `mesolve` directly because that's a very breaking change to one of QuTiP's core functions (we can't return from a generator, or at least not ergonomically), but we are splitting up the `mesolve` monolith into a much more modular architecture, and making it more user-accessible. The other advantage of this is that the integrator component will just be one element of a composable system, so we'll not be tied to scipy integrators any more. I would absolutely not expect you to modifying how `mesolve` works directly. In fact, I would strongly recommend le",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:9133,integrat,integrate,9133,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrate']
Integrability,"e() to return an image with less than 256 palette entries <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6543"">#6543</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected BMP and TGA palette size when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6500"">#6500</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.3.0 (2022-10-29)</h2>; <ul>; <li>; <p>Limit SAMPLESPERPIXEL to avoid runtime DOS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a>; [wiredfool]</p>; </li>; <li>; <p>Initialize libtiff buffer when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a>; [radarhere]</p>; </li>; <li>; <p>Inline fname2char to fix memory leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a>; [nulano]</p>; </li>; <li>; <p>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a>; [nulano]</p>; </li>; <li>; <p>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a>; [hugovk]</p>; </li>; <li>; <p>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a>; [cgohlke]</p>; </li>; <li>; <p>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a>; [radarhere]</p>; </li>; <li>; <p>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https:",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:10548,depend,dependabot,10548,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"e/0.37.0...0.38.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wheel&package-manager=pip&previous-version=0.37.0&new-version=0.38.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:5548,Depend,Dependabot,5548,https://qutip.org,https://github.com/qutip/qutip/pull/2052,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"e7d""><code>939a28f</code></a> 2022.09.14</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/aca828a78e73235a513dff9ebc181a47ef7dbf7b""><code>aca828a</code></a> 2022.06.15.2</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/de0eae12a6d5794a4c1e33052af6717707ce1fcc""><code>de0eae1</code></a> Only use importlib.resources's new files() / Traversable API on Python ≥3.11 ...</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/b8eb5e9af9143b22b7f651942b393e369ed4c52a""><code>b8eb5e9</code></a> 2022.06.15.1</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/47fb7ab715965684e035292d2ad3386aabdc4d25""><code>47fb7ab</code></a> Fix deprecation warning on Python 3.11 (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/199"">#199</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/b0b48e059995f455ac1e79b3ad373ad4ef355516""><code>b0b48e0</code></a> fixes <a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/198"">#198</a> -- update link in license</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/9d514b4cad79357071c89d7dc4dc1b4df72bb997""><code>9d514b4</code></a> 2022.06.15</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4151e8849481f396537c34812068e89b32731e52""><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/196"">#196</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2020.12.05...2022.12.07"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2020.12.5&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scor",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035:1520,depend,dependabot,1520,https://qutip.org,https://github.com/qutip/qutip/pull/2035,1,['depend'],['dependabot']
Integrability,"e; [wiredfool]</p>; </li>; <li>; <p>Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</p>; </li>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1 (2021-07-06)</h2>; <ul>; <li>; <p>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a>; [radarhere]</p>; </li>; <li>; <p>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a>; [radarhere]</p>; </li>; <li>; <p>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a>; [t-vi, radarhere]</p>; </li>; </ul>; <h2>8.3.0 (2021-07-01)</h2>; <ul>; <li>; <p>Use snprintf instead of sprintf. CVE-2021-34552 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a>; [radarhere]</p>; </li>; <li>; <p>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a>; [kmilos]</p>; </li>; <li>; <p>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a>; [baletu, r",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:5517,depend,dependabot,5517,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"e</code></a>]</li>; <li>Fixed ImagePath.Path array handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed redundant part of condition <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5915"">#5915</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Explicitly enable strip chopping for large uncompressed TIFFs <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5517"">#5517</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Use the Windows method to get TCL functions on Cygwin <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5807"">#5807</a> [<a href=""https://github.com/DWesl""><code>@​DWesl</code></a>]</li>; <li>Changed error type to allow for incremental WebP parsing <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5404"">#5404</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Ensure that BMP pixel data offset does not ignore palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5899"">#5899</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:1857,depend,dependabot,1857,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"e></a> 2022.06.15</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4151e8849481f396537c34812068e89b32731e52""><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/196"">#196</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2020.12.05...2022.12.07"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2020.12.5&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035:2706,depend,dependabot-automerge-start,2706,https://qutip.org,https://github.com/qutip/qutip/pull/2035,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"e></a>]</li>; <li>Explicitly enable strip chopping for large uncompressed TIFFs <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5517"">#5517</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Use the Windows method to get TCL functions on Cygwin <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5807"">#5807</a> [<a href=""https://github.com/DWesl""><code>@​DWesl</code></a>]</li>; <li>Changed error type to allow for incremental WebP parsing <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5404"">#5404</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Ensure that BMP pixel data offset does not ignore palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5899"">#5899</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use latin1 encoding to decode bytes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5870"">#5870</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed palette index for zeroed color in FASTOCTREE quantize <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5869"">#5869</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a> [<a href=""https://github.com/radarhere""><code>@​ra",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:2519,depend,dependabot,2519,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"e>@​radarhere</code></a>]</li>; <li>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use latin1 encoding to decode bytes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5870"">#5870</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed palette index for zeroed color in FASTOCTREE quantize <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5869"">#5869</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Pass SAMPLEFORMAT to libtiff <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5848"">#5848</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added rounding when converting P and PA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5824"">#5824</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Image.NONE is only used for resampling and dithers <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5908"">#5908</a> [<a href=""https://github.com/radarhere""><code>@​radarhere<",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:3617,depend,dependabot,3617,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"e>acee60e</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/eaca69091119e0ac5c97e626ba9e3b21b688c5ed""><code>eaca690</code></a> Add lexer for MediaWiki Wikitext (<a href=""https://redirect.github.com/pygments/pygments/issues/2373"">#2373</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/0e9c87bcf096908956e031f15a4e589e83be1691""><code>0e9c87b</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/ef0abbaece522732031d61391567c017d48d87b7""><code>ef0abba</code></a> Add PostgreSQL Explain lexer (<a href=""https://redirect.github.com/pygments/pygments/issues/2398"">#2398</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/3c6e2af8fbc44bb1ef77389d09118c37faea8746""><code>3c6e2af</code></a> Update CHANGES</li>; <li>Additional commits viewable in <a href=""https://github.com/pygments/pygments/compare/2.14.0...2.15.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:13845,Depend,Dependabot,13845,https://qutip.org,https://github.com/qutip/qutip/pull/2201,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"e\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:15117,message,message,15117,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['message'],['message']
Integrability,"e\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:21121,message,message,21121,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['message'],['message']
Integrability,"e]</p>; </li>; <li>; <p>Fixed palette index for zeroed color in FASTOCTREE quantize <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5869"">#5869</a>; [radarhere]</p>; </li>; <li>; <p>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a>; [radarhere]</p>; </li>; <li>; <p>Pass SAMPLEFORMAT to libtiff <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5848"">#5848</a>; [radarhere]</p>; </li>; <li>; <p>Added rounding when converting P and PA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5824"">#5824</a>; [radarhere]</p>; </li>; <li>; <p>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a>; [radarhere]</p>; </li>; <li>; <p>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a>; [hugovk]</p>; </li>; <li>; <p>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a>; [radarhere]</p>; </li>; <li>; <p>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a>; [m-shinder, radarhere]</p>; </li>; <li>; <p>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a>; [cmbruns, radarhere]</p>; </li>; <li>; <p>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/82541b6dec8452cb612067fcebba1c5a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:12458,depend,dependabot,12458,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"ea17be7""><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>; <li><a href=""https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23""><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.2...3.1.3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:3902,Depend,Dependabot,3902,https://qutip.org,https://github.com/qutip/qutip/pull/2291,1,['Depend'],['Dependabot']
Integrability,"ead of Qobj's -- potentially even more speedup, in fact, since with numpy now *everything* is dense (including the Hamiltonian), whereas the best thing to do numerically would be to do sparse-matrix-dense-vector operations (which is what we do in Fortran, incidentally). > In the form I've written it, this loop is thread-safe already. As it stands in the 4.x series, `mesolve` is re-entrant (I'm fairly sure), but note that it does generally mutate its arguments, especially if you pass a `QobjEvo` Liouvillian as the first argument. As long as you make sure you give each thread a distinct copy of the input Liouvillian, `mesolve` itself doesn't access global state as far as I recall. Just to be clear: there's two interconnected issues here: One is just being ""reentrant"" in the sense that I can safely have multiple `mesolve`'s run in parallel. This doesn't seem to be a problem for `mesolve` as a whole (propagating over the entire time grid). The other issue, at a lower level is whether I can keep the internal state of the integrator (`scipy.integrate.ode` or whatever else `mesolve` might be using) when propagating a single time step (and whether I can have multiple integrators to run in parallel that each safely keep track of their own state). That comes down to the integrator itself being ""reentrant"", of course. Certainly, calling `mesolve` in a loop (`In [19]`) doesn't keep the internal state of the integrator, hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:5972,integrat,integrator,5972,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrator']
Integrability,"eating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (tau) ... ok; control.puls",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:2700,depend,dependent,2700,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,1,['depend'],['dependent']
Integrability,"ector (using `gate_expand_1toN`), and the added code (dense local). N being the number of qubits. Here I made things as hard as possible for the sparse routine (all elements non-zero), so this is probably the limit of the speed-up. ![1_local_vector_adaptive_backend](https://user-images.githubusercontent.com/47875526/101932409-91f44900-3b8f-11eb-8b5b-7a00dabec2e4.png). **Other notes**; 1. I am a contractor for NASA, and they required a slight change to the license for the code I added. This is why I made two new files for this work specifically (instead of putting it in e.g. gates.py), which now includes a Copyright NASA sentence. I will talk privately with someone about this. 2. ~~I actually think that we could make a wrapper function `local_multiply` which can additionally take a backend 'sparse', so that it is easier to compare the above code, to one using the default sparse way (e.g. using the `expand_operator` type functions). I didn't do this yet as thought i'd see what thoughts are on this -- I can easily add this.~~ **Update (20/12/20)**: I just added some basic functionality for this. Will need to add more tests and maybe re-work it a bit still. 3. Currently the input local operator is expected to be square, and we do not take output dimension arguments. This means it keeps the system dimensions the same. This can be relaxed easily, but we probably need an additional output dimension list, which needs to be consistent with the input operator. Again, this is easy to do, but was not sure if it is needed. If I get time I might add this anyway. 4. There are some examples of the code in the docstring to see how to run it (and also in the tests of course). I also have offline a script to perform certain speed comparisons (vs the sparse routine), I can share some more results of that. I figured this type of script shouldn't go into the project, but I can also add this. **Changelog**; Added a local multiplication routine, to speed up certain dense matrix operations.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405:3319,rout,routine,3319,https://qutip.org,https://github.com/qutip/qutip/pull/1405,2,['rout'],['routine']
Integrability,"ed to be a more general framework to characterize thermal environments. Environments with multi-exponential decompositions are included as `ExponentialBosonicEnvironment`; this class is supposed to mostly replace the old HEOM `BosonicBath`. We now use the term ""environment"" instead of ""bath"" mostly to avoid having the same name for the new classes as in the HEOM module. There is a little difference between the old and the new class, namely that the system coupling operator is a part of BosonicBath (i.e., an attribute of BosonicBath and required in the constructor), but we have decided for the new module that system operators should not be part of the environment. This means that to create a HEOM solver, one will need to specify environments and coupling operators, somewhat similar to the `brmesolve` solver where one specifies both power spectrum and `a_op`. (Currently, one just specifies a list of ""baths"" in the HEOM solver). This will require some small changes to the HEOM solver interface that we still have to implement before merging this PR. Note that we are also making sure that existing code continues to work without changes. Another thing missing from this PR are fermionic environments. I would have liked to have them, but it was becoming too much work and a too large PR, so fermionic environments will have to be added a bit later. Some more advantage of our changes are:; * The new environment classes could be used directly as inputs for solvers other than the HEOM solver, for example for `mesolve` or `brmesolve`. These solvers could compute their jump operators and rates from the environment power spectrum and system operators. (That is however also left for a future PR, since it would require some thinking about how environments can best be passed to those solvers.) Similarly, QuTiP could automatically compute Markovian embeddings with pseudomodes or reaction coordinates.; * The module provides a framework for the idea of approximating one environment by an",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2534#issuecomment-2359719525:1273,interface,interface,1273,https://qutip.org,https://github.com/qutip/qutip/pull/2534#issuecomment-2359719525,1,['interface'],['interface']
Integrability,"ed-feedback.ipynb. Together with code docstrings, these two notebooks should give a good idea of how the modules are to be used. As you will see in the notebooks, the TTM implementation has a user interface that closely mimicks the `mesolve` interface. The solver is called `ttmsolve` and has the following syntax (explained in more detail in the docstring and notebook):. ```; ttmsolve(dynmaps, rho0, times, e_ops=[], learningtimes=None, tensors=None, **kwargs); ```. where `dynamps` is a list of pre-computed dynamical maps to learn from, `rho0` is the initial state, `times` are the times at which to find the solution etc. The ""memory cascade"" implementation however, diverges a bit from this standard. In general I think it will be hard to have a kind of unified interface for different types of non-Markovian solvers, because unlike the Markovian case, there is no unified theoretical approach, and different solvers work in quite different ways. For the ""memory cascade"" implementation I chose a more object oriented style for the interface. The user first creates a `MemoryCascade` object, storing all the relevant parameters, and subsequently calls class methods to runs simulations. I personally like this style, and I think it is a general style that could be used across a great variety of solvers. I could however in addition write a function with a more `mesolve`-like interface. It can't, however, be identical, as there are several special arguments that has to be given. There is also a separate class method that computes output field correlation functions, and I kind of like that the various methods are collected together in a class, instead of having multiple different functions that all have to be called with a long list of arguments. I therefore suggest the style used in the `memorycascade` module as a style that can be used for new solvers going forward. In general there will be a class with a name reflecting the solver, and this class has methods for doing various typ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/405:2610,interface,interface,2610,https://qutip.org,https://github.com/qutip/qutip/pull/405,1,['interface'],['interface']
Integrability,"edirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d594f4cb8dc47fb0c69ae58d9fff86faae4515bd""><code>d594f4c</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/909dc64ed5f676169aa3d9b0c26f132a06321b83""><code>909dc64</code></a> 9.3.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1a51ce7b955c65c8f2c6bc7772735b197b8a6aa3""><code>1a51ce7</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a> from hugovk/security-libtiff_buffer</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2444cddab2f83f28687c7c20871574acbb6dbcf3""><code>2444cdd</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a> from hugovk/security-samples_per_pixel-sec</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/744f455830871d61a8de0a5e629d4c2e33817cbb""><code>744f455</code></a> Added release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/0846bfae48513f2f51ca8547ed3b8954fa501fda""><code>0846bfa</code></a> Add to release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/799a6a01052cea3f417a571d7c64cd14acc18c64""><code>799a6a0</code></a> Fix linting</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/00b25fd3ac3648bc28eff5d4c4d816e605e3f05f""><code>00b25fd</code></a> Hide UserWarning in logs</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/05b175ef88c22f5c416bc9b8d5b897dea1abbf2c""><code>05b175e</code></a> Tighter test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/13f2c5ae14901c89c38f898496102afd9daeaf6d""><code>13f2c5a</code></a> Prevent DO",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:13951,depend,dependabot,13951,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"ee that at _no point_ is the `ctrl_array` object copied. If you wanted to branch off execution part-way through the iterator, you'd have to copy the whole state, and then you'd lose your reference to the control array unless you kept manually walking the structure of the time-dependent object (internally it gets converted into a `QobjEvo` Liouvillian) to retrieve it. The other problem is that `state0` and the `Qobj` parts of the Hamiltonian aren't mutable; the preprocessing of `mesolve` means that none of those objects will exist inside the integrator loop. That's fine for this use-case, but it's not very general. These problems of mutability would apply to callback functions as well. A different way of using `yield` or callback function would be to really lean into a co-routine sort of pattern. So `mesolve` internally would look like; ```python; def mesolve(H, state, times, c_ops, e_ops, options):; # [... set up problem ...]; integrator = scipy.integrate.ode(...); for time in times[1:]:; state = integrator.step_to(time); instructions = yield _mesolve_output_state(state, time, e_ops); integrator = _mesolve_process_instructions(instructions, integrator); ```; and a call to `mesolve` would be like; ```python; solver = mesolve(H, rho0, times, c_ops); try:; result = next(solver); while True:; next_control = krotov.get_next_control(result.time, result.state); result = solver.send([; ('update-arguments', {'control': next_control}),; ('update-hamiltonian', ...),; ('add-c_op', ...),; # possible examples of API commands; ]); except StopIteration:; pass; ```; That's not super user friendly, but it _is_ nicely re-entrant. You'd have a single object you can copy and branch off, and QuTiP would be able to update the relevant objects for you at any given time. Still, I don't think it's a good strategy in general - we'd have to _very_ rigorously define the ""instructions"" API, and it would be pretty awkward to use. It would also be a nuisance for extensibility, probably; the interm",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481:1901,integrat,integrator,1901,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481,1,['integrat'],['integrator']
Integrability,"ee to re-organize it afterwards as he likes. . > 3 - we need to take care to do this in a way that still allows QuTiP to iterate and improve Qobj.__init__ between major versions. You could for example require that `__qutip_qobj__(self, version, *kwargs)` takes in a version of the API? I believe that is what numpy does in `__array_interface__`. And it's on implementers of the interface the burden of checking the api version and throwing an error if it's not supported. Or the inverse, where implementers return whatever data they return and a version of the API they are using, and qutip can throw an error if that is an older version. The latter would make it harder to support multiple versions of qutip in the implementers, but I would not worry too much about it. You can throw an error saying that this other package is not supported and you should either nag it's developers or downgrade qutip. I'm not particularly worried about the blame: even if the error is thrown from qutip, if the message is clear enough it will be clear that the fault is in the downstream implementors of the API. -- ; About keyword handling: copy-pasting the list of kwargs of `Qobj`...; ```python; inpt : array_like = Data for vector/matrix representation of the quantum object.; dims : list = Dimensions of object used for tensor products.; shape : list = Shape of underlying data structure (matrix shape).; copy : bool = Flag specifying whether Qobj should get a copy of the input data, or use the original.; fast : bool = Flag for fast qobj creation when running ode solvers.; ```. For the case of the usage that netket would have, our objects already define the Hilbert space they are acting on (so `dims` and `shape`). `copy` doesn't really make sense for us, because we would be building the representation . The way I see it, `Qobj(other_pkg_obj,**kwargs)` should behave like `Qobj(qutip_obj, **kwargs)`, so `__qutip_qobj__` should return the matrix data, shape and dims if possible, and qutip will handle i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825710810:1802,message,message,1802,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825710810,1,['message'],['message']
Integrability,"ef=""https://github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7""><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>; <li><a href=""https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23""><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.2...3.1.3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:3812,depend,dependabot-automerge-start,3812,https://qutip.org,https://github.com/qutip/qutip/pull/2291,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"ef=""https://github.com/python-pillow/Pillow/commit/facf3af93dabcbdd8cdbda8c3b50eefafa3bb04c""><code>facf3af</code></a> Added release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2a93aba5cfcf6e241ab4f9392c13e3b74032c061""><code>2a93aba</code></a> Use strncpy to avoid buffer overflow</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a670597bc30e9d489656fc9d807170b8f3d7ca57""><code>a670597</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.2.0...10.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.2.0&new-version=10.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:15554,Depend,Dependabot,15554,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['Depend'],['Dependabot']
Integrability,egrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:7558,depend,depends,7558,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"en module scoping isn't good, but if you have lots of different functions to test, and every test for a given function will want the same parametrisation, then class scoping might be a good choice. If you only need the parametrisation once, then it's best to put it right next to the place it's used (like in the case of mine that you've highlighted). It means that if you've opened that file to read the tests, then everything you need to understand `Test_fidelity.test_known_cases` will be on your screen if you just scroll to it. That makes it much easier for the next person who has to come along to edit your code. I used a couple of temporary variables in that case just to aid readability - my cases wouldn't have nicely fit on one line if I'd shoved the `qutip.basis(2, 0)` stuff inside the `pytest.param` constructors, and it would be hard to read. This way you can easily verify that the code is correct bit-by-bit; you can see clearly that the names are descriptive and match exactly what they say, and that means you can trust them when they then appear in the parametrisation. I won't pretend to be perfect at any part of coding, and particularly testing. I rewrote all the testing files starting from those beginning with ""a"" up to (now) ""metrics"" while I was first getting to know the QuTiP codebase, and hopefully you can see that my early efforts weren't that great, and they get a bit better and easier to read as time went on. (The later files haven't been converted yet.) The main things are to always be thinking about readability both of the code and the error messages that are coming out, and making sure that your tests are really testing that your functions have your behaviour you want them to have. Another thing we really don't have enough of in QuTiP yet is tests for ""negative"" behaviour, i.e. testing that functions _fail_ when they're passed incorrect inputs - consequently, quite a lot of QuTiP actually will just silently do the wrong thing if it's passed nonsense.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487#issuecomment-815044706:2382,message,messages,2382,https://qutip.org,https://github.com/qutip/qutip/pull/1487#issuecomment-815044706,1,['message'],['messages']
Integrability,"en setting an options. It is only used for `use_cython` which will error when trying to set it to `True` without cython installed. Otherwise, it will fail when trying to use the options. *Solver's options*; Each solver has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ... # Error; solver.options = opt; ```; This is because changing options without the solver knowing will not take effect. I removed saving / storing options for now. It was mostly used to store openmp threshold, which is not supported.; I also propose to write the stored options as python code when we restore it. (`options = eval(repr(options))`, we may have some issue with circular import if called from `__init__.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:2174,integrat,integrator,2174,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['integrat'],['integrator']
Integrability,enblas-devel; - openssl; - packaging; - pandas; - pandoc; - pandocfilters; - pango; - pari; - parso; - patsy; - pbr; - pcre; - perl; - pexpect; - pickleshare; - pillow; - pip; - pixman; - prometheus_client; - prompt_toolkit; - protobuf; - psutil; - ptyprocess; - pycodestyle; - pycparser; - pyflakes; - pygments; - pylint; - pyopenssl; - pyparsing; - pyqt; - pyrsistent; - pysocks; - python; - python-dateutil; - python-symengine; - pytz; - pyyaml; - pyzmq; - qt; - qtawesome; - qtconsole; - qtpy; - qutip; - r-base; - r-clisymbols; - readline; - reportlab; - requests; - rope; - scikit-learn; - scipy; - send2trash; - setuptools; - simplegeneric; - sip; - six; - snowballstemmer; - sphinx; - sphinxcontrib; - sphinxcontrib-applehelp; - sphinxcontrib-devhelp; - sphinxcontrib-htmlhelp; - sphinxcontrib-jsmath; - sphinxcontrib-qthelp; - sphinxcontrib-serializinghtml; - sphinxcontrib-websupport; - spyder; - spyder-kernels; - sqlite; - symengine; - symmetrica; - sympow; - sympy; - tensorboard; - tensorflow; - tensorflow-base; - tensorflow-estimator; - termcolor; - terminado; - testpath; - tk; - tktable; - tornado; - traitlets; - typed-ast; - typing; - urllib3; - wcwidth; - webencodings; - werkzeug; - wheel; - wrapt; - wurlitzer; - xz; - yaml; - zeromq; - tqdm; - zlib; - zstd; - pytest; - numba; - hypothesis; - pytest-cov; - mypy; - pytest-xdist; - watchdog; - pytest-runner; - coveralls; - doctr; - gitpython; - pre-commit; - tox; - cookiecutter; - pdbpp; - sphinx-autobuild; - sphinx-autodoc-typehints; - sphinx_rtd_theme; - travis-encrypt; - twine; - nbval; - nbsphinx; - watermark; - ipyparallel; - unittest2pytest; - pytest-benchmark; - pytest-repeat; - pytest-subtests; - fastcore; - fastscript; - asttokens; - cached-property; - crayons; - executing; - flask; - humanize; - ipywidgets; - itsdangerous; - jsonpickle; - jupyter; - littleutils; - nbconvert; - outdated; - portpicker; - sqlalchemy; - widgetsnbextension; - nbdime; - rich; - mayavi; - pip:; - birdseye; - icecream; - nbdev==1.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1558#issuecomment-842089563:2824,wrap,wrapt,2824,https://qutip.org,https://github.com/qutip/qutip/pull/1558#issuecomment-842089563,1,['wrap'],['wrapt']
Integrability,"ensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagators.py#L162), which was an attempt to adapt some of `mesolve`'s inner workings to Krotov's needs. It turned out the overhead was still too large for this work very well, cf. the large runtime of the [corresponding example](https://qucontrol.github.io/krotov/v1.2.1/notebooks/06_example_3states.html). To get very technical, Krotov's requirements are laid out in the documentation of the [`Propagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagators.py#L125) abstract base class, [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagators.py#L162) being a particular example. In particular, the interface we define there is strictly for a single time step, makes no reference to `tlist` and we use ``H=[H0, [H1, u]]`` where `u` is a scalar for that particular timestep. However, I can easily write a wrapper around an `mesolve` that would work something along the lines of the pseudo-code from https://github.com/qucontrol/krotov/issues/93#issuecomment-859717563:. ~~~; for (i, state) in enumerate(; mesolve([H0, [H1, ctrl_array]], state0, list); ):; # assuming `state` is at tlist[i]; new_val = calculate_control_value_for_next_step(state); ctrl_array[i] = new_val; ctrl_array[i+1] = new_val # ignoring IndexError; ~~~. So I don't think you'd have to worry about these details: any implementation with low overhead that would allow me to get the states from `mesolve` as well as tweak the control fields for the next time step should be sufficient. In particular, the `.step` that you discuss in https://github.com/qutip/qutip/issues/1571#issuecomment-858740451 looks very much like it's going in the right direction! The one option from the earlier https://github.com/qutip/qutip/issues/1571#issue-917391349 that might *not* work very well is callback functions. I *might* be able to work around that, but it wouldn't really fit into the",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215:4071,wrap,wrapper,4071,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215,1,['wrap'],['wrapper']
Integrability,"ent. Unfortunately, no alternative method has been discovered for calculating the diamond norm in the general case of CPTP channels. However, in the special case where we are trying to calculate the difference between two unitary channels, a very efficient implementation exists. This makes use of an unproved theorem on page 29 of [1]. I have proved this theorem and elaborated an efficient algorithm to calculate the diamond distance between two unitaries as part of my masters thesis. . The current qutip implementation makes use of the semi-definite program formulation in [3] and only uses a simplified calculation on 2 qubit unitary differences. The implementation of this novel approach is very simple - the hardest step involves diagonalising a unitary. Although time complexity is still exponential in the number of qubits, this implementation is far more efficient than the more general implementation. The Choi representation of the quantum channel isn't used and there is no need to solve a complicated semi-definite program (meaning I can do away with the `cvxpy` dependency). ## Empirical testing; Results of empirical testing on my machine are reported below. | | 3 qubit | 4 qubit |; |---------|---------|----------|; | current implementation | 5.22 s | 3min 21s |; | hyper-efficient implementation | 924 µs | 1.11 ms |. ## Proposition; Given the popularity of the circuit model and unitary-based quantum computation, I believe a very efficient implementation of the diamond distance for unitaries would be incredibly valuable for the research community. Given how simple the change is (current tests already cover the test case), I think it would be a simple and worthwhile addition to qutip. ## Citations. [1] D. Aharonov, A. Kitaev, and N. Nisan, “Quantum circuits with mixed states,” in Proceedings of the thirtieth annual ACM symposium on Theory of computing, pp. 20–30, 1998.; [2] A. Gilchrist, N. K. Langford, and M. A. Nielsen, “Distance measures to compare real and ideal quan",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2416:1473,depend,dependency,1473,https://qutip.org,https://github.com/qutip/qutip/pull/2416,1,['depend'],['dependency']
Integrability,"entrant and forwards-compatible without hamstringing our ability to extend the APIs in the future would probably not be very ergonomic. Both callbacks and `yield` allow the caller to feed information back into `mesolve`, but in this architecture, we'd have to completely define an interchange API, and specify quite explicitly what ""commands"" you can tell this sort of `mesolve` state machine to execute. The pattern in your original comment (reproduced here); ```python; for (i, state) in enumerate(; mesolve([H0, [H1, ctrl_array]], state0, list); ):; # assuming `state` is at tlist[i]; new_val = calculate_control_value_for_next_step(state); ctrl_array[i] = new_val; ctrl_array[i+1] = new_val # ignoring IndexError; ```; is probably a little fragile; doing this means we have to guarantee that at _no point_ is the `ctrl_array` object copied. If you wanted to branch off execution part-way through the iterator, you'd have to copy the whole state, and then you'd lose your reference to the control array unless you kept manually walking the structure of the time-dependent object (internally it gets converted into a `QobjEvo` Liouvillian) to retrieve it. The other problem is that `state0` and the `Qobj` parts of the Hamiltonian aren't mutable; the preprocessing of `mesolve` means that none of those objects will exist inside the integrator loop. That's fine for this use-case, but it's not very general. These problems of mutability would apply to callback functions as well. A different way of using `yield` or callback function would be to really lean into a co-routine sort of pattern. So `mesolve` internally would look like; ```python; def mesolve(H, state, times, c_ops, e_ops, options):; # [... set up problem ...]; integrator = scipy.integrate.ode(...); for time in times[1:]:; state = integrator.step_to(time); instructions = yield _mesolve_output_state(state, time, e_ops); integrator = _mesolve_process_instructions(instructions, integrator); ```; and a call to `mesolve` would be lik",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481:1166,depend,dependent,1166,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481,1,['depend'],['dependent']
Integrability,"ependabot.com/ipython/ipython/issues/13412"">#13412</a> from bnavigator/backport-inspect</li>; <li><a href=""https://github.com/ipython/ipython/commit/4f26796cf368d24edadbb3d62e052e6aa4ddc820""><code>4f26796</code></a> fix xxlimited_35 import name</li>; <li><a href=""https://github.com/ipython/ipython/commit/77ca4a6312374f0659fb6973925e5b696d5dc74e""><code>77ca4a6</code></a> don't run nose-based iptest on py310, only pytest</li>; <li><a href=""https://github.com/ipython/ipython/commit/533e5094aa36b51549cf6a316fc439c6404643c9""><code>533e509</code></a> back to decorator skip</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.22.0...7.31.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.22.0&new-version=7.31.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780:2420,depend,dependabot-security-updates,2420,https://qutip.org,https://github.com/qutip/qutip/pull/1780,1,['depend'],['dependabot-security-updates']
Integrability,"eprecated &quot;setup.py install&quot; to &quot;pip install .&quot; <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5896"">#5896</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a> [<a href=""https://github.com/cmbruns""><code>@​cmbruns</code></a>]</li>; <li>Fixed raising OSError in _safe_read when size is greater than SAFEBLOCK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5872"">#5872</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>WebP: Fix memory leak during decoding on failure <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5798"">#5798</a> [<a href=""https://github.com/ilai-deutel""><code>@​ilai-deutel</code></a>]</li>; <li>Do not prematurely return in ImageFile when saving to stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5665"">#5665</a> [<a href=""https://github.com/infmagic2047""><code>@​infmagic2047</code></a>]</li>; <li>Added support for top right and bottom right TGA orientations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5829"">#5829</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected ICNS file length in header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5845"">#5845</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Block tile TIFF tags when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5839"">#5839</a> [<a href=""https://github.com/radarhere""><code>@​radarher",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:6708,depend,dependabot,6708,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"equest <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7553"">#7553</a> from bgilbert/jpeg-rgb</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/aed764fe8404926472499208a39e5bf90d861b2a""><code>aed764f</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f8df5303fa9daf40cf8bfe232403cb40389d8f8f""><code>f8df530</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7672"">#7672</a> from nulano/imagefont-negative-crop</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/24e9485e6bb733a1a816f228dc75fd0086a93e19""><code>24e9485</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7671"">#7671</a> from radarhere/imagetransform</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.0.1...10.2.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.0.1&new-version=10.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` w",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:15260,Depend,Dependabot,15260,https://qutip.org,https://github.com/qutip/qutip/pull/2302,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"equest <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7672"">#7672</a> from nulano/imagefont-negative-crop</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/24e9485e6bb733a1a816f228dc75fd0086a93e19""><code>24e9485</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7671"">#7671</a> from radarhere/imagetransform</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.0.1...10.2.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.0.1&new-version=10.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:15724,depend,dependabot,15724,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['depend'],['dependabot']
Integrability,"ere""><code>@​radarhere</code></a>]</li>; <li>Removed EXIF prefix when saving WebP <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6582"">#6582</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Pad IM palette to 768 bytes when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6579"">#6579</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added DDS BC6H reading <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6449"">#6449</a> [<a href=""https://github.com/ShadelessFox""><code>@​ShadelessFox</code></a>]</li>; <li>Added support for opening WhiteIsZero 16-bit integer TIFF images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6642"">#6642</a> [<a href=""https://github.com/JayWiz""><code>@​JayWiz</code></a>]</li>; <li>Raise an error when allocating translucent color to RGB palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6654"">#6654</a> [<a href=""https://github.com/jsbueno""><code>@​jsbueno</code></a>]</li>; <li>Moved mode check outside of loops <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6650"">#6650</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added reading of TIFF child images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6569"">#6569</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved ImageOps palette handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6596"">#6596</a> [<a href=""https://github.com/PososikTeam""><code>@​PososikTeam</code></a>]</li>; <li>Defer parsing of palette into colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6567"">#6567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Apply transparency to P images in Imag",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:7893,depend,dependabot,7893,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"ere""><code>@​radarhere</code></a>]</li>; <li>Round box position to integer when pasting embedded color <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6517"">#6517</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed EXIF prefix when saving WebP <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6582"">#6582</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Pad IM palette to 768 bytes when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6579"">#6579</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added DDS BC6H reading <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6449"">#6449</a> [<a href=""https://github.com/ShadelessFox""><code>@​ShadelessFox</code></a>]</li>; <li>Added support for opening WhiteIsZero 16-bit integer TIFF images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6642"">#6642</a> [<a href=""https://github.com/JayWiz""><code>@​JayWiz</code></a>]</li>; <li>Raise an error when allocating translucent color to RGB palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6654"">#6654</a> [<a href=""https://github.com/jsbueno""><code>@​jsbueno</code></a>]</li>; <li>Moved mode check outside of loops <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6650"">#6650</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added reading of TIFF child images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6569"">#6569</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved ImageOps palette handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6596"">#6596</a> [<a href=""https://github.com/PososikTeam""><code>@​PososikTeam</code></a>]</li>; <li>Defer parsing of ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:7663,depend,dependabot,7663,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"ere</code></a>]</li>; <li>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Pass SAMPLEFORMAT to libtiff <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5848"">#5848</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added rounding when converting P and PA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5824"">#5824</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Image.NONE is only used for resampling and dithers <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5908"">#5908</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Add Tidelift alignment action and badge <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5763"">#5763</a> [<a href=""https://github.com/aclark4life""><code>@​aclark4life</code></a>]</li>; <li>Replaced further direct invocations of setup.py <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5906"">#5906</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:4283,depend,dependabot,4283,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"ere]</p>; </li>; <li>; <p>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a>; [radarhere]</p>; </li>; <li>; <p>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a>; [hugovk]</p>; </li>; <li>; <p>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a>; [radarhere]</p>; </li>; <li>; <p>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a>; [m-shinder, radarhere]</p>; </li>; <li>; <p>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a>; [cmbruns, radarhere]</p>; </li>; <li>; <p>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/82541b6dec8452cb612067fcebba1c5a1a2bfdc8""><code>82541b6</code></a> 9.0.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cae5ac495badd7c7ecfad8223a08f55f5d2eaacb""><code>cae5ac4</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5924"">#5924</a> from radarhere/cves</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/ed4cf7813777ad8478cac46f448bc45416a2a99e""><code>ed4cf78</code></a> CVEs TBD</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d7f60d1d5a746eb01d4cb3c7fb05b6593f46b0f5""><code>d7f60d1</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923<",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:13158,depend,dependabot,13158,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"erge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><code>1059eb5</code></a> If appended EOI did not work, do not keep trying</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.3.2&new-version=9.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:16347,depend,dependabot-automerge-start,16347,https://qutip.org,https://github.com/qutip/qutip/pull/1760,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"ers\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278046 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: rhs_reuse : pyx filenames match for rhs_reus= True; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyx",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:1936,depend,depends,1936,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"ers\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278047 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: state with td list str H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_suppo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:6365,depend,depends,6365,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"ers\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278048 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: unitary operator with td list str H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.r",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:10867,depend,depends,10867,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"ers\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278049 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: state with td interp H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:15414,depend,depends,15414,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"ers\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278050 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: unitary operator with td interp H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.rel",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:19912,depend,depends,19912,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"ers\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278051 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: compare state and unitary operator evo - list str td; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:24454,depend,depends,24454,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"ers\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278052 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: Steady state: Driven cavity - power-gmres solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_steadystate.py"", line 490, in test_driven_cavity_power_gmres; use_precond=1); File ""C:\Users\MTS-144\A",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:29043,depend,depends,29043,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"ers\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_rhs_reuse.py"", line 53, in test_rhs_reuse; out1 = qt.mesolve(H, psi0,tlist, e_ops=e_ops); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\mesolve.py"", line 336, in mesolve; e_ops, args, options, progress_bar); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py""",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:3827,depend,depends,3827,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"ers\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 190, in test_04_1_state_with_list_str_H; td_args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 64, in check_evolution; args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 185, in se",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:8239,depend,depends,8239,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"ers\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 207, in test_04_2_unitary_with_list_func_H; td_args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 67, in check_evolution; output = sesolve(H, U0, tlist, args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:12752,depend,depends,12752,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"ers\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 226, in test_05_1_state_with_interp_H; td_args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 64, in check_evolution; args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 185, in seso",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:17286,depend,depends,17286,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"ers\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 245, in test_05_2_unitary_with_interp_H; td_args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 67, in check_evolution; output = sesolve(H, U0, tlist, args=td_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qut",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:21795,depend,depends,21795,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"ers\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 354, in test_06_4_compare_state_and_unitary_list_str; normalize=False, td_args=td_args, tol=5e-5); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_sesolve.py"", line 255, in compare_evolution; options=options,args=td_args); File ""C:\Users\MTS-144\Ana",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:26356,depend,depends,26356,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['depend'],['depends']
Integrability,"es in each respective case. The reason the tests are a little bit slow compared to, e.g., the tests in `TestMESolveTDDecay` is the computation of the fidelity of the states at all the different times. If you think the tests are too slow, i can change them, and for example only check the fidelity of the final state. As a side note: As I wrote this new functionality, I also ran some simple tests comparing a pure python implementation of the right hand side for `_mesolve_const` to the cython implementation (I did this because I was considering how much cython code I had to write, or if a pure python implementation of the new functionality would suffice). I actually found that a pure python implementation was as fast (or maybe slightly _faster_) than the cython implementation. The pure python implementation of the right hand side is simply (see lines 767-769 of mesolve.py). ``` python; def _ode_rho_test(t, rho, data):; # for performance comparison of cython code; return data*(np.transpose(rho)); ```. Here is a plot of the performance compare to the standard cython implementation for a very simple test. The benchmark was a damped-cavity JC-model with Hilbert space dimension 4 for the cavity, integrated up to ""integration time"". ""run time"" is the real run time on my laptop. ![benchmark](https://cloud.githubusercontent.com/assets/2354542/11615553/48fe8604-9c32-11e5-83b9-2de366bd3cef.png). Since there is no big difference between the cython implementation and the pure python implementation (if anything, the pure python implementation is slightly faster), maybe it makes sense to replace the call to `cy_ode_rhs` with a call to `_ode_rhs_test` (see lines 744 to 747 in mesolve.py)? This makes the code a tiny bit easier to read. Of course, this was a single, very simplistic test. Sorry about all the merge commits. I'm still learning good workflow for this type of feature branch. Will use rebasing more in the future. Let me know if you have any questions about the implementation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/404:1694,integrat,integrated,1694,https://qutip.org,https://github.com/qutip/qutip/pull/404,2,['integrat'],"['integrated', 'integration']"
Integrability,"es/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.0.1&new-version=10.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:16546,depend,dependabot,16546,https://qutip.org,https://github.com/qutip/qutip/pull/2302,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"es/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.2.0&new-version=10.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:16522,depend,dependabot,16522,https://qutip.org,https://github.com/qutip/qutip/pull/2381,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,es/numpy/__init__.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/nu,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:8323,depend,depends,8323,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,es/numpy/__init__.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-package,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:8162,depend,depends,8162,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"essFox""><code>@​ShadelessFox</code></a>]</li>; <li>Added support for opening WhiteIsZero 16-bit integer TIFF images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6642"">#6642</a> [<a href=""https://github.com/JayWiz""><code>@​JayWiz</code></a>]</li>; <li>Raise an error when allocating translucent color to RGB palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6654"">#6654</a> [<a href=""https://github.com/jsbueno""><code>@​jsbueno</code></a>]</li>; <li>Moved mode check outside of loops <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6650"">#6650</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added reading of TIFF child images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6569"">#6569</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved ImageOps palette handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6596"">#6596</a> [<a href=""https://github.com/PososikTeam""><code>@​PososikTeam</code></a>]</li>; <li>Defer parsing of palette into colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6567"">#6567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Apply transparency to P images in ImageTk.PhotoImage <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6559"">#6559</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use rounding in ImageOps contain() and pad() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6522"">#6522</a> [<a href=""https://github.com/bibinhashley""><code>@​bibinhashley</code></a>]</li>; <li>Fixed GIF remapping to palette with duplicate entries <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6548"">#6548</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:8509,depend,dependabot,8509,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"ets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95"">GHSA-h5c8-rqwp-cp95</a>. You are affected if you are using <code>xmlattr</code> and passing user input as attribute keys.</li>; <li>Changes: <a href=""https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3"">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3</a></li>; <li>Milestone: <a href=""https://github.com/pallets/jinja/milestone/15?closed=1"">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/main/CHANGES.rst"">jinja2's changelog</a>.</em></p>; <blockquote>; <h2>Version 3.1.3</h2>; <p>Released 2024-01-10</p>; <ul>; <li>Fix compiler error when checking if required blocks in parent templates are; empty. :pr:<code>1858</code></li>; <li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>; <li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks; more helpful. :pr:<code>1918</code></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1""><code>d9de4bb</code></a> release version 3.1.3</li>; <li><a href=""https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc""><code>50124e1</code></a> skip test pypi</li>; <li><a href=""https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b""><code>9ea7222</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde""><code>da703f7</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/bce174692547464512383ec40e0f8338b8811983""><code>bce1746</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/7277d8068be593deab3555c7c14f974ada373a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:1338,message,messages,1338,https://qutip.org,https://github.com/qutip/qutip/pull/2291,1,['message'],['messages']
Integrability,"eutel</code></a>]</li>; <li>Do not prematurely return in ImageFile when saving to stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5665"">#5665</a> [<a href=""https://github.com/infmagic2047""><code>@​infmagic2047</code></a>]</li>; <li>Added support for top right and bottom right TGA orientations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5829"">#5829</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected ICNS file length in header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5845"">#5845</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Block tile TIFF tags when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5839"">#5839</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added line width argument to ImageDraw polygon <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5694"">#5694</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not redeclare class each time when converting to NumPy <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5844"">#5844</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only prevent repeated polygon pixels when drawing with transparency <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5835"">#5835</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix pushes_fd method signature <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5833"">#5833</a> [<a href=""https://github.com/hoodmane""><code>@​hoodmane</code></a>]</li>; <li>Add support for pickling TrueType fonts <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5826"">#5826</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]<",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:7818,depend,dependabot,7818,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"ext.build_ext.run(self); 187 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in run(self); 339 # Now actually compile and link everything.; --> 340 self.build_extensions(); 341 . ~/opt/anaconda3/lib/python3.7/site-packages/Cython/Distutils/old_build_ext.py in build_extensions(self); 194 # Call original build_extensions; --> 195 _build_ext.build_ext.build_extensions(self); 196 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in build_extensions(self); 448 else:; --> 449 self._build_extensions_serial(); 450 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in _build_extensions_serial(self); 473 with self._filter_build_errors(ext):; --> 474 self.build_extension(ext); 475 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in build_extension(self, ext); 533 extra_postargs=extra_args,; --> 534 depends=ext.depends); 535 . ~/opt/anaconda3/lib/python3.7/distutils/ccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 573 continue; --> 574 self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); 575 . ~/opt/anaconda3/lib/python3.7/distutils/unixccompiler.py in _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts); 119 except DistutilsExecError as msg:; --> 120 raise CompileError(msg); 121 . CompileError: command 'gcc' terminated by signal 6. During handling of the above exception, another exception occurred:. ImportError Traceback (most recent call last); ~/opt/anaconda3/lib/python3.7/site-packages/qutip/qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 79 import_code = compile(codeString, '<string>', 'exec'); ---> 80 exec(import_code, locals()); 81 except (ModuleNotFoundError, ImportError) as e:. <string> in <module>. ~/opt/anaconda3/lib/python3.7/site-packages/pyximport/pyximport.py in load_module(self, fullname); 461 build_inplace=self.inplace,; --> 462 language_level=self.language_level); 463 return module. ~/o",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290:4454,depend,depends,4454,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290,1,['depend'],['depends']
Integrability,"ext.build_ext.run(self); 187 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in run(self); 339 # Now actually compile and link everything.; --> 340 self.build_extensions(); 341 . ~/opt/anaconda3/lib/python3.7/site-packages/Cython/Distutils/old_build_ext.py in build_extensions(self); 194 # Call original build_extensions; --> 195 _build_ext.build_ext.build_extensions(self); 196 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in build_extensions(self); 448 else:; --> 449 self._build_extensions_serial(); 450 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in _build_extensions_serial(self); 473 with self._filter_build_errors(ext):; --> 474 self.build_extension(ext); 475 . ~/opt/anaconda3/lib/python3.7/distutils/command/build_ext.py in build_extension(self, ext); 533 extra_postargs=extra_args,; --> 534 depends=ext.depends); 535 . ~/opt/anaconda3/lib/python3.7/distutils/ccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 573 continue; --> 574 self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); 575 . ~/opt/anaconda3/lib/python3.7/distutils/unixccompiler.py in _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts); 119 except DistutilsExecError as msg:; --> 120 raise CompileError(msg); 121 . ImportError: Building module cqobjevo_compiled_coeff_1212362029172 failed: [""distutils.errors.CompileError: command 'gcc' terminated by signal 6\n""]. The above exception was the direct cause of the following exception:. Exception Traceback (most recent call last); <ipython-input-4-773196c7ecc9> in <module>; 6 U_list = []; 7 for (i,t) in enumerate(t_list):; ----> 8 U = propagator(H,t, [], args); 9 U_list.append(U); 10 print(i). ~/opt/anaconda3/lib/python3.7/site-packages/qutip/propagator.py in propagator(H, t, c_op_list, args, options, unitary_mode, parallel, progress_bar, _safe_mode, **kwargs); 184 output = sesolve(H2, psi0, tlist, [],; 185 args=args, opt",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290:8046,depend,depends,8046,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290,1,['depend'],['depends']
Integrability,"f00d2390b9044bd655753f39234c""><code>6f1608d</code></a> Created a new release</li>; <li><a href=""https://github.com/pypa/wheel/commit/cf8f5ef50e32b836c4ffb43af68107f78dca8d80""><code>cf8f5ef</code></a> Moved news item from PR <a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a> to its proper place</li>; <li><a href=""https://github.com/pypa/wheel/commit/9ec201660fa07ee0714edd17c979a7039ea852a4""><code>9ec2016</code></a> Removed install dependency on setuptools (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/483"">#483</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/747e1f6090547abcf65108c5a229cbe21a64a2ae""><code>747e1f6</code></a> Fixed PyPy SOABI parsing (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/76275484bc0de72d1f56601dbba3e816fc2f00c6""><code>7627548</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/480"">#480</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/7b9e8e1022b9c850756ef34bc1a4a88042988a86""><code>7b9e8e1</code></a> Test on Python 3.11 final</li>; <li><a href=""https://github.com/pypa/wheel/commit/a04dfef41be0ab10eadbb2ed5d02b600682dc487""><code>a04dfef</code></a> Updated the pypi-publish action</li>; <li><a href=""https://github.com/pypa/wheel/commit/94bb62cb182023ac6586c5510ae9031ea56bd682""><code>94bb62c</code></a> Fixed docs not building due to code style changes</li>; <li><a href=""https://github.com/pypa/wheel/commit/d635664abe560d48723cfc3b73c52ad8c906760a""><code>d635664</code></a> Updated the codecov action to the latest version</li>; <li><a href=""https://github.com/pypa/wheel/commit/fcb94cd51f7dfd40d88dff37415750d9e3638d3b""><code>fcb94cd</code></a> Updated <strong>version</strong> to match the release</li>; <li>Additional commits viewable in <a href=""https://github.com/pypa/wheel/compare/0.37.0...0.38.1"">compare view</a></li>; </ul",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:3867,depend,dependabot,3867,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['depend'],['dependabot']
Integrability,"f05f""><code>00b25fd</code></a> Hide UserWarning in logs</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/05b175ef88c22f5c416bc9b8d5b897dea1abbf2c""><code>05b175e</code></a> Tighter test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/13f2c5ae14901c89c38f898496102afd9daeaf6d""><code>13f2c5a</code></a> Prevent DOS with large SAMPLESPERPIXEL in Tiff IFD</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.1...9.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.1&new-version=9.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:15626,depend,dependabot,15626,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"f</code></a> Add 8.3.2 (2021-09-02) [CI skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e42238637651f191c2fc6e3f4024348c126e0ccc""><code>e422386</code></a> Add release notes for Pillow 8.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/08dcbb873217874eee0830fc5aaa1f231c5af4fa""><code>08dcbb8</code></a> Pillow 8.3.2 supports Python 3.10 [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.2.0...8.3.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.2.0&new-version=8.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:9301,depend,dependabot,9301,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"f=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a>; [radarhere]</p>; </li>; <li>; <p>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a>; [t-vi, radarhere]</p>; </li>; </ul>; <h2>8.3.0 (2021-07-01)</h2>; <ul>; <li>; <p>Use snprintf instead of sprintf. CVE-2021-34552 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a>; [radarhere]</p>; </li>; <li>; <p>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a>; [kmilos]</p>; </li>; <li>; <p>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a>; [baletu, radarhere, newpanjing, hugovk]</p>; </li>; <li>; <p>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a>; [gofr, radarhere]</p>; </li>; <li>; <p>Replaced xml.etree.ElementTree <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5565"">#5565</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8013f130a5077b238a4346b73e149432b180a8ea""><code>8013f13</code></a> 8.3.2 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/23c7ca82f09df6ba1047d2d96714eb825f0d7948""><code>23c7ca8</code></a> Update CHANGES.rst</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8450366be331762ae327036e3c6658c517b05638""><code>8450366</code></a> Update release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a0afe89990f5ba40a019afc2f22e1b656f8cfd03""><code>a0afe89</code></a> Update test case</li>; <li><a href=""https://",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:6673,depend,dependabot,6673,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"f=""https://github.com/urllib3/urllib3/commit/3c0148048a523325819377b23fc67f8d46afc3aa""><code>3c01480</code></a> [1.26] Run coverage even with failed jobs</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d94029b7e2193ff47b627906a70e06377a09aae8""><code>d94029b</code></a> Release 1.26.16</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/18e92145e9cddbabdf51c98f54202aa37fd5d4c8""><code>18e9214</code></a> Use trusted publishing for PyPI</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d25cf83bbae850a290fe34ed1610ae55c0558b36""><code>d25cf83</code></a> [1.26] Fix invalid test_ssl_failure_midway_through_conn</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/25cca389496b86ee809c21e5b641aeaa74809263""><code>25cca38</code></a> [1.26] Fix test_ssl_object_attributes</li>; <li>Additional commits viewable in <a href=""https://github.com/urllib3/urllib3/compare/1.26.14...1.26.17"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.14&new-version=1.26.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:4971,Depend,Dependabot,4971,https://qutip.org,https://github.com/qutip/qutip/pull/2236,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"fa3bb04c""><code>facf3af</code></a> Added release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2a93aba5cfcf6e241ab4f9392c13e3b74032c061""><code>2a93aba</code></a> Use strncpy to avoid buffer overflow</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a670597bc30e9d489656fc9d807170b8f3d7ca57""><code>a670597</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.2.0...10.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.2.0&new-version=10.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:15700,depend,dependabot,15700,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['depend'],['dependabot']
Integrability,"fe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. I know this is quite an old OS and Python version, but that's what I have available. Numpy 1.24 should be supported in Python 3.8.10. ### Code to Reproduce the Bug. ```shell; $ python3 -m venv /tmp/test-venv. $ source /tmp/test-venv/bin/activate. $ pip install --upgrade pip; Collecting pip; Using cached pip-24.0-py3-none-any.whl (2.1 MB); Installing collected packages: pip; Attempting uninstall: pip; Found existing installation: pip 20.0.2; Uninstalling pip-20.0.2:; Successfully uninstalled pip-20.0.2; Successfully installed pip-24.0. $ pip list; Package Version; ------------- -------; pip 24.0; pkg_resources 0.0.0; setuptools 44.0.0. $ pip install qutip; Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if it's of any help. <details><summary>Output</summary>. ```; pip install --verbose qutip; Using pip 24.0 from /tmp/test-venv/lib/python3.8/site-packages/pip (python 3.8); Collecting qutip; Using cached qutip-5.0",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:1200,depend,dependencies,1200,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['dependencies']
Integrability,"fi/python-certifi/commit/b8eb5e9af9143b22b7f651942b393e369ed4c52a""><code>b8eb5e9</code></a> 2022.06.15.1</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/47fb7ab715965684e035292d2ad3386aabdc4d25""><code>47fb7ab</code></a> Fix deprecation warning on Python 3.11 (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/199"">#199</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/b0b48e059995f455ac1e79b3ad373ad4ef355516""><code>b0b48e0</code></a> fixes <a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/198"">#198</a> -- update link in license</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/9d514b4cad79357071c89d7dc4dc1b4df72bb997""><code>9d514b4</code></a> 2022.06.15</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4151e8849481f396537c34812068e89b32731e52""><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/196"">#196</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2020.12.05...2022.12.07"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2020.12.5&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recrea",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035:1968,depend,dependabot,1968,https://qutip.org,https://github.com/qutip/qutip/pull/2035,1,['depend'],['dependabot']
Integrability,"ficient resolution of joiner contexts</li>; <li><a href=""https://github.com/kjd/idna/commit/1b121483ed04d9576a1291758f537e1318cddc8b""><code>1b12148</code></a> Update ossf/scorecard-action to v2.3.1</li>; <li><a href=""https://github.com/kjd/idna/commit/d516b874c3388047934938a500c7488d52c4e067""><code>d516b87</code></a> Update Github actions/checkout to v4</li>; <li><a href=""https://github.com/kjd/idna/commit/c095c75943413c75ebf8ac74179757031b7f80b7""><code>c095c75</code></a> Merge branch 'master' into dev</li>; <li><a href=""https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98""><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>; <li><a href=""https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201""><code>5918a0e</code></a> Merge branch 'master' into dev</li>; <li>Additional commits viewable in <a href=""https://github.com/kjd/idna/compare/v3.4...v3.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will canc",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:3874,Depend,Dependabot,3874,https://qutip.org,https://github.com/qutip/qutip/pull/2392,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"fidelity() returns >1 by a significant amount for certain pure states. States are normalised, and taking the inner product returns 1. Code below provides two examples of states which give fidelity >1 with themselves. ```; #to test qutip's fidelity routine; import qutip as qu. psi0=qu.Qobj(). i=0; while i<=1:; j=0; while j<=1:; psi0+=qu.state_number_qobj([2,2],[i,j]) #even superposition of qubit states; j+=1; i+=1. psi0=psi0.unit() #normalise. print(qu.fidelity(psi0,psi0)); print((psi0.dag()*psi0).norm()**2); print(""\n""). psi0=qu.tensor(psi0,qu.basis(10,1)) #tensor product with Fock state. print(qu.fidelity(psi0,psi0)); print((psi0.dag()*psi0).norm()**2). ```. Output:. ```; 1.00000002107; 1.0. 1.00000003485; 1.0; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/361:248,rout,routine,248,https://qutip.org,https://github.com/qutip/qutip/issues/361,1,['rout'],['routine']
Integrability,"fine the `__jax_array__` interface). While I think that Qobj is a very qutip-like principle, I see no problems in namespacing. > 2- having the check in __init__ . Again, I think that your observation is right. I thought about it only after I submitted the post above. The way numpy does it is that `__array__(self, dtype)` takes only one argument, but I think we can do better and better respect the API set by qutip. ; That is why I was suggesting that `object.__qutip_qobj__` should not return a Qobj directly, but rather the data needed by QuTiP to construct a Qobj, and qutip should be free to re-organize it afterwards as he likes. . > 3 - we need to take care to do this in a way that still allows QuTiP to iterate and improve Qobj.__init__ between major versions. You could for example require that `__qutip_qobj__(self, version, *kwargs)` takes in a version of the API? I believe that is what numpy does in `__array_interface__`. And it's on implementers of the interface the burden of checking the api version and throwing an error if it's not supported. Or the inverse, where implementers return whatever data they return and a version of the API they are using, and qutip can throw an error if that is an older version. The latter would make it harder to support multiple versions of qutip in the implementers, but I would not worry too much about it. You can throw an error saying that this other package is not supported and you should either nag it's developers or downgrade qutip. I'm not particularly worried about the blame: even if the error is thrown from qutip, if the message is clear enough it will be clear that the fault is in the downstream implementors of the API. -- ; About keyword handling: copy-pasting the list of kwargs of `Qobj`...; ```python; inpt : array_like = Data for vector/matrix representation of the quantum object.; dims : list = Dimensions of object used for tensor products.; shape : list = Shape of underlying data structure (matrix shape).; copy : bool ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825710810:1183,interface,interface,1183,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825710810,1,['interface'],['interface']
Integrability,"from bgilbert/jpeg-rgb</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/aed764fe8404926472499208a39e5bf90d861b2a""><code>aed764f</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f8df5303fa9daf40cf8bfe232403cb40389d8f8f""><code>f8df530</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7672"">#7672</a> from nulano/imagefont-negative-crop</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/24e9485e6bb733a1a816f228dc75fd0086a93e19""><code>24e9485</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7671"">#7671</a> from radarhere/imagetransform</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.0.1...10.2.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.0.1&new-version=10.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` wi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:15359,depend,dependency-name,15359,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['depend'],['dependency-name']
Integrability,"function to have an exponential number of versions for every possible combination of inputs, but only to have specialisations for the most common data combinations. This concept is the ""data layer"". All code examples in this PR are prefixed with. ```python; >>> from qutip.core import data; ```. ## Specification. The core to achieving this is fast, fully specified inter-conversion between all known data types, and efficient multiple-dispatch for mathematical operations. There are then four principle components of the data-layer:. 1. a creation routine which returns an appropriate data-layer type given some arbitrary Python object (`data.create`); 2. a routine which can perform the conversion from any data-layer type to any other data-layer type (`data.to`); 3. completely specialised mathematical operations (e.g. `data.add_csr_dense_dense(CSR, Dense) -> Dense`); 4. an object which provides multiple dispatch operations on its input arguments to use an exact specialisation (defined in item 3) if known, or uses the conversion routine (item 2) to convert the inputs into ones matching a specialisation if not: `data.Dispatcher`. The exported mathematical functions will all be instances of this type. The minimum work needed to define a new data-layer type is to provide `data.to` with two conversion functions; one into the new type from a current data-layer type, and one which converts the new type _into_ a current data-layer type. Once this is done, every single QuTiP component will be able to use the new data-layer type, although until specialisations are given which use it, it will always be achieved by conversion to another type, and conversion back. In this way, a new type can be added incrementally, with only the most common operations needing to be defined to get good efficiency. **Important caveat:** the data layer operates only on _exact_ types; subclasses of defined types will be treated as completely different types. This is to do with keeping the computational comp",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338:1796,rout,routine,1796,https://qutip.org,https://github.com/qutip/qutip/pull/1338,1,['rout'],['routine']
Integrability,"g propagation steps from two different propagations). I'm also not sure what using `QobjEvo` does: In the benchmarking, there didn't seem to be any difference whether I wrap my nested lists into `QobjEvo` or not. Is there something specific that `QobjEvo` should enable that I can't do with nested lists?. > QuTiP 5 is (probably) going to formalise that (^) sort of low-level calling convention of `mesolve`, but it should work already. The new one look a bit different because instead of doing the setup very manually, there'll be a ""low-level"" function to prepare a master equation problem (and a Schrodinger equation one, etc), and then there'll be a `step` method instead of calling the ""high-level"" interface function `mesolve`, but functionally it'll do largely the same, just with a lot less data copying than the current form has to do. In the new system, it's likely that the function `mesolve` itself will keep the exact same interface it has now, just internally most of its processing will be split into modular components, each of which will be accessible (with different names) to the user to compose themselves, if they want low-level access. That sounds perfect! I might wait for QuTiP 5 to come out, or if these things are already in `master`, I'll see if I can maybe revisit `DensityMatrixODEPropagator` and maybe also add something for the Hilbert space case (whatever `sesolve` is doing internally). As an aside, I was actually surprised how much better `DensityMatrixODEPropagator` performs compared to looping over `mesolve` (`In [29]` vs `In [21]`): Since the `DensityMatrixODEPropagator` also re-initializes `scipy.integrate.ode` in every time steps, it would seem like the only difference between the two is the overhead of `mesolve` deciding that it has to handle the specific case of density matrix propagation. That might be something to keep an eye on in future QuTiP development: Ideally, calling `mesolve` would have negligible overhead compared to manually doing whatev",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:8430,interface,interface,8430,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['interface'],['interface']
Integrability,g qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; [ 1/31] Cythonizing qutip/core/_brtools.pyx; [ 2/31] Cythonizing qutip/core/cy/coefficient.pyx; [ 3/31] Cythonizing qutip/core/cy/math.pyx; [ 4/31] Cythonizing qutip/core/data/add.pyx; [ 5/31] Cythonizing qutip/core/data/base.pyx; [ 6/31] Cythonizing qutip/core/data/csr.pyx; [ 7/31] Cythonizin,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:8796,depend,depends,8796,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"g we're definitely going to look into after the initial release of 5.0. Also, there are already several disparate functions in QuTiP that provide sort-of similar functionality, and I think we need to have a proper go at tidying them all up into one cohesive interface. This includes `subsystem_apply` (most similar to this), but also `ptrace` and `partial_tranpose`, which can be seen as special cases of this exact same type of tensor contraction (not to mention `tensor_contract`!). The other thing from a code perspective is that this doesn't use the data-layer in the intended manner. A lot of this may be because our documentation of the data-layer isn't readily available yet (we weren't expecting interest this early!). It does individual detection on two different types, rather than creating a `Dispatcher` to handle the multiple dispatch over potentially different data types of the two inputs. I would imagine that a better form of organisation for this sort of routine, which will be able to handle arbitrary tensor-network operations, will end up being made up of two components:; 1. a `Dispatcher` version of something akin to `einsum`, with a couple of limitations; 2. a high-level wrapper function to handle the specific case of local multiplication, which examines the dimensions and target specifiers to produce the input to the `einsum`-like function, then calls the `Dispatcher` with this information. I think this form would likely be preferable for several reasons:; 1. it will allow arbitrary mixing of different data types (`CSR` complete space and `Dense` operator, or both `CSR`, or whatever), with the allowed conversions respecting the global dispatcher rules, not having this function use a different, special configuration; 2. it will mean that the function can also be implemented by plug-in data types (TF/CuPy/etc), installed separately to QuTiP; 3. it will be more general, and easier to maintain; the current `subsystem_apply`, `partial_transpose`, `ptrace`, `tenso",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566:2610,rout,routine,2610,https://qutip.org,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566,1,['rout'],['routine']
Integrability,"g-process-but-not-a-multipro), but these add extra overhead to implementing multiprocessing and don't work with methods that are not functionally static. . Given that these scattering calculations are among the most computationally expensive in QuTiP, I don't think that making parallelism more difficult to work with is a direction we should go in. I am confident that, with significant effort, I can make a clean and parallelized way to perform a parameter search in a class-based version of this module; however, this will take some time, especially given that developing this module is no longer my primary research focus in grad school. There are a few ways we could proceed:; 1. I could refactor the functions into a `Scatterer` class and export only the class, without adding dedicated multiprocessing support. This would make parallelizing parameter searches much more difficult - see my thoughts above.; 2. I could export both the flat functions and the `Scatterer` class (sans multiprocessing) which wraps these functions, and users could use the former for parallel searches. I don't like this option, since it clutters up the module and introduces multiple ways to do things. (""There should be one-- and preferably only one --obvious way to do it."" ~ [the Zen of Python](https://www.python.org/dev/peps/pep-0020/#the-zen-of-python)); 3. We could merge the current version of the module as-is and I can refactor into a class with properly-implemented parallelism in a later version. (I think it would be best to combine this with other similar API-breaking refactorings in v5.0.). Personally, I think option 3 is the best way to proceed. I am committed to maintaining and updating this module in the long term and I do think that refactoring much of QuTiP to be more object-oriented will be a positive change to the framework. However, consider that: (1) properly rewriting this as a class-based module without losing functionality will take some time, (2) there are many other modules (for",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-386114501:2129,wrap,wraps,2129,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-386114501,1,['wrap'],['wraps']
Integrability,g.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:8481,depend,depends,8481,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,g.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; [ 1/31] Cythonizing qutip/core/_brtensor.pyx; [ 2/31] Cythonizing qutip/core/_brtools.pyx; [ 3/31] Cythonizing qutip/core/cy/coefficient.pyx; [ 4/31] Cythonizing qutip/core/cy/math.pyx; [ 5/31] Cythonizing qutip/core/data/add.pyx; [ 6/31] Cythonizing qutip/core/data/base.pyx; [ 7/31] Cythonizing qutip/core/data/csr.pyx; [ 8/31] Cythonizing qutip/core/data/dense.pyx; [ 9/31] Cythonizing qutip/core/data/dia.pyx; [10/31] Cythonizing qutip/core/data/dispatch.pyx; [11/31] Cythonizing qutip/core/data/matmul.pyx; [12/31] Cythonizing qutip/core/data/mul.pyx; [13/31] Cythonizing qutip/core/data/norm.pyx; [14/31,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:8677,depend,depends,8677,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,"geMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/75b69dd239a4647032f67a80d9b444228af2b736""><code>75b69dd</code></a> Dont need to pin for GHA</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cd938a7744cb46e2ea525a0c3dd79aa08f98c150""><code>cd938a7</code></a> Autolink CWE numbers with sphinx-issues</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2e9c461ca417083c43145a991bf9e1ec93237d89""><code>2e9c461</code></a> Add CVE IDs</li>; <li>See full diff in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.0&new-version=9.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:3774,Depend,Dependabot,3774,https://qutip.org,https://github.com/qutip/qutip/pull/1835,1,['Depend'],['Dependabot']
Integrability,"genbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (tau) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (Qobj) ... ok; contro",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576:1312,depend,dependent,1312,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576,1,['depend'],['dependent']
Integrability,"generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ... # Error; solver.options = opt; ```; This is because changing options without the solver knowing will not take effect. I removed saving / storing options for now. It was mostly used to store openmp threshold, which is not supported.; I also propose to write the stored options as python code when we restore it. (`options = eval(repr(options))`, we may have some issue with circular import if called from `__init__.py`, but we can just write the `repr` of the `dict`.). While it's working fine as is, there are few point to discuss:; - Freezing options associated to solver work fine, but I see 2 alternatives:; - Options know they are used by a solver and inform it when modified. More complex but give the image that it just work. ; - All options instance are read-only. To change a key, you create a new options. Simple for us. To modify an existing options we could make it callable: `updated_options = old_options(atol=1e-5)`.; - Passing bad options keys or wrong options types (`mesolve(..., SeOptions)`) raise error, should we be less strict?; - Should we flatten SolverOptions.ode: ; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt['max_order_ns'] = 10; ```; And associated to it, where do we store default for integrators, per solver or per integrator.; - Do we add more sanity check to options values, or do we move `use_cython` to setting and remove the feature?. **Related PR**; It will cause conflict with #1710 and #1644. **Changelog**; Options classes using inheritance.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:4023,integrat,integrators,4023,https://qutip.org,https://github.com/qutip/qutip/pull/1812,2,['integrat'],"['integrator', 'integrators']"
Integrability,"ges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.4.0&new-version=10.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:14294,depend,dependabot,14294,https://qutip.org,https://github.com/qutip/qutip/pull/2237,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a> [<a href=""https://github.com/t-vi""><code>@​t-vi</code></a>]</li>; </ul>; <h2>8.3.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Use snprintf instead of sprintf <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Allow ICNS save on all opera",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:2036,depend,dependabot,2036,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"gmaz() + 1j * qt.sigmax(); initial = qt.basis(2, 1); res1 = qt.mesolve(H, qt.ket2dm(initial), [0, 1]); print(res1.final_state). L = qt.liouvillian(qt.sigmaz()) + 1j * qt.lindblad_dissipator(qt.sigmap()); res2 = qt.mesolve(L, initial, [0, 1]); print(res2.final_state); ```. ### Code Output. ```shell; Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dense, isherm=True; Qobj data =; [[-0.33333333+0.j 0.33333333-0.33333333j]; [-0.33333333-0.33333333j 0.66666667+0.j ]]. Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dense, isherm=True; Qobj data =; [[0.23467737+0.42957377j 0. +0.j ]; [0. +0.j 0.27582588-0.42957377j]]; ```. ### Expected Behaviour. For both states, `isherm` should be `False`. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+5fabdd3; Numpy Version: 1.26.3; Scipy Version: 1.12.0; Cython Version: 3.0.8; Matplotlib Version: 3.8.2; Python Version: 3.12.1; Number of CPUs: 20; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. The source of the issue is that `_prepare_state` ([link](https://github.com/qutip/qutip/blob/master/qutip/solver/solver_base.py#L86)) and `_restore_state` ([link](https://github.com/qutip/qutip/blob/master/qutip/solver/solver_base.py#L99)) of the `solver_base` module assume that the dynamics preserves the Hermiticity of the state. The `isherm` attribute of the initial state is saved and copied into the output state. We could try to detect whether the Hamiltonian is Hermitian / whether the Liouvillian is Hermiticity-preserving, but @Ericgig mentioned in https://github.com/qutip/qutip/pull/2408 that this solution could be difficult with time-dependent problems. As an aside, I just noticed another potential small issue. This code; ```; res3 = qt.mesolve(H, initial, [0, 1]); print(qt.ket2dm(res3.final_state)); ```; has a different output compared with the `res1` above (because `sesolve` is used, which can of course never produce non-Hermitian states).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2410:2030,depend,dependent,2030,https://qutip.org,https://github.com/qutip/qutip/issues/2410,1,['depend'],['dependent']
Integrability,"govk</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.0.0 (2022-01-02)</h2>; <ul>; <li>; <p>Restrict builtins for ImageMath.eval(). CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a>; [radarhere]</p>; </li>; <li>; <p>Ensure JpegImagePlugin stops at the end of a truncated file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a>; [radarhere]</p>; </li>; <li>; <p>Fixed ImagePath.Path array handling. CVE-2022-22815, CVE-2022-22816 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a>; [radarhere]</p>; </li>; <li>; <p>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a>; [radarhere]</p>; </li>; <li>; <p>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a>; [radarhere]</p>; </li>; <li>; <p>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a>; [radarhere]</p>; </li>; <li>; <p>Fixed palette index for zeroed color in FASTOCTREE quantize <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5869"">#5869</a>; [radarhere]</p>; </li>; <li>; <p>When saving RGBA to GIF, make use of first transparent palette entry <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5859"">#5859</a>; [radarhere]</p>; </li>; <li>; <p>Pass SAMPLEFORMAT to libtiff <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5848"">#5848</a>; [radarhere]</p>; </li>; <li>; <p>Added rounding when converting P and PA <a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:11059,depend,dependabot,11059,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"gq5x</li>; <li><a href=""https://github.com/ipython/ipython/commit/27943302db129464b33bae8cb6cfa552b52b46c2""><code>2794330</code></a> back to dev</li>; <li><a href=""https://github.com/ipython/ipython/commit/be343e755af76193909f13027d87561b1765b5ae""><code>be343e7</code></a> release 7.31.0</li>; <li><a href=""https://github.com/ipython/ipython/commit/0fcf2c43facb7ba5144cdcc47118aa1e55085c20""><code>0fcf2c4</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13428"">#13428</a> from meeseeksmachine/auto-backport-of-pr-13427-on-7.x</li>; <li><a href=""https://github.com/ipython/ipython/commit/b8db9b1371fff1b89d0f058e19a48a4ca7b93c51""><code>b8db9b1</code></a> Backport PR <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13427"">#13427</a>: wn 731</li>; <li><a href=""https://github.com/ipython/ipython/commit/7f253dcf7b1c3a791a98d44b0dfc848d62bd27df""><code>7f253dc</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13412"">#13412</a> from bnavigator/backport-inspect</li>; <li><a href=""https://github.com/ipython/ipython/commit/4f26796cf368d24edadbb3d62e052e6aa4ddc820""><code>4f26796</code></a> fix xxlimited_35 import name</li>; <li><a href=""https://github.com/ipython/ipython/commit/77ca4a6312374f0659fb6973925e5b696d5dc74e""><code>77ca4a6</code></a> don't run nose-based iptest on py310, only pytest</li>; <li><a href=""https://github.com/ipython/ipython/commit/533e5094aa36b51549cf6a316fc439c6404643c9""><code>533e509</code></a> back to decorator skip</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.22.0...7.31.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.22.0&new-version=7.31.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-depend",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780:1420,depend,dependabot,1420,https://qutip.org,https://github.com/qutip/qutip/pull/1780,1,['depend'],['dependabot']
Integrability,"gress bar if requested (or not a TTY)</li>; <li><a href=""https://github.com/python-babel/babel/commit/613dc1700f91c3d40b081948c0dd6023d8ece057""><code>613dc17</code></a> Make the import warnings about unsupported number systems less verbose</li>; <li>Additional commits viewable in <a href=""https://github.com/python-babel/babel/compare/v2.9.0...v2.9.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=babel&package-manager=pip&previous-version=2.9.0&new-version=2.9.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1695:3788,Depend,Dependabot,3788,https://qutip.org,https://github.com/qutip/qutip/pull/1695,1,['Depend'],['Dependabot']
Integrability,"h higher, and they perform a fair bit of setup/input handling, which comes at the price of some overhead, but which is negligible compared to the runtime cost for most meaningfully large systems. I'd then like to state that; - *I have never suggested to insert a mechanism to insert implicit conversion in the low-level operations.* ; - In this RFC in no way have I proposed to implement implicit conversion anywhere else then were is already done in qutip itself. All I stated was that `I played around with auto-converting input hamiltonians and jump operators in qutip.sesolve and mesolve to Qobj if they are not Qobj but support the interface. That is even nicer because we would get to use all of qutip solvers out of the box with our objects.`. ; - So implicitly I do have stated that I'd like to see implicit conversion being performed on high-level methods. I do see benefits for the whole ecosystem if we can start integrating more: qutip already has very advanced and feature-complete solvers, there are large benefits for other packages to exploit them without having to wrap them or ask users to write more complicated code. It means that all benefits and bug-fixes to qutip are instantly available to users of other packages too that rely on it. And I think that calling a conversion method at the beginning, which most of the time will do nothing will just be a tiny drop in the bucket of the overhead of those `large` functions. However, I don't want to argue that right now. All my proposal was about was having a way to play well with your `Qobj` constructor.; It seems to me you were eventually favourable to this, so I propose we focus the discussion only on this point, and leave aside implicit or explicit conversion discussions. . I'll gladly open another issue to discuss implicit conversion, if you want, or we could organise a small round table among a bunch of developers to talk about this on skype, but for now, all i'm asking, is to agree on the design of an interface to ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-913661687:2472,integrat,integrating,2472,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-913661687,2,"['integrat', 'wrap']","['integrating', 'wrap']"
Integrability,"h your approach. I’m simply trying to push for this to be something that will come out in a reasonable timeframe and not be something forgotten. > We've got to be concerned with backwards and forwards compatibility; what if a user wants to install and use QuTiP and a different library in the same environment without using them together, but can't even have them coexist because of version incompatibilities in optional conversion features?. I do understand your point, and I see how you want to be backward and forward compatible, however I don’t think that my proposal would break different tools in the same environment. What I propose would simply prevent `qutip.Qobj(otherlibraryobject)` from working (with an explicative error message) if `otherlibrary` does not support the same qobj interface version. Everything else would work the same. You can still import and use the two libraries independently without issues. It’s indeed possible to design around this and supporting at the same time different versions of the interface, however, and there’s value in doing so. > To me, this is absolutely one of the mistakes that Numpy made in their implementation, and we shouldn't be copying it. I don't know enough of the history behind numpy current api, but I see your point. however I'd like to reiterate that this is not what I am proposing. ; I think there is considerable difference between supporting arbitrary operations `new_obj = Qobj + netket_operator*5` (though if you are going to export dispatch hooks in `5.0`, this would be possible in a consistent way, I think) and `qutip.mesolve(netket_operator, ...)`. ; In the first, I do agree with your point that the nature python's `__add__/__radd__` is not commutative, leading to surprising behavior. From my point of view, no package really owns `+` so any conversion would be implicit.; But `qutip.groundstate(netket_operator)` is in itself an explicit cast. I am explicitly asking to qutip `please give me the ground state of this obj",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742:2261,interface,interface,2261,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742,1,['interface'],['interface']
Integrability,"han,. I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it seems that there is no way to make a PR to Wiki. I can also send you the markdown source code per email like this, but I’m not sure if it works as I expected. The following is the markdown source code:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:1024,integrat,integration,1024,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940,1,['integrat'],['integration']
Integrability,"hat a scalar is (which classes are scalars) and at what level do we define it (who is responsible for returning NotImplemented). Proposed solutions:; 1) Let the _specialisation_ return `NotImplemented` and set `isherm` only when `complex(other)` is possible. This defines what an scalar is at the _specialisation_ level. However:; - It may cause inconsistent behaviour where some operations are allowed for a data layer (`TfTensor` or any other) but not for another one. I would argue that all specialisations should accept the same input, although operations may be handled differently internally (for example, in tensorflow we want to keep the graph state).; - `NotImplemented` only makes sense for some special binary methods (`__add__`, `__lt__`, etc) as Python employs `NotImplemented` to try `other`'s binary method. My concern is that if the dispatcher is used by itself at some points of the code (such as for the solver) returning `NotImplemented` may cause wrong error messages or even unexpected behaviour with future specialisations ( for instance, although it now raises a deprecation warning, `NotImplemented` is considered as `True` when evaluated as a condition). It seems to me that we should avoid having `NotImplemented` in python space (except for arithmetic operations in a class where they are useful and always make sense).; ; 2) Simon suggested to define what a scalar is at the _dispatcher_ level (or something similar to this but correct me if I am wrong). This would require to have a function that casts any defined scalar to a complex scalar. The dispatcher would be responsible to ensure that the correct scalar gets passed appropriately to the specialisation and for returning not implemented if necessary. ; - This solves the inconsistency problem as you could register a ""new"" scalar and define how it gets cast to a python complex scalar with a function (in most of the times, if not always, this will be `complex(other)`). ; - This does _not_ solve having `NotImplem",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1620#issuecomment-889006152:1409,message,messages,1409,https://qutip.org,https://github.com/qutip/qutip/pull/1620#issuecomment-889006152,1,['message'],['messages']
Integrability,"he initial floquet modes, computing the propagator over one period, then using these to compute at other time, recomputing the propagator up to that time. When the modes at multiple times were needed, we could compute a list of them over one period using `floquet_modes_table`, but at least 2 computations over a period were needed. With the and the `Propagator` memoize capacities added in v5, only one computation of the propagator is required. Also with the table computation of v4, if a mode was not included in the table, the closest one was used. `fmesolve ` and `fsesolve` computed 100 slices over the period. It did not used the values in `tlist` and caused artifacts in the result. With `FloquetBasis`, the mode are always computed at the exact time. . I left the v4's functions with warnings. The construction of the floquet tensor was done using 2 functions: `floquet_master_equation_rates` which returned 4 tensors and `floquet_master_equation_tensor`. I added `floquet_tensor` which computed the tensor in one call and split `floquet_master_equation_rates` in 4 functions, one for each of the outputs. Floquet, like `brmesolve`, need a function for the noise power spectrum. Unlike `brmesolve`, string are not supported, only functions. We should have them match, but supporting string is quite heavy since coefficient are not a great fit. `fsesolve` have been rewritten without the class interface. As an integrator, the floquet method has no advantage since the propagator much be computed using another method. `fmesolve` work similarly to other solver. The `e_ops` are always in the laboratory basis. The result states are also in the laboratory basis. The option `""store_floquet_states""` is used to store the states in the floquet basis in `result.floquet_states`. In v4, there it an option for the environment temperature, but no tests for it. I kept the feature, but it's still untested.; Also all tests for `fmesolve` are either for constant systems or without collapse operator.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2034:1717,interface,interface,1717,https://qutip.org,https://github.com/qutip/qutip/pull/2034,2,"['integrat', 'interface']","['integrator', 'interface']"
Integrability,"heir projects, beginning in priority from the lead developers. . ## Other Funding Schemes; Similarly, I have been writing NumFOCUS [small development grants](https://numfocus.org/blog/fall-2018-open-source-development-grants), which have a different goal but can be set up similarly. Also, in the future we may apply again to [Google Season of Docs](https://developers.google.com/season-of-docs). . ## Future Opportunities; Several senior researchers and team leaders have aired the desire to contribute to the project more actively. Setting up a space where they can propose projects, even on their own funding resources (most probably together with the development of research projects), in coordination with the lead development team, could help foster development in a more sustainable way. . ## Proposal; I propose to help sustain available projects in a more structural way than what is done now. This is an example of a what we could call a **QEP, or ""QuTiP Enhancement Proposal"".**. - One thing that could be done is to simply expand the existing Wiki. The downside of taking only this action is that only organization members can modify the wiki. So this could work, but mainly as a more static and cleaner staple. . - I propose to integrate the Wiki with Issues that contain the projects, adding a `projects` (or similar) label. This is in the spirit also of other large quantum open source projects such as Qiskit, which has even an ad-hoc `qiskit-community` repository, https://github.com/qiskit-community/. In QuTiP case, we could create a new repository similar to the notebooks one, e.g., https://github.com/qutip/qutip-community/. The downside is that in general the division is subfolders is not advised for easiness of maintainability. So one could just open issues with open projects. Of course, for physics questions, sometimes spilling in to PRs and Issues, qutip already has a Google Group forum, where I advise that this new capabilities may be advertised with a proper thread.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1132:2660,integrat,integrate,2660,https://qutip.org,https://github.com/qutip/qutip/issues/1132,1,['integrat'],['integrate']
Integrability,"hen redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19</a></p>; <p>Note that due to an issue with our release automation, no <code> multiple.intoto.jsonl</code> file is available for this release.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/1.26.19/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.19 (2024-06-17)</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; <li>Fixed handling of OpenSSL 3.2.0 new error message for misconfiguring an HTTP proxy as HTTPS. (<code>[#3405](https://github.com/urllib3/urllib3/issues/3405) &lt;https://github.com/urllib3/urllib3/issues/3405&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/d9d85c88aa644af56d5e129634e750ce76e1a765""><code>d9d85c8</code></a> Release 1.26.19</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/8528b63b6fe5cfd7b21942cf988670de68fcd8c0""><code>8528b63</code></a> [1.26] Fix downstream tests (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3409"">#3409</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/40b6d1605814dd1db0a46e202d6e56f2e4c9a468""><code>40b6d16</code></a> Merge pull request from GHSA-34jh-p97f-mpxf</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/29cfd02f66376c61bd20f1725477925106321f68""><code>29cfd02</code></a> Fix handling of OpenSSL 3.2.0 new error message &quot;record layer failure&quot; (<",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:2035,message,message,2035,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['message'],['message']
Integrability,"her would be responsible to ensure that the correct scalar gets passed appropriately to the specialisation and for returning not implemented if necessary. ; - This solves the inconsistency problem as you could register a ""new"" scalar and define how it gets cast to a python complex scalar with a function (in most of the times, if not always, this will be `complex(other)`). ; - This does _not_ solve having `NotImplemented` at the python space.; - It seems to be challenging to implement and will probably make things more difficult to maintain. 3) We can also define more rigorously what a scalar is for `Qobj` with a list, `_ALLOWED_SCALARS = [numbers.Number, ...]` that defines what we accept as scalars. We then do: `isinstace(other, _ALLOWED_SCALARS)` and return `NotImplemented` if not there. Two options here:; 1) QuTiP allows only `numbers.Number`:; - In this case `qutip-tensorflow` can extend `_ALLOWED_SCALARS` with tf.Variable and tf.Tensor. However, if the user uses two plug-ins, say qutip-tensorflow and qutip-something-that-does-not-work-well-with-tensorflow (second plug-in), the second plug-in may not work properly. ; - The above point is not a big deal if we make clear that _ALLOWED_SCALARS must accept `complex(other)` for compatibility reasons. In this way the second plug-in can always default to `complex(other)` (this is already the default behaviour of `mul_dense`).; 2) QuTiP allows `numbers.Number`, `ndarray` of shape `(,)`, `tf.Variable` of shape `(,)` and more in the future.; - The upside of this method with respect to 3.1 is that users know which types they must accept.; - This is probably not a good idea as it means qutip has to handle new dependencies (tensorflow and probalby more in the future).; - This _still_ defines what an scalar is at he `Qobj` level. I think this is not bad as it seems to be the only way of avoiding `NotImplemented` at Python space exept for in special methods (`__mul__`, ...). I think that 3.i is the closest to an ideal solution.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1620#issuecomment-889006152:3692,depend,dependencies,3692,https://qutip.org,https://github.com/qutip/qutip/pull/1620#issuecomment-889006152,1,['depend'],['dependencies']
Integrability,"here</code></a>]</li>; <li>Show all frames in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6611"">#6611</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow FLI palette chunk to not be first <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6626"">#6626</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>If first GIF frame has transparency for RGB_ALWAYS loading strategy, use RGBA mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6592"">#6592</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Round box position to integer when pasting embedded color <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6517"">#6517</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed EXIF prefix when saving WebP <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6582"">#6582</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Pad IM palette to 768 bytes when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6579"">#6579</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added DDS BC6H reading <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6449"">#6449</a> [<a href=""https://github.com/ShadelessFox""><code>@​ShadelessFox</code></a>]</li>; <li>Added support for opening WhiteIsZero 16-bit integer TIFF images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6642"">#6642</a> [<a href=""https://github.com/JayWiz""><code>@​JayWiz</code></a>]</li>; <li>Raise an error when allocating translucent color to RGB palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6654"">#6654</a> [<a href=""https://github.com/jsbueno""><code>@​jsbueno</code></a>]</",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:7013,depend,dependabot,7013,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"here]</p>; </li>; <li>; <p>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6647"">#6647</a>; [radarhere]</p>; </li>; <li>; <p>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d594f4cb8dc47fb0c69ae58d9fff86faae4515bd""><code>d594f4c</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/909dc64ed5f676169aa3d9b0c26f132a06321b83""><code>909dc64</code></a> 9.3.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1a51ce7b955c65c8f2c6bc7772735b197b8a6aa3""><code>1a51ce7</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a> from hugovk/security-libtiff_buffer</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2444cddab2f83f28687c7c20871574acbb6dbcf3""><code>2444cdd</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a> from hugovk/security-samples_per_pixel-sec</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/744f455830871d61a8de0a5e629d4c2e33817cbb""><code>744f455</code></a> Added release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/0846bfae48513f2f51ca8547ed3b8954fa501fda""><code>0846bfa</code></a> Add to release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/799a6a01052cea3f417a571d7c64cd14acc18c64""><code>799a6a0</code></a> Fix linting</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/00b25fd3ac3648bc28eff5d4c4d816e605e3f05f""><code>00b25fd</code></a> Hide UserWarning in logs</li>; <li><a h",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:13671,depend,dependabot,13671,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-e,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:5853,integrat,integrator,5853,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['integrat'],['integrator']
Integrability,"hon-pillow/Pillow/issues/6500"">#6500</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.3.0 (2022-10-29)</h2>; <ul>; <li>; <p>Limit SAMPLESPERPIXEL to avoid runtime DOS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a>; [wiredfool]</p>; </li>; <li>; <p>Initialize libtiff buffer when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a>; [radarhere]</p>; </li>; <li>; <p>Inline fname2char to fix memory leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a>; [nulano]</p>; </li>; <li>; <p>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a>; [nulano]</p>; </li>; <li>; <p>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a>; [hugovk]</p>; </li>; <li>; <p>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a>; [cgohlke]</p>; </li>; <li>; <p>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a>; [radarhere]</p>; </li>; <li>; <p>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a>; [cgohlke]</p>; </li>; <li>; <p>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a>; [hmaarrfk]</p>; </li>; <li>; <p>Added ExifTags enums <a href",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:10876,depend,dependabot,10876,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"hould not impact the average user, but extremely old; versions of packaging utilities may have issues with the new packaging format.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/psf/requests/commit/d6ebc4a2f1f68b7e355fb7e4dd5ffc0845547f9f""><code>d6ebc4a</code></a> v2.32.0</li>; <li><a href=""https://github.com/psf/requests/commit/9a40d1277807f0a4f26c9a37eea8ec90faa8aadc""><code>9a40d12</code></a> Avoid reloading root certificates to improve concurrent performance (<a href=""https://redirect.github.com/psf/requests/issues/6667"">#6667</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/0c030f78d24f29a459dbf39b28b4cc765e2153d7""><code>0c030f7</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6702"">#6702</a> from nateprewitt/no_char_detection</li>; <li><a href=""https://github.com/psf/requests/commit/555b870eb19d497ddb67042645420083ec8efb02""><code>555b870</code></a> Allow character detection dependencies to be optional in post-packaging steps</li>; <li><a href=""https://github.com/psf/requests/commit/d6dded3f00afcf56a7e866cb0732799045301eb0""><code>d6dded3</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6700"">#6700</a> from franekmagiera/update-redirect-to-invalid-uri-test</li>; <li><a href=""https://github.com/psf/requests/commit/bf24b7d8d17da34be720c19e5978b2d3bf94a53b""><code>bf24b7d</code></a> Use an invalid URI that will not cause httpbin to throw 500</li>; <li><a href=""https://github.com/psf/requests/commit/2d5f54779ad174035c5437b3b3c1146b0eaf60fe""><code>2d5f547</code></a> Pin 3.8 and 3.9 runners back to macos-13 (<a href=""https://redirect.github.com/psf/requests/issues/6688"">#6688</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/f1bb07d39b74d6444e333879f8b8a3d9dd4d2311""><code>f1bb07d</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6687"">#6687</a> from psf/dependabo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:8317,depend,dependencies,8317,https://qutip.org,https://github.com/qutip/qutip/pull/2434,1,['depend'],['dependencies']
Integrability,"href=""https://github.com/ipython/ipython/commit/77ca4a6312374f0659fb6973925e5b696d5dc74e""><code>77ca4a6</code></a> don't run nose-based iptest on py310, only pytest</li>; <li><a href=""https://github.com/ipython/ipython/commit/533e5094aa36b51549cf6a316fc439c6404643c9""><code>533e509</code></a> back to decorator skip</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.22.0...7.31.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.22.0&new-version=7.31.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780:2652,depend,dependabot-automerge-start,2652,https://qutip.org,https://github.com/qutip/qutip/pull/1780,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a> [<a href=""https://github.com/newpanjing""><code>@​newpanjing</code></a>]</li>; <li>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a> [<a href=""https://github.com/gofr""><code>@​gofr</code></a>]</li>; <li>Do not use background or transparency index for new color <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5564"">#5564</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Simplified code <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5315"">#5315</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Replaced xml.etree.ElementTree <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5565"">#5565</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/master/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>8.3.2 (2021-09-02)</h2>; <ul>; <li>; <p>CVE-2021-23437 Raise ValueError if color specifier is too long; [hugovk, radarhere]</p>; </li>; <li>; <p>Fix 6-byte OOB read in FliDecode; [wiredfool]</p>; </li>; <li>; <p>Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</p>; </li>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:3939,depend,dependabot,3939,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"href=""https://github.com/pallets/jinja/commit/a7863ba9d3521f1450f821119c50d19d7ecea329""><code>a7863ba</code></a> add ghsa links</li>; <li><a href=""https://github.com/pallets/jinja/commit/b5c98e78c2ee7d2bf0aa06d29ed9bf7082de9cf4""><code>b5c98e7</code></a> start version 3.1.4</li>; <li><a href=""https://github.com/pallets/jinja/commit/da3a9f0b804199845fcb76f2e08748bdaeba93ee""><code>da3a9f0</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/1968"">#1968</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/0ee5eb41d1a2d7d9a05a02dc26dd70e63aaaeeb1""><code>0ee5eb4</code></a> satisfy formatter, linter, and strict mypy</li>; <li><a href=""https://github.com/pallets/jinja/commit/20477c63575175196bfc8103f223cc9f5642595d""><code>20477c6</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/5457"">#5457</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/e491223739dedbb1f4fc6a71340c1484e149d947""><code>e491223</code></a> update pyyaml dev dependency</li>; <li><a href=""https://github.com/pallets/jinja/commit/36f98854c721f98ba103f97f65a8a098da5af0d7""><code>36f9885</code></a> fix pr link</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.3...3.1.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:3295,depend,dependency,3295,https://qutip.org,https://github.com/qutip/qutip/pull/2418,1,['depend'],['dependency']
Integrability,"href=""https://github.com/python-pillow/Pillow/commit/c827f3b30f50bf04fd65daeeba6bbfd56fc7b50e""><code>c827f3b</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a> from radarhere/deallocate</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/39a3b1d83edcf826c3864e26bedff5b4e4dd331b""><code>39a3b1d</code></a> Fixed deallocating mask images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8c1dc819fd91471825da01976ac0e0bc8789590f""><code>8c1dc81</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.4.0...10.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.4.0&new-version=10.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:13269,depend,dependabot-security-updates,13269,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['depend'],['dependabot-security-updates']
Integrability,"href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a> [<a href=""https://github.com/npjg""><code>@​npjg</code></a>]</li>; <li>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>pylint warnings <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6659"">#6659</a> [<a href=""https://github.com/marksmayo""><code>@​marksmayo</code></a>]</li>; <li>Added GPS TIFF tag info <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6661"">#6661</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6647"">#6647</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed seeking to an L frame in a GIF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6576"">#6576</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Consider all frames when selecting mode for PNG save_all <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6610"">#6610</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:4341,depend,dependabot,4341,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"href=""https://github.com/urllib3/urllib3/commit/f271c9c3149e20d7feffb6429b135bbb6c09ddf4""><code>f271c9c</code></a> Apply latest Black formatting</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/1884878aac87ef0494b282e940c32c24ee917d52""><code>1884878</code></a> [1.26] Properly proxy EOF on the SSLTransport test suite</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.4...1.26.5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.4&new-version=1.26.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563:3332,depend,dependabot-automerge-start,3332,https://qutip.org,https://github.com/qutip/qutip/pull/1563,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"hrough mamba.; Next, I've opened an IPython console and ran `import qutip`, which resulted in the exception printed below - stating that the `format` attribute of the `fast_csr_matrix` cannot be set. I believe the latest `scipy` [release](https://github.com/scipy/scipy/releases) is the culprit (released 14 hrs ago at the time of writing) - reducing from `scipy==1.11.0` to `scipy==1.10.1` resolves the issue for me. ### Code to Reproduce the Bug. ```shell; import qutip; ```. ### Code Output. ```shell; Cell In[1], line 1; ----> 1 import qutip. File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\__init__.py:106; 98 del matplotlib; 101 # -----------------------------------------------------------------------------; 102 # Load modules; 103 #; 104; 105 # core; --> 106 from qutip.qobj import *; 107 from qutip.qobjevo import *; 108 from qutip.states import *. File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\qobj.py:2526; 2523 # TRAILING IMPORTS; 2524 # We do a few imports here to avoid circular dependencies.; 2525 from qutip.eseries import eseries; -> 2526 import qutip.superop_reps as sr; 2527 import qutip.tensor as tensor; 2528 import qutip.operators as ops. File ~\mambaforge\envs\test-env-scipy-qutip\Lib\site-packages\qutip\superop_reps.py:74; 61 return Qobj(dims=[[[2], [2]], [[2], [2]]],; 62 inpt=array([[1. - pe / 2., 0., 0., 1. - pe],; 63 [0., pe / 2., 0., 0.],; 64 [0., 0., pe / 2., 0.],; 65 [1. - pe, 0., 0., 1. - pe / 2.]]),; 66 superrep='choi'); 69 # CHANGE OF BASIS FUNCTIONS ---------------------------------------------------; 70 # These functions find change of basis matrices, and are useful in converting; 71 # between (for instance) Choi and chi matrices. At some point, these should; 72 # probably be moved out to another module.; ---> 74 _SINGLE_QUBIT_PAULI_BASIS = (identity(2), sigmax(), sigmay(), sigmaz()); 77 def _pauli_basis(nq=1):; 78 # NOTE: This is slow as can be.; 79 # TODO: Make this sparse. CSR format was causing problems ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2182:1167,depend,dependencies,1167,https://qutip.org,https://github.com/qutip/qutip/issues/2182,1,['depend'],['dependencies']
Integrability,https://github.com/berkelbach-group/pyrho/blob/master/integrate/integrate.py,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/887#issuecomment-493303310:54,integrat,integrate,54,https://qutip.org,https://github.com/qutip/qutip/issues/887#issuecomment-493303310,2,['integrat'],['integrate']
Integrability,"https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>GHA: replace deprecated set-output command with GITHUB_OUTPUT file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6697"">#6697</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Upload fribidi.dll to GitHub Actions <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6532"">#6532</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Windows build improvements <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6562"">#6562</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Only use ASCII characters in C source file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6691"">#6691</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a> [<a href=""https://github.com/hmaarrfk""><code>@​hmaarrfk</code></a>]</li>; <li>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not modify previous",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:2438,depend,dependabot,2438,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"https://github.com/python-pillow/Pillow/commit/00b25fd3ac3648bc28eff5d4c4d816e605e3f05f""><code>00b25fd</code></a> Hide UserWarning in logs</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/05b175ef88c22f5c416bc9b8d5b897dea1abbf2c""><code>05b175e</code></a> Tighter test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/13f2c5ae14901c89c38f898496102afd9daeaf6d""><code>13f2c5a</code></a> Prevent DOS with large SAMPLESPERPIXEL in Tiff IFD</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.1...9.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.1&new-version=9.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:15480,Depend,Dependabot,15480,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['Depend'],['Dependabot']
Integrability,"https://github.com/python-pillow/Pillow/commit/05b175ef88c22f5c416bc9b8d5b897dea1abbf2c""><code>05b175e</code></a> Tighter test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/13f2c5ae14901c89c38f898496102afd9daeaf6d""><code>13f2c5a</code></a> Prevent DOS with large SAMPLESPERPIXEL in Tiff IFD</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.1...9.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.1&new-version=9.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:15655,depend,dependabot-automerge-start,15655,https://qutip.org,https://github.com/qutip/qutip/pull/2023,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"https://github.com/python-pillow/Pillow/commit/6e28ed1f36d0eb74053af54e1eddc9c29db698cd""><code>6e28ed1</code></a> 10.0.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c827f3b30f50bf04fd65daeeba6bbfd56fc7b50e""><code>c827f3b</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a> from radarhere/deallocate</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/39a3b1d83edcf826c3864e26bedff5b4e4dd331b""><code>39a3b1d</code></a> Fixed deallocating mask images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8c1dc819fd91471825da01976ac0e0bc8789590f""><code>8c1dc81</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.4.0...10.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.4.0&new-version=10.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` wil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:13108,depend,dependency-name,13108,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['depend'],['dependency-name']
Integrability,"hub.com/python-babel/babel/commit/58de8342f865df88697a4a166191e880e3c84d82""><code>58de834</code></a> Replace Travis + Appveyor with GitHub Actions (WIP)</li>; <li><a href=""https://github.com/python-babel/babel/commit/d1bbc08e845d03d8e1f0dfa0e04983d755f39cb5""><code>d1bbc08</code></a> import_cldr: use logging; add -q option</li>; <li><a href=""https://github.com/python-babel/babel/commit/156b7fb9f377ccf58c71cf01dc69fb10c7b69314""><code>156b7fb</code></a> Quiesce CLDR download progress bar if requested (or not a TTY)</li>; <li><a href=""https://github.com/python-babel/babel/commit/613dc1700f91c3d40b081948c0dd6023d8ece057""><code>613dc17</code></a> Make the import warnings about unsupported number systems less verbose</li>; <li>Additional commits viewable in <a href=""https://github.com/python-babel/babel/compare/v2.9.0...v2.9.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=babel&package-manager=pip&previous-version=2.9.0&new-version=2.9.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1695:3307,depend,dependency-name,3307,https://qutip.org,https://github.com/qutip/qutip/pull/1695,1,['depend'],['dependency-name']
Integrability,"i/commit/4151e8849481f396537c34812068e89b32731e52""><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/196"">#196</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2020.12.05...2022.12.07"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2020.12.5&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035:2796,Depend,Dependabot,2796,https://qutip.org,https://github.com/qutip/qutip/pull/2035,1,['Depend'],['Dependabot']
Integrability,"i/issues/199"">#199</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/b0b48e059995f455ac1e79b3ad373ad4ef355516""><code>b0b48e0</code></a> fixes <a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/198"">#198</a> -- update link in license</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/9d514b4cad79357071c89d7dc4dc1b4df72bb997""><code>9d514b4</code></a> 2022.06.15</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4151e8849481f396537c34812068e89b32731e52""><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/196"">#196</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2020.12.05...2022.12.07"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2020.12.5&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reope",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035:2305,depend,dependency-name,2305,https://qutip.org,https://github.com/qutip/qutip/pull/2035,1,['depend'],['dependency-name']
Integrability,"ib\site-packages\Cython\Distutils\old_build_ext.py in run(self); 185 ; --> 186 _build_ext.build_ext.run(self); 187 . ~\Anaconda3\lib\distutils\command\build_ext.py in run(self); 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 . ~\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 194 # Call original build_extensions; --> 195 _build_ext.build_ext.build_extensions(self); 196 . ~\Anaconda3\lib\distutils\command\build_ext.py in build_extensions(self); 447 else:; --> 448 self._build_extensions_serial(); 449 . ~\Anaconda3\lib\distutils\command\build_ext.py in _build_extensions_serial(self); 472 with self._filter_build_errors(ext):; --> 473 self.build_extension(ext); 474 . ~\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 . ~\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 344 if not self.initialized:; --> 345 self.initialize(); 346 compile_info = self._setup_compile(output_dir, macros, include_dirs,. ~\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 237 ; --> 238 vc_env = _get_vc_env(plat_spec); 239 if not vc_env:. ~\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 133 if not vcvarsall:; --> 134 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 135 . DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. ImportError Traceback (most recent call last); ~\Anaconda3\lib\site-packages\qutip\qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 43 import_code = compile(codeString, '<string>', 'exec'); ---> 44 exec(import_code, locals()); 45 except (ModuleNotFoundError, ImportError) as e:. <string> in <module>. ~\Anaconda3\lib\site-packages\pyximport\pyximport.py in loa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914:3615,depend,depends,3615,https://qutip.org,https://github.com/qutip/qutip/issues/1914,1,['depend'],['depends']
Integrability,"ib\site-packages\Cython\Distutils\old_build_ext.py in run(self); 185 ; --> 186 _build_ext.build_ext.run(self); 187 . ~\Anaconda3\lib\distutils\command\build_ext.py in run(self); 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 . ~\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 194 # Call original build_extensions; --> 195 _build_ext.build_ext.build_extensions(self); 196 . ~\Anaconda3\lib\distutils\command\build_ext.py in build_extensions(self); 447 else:; --> 448 self._build_extensions_serial(); 449 . ~\Anaconda3\lib\distutils\command\build_ext.py in _build_extensions_serial(self); 472 with self._filter_build_errors(ext):; --> 473 self.build_extension(ext); 474 . ~\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 . ~\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 344 if not self.initialized:; --> 345 self.initialize(); 346 compile_info = self._setup_compile(output_dir, macros, include_dirs,. ~\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 237 ; --> 238 vc_env = _get_vc_env(plat_spec); 239 if not vc_env:. ~\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 133 if not vcvarsall:; --> 134 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 135 . ImportError: Building module cqobjevo_compiled_coeff_8478972438562 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. The above exception was the direct cause of the following exception:. Exception Traceback (most recent call last); <ipython-input-79-356f01653dc9> in <module>; 4 ; 5 args = {'A': 6, 'sigma': 0.145}; ----> 6 output = qp.mesolve(H, ground, t, e_ops = [qp.sigmaz()], args=args); 7 ; 8 plt.plot(t, output.expect[0]). ~\Anaconda3\lib\site-packages\qutip\mesolve.py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914:7150,depend,depends,7150,https://qutip.org,https://github.com/qutip/qutip/issues/1914,1,['depend'],['depends']
Integrability,ibcpp/utility.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:6050,depend,depends,6050,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,ibcpp/utility.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; [ 1/31] Cythonizing qutip/core/_brtensor.pyx; [ 2/31] Cythonizing qutip/core/_brtools.pyx; [ 3/31] Cythonizing qutip/core/cy/coefficient.pyx; [ 4/31] Cythonizing qutip/core/cy/math.pyx; [ 5/31] Cythonizing qutip/core/data/add.pyx; [ 6/31] Cythonizing qutip/core/data/base.pyx; [ 7/31] Cythonizing qutip/c,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:8372,depend,depends,8372,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,"ict; >; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245613247>:; >; > > + IVP solvers. Can be overridden if desired (e.g. for; > + debuggin/troubleshooting).; >; > With overwrite you mean using quicksolve with non-zero time_sense?; > If so, how to overwrite it?; > ⬇️ Suggested change; >; > - IVP solvers. Can be overridden if desired (e.g. for; > - debuggin/troubleshooting).; > + IVP solvers. Can be overridden if desired (e.g. for; > + debuggin/troubleshooting).; >; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245614869>:; >; > > + List of lists of [collapse operator,collapse operator rate] pairs; > +; > + e_ops : list of :class:`qutip.Qobj` / callback function; > + List of operators for which to evaluate expectation values.; > + The states are reverted to the lab basis before applying the; > +; > + args : *dictionary*; > + Dictionary of parameters for time-dependent Hamiltonian; > +; > + time_sense : float; > + Experimental. Value of the secular approximation (in terms of system; > + frequency 2*np.pi/T) to use when constructing the rate matrix R(t).; > + Default value of zero uses the fully time-independent/most strict; > + secular approximation.; > +; > + quicksolve: Boolean; >; > Input that change how the computation is done should be in options.; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245616491>:; >; > > + flime_ThirdTerm),; > + (Hdim**2, Hdim**2)); > + except KeyError:; > + total_R_tensor[key] = np.reshape(flime_FirstTerm - (1 / 2); > + * (flime_SecondTerm +; > + flime_ThirdTerm),; > + (Hdim**2, Hdim**2)); > + return total_R_tensor; > +; > +; > +def flimesolve(; > + H,; > + rho0,; > + taulist,; > + T,; > + Nt=None,; >; > There is no docstring entry for Nt.; > ------------------------------; >; > In qutip/solver/fl",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847:7767,depend,dependent,7767,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847,2,['depend'],['dependent']
Integrability,"idna/compare/v3.4...v3.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:4516,Depend,Dependabot,4516,https://qutip.org,https://github.com/qutip/qutip/pull/2392,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,iling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Inclu,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:6367,depend,depends,6367,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,"illow/commit/ed4cf7813777ad8478cac46f448bc45416a2a99e""><code>ed4cf78</code></a> CVEs TBD</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d7f60d1d5a746eb01d4cb3c7fb05b6593f46b0f5""><code>d7f60d1</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a> from radarhere/imagemath_eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8531b01d6cdf0b70f256f93092caa2a5d91afc11""><code>8531b01</code></a> Restrict builtins for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1efb1d9fabd1dfdbf7982035eca0dae7306abef1""><code>1efb1d9</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5922"">#5922</a> from radarhere/releasenotes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f6c78713a491764dfac576f6c42127755f2c62b3""><code>f6c7871</code></a> Added release notes for <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> and <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a></li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/032d2dc3658f94718109068ac70799313e440754""><code>032d2dc</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd""><code>baae9ec</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><code>1059eb5</code></a> If appended EOI did not work, do not keep trying</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0"">compare view</a></li>; </ul>; </d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:14830,depend,dependabot,14830,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"illow/issues/6693"">#6693</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Upload fribidi.dll to GitHub Actions <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6532"">#6532</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Windows build improvements <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6562"">#6562</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Only use ASCII characters in C source file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6691"">#6691</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a> [<a href=""https://github.com/hmaarrfk""><code>@​hmaarrfk</code></a>]</li>; <li>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a> [<a href=""https://github.com/npjg""><code>@​npjg</code></a>]<",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:2858,depend,dependabot,2858,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"import *; File ""/usr/local/lib/python2.7/site-packages/pyximport/pyximport.py"", line 431, in load_module; language_level=self.language_level); File ""/usr/local/lib/python2.7/site-packages/pyximport/pyximport.py"", line 209, in load_module; inplace=build_inplace, language_level=language_level); File ""/usr/local/lib/python2.7/site-packages/pyximport/pyximport.py"", line 186, in build_module; reload_support=pyxargs.reload_support); File ""/usr/local/lib/python2.7/site-packages/pyximport/pyxbuild.py"", line 100, in pyx_to_dll; dist.run_commands(); File ""/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py"", line 953, in run_commands; self.run_command(cmd); File ""/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py"", line 972, in run_command; cmd_obj.run(); File ""/usr/local/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; _build_ext.build_ext.run(self); File ""/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; self.build_extensions(); File ""/usr/local/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; self.build_extension(ext); File ""/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; depends=ext.depends); File ""/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); File ""/usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; raise CompileError, msg; ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'clang' failed with exit status 1\n""]; Your system is ready to brew.; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348:3105,depend,depends,3105,https://qutip.org,https://github.com/qutip/qutip/issues/348,2,['depend'],['depends']
Integrability,"in that extreme example you gave I guess you are just seeing numerical error from the ODE solver which is sensitive to some small difference in how the Liouvillian is being constructed, if you decrease the tolerances in options the difference diminishes, I guess with something like,. options.atol=1e-15; options.rtol=1e-15. also, just fyi, when you send an array for the time-dependence mesolve() uses some cubic-spline fitting to ''fill in the gaps'' when needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-808859776:377,depend,dependence,377,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-808859776,1,['depend'],['dependence']
Integrability,incorrect behaviour of correlation_2op_2t when using time-dependent Hamiltonian terms and collapse operators,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1808:58,depend,dependent,58,https://qutip.org,https://github.com/qutip/qutip/issues/1808,1,['depend'],['dependent']
Integrability,"ing logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:3323,depend,dependent,3323,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482,4,['depend'],['dependent']
Integrability,"ing on Python 3.11 (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/199"">#199</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/b0b48e059995f455ac1e79b3ad373ad4ef355516""><code>b0b48e0</code></a> fixes <a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/198"">#198</a> -- update link in license</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/9d514b4cad79357071c89d7dc4dc1b4df72bb997""><code>9d514b4</code></a> 2022.06.15</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4151e8849481f396537c34812068e89b32731e52""><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/196"">#196</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2020.12.05...2022.12.07"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2020.12.5&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel m",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035:2206,Depend,Dependabot,2206,https://qutip.org,https://github.com/qutip/qutip/pull/2035,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,ing qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:6460,depend,depends,6460,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"initial value (written as a standalone module for illustration purposes). As you will notice in the code, there is a subtle issue with needing to transpose the Lindbladian to get the correct result. I'm not sure why this is the case.. must be something with the superoperator representation. Perhaps @cgranade knows?. ``` python; import scipy. from qutip.mesolve import _generic_ode_solve; from qutip.superoperator import liouvillian, mat2vec; from qutip.settings import debug. if debug:; import inspect. def _mesolve_const_super(H, E0, tlist, c_op_list, e_ops, args, opt,; progress_bar):; """"""; Evolve the super-operator `E0` using an ODE solver, for constant ; Liouvillian; """""". if debug:; print(inspect.stack()[0][3]). """"""; #; # check initial state; #; if isket(rho0):; # if initial state is a ket and no collapse operator where given,; # fall back on the unitary schrodinger equation solver; if len(c_op_list) == 0 and isoper(H):; return _sesolve_const(H, rho0, tlist, e_ops, args, opt,; progress_bar). # Got a wave function as initial state: convert to density matrix.; rho0 = ket2dm(rho0); """""". #; # check initial value; #; if not E0.issuper:; raise TypeError(""Argument 'E0' should be a super-operator""). #; # construct liouvillian; #; if opt.tidy:; H = H.tidyup(opt.atol). L = liouvillian(H, c_op_list). #; # setup integrator; #; initial_vector = mat2vec(E0.full()).ravel(); # r = scipy.integrate.ode(cy_ode_rhs); r = scipy.integrate.ode(_rhs); # r.set_f_params(L.data.data, L.data.indices, L.data.indptr); # not sure why I need to transpose L here:; r.set_f_params(L.trans().data); r.set_integrator('zvode', method=opt.method, order=opt.order,; atol=opt.atol, rtol=opt.rtol, nsteps=opt.nsteps,; first_step=opt.first_step, min_step=opt.min_step,; max_step=opt.max_step); r.set_initial_value(initial_vector, tlist[0]). #; # call generic ODE code; #; return _generic_ode_solve(r, E0, tlist, e_ops, opt, progress_bar). def _rhs(t,y,data):; ym = y.reshape(data.shape); return (ym*data).ravel(); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/384:3771,integrat,integrator,3771,https://qutip.org,https://github.com/qutip/qutip/issues/384,3,['integrat'],"['integrate', 'integrator']"
Integrability,"inja/commit/e491223739dedbb1f4fc6a71340c1484e149d947""><code>e491223</code></a> update pyyaml dev dependency</li>; <li><a href=""https://github.com/pallets/jinja/commit/36f98854c721f98ba103f97f65a8a098da5af0d7""><code>36f9885</code></a> fix pr link</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.3...3.1.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:4184,Depend,Dependabot,4184,https://qutip.org,https://github.com/qutip/qutip/pull/2418,1,['Depend'],['Dependabot']
Integrability,"ip/cy/interpolate.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/spmath.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/heom.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/math.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/cy/spconvert.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/ptrace.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/testing.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/control/cy_grape.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; [ 1/12] Cythonizing qutip/control/cy_grape.pyx; [ 2/12] Cythonizing qutip/cy/graph_utils.pyx; [ 3/12] Cythonizing qutip/cy/heom.pyx; [ 4/12] Cythonizing qutip/cy/interpolate.pyx; [ 5/12] Cythonizing qutip/cy/math.pyx; [ 6/12] Cythonizing qutip/cy/ptrace.pyx; [ 7/12] Cythonizing qutip/cy/sparse_utils.pyx; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/state/partition1/local-scratch/kilian/16342884/pip-build-7c5rN_/qutip/setup.py"", line 216, in <module>; ext_modules = cythonize(EXT_MODULES),; File ""/home/kilian/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1016, in cythonize; cythonize_one(*args); File ""/home/kilian/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1138, in cythonize_one; raise CompileError(None, pyx_file); Cython.Compiler.Errors.CompileError: qutip/cy/sparse_utils.pyx; ```. Tested with:; * Cython 0.26; * numpy 1.1",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:2950,depend,depends,2950,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['depend'],['depends']
Integrability,"irst eigenvalues have really decreased which; > seems not logical because with the x added, the potential should be; > slightly higher. I also use in parallel the PySlise package for Python; > which enables to solve Schödinger equation and finds eigenfunctions and; > eigenvalues and it gives me :; > [ 3.01788 4.11151 5.32044 6.63324 8.02437 9.47380 10.96801 12.49776 ] (it; > was giving the good results for 1) and 2)); > So I don't understant why qutip doesn't give me the same result, I know I; > use two different methods; qutip is just finding eigenvalues of a matrix; > and PySlise solve differential equations but when I don't use displacement; > operator both always give the same result. I tried to write the; > displacement operator my self with the create & destroy operators and the; > Glauber formula because I noticed that the commutation relations were not; > respected cause of the truncation but I didn't work.; >; > If anyone has any ideas I would be very grateful, I have already spent a; > lot of time looking and I am getting desperate.; > I thank you for reading my message, I apologize for any spelling mistakes; > that may remain in my message, (I am in bachelor and English is not my; > native language); >; > *To Reproduce*; >; > import qutip as qtp; > import numpy as np; > H = qtp.displace(8,3)*qtp.num(8)*(qtp.displace(8,3).dag())+0.5*qtp.qeye(8)+qtp.position(8); > print(H.eigenenergies()); >; > The terminal out put is; >; > [-1.94563502 0.44017316 2.61960688 4.31137988 4.99244818 6.16377699; >; > 7.35499586 8.06325407]; >; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1597>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABG3YHM6CY56VDDL3JGHFNDTWDJK3ANCNFSM47ZSOL6Q>; > .; >. -- ; -----------------------------------; Senior Research Scientist; RIKEN, Japan; Research Homepage <http://dustygeeks.org/Neill/?page_id=21>",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1597#issuecomment-873889697:2911,message,message,2911,https://qutip.org,https://github.com/qutip/qutip/issues/1597#issuecomment-873889697,2,['message'],['message']
Integrability,"is about the conversion of operators into operator-kets when moving to the superoperator formalism.; - In theory it should recognise a suitable `dims`, but right now construction will be faster if you provide `type='super'` as well. Construction speed is hugely improved in `dev.major`. You only need to define `superrep` if you're giving us a Choi (`superrep='choi'`) or chi (`superrep='chi'`) matrix instead.; - No, it should really be any indexable quantity (requiring list is a historical artifact, not a conscious choice). The entire parsing structure of dimensions objects are going to change in 5.0 (though the list structure will still work). This should even give you more freedom, if you need it - I've got some plans for vastly improved handling of restricted-entry Hilbert spaces (basically spaces that are small embeddings into a larger space that's all 0).; - I am very strongly against accepting this (like I said above):. > Oh, one thing that I'd like to suggest we _don't_ do: use this interface to _implicitly_ create `Qobj` inside our functions.; ; To me, this is absolutely one of the mistakes that Numpy made in their implementation, and we shouldn't be copying it. You can see that it didn't work as intended, because they've had to add `__array_function__` and other additional methods on top to start to make it work, and it's still not perfect - even `scipy.sparse` have/had problems implementing them. While it might work in your particular case, making sure that nothing funny happens in the abstract across _all_ possible implementors of the interface while still having it do something useful is a very tricky problem, as evidenced by Numpy. Any conversion is going to be lossy for some people (perhaps not you, but it will be for others), and that means the behaviour for users will be surprising in some cases. In my opinion, if we're going to have a `__qutip_qobj__` interface, the interface should be defined for one operation only, and should never be called implicit",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:1734,interface,interface,1734,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,1,['interface'],['interface']
Integrability,"is is that the integrator component will just be one element of a composable system, so we'll not be tied to scipy integrators any more. I would absolutely not expect you to modifying how `mesolve` works directly. In fact, I would strongly recommend leaving the `mesolve` interface unchanged. The internal refactoring is all I'm after here. @jakelishman in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462:. > I also note that I'm not replying to the thread I thought I was - I thought I was in `krotov`! For my response to the discussion points:. Yeah, sorry the discussion got a little confused between what I was suggesting in https://github.com/qucontrol/krotov/issues/93 for myself to try out (adding a `yield` to `mesolve` as a dirty hack) and the discussion here about how to address the underlying use case properly in QuTiP itself. So just to be clear: Do *not* add a `yield` to the existing `mesolve` function in QuTiP! I would strongly recommend keeping the existing interface for `mesolve` and just refactor what is going on in the backend to enable single-time-step propagation with as little overhead as possible. > * I think the function `qutip.mesolve` shouldn't change interface at all for 5.0 - we can change its backend, but I think it'll be a huge hindrance to adoption of 5.0 if we make major breaking changes to effectively our premier function, and I don't see a need to do that. We can add, rather than change, and keep `mesolve` as the ""quick-and-dirty"" method that just works.; > * I'm in favour of exposing the different parts of the `mesolve` process as user-accessible, composable chunks. So something like exposing a `mesolve_prepare_ode(H, state, c_ops) -> OdeState` function, where `OdeState` has properties `rhs: QobjEvo`, `state: Qobj`, `time: float` (`sesolve_prepare_ode` and `mcsolve_prepare_ode` would presumably return the same object, or a derived object). Then we'd have an `Integrator` class, which encapsulates an integration step using what",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:10881,interface,interface,10881,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['interface'],['interface']
Integrability,"issions to github workflows (<a href=""https://redirect.github.com/certifi/python-certifi/issues/218"">#218</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/2087de5d0aa1d472145fc1dbdfece3fe652bbac5""><code>2087de5</code></a> Don't let deprecation warning fail CI (<a href=""https://redirect.github.com/certifi/python-certifi/issues/219"">#219</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/e0b9fc5c8f52ac8c300da502e5760ce3d41429ec""><code>e0b9fc5</code></a> remove paragraphs about 1024-bit roots from README</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2022.12.07...2023.07.22"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2022.12.7&new-version=2023.7.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2205:2850,depend,dependabot-security-updates,2850,https://qutip.org,https://github.com/qutip/qutip/pull/2205,1,['depend'],['dependabot-security-updates']
Integrability,issue - #892 ; Inserted the syntax for optional dependency in setup.py and requirements.txt,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/961:48,depend,dependency,48,https://qutip.org,https://github.com/qutip/qutip/pull/961,1,['depend'],['dependency']
Integrability,"items at the class:. ```; SolverOptions['method`] = 'bdf' # Set default method ; with SolverOptions(atol=1e-5):; opt = SolverOptions(store_state=True); opt['progress_bar'] = False; print(opt). progress_bar : False; store_state : True; method : 'bdf'; atol : 1e-5; ...; ```; The option can also be initialized from a dict or another options instance, it will make a copy. I added the capacity to add a safety check when setting an options. It is only used for `use_cython` which will error when trying to set it to `True` without cython installed. Otherwise, it will fail when trying to use the options. *Solver's options*; Each solver has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ..",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:1806,integrat,integrator,1806,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['integrat'],['integrator']
Integrability,"ith two new notebooks documenting the usage of these two modules, qutip/qutip-notebooks#21:. examples/example-transfer-tensor-method.ipynb; examples/example-coherent-delayed-feedback.ipynb. Together with code docstrings, these two notebooks should give a good idea of how the modules are to be used. As you will see in the notebooks, the TTM implementation has a user interface that closely mimicks the `mesolve` interface. The solver is called `ttmsolve` and has the following syntax (explained in more detail in the docstring and notebook):. ```; ttmsolve(dynmaps, rho0, times, e_ops=[], learningtimes=None, tensors=None, **kwargs); ```. where `dynamps` is a list of pre-computed dynamical maps to learn from, `rho0` is the initial state, `times` are the times at which to find the solution etc. The ""memory cascade"" implementation however, diverges a bit from this standard. In general I think it will be hard to have a kind of unified interface for different types of non-Markovian solvers, because unlike the Markovian case, there is no unified theoretical approach, and different solvers work in quite different ways. For the ""memory cascade"" implementation I chose a more object oriented style for the interface. The user first creates a `MemoryCascade` object, storing all the relevant parameters, and subsequently calls class methods to runs simulations. I personally like this style, and I think it is a general style that could be used across a great variety of solvers. I could however in addition write a function with a more `mesolve`-like interface. It can't, however, be identical, as there are several special arguments that has to be given. There is also a separate class method that computes output field correlation functions, and I kind of like that the various methods are collected together in a class, instead of having multiple different functions that all have to be called with a long list of arguments. I therefore suggest the style used in the `memorycascade` module as a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/405:2340,interface,interface,2340,https://qutip.org,https://github.com/qutip/qutip/pull/405,1,['interface'],['interface']
Integrability,"ithout a palette <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7797"">#7797</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use palette when loading ICO images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7798"">#7798</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use consistent arguments for load_read and load_seek <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7713"">#7713</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Turn off nullability warnings for macOS SDK <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7827"">#7827</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix shift-sign issue in Convert.c <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7838"">#7838</a> [<a href=""https://github.com/r-barnes""><code>@​r-barnes</code></a>]</li>; <li>winbuild: Refactor dependency versions into constants <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7843"">#7843</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Build macOS arm64 wheels natively <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7852"">#7852</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed typo <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7855"">#7855</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Open 16-bit grayscale PNGs as I;16 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7849"">#7849</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle truncated chunks at the end of PNG images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7709"">#7709</a> [<a href=""https://github.com/lajiyuan""><code>@​lajiyuan</code></a>]</li>; <li>Match mask size to pasted image si",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:7659,depend,dependency,7659,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['depend'],['dependency']
Integrability,"ithub actions/checkout to v4</li>; <li><a href=""https://github.com/kjd/idna/commit/c095c75943413c75ebf8ac74179757031b7f80b7""><code>c095c75</code></a> Merge branch 'master' into dev</li>; <li><a href=""https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98""><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>; <li><a href=""https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201""><code>5918a0e</code></a> Merge branch 'master' into dev</li>; <li>Additional commits viewable in <a href=""https://github.com/kjd/idna/compare/v3.4...v3.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:4184,Depend,Dependabot,4184,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['Depend'],['Dependabot']
Integrability,"ithub.com/numpy/numpy/commit/fa5754e8c159a37fcd9345df261cf82821088ea0""><code>fa5754e</code></a> BUG: Add missing DECREF in new path</li>; <li><a href=""https://github.com/numpy/numpy/commit/61127bb4d46d523b699da1b63abaa5035670da27""><code>61127bb</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19268"">#19268</a> from charris/backport-19264</li>; <li><a href=""https://github.com/numpy/numpy/commit/143d45fff3ed9e051bdeef7bdb4df38025ea7d1c""><code>143d45f</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19269"">#19269</a> from charris/backport-19228</li>; <li><a href=""https://github.com/numpy/numpy/commit/d80e4738f781a1d206bbc04a2e863299e5f2e104""><code>d80e473</code></a> BUG: Removed typing for == and != in dtypes</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.19.5&new-version=1.21.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` wi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:4445,Depend,Dependabot,4445,https://qutip.org,https://github.com/qutip/qutip/pull/1767,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"ithub.com/python-pillow/Pillow/commit/24e9485e6bb733a1a816f228dc75fd0086a93e19""><code>24e9485</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7671"">#7671</a> from radarhere/imagetransform</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.0.1...10.2.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.0.1&new-version=10.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:15843,Depend,Dependabot,15843,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['Depend'],['Dependabot']
Integrability,"ithub.com/python-pillow/Pillow/commit/427221ef5f19157001bf8b1ad7cfe0b905ca8c26""><code>427221e</code></a> In show_file, use os.remove to remove temporary images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c930be0758ac02cf15a2b8d5409d50d443550581""><code>c930be0</code></a> Restrict builtins within lambdas for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/75b69dd239a4647032f67a80d9b444228af2b736""><code>75b69dd</code></a> Dont need to pin for GHA</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cd938a7744cb46e2ea525a0c3dd79aa08f98c150""><code>cd938a7</code></a> Autolink CWE numbers with sphinx-issues</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2e9c461ca417083c43145a991bf9e1ec93237d89""><code>2e9c461</code></a> Add CVE IDs</li>; <li>See full diff in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.0&new-version=9.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` wil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:3458,Depend,Dependabot,3458,https://qutip.org,https://github.com/qutip/qutip/pull/1835,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"itial_state = qt.basis(3, 0); e_ops = [gm(1), gm(2), gm(3)]; return qt.mesolve(hamiltonian, initial_state, tlist, None, e_ops).expect. run_experiment(StandardGaussianPi, np.linspace(0, 40, 250), -0.2); ```; The function `gm` was used to generate matrices. These matrices come from:; ```python; gell_mann = [[], [], [], [], [], [], [], []]. gell_mann[0] = np.array([[1, 0, 0], [0, 1, 0], [0, 0, 1]]) / np.sqrt(2 / 3); gell_mann[1] = np.array([[0, 1, 0], [1, 0, 0], [0, 0, 0]]); gell_mann[2] = np.array([[0, -1j, 0], [1j, 0, 0], [0, 0, 0]]); gell_mann[3] = np.array([[1, 0, 0], [0, -1, 0], [0, 0, 0]]); gell_mann[4] = np.array([[0, 0, 1], [0, 0, 0], [1, 0, 0]]); gell_mann[5] = np.array([[0, 0, -1j], [0, 0, 0], [1j, 0, 0]]); gell_mann[6] = np.array([[0, 0, 0], [0, 0, 1], [0, 1, 0]]); gell_mann[7] = np.array([[0, 0, 0], [0, 0, -1j], [0, 1j, 0]]). def gm(n):; return qt.Qobj(gell_mann[n]); ```. The code above has the following output.; ```; 0.0; 0.0; 0.0; 0.0; 0.0; 0.0; 7.569736410260631e-09; 7.569736410260631e-09; 7.569736410260631e-09; 1.1027338361068281e-05; 1.1027338361068281e-05; 1.1027338361068281e-05; 5.5136691805341405e-06; 5.5136691805341405e-06; 5.5136691805341405e-06; 0.05514220547452194; 0.05514220547452194; 0.05514220547452194; 0.6065091235279361; 0.6065091235279361; 0.6065091235279361; 6.120178304062077; 6.120178304062077; 6.120178304062077; 60.14556517658347; 60.14556517658347; 60.14556517658347; ```; Without even looking at the output of `mesolve`, there is an issue. Note that the values being printed are generated from the time dependent coefficient `coeff_1`, where I am just printing out the values of time that it has been given. Clearly, there are *not* 250 values, here, and in addition, values like 60.1 are not even in `tlist`, which ranges from 0 to 40. My `about()` is below; thank you in advance for any help.; ```; QuTiP Version: 4.6.2; Numpy Version: 1.20.1; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.8; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1638:2995,depend,dependent,2995,https://qutip.org,https://github.com/qutip/qutip/issues/1638,1,['depend'],['dependent']
Integrability,"itten it, this loop is thread-safe already. As it stands in the 4.x series, `mesolve` is re-entrant (I'm fairly sure), but note that it does generally mutate its arguments, especially if you pass a `QobjEvo` Liouvillian as the first argument. As long as you make sure you give each thread a distinct copy of the input Liouvillian, `mesolve` itself doesn't access global state as far as I recall. Just to be clear: there's two interconnected issues here: One is just being ""reentrant"" in the sense that I can safely have multiple `mesolve`'s run in parallel. This doesn't seem to be a problem for `mesolve` as a whole (propagating over the entire time grid). The other issue, at a lower level is whether I can keep the internal state of the integrator (`scipy.integrate.ode` or whatever else `mesolve` might be using) when propagating a single time step (and whether I can have multiple integrators to run in parallel that each safely keep track of their own state). That comes down to the integrator itself being ""reentrant"", of course. Certainly, calling `mesolve` in a loop (`In [19]`) doesn't keep the internal state of the integrator, hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent changes in QuTiP now use a re-entrant internal integrator, i.e. not `scipy.integrate.ode`. At the time I implemented the [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/k",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:6221,integrat,integrator,6221,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrator']
Integrability,"ix` from the `scipy.sparse` namespace, the `scipy.sparse.base` namespace is deprecated.; from scipy.sparse.base import spmatrix, isspmatrix, SparseEfficiencyWarning; /home/simon/repos/github/qutip/qutip/fastsparse.py:7: DeprecationWarning: Please use `isspmatrix` from the `scipy.sparse` namespace, the `scipy.sparse.base` namespace is deprecated.; from scipy.sparse.base import spmatrix, isspmatrix, SparseEfficiencyWarning; /home/simon/repos/github/qutip/qutip/fastsparse.py:7: DeprecationWarning: Please use `SparseEfficiencyWarning` from the `scipy.sparse` namespace, the `scipy.sparse.base` namespace is deprecated.; from scipy.sparse.base import spmatrix, isspmatrix, SparseEfficiencyWarning; <frozen importlib._bootstrap>:914: ImportWarning: PyxImporter.find_spec() not found; falling back to find_module(); <frozen importlib._bootstrap>:914: ImportWarning: PyxImporter.find_spec() not found; falling back to find_module(); /home/simon/miniconda3/envs/qutip/lib/python3.10/site-packages/cvxpy/interface/scipy_wrapper.py:17: DeprecationWarning: Please use `spmatrix` from the `scipy.sparse` namespace, the `scipy.sparse.base` namespace is deprecated.; from scipy.sparse.base import spmatrix; <frozen importlib._bootstrap>:914: ImportWarning: PyxImporter.find_spec() not found; falling back to find_module(); <frozen importlib._bootstrap>:914: ImportWarning: PyxImporter.find_spec() not found; falling back to find_module(); <frozen importlib._bootstrap>:914: ImportWarning: PyxImporter.find_spec() not found; falling back to find_module(); <frozen importlib._bootstrap>:914: ImportWarning: PyxImporter.find_spec() not found; falling back to find_module(); ```. ### Expected Behaviour. DeprecationWarnings should not be raised. ### Your Environment. ```shell; QuTiP Version: 4.7.0.dev0+eaf053d; Numpy Version: 1.22.2; Scipy Version: 1.8.0; Cython Version: 0.29.26; Matplotlib Version: 3.5.1; Python Version: 3.10.2; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: F",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1823:3866,interface,interface,3866,https://qutip.org,https://github.com/qutip/qutip/issues/1823,1,['interface'],['interface']
Integrability,"ixed docs not building due to code style changes</li>; <li><a href=""https://github.com/pypa/wheel/commit/d635664abe560d48723cfc3b73c52ad8c906760a""><code>d635664</code></a> Updated the codecov action to the latest version</li>; <li><a href=""https://github.com/pypa/wheel/commit/fcb94cd51f7dfd40d88dff37415750d9e3638d3b""><code>fcb94cd</code></a> Updated <strong>version</strong> to match the release</li>; <li>Additional commits viewable in <a href=""https://github.com/pypa/wheel/compare/0.37.0...0.38.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wheel&package-manager=pip&previous-version=0.37.0&new-version=0.38.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:5362,depend,dependabot,5362,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['depend'],['dependabot']
Integrability,"jinja/issues/5457"">#5457</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/e491223739dedbb1f4fc6a71340c1484e149d947""><code>e491223</code></a> update pyyaml dev dependency</li>; <li><a href=""https://github.com/pallets/jinja/commit/36f98854c721f98ba103f97f65a8a098da5af0d7""><code>36f9885</code></a> fix pr link</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.3...3.1.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:4094,depend,dependabot-automerge-start,4094,https://qutip.org,https://github.com/qutip/qutip/pull/2418,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"just refactor what is going on in the backend to enable single-time-step propagation with as little overhead as possible. > * I think the function `qutip.mesolve` shouldn't change interface at all for 5.0 - we can change its backend, but I think it'll be a huge hindrance to adoption of 5.0 if we make major breaking changes to effectively our premier function, and I don't see a need to do that. We can add, rather than change, and keep `mesolve` as the ""quick-and-dirty"" method that just works.; > * I'm in favour of exposing the different parts of the `mesolve` process as user-accessible, composable chunks. So something like exposing a `mesolve_prepare_ode(H, state, c_ops) -> OdeState` function, where `OdeState` has properties `rhs: QobjEvo`, `state: Qobj`, `time: float` (`sesolve_prepare_ode` and `mcsolve_prepare_ode` would presumably return the same object, or a derived object). Then we'd have an `Integrator` class, which encapsulates an integration step using whatever integrator of choice, so there's one that encapsulates the scipy integrator, one which is a Cython-ised RK4 implementation, etc. Then the low-level user would simply write the `for time in times` loop themselves; at this level, there's nothing fancy that QuTiP adds, so we may as well just expose it directly. That sounds like the exact right solution! ;-). > I think this architecture is approximately what Eric had in mind too, though I presumably haven't used the same names. Yeah, I think we're actually all on the same page, irrespective of minor implementation/naming details: Have an object that keeps internal state of `mesolve` and allows to advance step-by-step. Personally, I like the naming of `MeSolver` that @Ericgig wrote out in https://github.com/qutip/qutip/issues/1571#issuecomment-858740451, but `mesolve_prepare_ode`/`OdeState` works too. @Ericgig in https://github.com/qutip/qutip/issues/1571#issuecomment-859791561:. > Most of scipy's solver are not ""thread-safe"", but we will be able to use othe",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:11819,Integrat,Integrator,11819,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,4,"['Integrat', 'integrat']","['Integrator', 'integration', 'integrator']"
Integrability,"just to add, I had a reason to make the whole RHS in heom time-dependent recently, so i had to revert to the kronecker product of a big matrix and each Qobjevo, losing the nice fast RHS construction. so am keen to give this coupled ode approach a try!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2384#issuecomment-2307925552:63,depend,dependent,63,https://qutip.org,https://github.com/qutip/qutip/issues/2384#issuecomment-2307925552,1,['depend'],['dependent']
Integrability,"k for correct dtypes (average_states=True) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=False) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=True) ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as partial function list ... ok; > > > mesolve: simple time-dependence as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > Metrics: Checks that average gate fidelities are sensible for random ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > Qobj data ... ok; > > > Qobj type ... ok; > > ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:5517,depend,dependence,5517,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['depend'],['dependence']
Integrability,kages/scipy/linalg.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/I,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:5838,depend,depends,5838,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"ks directly. In fact, I would strongly recommend leaving the `mesolve` interface unchanged. The internal refactoring is all I'm after here. @jakelishman in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462:. > I also note that I'm not replying to the thread I thought I was - I thought I was in `krotov`! For my response to the discussion points:. Yeah, sorry the discussion got a little confused between what I was suggesting in https://github.com/qucontrol/krotov/issues/93 for myself to try out (adding a `yield` to `mesolve` as a dirty hack) and the discussion here about how to address the underlying use case properly in QuTiP itself. So just to be clear: Do *not* add a `yield` to the existing `mesolve` function in QuTiP! I would strongly recommend keeping the existing interface for `mesolve` and just refactor what is going on in the backend to enable single-time-step propagation with as little overhead as possible. > * I think the function `qutip.mesolve` shouldn't change interface at all for 5.0 - we can change its backend, but I think it'll be a huge hindrance to adoption of 5.0 if we make major breaking changes to effectively our premier function, and I don't see a need to do that. We can add, rather than change, and keep `mesolve` as the ""quick-and-dirty"" method that just works.; > * I'm in favour of exposing the different parts of the `mesolve` process as user-accessible, composable chunks. So something like exposing a `mesolve_prepare_ode(H, state, c_ops) -> OdeState` function, where `OdeState` has properties `rhs: QobjEvo`, `state: Qobj`, `time: float` (`sesolve_prepare_ode` and `mcsolve_prepare_ode` would presumably return the same object, or a derived object). Then we'd have an `Integrator` class, which encapsulates an integration step using whatever integrator of choice, so there's one that encapsulates the scipy integrator, one which is a Cython-ised RK4 implementation, etc. Then the low-level user would simply write the `for time in times` ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:11089,interface,interface,11089,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['interface'],['interface']
Integrability,"l problems encountered by folks using truly huge arrays.</p>; <h2>Expired deprecations</h2>; <h3>Deprecated numeric style dtype strings have been removed</h3>; <p>Using the strings <code>&quot;Bytes0&quot;</code>, <code>&quot;Datetime64&quot;</code>, <code>&quot;Str0&quot;</code>, <code>&quot;Uint32&quot;</code>,; and <code>&quot;Uint64&quot;</code> as a dtype will now raise a <code>TypeError</code>.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/19539"">gh-19539</a>)</p>; <h3>Expired deprecations for <code>loads</code>, <code>ndfromtxt</code>, and <code>mafromtxt</code> in npyio</h3>; <p><code>numpy.loads</code> was deprecated in v1.15, with the recommendation that; users use <code>pickle.loads</code> instead. <code>ndfromtxt</code> and <code>mafromtxt</code> were both; deprecated in v1.17 - users should use <code>numpy.genfromtxt</code> instead with; the appropriate value for the <code>usemask</code> parameter.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/19615"">gh-19615</a>)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/numpy/numpy/commit/4adc87dff15a247e417d50f10cc4def8e1c17a03""><code>4adc87d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20685"">#20685</a> from charris/prepare-for-1.22.0-release</li>; <li><a href=""https://github.com/numpy/numpy/commit/fd66547557f57c430d41be2fc0764f74a62e8ccf""><code>fd66547</code></a> REL: Prepare for the NumPy 1.22.0 release.</li>; <li><a href=""https://github.com/numpy/numpy/commit/125304b035effcd82e366e601b102e7347eaa9ba""><code>125304b</code></a> wip</li>; <li><a href=""https://github.com/numpy/numpy/commit/c283859128b1a4b57014581570a23ed7950a24ea""><code>c283859</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20682"">#20682</a> from charris/backport-20416</li>; <li><a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:2796,depend,dependabot,2796,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['depend'],['dependabot']
Integrability,"l/babel/issues/754"">#754</a> from python-babel/github-ci</li>; <li><a href=""https://github.com/python-babel/babel/commit/58de8342f865df88697a4a166191e880e3c84d82""><code>58de834</code></a> Replace Travis + Appveyor with GitHub Actions (WIP)</li>; <li><a href=""https://github.com/python-babel/babel/commit/d1bbc08e845d03d8e1f0dfa0e04983d755f39cb5""><code>d1bbc08</code></a> import_cldr: use logging; add -q option</li>; <li><a href=""https://github.com/python-babel/babel/commit/156b7fb9f377ccf58c71cf01dc69fb10c7b69314""><code>156b7fb</code></a> Quiesce CLDR download progress bar if requested (or not a TTY)</li>; <li><a href=""https://github.com/python-babel/babel/commit/613dc1700f91c3d40b081948c0dd6023d8ece057""><code>613dc17</code></a> Make the import warnings about unsupported number systems less verbose</li>; <li>Additional commits viewable in <a href=""https://github.com/python-babel/babel/compare/v2.9.0...v2.9.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=babel&package-manager=pip&previous-version=2.9.0&new-version=2.9.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1695:3208,Depend,Dependabot,3208,https://qutip.org,https://github.com/qutip/qutip/pull/1695,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"lain lexer (<a href=""https://redirect.github.com/pygments/pygments/issues/2398"">#2398</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/3c6e2af8fbc44bb1ef77389d09118c37faea8746""><code>3c6e2af</code></a> Update CHANGES</li>; <li>Additional commits viewable in <a href=""https://github.com/pygments/pygments/compare/2.14.0...2.15.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:14430,Depend,Dependabot,14430,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['Depend'],['Dependabot']
Integrability,"le for all known types automatically; when it's asked to do say `kron` on two types it doesn't have a specialisation for, it'll cast the inputs through a path of least weight into a specialisation it _does_ know, and then use that. The desired casting rules and preferred output types can be altered dynamically at run-time as well. While I put a lot of effort into making this as fast as possible (and naturally a constant-time operation with respect to the number of known types and specialisations), of course the penalty we pay is a small run-time cost of type look-ups and dispatch (<1µs, but that's dwarfed by the cost of the operations themselves). We will have a hook for creating ""data-layer types"" out of arbitrary inputs, but we weren't heavily focussing on this at all; it seems rather too special a case to have _another_ magic interface for, and we can basically just reuse `__array__` for it - ""data-layer types"" are essentially just ""matrix-like"" objects. It also isn't appropriate for the situation you're describing here, because your own objects have additional ""quantum-specific"" attributes associated with them, similar to the extra stuff that `Qobj` contains. If you want to see more of this, it's in the `dev.major` branch. ---. Defining an interoperable new public interface I think is quite a big task, since it's inherently got to be future-proof. I'm definitely +1 on us having one, and having some discussion about it before a 5.0 release. I'm most concerned with how we can do it in a manner that's useful without stymieing our own ability to iterate and improve. It's harder for downstream packages to support multiple versions of a magic interface than it is for them to changing call QuTiP library functions; with deprecation warnings we can have multiple valid methods for doing the same thing alive in the library at once, but we can't detect what version of an interface a downstream package requires (not keen on the idea of a `__qutip_qobj_api_version__` flag!!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:7359,interoperab,interoperable,7359,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,4,"['interface', 'interoperab']","['interface', 'interoperable']"
Integrability,"le/releasenotes/9.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Initialize libtiff buffer when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit SAMPLESPERPIXEL to avoid runtime DOS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a> [<a href=""https://github.com/wiredfool""><code>@​wiredfool</code></a>]</li>; <li>Inline fname2char to fix memory leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>GHA: replace deprecated set-output command with GITHUB_OUTPUT file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6697"">#6697</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Upload fribidi.dll to GitHub Actions <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6532"">#6532</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Wi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:1374,depend,dependabot,1374,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"les in QuTiP follow the pep8 standard and wrap two newlines for top-level functions. I am in favor of the pep8 standard and have two newlines. @ajgpitch what do you suggest?. Please remove the helper function `count_filled` without the test if it is not required. We aim to test as much as possible and remove redundancy in code. About `__all__`, I will shift all the rest in a new PR and we can keep yours as it is now. Coming to the more important discussion regarding the `class` based implementation, I have started pushing for similar approaches in newer modules such as [qutip.models.piqs](https://github.com/qutip/qutip/blob/master/qutip/models/piqs.py). I am also working on a new non-Markovian method which requires a class. Something of that sort is already used in `qutip.nonmarkov.heom`. I understand that many of qutip's solvers are written to be isolated functions but that should not mean that we should not write code to fully use the object oriented framework Python provides. Moreover, I noticed that you have to rewrite wrappers for the functions anyways to deal with repeatedly calculating things such as `scattering_probability` which clearly can be made much more compact if we use a class based approach. I am not making this suggestion just for the minor performance improvement. It improves the organization of the code, allows greater flexibility in adding new things to an existing class and modifying it easily. In terms of user experience, this means less clutter in the code and verbosity of arguments. You can initialize something once and keep re-calculating things by dynamically changing the parameters and calling the `class` method. If it does not hurt to slowly shift in this direction then I think we should go for it. If there is an alternative reason for not having classes then please let us know as the cons @bencbartlett mentions has more to do with following qutip precedent than some fundamental disadvantage in performance or use. @ajgpitch @nonhermitian",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-384860713:1754,wrap,wrappers,1754,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-384860713,1,['wrap'],['wrappers']
Integrability,"lf.get_command_obj(command); 973 cmd_obj.ensure_finalized(); --> 974 cmd_obj.run(); 975 self.have_run[command] = 1; 976 . F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in run(self); 183 optimization.disable_optimization(); 184 ; --> 185 _build_ext.build_ext.run(self); 186 ; 187 def build_extensions(self):. F:\Anaconda3\lib\distutils\command\build_ext.py in run(self); 337 ; 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 ; 341 def check_extensions_list(self, extensions):. F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 191 for ext in self.extensions:; 192 ext.sources = self.cython_sources(ext.sources, ext); --> 193 self.build_extension(ext); 194 ; 195 def cython_sources(self, sources, extension):. F:\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 531 debug=self.debug,; 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 ; 535 # XXX outdated variable, kept here in case third-part code. F:\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 302 ; 303 if not self.initialized:; --> 304 self.initialize(); 305 compile_info = self._setup_compile(output_dir, macros, include_dirs,; 306 sources, depends, extra_postargs). F:\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 195 plat_spec = PLAT_TO_VCVARS[plat_name]; 196 ; --> 197 vc_env = _get_vc_env(plat_spec); 198 if not vc_env:; 199 raise DistutilsPlatformError(""Unable to find a compatible "". F:\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 83 vcvarsall, vcruntime = _find_vcvarsall(plat_spec); 84 if not vcvarsall:; ---> 85 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 86 ; 87 try:. ImportError: Building module rhs75680 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']; ```; I have tried it many t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854:7922,depend,depends,7922,https://qutip.org,https://github.com/qutip/qutip/issues/854,1,['depend'],['depends']
Integrability,"li>Defer parsing of palette into colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6567"">#6567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Apply transparency to P images in ImageTk.PhotoImage <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6559"">#6559</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use rounding in ImageOps contain() and pad() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6522"">#6522</a> [<a href=""https://github.com/bibinhashley""><code>@​bibinhashley</code></a>]</li>; <li>Fixed GIF remapping to palette with duplicate entries <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6548"">#6548</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow remap_palette() to return an image with less than 256 palette entries <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6543"">#6543</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected BMP and TGA palette size when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6500"">#6500</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.3.0 (2022-10-29)</h2>; <ul>; <li>; <p>Limit SAMPLESPERPIXEL to avoid runtime DOS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a>; [wiredfool]</p>; </li>; <li>; <p>Initialize libtiff buffer when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a>; [radarhere]</p>; </li>; <li>; <p>Inline fn",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:9644,depend,dependabot,9644,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"li>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a> [<a href=""https://github.com/cmbruns""><code>@​cmbruns</code></a>]</li>; <li>Fixed raising OSError in _safe_read when size is greater than SAFEBLOCK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5872"">#5872</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>WebP: Fix memory leak during decoding on failure <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5798"">#5798</a> [<a href=""https://github.com/ilai-deutel""><code>@​ilai-deutel</code></a>]</li>; <li>Do not prematurely return in ImageFile when saving to stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5665"">#5665</a> [<a href=""https://github.com/infmagic2047""><code>@​infmagic2047</code></a>]</li>; <li>Added support for top right and bottom right TGA orientations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5829"">#5829</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected ICNS file length in header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5845"">#5845</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Block tile TIFF tags when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5839"">#5839</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added line width argument to ImageDraw polygon <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5694"">#5694</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:6945,depend,dependabot,6945,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"lib\distutils\dist.py in run_command(self, command); 972 cmd_obj = self.get_command_obj(command); 973 cmd_obj.ensure_finalized(); --> 974 cmd_obj.run(); 975 self.have_run[command] = 1; 976 . F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in run(self); 183 optimization.disable_optimization(); 184 ; --> 185 _build_ext.build_ext.run(self); 186 ; 187 def build_extensions(self):. F:\Anaconda3\lib\distutils\command\build_ext.py in run(self); 337 ; 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 ; 341 def check_extensions_list(self, extensions):. F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 191 for ext in self.extensions:; 192 ext.sources = self.cython_sources(ext.sources, ext); --> 193 self.build_extension(ext); 194 ; 195 def cython_sources(self, sources, extension):. F:\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 531 debug=self.debug,; 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 ; 535 # XXX outdated variable, kept here in case third-part code. F:\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 302 ; 303 if not self.initialized:; --> 304 self.initialize(); 305 compile_info = self._setup_compile(output_dir, macros, include_dirs,; 306 sources, depends, extra_postargs). F:\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 195 plat_spec = PLAT_TO_VCVARS[plat_name]; 196 ; --> 197 vc_env = _get_vc_env(plat_spec); 198 if not vc_env:; 199 raise DistutilsPlatformError(""Unable to find a compatible "". F:\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 83 vcvarsall, vcruntime = _find_vcvarsall(plat_spec); 84 if not vcvarsall:; ---> 85 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 86 ; 87 try:. ImportError: Building module rhs75680 failed: ['distutils.errors.DistutilsPlatfo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854:7910,depend,depends,7910,https://qutip.org,https://github.com/qutip/qutip/issues/854,1,['depend'],['depends']
Integrability,"lid to add a vector in the Pauli-Z basis to one in the Pauli-X basis by element-wise addition, but QuTiP has no way of knowing if this is what the user is doing, and will simply allow it because the dimensions will match. This is still the case if the user used `Qobj.transform` to get from one to the other; it is one case where we have to trust that the user is doing the right thing, rather than enforcing correctness. In the future, the system proposed here could be extended to enforce this; the `dims` parameter would be renamed `basis`, and some unique identifier would be attached to each `Space` object. This would allow us to safely define basis-transformation ""operators""; they would have the dimensions object `Map(State(2, 'paulix'), State(2, 'pauliz'))`, or something to that effect. In #1320, I mentioned the possibility of a new `'scalar'` type object. Here, this is effectively the `Field` subtype. There is a choice to be made whether `Compound(Field, Field)` should be `Field` (implicit contraction of 1D spaces), or whether we should keep track of ""missing"" spaces. The missing spaces are useful in principle in QIP settings for defining local operations on subsets of the whole system, but right now we do not have the mathematics backend to implement this completely. For now, I propose we keep track of all the missing spaces; it allows this extension in the future, with no cost right now. ### Implementation details. All objects will be completely immutable, and all their construction arguments will be as well (e.g. `State` will take only `int`, which is immutable). This means that singleton instances can be found by looking them up in a global store, similar to Python's `builtin` package or its `import` system. The singleton nature of the dimension classes is achieved by defining `__new__` for the instances, and _not_ `__init__`. The former is effectively a class method, while the latter is an instance method; since we want instances representing the same object t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1421:6493,contract,contraction,6493,https://qutip.org,https://github.com/qutip/qutip/issues/1421,1,['contract'],['contraction']
Integrability,ling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compilin,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:7096,depend,depends,7096,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"little fragile; doing this means we have to guarantee that at _no point_ is the `ctrl_array` object copied. If you wanted to branch off execution part-way through the iterator, you'd have to copy the whole state, and then you'd lose your reference to the control array unless you kept manually walking the structure of the time-dependent object (internally it gets converted into a `QobjEvo` Liouvillian) to retrieve it. The other problem is that `state0` and the `Qobj` parts of the Hamiltonian aren't mutable; the preprocessing of `mesolve` means that none of those objects will exist inside the integrator loop. That's fine for this use-case, but it's not very general. These problems of mutability would apply to callback functions as well. A different way of using `yield` or callback function would be to really lean into a co-routine sort of pattern. So `mesolve` internally would look like; ```python; def mesolve(H, state, times, c_ops, e_ops, options):; # [... set up problem ...]; integrator = scipy.integrate.ode(...); for time in times[1:]:; state = integrator.step_to(time); instructions = yield _mesolve_output_state(state, time, e_ops); integrator = _mesolve_process_instructions(instructions, integrator); ```; and a call to `mesolve` would be like; ```python; solver = mesolve(H, rho0, times, c_ops); try:; result = next(solver); while True:; next_control = krotov.get_next_control(result.time, result.state); result = solver.send([; ('update-arguments', {'control': next_control}),; ('update-hamiltonian', ...),; ('add-c_op', ...),; # possible examples of API commands; ]); except StopIteration:; pass; ```; That's not super user friendly, but it _is_ nicely re-entrant. You'd have a single object you can copy and branch off, and QuTiP would be able to update the relevant objects for you at any given time. Still, I don't think it's a good strategy in general - we'd have to _very_ rigorously define the ""instructions"" API, and it would be pretty awkward to use. It would also be",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481:1830,integrat,integrator,1830,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481,1,['integrat'],['integrator']
Integrability,"ll; from qutip import *; import numpy as np; import numpy.linalg as la; from numpy import angle, pi. # create a modified floquet_modes that also accepts Options; def floquet_modes_mod(H, T, args=None, sort=False, U=None, options=None):; """"""; Calculate the initial Floquet modes Phi_alpha(0) for a driven system with; period T. Returns a list of :class:`qutip.qobj` instances representing the Floquet; modes and a list of corresponding quasienergies, sorted by increasing; quasienergy in the interval [-pi/T, pi/T]. The optional parameter `sort`; decides if the output is to be sorted in increasing quasienergies or not. Parameters; ----------. H : :class:`qutip.qobj`; system Hamiltonian, time-dependent with period `T`. args : dictionary; dictionary with variables required to evaluate H. T : float; The period of the time-dependence of the hamiltonian. The default value; 'None' indicates that the 'tlist' spans a single period of the driving. U : :class:`qutip.qobj`; The propagator for the time-dependent Hamiltonian with period `T`.; If U is `None` (default), it will be calculated from the Hamiltonian; `H` using :func:`qutip.propagator.propagator`. Returns; -------. output : list of kets, list of quasi energies. Two lists: the Floquet modes as kets and the quasi energies. """""". if U is None:; # get the unitary propagator; U = propagator(H, T, [], args, options = options). # find the eigenstates for the propagator; evals, evecs = la.eig(U.full()). eargs = angle(evals). # make sure that the phase is in the interval [-pi, pi], so that; # the quasi energy is in the interval [-pi/T, pi/T] where T is the; # period of the driving. eargs += (eargs <= -2*pi) * (2*pi) +; # (eargs > 0) * (-2*pi); eargs += (eargs <= -pi) * (2 * pi) + (eargs > pi) * (-2 * pi); e_quasi = -eargs / T. # sort by the quasi energy; if sort:; order = np.argsort(-e_quasi); else:; order = list(range(len(evals))). # prepare a list of kets for the floquet states; new_dims = [U.dims[0], [1] * len(U.dims[0])]; new_shape ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1864:2024,depend,dependent,2024,https://qutip.org,https://github.com/qutip/qutip/issues/1864,1,['depend'],['dependent']
Integrability,"llib3/urllib3/commit/18e92145e9cddbabdf51c98f54202aa37fd5d4c8""><code>18e9214</code></a> Use trusted publishing for PyPI</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d25cf83bbae850a290fe34ed1610ae55c0558b36""><code>d25cf83</code></a> [1.26] Fix invalid test_ssl_failure_midway_through_conn</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/25cca389496b86ee809c21e5b641aeaa74809263""><code>25cca38</code></a> [1.26] Fix test_ssl_object_attributes</li>; <li>Additional commits viewable in <a href=""https://github.com/urllib3/urllib3/compare/1.26.14...1.26.17"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.14&new-version=1.26.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:5292,Depend,Dependabot,5292,https://qutip.org,https://github.com/qutip/qutip/pull/2236,1,['Depend'],['Dependabot']
Integrability,"llow/Pillow/issues/6700"">#6700</a>; [wiredfool]</p>; </li>; <li>; <p>Initialize libtiff buffer when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a>; [radarhere]</p>; </li>; <li>; <p>Inline fname2char to fix memory leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a>; [nulano]</p>; </li>; <li>; <p>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a>; [nulano]</p>; </li>; <li>; <p>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a>; [hugovk]</p>; </li>; <li>; <p>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a>; [cgohlke]</p>; </li>; <li>; <p>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a>; [radarhere]</p>; </li>; <li>; <p>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a>; [cgohlke]</p>; </li>; <li>; <p>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a>; [hmaarrfk]</p>; </li>; <li>; <p>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a>; [radarhere]</p>; </li>; <li>; <p>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a>; [radarhere]</p>; </li>; <li>; <p>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a>; [npjg, radarhere]</p>; </li>; <li>; <p>Decode JPEG compressed BLP1 data",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:11403,depend,dependabot,11403,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"lly by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language; - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language; - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language. You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563:4125,depend,dependabot,4125,https://qutip.org,https://github.com/qutip/qutip/pull/1563,120,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"lly useful if one uses the Dense data layer, since otherwise there are conversion overheads which kill any speed-up (at the end of the day, we need NumPy arrays). The code has two 'backends', one using einsum as mentioned, and another using what I call a 'vectorization' approach (where the density matrix or vector is reshaped to a vector over the target qubits). Note: It will work on qudits in general (does not have to be qubits). **Performance**; I find, in systems where the state is dense (few zeros), one can get a speed-up of between 2 and up to around 10x faster (depends on the size and system etc). Of course, sometimes using the standard built in sparse routines are faster, so it really depends what one is doing. Attached is a wall-clock time comparison between the standard sparse way for a 1-local multiplication on a vector (using `gate_expand_1toN`), and the added code (dense local). N being the number of qubits. Here I made things as hard as possible for the sparse routine (all elements non-zero), so this is probably the limit of the speed-up. ![1_local_vector_adaptive_backend](https://user-images.githubusercontent.com/47875526/101932409-91f44900-3b8f-11eb-8b5b-7a00dabec2e4.png). **Other notes**; 1. I am a contractor for NASA, and they required a slight change to the license for the code I added. This is why I made two new files for this work specifically (instead of putting it in e.g. gates.py), which now includes a Copyright NASA sentence. I will talk privately with someone about this. 2. ~~I actually think that we could make a wrapper function `local_multiply` which can additionally take a backend 'sparse', so that it is easier to compare the above code, to one using the default sparse way (e.g. using the `expand_operator` type functions). I didn't do this yet as thought i'd see what thoughts are on this -- I can easily add this.~~ **Update (20/12/20)**: I just added some basic functionality for this. Will need to add more tests and maybe re-work it a bit",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405:1703,rout,routine,1703,https://qutip.org,https://github.com/qutip/qutip/pull/1405,1,['rout'],['routine']
Integrability,"log</a>.</em></p>; <blockquote>; <h2>8.3.2 (2021-09-02)</h2>; <ul>; <li>; <p>CVE-2021-23437 Raise ValueError if color specifier is too long; [hugovk, radarhere]</p>; </li>; <li>; <p>Fix 6-byte OOB read in FliDecode; [wiredfool]</p>; </li>; <li>; <p>Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</p>; </li>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1 (2021-07-06)</h2>; <ul>; <li>; <p>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a>; [radarhere]</p>; </li>; <li>; <p>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a>; [radarhere]</p>; </li>; <li>; <p>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a>; [t-vi, radarhere]</p>; </li>; </ul>; <h2>8.3.0 (2021-07-01)</h2>; <ul>; <li>; <p>Use snprintf instead of sprintf. CVE-2021-34552 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a>; [radarhere]</p>; </li>; <li>; <p>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:5304,depend,dependabot,5304,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"log</summary>; <p><em>Sourced from <a href=""https://github.com/python-babel/babel/blob/master/CHANGES"">babel's changelog</a>.</em></p>; <blockquote>; <h2>Version 2.9.1</h2>; <p>Bugfixes</p>; <pre><code>; * The internal locale-data loading functions now validate the name of the locale file to be loaded and only; allow files within Babel's data directory. Thank you to Chris Lyne of Tenable, Inc. for discovering the issue!; </code></pre>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-babel/babel/commit/a99fa2474c808b51ebdabea18db871e389751559""><code>a99fa24</code></a> Use 2.9.0's setup.py for 2.9.1</li>; <li><a href=""https://github.com/python-babel/babel/commit/60b33e083801109277cb068105251e76d0b7c14e""><code>60b33e0</code></a> Become 2.9.1</li>; <li><a href=""https://github.com/python-babel/babel/commit/412015ef642bfcc0d8ba8f4d05cdbb6aac98d9b3""><code>412015e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-babel/babel/issues/782"">#782</a> from python-babel/locale-basename</li>; <li><a href=""https://github.com/python-babel/babel/commit/5caf717ceca4bd235552362b4fbff88983c75d8c""><code>5caf717</code></a> Disallow special filenames on Windows</li>; <li><a href=""https://github.com/python-babel/babel/commit/3a700b5b8b53606fd98ef8294a56f9510f7290f8""><code>3a700b5</code></a> Run locale identifiers through <code>os.path.basename()</code></li>; <li><a href=""https://github.com/python-babel/babel/commit/5afe2b2f11dcdd6090c00231d342c2e9cd1bdaab""><code>5afe2b2</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-babel/babel/issues/754"">#754</a> from python-babel/github-ci</li>; <li><a href=""https://github.com/python-babel/babel/commit/58de8342f865df88697a4a166191e880e3c84d82""><code>58de834</code></a> Replace Travis + Appveyor with GitHub Actions (WIP)</li>; <li><a href=""https://github.com/python-babel/babel/commit/d1bbc08e845d03d8e1f0dfa0e04983d755f39cb5""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1695:1574,depend,dependabot,1574,https://qutip.org,https://github.com/qutip/qutip/pull/1695,1,['depend'],['dependabot']
Integrability,"lose your reference to the control array unless you kept manually walking the structure of the time-dependent object (internally it gets converted into a `QobjEvo` Liouvillian) to retrieve it. The other problem is that `state0` and the `Qobj` parts of the Hamiltonian aren't mutable; the preprocessing of `mesolve` means that none of those objects will exist inside the integrator loop. That's fine for this use-case, but it's not very general. These problems of mutability would apply to callback functions as well. A different way of using `yield` or callback function would be to really lean into a co-routine sort of pattern. So `mesolve` internally would look like; ```python; def mesolve(H, state, times, c_ops, e_ops, options):; # [... set up problem ...]; integrator = scipy.integrate.ode(...); for time in times[1:]:; state = integrator.step_to(time); instructions = yield _mesolve_output_state(state, time, e_ops); integrator = _mesolve_process_instructions(instructions, integrator); ```; and a call to `mesolve` would be like; ```python; solver = mesolve(H, rho0, times, c_ops); try:; result = next(solver); while True:; next_control = krotov.get_next_control(result.time, result.state); result = solver.send([; ('update-arguments', {'control': next_control}),; ('update-hamiltonian', ...),; ('add-c_op', ...),; # possible examples of API commands; ]); except StopIteration:; pass; ```; That's not super user friendly, but it _is_ nicely re-entrant. You'd have a single object you can copy and branch off, and QuTiP would be able to update the relevant objects for you at any given time. Still, I don't think it's a good strategy in general - we'd have to _very_ rigorously define the ""instructions"" API, and it would be pretty awkward to use. It would also be a nuisance for extensibility, probably; the intermediate state and instructions of `mesolve` would just more APIs we have to maintain and keep constant. Note that you can achieve the exact same thing with a callback function pat",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481:1991,integrat,integrator,1991,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481,2,['integrat'],['integrator']
Integrability,"lready. We'd have to modify our procedures a little bit (we're mostly concerned with constructing the underlying matrices at the moment), but it's a smaller change in behaviour. Disadvantages that I can think of:; - It's got linear scaling with the number of conversions registered, so it's in theory possible to register ""too many"" and cause a slow down. In reality, this will be a very small effect (`Qobj` construction time will be dominated by copying data into new formats), and I think the benefits of a priority queue of allowed converters outweighs it in convenience for users.; - It involves some global state of the `qutip` library, which _may_ cause problems for multiprocessing if somebody tries to register a `lambda` converter (can't pass through `pickle`, though I'm not 100% on whether module-level stuff needs to), and of course there's the query of what happens when converters are registered in separate processes. We already have this ""problem"" in 5.0 though, because that's how the entire underlying dispatch mechanism is handled; we can just require that converters must be pickle-able.; - If a downstream package wants to lazily `import qutip` (we're a pretty heavy import right now), it's harder in this method; you'd basically have to ask a user to call `otherlibrary.register_qutip()`. For one, I'm going to put some effort into making `import qutip` take much less time for 5.0 (the main problem right now is we essentially eagerly import all of scipy and IPython if it's around), so that'll make it a bit easier. For two, a single initialisation statement isn't _necessarily_ a terrible thing; users can decide for themselves if they want to install the implicit integrations, but this is definitely an inconvenience relative to the magic method. ---. Apologies that I'm not responding super quickly to everything - I'm not the only main QuTiP dev (and I can only work on QuTiP occasionally anyway), so I'm giving others time to read and think about the proposals as well.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:8476,integrat,integrations,8476,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,1,['integrat'],['integrations']
Integrability,"lscpu is localisation dependant and breaks if the OS uses e.g. German. ""Core(s) per socket"" turns into ""Kern(e) pro Socket"" and results in a crash. /proc/cpuinfo on the other hand remains the same same, therefore it is suited more as information source.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/780:22,depend,dependant,22,https://qutip.org,https://github.com/qutip/qutip/pull/780,1,['depend'],['dependant']
Integrability,"lution that works for both. > * What is the advantage of this over using the existing superoperator representations?. I don't think there is one, per se, in the same sense that there's no strict advantage to superoperators over Choi operators over χ operators — each is useful in different contexts, such that QuTiP supports all three in order to allow users to pick the right representation for their problem. Similarly, operator-sum decompositions of channels are quite common and are useful in some special circumstances (e.g.: expressing a Choi-rank–sparse channel without requiring a 4^n × 4^n matrix). In the Quantum Development Kit, for instance, we use `qutip.to_kraus` to express user-supplied superoperators, Choi operators, and χ operators in terms of an operator-sum decomposition that is then passed to the underlying open systems simulator. While the operator-sum decomposition is quite useful internally to the simulator, that's not a detail that we want to enforce upon users, such that QuTiP's support for multiple superoperator representations is quite useful in presenting a user-friendly interface for configuring noise models. > * Can this advantage be carryied over into, e.g., using solvers, eigenvalue finding, etc?. I'm not sure I entirely follow, sorry?. > * Would it be better to have a new object, sort of like QobjEvo but for sums rather than evolutions?. Perhaps, but at least for the operator-sum decomposition of channels, it would feel a bit weird to me to have superoperators, Choi operators and χ operators all have one Python type, but for Kraus representations to have a fully different Python type. Whether I represent Λ(ρ) by 0.9 𝟙ρ𝟙 + 0.1 𝑋ρ𝑋 or {√(0.9) 𝟙, √(0.1) 𝑋}, they both represent the same function from density operators to density operators. > * How do you see the various mathematical operations working?. My thought here would be that an operator-sum decomposition of a channel is just that: a representation of a channel. Thus, if `lambda_` is a `Qo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1673#issuecomment-927981574:2522,interface,interface,2522,https://qutip.org,https://github.com/qutip/qutip/issues/1673#issuecomment-927981574,1,['interface'],['interface']
Integrability,"lves copying rather more data _before_ the call (to construct the constant matrix once), but if the integrator would need to take many intermediate time steps, I expect it would win out. Would something like this work for you?; ```python; times = [0, ...]; # Liouvillians for parts you have control over; control_liouvillians = [qutip.liouvillian(h) for h in control_hamiltonians]; # The time-dependent Hamiltonian for stuff you're not controlling; base_hamiltonian = qutip.QobjEvo([H0, [H1, time_dependence], ...]); # Turn it into a Liouvillian once, so we don't repeat the cost; base = qutip.liouvillian(base_hamiltonian, collapse_operators); state = ...; options = qutip.Options(store_states=False, store_final_state=True); for prev, time in zip(times[:-1], times[1:]):; controls = krotov.get_next_controls(time, state, ...); current_liouvillian = base.copy(); for control, operator in zip(controls, control_liouvillians):; current_liouvillian += control * operator; # ^^^^^^^^^^^^^^^^^^; # each of these terms is a single time-independent Qobj,; # and the sum is a single QobjEvo with all the uncontrolled; # time dependence already handled.; state = qutip.mesolve(current_liouvillian, state, [prev, time], options=options).final_state; ```. By giving `mesolve` the Liouvillian instead of the Hamiltonian and collapse operators separately, you've already done most of its setup, so the time penalties should be much less than the current system (i.e. you avoid several Kronecker products and safety checks on the time-dependence terms because you've done them once at the start). In theory, that should already work from at least 4.5 onwards, and likely most of it will work from 4.4. In the 5.x series, almost all the intermediary operations should get a speed up as well (`Qobj.__init__` is getting its time slashed, and the line `current_liouvillian += control * operator` may be able to be replaced with one that applies the same in-place calculation optimisations that `mesolve` does internal",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859873615:1825,depend,dependence,1825,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859873615,1,['depend'],['dependence']
Integrability,"ly useful and will simplify the code inside the propagator a bit. I removed `.evolve_dm`. > **For `.sys_dims`**:; > ; > The meaning of what `.sys_dims` returns is already unclear in this PR. The docstring says its the dimension of the system. Practically I assume that to mean ""the dimension of the initial state or dm passed to .run()"". However, in the PR its used as the size of the propagator. These are the same if there is no environment, but will be different otherwise.; > ; > I suggest we keep `.sys_dims` but document that it is the dimensions of the system excluding any environment. Changed in HEOMSolver. Since environment only means something for HEOM, so it took some time to understand what it referred to. Adding the change elsewhere would be confusing. ; > **Specifying which solvers support propagators**:; > ; > Currently we have a list of explicit checks at the top of the propagator constructor, but we could instead have a ""propagator_class"" attribute on solvers the same way we have a ""result_class"" and then that could be set to some suitable default for ordinary solvers and None or ""PropagatorNotSupported"" for solvers that don't support them. There is only one class for propagator and I don't see us needing any other, so there is no use for a `propagator_class` . We could have a `support_propagator` flag, but I prefer it this way as we can set a special error message for `HEOMSolver`. ; `HEOMSolver` is the only exceptions where we could support it but choose not to take the time to implement it. ; All deterministic solver we have can be used for propagator, trajectories solver don't have a properly defined propagator for single trajectory and I don't see any use to create a propagator for the averaged states. It would take a lot of trajectories to obtain what is effectively mesolve's propagator. . We could add the flag to the integrator instead, some krylov integrator cannot evolve 2D states, but it's the only one we have plan for and it's not merged yet...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1999#issuecomment-1335766120:1798,message,message,1798,https://qutip.org,https://github.com/qutip/qutip/pull/1999#issuecomment-1335766120,3,"['integrat', 'message']","['integrator', 'message']"
Integrability,m https://github.com/tehruhn/bofin/pull/7 which has @nwlambert's work on the `HSolverDL` replacement. **Todo**; - [x] Add more exhaustive tests.; - [x] Address or silence CodeClimate issues.; - [x] Remove the many assigned but unused variables.; - [x] Add better tests that new `HSolverDL` is compatible with the existing `HSolverDL`.; - [x] Replace the existing `HSolverDL` with the new one.; - [x] Decide what to do with `heom.HEOMSolver`. Should it stay as it is? Be incorporated into BoFiN? Be Removed? *-- Neil and I decided we should remove it*; - [x] Decide what to do about the `renorm` argument to the old `HSolverDL`. Do we add it to the new BoFiN one?; - [x] Decide what to do about the `stats` argument. I'm planning to just add a note telling people to use `pyinstrument` if they need to profile their code.; - [x] Make HSolverDL use a bath instead of having the Matsubara calculation burried inside the solver.; - [x] Add Pade coefficient calculator somewhere? Maybe also as a bath?; - [x] Clean up the interfaces of `BosonicHEOMSolver` and `FermionicHEOMSolver`.; - [x] Whatever else we discover along the way.; - [x] Keep just the gather_op mode of RHS construction.; - [x] Split bath classes out into their own module.; - [x] Add underdamped spectral density bath. **Follow up PRs (i.e. before 4.7)**; - [x] Add Lorentzian fermionic bath (#1726); - [x] Convert the extension BoFiN documentation and into an extensive QuTiP guide (this PR already adds the docs but under qutip/nonmarkov/bofin/docs -- this allows the preservation of the original BoFiN commits) (#1724); - [x] Convert the BoFiN examples into QuTiP example notebooks (https://github.com/qutip/qutip-notebooks/pull/132/).; - [ ] Add MKL support to the dynamics solver. **Possible future work (i.e. look like great ideas but might never happen)**; - [ ] Use hermiticity relation from Schinabeck's PhD to half the number of ADOs stored in the fermionic bath.; - [ ] Possibly add support for time-dependent bath properties (,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1601:1563,interface,interfaces,1563,https://qutip.org,https://github.com/qutip/qutip/pull/1601,1,['interface'],['interfaces']
Integrability,"m two-level system ... ok; > > > Diagonalization of composite systems ... ok; > > > von-Neumann entropy ... ok; > > > Linear entropy ... ok; > > > Concurrence ... ok; > > > Mutual information ... ok; > > > Conditional entropy ... ok; > > > expect: operator list and state list ... ok; > > > expect: operator and density matrix ... ok; > > > expect: operator and ket ... ok; > > > expect: operator list and state ... ok; > > > expect: operator list and state list ... ok; > > > expect: operator and state list ... ok; > > > Read and write complex valued decimal formatted data ... ok; > > > Read and write complex valued default formatted data ... ok; > > > Read and write complex valued exp formatted data ... ok; > > > Read and write real valued decimal formatted data ... ok; > > > Read and write real valued default formatted data ... ok; > > > Read and write real valued exp formatted data ... ok; > > > Read and write with automatic separator detection ... ok; > > > Floquet: test unitary evolution of time-dependent two-level system ... ok; > > > gates: expand 1 to N ... ok; > > > gates: expand 2 to N (using cnot, iswap, sqrtswap) ... ok; > > > gates: expand 2 to N (using swap) ... ok; > > > gates: expand 3 to N (using toffoli, fredkin, and random 3 qubit gate) ... ok; > > > gates: swap gate ... ok; > > > Graph: Breadth-First Search ... ok; > > > Graph: Graph Degree ... SKIP: Networkx not installed.; > > > Graph: Reverse Cuthill-McKee Ordering (simple) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (Bucky) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (boost) ... ok; > > > Monte-carlo: Constant H with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constan",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:3007,depend,dependent,3007,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['depend'],['dependent']
Integrability,"m/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1 (2021-07-06)</h2>; <ul>; <li>; <p>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a>; [radarhere]</p>; </li>; <li>; <p>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a>; [radarhere]</p>; </li>; <li>; <p>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a>; [t-vi, radarhere]</p>; </li>; </ul>; <h2>8.3.0 (2021-07-01)</h2>; <ul>; <li>; <p>Use snprintf instead of sprintf. CVE-2021-34552 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a>; [radarhere]</p>; </li>; <li>; <p>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a>; [kmilos]</p>; </li>; <li>; <p>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a>; [baletu, radarhere, newpanjing, hugovk]</p>; </li>; <li>; <p>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a>; [gofr, radarhere]</p>; </li>; <li>; <p>Replaced xml.etree.ElementTree <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5565"">#5565</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8013f130a507",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:6116,depend,dependabot,6116,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"m/urllib3/urllib3/issues/3159"">#3159</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36""><code>b594c5c</code></a> Merge pull request from GHSA-g4mx-q9vg-27p4</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/944f0eb134485f41bc531be52de12ba5a37bca73""><code>944f0eb</code></a> [1.26] Use vendored six in urllib3.contrib.securetransport</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.17...1.26.18"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.17&new-version=1.26.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2246:2091,depend,dependabot,2091,https://qutip.org,https://github.com/qutip/qutip/pull/2246,1,['depend'],['dependabot']
Integrability,"m_ a big fan of interfaces. Python doesn't give us the tools to do it properly, but we can emulate it, like you suggest. I have a few more considerations to add to a discussion:. 1. we can't have _proper_ namespacing, but let's at least make the magic name `__qutip_qobj__` so we realistically prevent any chance of a clash - by nature of a centralised package manager, we can be sure that no other package will ever be called QuTiP. If it's a hidden name, it doesn't matter how ""pretty"" it is.; 2. having the check in `__init__` might not be correct - it feels like it belongs in `__new__` to me. `__init__` modifies an object that's already been created in Python-space, whereas `__new__` allows you to replace the object creation entirely.; 3. we need to take care to do this in a way that still allows QuTiP to iterate and improve `Qobj.__init__` between major versions. If _we_ define a public interface like this rather than having external libraries provide their own implementations, it puts the burden of maintain compatability on us, and takes it off downstream packages, who are able to define version requirements. For example, calling `otherlib.obj.toqobj()` and having it fail with QuTiP next.0 makes it clear that `otherlib` isn't compatible with QuTiP next, whereas `Qobj(otherlib.obj)` failing would (rightly) be taken as QuTiP being at fault, which stymies our development a little because we're forced to be more conservative than we otherwise would be with our constructor. This is going to be a particular problem with handling `dims`, since we're talking about completely changing the structure for how that's managed internally to help us in other parts of our library.; 4. what will happen with all the other keyword arguments passed to the `Qobj` constructor? We have probably three choices:; - pass all keywords on (which is a big problem in conjunction with the point above);; - pass none of them on, call `__qutip_qobj__` within `Qobj.__new__`, and then pass through `Qobj",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:2505,interface,interface,2505,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,1,['interface'],['interface']
Integrability,matplotlib dependency,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/878:11,depend,dependency,11,https://qutip.org,https://github.com/qutip/qutip/issues/878,1,['depend'],['dependency']
Integrability,"me detail information for the GSoC 2020 project ""Error mitigation in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub Wiki page. I post it here so if anyone finding it nice could copy it to the Wiki page. I add some details based on the original description:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. . This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184:1027,integrat,integration,1027,https://qutip.org,https://github.com/qutip/qutip/issues/1184,1,['integrat'],['integration']
Integrability,"ments passed to the `Qobj` constructor? We have probably three choices:; - pass all keywords on (which is a big problem in conjunction with the point above);; - pass none of them on, call `__qutip_qobj__` within `Qobj.__new__`, and then pass through `Qobj.__init__` like normal, but now with our new `Qobj` instance as the argument. This would have a slightly nontrivial interaction with the `copy` keyword, I imagine, but not an unsolvable one.; - error if you pass something that defines `__qutip_qobj__` in addition to keywords. This isn't ideal because it gives `Qobj` special treatment - additional kwargs can override `Qobj` settings if they're compatible. ---. Just in the interest of completeness, let me also just bring up some of the sweeping changes we'll bringing in in QuTiP 5.0 as well, which massively overhaul how `Qobj` is constructed, and how its data is stored. These aren't _directly_ applicable to the current discussion, but they're worth keeping in mind since they're a huge overhaul of how things will be handled, and may have some implications for how implementors of this interface might behave. The new `Qobj` will no longer have the same `fast_csr_matrix` type as its `data` attribute, but instead will have an extensible data type. The two that will be distributed with the library will be `Dense` and `CSR` (which simply do what they say on the tin), and all linear algebra operations between multiple `Qobj` are handled by a custom multiple-dispatch system that allows additional specialisations to be added in a similar way to Julia. Say you want to define `matmul` between `Dense` on the left and `CSR` on the right to produce a `CSR` output (a specialisation that we likely won't ship with because it's unlikely to be efficient). You'd write your function; ```python; def matmul_dense_csr_csr(left, right):; ...; return out; ```; and then because unlike Julia it's not built-in, you just manually add it to the dispatch table for `matmul`:; ```python; qutip.data.matm",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:4449,interface,interface,4449,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,1,['interface'],['interface']
Integrability,"mes using the standard built in sparse routines are faster, so it really depends what one is doing. Attached is a wall-clock time comparison between the standard sparse way for a 1-local multiplication on a vector (using `gate_expand_1toN`), and the added code (dense local). N being the number of qubits. Here I made things as hard as possible for the sparse routine (all elements non-zero), so this is probably the limit of the speed-up. ![1_local_vector_adaptive_backend](https://user-images.githubusercontent.com/47875526/101932409-91f44900-3b8f-11eb-8b5b-7a00dabec2e4.png). **Other notes**; 1. I am a contractor for NASA, and they required a slight change to the license for the code I added. This is why I made two new files for this work specifically (instead of putting it in e.g. gates.py), which now includes a Copyright NASA sentence. I will talk privately with someone about this. 2. ~~I actually think that we could make a wrapper function `local_multiply` which can additionally take a backend 'sparse', so that it is easier to compare the above code, to one using the default sparse way (e.g. using the `expand_operator` type functions). I didn't do this yet as thought i'd see what thoughts are on this -- I can easily add this.~~ **Update (20/12/20)**: I just added some basic functionality for this. Will need to add more tests and maybe re-work it a bit still. 3. Currently the input local operator is expected to be square, and we do not take output dimension arguments. This means it keeps the system dimensions the same. This can be relaxed easily, but we probably need an additional output dimension list, which needs to be consistent with the input operator. Again, this is easy to do, but was not sure if it is needed. If I get time I might add this anyway. 4. There are some examples of the code in the docstring to see how to run it (and also in the tests of course). I also have offline a script to perform certain speed comparisons (vs the sparse routine), I can share so",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405:2279,wrap,wrapper,2279,https://qutip.org,https://github.com/qutip/qutip/pull/1405,1,['wrap'],['wrapper']
Integrability,mesolve gives different result with or without QobjEvo on the time-dependent components,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2277:67,depend,dependent,67,https://qutip.org,https://github.com/qutip/qutip/issues/2277,1,['depend'],['dependent']
Integrability,mesolve giving erroneous results for time dependent Hamiltonian,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1038:42,depend,dependent,42,https://qutip.org,https://github.com/qutip/qutip/issues/1038,1,['depend'],['dependent']
Integrability,"method` options, as it is in other solver.; - The method that was referring the homodyne or heterodyne detection is now the `heterodyne` keyword. ie before `method=""heterodyne""` now `heterodyne=True`.; - The default integration method is now `rouchon`, instead of `taylor1.5`. ie the method coming from a physic paper and not a mathematics textbook. . - The stochastic integration methods have been spitted in smaller chunk instead of the huge classes in _stochastic.pyx. I kept most methods, only skipping the taylor order 2.0 method. The python interface is kept very similar to the `Integrator` as `SIntegrator`, the main difference being that `set_state` and `get_state` use an extra random number generator with the time and state. The integration methods are usually 5%~10% slower than they where for medium size problems (shape ~100). Most method are computed the same way as before, but the rouchon method no longer use super operator, but keep the density matrix as a matrix and not an oper-ket. - The derivative computation for used by the integration method has also been split into multiple functions and made only available for `smesolve`. For there methods to be valid, the each diffusion contribution must commute. For `smesolve`, this means that each `sc_ops` must commute, as documented. For `ssesolve`, each `sc_ops` must not only commute, but also commute with other `sc_ops`'s adjoint, this last part being missing from v4's documentation. It also meant that the sc_ops needed to commute with it's own adjoint when using heterodyne detection... - `ssepdpsolve`, `smepdpsolve`, `photocurrent_mesolve`, `photocurrent_sesolve` removed. They are all less efficient variants of `mcsolve`. `mcsolve` already include the photocurrent in the output. - `general_stochastic`, removed. It is a mostly generic stochastic equation solver. The user to define their equations to integrate, but the results are forced into `Results` with expectation values and dims checks, making it hard to use.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131:1592,integrat,integration,1592,https://qutip.org,https://github.com/qutip/qutip/pull/2131,2,['integrat'],"['integrate', 'integration']"
Integrability,"mit/1efb1d9fabd1dfdbf7982035eca0dae7306abef1""><code>1efb1d9</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5922"">#5922</a> from radarhere/releasenotes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f6c78713a491764dfac576f6c42127755f2c62b3""><code>f6c7871</code></a> Added release notes for <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> and <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a></li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/032d2dc3658f94718109068ac70799313e440754""><code>032d2dc</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd""><code>baae9ec</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><code>1059eb5</code></a> If appended EOI did not work, do not keep trying</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.3.2&new-version=9.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <su",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:15425,depend,dependabot,15425,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"mit/f8df5303fa9daf40cf8bfe232403cb40389d8f8f""><code>f8df530</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7672"">#7672</a> from nulano/imagefont-negative-crop</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/24e9485e6bb733a1a816f228dc75fd0086a93e19""><code>24e9485</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7671"">#7671</a> from radarhere/imagetransform</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.0.1...10.2.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.0.1&new-version=10.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:15578,Depend,Dependabot,15578,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['Depend'],['Dependabot']
Integrability,"mmit/0e9c87bcf096908956e031f15a4e589e83be1691""><code>0e9c87b</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/ef0abbaece522732031d61391567c017d48d87b7""><code>ef0abba</code></a> Add PostgreSQL Explain lexer (<a href=""https://redirect.github.com/pygments/pygments/issues/2398"">#2398</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/3c6e2af8fbc44bb1ef77389d09118c37faea8746""><code>3c6e2af</code></a> Update CHANGES</li>; <li>Additional commits viewable in <a href=""https://github.com/pygments/pygments/compare/2.14.0...2.15.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:14165,Depend,Dependabot,14165,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['Depend'],['Dependabot']
Integrability,"most similar to this), but also `ptrace` and `partial_tranpose`, which can be seen as special cases of this exact same type of tensor contraction (not to mention `tensor_contract`!). The other thing from a code perspective is that this doesn't use the data-layer in the intended manner. A lot of this may be because our documentation of the data-layer isn't readily available yet (we weren't expecting interest this early!). It does individual detection on two different types, rather than creating a `Dispatcher` to handle the multiple dispatch over potentially different data types of the two inputs. I would imagine that a better form of organisation for this sort of routine, which will be able to handle arbitrary tensor-network operations, will end up being made up of two components:; 1. a `Dispatcher` version of something akin to `einsum`, with a couple of limitations; 2. a high-level wrapper function to handle the specific case of local multiplication, which examines the dimensions and target specifiers to produce the input to the `einsum`-like function, then calls the `Dispatcher` with this information. I think this form would likely be preferable for several reasons:; 1. it will allow arbitrary mixing of different data types (`CSR` complete space and `Dense` operator, or both `CSR`, or whatever), with the allowed conversions respecting the global dispatcher rules, not having this function use a different, special configuration; 2. it will mean that the function can also be implemented by plug-in data types (TF/CuPy/etc), installed separately to QuTiP; 3. it will be more general, and easier to maintain; the current `subsystem_apply`, `partial_transpose`, `ptrace`, `tensor_contract` and this can all become special cases of this backing `einsum`-like routine.; 4. after we've implemented new dimensions objects, we'll be able to use a more standardised description of how to refer to individual subspaces of a Hilbert space, which will provide a more consistent UX across t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566:2834,wrap,wrapper,2834,https://qutip.org,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566,1,['wrap'],['wrapper']
Integrability,mpiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__i,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:7756,depend,depends,7756,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,"mple) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (Bucky) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (boost) ... ok; > > > Monte-carlo: Constant H with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H with constant collapse ... ok; > > > Monte-carlo: Constant H with single collapse operator ... ok; > > > Monte-carlo: Constant H with single expect operator ... ok; > > > Monte-carlo: Collapse terms constant (func format) ... ok; > > > Monte-carlo: Collapse terms constant (str format) ... ok; > > > Monte-carlo: Time-dependent H (func format) ... ok; > > > Monte-carlo: Time-dependent H (str format) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=True) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=False) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=True) ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:4458,depend,dependent,4458,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['depend'],['dependent']
Integrability,mpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-69.5.1 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.p,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:5527,depend,depends,5527,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"much considered this, but there are certainly ways of doing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a lot when writing these, you can do `pytest -k ""substring logic""` to run every test (potentially in the specified file(s)) that ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:2218,depend,dependency,2218,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386,1,['depend'],['dependency']
Integrability,"n at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, when the Python allocators do a little bit of checksumming. I think that in _all_ cases we're seeing the failure come from the garbage collection, but I can't be 100% certain - note that this almost certainly means the failure is somewhere completely different, and it's only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUC",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:2081,message,message,2081,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['message'],['message']
Integrability,"n my points 1 and 2 above, I don't think QuTiP should go this route. You can, however, set these properties to `None` to unconditionally tell Numpy that the object is incompatible with ufuncs. I think this might be a good way for us to go. ## What other libraries do. Provide everything:; - Dask: mostly trying to provide a numpy-like distributed array class. Its arrays mostly support the numpy interface, including how ufuncs should act on them. Providing `__array__` seems odd to me here in the context of other libraries, since that may easily blow out memory.; - PyTorch: CPU/GPU accelerated tensors for ML. This is a bit beyond my experience to comment on why they made the choices they did.; - Xarray: strongly extends the idea of structured arrays; this to me is the best example of how `__array__` was intended to be used.; ; Provide some things:; - Qiskit: (just changed behaviour in Qiskit/qiskit-terra#5402) implements `__array__` (but nothing else) for things that are like our `Qobj`. Discussed more at the top.; - CuPy (CUDA operations on ndarray-likes) explicitly does not allow implicit conversion to `np.ndarray` (see cupy/cupy#3421) for performance reasons, but does implement `__array_ufunc__` and `__array_function__`.; - pydata/sparse (nd-sparse _arrays_ instead of scipy.sparse's sparse _matrices_): always implement `__array_ufunc__` and `__array_function__` because they are trying to be a sparse version of `ndarray`. By default, they do not implement `__array__` for performance/memory reasons, but they do allow turning it on by an environment variable. Do not implement anything:; - JAX (autodiff) tries really hard to replace numpy rather than interoperate with it; - scipy.sparse matrices are intended for use with a _matrix_ interface, not a broadcast-able _array_ interface. They specifically document that they will not provide this interface (see scipy/scipy#12279). Somewhat weirdly, they do have custom methods for some elementwise ufuncs, though (like `np.sin`).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902:7727,interface,interface,7727,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902,3,['interface'],['interface']
Integrability,"n't have all the same multiple-dispatch niceties that Julia has, so at the end of the day, we have to add in a method with a ""magic"" name somewhere, and it all just comes down to choosing the name of the method. The downside to having a magic name is that it means we have to eschew proper namespacing; what if another library one day wants to call their interface the same thing? Then it's completely impossible for a downstream library to interoperate with both. Having conversions be a non-special method of the downstream class, and leaving our constructor unaware of them alleviates that issue. Numpy can get away with squatting the `__array__` name because they're _huge_, but I would argue that if we do it, we could actually _harm_ the quantum software ecosystem in the long-run - what happens when a package better than QuTiP comes along that wants to call its objects `Qobj` as well? Let's face it - it's a pretty straightforward name!. All that said, I am very aware that not everyone agrees with me on this, and I _am_ a big fan of interfaces. Python doesn't give us the tools to do it properly, but we can emulate it, like you suggest. I have a few more considerations to add to a discussion:. 1. we can't have _proper_ namespacing, but let's at least make the magic name `__qutip_qobj__` so we realistically prevent any chance of a clash - by nature of a centralised package manager, we can be sure that no other package will ever be called QuTiP. If it's a hidden name, it doesn't matter how ""pretty"" it is.; 2. having the check in `__init__` might not be correct - it feels like it belongs in `__new__` to me. `__init__` modifies an object that's already been created in Python-space, whereas `__new__` allows you to replace the object creation entirely.; 3. we need to take care to do this in a way that still allows QuTiP to iterate and improve `Qobj.__init__` between major versions. If _we_ define a public interface like this rather than having external libraries provide their ow",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:1622,interface,interfaces,1622,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,1,['interface'],['interfaces']
Integrability,"n-certifi/issues/219"">#219</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/e0b9fc5c8f52ac8c300da502e5760ce3d41429ec""><code>e0b9fc5</code></a> remove paragraphs about 1024-bit roots from README</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2022.12.07...2023.07.22"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2022.12.7&new-version=2023.7.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2205:3172,Depend,Dependabot,3172,https://qutip.org,https://github.com/qutip/qutip/pull/2205,1,['Depend'],['Dependabot']
Integrability,"n[command] = 1; 976 . /home/caidish1234/anaconda3/lib/python3.6/site-packages/Cython/Distutils/old_build_ext.py in run(self); 183 optimization.disable_optimization(); 184 ; --> 185 _build_ext.build_ext.run(self); 186 ; 187 def build_extensions(self):. /home/caidish1234/anaconda3/lib/python3.6/distutils/command/build_ext.py in run(self); 337 ; 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 ; 341 def check_extensions_list(self, extensions):. /home/caidish1234/anaconda3/lib/python3.6/site-packages/Cython/Distutils/old_build_ext.py in build_extensions(self); 191 for ext in self.extensions:; 192 ext.sources = self.cython_sources(ext.sources, ext); --> 193 self.build_extension(ext); 194 ; 195 def cython_sources(self, sources, extension):. /home/caidish1234/anaconda3/lib/python3.6/distutils/command/build_ext.py in build_extension(self, ext); 531 debug=self.debug,; 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 ; 535 # XXX outdated variable, kept here in case third-part code. /home/caidish1234/anaconda3/lib/python3.6/distutils/ccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 572 except KeyError:; 573 continue; --> 574 self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); 575 ; 576 # Return *all* object filenames, not just the ones we just built. /home/caidish1234/anaconda3/lib/python3.6/distutils/unixccompiler.py in _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts); 118 extra_postargs); 119 except DistutilsExecError as msg:; --> 120 raise CompileError(msg); 121 ; 122 def create_static_lib(self, objects, output_libname,. ImportError: Building module rhs82342421 failed: [""distutils.errors.CompileError: command 'gcc' failed with exit status 1\n""]; ```. So, I opened my server's log,it showed lots of:; `cc1plus: warning: command line option ‘-Wstrict-prototypes’ is valid for C/ObjC but not for C++ [enabled by default]`. And an e",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/697:4725,depend,depends,4725,https://qutip.org,https://github.com/qutip/qutip/issues/697,1,['depend'],['depends']
Integrability,"naconda3\lib\distutils\dist.py in run_command(self, command); 973 cmd_obj.ensure_finalized(); --> 974 cmd_obj.run(); 975 self.have_run[command] = 1. ~\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in run(self); 185 ; --> 186 _build_ext.build_ext.run(self); 187 . ~\Anaconda3\lib\distutils\command\build_ext.py in run(self); 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 . ~\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 194 # Call original build_extensions; --> 195 _build_ext.build_ext.build_extensions(self); 196 . ~\Anaconda3\lib\distutils\command\build_ext.py in build_extensions(self); 447 else:; --> 448 self._build_extensions_serial(); 449 . ~\Anaconda3\lib\distutils\command\build_ext.py in _build_extensions_serial(self); 472 with self._filter_build_errors(ext):; --> 473 self.build_extension(ext); 474 . ~\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 . ~\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 344 if not self.initialized:; --> 345 self.initialize(); 346 compile_info = self._setup_compile(output_dir, macros, include_dirs,. ~\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 237 ; --> 238 vc_env = _get_vc_env(plat_spec); 239 if not vc_env:. ~\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 133 if not vcvarsall:; --> 134 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 135 . DistutilsPlatformError: Unable to find vcvarsall.bat. During handling of the above exception, another exception occurred:. ImportError Traceback (most recent call last); ~\Anaconda3\lib\site-packages\qutip\qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 43 import_code = compile(codeString, '<string>', 'exec'); ---> 44",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914:3446,depend,depends,3446,https://qutip.org,https://github.com/qutip/qutip/issues/1914,1,['depend'],['depends']
Integrability,"naconda3\lib\distutils\dist.py in run_command(self, command); 973 cmd_obj.ensure_finalized(); --> 974 cmd_obj.run(); 975 self.have_run[command] = 1. ~\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in run(self); 185 ; --> 186 _build_ext.build_ext.run(self); 187 . ~\Anaconda3\lib\distutils\command\build_ext.py in run(self); 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 . ~\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 194 # Call original build_extensions; --> 195 _build_ext.build_ext.build_extensions(self); 196 . ~\Anaconda3\lib\distutils\command\build_ext.py in build_extensions(self); 447 else:; --> 448 self._build_extensions_serial(); 449 . ~\Anaconda3\lib\distutils\command\build_ext.py in _build_extensions_serial(self); 472 with self._filter_build_errors(ext):; --> 473 self.build_extension(ext); 474 . ~\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 . ~\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 344 if not self.initialized:; --> 345 self.initialize(); 346 compile_info = self._setup_compile(output_dir, macros, include_dirs,. ~\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 237 ; --> 238 vc_env = _get_vc_env(plat_spec); 239 if not vc_env:. ~\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 133 if not vcvarsall:; --> 134 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 135 . ImportError: Building module cqobjevo_compiled_coeff_8478972438562 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. The above exception was the direct cause of the following exception:. Exception Traceback (most recent call last); <ipython-input-79-356f01653dc9> in <module>; 4 ; 5 args = {'A': 6, 'sigma': 0.145",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914:6981,depend,depends,6981,https://qutip.org,https://github.com/qutip/qutip/issues/1914,1,['depend'],['depends']
Integrability,nalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-package,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:5576,depend,depends,5576,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,"ncs.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/stochastic.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/sparse_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/graph_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/interpolate.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/spmath.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/heom.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/math.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/cy/spconvert.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/ptrace.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/testing.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/control/cy_grape.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; [ 1/12] Cythonizing qutip/control/cy_grape.pyx; [ 2/12] Cythonizing qutip/cy/graph_utils.pyx; [ 3/12] Cythonizing qutip/cy/heom.pyx; [ 4/12] Cythonizing qutip/cy/interpolate.pyx; [ 5/12] Cythonizing qutip/cy/math.pyx; [ 6/12] Cythonizing qutip/cy/ptrace.pyx; [ 7/12] Cythonizing qutip/cy/sparse_utils.pyx; Traceback (most recent call last):; File ""<string>"", line 1, in",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:2400,depend,depends,2400,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['depend'],['depends']
Integrability,"ndabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language; - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language; - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language. You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>. **Changelog**; Update the version of numpy used for documentation builds to numpy 1.21.0.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:5730,depend,dependabot,5730,https://qutip.org,https://github.com/qutip/qutip/pull/1767,12,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"ndarray(dtype=object)` arrays behaved when containing objects that all implemented `__array__`. To get around _some_ of these problems, they've introduced `__array_function__` and `__array_ufunc__`, though to me at best these are bandages. Those two concerns aren't immediately applicable in QuTiP, but they're sort of indicative of potential problems when using a `__qutip_qobj__` method implicitly in functions like `Qobj.__add__`. These are where it becomes very evident that Julia-style programming doesn't apply in the same way in Python. Python is only a single-dispatch language, so `a + b` will dispatch using the table of `a` predominantly, whereas `b + a` will dispatch on `b`. In a proper multiple-dispatch library the rules are separate to the classes, so neither class is called preferentially, there's just one rule and either library can define it. My point with this is that if `Qobj.__add__` has a case where it handles Qobj-like types, then we prevent the other library from overriding the method. Multi-methods like this simply don't work the same in Python as they do in Julia, so even if `Qobj` implements interfaces from a variety of other libraries, we'd never get good consistent behaviour with functions like this. Operations that ought to be commutative like `+` would become dependent on operand order. To some degree, implementing the interface would be a guarantee that an object would always be able to follow QuTiP's semantics, otherwise it would just be annoying to users - _sometimes_ an object would be able to be used implicitly, sometimes not. I know the ""Python way"" is supposedly ""try it and see"", but if you're doing any serious development, that quickly becomes unreasonable if a type works some times, but not others. The other part of the Python way is ""explicit is better than implicit"", and here having an explicit type conversion to me is just being explicit about which library's semantics you want to follow, which is easier to read and easier to debug.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825646108:1744,interface,interfaces,1744,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825646108,3,"['depend', 'interface']","['dependent', 'interface', 'interfaces']"
Integrability,"ng cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached setuptools-69.5.1-py3-none-any.whl (894 kB); Using cached packaging-24.0-py3-none-any.whl (53 kB); Using cached wheel-0.43.0-py3-none-any.whl (65 kB); Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.6 MB); Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl (4.9 kB); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl (20.5 MB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.6 MB); Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-69.5.1 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/da",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:4791,depend,depends,4791,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"ng techiques to study quantum systems (open and closed). We are finalising the next release and as I am a big fan of extensibility, I would like our two frameworks to coexist and provide a sensible, easy api to work together.; Mainly, what I would like to do is provide an easy-to-use no-documentation-needed to convert NetKet's types to Qutip, so that it becomes easy to use it to check our variational calculations. TLDR: I propose creating and documenting a `__qobj__` interface so that arbitrary objects having this method will support conversion to a QuTiP Qobj. --. NetKet has mainly three types that are concerned: hilbert spaces, operators and variational states. ; Hilbert spaces describe the space every object is defined upon, and can be easily converted to your `dims` format. Operators are used to represent operators and super-operators acting on hilbert spaces. We use a very custom format roughly corresponding to a lazy kronecker product. Those object satisfy the numpy `__array__` interface and can be converted by calling `np.array(netket_operator)` or `np.asarray(netket_operator)`. We can also obtain sparse representations (but there is no nice api to do that, so we simply provide a method `netket_operator.to_sparse()`. Variational states can also be converted to vectors or matrices (kets and density operators) as they also support the `__array__` interface. I would like our users to be able to call `Qobj(netket_operator)` or `Qobj(netket_state)` and obtain the corresponding qutip object. We could, in principle support a `netket_operator.to_qobj()` conversion method, but I am strongly opposed to that as this is an ugly design pattern: a way to construct a `Qobj` already exists, it's `Qobj(...)`, and the simplest-to-use api is, in my opinion, to overload this constructor to perform the conversion.; This is a standard design pattern in Julia, which I believe has the best ecosystem inter-compatibility thanks to a standardisation of this pattern through (multiple)di",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508:1123,interface,interface,1123,https://qutip.org,https://github.com/qutip/qutip/issues/1508,1,['interface'],['interface']
Integrability,"ng the SolverOptions class is an excellent idea, but I think the PR currently doesn't go far enough and ends up with the solver classes, the integrator classes and the solver option classes required to share too much internal state with each other. As a next step to try untangle things, I suggest the following:. - Let's remove the `known_solvers` and the solver `name` from the SolverOptions and instead have the base solver pass the allowed options with defaults in to the SolverOptions constructor directly. If the allowed options list is `None`, then we can allow all options (for the convenience of users who really want to make their own SolverOptions instances).; - Having the options able to notify a listener of changes seems great -- let's keep that.; - When a solver is created, let's have the base solver create a new SolverOptions instance, either from a dictionary or another SolverOptions instance, but with the allowed options and defaults now specified.; - To deal with the integrator options, let's go back to having a single option named `ode`, but have the value of `ode` have type `SolverOptions`, and be a child of the solver options (if the child has a value modified, it should notify the parent of the change).; - For convenience, when passing options as a dictionary, one should be able to use `{""ode.method"": ""vern9""}` or `{""ode"": {""method"": ""vern9""}`. I think that should be enough to disentangle things from each other. The base solver would need to update the integrator if integrator options change and deal with any changes to the base options. It's not completely clear to me whether the result options should also be sub-options or just be included in the solver options. I'm happy for them to be included in the solver options, as long as the solver options are passed to the result class constructor. That keeps things a bit simpler and if solver needs new result options it can always create its own result sub-class and just process its options there. Thoughts?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947#issuecomment-1173137945:1027,integrat,integrator,1027,https://qutip.org,https://github.com/qutip/qutip/pull/1947#issuecomment-1173137945,3,['integrat'],['integrator']
Integrability,"nguage_level); File ""C:\Users\daniel\Anaconda\lib\site-packages\pyximport\pyximport.py"", line 186, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\daniel\Anaconda\lib\site-packages\pyximport\pyxbuild.py"", line 98, in pyx_to_dll; dist.run_commands(); File ""C:\Users\daniel\Anaconda\lib\distutils\dist.py"", line 953, in run_commands; self.run_command(cmd); File ""C:\Users\daniel\Anaconda\lib\distutils\dist.py"", line 972, in run_command; cmd_obj.run(); File ""C:\Users\daniel\Anaconda\lib\site-packages\Cython\Distutils\build_ext.py"", line 163, in run; _build_ext.build_ext.run(self); File ""C:\Users\daniel\Anaconda\lib\distutils\command\build_ext.py"", line 337, in run; self.build_extensions(); File ""C:\Users\daniel\Anaconda\lib\site-packages\Cython\Distutils\build_ext.py"", line 171, in build_extensions; self.build_extension(ext); File ""C:\Users\daniel\Anaconda\lib\distutils\command\build_ext.py"", line 496, in build_extension; depends=ext.depends); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 473, in compile; self.initialize(); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 383, in initialize; vc_env = query_vcvarsall(VERSION, plat_spec); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 271, in query_vcvarsall; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module qutip.cy.spmatfuncs failed: ['DistutilsPlatformError: Unable to find vcvarsall.bat\n']. I tried testing to see if it was installed correctly by typing import qutip.testing as qt and I get. Traceback (most recent call last):; File ""C:\Users\daniel\Anaconda\lib\site-packages\IPython\core\interactiveshell.py"", line 2883, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-3-ae6395ba7937>"", line 1, in <module>; import qutip.testing as qt; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_impor",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/343:3715,depend,depends,3715,https://qutip.org,https://github.com/qutip/qutip/issues/343,1,['depend'],['depends']
Integrability,nit__.pxd.; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includ,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:8016,depend,depends,8016,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"no-binary</code>, reported on Ubuntu 20.04, by; removing <code>setup_requires</code> from <code>setup.cfg</code></li>; </ul>; <p><strong>0.38.2 (2022-11-05)</strong></p>; <ul>; <li>Fixed regression introduced in v0.38.1 which broke parsing of wheel file names with; multiple platform tags</li>; </ul>; <p><strong>0.38.1 (2022-11-04)</strong></p>; <ul>; <li>Removed install dependency on setuptools</li>; <li>The future-proof fix in 0.36.0 for converting PyPy's SOABI into a abi tag was; faulty. Fixed so that future changes in the SOABI will not change the tag.</li>; </ul>; <p><strong>0.38.0 (2022-10-21)</strong></p>; <ul>; <li>Dropped support for Python &lt; 3.7</li>; <li>Updated vendored <code>packaging</code> to 21.3</li>; <li>Replaced all uses of <code>distutils</code> with <code>setuptools</code></li>; <li>The handling of <code>license_files</code> (including glob patterns and default; values) is now delegated to <code>setuptools&gt;=57.0.0</code> (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/466"">#466</a>).; The package dependencies were updated to reflect this change.</li>; <li>Fixed potential DoS attack via the <code>WHEEL_INFO_RE</code> regular expression</li>; <li>Fixed <code>ValueError: ZIP does not support timestamps before 1980</code> when using; <code>SOURCE_DATE_EPOCH=0</code> or when on-disk timestamps are earlier than 1980-01-01. Such; timestamps are now changed to the minimum value before packaging.</li>; </ul>; <p><strong>0.37.1 (2021-12-22)</strong></p>; <ul>; <li>Fixed <code>wheel pack</code> duplicating the <code>WHEEL</code> contents when the build number has changed (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/415"">#415</a>)</li>; <li>Fixed parsing of file names containing commas in <code>RECORD</code> (PR by Hood Chatham)</li>; </ul>; <p><strong>0.37.0 (2021-08-09)</strong></p>; <ul>; <li>Added official Python 3.10 support</li>; <li>Updated vendored <code>packaging</code> library to v20.9</li>; </ul>; <!--",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:1685,depend,dependabot,1685,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['depend'],['dependabot']
Integrability,"nopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 953, in run_commands; > self.run_command(cmd); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 972, in run_command; > cmd_obj.run(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; > _build_ext.build_ext.run(self); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; > self.build_extensions(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; > self.build_extension(ext); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; > depends=ext.depends); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; > self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; > raise CompileError, msg; > ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'gcc' failed with exit status 1\n""]; > import numpy as np; > ; > from qutip import *; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 62, in ; > qutip.settings.ipython = False; > AttributeError: 'module' object has no attribute 'settings'; > ; > ######################; > ; > This seems similar to the build error in Installation on OS X with Homebrew scr",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382#issuecomment-148179436:4192,depend,depends,4192,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436,1,['depend'],['depends']
Integrability,"notes/8.3.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a> [<a href=""https://github.com/t-vi""><code>@​t-vi</code></a>]</li>; </ul>; <h2>8.3.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Use snprintf instead of sprintf <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a> [<a href=""https://github.com/newpanjing""><code>@​newpanjing</code></a>]</li>; <li>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a> [<a href=""https://github.com/gofr""><code>@​gofr</code></a>]</li>; <li>Do not use background or transparency index for new color <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5564"">#5564</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</co",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:2662,depend,dependabot,2662,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"np.inf; c_ops = (1/T_dephasing) * sigmaz(). ### Run simulation. tlist = np.linspace(0, 2, 10000); e_ops = [sigmaz()]; output = mesolve(H, psi0, tlist, c_ops = c_ops, e_ops = e_ops); Z_expectation = output.expect[0]; ```. ### Notes on system:. - The Hamiltonian is periodic and formed of two-pulses.; - H2 applies a full spin flip when applied for time 0.5, so if we start in a Z basis state then Z_expectation should change from +1 to -1 or vice versa. ### Problem:. - When I set c_ops = [], I get the expected behaviour of Z_expectation.; - When I set c_ops to be the zero matrix as in the code above, Z_expectation remains constant, even though this should give exactly the same result as setting c_ops = [].; - This effect seems to depend on the choice of initial state. For a random pure state, setting c_ops to be the zero matrix seems to give the correct result, but for a Z basis state I get the inconsistency.; - This effect is not reproduced by the Monte Carlo based solver, mcsolve. However, I would like to use mesolve if possible because it is much faster for the systems I am considering. ### Some further notes:. - I think this is something to do with the fact that the Hamiltonian is time-dependent. ; - If I just simulate H2, then Z_expectation oscillates as expected. ; - Additionally, if I swap the order of H1 and H2 in the Hamiltonian, then I get the correct result.; - Setting c_ops as the zero matrix results in a much quicker simulation time than setting c_ops = []. This seems somewhat counter-intuitive, since I thought setting c_ops as the zero matrix would force the program to simulate the evolution of the density matrix rather than the state vector.; - Given this, I wonder if mesolve is making an approximation to speed up the calculation which is not valid here. I would very much appreciate any insights into where this inconsistency comes from, and how to fix it. Since mcsolve does not reproduce it, I think this might be an issue with mesolve. Many thanks,. Oliver",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/898:2703,depend,dependent,2703,https://qutip.org,https://github.com/qutip/qutip/issues/898,1,['depend'],['dependent']
Integrability,"nts/commit/eaca69091119e0ac5c97e626ba9e3b21b688c5ed""><code>eaca690</code></a> Add lexer for MediaWiki Wikitext (<a href=""https://redirect.github.com/pygments/pygments/issues/2373"">#2373</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/0e9c87bcf096908956e031f15a4e589e83be1691""><code>0e9c87b</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/ef0abbaece522732031d61391567c017d48d87b7""><code>ef0abba</code></a> Add PostgreSQL Explain lexer (<a href=""https://redirect.github.com/pygments/pygments/issues/2398"">#2398</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/3c6e2af8fbc44bb1ef77389d09118c37faea8746""><code>3c6e2af</code></a> Update CHANGES</li>; <li>Additional commits viewable in <a href=""https://github.com/pygments/pygments/compare/2.14.0...2.15.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` w",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:13944,depend,dependency-name,13944,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['depend'],['dependency-name']
Integrability,numpy list time-dependent format only works for linear tlists,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/519:16,depend,dependent,16,https://qutip.org,https://github.com/qutip/qutip/issues/519,1,['depend'],['dependent']
Integrability,"numpy/commit/f9c45f8ebf31340b1a5a0371bfca25afcfc4794e""><code>f9c45f8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20680"">#20680</a> from charris/backport-20663</li>; <li><a href=""https://github.com/numpy/numpy/commit/794b36f7e1bf2a8c42774ab0db86a74bd32f674b""><code>794b36f</code></a> Update armccompiler.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/d93b14e3d7abaa1d837825e51671f817788e120f""><code>d93b14e</code></a> Update test_public_api.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/7662c0789cc6a70d5ad4d950ee2e95f3afef7df6""><code>7662c07</code></a> Update <strong>init</strong>.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/311ab52488a7d096ac3bc4c2de0fdae17ecd13ef""><code>311ab52</code></a> Update armccompiler.py</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.21.0...v1.22.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.21.0&new-version=1.22.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` wi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:5063,Depend,Dependabot,5063,https://qutip.org,https://github.com/qutip/qutip/pull/1940,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"nylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.9.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached setuptools-69.5.1-py3-none-any.whl (894 kB); Using cached packaging-24.0-py3-none-any.whl (53 kB); Using cached wheel-0.43.0-py3-none-any.whl (65 kB); Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.6 MB); Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl (4.9 kB); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl (20.5 MB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.6 MB); Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-69.5.1 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:4670,depend,dependencies,4670,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['dependencies']
Integrability,"oach (where the density matrix or vector is reshaped to a vector over the target qubits). Note: It will work on qudits in general (does not have to be qubits). **Performance**; I find, in systems where the state is dense (few zeros), one can get a speed-up of between 2 and up to around 10x faster (depends on the size and system etc). Of course, sometimes using the standard built in sparse routines are faster, so it really depends what one is doing. Attached is a wall-clock time comparison between the standard sparse way for a 1-local multiplication on a vector (using `gate_expand_1toN`), and the added code (dense local). N being the number of qubits. Here I made things as hard as possible for the sparse routine (all elements non-zero), so this is probably the limit of the speed-up. ![1_local_vector_adaptive_backend](https://user-images.githubusercontent.com/47875526/101932409-91f44900-3b8f-11eb-8b5b-7a00dabec2e4.png). **Other notes**; 1. I am a contractor for NASA, and they required a slight change to the license for the code I added. This is why I made two new files for this work specifically (instead of putting it in e.g. gates.py), which now includes a Copyright NASA sentence. I will talk privately with someone about this. 2. ~~I actually think that we could make a wrapper function `local_multiply` which can additionally take a backend 'sparse', so that it is easier to compare the above code, to one using the default sparse way (e.g. using the `expand_operator` type functions). I didn't do this yet as thought i'd see what thoughts are on this -- I can easily add this.~~ **Update (20/12/20)**: I just added some basic functionality for this. Will need to add more tests and maybe re-work it a bit still. 3. Currently the input local operator is expected to be square, and we do not take output dimension arguments. This means it keeps the system dimensions the same. This can be relaxed easily, but we probably need an additional output dimension list, which needs to be c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405:1949,contract,contractor,1949,https://qutip.org,https://github.com/qutip/qutip/pull/1405,1,['contract'],['contractor']
Integrability,"obj(data, dims=dims, copy=False, type='oper', isherm=...); ```; providing `data` is actually of a valid (`fast_csr_matrix`) format. Technically the `Qobj.data` attribute will be a new object that wraps the same numpy arrays as was passed, rather than the same `fast_csr_matrix`. In various forms, `expect` already does check the Hermicity, that's why `mc-dm` is careful to set it to avoid recalculating it. The expect functions in `qutip.expect` do this directly, and aren't aware of column-stacked density matrices - they'll just raise a TypeError. `mesolve` and `mcsolve` now bypass the `Qobj` stage and go direct to Cython - in 5.0 it might not be a terrible idea to route everything back through the `Qobj` form, since the performance issues there are solved (a column-stacked dense matrix can be directly wrapped by an f-ordered `Dense` type), and it's the natural central point of the code (and those parts are called from Python-space anyway, so no C concerns). Here though, the problem is actually that the expectation generator in `mesolve` correctly calculates the dtype of the output expectation array using both the state and the expectation operator, but then it does it incorrectly in the loop, and passes the hermicity down to Cython using only the expectation operator, which promptly throws out the complex part. So setting `fast='mc-dm'` in `Qobj` is a symptom of the same root cause as the problem here, rather than the cause itself. At the start of `mesolve` we don't assume that the state is Hermitian, but then inside the integration loop we do. We can still keep the speedup - if the output was created with a complex dtype, we can always safely say that we're passing in non-Hermitian operators, even if coincidentally at one timestep they happen to be anyway. See https://github.com/qutip/qutip/blob/d285e96b3afc61afd1deceef61d9635f9d9aa505/qutip/mcsolve.py#L525-L529 and https://github.com/qutip/qutip/blob/d285e96b3afc61afd1deceef61d9635f9d9aa505/qutip/mesolve.py#L509-L511",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1460#issuecomment-796835048:1976,integrat,integration,1976,https://qutip.org,https://github.com/qutip/qutip/issues/1460#issuecomment-796835048,1,['integrat'],['integration']
Integrability,"ode></a> BUG: Add missing DECREF in new path</li>; <li><a href=""https://github.com/numpy/numpy/commit/61127bb4d46d523b699da1b63abaa5035670da27""><code>61127bb</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19268"">#19268</a> from charris/backport-19264</li>; <li><a href=""https://github.com/numpy/numpy/commit/143d45fff3ed9e051bdeef7bdb4df38025ea7d1c""><code>143d45f</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19269"">#19269</a> from charris/backport-19228</li>; <li><a href=""https://github.com/numpy/numpy/commit/d80e4738f781a1d206bbc04a2e863299e5f2e104""><code>d80e473</code></a> BUG: Removed typing for == and != in dtypes</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.19.5&new-version=1.21.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` wi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:4544,depend,dependency-name,4544,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['depend'],['dependency-name']
Integrability,"ode></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6687"">#6687</a> from psf/dependabot/github_actions/github/codeql-act...</li>; <li><a href=""https://github.com/psf/requests/commit/60047ade64b0b882cbc94e047198818ab580911e""><code>60047ad</code></a> Bump github/codeql-action from 3.24.0 to 3.25.0</li>; <li><a href=""https://github.com/psf/requests/commit/31ebb8102c00f8cf8b396a6356743cca4362e07b""><code>31ebb81</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6682"">#6682</a> from frenzymadness/pytest8</li>; <li>Additional commits viewable in <a href=""https://github.com/psf/requests/compare/v2.31.0...v2.32.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.31.0&new-version=2.32.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:10182,depend,dependabot-security-updates,10182,https://qutip.org,https://github.com/qutip/qutip/pull/2434,1,['depend'],['dependabot-security-updates']
Integrability,"ode></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f8df5303fa9daf40cf8bfe232403cb40389d8f8f""><code>f8df530</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7672"">#7672</a> from nulano/imagefont-negative-crop</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/24e9485e6bb733a1a816f228dc75fd0086a93e19""><code>24e9485</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7671"">#7671</a> from radarhere/imagetransform</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.0.1...10.2.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.0.1&new-version=10.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:15521,depend,dependabot-security-updates,15521,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['depend'],['dependabot-security-updates']
Integrability,"ode></a>]</li>; <li>Added rounding when converting P and PA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5824"">#5824</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Image.NONE is only used for resampling and dithers <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5908"">#5908</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Add Tidelift alignment action and badge <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5763"">#5763</a> [<a href=""https://github.com/aclark4life""><code>@​aclark4life</code></a>]</li>; <li>Replaced further direct invocations of setup.py <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5906"">#5906</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a> [<a href=""https://github.com/m-shinder""><code>@​m-shinder</code></a>]</li>; <li>Fixed typo <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5902"">#5902</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Switched from deprecated &quot;setup.py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:4731,depend,dependabot,4731,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"ode></a>]</li>; <li>Improved putdata() documentation and data handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5910"">#5910</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Exclude carriage return in PDF regex to help prevent ReDoS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5912"">#5912</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Image.NONE is only used for resampling and dithers <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5908"">#5908</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed freeing pointer in ImageDraw.Outline.transform <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5909"">#5909</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Add Tidelift alignment action and badge <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5763"">#5763</a> [<a href=""https://github.com/aclark4life""><code>@​aclark4life</code></a>]</li>; <li>Replaced further direct invocations of setup.py <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5906"">#5906</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a> [<a href=""https://github.com/m-shinder""><code>@​m-shinder</code></a>]</li>; <li>Fixed typo <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5902"">#5902</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Switched from deprecated &quot;setup.py install&quot; to &quot;pip install .&quot; <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5896"">#5896</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:4943,depend,dependabot,4943,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"ode>@​nulano</code></a>]</li>; <li>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>GHA: replace deprecated set-output command with GITHUB_OUTPUT file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6697"">#6697</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Upload fribidi.dll to GitHub Actions <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6532"">#6532</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Windows build improvements <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6562"">#6562</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Only use ASCII characters in C source file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6691"">#6691</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a> [<a href=""https://github.com/hmaarrfk""><code>@​hmaarrfk</code></a>]</li>; <li>Added ExifTags e",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:2239,depend,dependabot,2239,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"ode>@​radarhere</code></a>]</li>; <li>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6647"">#6647</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed seeking to an L frame in a GIF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6576"">#6576</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Consider all frames when selecting mode for PNG save_all <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6610"">#6610</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Don't reassign crc on ChunkStream close <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6627"">#6627</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Raise a warning if NumPy failed to raise an error during conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6594"">#6594</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only read a maximum of 100 bytes at a time in IMT header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6623"">#6623</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Show all frames in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6611"">#6611</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow FLI palette chunk to not be first <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6626"">#6626</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code><",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:5437,depend,dependabot,5437,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"oeff_f230db93af3a399e4166e330cf4663.pyx; 	> [...]; 	type(coeff); 	> qtcoeff_f230db93af3a399e4166e330cf4663.StrCoefficient; 	exit(); $ pytest --disable-pytest-warnings --pyargs qutip.tests.core -k test_coefficient; ========================================================================= test session starts =========================================================================; platform linux -- Python 3.11.3, pytest-7.1.2, pluggy-1.0.0; rootdir: /home/paul; collected 5917 items / 5700 deselected / 217 selected. miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py .................. [ 8%]; ............................................................................................................................................................... [ 81%]; .......................................s [100%]. ==================================================== 216 passed, 1 skipped, 5700 deselected, 14 warnings in 59.58s ====================================================; ```. ---. I suggest documenting this dependence in the documentation. Regarding the tests, the concerned tests should probably be skipped if there is a dependency missing? (Just like they already are if cython is missing.) ; In case they are not skipped, the reason for the failure should somehow become more clear. Regarding the actual behavior, qutip could print a warning if `cython` is installed and `filelock` is not, but I am not sure whether that would be a good idea. ---. For completeness, my `qutip.about()` output:. ```; QuTiP Version: 5.0.0.dev0+7892453; Numpy Version: 1.24.3; Scipy Version: 1.10.1; Cython Version: 0.29.33; Matplotlib Version: 3.7.1; Python Version: 3.11.3; Number of CPUs: 16; BLAS Info: INTEL MKL; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: /home/paul/miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:8941,depend,dependence,8941,https://qutip.org,https://github.com/qutip/qutip/issues/2162,2,['depend'],"['dependence', 'dependency']"
Integrability,"ols.pyx. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:2:10: cimported module has no attribute 'float64'. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:5:10: cimported module has no attribute 'int32'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:8:10: cimported module has no attribute 'complex128'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ctypedef np.complex128_t CTYPE_t. CTYPE = np.int64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:11:10: cimported module has no attribute 'int64'; Traceback (most recent call last):; File ""./setup.py"", line 233, in <module>; ext_modules = cythonize(EXT_MODULES),; File ""/dev/shm/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1016, in cythonize; cythonize_one(*args); File ""/dev/shm/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1138, in cythonize_one; raise CompileError(None, pyx_file); Cython.Compiler.Errors.CompileError: qutip/cy/brtools.pyx; ```. Versions:; ```; Python 2.7.5 (default, Dec 3 2013, 08:35:16) ; [GCC 4.4.6 20120305 (Red Hat 4.4.6-4)] on linux2; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import numpy; >>> numpy.version.version; '1.13.1'; >>> import Cython; >>> print Cython.__version__; 0.26; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317495769:2357,Depend,Dependencies,2357,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317495769,2,['Depend'],['Dependencies']
Integrability,"olve on this dynamics, shape( 6,69,2,2) . Note that I am only taking the 0th element on the axis with lenght of 69. predictions=[mesolve(H,; Qobj(estados_val[i][0]),; time,list_Jump_op,options=Options(nsteps=10000000000000000)) for i in range(len(estados_val))]. The terminal out put is; /home/andrius/anaconda3/lib/python3.8/site-packages/scipy/integrate/_ode.py:1013: UserWarning: zvode: Excess accuracy requested. (Tolerances too small.); warnings.warn('{:s}: {:s}'.format(self.__class__.__name__,; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-11-0bc27bfd6f01> in <module>; 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. <ipython-input-11-0bc27bfd6f01> in <listcomp>(.0); 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 273 progress_bar, dims=rho0.dims); 274 res.num_collapse = len(c_ops). ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); 515 ; 516 if not r.successful():; --> 517 raise Exception(""ODE integration error: Try to increase ""; 518 ""the allowed number of substeps by increasing ""; 519 ""the nsteps parameter in the Options class.""). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class. **Expected behavior**; The time evolution of the 0th states. This is it. Am I doing something wrong with it ?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605:2287,integrat,integration,2287,https://qutip.org,https://github.com/qutip/qutip/issues/1605,2,['integrat'],['integration']
Integrability,olver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:6825,depend,depends,6825,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,"om a superoperator, see, e.g., https://qiskit.org/documentation/stubs/qiskit.quantum_info.average_gate_fidelity.html relating the average gate fidelity to the process fidelity, and https://qiskit.org/documentation/stubs/qiskit.quantum_info.process_fidelity.html#qiskit.quantum_info.process_fidelity to compute that from a superoperator. I think it would be better to use that direct formula if the input is not already in Kraus form!. There is also a function `process_fidelity` in Qutip, but I'm having a hard time understanding what it's intended for. It doesn't seem to be the process fidelity explained in the Qiskit docs above. The arguments of Qutip's `process_fidelity` are called `U1` and `U2` suggesting they are expected to be unitary, but this is not checked. It is computed as `(U1 * U2).tr()`, which is not between 0 and 1, and doesn't give 1 as I'd expect if `U1==U2`. Does someone know the intended use of that function? If not, I'd implement the process fidelity as described in the Qiskit docs here, with several version depending on whether the input is Kraus, a superoperator, and maybe a chi matrix. Lastly, there is an issue with the tests - the lines; ```; class Test_dnorm:; # Skip dnorm tests if we don't have cvxpy or cvxopt available, since it; # depends on them.; cvxpy = pytest.importorskip(""cvxpy""); cvxopt = pytest.importorskip(""cvxopt""); ```; actually skip all the tests in the file if cvxpy is not available, not just the ones in the `Test_dnorm` class. The test output, if `cvxpy` is not installed, is; ```; $ pytest qutip/tests/test_metrics.py ; ============================= test session starts ==============================; platform linux -- Python 3.9.7, pytest-6.2.4, py-1.10.0, pluggy-0.13.1; rootdir: /home/florian/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-10.1; collected 0 items / 1 skipped ; ```; That issue seems to be addressed on the dev.major branch. Would it make sense to take the test file from there and use it in",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1703:1513,depend,depending,1513,https://qutip.org,https://github.com/qutip/qutip/issues/1703,1,['depend'],['depending']
Integrability,"om/hoodmane""><code>@​hoodmane</code></a>]</li>; <li>Add support for pickling TrueType fonts <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5826"">#5826</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Only prefer command line tools SDK on macOS over default MacOSX SDK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5828"">#5828</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix compilation on 64-bit Termux <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5793"">#5793</a> [<a href=""https://github.com/landfillbaby""><code>@​landfillbaby</code></a>]</li>; <li>Replace 'setup.py sdist' with '-m build --sdist' <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5785"">#5785</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use declarative package configuration <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5784"">#5784</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use title for display in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5788"">#5788</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix for PyQt6 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5775"">#5775</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.0.0 (2022-01-02)</h2>; <ul>; <li>; <p>Restrict builtins for ImageMath.eval(). CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a>; [radarhere]</p>; </li>; <li>; <p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:9571,depend,dependabot,9571,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"om/marksmayo""><code>@​marksmayo</code></a>]</li>; <li>Added GPS TIFF tag info <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6661"">#6661</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6647"">#6647</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed seeking to an L frame in a GIF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6576"">#6576</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Consider all frames when selecting mode for PNG save_all <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6610"">#6610</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Don't reassign crc on ChunkStream close <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6627"">#6627</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Raise a warning if NumPy failed to raise an error during conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6594"">#6594</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only read a maximum of 100 bytes at a time in IMT header <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6623"">#6623</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Show all frames in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6611"">#6611</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code><",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:5225,depend,dependabot,5225,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"om/pallets/jinja/commit/20477c63575175196bfc8103f223cc9f5642595d""><code>20477c6</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/5457"">#5457</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/e491223739dedbb1f4fc6a71340c1484e149d947""><code>e491223</code></a> update pyyaml dev dependency</li>; <li><a href=""https://github.com/pallets/jinja/commit/36f98854c721f98ba103f97f65a8a098da5af0d7""><code>36f9885</code></a> fix pr link</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.3...3.1.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:3919,Depend,Dependabot,3919,https://qutip.org,https://github.com/qutip/qutip/pull/2418,1,['Depend'],['Dependabot']
Integrability,"ommit/1b121483ed04d9576a1291758f537e1318cddc8b""><code>1b12148</code></a> Update ossf/scorecard-action to v2.3.1</li>; <li><a href=""https://github.com/kjd/idna/commit/d516b874c3388047934938a500c7488d52c4e067""><code>d516b87</code></a> Update Github actions/checkout to v4</li>; <li><a href=""https://github.com/kjd/idna/commit/c095c75943413c75ebf8ac74179757031b7f80b7""><code>c095c75</code></a> Merge branch 'master' into dev</li>; <li><a href=""https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98""><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>; <li><a href=""https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201""><code>5918a0e</code></a> Merge branch 'master' into dev</li>; <li>Additional commits viewable in <a href=""https://github.com/kjd/idna/compare/v3.4...v3.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reop",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:3973,depend,dependency-name,3973,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['depend'],['dependency-name']
Integrability,ompiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/reshape.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; [ 1/31] Cythonizing qutip/core/_brtools.pyx; [ 2/31] Cythonizing qutip/core/cy/coefficient.pyx; [ 3/31] Cythonizing qutip/core/cy/math.pyx; [ 4/31] Cythonizing qutip/core/data/add.pyx; [ 5/31] Cythonizing qutip/core/data/base.pyx; [ 6/31] Cythonizing qutip/core/data/csr.pyx; [ 7/31] Cythonizing qutip/core/data/dense.pyx; [ 8/31] Cythonizing qutip/core/data/dia.pyx; [ 9/31] Cythonizing qutip/core/data/dispatch.pyx; [10/31] Cythonizing qutip/core,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:8950,depend,depends,8950,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,ompiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/nu,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:7141,depend,depends,7141,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,ompiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/l,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:6982,depend,depends,6982,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,"on makes available. I vaguely remember looking at some Runge-Kutta implementations within scipy where this was a problem. I noted this in the docstring of krotov's [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagators.py#L162), which was an attempt to adapt some of `mesolve`'s inner workings to Krotov's needs. It turned out the overhead was still too large for this work very well, cf. the large runtime of the [corresponding example](https://qucontrol.github.io/krotov/v1.2.1/notebooks/06_example_3states.html). To get very technical, Krotov's requirements are laid out in the documentation of the [`Propagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagators.py#L125) abstract base class, [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagators.py#L162) being a particular example. In particular, the interface we define there is strictly for a single time step, makes no reference to `tlist` and we use ``H=[H0, [H1, u]]`` where `u` is a scalar for that particular timestep. However, I can easily write a wrapper around an `mesolve` that would work something along the lines of the pseudo-code from https://github.com/qucontrol/krotov/issues/93#issuecomment-859717563:. ~~~; for (i, state) in enumerate(; mesolve([H0, [H1, ctrl_array]], state0, list); ):; # assuming `state` is at tlist[i]; new_val = calculate_control_value_for_next_step(state); ctrl_array[i] = new_val; ctrl_array[i+1] = new_val # ignoring IndexError; ~~~. So I don't think you'd have to worry about these details: any implementation with low overhead that would allow me to get the states from `mesolve` as well as tweak the control fields for the next time step should be sufficient. In particular, the `.step` that you discuss in https://github.com/qutip/qutip/issues/1571#issuecomment-858740451 looks very much like it's going in the right direction! The one option from the earlier https://github.com/qu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215:3866,interface,interface,3866,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215,1,['interface'],['interface']
Integrability,on_blas.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:6301,depend,depends,6301,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"onal dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a>; [t-vi, radarhere]</p>; </li>; </ul>; <h2>8.3.0 (2021-07-01)</h2>; <ul>; <li>; <p>Use snprintf instead of sprintf. CVE-2021-34552 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a>; [radarhere]</p>; </li>; <li>; <p>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a>; [kmilos]</p>; </li>; <li>; <p>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a>; [baletu, radarhere, newpanjing, hugovk]</p>; </li>; <li>; <p>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a>; [gofr, radarhere]</p>; </li>; <li>; <p>Replaced xml.etree.ElementTree <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5565"">#5565</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8013f130a5077b238a4346b73e149432b180a8ea""><code>8013f13</code></a> 8.3.2 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/23c7ca82f09df6ba1047d2d96714eb825f0d7948""><code>23c7ca8</code></a> Update CHANGES.rst</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8450366be331762ae327036e3c6658c517b05638""><code>8450366</code></a> Update release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a0afe89990f5ba40a019afc2f22e1b656f8cfd03""><code>a0afe89</code></a> Update test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/9e08eb8f78fdfd2f476e1b20b7cf38683754866b""><code>9e08eb8</code></a> Raise ValueError if color specifier is too long</li>; <li",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:6836,depend,dependabot,6836,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"ontents/lib/python2.7/distutils/dist.py"", line 953, in run_commands; > > > self.run_command(cmd); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 972, in run_command; > > > cmd_obj.run(); > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; > > > _build_ext.build_ext.run(self); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; > > > self.build_extensions(); > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; > > > self.build_extension(ext); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; > > > depends=ext.depends); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; > > > self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; > > > raise CompileError, msg; > > > ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'gcc' failed with exit status 1\n""]; > > > import numpy as np; > > > ; > > > from qutip import *; > > > Traceback (most recent call last):; > > > File ""<stdin>"", line 1, in <module>; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/**init**.py"", line 62, in <module>; > > > qutip.settings.ipython = False; > > > AttributeError: 'module' object has no attribute 'settings'; ###### . This seems similar to the",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382:4208,depend,depends,4208,https://qutip.org,https://github.com/qutip/qutip/issues/382,1,['depend'],['depends']
Integrability,"onvert NetKet's types to Qutip, so that it becomes easy to use it to check our variational calculations. TLDR: I propose creating and documenting a `__qobj__` interface so that arbitrary objects having this method will support conversion to a QuTiP Qobj. --. NetKet has mainly three types that are concerned: hilbert spaces, operators and variational states. ; Hilbert spaces describe the space every object is defined upon, and can be easily converted to your `dims` format. Operators are used to represent operators and super-operators acting on hilbert spaces. We use a very custom format roughly corresponding to a lazy kronecker product. Those object satisfy the numpy `__array__` interface and can be converted by calling `np.array(netket_operator)` or `np.asarray(netket_operator)`. We can also obtain sparse representations (but there is no nice api to do that, so we simply provide a method `netket_operator.to_sparse()`. Variational states can also be converted to vectors or matrices (kets and density operators) as they also support the `__array__` interface. I would like our users to be able to call `Qobj(netket_operator)` or `Qobj(netket_state)` and obtain the corresponding qutip object. We could, in principle support a `netket_operator.to_qobj()` conversion method, but I am strongly opposed to that as this is an ugly design pattern: a way to construct a `Qobj` already exists, it's `Qobj(...)`, and the simplest-to-use api is, in my opinion, to overload this constructor to perform the conversion.; This is a standard design pattern in Julia, which I believe has the best ecosystem inter-compatibility thanks to a standardisation of this pattern through (multiple)dispatch. Numpy too, does the same, through the `__array__` interface: any object that defines a `__array__(self, dtype=None)->np.ndarray` method will be supported by `np.asarray` and `np.array`. Proposal: I would like QuTiP to support a `__qobj__` interface, meaning that your `Qobj` constructor should check if an ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508:1498,interface,interface,1498,https://qutip.org,https://github.com/qutip/qutip/issues/1508,1,['interface'],['interface']
Integrability,"ophic backtracking (<a href=""https://redirect.github.com/pygments/pygments/issues/2355"">#2355</a>)</p>; </li>; <li>; <p>Terraform: Add <code>hcl</code> alias (<a href=""https://redirect.github.com/pygments/pygments/issues/2375"">#2375</a>)</p>; </li>; </ul>; </li>; <li>; <p>Declare support for Python 3.11 and drop support for Python 3.6 (<a href=""https://redirect.github.com/pygments/pygments/issues/2324"">#2324</a>).</p>; </li>; <li>; <p>Update <code>native</code> style to improve contrast (<a href=""https://redirect.github.com/pygments/pygments/issues/2325"">#2325</a>).</p>; </li>; <li>; <p>Update `github-dark`` style to match latest Primer style (<a href=""https://redirect.github.com/pygments/pygments/issues/2401"">#2401</a>)</p>; </li>; <li>; <p>Revert a change that made guessing lexers based on file names slower; on Python 3.10 and older (<a href=""https://redirect.github.com/pygments/pygments/issues/2328"">#2328</a>).</p>; </li>; <li>; <p>Fix some places where a locale-dependent encoding could unintentionally; be used instead of UTF-8 (<a href=""https://redirect.github.com/pygments/pygments/issues/2326"">#2326</a>).</p>; </li>; <li>; <p>Fix Python traceback handling (<a href=""https://redirect.github.com/pygments/pygments/issues/2226"">#2226</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2329"">#2329</a>).</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pygments/pygments/blob/master/CHANGES"">pygments's changelog</a>.</em></p>; <blockquote>; <h2>Version 2.15.0</h2>; <p>(released April 10th, 2023)</p>; <ul>; <li>; <p>Added lexers:</p>; <ul>; <li>Carbon (<a href=""https://redirect.github.com/pygments/pygments/issues/2362"">#2362</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2365"">#2365</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2366"">#2366</a>, <a href=""https://redirect.github.com/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:5686,depend,dependent,5686,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['depend'],['dependent']
Integrability,optimized bloch_redfield_tensor routine,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/336:32,rout,routine,32,https://qutip.org,https://github.com/qutip/qutip/pull/336,1,['rout'],['routine']
Integrability,"or (invalid literal for int() with base 10: '1post0') ... ERROR; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (mc_avg=True) ... ok; > > > mcsolve_f90: check for correct dtypes (mc_avg=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 5.72e+15); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as string list ... ERROR; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ERROR; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > quantum process tomography for snot gate ... ok; > > > quantu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:3817,depend,dependence,3817,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['depend'],['dependence']
Integrability,"or Newton polynomials). That work hasn't really been going anywhere lately, though. It may or may not end up being faster than `mesolve`, but it's certainly less flexible. So even then, an mesolve that can do single steps would still be great. I would also think that being able to do time steps would be exceedingly useful to *any* gradient-based optimal control scheme. Wouldn't it greatly simplify your own GRAPE implementation? I'm referring to the ""Object model"" in [Optimal Quantum Control in QuTiP](https://qutip.org/docs/latest/guide/guide-control.html?highlight=grape#optimal-quantum-control-in-qutip), specifically the `TimeslotComputer` (in fact, we looked at whether `TimeslotComputer` could be used for krotov at the time, but couldn't quite figure it out). I elaborated a little bit in https://github.com/qucontrol/krotov/issues/93#issuecomment-859717563 on the requirements: beyond yielding the propagated states, we'll also have to modify the controls, i.e. the time-dependencies for QuTiP's nested-list format. Within the `krotov` package, these would always be numpy arrays. As an explanation, see [the figure for Krotov's update scheme](https://qucontrol.github.io/krotov/v1.2.1/_images/krotovscheme.svg) from [the documentation](https://qucontrol.github.io/krotov/v1.2.1/07_krotovs_method.html#time-discretization). The single-step-`mesolve` would be for the ""(2) forward-propagation with updated control"" in the bottom of the diagram: After each propagation time step, we calculate a new control value based on the current propagated state and other information (the ∂H/∂ϵ and stored backward-propagated states χ). The new control value is then used for the next time step. I'd also add that `mesolve` ideally should be ""thread-safe"" in the sense that we may have multiple `mesolve` run in parallel (index k in the diagram, where all the different k contribute to the update of the control values at the next time step), within whatever parallelization framework Python makes ava",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215:1938,depend,dependencies,1938,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215,1,['depend'],['dependencies']
Integrability,"or each stochastic collapse operator, but now it is also possible to do something more sophisticated, like in your milstein solver. I've edited your notebook so that it uses the standard (now modified) smesolve and your rhs functions for the milstein methods. http://nbviewer.ipython.org/6153688. Note that I still only use the rhs function for the contributions due to the stochastic collapse operators (both the deterministic and stochastic part), and it does not include the unitary part or the deterministic collapse operators (if those are given as well), so it is not quite what you suggested when proposing that the rhs should calculate \rho_{n+1}. Do you think this approach is reasonable, or do you see any problems with it?. Regarding your milstein implementation, it seems that it is only valid for homodyne detection, since your have hardcoded the d1 and d2 function into the rhs function. I've tried to separate the definition of the SDE (d1 and d2) from the implementation of the SDE integrator (rhs), and naively it seems like you could use the d1 and d2 functions in rhs_milstein to make it possible to use it with hetrodyne detection as well. Is there any difficulties in generalizing the milstein method and parameterize it in terms of d1 and d2 functions in this way?. I've also tried to use the smesolve_imp and smesolve_milstein with explicit=False in your original notebook, but I do not get resuls that agree with the other methods if I use these. Looking at the code for smesolve_imp, you do an inversion of some variant of the liouvillian to calculate Lsparse, what is the purpose of that calculation? And finally, I see you use expm in _smesolve_single_milstein_implicit: I think this should be avoided because it will be very computationally demanding for larger systems. If you are satisfied with how the new rhs functions work I'll merge the branch sme-rhs-restructuring into qutip master and then feel free to submit a pull request with your milstein rhs implementation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35#issuecomment-22088170:1770,integrat,integrator,1770,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22088170,1,['integrat'],['integrator']
Integrability,"or the <code>usemask</code> parameter.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/19615"">gh-19615</a>)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/numpy/numpy/commit/4adc87dff15a247e417d50f10cc4def8e1c17a03""><code>4adc87d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20685"">#20685</a> from charris/prepare-for-1.22.0-release</li>; <li><a href=""https://github.com/numpy/numpy/commit/fd66547557f57c430d41be2fc0764f74a62e8ccf""><code>fd66547</code></a> REL: Prepare for the NumPy 1.22.0 release.</li>; <li><a href=""https://github.com/numpy/numpy/commit/125304b035effcd82e366e601b102e7347eaa9ba""><code>125304b</code></a> wip</li>; <li><a href=""https://github.com/numpy/numpy/commit/c283859128b1a4b57014581570a23ed7950a24ea""><code>c283859</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20682"">#20682</a> from charris/backport-20416</li>; <li><a href=""https://github.com/numpy/numpy/commit/5399c03d4a069fe81a1616be0184c9749d7271ee""><code>5399c03</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20681"">#20681</a> from charris/backport-20954</li>; <li><a href=""https://github.com/numpy/numpy/commit/f9c45f8ebf31340b1a5a0371bfca25afcfc4794e""><code>f9c45f8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20680"">#20680</a> from charris/backport-20663</li>; <li><a href=""https://github.com/numpy/numpy/commit/794b36f7e1bf2a8c42774ab0db86a74bd32f674b""><code>794b36f</code></a> Update armccompiler.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/d93b14e3d7abaa1d837825e51671f817788e120f""><code>d93b14e</code></a> Update test_public_api.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/7662c0789cc6a70d5ad4d950ee2e95f3afef7df6""><code>7662c07</cod",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:3710,depend,dependabot,3710,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['depend'],['dependabot']
Integrability,"ored <code>packaging</code> library to v20.9</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pypa/wheel/commit/6f1608dc1a88f00d2390b9044bd655753f39234c""><code>6f1608d</code></a> Created a new release</li>; <li><a href=""https://github.com/pypa/wheel/commit/cf8f5ef50e32b836c4ffb43af68107f78dca8d80""><code>cf8f5ef</code></a> Moved news item from PR <a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a> to its proper place</li>; <li><a href=""https://github.com/pypa/wheel/commit/9ec201660fa07ee0714edd17c979a7039ea852a4""><code>9ec2016</code></a> Removed install dependency on setuptools (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/483"">#483</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/747e1f6090547abcf65108c5a229cbe21a64a2ae""><code>747e1f6</code></a> Fixed PyPy SOABI parsing (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/76275484bc0de72d1f56601dbba3e816fc2f00c6""><code>7627548</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/480"">#480</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/7b9e8e1022b9c850756ef34bc1a4a88042988a86""><code>7b9e8e1</code></a> Test on Python 3.11 final</li>; <li><a href=""https://github.com/pypa/wheel/commit/a04dfef41be0ab10eadbb2ed5d02b600682dc487""><code>a04dfef</code></a> Updated the pypi-publish action</li>; <li><a href=""https://github.com/pypa/wheel/commit/94bb62cb182023ac6586c5510ae9031ea56bd682""><code>94bb62c</code></a> Fixed docs not building due to code style changes</li>; <li><a href=""https://github.com/pypa/wheel/commit/d635664abe560d48723cfc3b73c52ad8c906760a""><code>d635664</code></a> Updated the codecov action to the latest version</li>; <li><a href=""https://github.com/pypa/wheel/commit/fcb94cd51f",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:3624,depend,dependabot,3624,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['depend'],['dependabot']
Integrability,"orly documented. For example, for the functions `optimize_pulse` and `optimize_pulse_unitary` there are 'params' arguments for many of the underlying classes, but it's not at all clear what count as valid key value pairs for each class.; ```python; Parameters; ----------; alg_params : Dictionary; options that are specific to the algorithm see above; ; optim_params : Dictionary; The key value pairs are the attribute name and value; used to set attribute values; Note: attributes are created if they do not exist already,; and are overwritten if they do.; Note: method_params are applied afterwards and so may override these. method_params : dict; Parameters for the optim_method. ; Note that where there is an attribute of the; Optimizer object or the termination_conditions matching the key ; that attribute. Otherwise, and in some case also, ; they are assumed to be method_options; for the scipy.optimize.minimize method. . dyn_params : dict; Parameters for the Dynamics object; The key value pairs are assumed to be attribute name value pairs; They applied after the object is created. prop_params : dict; Parameters for the PropagatorComputer object; The key value pairs are assumed to be attribute name value pairs; They applied after the object is created. fid_params : dict; Parameters for the FidelityComputer object; The key value pairs are assumed to be attribute name value pairs; They applied after the object is created. init_pulse_params : dict; Parameters for the initial / guess pulse generator object; The key value pairs are assumed to be attribute name value pairs; They applied after the object is created; ```. As a further example, `dyn_params` is passed to a `Dynamics` object which stores it locally in `self.params`, but there isn't any checking of valid keys and values, and I can't find a function which actually uses whatever these params are set to. It's really difficult to run a top-level routine that creates all these objects which you have no clear control over.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1284:2005,rout,routine,2005,https://qutip.org,https://github.com/qutip/qutip/issues/1284,1,['rout'],['routine']
Integrability,"oscillator in ground state ... ERROR; > correlation: legacy me and es for oscillator in steady-state ... ok; > correlation: comparing me and es for oscillator in steady-state ... ok; > correlation: legacy spectrum from es and pi methods ... ok; > correlation: comparing spectrum from es and fft methods ... ok; > correlation: comparing spectrum from es and pi methods ... ok; > correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:3276,message,message,3276,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['message'],['message']
Integrability,"ostly equivalent). I've actually had to solve the equivalent problem of allowing multiple internal formats in the [Fortran QDYN package](https://www.qdyn-library.net), so I'm not sure why I didn't think of that in the first place ;-). I can definitely vouch for the efficiency gained by being able to switch internal sparse representations. So yeah, you'd definitely have the most flexible solution by allowing `Qobj.data` to use varying storage classes from object to object. Maybe the ""protocol"" could be for `Qobj.data` to be any subclass of the [scipy `spmatrix` base class]( https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.spmatrix.html#scipy.sparse.spmatrix)? Then the `Qobj` constructor would probably need an additional parameter `format` for the class that should be used to convert the `inpt` argument to the `data` attribute. The onus would then be on Scipy to provide a full matrix that is a subtype of `scipy.spmatrix` (just to keep the interface contract), and also to have `int64` versions of all their existing sparse classes. From a community standpoint, it would seem like one would get much more bang for the buck to have this problem solved inside SciPy, instead of doing a lot of low-level stuff in QuTiP -- at least if they're amenable to pull requests, but worst case you can still define necessary new `scipy.spmatrix` subclasses externally. Take all of my musings with a little grain of salt... I never really looked too deep into QuTiP's low-level internals, specifically where QuTiP is using Cython. Naively, I would sort of think that Cython would remain at the level of sparse linear algebra operations (and thus mostly in scipy) and that QuTiP could be mainly pure Python. Obviously, once you start implementing higher level things like time propagation or even optimal control in Cython, everything becomes a bit of a mess, because then you really do have to manually implement everything for every possible storage format (again, something I'm famili",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-383937610:1425,interface,interface,1425,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-383937610,2,"['contract', 'interface']","['contract', 'interface']"
Integrability,"ot installed.; awkward-cpp 26 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; awkward 2.5.0 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; matplotlib 3.7.4 requires numpy<2,>=1.20, but you have numpy 1.17.3 which is incompatible.; pandas 2.0.3 requires numpy>=1.20.3; python_version < ""3.10"", but you have numpy 1.17.3 which is incompatible.; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-70.0.0 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/vector.pxd.; Compiling qutip/core/_brtools.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/_element.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:4660,depend,depends,4660,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,"ouble max_row = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; row_sum[ii] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:335:30: ambiguous overloaded method; Compiling qutip/cy/spmatfuncs.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/stochastic.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/sparse_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/graph_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/interpolate.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/spmath.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/heom.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/math.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/cy/spconvert.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/ptrace.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/testing.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/control/cy_grape.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; [ 1/12] Cythonizing qutip/control/cy_grape.pyx; [ 2/12] Cythonizing qutip/cy/graph_utils.pyx; [ 3/12]",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:2132,depend,depends,2132,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['depend'],['depends']
Integrability,"ow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><code>1059eb5</code></a> If appended EOI did not work, do not keep trying</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.3.2&new-version=9.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:16437,Depend,Dependabot,16437,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['Depend'],['Dependabot']
Integrability,"ow/Pillow/issues/6418"">#6418</a>; [hmaarrfk]</p>; </li>; <li>; <p>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a>; [radarhere]</p>; </li>; <li>; <p>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a>; [radarhere]</p>; </li>; <li>; <p>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a>; [npjg, radarhere]</p>; </li>; <li>; <p>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a>; [radarhere]</p>; </li>; <li>; <p>Added GPS TIFF tag info <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6661"">#6661</a>; [radarhere]</p>; </li>; <li>; <p>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6647"">#6647</a>; [radarhere]</p>; </li>; <li>; <p>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d594f4cb8dc47fb0c69ae58d9fff86faae4515bd""><code>d594f4c</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/909dc64ed5f676169aa3d9b0c26f132a06321b83""><code>909dc64</code></a> 9.3.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1a51ce7b955c65c8f2c6bc7772735b197b8a6aa3""><code>1a51ce7</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a> from hugovk/security-libtiff_buffer</li>; <li><a href=""http",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:12783,depend,dependabot,12783,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"ow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a> [<a href=""https://github.com/t-vi""><code>@​t-vi</code></a>]</li>; </ul>; <h2>8.3.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Use snprintf instead of sprintf <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a> [<a href=""https://github.com/newpanjing""><code>@​newpanjing</code></a>]</li>; <li>De-zigzag JPEG's DQT when loading; deprecate con",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:2271,depend,dependabot,2271,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['depend'],['dependabot']
Integrability,"p.pi * sigmax() # H2 applied for time 0.5 results in a full spin flip; H = [[H1, on_off_signal],; [H2, off_on_signal]]. ### Start in a Z basis state. psi0 = basis(2,0). ### Set the collapse operator as the zero matrix (since 1/T_dephasing = 0). T_dephasing = np.inf; c_ops = (1/T_dephasing) * sigmaz(). ### Run simulation. tlist = np.linspace(0, 2, 10000); e_ops = [sigmaz()]; output = mesolve(H, psi0, tlist, c_ops = c_ops, e_ops = e_ops); Z_expectation = output.expect[0]; ```. ### Notes on system:. - The Hamiltonian is periodic and formed of two-pulses.; - H2 applies a full spin flip when applied for time 0.5, so if we start in a Z basis state then Z_expectation should change from +1 to -1 or vice versa. ### Problem:. - When I set c_ops = [], I get the expected behaviour of Z_expectation.; - When I set c_ops to be the zero matrix as in the code above, Z_expectation remains constant, even though this should give exactly the same result as setting c_ops = [].; - This effect seems to depend on the choice of initial state. For a random pure state, setting c_ops to be the zero matrix seems to give the correct result, but for a Z basis state I get the inconsistency.; - This effect is not reproduced by the Monte Carlo based solver, mcsolve. However, I would like to use mesolve if possible because it is much faster for the systems I am considering. ### Some further notes:. - I think this is something to do with the fact that the Hamiltonian is time-dependent. ; - If I just simulate H2, then Z_expectation oscillates as expected. ; - Additionally, if I swap the order of H1 and H2 in the Hamiltonian, then I get the correct result.; - Setting c_ops as the zero matrix results in a much quicker simulation time than setting c_ops = []. This seems somewhat counter-intuitive, since I thought setting c_ops as the zero matrix would force the program to simulate the evolution of the density matrix rather than the state vector.; - Given this, I wonder if mesolve is making an approximation ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/898:2234,depend,depend,2234,https://qutip.org,https://github.com/qutip/qutip/issues/898,1,['depend'],['depend']
Integrability,"pare/3.1.2...3.1.3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:3969,Depend,Dependabot,3969,https://qutip.org,https://github.com/qutip/qutip/pull/2291,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"pare/3.1.3...3.1.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:4251,Depend,Dependabot,4251,https://qutip.org,https://github.com/qutip/qutip/pull/2418,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"pare/8.2.0...8.3.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.2.0&new-version=8.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:9487,Depend,Dependabot,9487,https://qutip.org,https://github.com/qutip/qutip/pull/1654,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"pare/8.3.2...9.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.3.2&new-version=9.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:16504,Depend,Dependabot,16504,https://qutip.org,https://github.com/qutip/qutip/pull/1760,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"pare/9.0.0...9.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.0&new-version=9.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:4106,Depend,Dependabot,4106,https://qutip.org,https://github.com/qutip/qutip/pull/1835,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"pare/9.0.1...9.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.1&new-version=9.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:15812,Depend,Dependabot,15812,https://qutip.org,https://github.com/qutip/qutip/pull/2023,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"patibility_score?dependency-name=certifi&package-manager=pip&previous-version=2023.7.22&new-version=2024.7.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2483:4148,depend,dependabot,4148,https://qutip.org,https://github.com/qutip/qutip/pull/2483,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,piling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/pow.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/adjoint.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/piqs/_piqs.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; C,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:7302,depend,depends,7302,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['depend'],['depends']
Integrability,"pillow/Pillow/issues/7246"">#7246</a> from radarhere/deallocate</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/39a3b1d83edcf826c3864e26bedff5b4e4dd331b""><code>39a3b1d</code></a> Fixed deallocating mask images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8c1dc819fd91471825da01976ac0e0bc8789590f""><code>8c1dc81</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.4.0...10.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.4.0&new-version=10.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:13472,depend,dependabot,13472,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['depend'],['dependabot']
Integrability,"pin for GHA</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cd938a7744cb46e2ea525a0c3dd79aa08f98c150""><code>cd938a7</code></a> Autolink CWE numbers with sphinx-issues</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2e9c461ca417083c43145a991bf9e1ec93237d89""><code>2e9c461</code></a> Add CVE IDs</li>; <li>See full diff in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.0&new-version=9.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:3949,depend,dependabot-automerge-start,3949,https://qutip.org,https://github.com/qutip/qutip/pull/1835,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"plicit conversions. I really do appreciate the interest, and I _am_ keen to let us have better compatibility with the rest of the community, but there are a lot of design concerns that we're going to want to work on our side first - I just want to caution you in case you're trying to work towards a PR, because I'm not close to being happy to accept one, yet. If we're going to do this (and we haven't decided if we will yet), we're going to need to get a lot of wide-ranging input from many different libraries, and we'll want to write out a proper design document and get approval of it before we get deep into the implementation. > The latter would make it harder to support multiple versions of qutip in the implementers, but I would not worry too much about it. You can throw an error saying that this other package is not supported and you should either nag it's developers or downgrade qutip.; >; > I'm not particularly worried about the blame: even if the error is thrown from qutip, if the message is clear enough it will be clear that the fault is in the downstream implementors of the API. I'm concerned from a user's perspective. QuTiP has a wide user base, and we're beyond the stage where ""iterate fast and break things"" is ok for us (though of course it's fine and even good for pre-stable libraries, to avoid getting weighed down). We've got to be concerned with backwards and forwards compatibility; what if a user wants to install and use QuTiP and a different library in the same environment _without_ using them together, but can't even have them coexist because of version incompatibilities in optional conversion features? That's frustrating for users, even though it's not really anybody's fault. Bugging developers is fine when people want to use packages that are still maintained, but I'm sure we've all come up against times in research when you get to trying out a package to do one specific thing that's been abandoned for a while. Again, this certainly isn't an unsolvab",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:3921,message,message,3921,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,1,['message'],['message']
Integrability,"ported options are not fixed. Most integration methods support `""atol""`, but `order` or `beta`, etc. are specific to some methods. SInce new integrators could be added by project such as qutip-cupy, `Options` can no longer be the place to list all supported options. It become little more that a dict. So I propose deprecating it. The documentation of `sesolve`, `mesolve`, etc. now list the options used by the solver and most common ode options and link the the integrator documentation. The class interface has the options property which document the options used by the solver and the integrators have the same. In the online documentation, the integrator api entries only contain the description of the method and the supported options. Since users don't need to call them directly, other methods are hidden and will be included in the dev documentation only. Usage will look like this, for functions:; ```; sesolve(H, psi, tlist, options={""store_states"": True, ""method"": ""lsoda"", ""atol"": 1e-5}); ```; and for the class interface:; ```; solver = SeSolver(H, options={""store_states"": True, ""method"": ""lsoda"", ""atol"": 1e-5}); solver.run(...); solver.options[""atol""] = 1e-9; solver.run(...) # run with the new tol.; solver.options = {""atol"": 1e-2} # only change the affected items. ; solver.run(...) # Also run with the new tol.; solver.options[""method""] = ""adams"" # reset all ode options, including ""atol"" supported by both.; solver.options = {""method"": ""bdf"", ""atol"": 1e-2} # reset all ode options then apply the new atol ; ```. Inside solvers, options are stored in a `_SolverOptions` which is a dict with frozen keys and feedback (chaging atol will reset the integrator).; ; Some `Intergrator` are slip so one method correspond to one integrator. Otherwise, `method` was an options used by both the solver to know which integrator to use and by some integrators. `Options` and `SolverOptions` still both exist for backward compatibility: they raise a warning but return the dict of the same opt",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1955:1194,interface,interface,1194,https://qutip.org,https://github.com/qutip/qutip/pull/1955,1,['interface'],['interface']
Integrability,"precation warning fail CI (<a href=""https://redirect.github.com/certifi/python-certifi/issues/219"">#219</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/e0b9fc5c8f52ac8c300da502e5760ce3d41429ec""><code>e0b9fc5</code></a> remove paragraphs about 1024-bit roots from README</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2022.12.07...2023.07.22"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2022.12.7&new-version=2023.7.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2205:3082,depend,dependabot-automerge-start,3082,https://qutip.org,https://github.com/qutip/qutip/pull/2205,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"ps://github.com/numpy/numpy/commit/794b36f7e1bf2a8c42774ab0db86a74bd32f674b""><code>794b36f</code></a> Update armccompiler.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/d93b14e3d7abaa1d837825e51671f817788e120f""><code>d93b14e</code></a> Update test_public_api.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/7662c0789cc6a70d5ad4d950ee2e95f3afef7df6""><code>7662c07</code></a> Update <strong>init</strong>.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/311ab52488a7d096ac3bc4c2de0fdae17ecd13ef""><code>311ab52</code></a> Update armccompiler.py</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.21.0...v1.22.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.21.0&new-version=1.22.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:5323,depend,dependabot-security-updates,5323,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['depend'],['dependabot-security-updates']
Integrability,"ps://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected BMP and TGA palette size when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6500"">#6500</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.3.0 (2022-10-29)</h2>; <ul>; <li>; <p>Limit SAMPLESPERPIXEL to avoid runtime DOS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a>; [wiredfool]</p>; </li>; <li>; <p>Initialize libtiff buffer when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a>; [radarhere]</p>; </li>; <li>; <p>Inline fname2char to fix memory leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a>; [nulano]</p>; </li>; <li>; <p>Fix memory leaks related to text features <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6330"">#6330</a>; [nulano]</p>; </li>; <li>; <p>Use double quotes for version check on old CPython on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6695"">#6695</a>; [hugovk]</p>; </li>; <li>; <p>Remove backup implementation of Round for Windows platforms <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6693"">#6693</a>; [cgohlke]</p>; </li>; <li>; <p>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a>; [radarhere]</p>; </li>; <li>; <p>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a>; [cgohlke]</p>; </li>; <li>; <p>Release Python GIL when converting images using matrix",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:10711,depend,dependabot,10711,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"ps://qiskit.org/documentation/stubs/qiskit.quantum_info.average_gate_fidelity.html relating the average gate fidelity to the process fidelity, and https://qiskit.org/documentation/stubs/qiskit.quantum_info.process_fidelity.html#qiskit.quantum_info.process_fidelity to compute that from a superoperator. I think it would be better to use that direct formula if the input is not already in Kraus form!. There is also a function `process_fidelity` in Qutip, but I'm having a hard time understanding what it's intended for. It doesn't seem to be the process fidelity explained in the Qiskit docs above. The arguments of Qutip's `process_fidelity` are called `U1` and `U2` suggesting they are expected to be unitary, but this is not checked. It is computed as `(U1 * U2).tr()`, which is not between 0 and 1, and doesn't give 1 as I'd expect if `U1==U2`. Does someone know the intended use of that function? If not, I'd implement the process fidelity as described in the Qiskit docs here, with several version depending on whether the input is Kraus, a superoperator, and maybe a chi matrix. Lastly, there is an issue with the tests - the lines; ```; class Test_dnorm:; # Skip dnorm tests if we don't have cvxpy or cvxopt available, since it; # depends on them.; cvxpy = pytest.importorskip(""cvxpy""); cvxopt = pytest.importorskip(""cvxopt""); ```; actually skip all the tests in the file if cvxpy is not available, not just the ones in the `Test_dnorm` class. The test output, if `cvxpy` is not installed, is; ```; $ pytest qutip/tests/test_metrics.py ; ============================= test session starts ==============================; platform linux -- Python 3.9.7, pytest-6.2.4, py-1.10.0, pluggy-0.13.1; rootdir: /home/florian/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-10.1; collected 0 items / 1 skipped ; ```; That issue seems to be addressed on the dev.major branch. Would it make sense to take the test file from there and use it in the master branch also?. Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1703:1748,depend,depends,1748,https://qutip.org,https://github.com/qutip/qutip/issues/1703,1,['depend'],['depends']
Integrability,"ptions that `Qobj` with a shape of `(1,1)` with be a `Dimensions(Field, Field)` and not a `Field`. . Some previously valid and used list format are no longer accepted. Playing with of tensor of super operators, `permute` and `reshuffle`, you could make object with dims as `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]` which can be interpreted as the tensor of 3 super operators. But then `[[[2, 2], [3, 3]], [[2, 2],[3, 3]]]` can both be interpreted as tensor of super operator or super operator of tensor spaces, so : ; - `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]`: Error; - `[[[2, 2], [4, 4]], [[2, 2], [4, 4]]]`: list representation of dimensions of `to_super(tensor(oper, oper))`; - `[[[2], [2], [3], [3]], [[2], [2], [3], [3]]]`: list representation of dimensions of `tensor(to_super(oper), to_super(oper))`. Dimensions object have a `type` and `shape` set a initialization. There is a check when creating/ modifying a `Qobj` with between the data's shape and dims's shape and an error is raise when they are not matching. . Since operator-ket have a `superrep`, I added the `superrep` parameter to the Superspace instead of the dimensions, for now. But a better look at super operator representation is needed. At the present state, `Qobj.dims` take and return a list, keeping the dimension object internally. From there, minimal adjustment were made so test pass. The eigenstate fix in #1820 is already merged since it would create `Qobj` which dims and shape did not match. ToDo:. - [x] Tensor using dimension directly instead of list.; - [x] QobjEvo.dims use dimension object.; - [x] state and operator accept dimension.; - [ ] Super operator representation.; - [ ] Ptrace, partial_transpose and permute use dimension object (supported with enr states).; - [ ] Flags / new types for rectangular operator?; - [ ] List dimension manipulation function in dimension.py should support the class/ be integrated in it / removed. **Related issues or PRs**; #1476. **Changelog**",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1826:2799,integrat,integrated,2799,https://qutip.org,https://github.com/qutip/qutip/pull/1826,1,['integrat'],['integrated']
Integrability,pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/In,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:6158,depend,depends,6158,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"pygments/pygments/issues/2373"">#2373</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/0e9c87bcf096908956e031f15a4e589e83be1691""><code>0e9c87b</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/ef0abbaece522732031d61391567c017d48d87b7""><code>ef0abba</code></a> Add PostgreSQL Explain lexer (<a href=""https://redirect.github.com/pygments/pygments/issues/2398"">#2398</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/3c6e2af8fbc44bb1ef77389d09118c37faea8746""><code>3c6e2af</code></a> Update CHANGES</li>; <li>Additional commits viewable in <a href=""https://github.com/pygments/pygments/compare/2.14.0...2.15.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:14108,depend,dependabot-security-updates,14108,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['depend'],['dependabot-security-updates']
Integrability,"pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:9113,message,message,9113,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['message'],['message']
Integrability,"python-pillow/Pillow/commit/032d2dc3658f94718109068ac70799313e440754""><code>032d2dc</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd""><code>baae9ec</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><code>1059eb5</code></a> If appended EOI did not work, do not keep trying</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.3.2&new-version=9.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:16115,depend,dependabot-security-updates,16115,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot-security-updates']
Integrability,"python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/spmath.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/heom.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/math.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/cy/spconvert.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/ptrace.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/testing.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/control/cy_grape.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; [ 1/12] Cythonizing qutip/control/cy_grape.pyx; [ 2/12] Cythonizing qutip/cy/graph_utils.pyx; [ 3/12] Cythonizing qutip/cy/heom.pyx; [ 4/12] Cythonizing qutip/cy/interpolate.pyx; [ 5/12] Cythonizing qutip/cy/math.pyx; [ 6/12] Cythonizing qutip/cy/ptrace.pyx; [ 7/12] Cythonizing qutip/cy/sparse_utils.pyx; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/state/partition1/local-scratch/kilian/16342884/pip-build-7c5rN_/qutip/setup.py"", line 216, in <module>; ext_modules = cythonize(EXT_MODULES),; File ""/home/kilian/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1016, in cythonize; cythonize_one(*args); File ""/home/kilian/qutip/lib/python2.7/site-packages/Cython/Build/Dependencies.py"", line 1138, in cythonize_one; raise CompileError(None, pyx_file); Cython.Compiler.Errors.CompileError: qutip/cy/sparse_utils.pyx; ```. Tested with:; * Cython 0.26; * numpy 1.13.1; * gcc 4.9.1. Any recommendation on how to fix this? . Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:3641,Depend,Dependencies,3641,https://qutip.org,https://github.com/qutip/qutip/issues/723,2,['Depend'],['Dependencies']
Integrability,"python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._bootstrap>"", line 673, in _load_unlocked; File ""<frozen importlib._bootstrap_external>"", line 662, in exec_module; File ""<frozen importlib._bootstrap>"", line 222, in _call_with_frames_removed; File ""qutip/cy/setup.py"", line 3, in <module>; from Cython.Distutils import build_ext; ImportError: No module named 'Cython'; Installing without the fortran mcsolver.; ```. EDIT: And `qutip` installs well with `pip` even if `scipy` is not installed (or `matplotlib`). This results in an `ImportError` at first import (or warning). But once installing manually the dependencies, all is fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/426#issuecomment-183253786:2637,depend,dependencies,2637,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786,1,['depend'],['dependencies']
Integrability,"que/lib/python3.5/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar); 319 types.BuiltinFunctionType, partial)):; 320 res = _sesolve_func_td(H, rho0, tlist,; --> 321 e_ops, args, options, progress_bar); 322 else:; 323 res = _sesolve_const(H, rho0, tlist,. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _sesolve_func_td(H_func, psi0, tlist, e_ops, args, opt, progress_bar); 565 #; 566 return _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, norm,; --> 567 dims=psi0.dims); 568 ; 569 . /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, state_norm_func, dims); 656 ; 657 if t_idx < n_tsteps - 1:; --> 658 r.integrate(r.t + dt[t_idx]); 659 ; 660 progress_bar.finished(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in integrate(self, t, step, relax); 406 self._y, self.t = mth(self.f, self.jac or (lambda: None),; 407 self._y, self.t, t,; --> 408 self.f_params, self.jac_params); 409 except SystemError:; 410 # f2py issue with tuple returns, see ticket 1187. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in run(self, f, jac, y0, t0, t1, f_params, jac_params); 863 args = ((f, jac, y0, t0, t1) + tuple(self.call_args) +; 864 (f_params, jac_params)); --> 865 y1, t, istate = self.runner(*args); 866 if istate < 0:; 867 warnings.warn(self.__class__.__name__ + ': ' +. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4445)(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4289)(). TypeError: Cannot convert csr_matrix to numpy.ndarray; ```. Is it expected",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/505:1822,integrat,integrate,1822,https://qutip.org,https://github.com/qutip/qutip/issues/505,1,['integrat'],['integrate']
Integrability,qutip import now fail with the following error message. ```; /usr/local/lib/python3.3/dist-packages/qutip/cyQ/__init__.py in <module>(); 1 from qutip.cyQ.spmatfuncs import *; ----> 2 from qutip.cyQ.blas_funcs import *. ImportError: /usr/local/lib/python3.3/dist-packages/qutip/cyQ/blas_funcs.cpython-33m.so: undefined symbol: dznrm2_; ```,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/39:47,message,message,47,https://qutip.org,https://github.com/qutip/qutip/issues/39,1,['message'],['message']
Integrability,"qutip.testing.run() returns ""Ran 0 tests in 0.000s \ OK"" after installing QuTip 2.2.0 with f90 solver on OSX 10.8. This was reproducible on two macs. Before installing with fortran solver the QuTip installation and testing function normally. After installation with fortran solver the testing returns the above message. The installation seems to be fine though: mcsolve_f90 ran successfully in my simulation, and QuTip examples appear to work normally. To get fortran to compile I installed Xcode developer tools, and gfortran for OSX Mountain Lion from HPC following instructions from http://web.mit.edu/mfloyd/www/computing/mac/gfortran/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/46:311,message,message,311,https://qutip.org,https://github.com/qutip/qutip/issues/46,1,['message'],['message']
Integrability,qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/norm.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/_sode.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__in,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:6938,depend,depends,6938,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['depend'],['depends']
Integrability,"r (`scipy.integrate.ode` or whatever else `mesolve` might be using) when propagating a single time step (and whether I can have multiple integrators to run in parallel that each safely keep track of their own state). That comes down to the integrator itself being ""reentrant"", of course. Certainly, calling `mesolve` in a loop (`In [19]`) doesn't keep the internal state of the integrator, hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent changes in QuTiP now use a re-entrant internal integrator, i.e. not `scipy.integrate.ode`. At the time I implemented the [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) by looking at what `mesolve` was doing at a low level for the specific case of density matrices, `scipy.integrate.ode` was definitely being used, and that couldn't handle propagating in parallel (and by ""parallel"" I include alternating propagation steps from two different propagations). I'm also not sure what using `QobjEvo` does: In the benchmarking, there didn't seem to be any difference whether I wrap my nested lists into `QobjEvo` or not. Is there something specific that `QobjEvo` should enable that I can't do with nested lists?. > QuTiP 5 is (probably) going to formalise that (^) sort of low-level calling convention of `mesolve`, but it should work already. The new one look a bit different because instead o",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:7041,integrat,integrator,7041,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrator']
Integrability,"r guarantee than just ""it's convenient to let `np.array` know about this object"". It was meant to be an indication that your class can be safely coerced into `ndarray` (and potentially coerced back afterwards), and that mathematical operations will satisfy the normal ufunc broadcasting rules, which isn't true of `Qobj`. That means that arrays of things implementing `__array__` should be safely representable as `ndarray`, which clearly isn't true for us. Similarly, ever since `Qobj.__array__` was first defined you could use Numpy ufuncs on `Qobj`, which would get implicitly converted to `ndarray` and then return complete nonsense, rather than throwing an error like ""what you're doing is silly"":; ```python; >>> np.sin(qutip.basis(2, 1)); array([[0. ],; [0.84147098]]); ```; (imo that should really be a `TypeError` if done without an explicit conversion into Numpy semantics). There is a way around that latter point in modern Numpy - defining `Qobj.__array_ufunc__ = Qobj.__array_function__ = None` - but it does raise the question of whether we _should_ define `Qobj.__array__`; we have no intention of implying that `Qobj` satisfies the general Numpy ufunc interface, and it isn't any sort of `ndarray`-like type, because it satisfies matrix semantics, not array semantics. That's the reason `scipy.sparse` types don't implement `__array__`. There always was a sanctioned method for converting `Qobj` to `ndarray` - `Qobj.full()`, similar to `scipy`'s `spmatrix.toarray()` - so `Qobj.__array__` was never a _necessity_, just a convenience in some workflows. Given the tools we can use to suppress the ufunc behaviour, the only question we need to decide on is whether that particular convenience (converting a single `Qobj` to `ndarray` with `np.array` rather than `Qobj.full`) is worth the loss of another (it's now rather faffy to put `Qobj` into an `ndarray`). Both have simple alternatives and I'll go along with either, though my personal preference is not to define `Qobj.__array__`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-773992094:3159,interface,interface,3159,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-773992094,1,['interface'],['interface']
Integrability,"r the instances, and _not_ `__init__`. The former is effectively a class method, while the latter is an instance method; since we want instances representing the same object to be unique, we don't want it. In order to maintain referential equality, tensor-product operations must move into a canonical form. Calling `Compound(Compound(x, y), z)` must return the same object as `Compound(x, y, z)`. Internally this parsing is easy; if one is using the new object constructors, Python evaluation order guarantees that they will flatten themselves; so long as the `Compound` constructor unpacks `Compound` objects at a depth of 1, the whole object will always be as flat as possible. The tensor product will be expanded by having `Compound` ""thread"" over `Map`. This effectively expands the mathematicians' definition of the tensor product to allows us to continue to represent ""silly"" objects such as; ```python; tensor(qeye(5), basis(2).dag()); ```; which is an odd object that contracts one element of a tensor-product space down to the field and leaves the other. This will report its `Qobj.type` as `'other'`, since it is not a standard operation, but that's ok because we no longer need `Qobj.type` for fast dimension parsing. The `Compound` threading over `Map` goes follows these rules:. - `Compound(Map(x1, y1), Map(x2, y2))` is `Map(Compound(x1, x2), Compound(y1, y2))`; - `Compound(Map(x1, y1), Space(z))` is `Map(Compound(x1, Field), Compound(y1, Space(z)))`. In other words, the `from` and `to` fields inside maps are `Compound`ed with their counterparts, and `Space` is ""promoted"" to `Map(Field, Space)`. This latter object is not actually valid, but `Space` will behave as if it were within `Compound`. Related but different, `Compound(Field, Field)` will exist for the purposes of tensor-product `'bra'` types as the `to` field of `Map` (to allow us to keep track of empty spaces), but a `Qobj` whose dimensions would be a `Compound` made entirely of `Field` will instead become a Python",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1421:8289,contract,contracts,8289,https://qutip.org,https://github.com/qutip/qutip/issues/1421,1,['contract'],['contracts']
Integrability,"radarhere""><code>@​radarhere</code></a>]</li>; <li>Add Tidelift alignment action and badge <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5763"">#5763</a> [<a href=""https://github.com/aclark4life""><code>@​aclark4life</code></a>]</li>; <li>Replaced further direct invocations of setup.py <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5906"">#5906</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a> [<a href=""https://github.com/m-shinder""><code>@​m-shinder</code></a>]</li>; <li>Fixed typo <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5902"">#5902</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Switched from deprecated &quot;setup.py install&quot; to &quot;pip install .&quot; <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5896"">#5896</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a> [<a href=""https://github.com/cmbruns""><code>@​cmbruns</code></a>]</li>; <li>Fixed raising OSError in _safe_read when size is greater than SAFEBLOCK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5872"">#5872</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>WebP: Fix memory leak during decoding on failure <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5798"">#5798</a> [<a href=""https://github.com/ilai-deutel""><code>@​ila",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:5814,depend,dependabot,5814,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"radarhere</code></a>]</li>; <li>Added line width argument to ImageDraw polygon <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5694"">#5694</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not redeclare class each time when converting to NumPy <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5844"">#5844</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Only prevent repeated polygon pixels when drawing with transparency <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5835"">#5835</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix pushes_fd method signature <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5833"">#5833</a> [<a href=""https://github.com/hoodmane""><code>@​hoodmane</code></a>]</li>; <li>Add support for pickling TrueType fonts <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5826"">#5826</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Only prefer command line tools SDK on macOS over default MacOSX SDK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5828"">#5828</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix compilation on 64-bit Termux <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5793"">#5793</a> [<a href=""https://github.com/landfillbaby""><code>@​landfillbaby</code></a>]</li>; <li>Replace 'setup.py sdist' with '-m build --sdist' <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5785"">#5785</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use declarative package configuration <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5784"">#5784</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:8701,depend,dependabot,8701,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['depend'],['dependabot']
Integrability,"radarhere]</p>; </li>; <li>; <p>Added alpha_only argument to getbbox() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7123"">#7123</a>; [radarhere. hugovk]</p>; </li>; <li>; <p>Prioritise speed in <em>repr_png</em> <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7242"">#7242</a>; [radarhere]</p>; </li>; <li>; <p>Do not use CFFI access by default on PyPy <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7236"">#7236</a>; [radarhere]</p>; </li>; <li>; <p>Limit size even if one dimension is zero in decompression bomb check <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7235"">#7235</a>; [radarhere]</p>; </li>; <li>; <p>Use --config-settings instead of deprecated --global-option <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7171"">#7171</a>; [radarhere]</p>; </li>; <li>; <p>Better C integer definitions <a href=""https://redirect.github.com/python-pillow/Pillow/issues/6645"">#6645</a>; [Yay295, hugovk]</p>; </li>; <li>; <p>Fixed finding dependencies on Cygwin <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7175"">#7175</a>; [radarhere]</p>; </li>; <li>; <p>Changed grabclipboard() to use PNG instead of JPG compression on macOS <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7219"">#7219</a>; [abey79, radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e34d346f10c0b1c814661e662a3e0c1ef084cf1c""><code>e34d346</code></a> Updated order</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a62f2402a6bcf11a0a1670542216725a3f9190e0""><code>a62f240</code></a> 10.0.1 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d50250d9eab741ae3ddd592d8910cfd7973b9d35""><code>d50250d</code></a> Added release notes for 10.0.1</li>; <li><a href=""https://github.com/python-pillow/Pillow/comm",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:10720,depend,dependencies,10720,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['depend'],['dependencies']
Integrability,"radarhere]</p>; </li>; <li>; <p>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a>; [radarhere]</p>; </li>; <li>; <p>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a>; [npjg, radarhere]</p>; </li>; <li>; <p>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a>; [radarhere]</p>; </li>; <li>; <p>Added GPS TIFF tag info <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6661"">#6661</a>; [radarhere]</p>; </li>; <li>; <p>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6647"">#6647</a>; [radarhere]</p>; </li>; <li>; <p>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d594f4cb8dc47fb0c69ae58d9fff86faae4515bd""><code>d594f4c</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/909dc64ed5f676169aa3d9b0c26f132a06321b83""><code>909dc64</code></a> 9.3.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1a51ce7b955c65c8f2c6bc7772735b197b8a6aa3""><code>1a51ce7</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a> from hugovk/security-libtiff_buffer</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2444cddab2f83f28687c7c20871574acbb6dbcf3""><code>2444cdd</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pyth",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:12964,depend,dependabot,12964,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"ransparency to P images in ImageTk.PhotoImage <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6559"">#6559</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use rounding in ImageOps contain() and pad() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6522"">#6522</a> [<a href=""https://github.com/bibinhashley""><code>@​bibinhashley</code></a>]</li>; <li>Fixed GIF remapping to palette with duplicate entries <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6548"">#6548</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Allow remap_palette() to return an image with less than 256 palette entries <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6543"">#6543</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected BMP and TGA palette size when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6500"">#6500</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.3.0 (2022-10-29)</h2>; <ul>; <li>; <p>Limit SAMPLESPERPIXEL to avoid runtime DOS <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a>; [wiredfool]</p>; </li>; <li>; <p>Initialize libtiff buffer when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a>; [radarhere]</p>; </li>; <li>; <p>Inline fname2char to fix memory leak <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6329"">#6329</a>; [nulano]</p>; </li>; <li>; <p>Fix memory leaks related to text features <a href=""https://github-re",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:9863,depend,dependabot,9863,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['depend'],['dependabot']
Integrability,"rate.ode` in every time steps, it would seem like the only difference between the two is the overhead of `mesolve` deciding that it has to handle the specific case of density matrix propagation. That might be something to keep an eye on in future QuTiP development: Ideally, calling `mesolve` would have negligible overhead compared to manually doing whatever `mesolve` does internally for a particular case. > We're unlikely to add `yield` to `mesolve` directly because that's a very breaking change to one of QuTiP's core functions (we can't return from a generator, or at least not ergonomically), but we are splitting up the `mesolve` monolith into a much more modular architecture, and making it more user-accessible. The other advantage of this is that the integrator component will just be one element of a composable system, so we'll not be tied to scipy integrators any more. I would absolutely not expect you to modifying how `mesolve` works directly. In fact, I would strongly recommend leaving the `mesolve` interface unchanged. The internal refactoring is all I'm after here. @jakelishman in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462:. > I also note that I'm not replying to the thread I thought I was - I thought I was in `krotov`! For my response to the discussion points:. Yeah, sorry the discussion got a little confused between what I was suggesting in https://github.com/qucontrol/krotov/issues/93 for myself to try out (adding a `yield` to `mesolve` as a dirty hack) and the discussion here about how to address the underlying use case properly in QuTiP itself. So just to be clear: Do *not* add a `yield` to the existing `mesolve` function in QuTiP! I would strongly recommend keeping the existing interface for `mesolve` and just refactor what is going on in the backend to enable single-time-step propagation with as little overhead as possible. > * I think the function `qutip.mesolve` shouldn't change interface at all for 5.0 - we can change its backe",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:10158,interface,interface,10158,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['interface'],['interface']
