quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"@cmnbroad @lbergelson Looks like `SparkContextFactory.DEFAULT_TEST_PROPERTIES` is currently initialized statically at class-loading time, resulting in a call to `getGcsHadoopAdapterTestProperties()` even when we're not running the test suite.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3591#issuecomment-330902481:231,test,test,231,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3591#issuecomment-330902481,1,['test'],['test']
Testability,@cmnbroad @samuelklee Seems like there's at least one test failure on this branch: . ```; PythonEnvironmentIntegrationTest. testGATKPythonEnvironmentPackagePresent; java.lang.AssertionError: The installed version of r-backports does not match the 1.1.10 version that was requested. Check the build log to see the actual version that was resolved by conda.; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6955#issuecomment-726961872:54,test,test,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6955#issuecomment-726961872,4,"['Assert', 'log', 'test']","['AssertionError', 'log', 'test', 'testGATKPythonEnvironmentPackagePresent']"
Testability,"@cmnbroad After thinking about this I went ahead and created VariantEvalEngine. Doing this in one PR will simplify some of the sticking points around what is a final change vs. what it expected to be fixed later. With this change, the goal is to strip most logic from VariantEval into the engine. This engine can be constructed with a VariantEvalArgumentCollection, and any kind of GATKTool as the owner. I tried to minimize the amount of context the VariantEvalEngine needed to hang on to. This means all the child classes have visibility on the VariantEvalEngine, but are no longer directly exposed to either the walker class or the argument collection. . All the logic around gathering the arguments to form DrivingVariants is moved to a static method in VariantEvalEngine. . I also rebased and fixed conflicts.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-750428516:257,log,logic,257,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-750428516,2,['log'],['logic']
Testability,"@cmnbroad Ah, thanks for reminding me of that. When will Java 8 be removed from the test suite? Looks like the numerical differences are big enough for some values that further relaxing the delta allowed for matching the expected results doesn't really make sense. I just opened #8111 which just does a hacky runtime check of the Java version and checks against the appropriate set of expected results accordingly. Seems to work locally, but let's see how the tests shake out. I also went ahead and unpinned the Java 11 version there. Whenever we get rid of Java 8, we can get rid of the ""legacy"" set of of expected results as well. I'll file a reminder issue if that PR ends up getting merged. Again, @tmelman might want to keep tabs on all of this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8107#issuecomment-1331241135:84,test,test,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8107#issuecomment-1331241135,2,['test'],"['test', 'tests']"
Testability,@cmnbroad Back to you. Looks good. Much happier with this. Could you fix the typo and add a test case with no options just to make sure nothing weird happens.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/584#issuecomment-114236320:92,test,test,92,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/584#issuecomment-114236320,1,['test'],['test']
Testability,@cmnbroad Can this be closed as resolved? Are all the remaining issues with CRAM tests (like disabled tests) captured in separate tickets?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/590#issuecomment-157761427:81,test,tests,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/590#issuecomment-157761427,2,['test'],['tests']
Testability,@cmnbroad Can you please try your tests with this snapshot of GKL:. https://oss.sonatype.org/content/repositories/snapshots/com/intel/gkl/gkl/0.4.1-SNAPSHOT/. This fixes the GC issues in `IntelInflater` and `IntelDeflater` we discussed today.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-289518026:34,test,tests,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-289518026,1,['test'],['tests']
Testability,@cmnbroad Can you take a look at this branch with its test?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7063#issuecomment-771034031:54,test,test,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7063#issuecomment-771034031,1,['test'],['test']
Testability,"@cmnbroad Could you look into it, if necessary?. ````; org.broadinstitute.hellbender.exceptions.GATKException: Timeout waiting for background stream write to complete; 	at org.broadinstitute.hellbender.utils.runtime.AsynchronousStreamWriterService.waitForPreviousBatchCompletion(AsynchronousStreamWriterService.java:96); 	at org.broadinstitute.hellbender.utils.runtime.AsynchronousStreamWriterServiceUnitTest.dispatchABatch(AsynchronousStreamWriterServiceUnitTest.java:79); 	at org.broadinstitute.hellbender.utils.runtime.AsynchronousStreamWriterServiceUnitTest.testAsyncWriteInBatches(AsynchronousStreamWriterServiceUnitTest.java:35); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.te",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4024:562,test,testAsyncWriteInBatches,562,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4024,2,['test'],"['testAsyncWriteInBatches', 'testng']"
Testability,"@cmnbroad Could you make this bug your top priority, if possible? This appears to be a rather serious issue with GATK4/htsjdk cram support. Depends on the merge of https://github.com/broadinstitute/gatk/pull/1670 for the `PrintReads` test case and test file, but this problem existed before that patch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1673#issuecomment-203660996:234,test,test,234,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1673#issuecomment-203660996,2,['test'],['test']
Testability,@cmnbroad Could you update the tests that you think are most necessary and remove any commented out ones that are not functional as we discussed last week. Sorry for the long delay on this.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/871#issuecomment-153460553:31,test,tests,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/871#issuecomment-153460553,1,['test'],['tests']
Testability,@cmnbroad Filed an issue for the repeating of tests of the docker image (openjdk vs. oraclejdk is irrelevant on the docker tests). #2748,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2726#issuecomment-303595530:46,test,tests,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2726#issuecomment-303595530,2,['test'],['tests']
Testability,@cmnbroad Gross. If it was deliberate can we change the test to use whatever the new behavior is?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296267831:56,test,test,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296267831,1,['test'],['test']
Testability,"@cmnbroad Hope you had a good break. As you might have seen above, I refactored out VariantEvalEngine, which I think will address some of the problems, like passing the walker around, which you didnt like in the PR. . I might not have as good an eye over tests as you, but I believe the failures mostly relate to the change to set 'source' on the VCs. As you probably know, that means it's passed into the resulting VCF, and will change test expectations in some cases. You said someone at GATK was looking into that, but I would be happy to take a stab if your team has ideas on how to address this. If I'm missing test failures beyond that I can take a look.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-754015497:255,test,tests,255,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-754015497,3,['test'],"['test', 'tests']"
Testability,"@cmnbroad I [tried to convince you](https://github.com/broadinstitute/gatk/pull/5378#issuecomment-443382334) that a test on jimfs was better than an integration test, because it exercises the same code (from the parts we want to test, I assume we're not interested in testing GCS itself) but runs faster. Since you insist, I can certainly do the same as an actual integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014:116,test,test,116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455658014,5,['test'],"['test', 'testing']"
Testability,"@cmnbroad I added the changes you suggested, could you take a look? . I added a set of methods to `PythonScriptExecutor` mirroring existing ones that return booleans. I tried to extract as much common code as possible. Also, because now the entry point in `ScriptExecutor` that return `ProcessOutput` does not process and throw any exceptions, I extracted that processing code and manually call it from `GermlineCNVCaller`. Let me know if you have a better idea on a better way to handle it. If that looks good to you, could you also suggest what unit tests you would like me to add?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6866#issuecomment-719058249:552,test,tests,552,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6866#issuecomment-719058249,1,['test'],['tests']
Testability,"@cmnbroad I addressed your comments, except for making a negative test case for GermlineCNVCaller - I added that to #6893 issue with an ongoing list of needed tests. Let me know if the changes look good to you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6866#issuecomment-747633673:66,test,test,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6866#issuecomment-747633673,2,['test'],"['test', 'tests']"
Testability,@cmnbroad I am going to restart and see if it goes away. I am only bugging you about it since it is the python test. But my PR goes nowhere near that code.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4931#issuecomment-399570983:111,test,test,111,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4931#issuecomment-399570983,1,['test'],['test']
Testability,"@cmnbroad I called for volunteers on Slack to test out the new environment in #5026 on a Mac (since I don’t use one), but didn’t get any takers. I’m not sure if it’s a particular package causing the conflict, but I won’t be able to test on my end. In general, I don’t think conda can guarantee cross-platform environments. So we may have to do some further tweaking to the YML or have a separate (and hopefully equivalent) one for Macs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6786#issuecomment-692241551:46,test,test,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6786#issuecomment-692241551,2,['test'],['test']
Testability,"@cmnbroad I cleaned up some of the hashes and was able to create the conda environment locally. Can you try on your mac? We'll see if tests pass on Travis as well, then merge if all is good.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4061#issuecomment-355647907:134,test,tests,134,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4061#issuecomment-355647907,1,['test'],['tests']
Testability,"@cmnbroad I did a pass with a little cleanup. I think this is ready for review, but has a couple things I left the might help review:. 1) As noted above, the primary purpose here is to migrate to MultiVariantWalkerGroupedOnStart, and remove the redundant re-querying of comp alleles. This seems to work, but has the effect of altering behavior in some cases, described more above. In VariantEvalUtils.java I left some debugging code that illustrates the behavior difference that will occur. . 2) It is a fair question as to whether changing the behavior of what is or isnt considered an overlap is appropriate. For now I'm making changes as though it is, since it's sort of a fringe case and this is a beta tool, but it should be discussed. 3) There are ~6 tests with altered expectations, due to that change in detecting overlaps. I just checked in their updated expectations, since it helps illustrate how the iteration change would impact results",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-732478578:757,test,tests,757,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-732478578,1,['test'],['tests']
Testability,@cmnbroad I did some cleanup and added a few more tests. Anything else?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6262#issuecomment-558304744:50,test,tests,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6262#issuecomment-558304744,1,['test'],['tests']
Testability,"@cmnbroad I didn't add a test case here because it seemed like overkill, but I can do so if you think it's necessary.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4546#issuecomment-374743257:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4546#issuecomment-374743257,1,['test'],['test']
Testability,@cmnbroad I extracted a bunch of methods to RunTimeUtils and made it cleaner. I fixed a todo in CommandLineProgram that was related as well. It's hard to test these things because the tests sometimes but don't always the jar with a manifest so I didn't test most of the new methods. I can try to do something more clever if you think it's necessary though...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5537#issuecomment-449460839:154,test,test,154,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5537#issuecomment-449460839,3,['test'],"['test', 'tests']"
Testability,"@cmnbroad I have responded to your comments, most of those TODOs in the test files were leftover working ones that I forgot to remove. I have cleaned the tests up so hopefully it will be painless (relatively) to review.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3851#issuecomment-347921477:72,test,test,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3851#issuecomment-347921477,2,['test'],"['test', 'tests']"
Testability,@cmnbroad I left some of the AnnoationManager code in VariantAnnotatorEngine because there were tests for VariantAnnotatorEngine which required `ofSelectedMinusExcluded` and it seemed clunky to achieve the same thing through the creation and execution of an abstract plugin. I can change it if you would like. Fixes #3287,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4674:96,test,tests,96,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4674,1,['test'],['tests']
Testability,"@cmnbroad I put in a test in GATK that should fail if the dependency is moved to Picard. So, you are 100% correct that these changes will need to go into Picard.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3250#issuecomment-316558645:21,test,test,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3250#issuecomment-316558645,1,['test'],['test']
Testability,"@cmnbroad I realized that this test doesn't use the .crai at all, and if I create a .bai it won't use that either. Perhaps it would be better to remove the index file all-together?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2174#issuecomment-248308401:31,test,test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2174#issuecomment-248308401,1,['test'],['test']
Testability,"@cmnbroad I refactored the training java wrapper into separate wrappers to write tensors (CNNVariantWriteTensors.java) and to train (CNNVariantTrain.java) I think this simplified the meaning/necessity of many of the arguments, which was unclear when all those tools were rolled together. . I'm working on a release-style integration test that chains all the tools together, like @droazen discussed a few meetings ago, but for this PR I think I will have to do something simpler. Because of some issues with the GSA5 environment and GPU, I still have to write in a Python2/3 agnostic way, which precludes the use of type hints. I would like to update, but I'm blocked by BITs in the short term.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4245#issuecomment-367449432:333,test,test,333,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4245#issuecomment-367449432,1,['test'],['test']
Testability,"@cmnbroad I responded to your comments, what do you want to about names? Do you think we should refactor the haplotype caller tests to run with all the types of I also bumped to a more stable looking version of native bindings while I was at it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3600#issuecomment-331546971:126,test,tests,126,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3600#issuecomment-331546971,1,['test'],['tests']
Testability,"@cmnbroad I see. The ""CI"" variable does seem brittle, especially since I'm not strictly sure where it is set. I think a somewhat safer place would be to add some global test flag to the docker image would be to add it to the run_unit_tests.sh script. That way we know it is getting triggered exactly before we run the tests in just the docker environment. Is there some way of detecting what conda environment is active outside of conda.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5819#issuecomment-474871354:169,test,test,169,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5819#issuecomment-474871354,2,['test'],"['test', 'tests']"
Testability,@cmnbroad I think Sam has reviewed the rest of this PR. Thank you for helping me get the argument part working! Assuming tests pass this is ready for a final review.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7996#issuecomment-1282892145:121,test,tests,121,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7996#issuecomment-1282892145,1,['test'],['tests']
Testability,"@cmnbroad I understand that I could have retained a bunch of single-use text files, but it seemed like the more permutations one adds, the less it makes sense to have a separate, very redundant, static text file to check each scenario. There's a ton of VariantContext-related tests that parse the output VCF to test some feature as opposed to checking in a bunch of VCF text files.... While I'll grant the 4th test case I added (where we pass chr 2) isnt especially compelling over just testing chr 1, one could argue more breadth is a good thing here. if you want clarity, pulling that VariantEval report parsing code into a method called extractUniqueContigsFromEvalReport(), or simply adding a comment line, supports this goal. Anyway, I'm checking in slightly clarified version of this now, simply to get tests running. If you respond to the above, maybe we go with that. In the interest of time, I'll stage and check in the version which restores the text files and goes that route.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831459741:276,test,tests,276,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831459741,5,['test'],"['test', 'testing', 'tests']"
Testability,"@cmnbroad I updated VariantQC and identified one minor difference in behavior associated with VariantEvalEngine. Contig stratification assigns level based on all the contigs. If user-supplied contigs are given, it should defer to these. This PR addresses this, and adds a test case. Note: I put the getContigNames() method into VariantEvalEngine, but it would also be possible to keep this in Config, but expose a getter for userSuppliedIntervals. It seemed marginally better to keep that private.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7238:272,test,test,272,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7238,1,['test'],['test']
Testability,"@cmnbroad I was going to actually fix the test data, but when I made the test data valid I started getting test failures. @droazen seemed like he preferred the quick and dirty solution, but maybe I communicated the state poorly to him.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321351249:42,test,test,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321351249,3,['test'],['test']
Testability,@cmnbroad I will write a test for this tomorrow.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5567#issuecomment-454252597:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5567#issuecomment-454252597,1,['test'],['test']
Testability,"@cmnbroad I'm testing the alternative of using `pythonw` instead of `python`. It works on Mac. If also works on Linux (Docker), isn't it an easier fix?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4087#issuecomment-356113814:14,test,testing,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4087#issuecomment-356113814,1,['test'],['testing']
Testability,"@cmnbroad I've implemented a compromise approach in `ReservoirDownsampler.consumeFinalizedItems()` that I think satisfies both of our concerns:. * If `consumeFinalizedItems()` is called after end of input has been signaled, it always clears state (including the end of input flag itself), regardless of whether there are any finalized items; * If `consumeFinalizedItems()` is called before end of input has been signaled, it returns an empty List and does not clear state, since in that case the downsampling process is still ongoing and we want to preserve pending items. I've also added tests to verify this new behavior. Let me know what you think.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5594#issuecomment-458679171:589,test,tests,589,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5594#issuecomment-458679171,1,['test'],['tests']
Testability,@cmnbroad Is there an issue on TestNg tracking that?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296245720:31,Test,TestNg,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296245720,1,['Test'],['TestNg']
Testability,"@cmnbroad It looks like this resolves the git-lfs quota issues, but apparently the M2 WDL tests are failing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3179#issuecomment-311404012:90,test,tests,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3179#issuecomment-311404012,1,['test'],['tests']
Testability,@cmnbroad It's in the docker tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6307#issuecomment-564596826:29,test,tests,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6307#issuecomment-564596826,1,['test'],['tests']
Testability,@cmnbroad Looks good but I noticed failing tests in VariantsSparkSinkUnitTest where you missed an F -> I,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6246#issuecomment-551159792:43,test,tests,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6246#issuecomment-551159792,1,['test'],['tests']
Testability,"@cmnbroad Looks good, just kill that file that snuck back in and assure me that the progress logger actually outputs messages and not some variant of `StringArray[10929123@asdfa]` :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/612#issuecomment-126799547:93,log,logger,93,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/612#issuecomment-126799547,1,['log'],['logger']
Testability,@cmnbroad Merge when tests pass,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6804#issuecomment-689799104:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6804#issuecomment-689799104,1,['test'],['tests']
Testability,"@cmnbroad OK, I tracked down two issues:. - The CpG and repeat status are dictates by the sequence spanning where ReferenceContext thinks it starts. This value is difference in the MultiVariantWalker version than before (basically the version on master can be expanded). I need to think about this. I half-fixed this, which restores the indel -related tests back to their original values (i.e. we no longer change behavior).; ; - I think in some cases the MultiVariantWalker will miss overlapping comp variants upstream of the eval.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-747566966:352,test,tests,352,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-747566966,1,['test'],['tests']
Testability,"@cmnbroad OK, considerable progress here. I was able to adjust behavior such that only two tests have changed behavior from GATK4/master. I think this is now correct. One instance of changed behavior is the Snpeff/overlap one we discussed above. The second is the one where we now provide the full genome as REF, not the truncated genome. I think this difference is justified since the tool now requires a reference, and the prior version was arguably too lenient on validation of contigs. Anyway, this branch now also removes by debugging code and comments. I think it is ready for a review. To some other questions you had above:. 1) The HashMap<FeatureInput<VariantContext>, HashMap<String, Collection<VariantContext>>> can be wrapped in a class with just a couple of methods, so we don't have to manifest that long type all over the place. I realize that's non-optimal, but this isnt anything I introduced here. I would really like to keep this PR as limited as we can, and address some larger refactoring in a different PR, once we've migrated to MultiVariantWalkerGroupedOnStart. 2) I know this PR still in an interim state, but passing the VariantWalker in as an argument to the comp methods doesn't seem like a step forward to me. If we can't solve that problem completely in this PR (which is fine, I'm all for trying to contain this), are those changes necessary ? Perhaps that part should just wait for the next round. As noted above, I'd like to propose this as iterative, with a second PR coming soon. I did this b/c it moved us toward not needing to pass around the walker. It minimizes the code that has access to the walker (as opposed to setting it after creating the instance of the Evaluator, etc. Yes, it exposes it for two methods, but those classes no longer hang on to it. I would like to ultimately remove this entirely. 3) To re-iterate testEvalTrackWithoutGenotypesWithSampleFields: the input file, noGenotypes.vcf, has a header dictionary with the full set of contigs, and a",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-747619130:91,test,tests,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-747619130,1,['test'],['tests']
Testability,"@cmnbroad OK, finally got a clean test run.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827756253:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827756253,1,['test'],['test']
Testability,"@cmnbroad OK, new test added",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827196883:18,test,test,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827196883,1,['test'],['test']
Testability,"@cmnbroad OK, rebase + conflicts fixed. The changes in the Arguments looked pretty limited: just one File->GATKPath and another instance of File->Path. To move forward: I left some debugging code that makes it relatively easy to explore the behavior change. See: https://github.com/broadinstitute/gatk/pull/6973/files#diff-510f106f1226c4aaef8bf898603f9c124a60065d56d08c8f333b42443fedc68cR235. I left the code that did the original re-query for variants. It logs when the old/new set of variants isnt equal, which you can also put a breakpoint on. What's going to help you review this and/or discuss whether you think this is an acceptable difference?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-739047755:457,log,logs,457,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-739047755,1,['log'],['logs']
Testability,@cmnbroad Or maybe it's silly to bother with since we're moving all the logging to log4j anyway.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/603#issuecomment-122924448:72,log,logging,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/603#issuecomment-122924448,1,['log'],['logging']
Testability,"@cmnbroad Someone once actually fixed all the bam files so they were valid and we rejected it because people were afraid that the fixes were not going to maintain the test conditions properly. So my guess is no, we will never do #569.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321351743:167,test,test,167,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321351743,1,['test'],['test']
Testability,"@cmnbroad Sorry for the very long delay before reviewing this. I think this is a good solution. I think the test is a bit weird at the moment, but it's a weird thing to try and test. . 1: Could you make `setLoggingLevel` a static method in `Utils`, and give it a clear comment saying that it changes the global logging level (it does change the global logging level yes? Do I misunderstand what's happening? ) . 2: Could you then move the test to `UtilsUnitTest` run through all 4 levels of logging in the test, and then reset it to the initial state (if that's possible..) . Thanks for figuring this out and sorry for delay.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/603#issuecomment-122420930:108,test,test,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/603#issuecomment-122420930,7,"['log', 'test']","['logging', 'test']"
Testability,"@cmnbroad Sorry to bug here, but I am wondering if it would be possible for someone to review. This is a limited change that basically consolidates some internal code in PedigreeAnnotation and exposes a couple protected getters. Tests are passing. Thanks in advance.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7277#issuecomment-853234849:229,Test,Tests,229,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7277#issuecomment-853234849,1,['Test'],['Tests']
Testability,@cmnbroad Thank you again! I responded/fixed all of your comments/review and will hopefully obtain some test data later this afternoon!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5762#issuecomment-474890328:104,test,test,104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5762#issuecomment-474890328,1,['test'],['test']
Testability,"@cmnbroad Thank you for pointing out those build failures and even digging down to the apparent cause! I investigated and the issue wasn't inability to decompress gzip files (or at least wasn't only that), but XReadLines trims the lines by default and my code doesn't. The ""expected"" files have an extra tab at the end of some lines (the CHROM line for example) that this was picking up. What I've done is updated XReadLines so it can take Paths as input, so we get good matching behavior without having to duplicate code. While I was at it I also exposed XReadLines' ability to strip out comments, so assertEqualTextFiles didn't need to re-implement it anymore. Assuming Travis passes, this should be ready to review. I have the feeling we're getting close!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456919065:602,assert,assertEqualTextFiles,602,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456919065,1,['assert'],['assertEqualTextFiles']
Testability,"@cmnbroad Thank you so much for the reply. I don't have a small test case for you, but I can provide some other information.; It is RNA seq data and passes validation check (`java -jar picard.jar ValidateSamFile I=S3_2.unmapped.split.bam MODE=SUMMARY`).; BaseRecalibrator cmd:; `gatk BaseRecalibrator -R Homo_sapiens_assembly38.fasta -I S3_2.unmapped.split.bam --use-original-qualities -O S3_2.unmapped.recal_data.csv -known-sites Homo_sapiens_assembly38.dbsnp138.vcf -known-sites Mills_and_1000G_gold_standard.indels.hg38.vcf.gz --known-sites Homo_sapiens_assembly38.known_indels.vcf.gz`; ApplyBQSR cmd:; `gatk ApplyBQSR -R Homo_sapiens_assembly38.fasta -I S3_2.unmapped.split.bam -O S3_2.unmapped.aligned.duplicates_marked.recalibrated.bam -bqsr S3_2.unmapped.recal_data.csv --add-output-sam-program-record --use-original-qualities`; RecalTables in S3_2.unmapped.recal_data.csv are empty. Here is the screen dump of BaseRecalibrator and ApplyBQSR.; BaseRecalibrator; ```; Using GATK jar <XXX>/gatk-4.1.4.1-83-g031c407-SNAPSHOT/gatk-package-4.1.4.1-83-g031c407-SNAPSHOT-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar <XXX>/gatk-4.1.4.1-83-g031c407-SNAPSHOT/gatk-package-4.1.4.1-83-g031c407-SNAPSHOT-local.jar BaseRecalibrator -R Homo_sapiens_assembly38.fasta -I S3_2.unmapped.split.bam --use-original-qualities -O S3_2.unmapped.recal_data.csv -known-sites Homo_sapiens_assembly38.dbsnp138.vcf -known-sites Mills_and_1000G_gold_standard.indels.hg38.vcf.gz --known-sites Homo_sapiens_assembly38.known_indels.vcf.gz; 23:39:34.668 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:<XXX>/gatk-4.1.4.1-83-g031c407-SNAPSHOT/gatk-package-4.1.4.1-83-g031c407-SNAPSHOT-local.jar!/com/intel/gkl/native/libgkl_compression.so; Feb 26, 2020 11:39:34 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6242#issuecomment-592005237:64,test,test,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6242#issuecomment-592005237,1,['test'],['test']
Testability,@cmnbroad Thanks for restarting - we have clean tests now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831412250:48,test,tests,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831412250,1,['test'],['tests']
Testability,@cmnbroad Thanks for the links. . The test as it existed before seems like a typo that happened to work due to coincidental weird behavior in testng. It's really confusing that `Arrays.asList(int[])` is `List<int[]>` and not `List<Integer>`,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2611#issuecomment-296283147:38,test,test,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2611#issuecomment-296283147,2,['test'],"['test', 'testng']"
Testability,"@cmnbroad The path to the c++ compiler can be specifically provided to theano by setting `theano.config.cxx` in python scripts, or by creating a `.theanorc` in the home directory, or by setting the environmental variable `THEANO_FLAGS=cxx=<path_to_g++>,...`. If a working c++ compiler exists and provided to theano, it is fair to assume that the graph _will_ compile. If the c++ compiler is not explicitly specified, theano will try to discover it. It first tries to execute `g++ -v` in the present environment and if it succeeds, it resolves the absolute path to the executable. On darwin, it further searches for `clang++` and on Win32, it looks for a working mingw gcc setup. We could _enforce_ the presence of a c++ compiler at the beginning of all python scripts and throw an exception and an informative message instead of numpy/python fallback. If we do so, the integration tests (and all gCNV CLI tools) will fail and will force the user to install a c++ compiler. In your opinion, is this fail-fast strategy a better approach, given that python fallback runs 2~3 orders of magnitude slower?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3912#issuecomment-350193484:881,test,tests,881,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3912#issuecomment-350193484,1,['test'],['tests']
Testability,"@cmnbroad There used to be, but I don't actually know for sure. I'm not sure how to figure it out either without just deleting R from the installation and running the test suite... I didn't know picard required R?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4209#issuecomment-359099269:167,test,test,167,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4209#issuecomment-359099269,1,['test'],['test']
Testability,"@cmnbroad We're seeing some weird Python failures in this branch (https://storage.googleapis.com/hellbender-test-logs/build_reports/master_32072.5/tests/test/index.html and https://storage.googleapis.com/hellbender-test-logs/build_reports/master_32072.5/tests/test/index.html). Example error:. ```; org.broadinstitute.hellbender.utils.python.PythonScriptExecutorException: A nack was received from the Python process (most likely caused by a raised exception caused by): nkm received. : Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/miniconda/envs/gatk/lib/python3.6/site-packages/vqsr_cnn/vqsr_cnn/models.py"", line 26, in start_session_get_args_and_model; return args_and_model_from_semantics(semantics_json, weights_hd5, tensor_type); File ""/opt/miniconda/envs/gatk/lib/python3.6/site-packages/vqsr_cnn/vqsr_cnn/models.py"", line 33, in args_and_model_from_semantics; model = set_args_and_get_model_from_semantics(args, semantics_json, weights_hd5); File ""/opt/miniconda/envs/gatk/lib/python3.6/site-packages/vqsr_cnn/vqsr_cnn/models.py"", line 90, in set_args_and_get_model_from_semantics; model = load_model(weights_hd5, custom_objects=get_metric_dict(args.labels)); File ""/opt/miniconda/envs/gatk/lib/python3.6/site-packages/keras/engine/saving.py"", line 419, in load_model; model = _deserialize_model(f, custom_objects, compile); File ""/opt/miniconda/envs/gatk/lib/python3.6/site-packages/keras/engine/saving.py"", line 224, in _deserialize_model; model_config = json.loads(model_config.decode('utf-8')); AttributeError: 'str' object has no attribute 'decode'. 	at org.broadinstitute.hellbender.utils.python.StreamingPythonScriptExecutor.waitForAck(StreamingPythonScriptExecutor.java:222); 	at org.broadinstitute.hellbender.utils.python.StreamingPythonScriptExecutor.sendSynchronousCommand(StreamingPythonScriptExecutor.java:183); 	at org.broadinstitute.hellbender.tools.walkers.vqsr.CNNScoreVariants.initializePythonArgsAndModel(CNNScoreVariants.java:557); 	a",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6718#issuecomment-724836660:108,test,test-logs,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6718#issuecomment-724836660,6,['test'],"['test', 'test-logs', 'tests']"
Testability,@cmnbroad We've merged the htsjdk changes! Could you refactor the progress logger by extending the new `AbstractProgressLogger`. Thanks and sorry for the delay.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/612#issuecomment-125967537:75,log,logger,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/612#issuecomment-125967537,1,['log'],['logger']
Testability,@cmnbroad Would you mind profiling `setHeaderStrict()` against `setHeader()` when you get a chance to determine whether the former is more costly than the latter? We've seen a spike in our test suite runtimes today and I want to rule this out as a potential cause. A simple loop that calls each method on each read in a bam + the unix time command should suffice.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1541#issuecomment-191873209:189,test,test,189,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1541#issuecomment-191873209,1,['test'],['test']
Testability,"@cmnbroad Yeah, the M2 failures went away in the most recent build, only to be replaced with the `XHMMSegmentCallerBaseIntegrationTest` transient failure :) . Since @mbabadi has a PR that fixes `XHMMSegmentCallerBaseIntegrationTest`, we can merge this into master, rebase that PR on top of it and merge, and then we should have passing tests again!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3179#issuecomment-311409797:336,test,tests,336,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3179#issuecomment-311409797,1,['test'],['tests']
Testability,@cmnbroad You're ok with this test being removed? Just wanted to double check before merging.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5537#issuecomment-451000856:30,test,test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5537#issuecomment-451000856,1,['test'],['test']
Testability,"@cmnbroad and @jonn-smith Thanks! It now says ""First-time contributors need a maintainer to approve running workflows"" - does something else need to be approved? I'm not actually a first-time GATK contributor, but I'm not sure how that logic is determined/enforced. I dont have merge privileges' either. @jonn-smith: good to virtually meet you. As I alluded to above, my goal is to extend funcotator to make a new output format that more or less takes the annotations and writes them as discrete INFO fields, rather than the concatenated string. This PR will hopefully largely unblock us. As this develops, do you have any interest in us trying to contribute features back into GATK, or should be just keep separate. There may also be a handful of more minor extensions as we use this more, such as adding a config option to include/exclude specific VCF INFO fields, rather than always transfer 100% of them (which appears to be behavior today, but I just reviewed briefly). Obviously these would be case-by-case, but I'm happy to try to push features back here if you have interest/time in reviewing them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8124#issuecomment-1353346614:236,log,logic,236,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8124#issuecomment-1353346614,1,['log'],['logic']
Testability,"@cmnbroad and @samuelklee : I am going to remove the test (``testNonStrictBAMWithSilentValidationStringency`) and if auto-tests pass, I am going to merge.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3203#issuecomment-314456914:53,test,test,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3203#issuecomment-314456914,3,['test'],"['test', 'testNonStrictBAMWithSilentValidationStringency', 'tests']"
Testability,"@cmnbroad and I have both observed that the `SortSamSparkIntegrationTest.testSortBAMsSharded` tests fail locally on our machines despite the tests apparently working on travis. The tests fail because the comparator detects the files are out of their reported sort order. When I went digging into the failing tests it appears that the files are getting correctly sorted and written out correctly into 2 shards with proper names (`filename-0000` and `filename-0001`). After reading the sharded directory as input, it appears that the two files are read out of order. That is to say that calling `readsRDD.collect()` clearly places all of the `filename-0001` reads before the `filename-0000` reads. . After digging around it appears the problem might lie in Disq somewhere as it appears everything is working as expected until the `abstractSamSource.getReads()` line is encountered in `HtsjdkReadsRddStorage`. I suspect something is going awry with the filesystem mechanism for ordering the input files on our Macs that travis is sidestepping. . Out of curiosity @tomwhite I thought that the sharded output wrote headerless bam chunks, but that appears not to be the case at all? Was I wrong in that assumption or did that change when we switched to Disq.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5881:73,test,testSortBAMsSharded,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5881,5,['test'],"['testSortBAMsSharded', 'tests']"
Testability,"@cmnbroad apologies, I intended to upload the log from the same shard, the stderr is re-uploaded here. All shards of 4.0.6.0 failed, while all shards of 4.0.4.0 succeeded. . [gengvcferr.txt](https://github.com/broadinstitute/gatk/files/2207790/gengvcferr.txt)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5024#issuecomment-406119705:46,log,log,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5024#issuecomment-406119705,1,['log'],['log']
Testability,@cmnbroad back to you. If you can come up with a meaningful test for this it wouldn't be a bad thing as well.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/566#issuecomment-112518160:60,test,test,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/566#issuecomment-112518160,1,['test'],['test']
Testability,@cmnbroad can you clarify when you'd like to see the version number. When gatk runs it does print the version:. ```; /gatk-launch FlagStat --input ./src/test/resources/org/broadinstitute/hellbender/tools/valid.bam; ```. prints. ```; ... Version: Version:4.alpha.rc1-2-g29dfbf5-SNAPSHOT JdkDeflater; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1287#issuecomment-163744324:153,test,test,153,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1287#issuecomment-163744324,1,['test'],['test']
Testability,"@cmnbroad could the failing WDL test simply be due to some Spark configuration issue, rather than memory? Locally, for both 1) the WDL test within the Docker and 2) CreateReadCountPanelOfNormalsIntegrationTest using 17.0.3 without the Docker, I seem to hit the exception discussed here: https://stackoverflow.com/questions/72724816/running-unit-tests-with-spark-3-3-0-on-java-17-fails-with-illegalaccesserror-cl. Not sure why CreateReadCountPanelOfNormalsIntegrationTest seems to pass in the CI environments, but perhaps it'll be more obvious to you?. Just for context, note that this tool relies on the Spark MLlib implementation of PCA.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8035#issuecomment-1409180990:32,test,test,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8035#issuecomment-1409180990,3,['test'],"['test', 'tests-with-spark-']"
Testability,"@cmnbroad could you point me to the relevant tests so I can figure out the various resource files that I assume the tests use in their commands? I want to make sure I get you everything you need, as I may make you a new small reference, given the small data I have available right now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371499166:45,test,tests,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371499166,2,['test'],['tests']
Testability,"@cmnbroad finally got a clean test run. what do you think about the PRs? should i squash/rebase #7219 (or maybe you'd be OK doing that via github on approval)? with that done, i will then squash/rebase this PR?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-828093693:30,test,test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-828093693,1,['test'],['test']
Testability,"@cmnbroad hopefully a simple update, it compiles fine but we'll see if tests pass....",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3962#issuecomment-351552151:71,test,tests,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3962#issuecomment-351552151,1,['test'],['tests']
Testability,"@cmnbroad is correct, reducing parallelism from cram in a test run from 8 to 4 threads allowed the run to progress normally. ; Since there is a task to remove this adhoc parallelism for a spark alternative I guess that is the way to go from this point on. #6876. However that actually would not solve the mem consumption issues as spark to work effectively the memory would need to be scaled up if you really want to run in parallel, is that right?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7189#issuecomment-818754629:58,test,test,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7189#issuecomment-818754629,1,['test'],['test']
Testability,@cmnbroad it appears we have clean tests now?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-829791315:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-829791315,1,['test'],['tests']
Testability,@cmnbroad just dropped the GATK3 tests and squashed. let's hope this is it!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440500843:33,test,tests,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440500843,1,['test'],['tests']
Testability,"@cmnbroad just to check one thing: are you expecting that #4571 is actually going to get resolved outside of this PR? based on it not having any action in the last year I figured that PR was dead and I'd need to deal with anything related to that here? I had been focusing on VariantEval, but I will look into these other tests",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-749802223:322,test,tests,322,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-749802223,1,['test'],['tests']
Testability,"@cmnbroad ok, I see the difference, coincidentally I used only Picard tools as a test.; Running PrintReads as you suggested definitely displays the right version; `Picard Version: 2.18.2`; Thank you",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4733#issuecomment-387087349:81,test,test,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4733#issuecomment-387087349,1,['test'],['test']
Testability,"@cmnbroad on a related note -- it might be worthwhile to setup the Docker to include a dynamic BLAS library and pass it to theano. I will test how it affects the performance. NumPy is usually either linked against MKL or OpenBLAS. If theano has no dynamic BLAS lib available to link the compiled graph against, it will fall back to NumPy for linalg ops. It is not too bad since the only cost is the c++/python communication overhead.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3912#issuecomment-350264808:138,test,test,138,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3912#issuecomment-350264808,1,['test'],['test']
Testability,"@cmnbroad one of the tests failed; however, it seems to just be a timeout:. https://api.travis-ci.org/v3/job/457478297/log.txt. are you able to restart them? again, I believe this addresses all concerns listed above except for the iteration (which will be addressed in the engine in a new PR), and the naming of CompRod and EvalRod classes. I'm fine changing these and associated outputs; however, I would appreciate suggestions on the best new names. CompInput, CompFeatureInput, CompSource, CompTrack, or something like that?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440333816:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-440333816,2,"['log', 'test']","['log', 'tests']"
Testability,@cmnbroad please review (assuming there aren't any test failures that I missed in my local testing),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321078016:51,test,test,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3421#issuecomment-321078016,2,['test'],"['test', 'testing']"
Testability,@cmnbroad please review. very small test,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/881:36,test,test,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/881,1,['test'],['test']
Testability,@cmnbroad rebased and reverted the dockerfile. Tests pass locally. I'm also running a test in the cloud to see the impact of environment variables on speedup.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5725#issuecomment-476752829:47,Test,Tests,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5725#issuecomment-476752829,2,"['Test', 'test']","['Tests', 'test']"
Testability,"@cmnbroad rebasing is done. To summarize changes since your last review:. - I backed out the earlier changes to FeatureInput/FeatureDataSource in favor of those from #7219 ; - I dont entirely know why this didnt hit before, but I made an update to VariantStratifiers to make tests pass. See: https://github.com/broadinstitute/gatk/pull/6973/commits/1569a909d3dc2301337e46441cc0cd969843c8d1. The gist is that we now instantiate those classes and pass VariantEvalEngine. Two of these classes had validation in their constructors, and could throw a CommandLineException if the tool was executed with bad arguments. This exception was getting caught and re-thrown as GATKException with the misleading message ""Problem making an instance of ...."". This proposal is to make a separate VariantStratifier.validateArgs() method, with a default no-op validation, and to call this only after instantiation. This was already exercised under the tests, such as testMultipleEvalTracksAlleleCountWithoutMerge(). VariantEval tests pass locally for me. With luck, tests will pass here.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-827805993:275,test,tests,275,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-827805993,5,['test'],"['testMultipleEvalTracksAlleleCountWithoutMerge', 'tests']"
Testability,@cmnbroad reports that he's seeing out-of-memory errors when running the test suite locally. He says it could be a recently-introduced regression -- we should narrow it down to a single commit.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2484:73,test,test,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2484,1,['test'],['test']
Testability,"@cmnbroad sorry to pester but i'm hoping to keep momentum here. were there any issues with the PR except for improving the test (which is done)? Only one test failed, with a test compile error related to GencodeGtfCodecUnitTest (https://travis-ci.com/github/broadinstitute/gatk/jobs/501273207). Given all else passed this seems like a test artifact?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827593892:123,test,test,123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-827593892,4,['test'],['test']
Testability,@cmnbroad tests seem to be passing,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7041#issuecomment-784431044:10,test,tests,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7041#issuecomment-784431044,1,['test'],['tests']
Testability,"@cmnbroad thank you so much for looking into this carefully! I have pushed a fix for the issue. In addition to using an `ArrayList` in `XReadLines` (to speed up all callers), I also fixed `assertEqualTextFiles` to do a streaming comparison so it uses less memory (and might even run a bit faster).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462862138:189,assert,assertEqualTextFiles,189,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-462862138,1,['assert'],['assertEqualTextFiles']
Testability,"@cmnbroad thanks for the additional info. Some more detail from my side in case others stumble upon the same problem... * My input file comes from gnomad (`gs://gnomad-public/release/2.0.2/vcf/genomes/gnomad.genomes.r2.0.2.sites.chr18.vcf.bgz`). I editied it only to turn chromosome ""18"" into ""chr18"". * bcftools handles the duplicate INFO correctly and it fixes it! In case someone find it useful this is the command I used to retain only the AF tag and discard missing values:. ```; bcftools annotate -O z -i 'INFO/AF > 0' -x ^INFO/AF gnomad.r2.0.2.biallelic.hg38.chr18.vcf.gz > gnomad.r2.0.2.simple.hg38.chr18.vcf.gz; ```. * Unrelated to this particular issue, `gatk GetPileupSummaries` (next command in my workflow) doesn't like tags with missing values, I get a NumberFormatException error (I think, I don't have the logs). Hence the option `INFO/AF > 0` in bcftools.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4252#issuecomment-365640704:822,log,logs,822,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4252#issuecomment-365640704,1,['log'],['logs']
Testability,@cmnbroad thanks for your review. I changed the default behavior to work around the issue and now the test is passing.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7739#issuecomment-1081159176:102,test,test,102,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7739#issuecomment-1081159176,1,['test'],['test']
Testability,"@cmnbroad yes, i saw the conflict and will get to that and rebase. regarding test expectation changes: in a couple instances the genome territory number changes quite a lot. this is because I needed to switch the genome from the chr20-21 version to the full thing, since the input VCF has variants from other contigs. The old test probably should not have worked (the reference genome was basically ignored then). The biggest changes are in testSelect1.expected.txt and testStandardIndelEval.expected.txt. These changes are generally related to comp overlaps, and I am pretty sure all similar to my example above. To state another way: the tool as-is builds a whitelist of sites, by first identifying any variant overlapping the driving variants (possibly limited by -L). If a multi-site variant overlaps one of those sites, it expands the ReferenceContext. This means if the original variant was a single-base variant at 1423282, but is it overlapped by a large indel starting at 1423281, then the reference context is expanded accordingly. The problem is that the tool as-is then iterates these expanded reference contexts, and asks for every variant in the Comp VCFs that overlaps (defined as starts within) these expanded intervals, not limiting itself to the Eval variants.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-736096877:77,test,test,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-736096877,3,['test'],"['test', 'testStandardIndelEval']"
Testability,"@cmnbroad yes, please change the dataflow tests too.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/419#issuecomment-112536828:42,test,tests,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/419#issuecomment-112536828,1,['test'],['tests']
Testability,"@cmnbroad yes, was literally just checking that in. I agree it's probably better to rethrow and preserve the stack than preserving the original class like my first commit did. Do you expect that so few of the travisci suites seem to actually run these integration tests? only three actually failed?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-827938856:264,test,tests,264,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-827938856,1,['test'],['tests']
Testability,"@cmnbroad yes, you're right. anyway, tests are now clean",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831526305:37,test,tests,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831526305,1,['test'],['tests']
Testability,"@cmnbroad you're right, I forgot to update the CNNVariantPipeline test with the new arguments. Should be fixed now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5042#issuecomment-411107905:66,test,test,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5042#issuecomment-411107905,1,['test'],['test']
Testability,"@cmnbroad, I opened a PR to fix `CountingReadFilter` and here I push two commits: one removing the complicated implementation and comming back to an independent `CountingVariantFilter`and the second with the tests. Can you review?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2195#issuecomment-273099363:208,test,tests,208,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2195#issuecomment-273099363,1,['test'],['tests']
Testability,"@cmnbroad, is 400MB (fasta, dictionary & index) too large for you?; It is possible for me to ~halve this but I have to construct artificial contigs. It is also possible to gz zip the fasta and the test would have to include a step to expand it out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-373170450:197,test,test,197,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-373170450,1,['test'],['test']
Testability,"@cmnbroad, passing MIN_DP to the attributesToIgnore list still checks it! It's ignored only when I remove it inside assertAttributesEquals() method. Is this expected?. Also, I get similar double vs integer checks fail for END and DP. In case of SB, the comparator fails as two arrays toString() methods differ (I guess):. java.lang.AssertionError: Attribute SB expected [0,0,13,14] but found [0, 0, 13, 14]; Expected: 0,0,13,14; Actual: [0, 0, 13, 14]. Haven't reached to the ""longer than expected"" error you mentioned.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295403243:116,assert,assertAttributesEquals,116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295403243,2,"['Assert', 'assert']","['AssertionError', 'assertAttributesEquals']"
Testability,"@cmnbroad, recommended variant argument collection classes are done. The GenomicsDB test was failing as the Tabix index files for the vcfs were not found. I have added them as git large files.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-294211502:84,test,test,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-294211502,1,['test'],['test']
Testability,"@cmnbroad, that's not wholly unreasonable, but i'd like to push back on a number of these points. . 1) First - would GATK consider simply letting us take over VariantEval and maintain as a GATK4-based tool in another repo? My understanding from GATK4 issues is that plan was to never migrate VariantEval (i think in favor of other picard/gatk QC tools). There is a bit of a conflict between keeping a lean core engine and having all these tools built off it. I would think there's an argument for keeping your core engine and the many tools built off it separated (GATK3 seemed to include some dead tools, for example). I appreciate we're the ones pushing this migration, but I hope on the other side you can appreciate the bar is pretty significant on our time. . 2) What new plugins are you talking about? VariantStratification and VariantEvaluator are part of GATK3's VariantEval? Yeah, I wrote a base PluginDescriptor class patterned on how ReadFilters work. It probably should exist in a more core position in code. While there's some good ideas in the argument-parsing/plugin code of GATK/Barlcay, frankly seems like much of it isnt fully developed yet, which is why I kept this separated at the moment. . 3) Be aware, the GATK3 tests depend on ~30GB of files. I dont know the limits of git lfs, but I did not currently have plans to check those in. I assumed I would convert these to use GATK4 chr20/21 data for a final commit, but felt there was a lot of value in using unaltered GATK3 data to confirm parity (and it was during the migration).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968:1235,test,tests,1235,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5043#issuecomment-407123968,1,['test'],['tests']
Testability,"@cwhelan , I've made the changes requested and update the tests accordingly. Would you please take a look again? Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2320#issuecomment-274279076:58,test,tests,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2320#issuecomment-274279076,1,['test'],['tests']
Testability,"@cwhelan , addressed comments in 4 commits, with the first 3 addressing requested changes in main and the last dealing with integration test.; Please review again. Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2621#issuecomment-298986792:136,test,test,136,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2621#issuecomment-298986792,1,['test'],['test']
Testability,"@cwhelan , just updated with all runtime logged. Same location, with all runtime in one file.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1997#issuecomment-245436962:41,log,logged,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1997#issuecomment-245436962,1,['log'],['logged']
Testability,"@cwhelan , you are right! With forced repartition and ~40K files, [this](http://dataflow03.broadinstitute.org:8088/proxy/application_1464285223085_0196/stages/stage?id=2&attempt=0) shows results for one test run. Just noticed there's another function . ```; public JavaPairRDD<String,String> wholeTextFiles(String path, int minPartitions); ```. will give it a try tomorrow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1877#issuecomment-224170497:203,test,test,203,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1877#issuecomment-224170497,1,['test'],['test']
Testability,"@cwhelan . Thanks for adding the docs!. However, I still have concerns about three classes: `StrandedInterval`, `EvidenceTargetLink` and `BreakpointEvidence`. They seem to be tightly coupled, through an un-documented concept called ""distal target"" (not sure if people with more experience would immediately understand what it is, but it took me some time to grasp). . * My understanding is that a target in the ""distal target"" is really an interval that is spanned and/or suggested by a piece of evidence. The ""distal"" part is for representing mate of discordant read pairs, and non primary locations of split reads. Hence the first mention to distal target, in base class `BreakpointEvidence`'s methods `hasDistalTargets()` and `getDistalTargets()`, should document it. * By studying the possible arrangements of innies, outties, lefies and righties, the `strand` information stored in `StrandedInterval` could be understood, where upstream/downstream of possible event breakpoint location has 1-1 correspondence with the ""target""'s strand. (BTW, the doc currently for the class refers to a method called ""getStrand()"" in BreakpointEvidence, which I couldn't find). But using the word ""strand"" is confusing I think, and some example in the documentation/example in `StrandedInterval` is needed.; * `StrandedInterval` at its current state, is almost synonymous to ""distal target region"". I am not advocating that this to be done in this PR, but the BreakpointEvidence is so central to the logic (except the kmer acrobatics) that we should document it better.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3628#issuecomment-333680006:1489,log,logic,1489,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3628#issuecomment-333680006,1,['log'],['logic']
Testability,"@cwhelan . Thanks for the comments! I've addressed them, and wrote a new unit test for the newly added utility.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1938#issuecomment-230084977:78,test,test,78,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1938#issuecomment-230084977,1,['test'],['test']
Testability,"@cwhelan . Thanks for the review!; I've incorporated most of your review suggestions, with the fowling exception because I need to think about what need to be done to make less review rounds. > This logic does more than detect variants, though.. it also annotates existing variants with the imprecise evidence. I'm also a little hesitant to move this all into its own separate class -- we really should be moving towards a model where we look at all three sources of evidence (breakpoint assemblies, imprecise evidence clusters, and coverage) simultaneously for eg @mwalker174 's work, and splitting handling of imprecise evidence into its own class seems like a step in the wrong direction. I agree. That's what I'm thinking about for complex inversions as well. So what about the following in this particular PR:. 1. move `StructuralVariationDiscoveryPipelineSpark.makeEvidenceLinkTree()` into `ImpreciseVariantDetector`;; 2. drop `ImpreciseVariantDetector.detectImpreciseVariantsAndAddReadAnnotations()` considering it really only delegates to `processEvidenceTargetLinks()`; 3. rename `ImpreciseVariantDetector` as `EvidenceTargetLinkHandler`; 4. reduce the work of `DiscoverVariantsFromContigAlignmentsSAMSpark.discoverVariantsAndWriteVCF()` into detecting only simple variants based on assemblies and name it `discoverSimpleVariants()`; 5. let `StructuralVariationDiscoveryPipelineSpark` call into `EvidenceTargetLinkHandler.processEvidenceTargetLinks()` to get back VariantContexts, then write VCF . `processEvidenceTargetLinks()` really does two things at the moment: annotation on breakpoints and call imprecise deletions; preferably, we should go the all-evidence-at-the-same-time approach and decouple the two but I am trying to not mess with it right now. If you agree, I'll implement it in a separate commit.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3934#issuecomment-357345426:199,log,logic,199,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3934#issuecomment-357345426,1,['log'],['logic']
Testability,"@cwhelan @tedsharpe please review. There are two tools here:. 1) PathSeqKmerSpark - builds kmer library as a hopscotch set from a given reference (done); 2) PathSeqFilterSpark - preprocessing / human read filtering tool (work in progress, currently has read preprocessing steps implemented). Made modifications to the SV kmer classes: . 1) SVKmerSmall class uses only 1 long (up to 31 bases), largely copied from SVKmer; 2) SVKmer and SVKmerSmall are both derived from SVKmerBase; 3) SVKmerizer uses generics so it can work with either type, moved some static functions to SVUtils. There are a bunch of new read filters and transformers for the filtering steps, including symmetric DUST. Unit tests included.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2237:693,test,tests,693,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2237,1,['test'],['tests']
Testability,@cwhelan I've addressed the comments in the separate commits. The commit messages decribes what was done in each push.. Please take another look. Thanks!. The tests are failing because of travis. They run successfully when manually rebooted but the status here don't get updated...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2567#issuecomment-292063168:159,test,tests,159,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2567#issuecomment-292063168,1,['test'],['tests']
Testability,"@cwhelan I've been thinking about this a lot more since we were looking at your integration test results. The PGT calls are inconsistent between HaplotypeCaller/CombineGVCFs and GenotypeGVCFs since we correct hom vars with 0|1 PGT in GGVCFs: https://github.com/broadinstitute/gatk/blob/851c8408d11042a402debf183d4fb69048a16c0e/src/main/java/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFsEngine.java#L436; but I like the idea that the PGT is still showing that there are two different haplotypes at that site. I'm leaning towards removing that ""cleanup"", which will mean a lot of hom var sites will have PGTs that are ""inconsistent"" as the user was complaining about, but I will add some documentation. What do you think?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6432#issuecomment-705613003:92,test,test,92,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6432#issuecomment-705613003,1,['test'],['test']
Testability,"@cwhelan I've having problems with the non-Spark JAR though:. ``` bash; $ gradle clean installDist; $ java -jar build/libs/gatk-4.pre-alpha-*-SNAPSHOT.jar; Exception in thread ""main"" java.lang.NoClassDefFoundError: org/apache/logging/log4j/LogManager; at org.broadinstitute.hellbender.cmdline.ClassFinder.<clinit>(ClassFinder.java:29); at org.broadinstitute.hellbender.Main.extractCommandLineProgram(Main.java:108); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:66); at org.broadinstitute.hellbender.Main.main(Main.java:86); Caused by: java.lang.ClassNotFoundException: org.apache.logging.log4j.LogManager; at java.net.URLClassLoader$1.run(URLClassLoader.java:372); at java.net.URLClassLoader$1.run(URLClassLoader.java:361); at java.security.AccessController.doPrivileged(Native Method); at java.net.URLClassLoader.findClass(URLClassLoader.java:360); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); ... 4 more; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1213#issuecomment-162013287:226,log,logging,226,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1213#issuecomment-162013287,4,"['Log', 'log']","['LogManager', 'logging']"
Testability,"@cwhelan Is there any chance you could run an SV pipeline with this change and see if it works? We added the classpath setting a long time ago for mysterious reasons, and have been afraid to remove it because we don't have good automated tests that run on the actual dataproc environment. I ran our very simple tests with this change but I want to check that it doesn't have negative consequences for your tools. I would really like to merge this if we can because it's recommended that you don't use this option unless you absolutely have to.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3946#issuecomment-357066967:238,test,tests,238,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3946#issuecomment-357066967,2,['test'],['tests']
Testability,"@cwhelan Ready to test. I copied the file to GCS, and forced-pushed an update to the branch to fix the scripts and to allow reading from GCS.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2527#issuecomment-289068970:18,test,test,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2527#issuecomment-289068970,1,['test'],['test']
Testability,@cwhelan This is a fix for the horrible spark problem in master. Would you mind testing it?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2618#issuecomment-296821445:80,test,testing,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2618#issuecomment-296821445,1,['test'],['testing']
Testability,@cwhelan my understanding is that this is blocked because tests won't pass until there's a GDB update -- yes?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-415848233:58,test,tests,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-415848233,1,['test'],['tests']
Testability,@cwhelan thanks for the clear up on the tests! Just updated with some fix and the output is now the same as master up to some formatting changes.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2258#issuecomment-261665373:40,test,tests,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2258#issuecomment-261665373,1,['test'],['tests']
Testability,@cwhelan updated by removing 3 commits that have the unused classes and functions. Also did the changes as you suggested. PR test cluster is failing but doesn't seem to be related to this PR and engine team is aware of this.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3427#issuecomment-322529717:125,test,test,125,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3427#issuecomment-322529717,1,['test'],['test']
Testability,"@d-cameron noticed a weird bad alignment coming out of the GKL SmithWaterman implementation, but our java version produces the same thing. . See https://github.com/Intel-HLS/GKL/issues/104. The following test produces the alignment `11S1M` when it seems like it should be producing `6S6M`. Running with different SWOverhangStrategys changes the results. . ```; @Test; public void should_return_maximal_alignment_match() {; try(final SmithWatermanAligner aligner = getAligner()) {; final SmithWatermanAlignment alignment = aligner.align(; ""GGGGGGTTTTTT"".getBytes(),; ""AAACCCTTTTTT"".getBytes(),; // BWA alignment scoring matrix; new SWParameters(1, -4, -6, -1), SWOverhangStrategy.SOFTCLIP);; Assert.assertEquals(alignment.getCigar().toString(), ""6S6M"");; Assert.assertEquals(alignment.getAlignmentOffset(), 6);; }; }; ```. These are what get computed with the current implementation.; | Strategy | Result |; | --------- | ------ |; | SOFTCLIP | 11S1M |; | INDEL | 6D6I6M |; | LEADING_INDEL | 6D6I6M |; | IGNORE | 12M |. The other strategies seem to be doing what I'd expect, but SOFTCLIP seems wrong.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6576:204,test,test,204,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6576,6,"['Assert', 'Test', 'assert', 'test']","['Assert', 'Test', 'assertEquals', 'test']"
Testability,@danking That's the idea. I may have closed this prematurely because I didn't wait for the pr with tests (#4000). You're supposed to be able to pick up the workspace directory and move it around no problem now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3411#issuecomment-356033474:99,test,tests,99,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3411#issuecomment-356033474,1,['test'],['tests']
Testability,"@dantefff Thank you for making this fix. It seems like the recommended solution based on https://blogs.apache.org/logging/entry/log4j-2-11-released. . The downside is that it seems to nearly double the size of the packaged jars. I'm going to try to look into why that is exactly and see if there's a work around. The annoying thing is that we're not really aiming to actually produce a multi-version jar, we just want to incorporate the files that are version specific for the version we need. So I suspect there's probably a way to do this without including many additional versions of each file in the final jar. It might be a bit more involved. . It looks like travis started finally, but I also pushed a copy to lb_test_multijar to force it to build.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7339#issuecomment-876666468:114,log,logging,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7339#issuecomment-876666468,1,['log'],['logging']
Testability,"@dantefff Ugh... our tests don't catch this because it's a problem in the shading process where we package everything in our jar. Our tests don't use he shaded jar because it takes a long time to build and we've never seen an error like this before. Similarly, when I run my own tests locally I usually don't build the shaded jar for speed reasons and haven't noticed this error. I guess we need to run a test on the actual final artifact to catch this sort of problem. Thanks for finding a solution.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7338#issuecomment-876584599:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7338#issuecomment-876584599,4,['test'],"['test', 'tests']"
Testability,"@david-wb @popboy126 I'm having trouble reproducing the shutdown issue on our own cluster, I sometimes get the message `Shutdown hook called before final status was reported.` but the job status is SUCCEEDED. This happens if I run with the System.exit(0) or not. Could one of you test with this branch and let me know if it solves your issue? I think my cluster configuration must be different then yours in some way.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3400#issuecomment-319778125:280,test,test,280,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3400#issuecomment-319778125,1,['test'],['test']
Testability,@david-wb Thanks for the detailed information. That's really helpful. I don't think we're going to be able to get to this for the next few weeks since we're pretty swamped with work for our beta release. Hopefully it's not blocking you since it seems like the output of the tools is correct. We'll get back to you when we have a proposed PR for a fix that you can test.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2666#issuecomment-300306287:364,test,test,364,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2666#issuecomment-300306287,1,['test'],['test']
Testability,@davidaadams updated with a test as well as some new convinience test methods (which themselves don't yet have tests...),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1044#issuecomment-150667485:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1044#issuecomment-150667485,3,['test'],"['test', 'tests']"
Testability,"@davidadamsphd I've pushed a new version that properly tests the case of a `PCollection` with a mix of different `GATKRead` implementations. I've also verified in a debugger that the new version is actually invoking the `GATKReadCoder` properly. Since there are some interesting questions raised about the need to call `setCoder()` manually on our transforms, I'd like to request a re-review to get your thoughts.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/642#issuecomment-121021847:55,test,tests,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/642#issuecomment-121021847,1,['test'],['tests']
Testability,"@davidadamsphd Looks good. Just two very minor comments. I didn't actually tweak the shard size and run it to test, did you try it? . Feel free to merge once you're ready.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/757#issuecomment-125369727:110,test,test,110,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/757#issuecomment-125369727,1,['test'],['test']
Testability,@davidadamsphd Please review ( assuming tests pass...),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/582#issuecomment-113638709:40,test,tests,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/582#issuecomment-113638709,1,['test'],['tests']
Testability,"@davidadamsphd Sure, here is a quick guide to the code:. -`BaseRecalibratorSpark` is the standalone BQSR tool, and calls into the `BaseRecalibratorSparkFn` (which is also called from `ReadsPipelineSpark`). -`ApplyBQSRSpark` is the standalone ApplyBQSR tool, and calls into the `ApplyBQSRSparkFn` (also called from `ReadsPipelineSpark`). -Integration tests for the above are in `BaseRecalibratorSparkIntegrationTest` and `ApplyBQSRSparkIntegrationTest`. -Almost all other changes in the branch are related to the BQSR engine refactoring, which I summarize below:; - We pulled out the guts of the walker `BaseRecalibrator` tool, combined it with all of the code from the former `RecalibrationEngine` class (now deleted) to make a new `BaseRecalibrationEngine` class under `utils/recalibration`.; - We stripped out all copies of the code in `BaseRecalibrationEngine` from the walker, dataflow, and spark versions of BQSR, and modified them to call into `BaseRecalibrationEngine`.; - We moved all auxiliary classes needed by the `BaseRecalibrationEngine` (eg., the covariates, etc.) into `utils/recalibration`.; - We refactored the argument collections. Now there is a single shared `RecalibrationArgumentCollection` that contains **only** the parameters for the `BaseRecalibrationEngine` itself, and this argument collection is exposed by all 3 versions of the tool. Input/output arguments have been removed from this argument collection and put into the individual implementations of BQSR, since they vary between the walker, dataflow, and spark versions of the tool. This eliminates awkward problems such as having both a `knownSites` argument AND a `BQSRKnownVariants` exposed at the same time, with only 1 of them usable for a given version of a tool. The dataflow-only `BaseRecalibrationArgumentCollection` has been deleted completely as no longer needed.; - We tweaked the names of some tool arguments to enforce consistency between the 3 versions of the tool as well as the rest of hellbender (eg.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/911#issuecomment-142340073:350,test,tests,350,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/911#issuecomment-142340073,1,['test'],['tests']
Testability,"@davidadamsphd passing through would work, but it's going to take some work. And if we have to do this for every single object that may be different between Spark and Dataflow, we may have more interface-redefining ahead of us. There may be another way. Perhaps we can use the name of the ""referenceset"" to distinguish the cases, as ReferenceDataflowSource has started doing. It's already the case that if you're using RefAPI, your reference name is going to be gg://reference/_some_id_. This is easy to distinguish from e.g. a Hadoop DFS path. We could use a similar mechanism for the mocks: perhaps have a special case in ReferenceDataflowSource that if the referenceset name is ""mock"", then it returns the static ReferenceDataflowSource.mockInstance member (that the test would then have to set up, naturally, just like it calls setInstance today). This is closer to what @tomwhite wrote, and may satisfy all of the goals of point (1). What do you both think?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/804#issuecomment-130905343:586,mock,mocks,586,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/804#issuecomment-130905343,4,"['mock', 'test']","['mock', 'mockInstance', 'mocks', 'test']"
Testability,@davidadamsphd please send me a testcase,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1414#issuecomment-169403974:32,test,testcase,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1414#issuecomment-169403974,1,['test'],['testcase']
Testability,"@davidadamsphd, @lbergelson, and myself met for an hour or two just now to discuss this issue, and after reviewing all the options I think we were convinced by the following argument:. The `SAMRecord` class currently allows its header to be set to null, so if there are cases where the class won't function properly or can enter into an inconsistent state when a header is not present these should be treated as bugs and patched, and we should add unit tests to htsjdk to prove that headerless `SAMRecords` function properly. Then in hellbender we can freely use headerless `SAMRecords` everywhere, only restoring the header to the record when writing out the final bam (since our bam writers do require that a header be present in the records, I believe). . I've created https://github.com/broadinstitute/hellbender/issues/903 to make the necessary changes in htsjdk, and assigned it to @cmnbroad. He said he could get to it early next week. What do you guys think of this approach to the problem?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/900#issuecomment-141218134:453,test,tests,453,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/900#issuecomment-141218134,1,['test'],['tests']
Testability,"@davidadamsphd, I've followed your suggestion and removed the serializer from the registrator until we've properly addressed #900. I've added a unit test for the serializer (just for the serializer itself, since having a different registrator is problematic given we have a shared spark context for all tests). As a check I ran the Spark mark duplicates code with this change and the tests passed. I've also sorted a large BAM with #901 and this change and it worked well. @jean-philippe-martin, definitely! The serialization code should carry over to dataflow coders. @lbergelson, yes, we absolutely want to scrutinize all the types that go through the shuffle to make sure they are reasonably compact.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/899#issuecomment-141050487:149,test,test,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/899#issuecomment-141050487,3,['test'],"['test', 'tests']"
Testability,"@davidbenjamin & @ldgauthier Sorry for commenting on a closed/merged PR but I wasn't sure where else to take the discussion. If there's a more appropriate place please redirect me!. First off, this is very cool and I'm so glad to see this making it's way into HC/M2! It's super helpful for functional annotation/clinical interpretation. Thanks for working on this!. I had two thoughts which maybe belong as separate issues, but I figured I'd raise them here first and see what you thought:. 1. It would actually be useful to be able to combine this behavior with GVCF mode in some cases. I understand all the caveats about merging and joint-genotyping when this has been done, but there are use cases for single-sample calling where both GCVF and MNP mode combined would be useful. E.g. in a clinical setting it's very useful to have the GVCF with the reference blocks, and also call MNPs as MNPs. There would be no merging in this case. Any chance this could be allowed, perhaps with a warning or requirement that `--unsafe` be on?; 2. IIRC RBP would also phase combinations of `indel-SNP` and `indel-indel` in addition to `SNP-SNP`. I'm curious how hard it would be to apply the same grouping logic across indels as well? I tried to read the code in the PR, but honestly I don't think I understand the ramifications of including indels sufficiently well. Would there be any conceptual objections or road-blocks to doing this?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4650#issuecomment-396290602:1195,log,logic,1195,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4650#issuecomment-396290602,1,['log'],['logic']
Testability,"@davidbenjamin : my read of the code is that yes, we would need to alter traversal. It is worth pointing out that GenotypeGVCFs already supports the ""--includeNonVariantSites"" argument, which is similar. The difference between what I propose and --includeNonVariantSites is that this new option would only output a site if present in the provided whitelist file. . I briefly looked at the guts of traversal - my guess is that we could do one of two things: a) make GenotypeGVCFs use some kind of MultiVariantWalker logic (not impossible, but more invasive), or b) traverse every site, but only output the site if non-variant or if present in the whitelist FeatureInput. The latter breaks some of the benefits of this over --includeNonVariantSites; however, at least it's not writing the output for most. If you are willing to look at this great, though I'm also happy to take a stab at it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6239#issuecomment-552531250:515,log,logic,515,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6239#issuecomment-552531250,1,['log'],['logic']
Testability,@davidbenjamin ; Perhaps some random seed number is hostname architecture sensitive? are native libraries involved? If this is using spark perhaps the test becomes non-deterministic?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1320#issuecomment-163340555:151,test,test,151,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1320#issuecomment-163340555,1,['test'],['test']
Testability,"@davidbenjamin ; The code looks great, can you add some tests. Perhaps add something that tests when the variant context is outside the read as well. Some of the difficulties we are having now may have been prevented had we originally put in tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6355#issuecomment-571827627:56,test,tests,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6355#issuecomment-571827627,3,['test'],['tests']
Testability,"@davidbenjamin ; This will make the WDL default to producing a MAF from Funcotator instead of a VCF. There is no flag to switch between the two, so if you know of people that still want VCF output, please speak up now... Can you review the WDL and autotest-WDL changes? This has been tested in FireCloud and looks good (minus an issue that I have already filed), though I had to manually review. The Method configuration in FireCloud still uses the GATK jar override for this. Just in case you wanted to run it. Otherwise, we should blank out that parameter. As a reminder, I tested:; - mutect2.wdl: manually on local backend and FireCloud; - mutect2_nio.wdl: manually on FireCloud. Please review both WDL files. @jonn-smith Could you review the rest? I.e. the bug fixes. Apologies that I did not split these into two PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4941#issuecomment-402846788:284,test,tested,284,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4941#issuecomment-402846788,2,['test'],['tested']
Testability,@davidbenjamin @droazen Though the automated tests will now catch this (as of this PR).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413612426:45,test,tests,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5121#issuecomment-413612426,1,['test'],['tests']
Testability,"@davidbenjamin @droazen unfortunately the new PON does not make up for the precision loss introduced in v4.1.9.0.; In v4.4.0.0 we get just 2 fewer FP SNVs in our performance evaluation, compared to the old PON.; Benchmarking results in WES tumor-normal mode, HCC1395 benchmark, and:. - v4.1.8.1 (last release with high SNV precision), v4.1.9.0 (first release affected by precision drop), v4.4.0.0 (current release); - oldPON: 1000g_pon.hg38.vcf.gz, newPON: mutect2-hg38-pon.vcf.gz; ![FD_TN_4181_FD_TN_4181_oldPON_FD_TN_4181_newPON_FD_TN_4190_FD_TN_4190_oldPON_FD_TN_4190_newPON_FD_TN_4400_FD_TN_4400_oldPON_FD_TN_4400_newPON](https://user-images.githubusercontent.com/15612230/236126940-9fc26627-260a-43c2-b409-69fbcec6ad47.png). Any chance to get this issue fixed? With Mutect3 not being available and v4.1.8.1 being affected by the log4j vulnerability, it is quite regrettable to be stuck with inferior precision. Extended methods, code, and data to reproduce the issue are here: ; [https://github.com/ddrichel/Mutect2_calling_performance_bug](https://github.com/ddrichel/Mutect2_calling_performance_bug)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1534177043:212,Benchmark,Benchmarking,212,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1534177043,2,"['Benchmark', 'benchmark']","['Benchmarking', 'benchmark']"
Testability,"@davidbenjamin @jonn-smith I have pushed the latest version of the code. Most of the changes since this was last shown are adding checks to about every level of the code for infinite loops (several places in the dangling end recovery code, and several places the new BestHaplotypeFinder). Additionally tests have been updated to capture these cases as well as several of the changes to functionality (no longer forcing reference start kmer to have a junction tree, limiting the cases where we actually attempt to follow an unsupported reference path when constructing a haplotype, reintroducing reference path weight to the calculation, etc...).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6034#issuecomment-520991019:302,test,tests,302,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6034#issuecomment-520991019,1,['test'],['tests']
Testability,@davidbenjamin @jonn-smith The test failure is a false alarm. Please review as if the tests were passing.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4941#issuecomment-402846895:31,test,test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4941#issuecomment-402846895,2,['test'],"['test', 'tests']"
Testability,"@davidbenjamin @ldgauthier: in #6263 you added --force-output-intervals to GenotypeGVCFs, which forces the tool to output variants based on a whitelist of sites. I believe this exposed a pre-existing, not related bug. GenotypeGVCFsEngine.removeNonRefAlleles() currently assumes the input has only one alternate allele. If the gVCF has a site with 3 or more alleles, GenotypeGVCFsEngine.removeNonRefAlleles() isnt going to work as intended. If any NON_REF is found, it *should* remove ALT allele header lines and return the new VC with NON_REF removed. It currently only does this if ""newAlleles.size() == 1"", which I assume is a proxy for not having alternates. That assumes the input had only 2 alleles, which isnt safe. This PR includes a fix for this. When I started investigating this I made a repro case (the attached VCF) and test case in GenotypeGVCFsIntegration test that uses --force-output-intervals to illustrate this. Now that the actual problem is clearer, I could understand if you dont want to add more test data to GATK. . I tried to write a unit test for removeNonRefAlleles(), but it didnt seem like it was going to be easy to make a new instance of GenotypeGVCFsEngine.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6406:832,test,test,832,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6406,4,['test'],['test']
Testability,@davidbenjamin An easy one for you. I think you can ignore failing cloud tests for the moment.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4149#issuecomment-358059202:73,test,tests,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4149#issuecomment-358059202,1,['test'],['tests']
Testability,@davidbenjamin Are you sure that your code is clocking in as faster than the previous incarnation? I noticed you did away with some of the allele computation caching which i could believe didn't matter but I've also noticed that the Carrot tests show your eval runtime for each of the 3 samples we test taking longer than the eval (which is from GATK nightly). Its not a huge slowdown but its also not expected right?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1534884545:240,test,tests,240,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1534884545,2,['test'],"['test', 'tests']"
Testability,"@davidbenjamin As discussed in person, it's my hope that the `AssemblyRegionWalker` changes in https://github.com/broadinstitute/gatk/commit/1ef09b3ca265209e0777c77a8519da74480908ce (which have now been merged into master!) will address `Mutect2` memory usage, and make these somewhat confusing new downsampling arguments unnecessary. That patch reduces the number of reads stored in memory at once by the engine by roughly an order of magnitude without doing any extra downsampling at all. I suggest that we do an evaluation to test whether this really resolves the issues you encountered. `Mutect2` is already hooked up to the new, lower-memory traversal code in the latest gatk/master, so all you have to do is re-run your benchmarking test. I'd suggest that you:. 1. Run with default settings in the latest master, and see if that alone does the trick!. 2. If not, try turning up the existing downsampling a bit. Eg., run with `--maxReadsPerAlignmentStart 10` instead of the default of 50. 3. If that still doesn't resolve the problem, we can revisit this PR and consider a simplified version of the downsampling args here for merge.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-325073233:529,test,test,529,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-325073233,3,"['benchmark', 'test']","['benchmarking', 'test']"
Testability,@davidbenjamin Back to you. Now the code is very small indeed. Perhaps its worth writing a test of this code however....,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6661#issuecomment-669392145:91,test,test,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6661#issuecomment-669392145,1,['test'],['test']
Testability,@davidbenjamin Can I get a review on this? I'm not quite sure how to go about testing this (since i think the only reason it appeared in the first place was because it was a very complicated site that was forcing some edges to be filtered to satisfy the variants per graph limit (but non-deterministically).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7851#issuecomment-1130024159:78,test,testing,78,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7851#issuecomment-1130024159,1,['test'],['testing']
Testability,@davidbenjamin Can we get a regression test for this?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6908#issuecomment-715578503:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6908#issuecomment-715578503,1,['test'],['test']
Testability,@davidbenjamin Can you add a test to prove that this fixes https://github.com/broadinstitute/gatk/issues/6744 ?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6871#issuecomment-705655153:29,test,test,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6871#issuecomment-705655153,1,['test'],['test']
Testability,@davidbenjamin Can you craft a simple unit test for these annotations to make sure this stays fixed?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2239#issuecomment-257574869:43,test,test,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2239#issuecomment-257574869,1,['test'],['test']
Testability,"@davidbenjamin Can you implement a simple integration test for this arg, to ensure it doesn't break again?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4128#issuecomment-357045030:54,test,test,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4128#issuecomment-357045030,1,['test'],['test']
Testability,@davidbenjamin Can you look at the test? I didn't want to check in a file with the old erroneous behavior so its hard to demonstrate what this fixed but i tried to make it clear in the comments.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1082335904:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1082335904,1,['test'],['test']
Testability,@davidbenjamin Can you make a test for this?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3636#issuecomment-333833919:30,test,test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3636#issuecomment-333833919,1,['test'],['test']
Testability,@davidbenjamin Can you run a quick test to make sure this works properly?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5872#issuecomment-481382172:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5872#issuecomment-481382172,1,['test'],['test']
Testability,"@davidbenjamin Can you tell me whether this is a straight-up port of the GATK3 version of this code, or whether you've made any changes in the process of porting?. I will test out this change, in combination with a change from @samuelklee / @ronlevine, in a branch in protected, and craft passing integration tests there before merging this here in public.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2710#issuecomment-301086407:171,test,test,171,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2710#issuecomment-301086407,2,['test'],"['test', 'tests']"
Testability,@davidbenjamin Can you tell me whether you were running with or without an interval list in your tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-330904636:97,test,tests,97,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-330904636,1,['test'],['tests']
Testability,"@davidbenjamin Could you review these changes. I added tests to check that my filtering is doing the right thing, but there aren't any tests that check that the likelihood calculation is correct.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2170#issuecomment-247693318:55,test,tests,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2170#issuecomment-247693318,2,['test'],['tests']
Testability,@davidbenjamin Could you run JProfiler on your test case and post the CPU profile here? Profiling beats manual code inspection any day of the week ;),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3788#issuecomment-341738058:47,test,test,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3788#issuecomment-341738058,1,['test'],['test']
Testability,@davidbenjamin Feel free to merge if tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4297#issuecomment-361394130:37,test,tests,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4297#issuecomment-361394130,1,['test'],['tests']
Testability,"@davidbenjamin Feel free to merge if tests pass. For future reference, I'd like to start having automated tests for supported WDLs. Can you file an issue? Not required for this PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4069#issuecomment-357288119:37,test,tests,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4069#issuecomment-357288119,2,['test'],['tests']
Testability,@davidbenjamin Feel free to merge once test failures are resolved.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4132#issuecomment-357115303:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4132#issuecomment-357115303,1,['test'],['test']
Testability,"@davidbenjamin Funcotator is not quite ready to outright replace Oncotator, but there is a test WDL for it in the M2/unsupported folder. . It can run off the same docker image, but you need to download the data sources (or provide your own - the default downloadable tar.gz is about 300MB and extracts to about 3GB). There is a short set of instructions in the tool doc for how to run it (I'm still working on the tutorial for the forum). . One current limitation is that it only consumes and produces VCF files, which may be an issue for some users. . I should add that while I have done _some_ testing with GRCh38, I have not extensively tested with that reference.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4188#issuecomment-359019952:91,test,test,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4188#issuecomment-359019952,3,['test'],"['test', 'tested', 'testing']"
Testability,"@davidbenjamin Hmm, it doesn't seem to resolve the issue for me. I tested as below and same exception was thrown. Could you confirm if I tested correctly?. ```; java -jar gatk-package-4.0.12.0-18-g0570670-SNAPSHOT-local.jar FilterMutectCalls -V test-unfiltered.vcf -O test-filtered.vcf.gz; ```. $ cat test-unfiltered.vcf; ```; ##fileformat=VCFv4.2; ##FORMAT=<ID=AD,Number=R,Type=Integer,Description=""Allelic depths for the ref and alt alleles in the order listed"">; ##FORMAT=<ID=AF,Number=A,Type=Float,Description=""Allele fractions of alternate alleles in the tumor"">; ##FORMAT=<ID=DP,Number=1,Type=Integer,Description=""Approximate read depth (reads with MQ=255 or with bad mates are filtered)"">; ##FORMAT=<ID=F1R2,Number=R,Type=Integer,Description=""Count of reads in F1R2 pair orientation supporting each allele"">; ##FORMAT=<ID=F2R1,Number=R,Type=Integer,Description=""Count of reads in F2R1 pair orientation supporting each allele"">; ##FORMAT=<ID=GQ,Number=1,Type=Integer,Description=""Genotype Quality"">; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""Genotype"">; ##FORMAT=<ID=PGT,Number=1,Type=String,Description=""Physical phasing haplotype information, describing how the alternate alleles are phased in relation to one another"">; ##FORMAT=<ID=PID,Number=1,Type=String,Description=""Physical phasing ID information, where each unique ID within a given sample (but not across samples) connects records within a phasing group"">; ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification"">; ##FORMAT=<ID=PS,Number=1,Type=Integer,Description=""Phasing set (typically the position of the first variant in the set)"">; ##FORMAT=<ID=P_PRIOR_RO,Number=1,Type=Float,Description=""prior probability of read orientation-based artifacts under the present referene context"">; ##FORMAT=<ID=P_RO,Number=1,Type=Float,Description=""posterior probability of read orientation-based artifacts"">; ##FORMAT=<ID=ROF_TYPE,Number=1,Type=String,D",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5563#issuecomment-452485251:67,test,tested,67,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5563#issuecomment-452485251,5,['test'],"['test-filtered', 'test-unfiltered', 'tested']"
Testability,"@davidbenjamin How's the patch coming? Did the M2 validation tests pass on your branch? We'll definitely try to expedite the code review, but I'll think we'll want some additional heavy-duty testing prior to release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6533#issuecomment-610995045:61,test,tests,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6533#issuecomment-610995045,2,['test'],"['testing', 'tests']"
Testability,"@davidbenjamin I added the AF thresholding and limited it to just the NON_REF allele. There's a mildly awkward check in the integration test for it. If you can formulate an elegant unit test that makes for nice round numbers I'm happy to add it, but that's beyond me. I lost the new Twist exome, but once I can get ahold of it I'll make a GVCF and see what happens.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449127402:136,test,test,136,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449127402,2,['test'],['test']
Testability,@davidbenjamin I also ran an additional test outside of our repo to make sure that this was working properly.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4423#issuecomment-374646199:40,test,test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4423#issuecomment-374646199,1,['test'],['test']
Testability,"@davidbenjamin I believe that the `trim()` call in question has always been on the original region, going back to GATK 3.x. Here's the equivalent line from the GATK 3.x `HaplotypeCaller` (line 901 HaplotypeCaller.java):. ```; final ActiveRegionTrimmer.Result trimmingResult = trimmer.trim(originalActiveRegion,allVariationEvents);; ```. And, as in GATK 4.x, the clipping code in GATK 3.x called `clone()` on each read prior to clipping. It's worth testing whether the equivalent argument in GATK 3.x (which was named `--dontUseSoftClippedBases`) worked at all.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6686#issuecomment-652520169:448,test,testing,448,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6686#issuecomment-652520169,1,['test'],['testing']
Testability,"@davidbenjamin I checked with our diagnostic lab director about which data can be put on the public repo (anonymized of course). The only file that cannot be used is the one labeled ""Exome_NBPF16_SNP.bam"", the other bam files I shared with you are from control samples and can be used in the integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3697#issuecomment-453800471:304,test,test,304,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3697#issuecomment-453800471,1,['test'],['test']
Testability,@davidbenjamin I didn't come across this issue but I also did not test for it specifically.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1858#issuecomment-443290180:66,test,test,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1858#issuecomment-443290180,1,['test'],['test']
Testability,"@davidbenjamin I do think we should throw this switch soon, perhaps even for the next release, provided we keep the old code path intact for now. There are two things that could affect the exact timing of the PR:. 1. I have a major `HaplotypeCaller` testing branch still in flight that I'd prefer to get merged before we throw the switch. I'd expect this to hit master sometime next week. 2. There has been some talk of a supplemental evaluation to the palantir HC tie-out for the exomes on the cloud pipeline. I defer to @ldgauthier as to whether this change should wait until after that.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-377549195:250,test,testing,250,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-377549195,1,['test'],['testing']
Testability,"@davidbenjamin I feel like we need to put good, continuous *performance* regression tests in place for the `HaplotypeCaller` so that we can make changes of this nature without fear. Testing for a performance regression in the `HaplotypeCaller` is currently very non-trivial -- you have to run with and without intervals, with and without -ERC GVCF, on both exome and genome to be confident that you haven't killed performance in a certain mode.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3184#issuecomment-358777173:84,test,tests,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3184#issuecomment-358777173,2,"['Test', 'test']","['Testing', 'tests']"
Testability,"@davidbenjamin I figured out that particular case we talked about earlier. The case (`depth = 0` but `PileupElement` is not empty) happens when all the reads have deletion at the locus. Instead of logging a message, now I simply skip such a locus.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3721#issuecomment-348321755:197,log,logging,197,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3721#issuecomment-348321755,1,['log'],['logging']
Testability,@davidbenjamin I have refactored this branch to account for changes to the codebase adjacent to this code. In the interest of not possibly harming any of the old results I have made this a toggle and I have also made the setting apply symmetrically to tails and heads and added a few simple tests in the existing framework.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6113#issuecomment-640870830:291,test,tests,291,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6113#issuecomment-640870830,1,['test'],['tests']
Testability,@davidbenjamin I kicked Travis and now tests are green so you can merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4801#issuecomment-393179618:39,test,tests,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4801#issuecomment-393179618,1,['test'],['tests']
Testability,"@davidbenjamin I looked into this more. From what I can tell, when a site is polymorphic, GenotypeGVCFs is going to trim to found alleles. Under normal conditions, when a site is not polymorphic, it doesnt get output. When output is forced (--force-output-interverals or output-all-sites), then the VC is just output as-is. This PR initially fixed the bug in removeNonRefAlleles(). I think GenotypeGVCFs should also prune unused alleles. If the site is not polymorphic, by definition I think that means removing all ALTs? I just checked in a few tweaks:. 1) I switched from the original test gVCF data I added to use an existing gVCF from GATK. This has the advantage of containing actual callable sites, not adding new data, and contains existing multi-allelic sites. . 2) I added code to GenotypeGVCFs so unused alleles will be trimmed as part of removeNonRefAlleles. I could understand if you want to change the name of that method now. This is currently always true; however, I could see a rationale for making --retain-unused-alleles-from-force-output-sites as a command line argument (i'd argue to default to false).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-577859097:587,test,test,587,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-577859097,1,['test'],['test']
Testability,"@davidbenjamin I made the changes you requested, plus some additional cleanup. Since this function takes a `normalizedTable` it only ever actually sees tables whose sums are less than 400. The smallest p-value we'd expect given that we can't have entries that are larger than 400 is around 1e-120. Therefore we don't actually have to take the log of the probability and normalize it, we can just take the probability straight from `HypergeometricDistribution`. We also don't need `relErr`. . Also given this, I didn't make the changes @lh3 described, although this would clearly be a good way to reduce the computation needed for calculating the p-value with larger tables. . If you think it would be useful to keep these numerical stability features, I can add them back in, but removing them feels more readable to me given that we are only calculating small tables.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-266828114:343,log,log,343,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-266828114,1,['log'],['log']
Testability,@davidbenjamin I see that the variant from the test files that changed has disappeared. Can you explain what was causing it before and how you fixed it?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6498#issuecomment-599596290:47,test,test,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6498#issuecomment-599596290,1,['test'],['test']
Testability,"@davidbenjamin I think all requested changes are in, with the exception of modifying the gVCF to create a site with two ALT alleles in addition to NON_REF. I'll try to find an example in our data, but I'm not sure I understand gVCF format enough to do that. do you happen to know if you have existing test data multi-ALT gVCFs?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-577418870:301,test,test,301,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-577418870,1,['test'],['test']
Testability,"@davidbenjamin I think one essential test you haven't done is to run master with more aggressive downsampling settings using the existing `--maxReadsPerAlignmentStart` argument, and compare that against your branch. This would help us determine whether or not the existing downsampling functionality really is inadequate to control peak memory use and runtime. The current default in `Mutect2` for `--maxReadsPerAlignmentStart` is 50, which is almost certainly much higher than it needs to be. That's 50 * 300 = 15,000 reads per assembly region, with on the order of ~2 regions in memory at any time = 30,000 reads. I propose that we try a run with the current vanilla master and `--maxReadsPerAlignmentStart 3`, and compare that to an identical run on your branch with your new downsampling options.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-341838476:37,test,test,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-341838476,1,['test'],['test']
Testability,"@davidbenjamin I think so, but I didn't test beyond the cases at the ends of chromosomes so it's possible that I didn't fix it completely. . I can come back to this after I review your adaptive pruning PR",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3944#issuecomment-443735719:40,test,test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3944#issuecomment-443735719,1,['test'],['test']
Testability,@davidbenjamin I think we are just waiting on a test for this. Is there any other reason this is blocked?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6968#issuecomment-838841233:48,test,test,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6968#issuecomment-838841233,1,['test'],['test']
Testability,"@davidbenjamin I'm not sure I follow your logic. But if you believe the current implementing is doing the expected thing I'd like to understand. In the example above, the site is multi-allelic in the gVCF. However, when run through GenotypeGVCFs it's reduced to being bi-allelic, and the QUAL of the bi-allelic site in the genotyped GVCF doesn't change - it's still `595.64`. . To rephrase the issue - I find that if I run `GenotypeGVCFs -stand-call-conf 0.0` on that variant, it emits a variant with QUAL 595.64. But if I run `GenotypeGVCFs -stand-call-conf 100` that variant doesn't get emitted. I _think_ that's wrong, or at the very least misleading.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5793#issuecomment-480071811:42,log,logic,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5793#issuecomment-480071811,1,['log'],['logic']
Testability,"@davidbenjamin I've significantly refactored the production code, see the last commit. Most of this refactoring was to done make the code for the accounting of different modes (SNP/INDEL/both x BGMM/python x non/allele-specific) more minimal and straightforward. I've also combined the score/apply steps using the TwoPassVariantWalker. There's still lots of documentation, cleanup, and hardening/validation to be done, but most of the key methods and design choices have been documented, so I think it could be worth a quick review at this stage. Again, no need to nitpick code-style details, etc. (unless you really want to!) In the meantime, I'm going to do some more testing/tieout to make sure the refactor didn't break anything. This covers ~1800 LOC, which is roughly 50% of the equivalent VQSR code. Even modulo the remaining work just mentioned, which may add a few hundred LOC, I think this is a decent improvement---additional functionality, stability, etc. notwithstanding!. There's stubs for adding the truth-sensitivity conversion you proposed---should be pretty straightforward. I think it should also still be pretty easy for future pushes to add features like extraction/downsampling of unlabeled data, etc., but please do keep an eye out for design choices that may ultimately be constraining.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7659#issuecomment-1044836946:670,test,testing,670,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7659#issuecomment-1044836946,2,"['stub', 'test']","['stubs', 'testing']"
Testability,"@davidbenjamin I've spun this off into a separate ticket. I think this might be serious/widespread enough that we'll want a 4.1.6.1 release once we have a working fix. I recommend that we manually do full-scale test runs of both HaplotypeCaller and Mutect2 to confirm that the issue is resolved rather than relying on the integration tests, which are not large-scale enough to catch edge cases like this, unfortunately.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6533#issuecomment-606748607:211,test,test,211,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6533#issuecomment-606748607,2,['test'],"['test', 'tests']"
Testability,"@davidbenjamin If it passes testing and the conflict resolution is trivial, feel free to merge",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4001#issuecomment-353505269:28,test,testing,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4001#issuecomment-353505269,1,['test'],['testing']
Testability,"@davidbenjamin If you have the time to spare, by all means! Would save @asmirnov239 some work. Feel free to submit a PR against GATK public with this change, plus any unit test, etc., you feel is appropriate. Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1950#issuecomment-300906769:172,test,test,172,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1950#issuecomment-300906769,1,['test'],['test']
Testability,"@davidbenjamin Just added an additional automated test thanks to @sooheelee , but please ignore commit message.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3538#issuecomment-326306087:50,test,test,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3538#issuecomment-326306087,1,['test'],['test']
Testability,"@davidbenjamin LODs are fixed, but I'm not super happy with them. They fluctuate a lot, making for a big GVCF. How easy would it be to modify the likelihood calculation to integrate over all AFs greater than some threshold of interest? I'm hoping that would produce more stability. Just to give you an idea of the fluctuation, below are some lines from my integration test VCF where I block anything less than -2 and between -2 and 0. I tried a few other thresholds, but it's just a lot of variability. I have a hunch it has to do with the minimum base quality in the pileup. ```; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT NA12878; chrM 1 . G <NON_REF> . . END=4 GT:DP:MIN_DP:TLOD 0/0:67:48:-1.958e+00; chrM 5 . A <NON_REF> . . END=5 GT:DP:MIN_DP:TLOD 0/0:107:107:-2.033e+00; chrM 6 . C <NON_REF> . . END=6 GT:DP:MIN_DP:TLOD 0/0:123:123:-1.603e+00; chrM 7 . A <NON_REF> . . END=8 GT:DP:MIN_DP:TLOD 0/0:135:135:-2.138e+00; chrM 9 . G <NON_REF> . . END=9 GT:DP:MIN_DP:TLOD 0/0:138:138:-1.975e+00; chrM 10 . T <NON_REF> . . END=13 GT:DP:MIN_DP:TLOD 0/0:178:154:-2.226e+00; chrM 14 . T <NON_REF> . . END=15 GT:DP:MIN_DP:TLOD 0/0:208:205:-1.974e+00; chrM 16 . A <NON_REF> . . END=23 GT:DP:MIN_DP:TLOD 0/0:259:218:-2.424e+00; chrM 24 . A <NON_REF> . . END=25 GT:DP:MIN_DP:TLOD 0/0:312:310:-8.945e-01; chrM 26 . C <NON_REF> . . END=26 GT:DP:MIN_DP:TLOD 0/0:317:317:-2.509e+00; chrM 27 . C <NON_REF> . . END=27 GT:DP:MIN_DP:TLOD 0/0:335:335:-1.962e+00; chrM 28 . A <NON_REF> . . END=50 GT:DP:MIN_DP:TLOD 0/0:492:343:-2.821e+00; chrM 51 . T <NON_REF> . . END=51 GT:DP:MIN_DP:TLOD 0/0:700:700:-3.808e-01; chrM 52 . T <NON_REF> . . END=63 GT:DP:MIN_DP:TLOD 0/0:822:722:-2.943e+00; chrM 64 . C <NON_REF> . . END=64 GT:DP:MIN_DP:TLOD 0/0:909:909:-1.492e+00; chrM 65 . T <NON_REF> . . END=86 GT:DP:MIN_DP:TLOD 0/0:1064:938:-3.065e+00; chrM 87 . A C,<NON_REF> . . DP=942;ECNT=8;POP_AF=5.000e-08,5.000e-08;TLOD=-2.463e+00,-2.668e+00 GT:AD:AF:DP:F1R2:F2R1:MBQ:MFRL:MMQ:MPOS:ORIGINAL_CONTIG_MISMATCH:SA_MAP_AF:SA_PO",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517:368,test,test,368,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-437501517,1,['test'],['test']
Testability,@davidbenjamin My review is complete. Lots of tiny documentation issues. I'd refactor that unit test with a data provider as well.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/767#issuecomment-126069170:96,test,test,96,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/767#issuecomment-126069170,1,['test'],['test']
Testability,"@davidbenjamin Oncotator runs in the M2 WDL travis tests (last I checked). It just uses no datasources. Oncotator is disabled for the CNV WDL travis tests. I did this because the CNV Oncotator uses a different docker image, which is fairly large. @davidbenjamin @samuelklee Life is only a little bit easier if the WDL is self-contained. The sub-...-workflows gets a little hairy for setting optional parameters (particularly runtime parameters).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4271#issuecomment-360865879:51,test,tests,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4271#issuecomment-360865879,2,['test'],['tests']
Testability,"@davidbenjamin One factor is that @droazen wanted to make sure nothing changed until the GATK4 HaplotypeCaller got the stamp of approval. I'm very pleased with the test results so far. Still interested in the reference sample increase results. I'd also want to QC a medium-sized callset to make sure the changes make sense, but then I'd be happy. What about you @vdauwera ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2098#issuecomment-241810167:164,test,test,164,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2098#issuecomment-241810167,1,['test'],['test']
Testability,"@davidbenjamin Oops, I shouldn't approve changes that break the tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7105#issuecomment-952035049:64,test,tests,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7105#issuecomment-952035049,1,['test'],['tests']
Testability,"@davidbenjamin Since the error doesn't occur with GATK 4.1.4.1, it's possible that this is a side effect of the changes to `LeftAlignIndels` that went into GATK 4.1.5.0 in https://github.com/broadinstitute/gatk/pull/6427. @gbrandt6 Could you or the user test whether the error occurs in GATK 4.1.5.0? If it does, that would definitely implicate https://github.com/broadinstitute/gatk/pull/6427 as the source of the regression.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6765#issuecomment-680237910:254,test,test,254,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6765#issuecomment-680237910,1,['test'],['test']
Testability,"@davidbenjamin Since this changes the `CreateSomaticPanelOfNormals` test code, would you mind having a look when you get a chance?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6746#issuecomment-705672747:68,test,test,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6746#issuecomment-705672747,1,['test'],['test']
Testability,"@davidbenjamin Since this issue was related to changes from one of your refactoring PRs, would you mind reviewing this branch and adding a quick unit test? Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8445#issuecomment-1658659432:150,test,test,150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8445#issuecomment-1658659432,1,['test'],['test']
Testability,"@davidbenjamin Sorry I've been out and just got around to looking at this. Given that this test appears to run just fine in the Java 11 job (which is not run on our docker), I suspect the failure may have something to do with the jar file we use to test on the docker (which is not the same jar we use on the non-docker tests). . I pulled your branch and all of the generation tasks (gatk doc, wdl gen, javadoc) seem to work fine, so given how much time it looks like this has taken up, I think it would make sense to either disable this test (on the docker only - see below - since we want it to still run in the other CI integration test job), or else remove the variantcalling package from the test package list (if thats the one thats causing the failure ?). And then create a ticket for me with whatever data you have, which I'll follow up on. If you restore everything to its natural state, you should be able to add this to the `DocumentationGenerationIntegrationTest.documentationSmokeTest` method and then it will be skipped only when running on the docker:. ```; final DocumentationGenerationIntegrationTest dt = new DocumentationGenerationIntegrationTest();; if (dt.isGATKDockerContainer()) {; throw new SkipException(""See gatk issue #..."");; }; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1216668361:91,test,test,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1216668361,6,['test'],"['test', 'tests']"
Testability,@davidbenjamin Testing failure is transient. Please review...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5062#issuecomment-408470885:15,Test,Testing,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5062#issuecomment-408470885,1,['Test'],['Testing']
Testability,"@davidbenjamin Thank you for your kind explanations! It motivated me to read JVM spec.; BTW, it looks that at least another edge case exists, which is not fixed by the PRs.; I tested with `gatk-4.0.12.0-20-gf9a2e5c-SNAPSHOT`. Variant (also wonder how 0 values for DP and AD can be interpreted) :; ```; 19 53302899 . G C . . DP=72;ECNT=2;MBQ=0,0;MFRL=0,0;MMQ=0,0;MPOS=0;POPAF=7.30;REF_BASES=GGTATACAAGGTTTGACATCT;SAAF=0.00,0.00,NaN;SAPP=0.025,0.025,0.950;TLOD=6.82 GT:AD:AF:DP:F1R2:F2R1:PGT:PID:PS:P_PRIOR_RO:P_RO:ROF_TYPE 0|1:0,0:0.962:0:0,0:0,0:0|1:53302899_G_C:53302899:1.444e-05:2.931e-03:F2R1; ```. Stacktrace:; ```; java.lang.IllegalArgumentException: errorRateLog10 must be good probability but got NaN; at org.broadinstitute.hellbender.utils.QualityUtils.phredScaleLog10ErrorRate(QualityUtils.java:321); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2FilteringEngine.lambda$applyGermlineVariantFilter$16(Mutect2FilteringEngine.java:286); at java.util.stream.DoublePipeline$3$1.accept(DoublePipeline.java:231); at java.util.Spliterators$DoubleArraySpliterator.forEachRemaining(Spliterators.java:1198); at java.util.Spliterator$OfDouble.forEachRemaining(Spliterator.java:822); at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481); at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471); at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:545); at java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260); at java.util.stream.IntPipeline.toArray(IntPipeline.java:502); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2FilteringEngine.applyGermlineVariantFilter(Mutect2FilteringEngine.java:286); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2FilteringEngine.calculateFilters(Mutect2FilteringEngine.java:519); at org.broadinstitute.hellbender.tools.walkers.mutect.FilterMutectCalls.firstPassApply(FilterMutectCalls.java:130); at org.broadinstitute.hellbender.engine.TwoPas",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5563#issuecomment-452818901:176,test,tested,176,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5563#issuecomment-452818901,1,['test'],['tested']
Testability,"@davidbenjamin Thanks for the test! Unfortunately none of the spike-in bams I have are public, but I will ask Sarah Calvo if she knows of any samples that would work as a spike-in and are public. Maybe we can track one down.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408863715:30,test,test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408863715,1,['test'],['test']
Testability,"@davidbenjamin Thanks for the workaround in the 4.1.9.0 release!. I tested the updated `CreateSomaticPanelOfNormals` with `genomicsDBs` computed in 4.1.7.0 as above and it seems that the workaround recovers a lot of multiallelic variants that were already missing in 4.1.7.0. Using the record and variant counts in 4.1.7.0 as 100% reference, I'm getting 57% more records (all multiallelic) or 142% more variants. No sites from 4.1.7.0 are missing in 4.1.9.0. As a side note, all of the new records have `FRACTION=1` and most (90%) have `BETA=1,1;FRACTION=1`. Among shared records, all multiallelic sites also have `FRACTION=1` and almost always different beta parameter estimates compared to 4.1.7.0. As expected, biallelic sites are unchanged. As far as I understand, these annotations are irrelevant in deciding whether a site should be output or not, so this is not a concern.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6744#issuecomment-707740253:68,test,tested,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6744#issuecomment-707740253,1,['test'],['tested']
Testability,@davidbenjamin Thanks for your review; I've tried to address your comments but let me know if anything still looks like it could use some work or if you spot anything new. Still waiting for tests to pass on this update (bar the GenomicsDB tests that I expect to fail).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-402264086:190,test,tests,190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-402264086,2,['test'],['tests']
Testability,"@davidbenjamin This filter looks fine to me, but could you add a test? You should have the data from the mitochondria bug already, right? Also if this potentially affects HaplotypeCaller should this fix be somewhere deeper so the filter is used by both tools or would we want the fix to be different?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408416074:65,test,test,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408416074,1,['test'],['test']
Testability,@davidbenjamin This is the issue I was talking about -- the relevant code is in `MannWhitneyU`:. ```; double sumOfAllSmallerBins = histo.get(testStatU).getValue() / 2.0;. for (final Histogram.Bin<Double> bin : histo.values()) {; if (bin.getId() < testStatU) sumOfAllSmallerBins += bin.getValue();; }. return sumOfAllSmallerBins / histo.getCount();; ```. Where `testStatU` is a double. This has caused issues like the one reported in https://github.com/broadinstitute/gatk/pull/5190. I'm wondering whether the class can be refactored to not use a double as a key.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4290#issuecomment-422126933:141,test,testStatU,141,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4290#issuecomment-422126933,3,['test'],['testStatU']
Testability,@davidbenjamin What is the issue with subworkflows? We import some subworkflows in the CNV WDLs. I think sub-subworkflows are when things get hairy... @jonn-smith @LeeTL1220 Let me know at what point we should switch over to Funcotator (or make it an option) in the CNV WDLs as well. I'd also feel more comfortable if the Funcotator/Oncotator tests actually ran on Travis.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4271#issuecomment-360860397:343,test,tests,343,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4271#issuecomment-360860397,1,['test'],['tests']
Testability,"@davidbenjamin Whoops, this was not supposed to be merged until after https://github.com/broadinstitute/gatk/pull/2186, and after the `MathUtils` change we talked about. Can you open a second PR with the `MathUtils` change (and revert the changes to VQSR test data)?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2235#issuecomment-257418802:255,test,test,255,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2235#issuecomment-257418802,1,['test'],['test']
Testability,@davidbenjamin Why `assertion` vs `assert`? I think it reads better as the more active verb. This is just quibbling though. @droazen What color should we paint the bike shed?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2543#issuecomment-290763984:20,assert,assertion,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2543#issuecomment-290763984,2,['assert'],"['assert', 'assertion']"
Testability,@davidbenjamin Will you have time to do this one? The fix for this arg was merged without a test.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4136#issuecomment-358031279:92,test,test,92,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4136#issuecomment-358031279,1,['test'],['test']
Testability,"@davidbenjamin Would you be able to add the requested test when you have time, since you created this class?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2178#issuecomment-288540358:54,test,test,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2178#issuecomment-288540358,1,['test'],['test']
Testability,"@davidbenjamin Yes, I am testing that patch out now -- should be ready for you to try out tomorrow!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-321368872:25,test,testing,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-321368872,1,['test'],['testing']
Testability,"@davidbenjamin Yes, that's correct -- the HC testing branch is coming soon, and I think we should be able to get both that branch and the switch to newQual in for the next release (assuming that there are no outstanding objections from anyone else on the switch).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-393280404:45,test,testing,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-393280404,1,['test'],['testing']
Testability,"@davidbenjamin again, sorry to keep bugging on this thread, but it's been a while and we're really hoping to push these changes through since they're blocking a project. I believe I addressed everything in your review. I did identify another (arguably pre-existing) issue in GenotypGVCFs that would be exposed whenever it runs in all-sites mode or in force-output mode - the lack of allele trimming. This PR addresses that, including test cases, though I havent heard back about this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-581418093:434,test,test,434,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-581418093,1,['test'],['test']
Testability,@davidbenjamin back to you. I notice a test is broken?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1699748712:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1699748712,1,['test'],['test']
Testability,"@davidbenjamin blast from the past! I cleaned this up and generalized the checks. Based on walking the debugger through my new test, I don't think the strictness should change for things that are actually valid, but I guess we'll see what Travis says.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6430#issuecomment-705608038:127,test,test,127,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6430#issuecomment-705608038,1,['test'],['test']
Testability,"@davidbenjamin commented on [Thu Apr 20 2017](https://github.com/broadinstitute/gatk-protected/issues/995). We have a Q script for in silico mixing, which we should port to wdl, and we have haploid exomes and genomes. We should use this to make great truth data for testing Mutect.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2974:266,test,testing,266,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2974,1,['test'],['testing']
Testability,"@davidbenjamin commented on [Tue Jun 07 2016](https://github.com/broadinstitute/gatk-protected/issues/542). Calculating log gammas is an expensive part of the allele fraction model. We could speed this with negligible loss of accuracy by caching a few tens of thousands of values from 0 to 100 or 1000 and using linear interpolation. This issue can be closed by implementing such caching or by showing that it doesn't significantly improve performance. ---. @davidbenjamin commented on [Tue Jun 07 2016](https://github.com/broadinstitute/gatk-protected/issues/542#issuecomment-224329788). The JVM running on my laptop does 10 million log gammas per second, which is about three times as expensive as logarithms. The allele fraction model needs to calculate 4 log gammas per het, so if you have 25,000 hets all the log gammas in the model likelihood take 1/100 of a second. . To get MLEs for each parameter (minor allele fractions, outlier probability etc) might require 100 evaluations each, so we're probably dealing with 10 seconds of log gammas per iteration to find the posterior mode. Getting a few hundred MCMC samples is probably more expensive but roughly comparable. These numbers are manageable but get expensive when we relearn the model at every iteration of segment merging. In my opinion it makes sense to come back to this issue after we have a new segmentation strategy. We'll see how pressing it is then. ---. @samuelklee commented on [Wed Jun 08 2016](https://github.com/broadinstitute/gatk-protected/issues/542#issuecomment-224786950). To clarify, I think this is primarily an issue for WGS, where we have ~1.5 million hets. From the logs in /dsde/working/lichtens/wgs/out_case_chip_wgs/acnv/*out it looks like finding the MLE takes ~10 minutes (which is roughly consistent with your estimate), but 200 MCMC iterations takes ~1 hr. Naive profiling of the AlleleFractionModeller tests suggests that around ~60% CPU is going toward log gammas, so if we can improve on this I think it ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2860:120,log,log,120,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2860,6,['log'],"['log', 'logarithms']"
Testability,"@davidbenjamin commented on [Tue Mar 22 2016](https://github.com/broadinstitute/gatk-protected/issues/413). We used to have a concordance test with XHMM, but we can't use that anymore.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2841:138,test,test,138,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2841,1,['test'],['test']
Testability,"@davidbenjamin comparing [better error bars for samples with small contamination](https://github.com/broadinstitute/gatk/pull/7003) version to master 4.2.0.0. - running on large set of probably considered as a small panel with high read depth.; percent of observations with all compared variables equal 88%, values unequal 12%. We can conclude that over all the Zero contamination remains Zero contamination but with non zero stdError (accepted after the binary searched). . **only 0.5%** of samples which were reported zero on version 4.2.0.0 are now reported as non zero contamination when the stdError was not accepted and the min maf iteration continued. ### Need to distinguish between **true zero contamination** ie was not found after running all maf iterations over all strategies (HOMO ALT,REF,UNSCRUPULOUS_HOM_REF) to a zero contamination after accepting stdError of Zero contamination of a single strategy. it is about **15%** of samples which will be reported non zero if continuing the maf iterations . @itaibeno to test on larger panel and report here. @davidbenjamin - could you consider running all maf iterations and report contamination per strategy,minMaf and loci if exists?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7177#issuecomment-856187340:1029,test,test,1029,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7177#issuecomment-856187340,1,['test'],['test']
Testability,"@davidbenjamin going to upgrade to latest this week and test it out; FWIW with 4.1.1.0 this appears to be an issue for calls output from Mutect2 with very low DP. E.g. the following VCF raises this exception for `FilterMutectCalls`; ```; #CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	NEC-2b; chr5	85458177	.	A	G	.	.	DP=1;ECNT=1;MBQ=0,90;MFRL=0,171;MMQ=60,60;MPOS=17;POPAF=7.30;TLOD=4.20	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,1:0.667:1:0,1:0,0:0,0,1,0; chr13	38648250	.	A	G	.	.	DP=2;ECNT=1;MBQ=0,37;MFRL=0,47;MMQ=60,60;MPOS=32;POPAF=7.30;TLOD=7.40	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,2:0.750:2:0,2:0,0:0,0,2,0; chr16	10195584	.	C	T	.	.	DP=1;ECNT=1;MBQ=0,90;MFRL=0,159;MMQ=60,60;MPOS=32;POPAF=7.30;TLOD=4.20	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,1:0.667:1:0,1:0,0:0,0,1,0; chr16	54464154	.	G	A	.	.	DP=1;ECNT=1;MBQ=0,90;MFRL=0,145;MMQ=60,60;MPOS=15;POPAF=7.30;TLOD=4.20	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,1:0.667:1:0,1:0,0:0,0,0,1; chr18	10035436	.	C	T	.	.	DP=1;ECNT=1;MBQ=0,45;MFRL=0,131;MMQ=60,60;MPOS=16;POPAF=7.30;TLOD=4.20	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,1:0.667:1:0,0:0,1:0,0,1,0; chr18	10511383	.	A	G	.	.	DP=1;ECNT=1;MBQ=0,45;MFRL=0,160;MMQ=60,60;MPOS=22;POPAF=7.30;TLOD=4.20	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,1:0.667:1:0,1:0,0:0,0,0,1; chr18	75229298	.	A	G	.	.	DP=1;ECNT=1;MBQ=0,90;MFRL=0,127;MMQ=60,60;MPOS=8;POPAF=7.30;TLOD=4.20	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,1:0.667:1:0,1:0,0:0,0,0,1; chr18	77560878	.	AA	TT	.	.	DP=1;ECNT=1;MBQ=0,90;MFRL=0,100;MMQ=60,60;MPOS=29;POPAF=7.30;TLOD=4.20	GT:AD:AF:DP:F1R2:F2R1:SB	0/1:0,1:0.667:1:0,1:0,0:0,0,0,1; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7276#issuecomment-1201455808:56,test,test,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7276#issuecomment-1201455808,1,['test'],['test']
Testability,"@davidbenjamin has requested that we look into whether there are `PairHMM` optimizations we could do that would benefit Mutect2 specifically -- the performance profile may be different than for the `HaplotypeCaller`. . Intel has agreed to have a look, but they'll need a Mutect2 test case that they can run. @davidbenjamin would you be able to provide one?",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2562:279,test,test,279,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2562,1,['test'],['test']
Testability,"@davidbenjamin looks like i have to wait for the test to pass because travis is having problems. What was happening is that the list of alleles didn't necessarily overlap with the VC being evaluated here (the `AssemblyBasedCallerUtils.getAllelesConsistentWithGivenAlleles(givenAlleles, vc)` was among other things responsible for filtering out alleles that don't overlap the site at all. This was responsible for the users issue because there were alleles from adjacent --alleles file variants 20 bases downstream that caused that condition to fail.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1081925541:49,test,test,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1081925541,1,['test'],['test']
Testability,"@davidbenjamin looks that it works for CombineVariants now (not on the full set of data). However, I am getting a lot of random errors for HaplotypeCallerSpark (4.1.8.1):. > 20/09/15 21:46:45 ERROR Executor: Exception in task 14.0 in stage 5.0 (TID 464); > java.util.ConcurrentModificationException; > 	at java.util.ArrayList.sort(ArrayList.java:1456). after rerunning with the same parameters for some runs problems disappeared, for some doesn't, and I must rerun them once again. There was no this kind of issue when I was using 4.1.3.0 HaplotypeCallerSpark O_o. I am confused O_o for what version tools works and for what doesn't. [H1_1.2.gatk.spark.HaplotypeCaller.gvcf.log](https://github.com/broadinstitute/gatk/files/5229907/H1_1.2.gatk.spark.HaplotypeCaller.gvcf.log); [H1_2.5.gatk.spark.HaplotypeCaller.gvcf.log](https://github.com/broadinstitute/gatk/files/5229908/H1_2.5.gatk.spark.HaplotypeCaller.gvcf.log). in contrast to the working processes; [H1_2.3.gatk.spark.HaplotypeCaller.gvcf.log](https://github.com/broadinstitute/gatk/files/5229912/H1_2.3.gatk.spark.HaplotypeCaller.gvcf.log). exactly same HPC infrastructure O_o. ________________; I think I have stuck once again somewhere in #5680 and #6730",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6473#issuecomment-693185541:674,log,log,674,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6473#issuecomment-693185541,6,['log'],['log']
Testability,"@davidbenjamin mutect2_pon.wdl and mutect2.wdl worked great without docker installed. Thanks!. @samuelklee @sooheelee As a user, I found a json template useful for two reasons, though it may be up to how a wdl is written.; 1) womtool generates inputs from all the dependent wdls including unnecessary ones for the workflow. (e.g. mutect2_pon.wdl); 2) womtool didn't provide default values. Looking at mutect_resources.wdl, I wondered what the good value for minimum_allele_frequency is (or what GATK team used for creating the resource bundle). In addition, I thought a test to validate every wdl would be helpful. (womtool validate [a wdl])",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4188#issuecomment-360544256:570,test,test,570,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4188#issuecomment-360544256,1,['test'],['test']
Testability,"@davidbenjamin ready for re-review. I'm going to do a little performance benchmarking in the meantime. It takes ~40min to call the whole contig for my 4000X bams, which isn't terrible, but it isn't great. Anecdotally it seems like the AF thresholding slowed things down, but I'll collect some numbers.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449458286:73,benchmark,benchmarking,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5312#issuecomment-449458286,1,['benchmark'],['benchmarking']
Testability,"@davidbenjamin removing the final Mish-step in ""evaluateFinalModelParameters"" like we talked about made a huge difference in the VQSLODs in the test data. I'm going to continue looking into it, but I really want to get this fix for production into this week's release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6425#issuecomment-582086983:144,test,test,144,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6425#issuecomment-582086983,1,['test'],['test']
Testability,"@davidbenjamin sorry to bug, but we're really hoping to get this resolved. see my last post - while i think it's clear GATK wasnt pruning alleles in any kind of force-output/output-all case, my latest changes add this and also add test cases around it. i'm now using one of the pre-existing gVCFs as test data, which improves the test coverage as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-578837930:231,test,test,231,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-578837930,3,['test'],['test']
Testability,@davidbenjamin thank you for letting me know. I will try version 4.1.1.0 for now and I will report if I identify any further issues. Happy to test intermediate versions if that is of any help.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6037#issuecomment-512358166:142,test,test,142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6037#issuecomment-512358166,1,['test'],['test']
Testability,"@davidbenjamin the benchmark data is still not ours, it is the current somatic ""gold standard"" HCC1395 from [https://www.nature.com/articles/s41587-021-00993-6](https://www.nature.com/articles/s41587-021-00993-6), based on data from multiple WGS sequencing runs with combined 1,500x coverage, etc.... Apart from that, we are on the same page here. Now that the change leading to the apparent differences in performance is found, and holds up to scrutiny so far (thanks for looking into it), it is a more real possibility than ever that this is not a bug but a case of Mutect2 outperforming the ""gold standard"". Let's keep the issue open for now, I am still investigating and would like to have a place to report my progress.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1543422454:19,benchmark,benchmark,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1543422454,1,['benchmark'],['benchmark']
Testability,"@davidbenjamin there is one test that failed. is this possible an intermittent /timeout problem? i dont have permission to restart them, but i dont see an actual test failure in it: https://travis-ci.com/broadinstitute/gatk/jobs/283688682",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-582418410:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6406#issuecomment-582418410,2,['test'],['test']
Testability,@davidbenjamin would you be able to take a look at reproducing this issue? I think @tfenne's test case is what you want to look at.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5696#issuecomment-475409316:93,test,test,93,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5696#issuecomment-475409316,1,['test'],['test']
Testability,"@davidbenjamin, et al. I have two recommendations:. 1) Though I prefer to work symbolically and through proofs, it might be nice to first expand on the validation by proof in the JavaDoc - including for the specific function's header - and anywhere else where necessary across the GATK code, just for sanity's sake, and for tying things together neatly and properly. This process of always going through the mathematical steps alerts me when I code that I have not missed anything. . 2) When dealing with multiple levels of transformations, it probably would be good to formulate a collection of complete set of simple tests. Since like you mentioned {phased} is a subset (⊂) of {unphased}, then the paths of phased genotypes one works with would also be ideal to test on. Does this function have any validation tests confirming the correct likelihoods, which would be performed for both phased and unphased genotypes? These can be generated tests, if original files do not exists. Hope it helps,; Paul",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2019#issuecomment-236759221:619,test,tests,619,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2019#issuecomment-236759221,4,['test'],"['test', 'tests']"
Testability,"@davidbernick @cmnbroad Thanks for reporting this. It looks like there is a bug with writing sharded BAM output to GCS. I'm currently testing a fix in Disq, but in the meantime you could drop `--sharded-output true` as a workaround to see if that fixes the problem.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5545#issuecomment-451945287:134,test,testing,134,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5545#issuecomment-451945287,1,['test'],['testing']
Testability,@davidbernick Created https://github.com/broadinstitute/gatk/issues/2289 to track the task of getting the tests passing again.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2288#issuecomment-264213774:106,test,tests,106,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2288#issuecomment-264213774,1,['test'],['tests']
Testability,@davidbernick Does it work with the 1.0 image? It would be good to get these nightly tests working again.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2183#issuecomment-252995422:85,test,tests,85,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2183#issuecomment-252995422,1,['test'],['tests']
Testability,@davidbernick I was going to tackle this by cloning https://gatk-jenkins.broadinstitute.org/job/gatk-perf-test-spark-readpipeline and adjusting some of the parameters. Are there any issues or gotchas I should know about? /cc @lbergelson,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3573#issuecomment-329210063:106,test,test-spark-readpipeline,106,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3573#issuecomment-329210063,1,['test'],['test-spark-readpipeline']
Testability,"@davidbernick It needs to be done in travis, I'm afraid, otherwise it's not going to solve our problem of people not noticing regressions until after merge. I'll craft a fast-running test case for you and post it here.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-287472115:183,test,test,183,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-287472115,1,['test'],['test']
Testability,"@davidbernick Since you set up the jenkins tests for us, would you be able to help us out with this ticket? We've gotten weary of catching Spark regressions post-merge with jenkins, and want to set up fast dataproc-based tests in travis that run on every pull request, and just run simple Spark tools like PrintReadsSpark to try to catch at least the most basic kinds of breakage before a branch is merged.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-286240726:43,test,tests,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-286240726,2,['test'],['tests']
Testability,"@davidbernick Thanks for looking into this. ; 1. It looks like we have a big 200G called /app disk but we're only writing to the root for some reason. Can we write there instead? ; 2. 👍 to removing most of the old jobs. It would be nice if we could save the job status logs but delete the artifacts and temp files. If that's hard to do though it's fine to just rotate out the old ones. Can we keep two months of jobs? That would be enough buffer so we can look back and see when something went wrong. For the performance tests you wrote, if there's any way we can keep their historical run times that would be best since they're mostly useful to see trends against the repositories history.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2180#issuecomment-248319308:269,log,logs,269,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2180#issuecomment-248319308,2,"['log', 'test']","['logs', 'tests']"
Testability,"@davidbernick thanks!. I noticed that the existing jobs are now failing with a GCS error (see https://gatk-jenkins.broadinstitute.org/job/gatk-perf-test-spark-markeddupe/436/console):. ```; Error code 404 trying to get security access token from Compute Engine metadata for the default service account. This may be because the virtual machine instance does not have permission scopes specified.; ```. There has been a change to the GCS library (https://github.com/broadinstitute/gatk/commit/b47838c9a5fa172ed6669ed4872b04d91c962a85), but when I ran a GCS pipeline manually on my machine it worked fine, even with this change. Any thoughts?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3573#issuecomment-329446325:148,test,test-spark-markeddupe,148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3573#issuecomment-329446325,1,['test'],['test-spark-markeddupe']
Testability,"@dheiman Good catch. It is indeed not being populated. The fix is pretty quick - I've implemented it already, I just need to add in some test cases.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7408#issuecomment-899832078:137,test,test,137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7408#issuecomment-899832078,1,['test'],['test']
Testability,"@droazen , I got a genomicsdb.jar from @kgururaj and just tried out the GenomicsDB cloud tests. The call stack that I got from my test run in nalini_new_genomicsdb_jar branch mentions that we do need the **fs.gs.project.id** hadoop configuration set. The google service json I use for our internal testing has this key, but the Hellbender service json does not. . Any ideas on how to get this key for the tests? Would this value be HELLBENDER_TEST_PROJECT? How is it being made available to the spark cloud tests for example? I do see it being configured in src/main/java/org/broadinstitute/hellbender/engine/spark/SparkContextFactory.java. ```; hdfsBuilderConnect(forceNewInstance=1, nn=gs://hellbender-test-logs, port=0, kerbTicketCachePath=(NULL), userName=(NULL)) error:; java.io.IOException: Must supply a value for configuration setting: **fs.gs.project.id**; 	at com.google.cloud.hadoop.util.ConfigurationUtil.getMandatoryConfig(ConfigurationUtil.java:39); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createOptionsBuilderFromConfig(GoogleHadoopFileSystemBase.java:2185); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1832); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:1013); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.initialize(GoogleHadoopFileSystemBase.java:976); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641:89,test,tests,89,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-427509641,6,['test'],"['test', 'test-logs', 'testing', 'tests']"
Testability,"@droazen , I was able to reproduce your result. I tried to isolate what made it work or not. I tried with two kinds of inputs:; - on the hellbender bucket, or; - on my own bucket. I tried with two choices for `GOOGLE_APPLICATION_CREDENTIALS`:; - default credentials, or; - my own. I tried with two different clusters:; - one created in the Broad project, or; - one created in my own project. With every one of those eight combinations, I got the same result: the dreaded ""Error code 404 trying to get security access token from Compute Engine metadata for the default service account."". ```; ./gatk-launch CountReadsSpark -I gs://hellbender/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam -- --sparkRunner GCS --cluster jp-test-cluster --executor-cores 2 --num-executors 2; com.google.cloud.storage.StorageException: Error code 404 trying to get security access token from Compute Engine metadata for the default service account. This may be because the virtual machine instance does not have permission scopes specified.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3855#issuecomment-352147413:641,test,test,641,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3855#issuecomment-352147413,2,['test'],"['test', 'test-cluster']"
Testability,"@droazen , its coming along nicely. The test first writes the three gvcfs provided for hg00096, hg00268 and na19625 to GenomicsDB. Then I use VariantContextTestUtils.assertVariantContextsAreEqual() method to compare the variants for chromosome 20 from GenomicsDB and combined.gatk3.7.g.vcf.gz.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-292008988:40,test,test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-292008988,2,"['assert', 'test']","['assertVariantContextsAreEqual', 'test']"
Testability,"@droazen , please take a look! Ready to review. The tests pass, the only red is the build being preempted.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2013#issuecomment-233412029:52,test,tests,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2013#issuecomment-233412029,1,['test'],['tests']
Testability,"@droazen - Still some questions about integration tests (on the comment with your suggestion, but here too):. * I am not sure if the test that you are proposing will work with all the implementations of `createTempFile`: depends on how it is handle, as a `File` or as a `Path`; * I think that this depends a lot on the parts of the codebase that we are looking at, so maybe before accepting this a pass should be done for the usages and how the `java.io.tmpdir` is used. Waiting for your feedback before doing something that does not make sense...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4469#issuecomment-385942269:50,test,tests,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4469#issuecomment-385942269,2,['test'],"['test', 'tests']"
Testability,"@droazen - perfect! Thanks for the information about the new point release. I added a new test for the `--maximum-mapping-quality` argument, as the `--minimum-mapping-quality` was already included. I will add another commit with the rest of the read-filter related constant to the new class. Once the test pass it will be ready for the next pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4103#issuecomment-360858400:90,test,test,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4103#issuecomment-360858400,2,['test'],['test']
Testability,"@droazen - please, clarify how the tests should be done. I'm going to be on vacation next week, so feel free to add them to this branch if you would like to speed up the process (taking into account that #3998 depends on this now). Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4469#issuecomment-377577797:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4469#issuecomment-377577797,1,['test'],['tests']
Testability,"@droazen - this is prepared for a review. All the test pass, but there are several an annoying hacks:. * Using the java property `""java.io.tmpdir` for default tmp directory instead of HTSJDK method (it looks somehow broken, and it is not used anymore); * Using `java.nio.Path.toString` directly, instead of using the URI form. Otherwise, the temp directory won't work for the default FileSystem. I guess that a better option is check if that path is associated with the default FS and if so do not use the URI and otherwise use it. What do you think?. Waiting for your first pass once test show up to do not fail. Thank you!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3998#issuecomment-358933952:50,test,test,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3998#issuecomment-358933952,2,['test'],['test']
Testability,"@droazen - this is prepared from the next pass. Maybe you can answer the following questions before doing a full second pass:. * Your comment about ""Assert that you get the correct number of shards back"" is tested implicitly, by iterating over the expected shards. Should I really make it explicit?; * Does realistic size reads adds something to the unit test itself? The integration test for the real data (and probably a future PR with other sliding-window implementations) might be enough for the purpose of real data...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4682#issuecomment-389185267:149,Assert,Assert,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4682#issuecomment-389185267,4,"['Assert', 'test']","['Assert', 'test', 'tested']"
Testability,"@droazen -- ; I haven't worked with Travis much -- so it'll be slower for me. I'd rather do this in Jenkins if that's ok. To do ""fast"" dataproc tests, I need a script that will run fast. For our current tests, I have: . 1. Grab gatk and make a docker. That takes about 10 minutes. It needs to be a ""fresh"" docker to match the PR. . 2. ; ```; ./gatk-launch MarkDuplicatesSpark \; --shardedOutput true \; -O /scratch/tmp.md.bam \; --numReducers 0 \; --apiKey $APIKEY \; -I $bamIn \; -- \; --sparkRunner GCS \; --driver-memory 8G \; --cluster $CLUSTERNAME \; --executor-cores 3 \; --executor-memory 25G \; --conf spark.yarn.executor.memoryOverhead=2500""; ```; That's what I currently launch for Spark Tests. If you give me something that you know will run faster (with data locations to run it against to make sure it runs faster), I can have a per-PR test that runs in Jenkins in 10 minutes (docker)+however-long-the-command-takes. Also, if you have a ""smaller"" BAM that makes more sense to run, let me know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-286761079:144,test,tests,144,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2298#issuecomment-286761079,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"@droazen . I have fixed the issue according Mr wangdy12 ' ways, I tested and the results is good . please reference A GATK4.0 Spark bug about HaplotypeCallerSpark and How to fix #4231 .",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4488#issuecomment-371694170:66,test,tested,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4488#issuecomment-371694170,1,['test'],['tested']
Testability,@droazen : Thanks a lot for prioritizing and attending to this. The security posture has greatly improved from where we started. Community greatly benefits from your effort. I have migrated to using the 4.5 release after some regression testing. Below is a list of critical and high findings with 4.5 release. There are links to snyk version update recommendations. I know sometimes its not easy just to upgrade the library version as we could end up with run time errors. I am adding this here so that its handy when ever you look at this further. Thanks again. . packageName | version | severity | language | module_id; -- | -- | -- | -- | --; com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-2331703 ); com.google.protobuf:protobuf-java | 3.7.1 | high | java | [SNYK-JAVA-COMGOOGLEPROTOBUF-3167772](https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-3167772); io.netty:netty-codec-http2 | 4.1.96.Final | high | java | [SNYK-JAVA-IONETTY-5953332](https://security.snyk.io/vuln/SNYK-JAVA-IONETTY-5953332); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342645](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342645); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342646](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342646); log4j:log4j | 1.2.17 | high | java | [SNYK-JAVA-LOG4J-2342647](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2342647); log4j:log4j | 1.2.17 | critical | java | [SNYK-JAVA-LOG4J-572732](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-572732); net.minidev:json-smart | 1.3.2 | high | java | [SNYK-JAVA-NETMINIDEV-3369748](https://security.snyk.io/vuln/SNYK-JAVA-NETMINIDEV-3369748); org.apache.zookeeper:zookeeper | 3.6.3 | high | java | [SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEZOOKEEPER-5961102); org.codehaus.jettison:jettison | 1.1 | high | java | [SNYK-JAVA-ORGCODEHAUSJETTISON-3168085](https://,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067:237,test,testing,237,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8215#issuecomment-1890593067,1,['test'],['testing']
Testability,"@droazen @cmnbroad @KevinCLydon This PR is blocking #6973, and it's been stuck for a while. I would like to offer my help in doing any work to get this closed out. #4571 is related and I could offer help on that and updating needed tests if this could help get all this closed out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7021#issuecomment-789761202:232,test,tests,232,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7021#issuecomment-789761202,1,['test'],['tests']
Testability,@droazen @cmnbroad @lucidtronix @mepowers All tests passing! Hope we are now good to merge?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438265002:46,test,tests,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438265002,1,['test'],['tests']
Testability,"@droazen @cmnbroad This PR is blocking #6973, and it's been stuck for a while. I would like to offer my help in doing any work to get this closed out. #7021 is related and I could offer help on that and updating needed tests if this could help get all this closed out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4571#issuecomment-789760761:219,test,tests,219,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4571#issuecomment-789760761,1,['test'],['tests']
Testability,"@droazen @cmnbroad sorry to bug you on this, but it looks like the last round of test failures were largely related to the free dockerhub account exceeding the max pulls. is there a chance you'd be able to restart the tests and/or review? thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-824992510:81,test,test,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7219#issuecomment-824992510,2,['test'],"['test', 'tests']"
Testability,@droazen @cmnbroad thanks for taking a look. I've added some direct unit tests for `PushPullTransformer` and `PushToPullIterator`.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5311#issuecomment-440308460:73,test,tests,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5311#issuecomment-440308460,1,['test'],['tests']
Testability,"@droazen @cwhelan Yes, it appears to be fixed. (Don't have a failing test that I can run on the old behavior, but a quick test of the latest code in master appears to have repaired the flaw.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2037#issuecomment-358093905:69,test,test,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2037#issuecomment-358093905,2,['test'],['test']
Testability,"@droazen @davidbenjamin any thoughts regarding the last bullet above in https://github.com/broadinstitute/gatk/pull/6885#issuecomment-891907471 on possible integration tests? Started looking at this today and was wondering if you might have any suggestions. Ideally, we'd want to test that the exposure was done correctly through the 3 affected tools: HaplotypeCaller, Mutect2, and FilterAlignmentArtifacts. I can certainly take the approach outlined above and 1) on master, pick one or more integration tests for each tool, then generate results by changing the original unexposed constants and running on the relevant test data, 2) on this branch, commit those new results, then add corresponding versions of the integration tests that change the exposed inputs and check against the results. However, not sure if we'll want to clutter the repo with more test files just for this sort of exposing of constants, and such tests don't really feel complete anyway. So alternatively, I could probably write a script to do essentially the same thing and just check consistency between the branches for a bunch of randomly generated SW parameter values, perhaps also running on more substantial test files for each tool. I can document this process and then we can move on without committing any new tests or test files once we're satisfied that the exposure was done correctly. Or if you guys have additional suggestions, would be glad to hear them!. Finally, it looks like FilterAlignmentArtifacts doesn't have any integration tests for correctness---let me know if there are auxiliary tests we'd want to run there. Anyway, probably overthinking things, but the exposure was enough of a headache that I want to make sure I did it right. But would also rather fully hash out what to do beforehand, so I don't end up having to redo things after review.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-896314077:168,test,tests,168,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-896314077,12,['test'],"['test', 'tests']"
Testability,"@droazen @kcibul Would it be possible to dump the combinedGvcf from the merged tiledb here so we could try running that line through gatk3? . I'm very certain that if that method exits with 0 in gatk3 or gatk4 it will immediately result in a divide by 0 exception. I can't be 100% sure that this case would exit with 0 in gatk3 without actually testing it though. . If we were to assume that the result of this is 0 in both gatk3 and 4, what would the right thing to do here be? Output 0 for the annotation?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2658#issuecomment-299221012:345,test,testing,345,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2658#issuecomment-299221012,1,['test'],['testing']
Testability,"@droazen @kgururaj, we list out the INFO fields that are not currently supported in GenomicsDB. Below is the complete list. This will also cause the test to fail:. WARNING: No valid combination operation found for INFO field DS - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field ExcessHet - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field HaplotypeScore - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field InbreedingCoeff - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAC - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAF - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field DS - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field ExcessHet - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field HaplotypeScore - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field InbreedingCoeff - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAC - the field will NOT be part of INFO fields in the generated VCF records; WARNING: No valid combination operation found for INFO field MLEAF - the field will NOT be part of INFO fields in the generated VCF records",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293495550:149,test,test,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293495550,1,['test'],['test']
Testability,@droazen @lbergelson - Need test input gVCF files and golden output for the GenomicsDB importer test code,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2462:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2462,2,['test'],['test']
Testability,"@droazen @lbergelson I've added a test merging many contigs to several contigs. I mentioned this briefly during the monday meeting, but will reiterate that for the purposes of testing out the merge contigs feature I'm using vcfs instead of gvcfs (I was able to get some vcfs that fit the purpose, not sure how to get gvcfs). . The idea is that these tests are specifically targeted to exercise the merge contigs portion of the logic. All the stuff that would be different for gvcfs (combining VCF attributes, etc) is tested by other tests and unaffected by this particular feature.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6681#issuecomment-692934659:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6681#issuecomment-692934659,6,"['log', 'test']","['logic', 'test', 'tested', 'testing', 'tests']"
Testability,@droazen @lbergelson i can't reproduce the error that travis is reporting on the pull req: https://travis-ci.org/broadinstitute/hellbender/builds/58990321; Here's what I run:. ```; git clone --depth=50 git://github.com/broadinstitute/hellbender.git broadinstitute/hellbender; cd broadinstitute/hellbender/; git fetch origin +refs/pull/383/merge:; git checkout -qf FETCH_HEAD; gradle assemble; gradle check; ```. and my tests all pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/383#issuecomment-94321119:419,test,tests,419,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/383#issuecomment-94321119,1,['test'],['tests']
Testability,"@droazen @ldgauthier I'm assuming the travis failure is not caused by this? looking at some of the travis logs its complaining about ""Timeout waiting for network availability"" and the previous travis CI in master failed too...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-519716794:106,log,logs,106,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-519716794,1,['log'],['logs']
Testability,"@droazen @magicDGS There's a test failure because the ADAM project relies on deprecated code in HTSJDK that was removed in 2.7.0. We'll either need to disable the ADAM functionality or get a patched version of ADAM. I have a [patch for ADAM](https://github.com/bigdatagenomics/adam/pull/1235), but I don't think they release very often. We could host a patched artifact until then.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2247#issuecomment-257909408:29,test,test,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2247#issuecomment-257909408,1,['test'],['test']
Testability,@droazen @mcovarr ; This incorporates the code from https://github.com/broadinstitute/gatk/pull/8231/files into gatk. There are two caveats that I've described above which may need input from the GVS team. . If tests are passing we should probably do a light review to make sure nothing is obviously bonkers in unintentional ways from the merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8256#issuecomment-1479964495:211,test,tests,211,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8256#issuecomment-1479964495,1,['test'],['tests']
Testability,"@droazen @samuelklee I rebased this. It's ready for review I think. I removed an existing argument in this pr, if we want I can deprecated it instead, it will probably take some extra logic to account for both arguments existing though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6388#issuecomment-669411846:184,log,logic,184,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6388#issuecomment-669411846,1,['log'],['logic']
Testability,"@droazen @samuelklee this is a duplicate PR, I close the previous one. Travis was behaving strangely on the previous PR (oddly not picking up the correct commit for `continuous-integration/travis-ci/pr` test).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3183#issuecomment-311481750:203,test,test,203,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3183#issuecomment-311481750,1,['test'],['test']
Testability,@droazen @vdauwera -- sorry to bump this but I'm hitting this problem with additional unrelated samples and could provide additional test cases if this isn't enough to debug. Thanks much.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3466#issuecomment-352183647:133,test,test,133,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3466#issuecomment-352183647,1,['test'],['test']
Testability,"@droazen Actually, `IntelInflater` is already being used with block-gzipped VCFs. On this [line in htsjdk](https://github.com/samtools/htsjdk/blob/912c28bec415c430b43515652ccaf13222b07e7b/src/main/java/htsjdk/variant/vcf/AbstractVCFCodec.java#L629), the `AbstractVCFCodec` creates a `BlockCompressedInputStream` using the default `BlockGunzipper`, which is `IntelInflater` by default in GATK. I verified `IntelInflater` is used by running this GATK command with a debug version of GKL (to display usage info):; ```; ./gatk-launch CountVariants -V src/test/resources/large/dbsnp_138.b37.20.21.vcf.blockgz.gz; ```. We could add an issue to htsjdk to support different `Inflater` implementations for each block-gzipped VCF codec instance, but I don't think it's a high priority. I propose we close this issue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2420#issuecomment-293929859:551,test,test,551,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2420#issuecomment-293929859,1,['test'],['test']
Testability,"@droazen Actually, its not. When I switched over to relying on a test instead of truncation, I omitted the picard tools from the test since there is a corresponding PR/test for Picard, so there is no need to wait. I'm going to rebase on current master to re-run the test, and then we can merge this (pending of course that we resolve the `AnnotatePairOrientation` status. @LeeTL1220 - should `AnnotatePairOrientation` be `@Experimental` or `@Beta` ? Currently now its tagged `@Beta` but says `Experimental` in the command line description.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5551#issuecomment-472552477:65,test,test,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5551#issuecomment-472552477,4,['test'],['test']
Testability,@droazen Added a test to BQSR spark,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2042#issuecomment-237341645:17,test,test,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2042#issuecomment-237341645,1,['test'],['test']
Testability,@droazen After wrangling with this for a few hours I couldn't quite even get rid of the chr20-21 b37 mini references. There are too many integration tests of deep parts of the engine that I don't feel comfortable messing with. I'm throwing in the towel.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5313#issuecomment-451712041:149,test,tests,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5313#issuecomment-451712041,1,['test'],['tests']
Testability,@droazen An existing integration test already tested the full pipeline including merging VCFs with GenomicsDB and creating the panel. I modified the input VCFs to contain multiallelic sites that previously failed.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6871#issuecomment-705910895:33,test,test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6871#issuecomment-705910895,2,['test'],"['test', 'tested']"
Testability,@droazen Back at you with a couple of questions about the test cases / explanations and one minor grammatical edit.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4455#issuecomment-368604893:58,test,test,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4455#issuecomment-368604893,1,['test'],['test']
Testability,@droazen Back to you. I rebased the branch. I did not add unit tests for `makeNewSACs()` and `determineSACIndicesToUse()` because they are now private.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1852#issuecomment-239446149:63,test,tests,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1852#issuecomment-239446149,1,['test'],['tests']
Testability,"@droazen Can you re-assign to someone not me? This would also imply changes to the travis tests, to make sure that it is using the correct user. Probably other downstream effects that I have not determined.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3644#issuecomment-333545888:90,test,tests,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3644#issuecomment-333545888,1,['test'],['tests']
Testability,@droazen Can you review this once tests pass?,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4980:34,test,tests,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4980,1,['test'],['tests']
Testability,"@droazen Changes to the native code include removing SSE code, ifdef'ed code for profiling, and unused sandbox code. The goal is to reduce the amount of C code we need to maintain. Let me know if you have any concerns. We can have a code review after integrating into HaplotypeCaller. @lbergelson Thanks for helping debug the build. I doubt the code will build as is with clang, it currently uses gcc intrinsics to test machine capabilities. I added support for GATK_SKIP_NATIVE_BUILD env variable. Submitting changes to get debug info from Travis soon.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1504#issuecomment-185850134:103,sandbox,sandbox,103,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1504#issuecomment-185850134,2,"['sandbox', 'test']","['sandbox', 'test']"
Testability,@droazen Could you review this quickly? I moved my bogus screen scraping test so that it's less bogus :(,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/343#issuecomment-90224782:73,test,test,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/343#issuecomment-90224782,1,['test'],['test']
Testability,"@droazen Curious why this was closed as obsolete ? We still have the tool, there are no tests, and I don't see an obvious Picard equivalent, at least with a similar name.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1230#issuecomment-294154545:88,test,tests,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1230#issuecomment-294154545,1,['test'],['tests']
Testability,@droazen Didn't we try this before and start getting intermittently failing tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1769#issuecomment-214485232:76,test,tests,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1769#issuecomment-214485232,1,['test'],['tests']
Testability,"@droazen Do we still even need `LeftAlignIndels`? It seems to duplicate behavior of `LeftAlignAndTrimVariants`, which does have an integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/150#issuecomment-577852333:143,test,test,143,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/150#issuecomment-577852333,1,['test'],['test']
Testability,@droazen Do you still want to give me a memory patch to test?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-321352223:56,test,test,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-321352223,1,['test'],['test']
Testability,@droazen FYI I made a snapshot and pointed gatk-protected to it. All HaplotypeCaller-related unit tests and integration tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1918#issuecomment-232558536:98,test,tests,98,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1918#issuecomment-232558536,2,['test'],['tests']
Testability,"@droazen For some reason, the fix in `CommandLineProgram` from #2190 stopped working in this branch (although I couldn't reproduce locally), which is why I tried making the `CommandLineProgram` field in `FeatureManager` transient again to see if it fixed the issue. Which it did. I've now avoided the issue entirely by removing the need for the `CommandLineProgram` field, by passing the instance to the method that needs it. This also addresses the point that @cmnbroad made about serializing the whole tool. The tests pass with this change. This probably needs testing on Google Cloud. @jean-philippe-martin have you run this successfully with the new NIO library (0.5.1)?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2220#issuecomment-258810989:514,test,tests,514,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2220#issuecomment-258810989,2,['test'],"['testing', 'tests']"
Testability,@droazen Here are a couple of unit tests for some heavily-uses and previously untested methods.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4843:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4843,1,['test'],['tests']
Testability,"@droazen Here's the fix, but I'm only about 99.6% sure the tests will pass, so don't merge yet.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3383#issuecomment-318741849:59,test,tests,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3383#issuecomment-318741849,1,['test'],['tests']
Testability,@droazen Here's the other test.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6861:26,test,test,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6861,1,['test'],['test']
Testability,@droazen I actually don't think most of those tests should be `cloud` tests. ; BucketUtilsTest.testIsCloudStorageURL for instance. It seems dangerous if that method requires being logged into gcloud. Separate issue for that here: https://github.com/broadinstitute/gatk/issues/2707,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2706#issuecomment-300806630:46,test,tests,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2706#issuecomment-300806630,4,"['log', 'test']","['logged', 'testIsCloudStorageURL', 'tests']"
Testability,@droazen I added a test with some documentation about the issue and the no-calls.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1082329542:19,test,test,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1082329542,1,['test'],['test']
Testability,"@droazen I addressed your comments, but I also added some more fixes (and tests!)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5863#issuecomment-486413930:74,test,tests,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5863#issuecomment-486413930,1,['test'],['tests']
Testability,"@droazen I can't speak to that. I have only tried one time with cloud buffering turned off and it didn't fail, but that's not enough to be sure that it never happens. I'll run more tests to see whether that can be confirmed or not. I'm sorry I didn't understand your question properly. I was just trying to see if cloud buffering turned off could give us enough memory back to enable batchSize 200, and it did.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300825294:181,test,tests,181,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2685#issuecomment-300825294,1,['test'],['tests']
Testability,"@droazen I checked and `PrintReadsSparkIntegrationTest` and `PrintVariantsSparkIntegrationTest` both test GCS inputs and outputs, so it should be OK to take `PrintReadsSpark` and `PrintVariantsSpark` out of beta too.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5991#issuecomment-500831950:101,test,test,101,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5991#issuecomment-500831950,1,['test'],['test']
Testability,@droazen I did the easy ones and logged my tech debt in #6203 as per our Slack convo,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539174090:33,log,logged,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539174090,1,['log'],['logged']
Testability,"@droazen I didn't get a chance to do this yet. Once I do (most likely during next week), I will post here about any progress. However, as per @mlathara's message (https://github.com/broadinstitute/gatk/issues/6667#issuecomment-646167430), I do expect this to fix the issue. This potential fix has already been implemented by the bcbio_nextgen guys, so I'm going to be testing that precisely (https://github.com/bcbio/bcbio-nextgen/commit/336920a630d7f50b341eeeb4bad4ea6ab213f995). For what it's worth, I do think that setting up the VCF codec as default (instead of BCF) makes sense, at least until this bug is fixed. https://github.com/broadinstitute/gatk/issues/6667#issuecomment-646232210",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6548#issuecomment-646706502:368,test,testing,368,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6548#issuecomment-646706502,1,['test'],['testing']
Testability,"@droazen I didn't really look at runtime scientifically, so I can't comment on that. I pasted this table and explanation into the picard issue, but I think it had already been closed at that point, so I'm not sure how many people saw it:. > I have some _small_ test BAMs that are constructed by extracting reads overlapping a few hundred kb of genome from WGS samples. I made the table below using such a BAM made from the 1KG PCR-free WGS data from NA19625. Not ideal, but I would _think_ would perform fairly similar to a full WGS bam for compression purposes. What I see is that at compression level 1 the intel deflator produces a significantly larger BAM that the JDK deflator at level=1. . Compression Level | Intel Deflater File Size | Intel Deflater % of JDK l=5 | JDK Deflater File Size | JDK Delfater % of JDK l=5; ---|------------|----------|---------------|---------; 1 | 54,840,445 | 175.23% | 38,543,684 | 123.16%; 2 | 35,782,642 | 114.33% | 36,745,494 | 117.41%; 3 | 34,989,899 | 111.80% | 35,262,326 | 112.67%; 4 | 31,815,698 | 101.66% | 32,549,560 | 104.00%; 5 | 31,240,892 | 99.82% | 31,296,433 | 100.00%; 6 | 30,675,174 | 98.01% | 30,577,906 | 97.70%; 7 | 30,379,699 | 97.07% | 30,380,325 | 97.07%; 8 | 30,124,200 | 96.25% | 30,124,375 | 96.25%; 9 | 30,064,322 | 96.06% | 30,064,325 | 96.06%. That does seem to suggest that the intel deflator at `level=2` produces a BAM that is smaller than the JDK deflator at either level 2 or 1, and if it is also faster in your testing, that sounds pretty good for intermediate files. It's still ~15% bigger than a `level=5` BAM though, so unless the vast majority of users are switching over to CRAM for storage, I'd hesitate to change the default compression level in any of the toolkits.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3413#issuecomment-323840661:261,test,test,261,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3413#issuecomment-323840661,2,['test'],"['test', 'testing']"
Testability,"@droazen I didn't specify `-Xmx`, just gave more memory to the server (up to 32GB). The most memory BQSR consumed before it failed was about 28GB: ``Runtime.totalMemory()=28631367680``. I'm testing to see if scattering BaseRecalibrator and then calling GatherBQSRReports would help",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4334#issuecomment-364228046:190,test,testing,190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4334#issuecomment-364228046,1,['test'],['testing']
Testability,"@droazen I don't really have much of an opinion about the loggers. I think we chose log4j2 pretty arbitrarily and because it seemed popular. We don't have very complex logging needs so any logger pretty much satisfied our needs. . If there's a good reason to switch to SLF4J with a log4j backend that seems fine to me. It makes sense to use the more general solution so that people can use whatever backend they want. . I do know that we've encountered a lot of issues with having multiple copies of different logging frameworks included as transitive dependencies on spark. So there may be some hassle switching over, we'd have to run tests on google cloud to make sure we don't start crashing all of a sudden for logger related classpath issues. . @magicDGS I don't think anyone here cares that much about which logger we're using as long as it doesn't get in our way. If you want to do the switchover I think we'd be happy to accept a pull request as long as it didn't cause problems with our spark tools. Are you able to run our spark tools on gcloud dataproc?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2176#issuecomment-259003257:58,log,loggers,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2176#issuecomment-259003257,7,"['log', 'test']","['logger', 'loggers', 'logging', 'tests']"
Testability,@droazen I fixed the tests (it was an errant find and replace error). I have spot checked the changes and it looks like nothing obviously off-target in there. I need another approval in order to finally merge this branch.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5913#issuecomment-602812944:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5913#issuecomment-602812944,1,['test'],['tests']
Testability,@droazen I fixed the tests. Can you take a look? I know you have opinions,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7947#issuecomment-1189114262:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7947#issuecomment-1189114262,1,['test'],['tests']
Testability,"@droazen I hacked one of the TrainVariantAnnotationsModelIntegrationTest cases to run in your Docker (only necessary because it seems like `gradlew test --tests *TrainVariantAnnotationsModelIntegrationTest` doesn't recognize tests that use a `DataProvider`, but perhaps I did something wrong). Here are the differences:. ```; (gatk) root@a87e0994889e:/repo# h5diff -v /repo/src/test/resources/large/org/broadinstitute/hellbender/tools/walkers/vqsr/scalable/train/expected/extract.nonAS.snpIndel.posUn.train.snpIndel.posOnly.IF.snp.trainingScores.hdf5 /repo/extract.nonAS.snpIndel.posUn.train.snpIndel.posOnly.IF.snp.trainingScores.hdf5. file1 file2; ---------------------------------------; x x / ; x x /data ; x x /data/scores . group : </> and </>; 0 differences found; group : </data> and </data>; 0 differences found; dataset: </data/scores> and </data/scores>; size: [445] [445]; position scores scores difference ; ------------------------------------------------------------; [ 60 ] -0.419202 -0.419202 5.55112e-17 ; 1 differences found; ```. Looks pretty negligible to me! :stuck_out_tongue_closed_eyes: Probably a result of the native code being called by the python/ML packages used in these tools; even minor changes in the compilers across Ubuntu versions might introduce differences like these. A quick fix might be to replace all system calls to `h5diff` in these tests with `h5diff --use-system-epsilon`; seems to do the trick here. But if that doesn't fix all test cases, then perhaps you can relax things with `h5diff -p EPSILON`, where `EPSILON` is a relative threshold. Probably OK to pick something like `1E-6`. OK if I leave it to you to try this or otherwise check the rest of the cases?. Sorry for the inconvenience! I think the exact-match test worked as intended here, but I probably could've put in better messaging originally. Unfortunately, it's a bit awkward to grab the output of system commands. And thanks for dealing with conda again (a necessary evil, unless we want ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8610#issuecomment-1848796931:148,test,test,148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8610#issuecomment-1848796931,4,['test'],"['test', 'tests']"
Testability,"@droazen I have a PR for gatk-bwa-mem that adds a footer to the image file so that we can test integrity. I also added code to test every (I think) call that returns an error indication, and pass this info up the chain. Could you review the PR or delegate, please?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3209#issuecomment-313504079:90,test,test,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3209#issuecomment-313504079,2,['test'],['test']
Testability,@droazen I have added the tests you were asking for and changed the reference base code to the slower but safer version (plus this version should hopefully pass the tests now). Let me know if this looks good to you! Then I can rebase and merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/894#issuecomment-142348807:26,test,tests,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/894#issuecomment-142348807,2,['test'],['tests']
Testability,@droazen I have pushed the cache removal step down to a more testable point in the code and added the assertion to the existing testing infrastructure. Can you take a quick look at this branch so it can go in at some point?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5911#issuecomment-491914930:61,test,testable,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5911#issuecomment-491914930,3,"['assert', 'test']","['assertion', 'testable', 'testing']"
Testability,"@droazen I implemented the pr skipping on push builds if there's a pr branch. It seems to work. It has to spin up a vm to do the check, but that takes about a minute instead of many, and it avoids running tests and downloading lfs. The good things is that if it fails for some reason it should just continue on with the build, so flakiness in the github api or network connectivitiy will just result in some extra builds completing rather than extra failures. . <img width=""1054"" alt=""screen shot 2018-09-05 at 11 19 14 am"" src=""https://user-images.githubusercontent.com/4700332/45103843-c5b5ae00-b0fe-11e8-9934-0025af9836ee.png"">. I think I should add a github token though so we don't get api throttling. Should I just add one from my own account?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5156#issuecomment-418773830:205,test,tests,205,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5156#issuecomment-418773830,1,['test'],['tests']
Testability,"@droazen I investigated working in the other direction: i.e. refining the shading in google-cloud-java to remove the conflict. Unfortunately, I can't get it to work either. What I did was to shade less in google-cloud-java (see [this branch](https://github.com/tomwhite/google-cloud-java/tree/nio-bigquery)). With this change I could successfully run `ExampleBigQueryReader` from [this GATK branch](https://github.com/broadinstitute/gatk/tree/tw_jts_bigquery_spark_example): . ```; $ ./gradlew clean localJar; $ export GOOGLE_APPLICATION_CREDENTIALS=...; $ ./gatk ExampleBigQueryReader; ...; 14:16:43.468 INFO BigQueryUtils - Query returned 10 results.; ...; ```. However, the mini cluster for testing doesn't work any more:. ```; $ ./gradlew test -Dtest.single=ReadsSparkSinkUnitTest; org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSinkUnitTest.setupMiniCluster FAILED; java.lang.NoSuchMethodError: com.google.common.base.Objects.toStringHelper(Ljava/lang/Object;)Lcom/google/common/base/Objects$ToStringHelper;; ```. It seems that the Guava conflict can't be resolved either way, since the fundamental problem is that the internals of Hadoop (used for the mini cluster) depend on an older, incompatible version of Guava than BigQuery does.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5928#issuecomment-494393817:694,test,testing,694,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5928#issuecomment-494393817,2,['test'],"['test', 'testing']"
Testability,"@droazen I know it's too late now but for the future... I would still recommend requiring the author to do a manual rebase to clean up the commit history, otherwise later it's going to be a pain to do things like assemble coherent and succinct version notes. We end up with many lines in the logs that consist of ""addressing comments"" and ""fixing tests"", which are completely uninformative.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2131#issuecomment-246813776:292,log,logs,292,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2131#issuecomment-246813776,2,"['log', 'test']","['logs', 'tests']"
Testability,@droazen I loosened the failing test and responded to your comments? Anything else before we can get this in?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7660#issuecomment-1064190387:32,test,test,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7660#issuecomment-1064190387,1,['test'],['test']
Testability,@droazen I plugged this into the `HaplotypeCaller` integration tests and it looks really good. The concordance tests fail due to a handful of false positives but these are _all_ obvious true positive multiallelics that the old qual model behaves stupidly on. I'm not sure who the right reviewer for this is but I'm guessing it's @ldgauthier and/or @vruano.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2098:63,test,tests,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2098,2,['test'],['tests']
Testability,"@droazen I posted the complete command line I used (the version is above). I posted a test.sam that reproducibly fails on my machine (OSX). And below is the log from my machine:. ```; 22:42:22.298 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/nhomer/miniconda3/envs/bfx/share/gatk4-4.1.8.1-0/gatk-package-4.1.8.1-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Aug 01, 2020 10:42:22 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 22:42:22.412 INFO HaplotypeCaller - ------------------------------------------------------------; 22:42:22.412 INFO HaplotypeCaller - The Genome Analysis Toolkit (GATK) v4.1.8.1; 22:42:22.412 INFO HaplotypeCaller - For support and documentation go to https://software.broadinstitute.org/gatk/; 22:42:22.412 INFO HaplotypeCaller - Executing as nhomer@ip-192-168-7-102.ec2.internal on Mac OS X v10.14.6 x86_64; 22:42:22.412 INFO HaplotypeCaller - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_192-b01; 22:42:22.412 INFO HaplotypeCaller - Start Date/Time: August 1, 2020 10:42:22 PM MST; 22:42:22.412 INFO HaplotypeCaller - ------------------------------------------------------------; 22:42:22.412 INFO HaplotypeCaller - ------------------------------------------------------------; 22:42:22.413 INFO HaplotypeCaller - HTSJDK Version: 2.23.0; 22:42:22.413 INFO HaplotypeCaller - Picard Version: 2.22.8; 22:42:22.413 INFO HaplotypeCaller - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 22:42:22.413 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 22:42:22.413 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 22:42:22.413 INFO HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 22:42:22.413 INFO HaplotypeCaller - Deflater: IntelDeflater; 22:42:22.413 INFO HaplotypeCaller - Inflater: IntelInflater; 22:42:22.413 INFO HaplotypeCaller ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6733#issuecomment-667631737:86,test,test,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6733#issuecomment-667631737,2,"['log', 'test']","['log', 'test']"
Testability,@droazen I profiled a lot and did some unit test experiments and basically there's no difference. Depending on average depths one or the other can be faster by up to 15 seconds per billion sites. I really just wanted to cull the list of open issues and had nothing against the old downsampler code. How about we close this PR *and* close Adam's GATK issue?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5074#issuecomment-433994089:44,test,test,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5074#issuecomment-433994089,1,['test'],['test']
Testability,@droazen I put a new github api token in and tested it here https://github.com/broadinstitute/gatk/pull/7537. It successfully skipped. I'm not sure what went wrong but I must have messed up the token when I rotated keys. . Going to close this. Reopen if you see this again going forward. The token is set directly in travis so it propagates without a rebase.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7536#issuecomment-955006474:45,test,tested,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7536#issuecomment-955006474,1,['test'],['tested']
Testability,"@droazen I ran #4314 and it did not solve the problem. When I reverted the ADAM patch from the #4314 branch I got the normal performance. @fnothaft I wish I knew. @lbergelson said he saw more logs being produced. Another (untested) theory is that the Kryo registrations changed somehow. GATK only uses the 2bit code from ADAM, so it is surprising that it is having such an effect. I'm not sure how to track down the problem at this point.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4376#issuecomment-366294101:192,log,logs,192,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4376#issuecomment-366294101,1,['log'],['logs']
Testability,"@droazen I ran the quick test, it looks like we're still slow. We'll first have to make sure the result is correct anyways, and then do a proper profiling to see where the time goes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/987#issuecomment-148549971:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/987#issuecomment-148549971,1,['test'],['test']
Testability,@droazen I rebased this on master to pick up the disabling of htsget tests so it can pass tests. I think I responded to everything - feel free to merge if so.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6800#issuecomment-689832810:69,test,tests,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6800#issuecomment-689832810,2,['test'],['tests']
Testability,@droazen I resolved your comments and fixed the test I broke. Can this be merged so we can move forward on that other branch?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5887#issuecomment-567970124:48,test,test,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5887#issuecomment-567970124,1,['test'],['test']
Testability,@droazen I responded to your comments. I've additionally some changes to the readme to include information about the test environment variables. Let me know if there are horrible spelling errors that I somehow missed.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2399#issuecomment-278802390:117,test,test,117,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2399#issuecomment-278802390,1,['test'],['test']
Testability,"@droazen I think I see how #4801 could introduce a rounding error that creates an extremely small positive log10 probability, which triggers the error. The old code was ; ```; log10PNoVariant += log10GenotypePosteriors[HOM_REF_GENOTYPE_INDEX]; ```. and the new code to handle spanning deletion is; ```; log10PNoVariant += MathUtils.log10SumLog10(nonVariantLog10Posteriors); ```; where `nonVariantLog10Posteriors` includes but the hom ref posterior *and* the posteriors of ref / span del het genotypes. So instead of A, where A is the log 10 hom ref posterior, we have log10(10^A + 10^B), where B is the ref/span del het log10 posterior. This latter quantity should never be positive, but the `log10SumLog10` method it relies on doesn't know that and has finite precision. Given that the problematic number is truly miniscule, `2.559797571100845E-21`, my money is on that explanation. I think a reasonable solution is just to replace it by zero, because we know that's where it comes from. That is, the code should become; ```; log10PNoVariant += Math.min(MathUtils.log10SumLog10(nonVariantLog10Posteriors), 0);; ```. If there is a way for me to debug without having to learn to use GenomicsDB I would like to confirm this myself. Otherwise, @sooheelee can I give you a jar to try out on the tutorial data where you spotted the problem earlier?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4975#issuecomment-402175972:534,log,log,534,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4975#issuecomment-402175972,1,['log'],['log']
Testability,@droazen I think I've addressed all your comments. Going to merge when tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2675#issuecomment-299953549:71,test,tests,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2675#issuecomment-299953549,1,['test'],['tests']
Testability,"@droazen I think we could still leave this open and when Google updates the preview image on dataproc to 2.0.2, I'll go back and test it again without messing the logging level.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2277#issuecomment-262641183:129,test,test,129,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2277#issuecomment-262641183,2,"['log', 'test']","['logging', 'test']"
Testability,@droazen I tried the tests locally but I still have to install a bunch of things for them to work. I expect to have time for it later this week.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232410013:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232410013,1,['test'],['tests']
Testability,@droazen I tried to relax absolutely everything but i stopped short of that. I have a test that any of the optional fields we previously special cased can now have any arbitrary value in them (which was the problem that sunk us here). However if they make DRASTIC changes to future gencode releases (like adding new top level transcript types or inventing a new reference orientation than + or -) then all bets are off...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8351#issuecomment-1581286010:86,test,test,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8351#issuecomment-1581286010,1,['test'],['test']
Testability,"@droazen I understand that -- the issue is that `ScriptExecutor` does not print either stdout or stderr from the external process unless debug is enabled (cf. `ScriptExecutor.java` ln. 92):. ```; //if debug is enabled, output the stdout and stderr, otherwise capture it to a buffer; if (logger.isDebugEnabled()) {; processSettings.getStdoutSettings().printStandard(true);; processSettings.getStderrSettings().printStandard(true);; } else {; processSettings.getStdoutSettings().setBufferSize(8192);; processSettings.getStderrSettings().setBufferSize(8192);; }; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4629#issuecomment-379385291:287,log,logger,287,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4629#issuecomment-379385291,1,['log'],['logger']
Testability,@droazen I would rather not get into why exactly the CNV tests are relying on bogus intervals that don't pass validation and what to do about it on this branch. I would rather get this version of things in now to help in at least the -L interval file use case,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7295#issuecomment-860948476:57,test,tests,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7295#issuecomment-860948476,1,['test'],['tests']
Testability,@droazen I'd like this to squeeze into 4.1. Tests pass locally after the second commit.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5615#issuecomment-458285149:44,Test,Tests,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5615#issuecomment-458285149,1,['Test'],['Tests']
Testability,"@droazen I'm not sure what sort of test I can have for this change. Any thoughts? . It's good that I looked at this again, it had a stupid bug in it the way I did it at first.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2366#issuecomment-276525494:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2366#issuecomment-276525494,1,['test'],['test']
Testability,"@droazen If possible, we should try to get this in before tonight's cron job runs. Also, I think we should make this change either way, since otherwise we get a lot of unnecessary log output.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3715#issuecomment-337698045:180,log,log,180,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3715#issuecomment-337698045,1,['log'],['log']
Testability,@droazen Integration tests went from ~58 minutes to ~50 minutes as a result of this branch.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4992#issuecomment-403528803:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4992#issuecomment-403528803,1,['test'],['tests']
Testability,"@droazen It occurs to me that one other axis that might be worth looking at is quality score quantization. I think the BAMs I was looking at were ones that had [unrecalibrated] full range quality scores, not ones that had been quantized to ~8 or fewer values. I wonder if the test files used above were all HiSeq-X whether that could have made a difference.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3413#issuecomment-320341028:276,test,test,276,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3413#issuecomment-320341028,1,['test'],['test']
Testability,@droazen Its a compile issue - I left out a `serialVersionUID` in new test code. Its a quick fix - I'll push a commit.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6718#issuecomment-705740891:70,test,test,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6718#issuecomment-705740891,1,['test'],['test']
Testability,"@droazen Looks good. Excellent description of what's going on, thanks for all the comments. Major improvement. . I don't know what we should do about tests, in general I like having a test for every public method, but IntervalUtils is a morass of indirectly tested things. Feel free to merge once you've addressed the very minor comments (up to you what you want to do with additional tests cases or not.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/768#issuecomment-126107710:150,test,tests,150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/768#issuecomment-126107710,4,['test'],"['test', 'tested', 'tests']"
Testability,"@droazen Looks good. I'm so glad to see that repetitive loading code gone. Just a few minor comments. Feel free to merge when tests pass. (providing that they do pass... I think you've changed the behavior of a few tools to now pull in unmapped reads, which is an improvement, but it's possible the tests are assuming that unmapped reads are ignored)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/955#issuecomment-146009870:126,test,tests,126,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/955#issuecomment-146009870,2,['test'],['tests']
Testability,"@droazen Major improvements here. Do you think we should add a table of contents under the quick start to help people got to what they need? I think it might not be a bad idea to move the developer specific information, i.e. testing, style information, uploading archives, etc into a developer specific readme.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1327#issuecomment-163739004:225,test,testing,225,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1327#issuecomment-163739004,1,['test'],['testing']
Testability,"@droazen Mark has been CNV tech lead for some time now, so I’ll let him take a first crack at this or delegate. However, I will point out #4782, which is tangentially related. Looks like handling the global compiler lock appropriately should also address the main issue. Finally, I’ll add that we should include such computing environments in our future testing infrastructure.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547470844:354,test,testing,354,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-547470844,1,['test'],['testing']
Testability,"@droazen No, it was not tested or merged. I don't want to merge until we can confirm that the fix works. Is there any way for me to get a copy of the failing BAM file? /cc @achevali @lbergelson",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2113#issuecomment-291171222:24,test,tested,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2113#issuecomment-291171222,1,['test'],['tested']
Testability,"@droazen Now that https://github.com/broadinstitute/gatk/pull/6634 is merged, can we move forward with this PR? If you haven't had time to check them out already, do you want to take a look at the changes I made to allow `GenotypeGCVFsIntegrationTest` update its own test files?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6859#issuecomment-715456004:267,test,test,267,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6859#issuecomment-715456004,1,['test'],['test']
Testability,@droazen OK - back to you for another round. I added that dbSNP test like we talked about.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6660#issuecomment-686514853:64,test,test,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6660#issuecomment-686514853,1,['test'],['test']
Testability,@droazen OK - the tests in `DataSourceUtilsUnitTest` pass for me locally. I had to substantially refactor the tests and I added some log messages and some `final` modifiers to clean up some other Intellij warnings.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6807#issuecomment-694956600:18,test,tests,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6807#issuecomment-694956600,3,"['log', 'test']","['log', 'tests']"
Testability,"@droazen OK, just added another 2 tests and rebased. Can you take another look at this? I think the issue I reported above has been resolved.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6054#issuecomment-534654120:34,test,tests,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6054#issuecomment-534654120,1,['test'],['tests']
Testability,"@droazen Off the top of my head, we. * cache `log10(n)` and `log10(n!)` up to some large value.; * have a fast version of `log10SumLog10(double a, double a)` that works as follows: we want to compute `log10(10^a + 10^b)`. WLOG `a < b`, so this comes out to `a + log10(1 + 10^(a - b))`. I believe we cache the values of `log10(1 + 10^(x)` over a finely-spaced grid and round `a-b` to the nearest cached `x`. . There might not be anything else. There's a lot of stuff to keep calculations in log space for numerical stability but those don't avoid `log10()` and `Math.pow()`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2577#issuecomment-292584322:490,log,log,490,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2577#issuecomment-292584322,1,['log'],['log']
Testability,"@droazen Per our discussion about whether the default stringency should be SILENT or STRICT, I re-ran the BaseRecalibrator integration tests (remember these were the only tests that failed with STRINGENCY=STRICT, at least non-Spark tests which is all that are affected by this PR) to see why they failed. There are about 15 tests, totalling about 10 bams used there that fail validation. Based on Picard validation, some have >100 errors, some have a handful; the most common errors are:. -Mate not found for paired read; -Mate Alignment start should be 0 because reference name = *; -Mapped mate should have mate reference name. There are also a handful of missing NM tags. I have the file-by-file breakdown if you want to see it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1439#issuecomment-174663312:135,test,tests,135,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1439#issuecomment-174663312,4,['test'],['tests']
Testability,@droazen Please review. I'll also launch a test of this tonight to make sure the changes didn't introduce any stupid bugs.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3327#issuecomment-317091130:43,test,test,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3327#issuecomment-317091130,1,['test'],['test']
Testability,"@droazen Please take a look at this. I believe this has a pair of pretty good test cases, but please suggest additional ones.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3675#issuecomment-334854792:78,test,test,78,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3675#issuecomment-334854792,1,['test'],['test']
Testability,@droazen Please take a look. Note that I removed the functional programming in `SelectVariants.setFilteredGenotypeToNocall()`. I could not think of a clean way to implement the added logic.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1871#issuecomment-238309419:183,log,logic,183,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1871#issuecomment-238309419,1,['log'],['logic']
Testability,@droazen Rebased and waiting for tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/685#issuecomment-123832048:33,test,tests,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/685#issuecomment-123832048,1,['test'],['tests']
Testability,@droazen Test enabled.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3398#issuecomment-320052914:9,Test,Test,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3398#issuecomment-320052914,1,['Test'],['Test']
Testability,"@droazen Thank you for the confirmation that HaplotypeCaller performs separate filtering passes on the read mapping qualities, and that the code on line 729 of HaplotypeCallerEngine.java (method ```filterNonPassingReads()``` ) is indeed executing subsequent to the ```MappingQualityReadFilter```. May I suggest, however, that MAPQ values less than 20 might not necessarily lead to an increase in FP variant calls? My understanding is that HaplotypeCaller uses MAPQ values only in a nonparametric rank sum test, in which case MAPQ is treated as an ordinal. This seems appropriate since the magnitude of a MAPQ value depends both on the data and on the computational model the read aligner uses to calculate it. With this in mind, a set of mappings with MAPQ in a lower range (e.g., ```--minimum-mapping-quality 10``` and a correspondingly lower ```--maximum-mapping-quality``` as well) might very well be appropriate for variant calling. So changing the semantics of ```MappingQualityReadFilter``` or parameterizing the currently-hardwired MAPQ range would enable additional control without affecting performance. @jamesemery I will watch for the HaplotypeCaller update that implements that functionality. And if you have a moment, could you please point me to the code that might be adversely affected by decreasing the low-end MAPQ threshold? I might have some ideas about that (or not!)... Thanks again!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6854#issuecomment-701512278:505,test,test,505,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6854#issuecomment-701512278,1,['test'],['test']
Testability,@droazen Thank you for the thorough explanation. That makes sense. For now I've changed `presorted = false` and that integration test is now passing (meaning the output now matches GATK3). Back to you!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1853#issuecomment-224706860:129,test,test,129,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1853#issuecomment-224706860,1,['test'],['test']
Testability,"@droazen That's probably the best way to do it, although I don't think we can be sure of a quick fix until we have a failing unit test for this on GCS. The turnaround time for manual testing is slow (for me at the moment). If someone could write such a test that would be very helpful.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2287#issuecomment-265800104:130,test,test,130,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2287#issuecomment-265800104,3,['test'],"['test', 'testing']"
Testability,@droazen The PR is #6544. James has reviewed and requested a few more tests. It's working fine on validations including ~30 exomes and ~15 genomes.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6533#issuecomment-611223334:70,test,tests,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6533#issuecomment-611223334,1,['test'],['tests']
Testability,@droazen The user provided test data(problematic BAM file and its md5sum): https://drive.google.com/drive/folders/1a6q_c7xNlsFqG1B3TdrdVL51_QB5e7RD; The command they used:; `gatk SplitNCigarReads -R hg38_primary_refseq.fa -I SOD1P_A272C_rep2.Dedup.bam -O SOD1P_A272C_rep2.Split.bam`. Additional info: The original raw data is publicly available in the SRA: SRR5273292,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6776#issuecomment-689025052:27,test,test,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6776#issuecomment-689025052,1,['test'],['test']
Testability,@droazen There are tests for the file handling in htsjdk but not a specific one for MergeVcfs.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6702#issuecomment-660253457:19,test,tests,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6702#issuecomment-660253457,1,['test'],['tests']
Testability,"@droazen This does not affect any of the integration tests or unit tests in gatk-protected, except insofar as `InfiniteRandomMatingPopulationModel` must be renamed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1855#issuecomment-222225770:53,test,tests,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1855#issuecomment-222225770,2,['test'],['tests']
Testability,"@droazen This is a straight-up port -- it was copy and paste except I had to update some method names, like `alleleCount()` -> `numberOfAlleles()` and `sampleIndex` -> `indexOfSample`. And of course I couldn't port the changes to integration tests md5s.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2710#issuecomment-301089484:242,test,tests,242,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2710#issuecomment-301089484,1,['test'],['tests']
Testability,@droazen This is still failing after re-run. Looks like it's an oom issue. Tests pass locally. Any thoughts?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/915#issuecomment-142618506:75,Test,Tests,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/915#issuecomment-142618506,1,['Test'],['Tests']
Testability,"@droazen This should be ready for a second review. I refactored it. I don't have direct tests for tiledb in FeatureDataSource tests since I included them in GenomicsDBIntegration test, let me know if you think we need them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1975#issuecomment-235097132:88,test,tests,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1975#issuecomment-235097132,3,['test'],"['test', 'tests']"
Testability,"@droazen Those data are fine to share. The resources/VariantsEval/*.vcf are all either anonymized or (public) 1000G samples. @bbimber since we now include all the test data in the repo, we restrict ourselves to chromosomes 19 and 20 (there should already be a chromosome 19 and 20 reference fasta in the repo and probably the dbsnp too). Most of the files use just variants from 20, but MendelianViolationEval data is on chromosome 1 and will need to be modified. I'd love for all our test data to be valid VCFs, so I wouldn't want to just change 1 to 20 (because the reference allele won't match). Maybe there's a quick and dirty way to change the alleles?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-358052355:163,test,test,163,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-358052355,2,['test'],['test']
Testability,"@droazen Two .vcf files used for testing prevented cloning the GATK on my home laptop. Supposedly ecryptfs is okay up to 143 characters, but I think that might be _typical_ behavior rather than guaranteed safe. It seems like knocking 10-20 characters off the names should make them totally safe. I don't know how important it is for the files to have metadata in their names. **length 142:**; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.CEUTrio.HiSeq.WGS.b37.NA12878.CONTAMINATED.WITH.HCC1143.NORMALS.AT.15PERCENT.calls.20.10100000-10150000.gatk3.8-1-1-gdde23f56a6.g.vcf; **length 140:**; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.CEUTrio.HiSeq.WGS.b37.NA12878.CONTAMINATED.WITH.HCC1143.NORMALS.AT.15PERCENT.calls.20.10100000-10150000.gatk3.8-1-1-gdde23f56a6.vcf",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4718:33,test,testing,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4718,3,['test'],"['test', 'testing']"
Testability,@droazen Updated the test so it's more stringent,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4167#issuecomment-358339959:21,test,test,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4167#issuecomment-358339959,1,['test'],['test']
Testability,@droazen What's the status of the failing WDL tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8889#issuecomment-2192905226:46,test,tests,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8889#issuecomment-2192905226,1,['test'],['tests']
Testability,"@droazen When we left off you showed me how to use JProfiler (which I now use regularly) and had pointed me to instructions for running GATK on a Spark cluster. I realize I'm going to need another round of hand-holding, because I'm not sure which Spark cluster to test on, and I'm not sure which command to test. And beyond measuring total runtime and looking for any new hotspots in JProfiler I don't know what else to measure. Could I get some more help from someone on the engine team?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4154#issuecomment-393933239:264,test,test,264,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4154#issuecomment-393933239,2,['test'],['test']
Testability,"@droazen Yeah, that would work - didn't think of it that way :) I just ran a quick test using the following command, while changing the `end`:. ```; time( java -jar genomics-tools-client-java-v1beta2.jar getreferencebases --id EPDikenvqJioOA --start 1 --end 1000000 ); ```. There seems to be a point where it starts to get faster when the regions are longer or if you have many multiple small-region requests:. | start | end | time to retrieve region (seconds) | total human genome | total time retrieve genome (seconds) |; | --- | --- | --- | --- | --- |; | 1 | 1000 | 2.13 | 3234830000 | 6890187.9 |; | 1 | 100000 | 2.183 | 3234830000 | 70616.3389 |; | 1 | 1000000 | 4.087 | 3234830000 | 13220.75021 |; | 1 | 10000000 | 22.328 | 3234830000 | 7222.728424 |; | 1 | 1000000000 | 298.418 | 3234830000 | 965.3314989 |. Looks promising but I'm still curious of the offical times :). ~p",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/567#issuecomment-112884863:83,test,test,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/567#issuecomment-112884863,1,['test'],['test']
Testability,"@droazen [OSU Open Source Lab](http://osuosl.org/services/powerdev) provides the POWER8 cluster for open-source projects. Is it usable for your testing on PPC? Many open-source projects are using it. . With the source tree in a single repo that I propose, changes that are specific to AVX will be made only for the files under ""avx/"" directory, which are not used for building the PPC binary. For example, build.gradle will specify ""avx/"" when building the binary on x86_64 (""power8/"" on ppc64le). If the files under ""common/"" are changed (e.g., the package name is renamed from hellbender to gatk4), the changes should work on PPC if the tests don't fail on x86_64.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1748#issuecomment-215324733:144,test,testing,144,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1748#issuecomment-215324733,2,['test'],"['testing', 'tests']"
Testability,"@droazen a few minor tests I missed, but this should be good to go otherwise. I did the refactor for Evoquer and I think everything else has been addressed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4947#issuecomment-514690456:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4947#issuecomment-514690456,1,['test'],['tests']
Testability,@droazen added a quick unit test that failed without my change but passes now. look ok?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5341#issuecomment-432078324:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5341#issuecomment-432078324,1,['test'],['test']
Testability,"@droazen added a test, back to you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6147#issuecomment-529657131:17,test,test,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6147#issuecomment-529657131,1,['test'],['test']
Testability,@droazen and @akiezun I added the separate unit test as well as the (currently broken) regression test. The issue that's preventing the regression test from running is #1865.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1853#issuecomment-222237452:48,test,test,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1853#issuecomment-222237452,3,['test'],['test']
Testability,@droazen and/or @jonn-smith: is there anything else you need on this PR? It appears the test is passing,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1622564392:88,test,test,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1622564392,1,['test'],['test']
Testability,"@droazen any thoughts how we should proceed here, if at all? @ldgauthier reminded me that this story was unfinished and is getting a little stale. @fleharty take note if we want to report progress on this front to our MalariaGEN collaborators. On my end, there are a couple of things to do:; - [x] rebase and resolve conflicts; - [x] change TSV input as discussed above; - [x] add doc strings for new arguments; - [x] add integration tests to make absolutely sure exposure was done correctly, perhaps? I'm open to discussion about how this should be done. Complete coverage here will be difficult and perhaps not worth the effort, but I can probably put in a few tests that make sure changing the hard-coded values in master and doing the same via the exposed parameters in this branch have the same effect on a few existing test cases. However, while I'm doing the last three, I wonder if we could run whatever canonical evaluations/optimizations we have to see whether it's worth consolidating some of the parameter sets at this stage? I think there's an argument for having at least two sets (haplotype-to-reference + read-to-haplotype), but I'm not sure how to justify having a separate set for dangling heads/tails. But also not sure which set the latter should be consolidated with---@jamesemery thoughts? Again, let me reiterate that it seems that many of these parameter values were chosen arbitrarily (or, if not, that the procedure for choosing them has been lost). As a start, you can see the results of some optimizations I did on the CHM mix on slide 15 at https://docs.google.com/presentation/d/1zGuquAZWSUQ-wNxp8D6HhGNjIaFcV0_X9WAS4LODbEo/edit?usp=sharing Here, I optimized over haplotype-to-reference + read-to-haplotype SW parameters on various metrics after variant normalization using vcfeval. These optimizations were done using the Bayesian optimization framework I prototyped long ago (see https://github.com/broadinstitute/gatk-evaluation/tree/master/pipeline-optimizer and http",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-891907471:434,test,tests,434,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-891907471,3,['test'],"['test', 'tests']"
Testability,@droazen back to you. Tests fixed locally and I will rebase and merge AlleleSubsettingUtils now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7655#issuecomment-1026919246:22,Test,Tests,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7655#issuecomment-1026919246,1,['Test'],['Tests']
Testability,@droazen can you run it on GSC or maybe ask @jean-philippe-martin ? I put the bam file in the hellbender-validation/test-input/NA12878 bucket,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/995#issuecomment-170034661:116,test,test-input,116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/995#issuecomment-170034661,1,['test'],['test-input']
Testability,"@droazen commented on [Wed Apr 05 2017](https://github.com/broadinstitute/gatk-protected/issues/977). The docker tests take about 40 minutes in travis, while the next-slowest travis task takes about 30 minutes. We should try to reduce the runtime of the docker tests to <= 30 minutes. ---. @droazen commented on [Wed Apr 05 2017](https://github.com/broadinstitute/gatk-protected/issues/977#issuecomment-292032382). For @LeeTL1220 . ---. @LeeTL1220 commented on [Wed Apr 05 2017](https://github.com/broadinstitute/gatk-protected/issues/977#issuecomment-292032644). I thought we were going to address this with a GATK base image... what is; target time? (Within reason). On Apr 5, 2017 20:08, ""droazen"" <notifications@github.com> wrote:. For @LeeTL1220 <https://github.com/LeeTL1220>. —; You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub; <https://github.com/broadinstitute/gatk-protected/issues/977#issuecomment-292032382>,; or mute the thread; <https://github.com/notifications/unsubscribe-auth/ACDXk_R_mkaEcEJlOt3lJntscqeum3-lks5rtC0SgaJpZM4M09tE>; . ---. @droazen commented on [Wed Apr 05 2017](https://github.com/broadinstitute/gatk-protected/issues/977#issuecomment-292033277). That is tracked at https://github.com/broadinstitute/gatk/issues/2457 and slated for beta (mid-May). This ticket in protected can be considered as blocked until https://github.com/broadinstitute/gatk/issues/2457 is done.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2965:113,test,tests,113,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2965,2,['test'],['tests']
Testability,"@droazen didn't you have an objection to these PRs, (this one and #5451)? What was the issue with unifying the test code again?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5723#issuecomment-519560848:111,test,test,111,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5723#issuecomment-519560848,1,['test'],['test']
Testability,"@droazen do we still care about this? Given that we've been moving to non-exact match integration tests and fuzzy comparisons in production, maybe this isn't worth the effort.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1572#issuecomment-590346422:98,test,tests,98,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1572#issuecomment-590346422,1,['test'],['tests']
Testability,@droazen do you have any logs of the failed runs?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162537544:25,log,logs,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162537544,1,['log'],['logs']
Testability,@droazen do you have any test data with the conditions that you want to support?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2442#issuecomment-307844048:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2442#issuecomment-307844048,1,['test'],['test']
Testability,"@droazen easy one for you... we do have test for both of these. In fact, I think we ONLY have tests that enable these... Inspired by #2549",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2550:40,test,test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2550,2,['test'],"['test', 'tests']"
Testability,"@droazen how about I first push to a new branch on broadinstitute:, so we can run the Travis tests on this code?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232108937:93,test,tests,93,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232108937,1,['test'],['tests']
Testability,@droazen it may be prudent to also include `innerOpen` in the retry logic.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3253#issuecomment-314825851:68,log,logic,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3253#issuecomment-314825851,1,['log'],['logic']
Testability,@droazen looks good. Merge when the tests pass,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4430#issuecomment-367144253:36,test,tests,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4430#issuecomment-367144253,1,['test'],['tests']
Testability,"@droazen ok, please rereview (assuming tests pass)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/258#issuecomment-78069930:39,test,tests,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/258#issuecomment-78069930,1,['test'],['tests']
Testability,@droazen or @jonn-smith: checking back: any chance someone would be able to approve the workflow so tests can run?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1607873947:100,test,tests,100,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1607873947,1,['test'],['tests']
Testability,"@droazen please review. don't be alarmed by the number of files - a whole bunch of test data is there as well as import fixes. The important code is in VariantFiltration and in the engine classes: `FeatureManager`, `VariantDataSource`, `FeatureContext`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/614#issuecomment-119014252:83,test,test,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/614#issuecomment-119014252,1,['test'],['test']
Testability,"@droazen revised the code, but got error in rebasing:; `error: could not apply 37f19b8... disabled pairHMM binary build on PPC64LE; fixed floating comparison issue; `; Here is the list I saw when running: `git rebase -i upstream/master`:. ```; pick 37f19b8 disabled pairHMM binary build on PPC64LE; fixed floating comparison issue; pick 02a5c45 fixed tab/space; pick 7229770 determine the number of spark cores to use from env. var.; disable IntelDeflator testing; pick 42d6661 don't use dataflow serializablefunction; pick 856243d adding gatk-launch to the jar; pick 71a6feb add IBM to AUTHORS; pick 23d9d6e determine the number of spark cores to use from env. var.; pick 3d0017f disable IntelDeflator testing; fix bug left behind; pick 3c078ad revised determineDefaultSparkMaster() method after review; ```. I also don't recognize commits `42d6`, `8562`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1776#issuecomment-215601277:456,test,testing,456,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1776#issuecomment-215601277,2,['test'],['testing']
Testability,"@droazen tests pass -- look good enough? (My other PR merged this branch, so this should go in first.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6168#issuecomment-535164332:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6168#issuecomment-535164332,1,['test'],['tests']
Testability,"@droazen thanks for the quick response! Just to be clear, my concerns were about testing that I didn't somehow screw up the original behavior through the exposure, not just testing that *some* behavior was exposed. But message received---will keep things on the simple side!. Also, please see the plots in #5564 to get an idea of the effect on outputs, if you haven't already. Would appreciate any thoughts you might have on that thread!. Will try to get this done in the next day or two, thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-896328697:81,test,testing,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-896328697,2,['test'],['testing']
Testability,"@droazen thanks for the review. I have now addressed all of your feedback, with the main changes being; - Revert the change to ShardBoundary that uses the padded interval as its interval, and use an anonymous class instead.; - Add a new join strategy (OVERLAPS_PARTITIONER) so that running BQSR can be done using the old way still.; - Add a check for overly long read sizes. If exceeded the job will fail with an exception.; - Be more conservative about the partition end point by using the maximum read length, rather than just the length of the read that happens the start the next partition.; - Rather than making a field in FeatureManager transient, do a better job of reinstating the field that is not serializable (a logger).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2190#issuecomment-257368260:723,log,logger,723,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2190#issuecomment-257368260,1,['log'],['logger']
Testability,@droazen thanks. I've created https://github.com/broadinstitute/gatk/pull/2306 which reverts the commits that caused the problem on GCS. I've tested the above command (MarkDuplicatesSpark) on GCS and it works fine.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2287#issuecomment-265998571:142,test,tested,142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2287#issuecomment-265998571,1,['test'],['tested']
Testability,"@droazen that looks very bad. I don't know why my own testing didn't fail with this. It looks like unless gcloud quickly does a dot release, we'll be obliged to make our own nio jar for a bit :(",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2220#issuecomment-257687010:54,test,testing,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2220#issuecomment-257687010,1,['test'],['testing']
Testability,"@droazen the bam that I added was aligned with minimap2. However, it is a really small BAM, so I could not run it through the integration tests. It sounds useful to add minimap2-aligned bam to HaplotypeCallerIntegrationTest. Can you or @jamesemery point me to a suitable BAM for that?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8337#issuecomment-1558588144:138,test,tests,138,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8337#issuecomment-1558588144,1,['test'],['tests']
Testability,"@droazen there might be some new test failures (which I will address if/when they arise), but this is ready for re-review.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7670#issuecomment-1041936461:33,test,test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7670#issuecomment-1041936461,1,['test'],['test']
Testability,@droazen this has passed tests,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7295#issuecomment-865315733:25,test,tests,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7295#issuecomment-865315733,1,['test'],['tests']
Testability,@droazen this is ready for review now. The tests failures are all due to accidentally getting htjsdk 2.5.1 and are fixed in the commit that's running now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1975#issuecomment-233023985:43,test,tests,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1975#issuecomment-233023985,1,['test'],['tests']
Testability,@droazen would you like me to take care of that by making a branch for @meganshand to test?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1950#issuecomment-300902310:86,test,test,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1950#issuecomment-300902310,1,['test'],['test']
Testability,"@droazen yes, that was my initial inclination, but @jamesemery suggested TSV input in https://github.com/broadinstitute/gatk/issues/6863#issuecomment-705611993. I do log the values as a compromise, but I can understand if you might want to see them in the header. Happy to go back and change this upon review, but the table approach seems to make things easier on me for experimenting, at least.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-708470566:166,log,log,166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-708470566,1,['log'],['log']
Testability,"@droazen you were asking for a check of the performance. I ran the following two commands:. ```; $ ./gatk-launch PrintReads -I gs://$MYBUCKET/CEUTrio.HiSeq.WGS.b37.ch20.1m-2m.NA12878.bam -O gs://$MYBUCKET/pr.bam; $ ./gatk-launch PrintReads -I gs://$MYBUCKET/CEUTrio.HiSeq.WGS.b37.ch20.1m-2m.NA12878.bam -O /tmp/pr.bam; ```. output to: | local disk | GCS; --|--|--; run 1 | 0.12 min | 0.68 min; run 2 | 0.12 min | 0.29 min; run 3 | 0.12 min | 0.28 min; **median** |**0.12 min** | **0.29 min**. So it looks like there's a significant performance difference. For what it's worth, copying the output file to GCS from my desktop takes 3.5s. The log when running PrintReads indicates:. ```; 11:06:13.011 INFO PrintReads - HTSJDK Defaults.COMPRESSION_LEVEL : 1; 11:06:13.011 INFO PrintReads - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 11:06:13.011 INFO PrintReads - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 11:06:13.011 INFO PrintReads - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-336978915:640,log,log,640,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-336978915,1,['log'],['log']
Testability,"@droazen, @lbergelson I have the following argument to the tool:. ```java; @Argument(fullName = ""read-tags"", doc = ""read tag names to recover""); public List<String> readTags = DEFAULT_READ_TAGS;; ```. On the command line I want to say. ```; java -jar gatk.jar …; ...; --read-tags RX; ```. and want readTags to be a singleton list. But in my test it's not parsing the arguments correctly---what am I doing wrong here?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7739#issuecomment-1081090913:341,test,test,341,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7739#issuecomment-1081090913,1,['test'],['test']
Testability,"@droazen, I have pushed a debugging test. It just prints out all the keys and not private and not id values in the service json pointed by GOOGLE_APPLICATION_CREDENTIALS env. Would it be possible to accept this into the nalinigans_genomicsdb_uri_support branch, so I can browse through the stdout for that test on Travis? By the way, the failures in the build seem to be unrelated to my change. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5017#issuecomment-423026481:36,test,test,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5017#issuecomment-423026481,2,['test'],['test']
Testability,"@droazen, I think I have pushed most of the changes requested -. * Moved out `appendPathToDir` from BucketUtils to IOUtils; * `appendPathToDir` now uses Path.resolve() to append a given path to dir; * If a workspace already exists and `overExistingWorkspace` is false, a `UnableToCreateGenomicsDBWorkspace` exception is thrown while creating a GenomicsDB workspace.; * Made sure all paths passed to GenomicsDB are absolute.; * Introduced `gendb.hdfs:` and `gendb.gs:` URI schemes in addition to the existing `gendb:` scheme for identifying Cloud paths in GenomicsDB with unit testing for these new schemes.; * Added unit tests to test writing to GenomicsDB workspace/arrays to GCS and then reading/querying from the same GenomicsDB instance from GCS with validation.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5017#issuecomment-415611303:576,test,testing,576,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5017#issuecomment-415611303,3,['test'],"['test', 'testing', 'tests']"
Testability,"@droazen, I think that the tests are failing here because a cromwell issue...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3175#issuecomment-324277969:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3175#issuecomment-324277969,1,['test'],['tests']
Testability,"@droazen, I updated the PR message to describe the changes, because I tried to get all the code referring to test resources packaged in src/test. Now it should pass the tests too.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324295384:109,test,test,109,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-324295384,3,['test'],"['test', 'tests']"
Testability,"@droazen, also the test pass in our diff tool with both BCF2 and VCF codecs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293699920:19,test,test,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293699920,1,['test'],['test']
Testability,"@droazen, both batch size and consolidate arguments are pushed. all tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298807246:68,test,tests,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298807246,1,['test'],['tests']
Testability,"@droazen, could you review this PR? Before I implement the integration test I would be important that you check if it is possible the change of the `ReadShard` contract (null `ReadsDataSource` are now allowed, and I don't know if this will affect other parts of GATK. Thank you very much in advance.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1708#issuecomment-219990301:71,test,test,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1708#issuecomment-219990301,1,['test'],['test']
Testability,"@droazen, just to make sure I understand...you are suggesting that we keep doing the wrong things in GATK4 just so the integration tests match their results in GATK3?. Wouldn't it be better to have a GATK3_EQUIVALENCE_MODE flag and create new tests that do the right thing?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3680#issuecomment-342985499:131,test,tests,131,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3680#issuecomment-342985499,2,['test'],['tests']
Testability,"@droazen, thanks for the comments. I've added a unit test to demonstrate the issue. The test shows that a shallow copy is fine, so that has been changed as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4926#issuecomment-404248365:53,test,test,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4926#issuecomment-404248365,2,['test'],['test']
Testability,"@droazen, we have fixed all issues in genomicsdb code. the test now fails giving this message:. java.lang.AssertionError: Attribute MIN_DP expected [27.0] but found [27]; Expected :27.0; Actual :27. As I told you before I am using VariantContextTestUtils.assertVariantContextsAreEqual() to compare two feature reader iterators. is this the correct method to use?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-292376903:59,test,test,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-292376903,3,"['Assert', 'assert', 'test']","['AssertionError', 'assertVariantContextsAreEqual', 'test']"
Testability,"@droazen, we were able to go past the MIN_DP and ExcessHet problem. GenomicsDB calls the appropriate combine operation for this field from the given samples and the error went away. However, we have run into another problem: assertVariantContextsAreEqual() method compares two lists of Alleles and if these lists are not ordered in the same way, the check fails. The order in which alleles are read from GenomicsDB does not always match that generated by your tool. For example, for position 17966384, the alleles are CAA, CA, C, <NON_REF> and GenomicsDB feature reader shows them as CAA, C, CA, <NON_REF>. Our ""vcfdiff"" tool in GenomicsDB passes the test and all data looks good. So, either we check the variant contexts using our diff tool or you fix the assertion method.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293699648:225,assert,assertVariantContextsAreEqual,225,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293699648,3,"['assert', 'test']","['assertVariantContextsAreEqual', 'assertion', 'test']"
Testability,"@droazen, we were able to move past the MIN_DP problem by using a VCFCodec instead of a BCF2Codec for GenomicsDB feature reader. Header in memory looks good. Found another bug in the import tool that we're fixing now. Will push once the test goes through.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293494329:237,test,test,237,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293494329,1,['test'],['test']
Testability,"@droazen, will put some debug print statements in the two tests that are failing while authenticating with GCS and issue another pull request to _nalinigans_genomicsdb_uri_support_ branch. Hope that is OK. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422843915:58,test,tests,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422843915,1,['test'],['tests']
Testability,"@droazen: test added (technically a unit test), but I dont think I'm able to kick off the test suite.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1603301480:10,test,test,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1603301480,3,['test'],['test']
Testability,@droazen: the change is added. it looks like this needs approval to kick off tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1625683244:77,test,tests,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1625683244,1,['test'],['tests']
Testability,"@dror27 - I addressed the comments that were assigned to me. There is some documentation task left and that failing test and then we are ready, I think.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8697#issuecomment-2026047858:116,test,test,116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8697#issuecomment-2026047858,1,['test'],['test']
Testability,@drozen htsjdk PR is [here](https://github.com/samtools/htsjdk/pull/968/). I'm running gatk tests locally as a sanity check.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3448#issuecomment-322799380:92,test,tests,92,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3448#issuecomment-322799380,1,['test'],['tests']
Testability,"@dwuab, we are making some performance improvements with GenomicsDB and still are in the testing stage. Just wondering if you could try gatk from this branch `https://github.com/broadinstitute/gatk/tree/genomicsdb_142` to import large intervals(the ones that were problematic before) and let us know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7012#issuecomment-930343647:89,test,testing,89,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7012#issuecomment-930343647,1,['test'],['testing']
Testability,@edwardkw one comment then feel free to squash and merge once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/594#issuecomment-114593815:62,test,tests,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/594#issuecomment-114593815,1,['test'],['tests']
Testability,"@eitanbanks Comments addressed, tests passing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3255#issuecomment-316709556:32,test,tests,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3255#issuecomment-316709556,1,['test'],['tests']
Testability,@eitanbanks please review (by testing out the repair tool),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3868#issuecomment-346449167:30,test,testing,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3868#issuecomment-346449167,1,['test'],['testing']
Testability,@eitanbanks thanks. the code and tests are now in hellbender too.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/380#issuecomment-94984339:33,test,tests,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/380#issuecomment-94984339,1,['test'],['tests']
Testability,@elcortegano Thank you for reporting this and providing the test data! The fix was just merged so the next release of GATK should resolve this issue for you.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8455#issuecomment-1671933182:60,test,test,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8455#issuecomment-1671933182,1,['test'],['test']
Testability,@erniebrau I don't think we can exclude log4j 1.x. A lot of our dependencies use it. This branch is failing with various ClassNotFound errors. ex: https://storage.googleapis.com/hellbender/test/build_reports/11489.3/tests/test/classes/org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSourceUnitTest.html#testReadFromFileAndHDFS,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3416#issuecomment-320696279:189,test,test,189,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3416#issuecomment-320696279,4,['test'],"['test', 'testReadFromFileAndHDFS', 'tests']"
Testability,"@erniebrau, the mesage and log file corresponds to the latest master (GKL 0.5.8); for the GKL 0.5.3 the error message is the following:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGILL (0x4) at pc=0x000000011dc557f4, pid=20586, tid=20739; #; # JRE version: Java(TM) SE Runtime Environment (8.0_60-b27) (build 1.8.0_60-b27); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.60-b23 mixed mode bsd-amd64 compressed oops); # Problematic frame:; # C [libgkl_compression1417468606951982528.dylib+0x17f4] Java_com_intel_gkl_compression_IntelDeflater_resetNative+0x164; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/daniel/workspaces/ReadTools/hs_err_pid20586.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. And the log file: [hs_err_pid20586.log.txt](https://github.com/broadinstitute/gatk/files/1264191/hs_err_pid20586.log.txt). Let me know if you need more information.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3532#issuecomment-326031152:27,log,log,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3532#issuecomment-326031152,5,['log'],['log']
Testability,"@fleharty Can you replace the .crai with a .bai ? We're trying to discourage proliferation of .crai files due to issues with the internal .crai->.bai conversion done by htsjdk. Any recent gatk4 will produce a .bai if you run the .cram file through PrintReads, just make sure to submit both the .cram and .crai that are produced, since the output .cram will almost certainly be different than the input one. Otherwise looks good - thanks for adding this test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2174#issuecomment-248304366:453,test,test,453,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2174#issuecomment-248304366,1,['test'],['test']
Testability,"@fleharty fixed the bug, the tests should pass now",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5286#issuecomment-428288360:29,test,tests,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5286#issuecomment-428288360,1,['test'],['tests']
Testability,@fleharty test added.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6908#issuecomment-730580154:10,test,test,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6908#issuecomment-730580154,1,['test'],['test']
Testability,"@fnothaft When you submit a PR, you should include a brief description of the motivation behind the change, as well as a good unit test covering it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4432#issuecomment-367374828:131,test,test,131,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4432#issuecomment-367374828,1,['test'],['test']
Testability,"@forg-yu Glad to hear you have it working!. You are correct about the difference between the Gencode versions long non-coding RNA tag. In addition to this, there are several other tags used in Gencode v34 that were not present in v28. The latest Funcotator code (not yet merged into master - pr #6660) has parser updates to allow for these new values, but the old code (GATK 4.1.8.1 and earlier) doesn't have these parsing updates. This is the unfortunate price we pay for updating the Gencode datasource with the new datasources release. ☹️ . The issue you ran into is not exactly a bug, but an artifact of our data source release process. In order to test them, the data sources must be posted before the code changes to support them (so we can test the code against the data sources as released). Unfortunately there was no warning mechanism to users to let them know that newer data source versions are not yet supported (checks against older versions were already present). I've created an issue (#6712) and a branch ([jts_funcotator_version_max_6712](https://github.com/broadinstitute/gatk/tree/jts_funcotator_version_max_6712)) that adds in such checks, so pretty soon there will be a warning rather than a confusing stack trace.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6708#issuecomment-662200608:653,test,test,653,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6708#issuecomment-662200608,2,['test'],['test']
Testability,"@fpbarthel I did use 4.1.0.0 to test this as well as 4.0.9.0. I think that it must have been fixed, but I am glad that you were able to find a workaround. Let us know if this error occurs again though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5683#issuecomment-888363150:32,test,test,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5683#issuecomment-888363150,1,['test'],['test']
Testability,"@frank-y-liu Thanks for the pull request! Looks good to me except for a very minor nitpick about tabs. In general we always use spaces. You should be able to set your IDE to autoconvert them. . I'm happy to merge without the cloud tests. It's a security hazard to let pull request from forks have access to those tokens, so they don't get passed to builds from forks. We separate the clouds tests explicitly so they can be skipped without breaking the rest of the tests when this happens. Your code should not effect any of the cloud functionality so I'm not worried if those tests didn't run. We can give you direct push access as well if that's more convenient for you. Then the tests will all run.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1761#issuecomment-213575978:231,test,tests,231,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1761#issuecomment-213575978,5,['test'],['tests']
Testability,"@frank-y-liu There may also be a failing test on power in `IntelDeflaterIntegrationTest`. I wasn't sure what condition to use to exempt power from that test was. I can't tell for sure though, if it works for you then I guess it works fine :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1761#issuecomment-213576572:41,test,test,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1761#issuecomment-213576572,2,['test'],['test']
Testability,@gbrandt6 @bhanugandham do we have access to gvcfs that reproduce this problem? just want something real to test a fix with.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6766#issuecomment-689720463:108,test,test,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6766#issuecomment-689720463,1,['test'],['test']
Testability,"@gbrandt6 So now the protocol is that you wait for tests to pass (although it's unlikely this could break them...) and then you can merge with ""squash and merge"". You can edit the commit message in the browser to make sure it is clear. `Fix typo in --tmp-dir argument in GenomicsDB docs` is a pretty good description for this one though :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6785#issuecomment-684939263:51,test,tests,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6785#issuecomment-684939263,1,['test'],['tests']
Testability,"@gbrandt6 The additional logging @ldgauthier is talking about adding would help the user locate the actual site(s) with the reference allele mismatch, but as discussed above this is likely a problem with their data rather than the tool. The user should check that all VCFs are using the same reference -- the fact that several VCFs lack sequence dictionaries make it likely that this is not the case.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6701#issuecomment-663089939:25,log,logging,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6701#issuecomment-663089939,1,['log'],['logging']
Testability,"@gevro @yaottianran. I know this is old, but if you want to test with a recent GATK release that includes the upgraded intel gkl it has hopefully fixed this issue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-993699280:60,test,test,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-993699280,1,['test'],['test']
Testability,"@gevro To amend my previous comment: it was brought to my attention that the docker image snapshot I linked to above does not actually come with the newer GKL release that might fix your issue. Sorry for the miscommunication! We're working on building a test GATK image that does contain the newer GKL release, and once we have that I'll post a link to it here.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-784458143:254,test,test,254,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-784458143,1,['test'],['test']
Testability,"@gokalpcelik This isn't an insane request, but it's probably not going to happen very quickly. . I don't think it's a trivial change to just exclude log4j, we'd need a compatible replacement or you'd end up with crashes in weird places when a transitive dependency tries to log with it. We can (and might) do it, but it's not super high priority at the moment. I think there's internal interest in changing out the logger but at the moment our strategy is to patch to the newest version as they become available. . That said, if you find a way to build a log4j free version without weird issues please let us know :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7626#issuecomment-1005810220:274,log,log,274,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7626#issuecomment-1005810220,2,['log'],"['log', 'logger']"
Testability,@greekkey I would be really interested if the problem had resolved if you ran without that option using 4.2.4.1. We updated the compression library and I'm hoping that it's fixed whatever was causing the problem but I'm not able to reproduce it so it's hard to know. . What OS/hardware are you running on @greekkey? I'm wondering if this is a problem on a specific OSX version or something which we're not testing on.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7614#issuecomment-1005763165:406,test,testing,406,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7614#issuecomment-1005763165,1,['test'],['testing']
Testability,"@gspowley 2 minor comments, I think the test still has funny skipping behavior at the moment, and an exception nitpick that I missed before.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2259#issuecomment-263700208:40,test,test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2259#issuecomment-263700208,1,['test'],['test']
Testability,"@gspowley Can you take a look? This problem started happening with https://github.com/broadinstitute/gatk/commit/dfa9cf1a420490285b7be7917082222a07e2b042. I can pretty reliably move back to the previous commit and it goes away. It always surfaces in the VariantSparkSinkUnitTests, but it seems to be the result of a cumulative effect since AFAICT it only happens when running the full test suite via ""./gradlew clean test"". I tried changing the default values of useJdkInflater and useJdkDeflater to true, and I still get the same problem. Interestingly, disabling all of the tests in IntelInflaterDeflaterIntegrationTest seems to reliably fix it (even with useJdkInflater/Deflater set to false), so I'd start there. If thats the culprit, it might explain why we don't see this in travis since we run the unit tests and integration tests separately there.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-288098956:385,test,test,385,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-288098956,5,['test'],"['test', 'tests']"
Testability,"@gspowley Could you close this, and open a new PR against master?. We've also become concerned that if something in the jvm is unsetting FTZ, turning it on at startup won't be sufficient. We added a protective ""turn FTZ on"" on every call to `jniComputeLikelihoods()`, which at least allows us to produce consistent test results, but we still have no protection outside the PairHMM against FTZ getting disabled.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1584#issuecomment-215242788:315,test,test,315,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1584#issuecomment-215242788,1,['test'],['test']
Testability,"@gspowley Heads up, I'm reverting this for now since it's blocking updates to gatk-protected. We'll bring it back in when we get that issue figured out. . @droazen Tests are passing so I'm just going to merge this one as we talked about earlier.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2319#issuecomment-267709008:164,Test,Tests,164,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2319#issuecomment-267709008,1,['Test'],['Tests']
Testability,@gspowley Looks like integration tests are failing?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-282054550:33,test,tests,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-282054550,1,['test'],['tests']
Testability,"@gspowley Steps to replicate:; 1. Check out the `dr_runnable_haplotypecaller` branch (in this repo -- this would be too painful to reproduce with the version in gatk-protected).; 2. Revert the change in https://github.com/broadinstitute/gatk/pull/1764 in your local copy of the branch.; 3. Run `HaplotypeCallerIntegrationTest`, watch it fail due to a mismatch on a single QUAL field (we've confirmed this is due to FTZ vs. no FTZ).; 4. Rename one of the failing tests with a prefix like `aaa` so that TestNG will run it first, and watch it pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1771#issuecomment-214508475:462,test,tests,462,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1771#issuecomment-214508475,2,"['Test', 'test']","['TestNG', 'tests']"
Testability,"@gspowley Thanks for looking into this. I suppose its possible that we've just gone over some threshold in the normal course of things, but I'm still a bit skeptical. I'm going to do a bit more analysis/testing and see if I can get any more insight.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-288781788:203,test,testing,203,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-288781788,1,['test'],['testing']
Testability,"@gspowley That seems to do it (I also needed to use the GKL snapshot library, otherwise I see the malloc bug more frequently), but I was able to run the whole test suite on both of my laptops as long as I have both fixes. We are propagating that DEBUG log level setting to kryo, which was printing out [tons](https://github.com/EsotericSoftware/kryo/blob/f3700c49cad803f8e1782c07737197e425b1b229/src/com/esotericsoftware/kryo/Kryo.java#L675) of DEBUG output, eventually resulting in the OOM error.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-290990465:159,test,test,159,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-290990465,2,"['log', 'test']","['log', 'test']"
Testability,"@gspowley The first test run seems to still produce the original problem (the tests hang in the same spot). The change may have fixed #2535 , but I'll do a couple more some more test runs and see what other results I get.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-289553520:20,test,test,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2490#issuecomment-289553520,3,['test'],"['test', 'tests']"
Testability,"@gspowley Would it be possible to add an osx build to the gkl test runs? Likewise, we need an osx run on our travis runs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2315#issuecomment-267136515:62,test,test,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2315#issuecomment-267136515,1,['test'],['test']
Testability,@gspowley can you open a pull request with the native code and tests for it?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1492#issuecomment-184981044:63,test,tests,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1492#issuecomment-184981044,1,['test'],['tests']
Testability,@gspowley this works for me - i tested on linux and mac. I do see speedups too!. I think it's good to me merged. Can you enter tickets for the remaining work items and add them as comments here? . mac osx ; master; real 1m51.375s; user 2m39.498s. real 1m51.152s; user 2m38.079s. new gkl; real 1m46.342s; user 2m38.097s. real 1m46.603s; user 2m36.670s. linux (cloud vm); master; JNI 73.7; real 2m35.924s; user 3m37.316s. JNI 74.39; real 2m32.028s; user 3m29.936s. new gkl; JNI 57.67; real 2m20.550s; user 3m27.520s. JNI 53.92241665; real 2m18.047s; user 3m20.288s,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1935#issuecomment-228512721:32,test,tested,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1935#issuecomment-228512721,1,['test'],['tested']
Testability,@gspowley try changing the addons block in the .travis.yml to look like the following:. ```; addons: ; apt:; sources:; - r-packages-precise; - ubuntu-toolchain-r-test; packages:; - r-base; - gcc-4.8; - g++-4.8; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1492#issuecomment-185775275:162,test,test,162,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1492#issuecomment-185775275,1,['test'],['test']
Testability,@gspowley 👍 Looks good to me now. Ready to merge when tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2259#issuecomment-263711533:54,test,tests,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2259#issuecomment-263711533,1,['test'],['tests']
Testability,"@gspowley, it also blows up without initialize PairHMM... I can do another test without that to send you the log. And here it's the result from `sysctl -a | grep machdep.cpu.*features`:. ```; machdep.cpu.features: FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE SSE3 DTES64 MON DSCPL VMX SMX EST TM2 SSSE3 CX16 TPR PDCM SSE4.1 SSE4.2 POPCNT; machdep.cpu.extfeatures: SYSCALL XD EM64T LAHF RDTSCP TSCI; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1985#issuecomment-231398955:75,test,test,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1985#issuecomment-231398955,2,"['log', 'test']","['log', 'test']"
Testability,"@haileypfox This PR has test failures in `FuncotatorIntegrationTest` -- you can inspect these failures in the logs linked in the most recent comment from ""gatk-bot"" above. These will have to be resolved before we can merge this PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7343#issuecomment-881612419:24,test,test,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7343#issuecomment-881612419,2,"['log', 'test']","['logs', 'test']"
Testability,@haileypfox You have a failing test in `FuncotatorIntegrationTest` -- see the test logs in the `gatk-bot` comment above:. https://storage.googleapis.com/hellbender-test-logs/build_reports/master_34997.12/tests/test/index.html; https://storage.googleapis.com/hellbender-test-logs/build_reports/master_34997.2/tests/test/index.html. Can you fix this test failure before I re-review?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7349#issuecomment-882812134:31,test,test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7349#issuecomment-882812134,10,"['log', 'test']","['logs', 'test', 'test-logs', 'tests']"
Testability,"@heliac2000 Thanks for the report - I don't think we've done much testing with gpu-enabled environments yet, but one thing that would be useful is to re-run adding the `--enable-journal` command line argument to GATK. That will produce a file in the current directory with a name of the form ""gatkStreamingProcessJournal-nnnnnnn.txt"". If you post that file here it will help us see a bit more about what's happening.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4696#issuecomment-383909813:66,test,testing,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4696#issuecomment-383909813,1,['test'],['testing']
Testability,@heuermh Thanks for the info! I updated from adam-core_2.10 -> adam-core_2.11 but I didn't realize we needed to change to adam-core2_2.11. I'll open a new patch. Our tests for adam interop are pretty thin so we must have just not hit whatever errors are lurking out there yet.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2264#issuecomment-261066471:166,test,tests,166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2264#issuecomment-261066471,1,['test'],['tests']
Testability,"@hliang I see that many of the tasks are failing and it looks like one of the executors crashed. To find the cause, you can check the error logs of these tasks through the web UI. I suspect increasing executor memory will fix the problem. Heartbeat timeouts usually occur when an executor JVM runs out of memory or requests more memory than the node will allow.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3186#issuecomment-313197140:140,log,logs,140,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3186#issuecomment-313197140,1,['log'],['logs']
Testability,@icemduru ; Can you provide more details on your issue? How many samples do you have? How did you combine them and what are your command lines for this process? ; Can you provide more details on the system that you are running these commands on?. GenotypeGVCFs is not known to have memory leak issues. Our tests indicated that it only needs around 4~6GBs of total memory to genotype 120 whole genome samples (Per contig).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8918#issuecomment-2283618495:306,test,tests,306,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8918#issuecomment-2283618495,1,['test'],['tests']
Testability,"@igordot I have not yet succeeded in reproducing the error with the few hg38 samples I have tested (2) and nothing obvious showed up in various `grep` regexes of our hg38 gnomAD (1). I am starting to think that we actually have solved all the hg38 issues and this is unrelated to my initial guess. If you can share your unfiltered vcf input it would be very helpful, but if that's not possible could you post the contents of your `contamination-table` input? I have a hunch that the small size of the panel is causing `CalculateContamination` to give an unreliable result. For targeted panels we recommend running Mutect2 without CalculateContamination. If you're running from Terra/Firecloud or from the wdl, this means leaving the optional `variants_for_contamination` input empty.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5821#issuecomment-478444912:92,test,tested,92,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5821#issuecomment-478444912,1,['test'],['tested']
Testability,"@ilyasoifer I noticed this method wasn't doing anything, it looks like it should have a return here. . Also, I made the logger static because it's probably expensive to allocate one for every read and you don't need to.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8576:120,log,logger,120,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8576,1,['log'],['logger']
Testability,@ilyasoifer could you please take a look at the two failing CI/tests and see if there is something to be done - or it is a usual/environmental thing? Thanx,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8982#issuecomment-2384672504:63,test,tests,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8982#issuecomment-2384672504,1,['test'],['tests']
Testability,"@ilyasoifer do you have the means to quickly run minimap2? I would recommend simply realigning src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam with minimap2 and making a quick ""are tests consistent with pervious versions"" test with a checked in vcf output. I don't know how to wrangle minimap2 to handle mates correctly however so i don't know if this is easy",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8337#issuecomment-1559878651:99,test,test,99,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8337#issuecomment-1559878651,3,['test'],"['test', 'tests']"
Testability,"@jamesemery - I addressed your comments, but the tests that are failing are due to invalid interval creation within tests that randomly generate targets. I will need the help to the developer of these tests (I think that it is @vruano) to fix the tests without reducing the number of targets generated...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3778#issuecomment-342812355:49,test,tests,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3778#issuecomment-342812355,4,['test'],['tests']
Testability,"@jamesemery - I rebased to solve the conflict and I open an issue regarding the `SimpleIntervalTestFactory` to do not block this work any longer, because this is already a big change in the testing framework. . Because the changes are big and we are working in different timezones, conflicts pop up everyday when another PR is accepted before this if they modify any of the test files (which is often the case). If we continue delaying this, it would never be possible to merge...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-341093236:190,test,testing,190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-341093236,2,['test'],"['test', 'testing']"
Testability,"@jamesemery - I think that the rebase is done. I'd like to have this in as soon as it can be, to avoid the extra-work of rebasing due to new tests or refactoring of them.... Thank you in advance!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-338990541:141,test,tests,141,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-338990541,1,['test'],['tests']
Testability,"@jamesemery - i will also look into whether this file is somehow created by subsetting another during tests. in the meantime, would it be possible to also get these? i'm pretty confident this is the final list:. gsa-hpprojects\GATK\data\Comparisons\Validated\HapMap\3.3\genotypes_r27_nr.b37_fwd.vcf. and the following are in privateTestDir:. overlapTest.bed; PhaseByTransmission/PhaseByTransmission.IntegrationTest.goodFamilies.ped; PhaseByTransmission/PhaseByTransmission.IntegrationTest.TP.vcf; NA12878.HiSeq.WGS.b37_decoy.indel.recalibrated.vcf; yri.trio.gatk.ug.head.vcf; NA12878.HiSeq.WGS.b37_decoy.indel.recalibrated.vcf; Mills_and_1000G_gold_standard.indels.b37.sites.vcf; validationReportComp.vcf; validationReportComp.noGenotypes.vcf",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-366799537:102,test,tests,102,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-366799537,1,['test'],['tests']
Testability,"@jamesemery - sorry to keep bothering you on this, but is there any chance you could upload the files above? I have GATK4 VariantEval passing using all the GATK3 tests, except for the handful of ones depending on these files. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-370491290:162,test,tests,162,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-370491290,1,['test'],['tests']
Testability,"@jamesemery - we should get this merge as soon as possible to avoid conflicts that pop up in every round of comments. Once this is in, I can go to the open PRs to point out the conflicts and the new structure (e.g., change the new tests to extend `GATKBaseTest`). I added a new commit addressing the issues and I will rebase to resolve conflicts again.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-340724214:231,test,tests,231,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-340724214,1,['test'],['tests']
Testability,"@jamesemery . User shared log file and the first few lines of the GVCF file you requested in a zip file here: https://www.dropbox.com/s/p2smhpm5btsf2cq/jiehuang.zip?dl=0,",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6340#issuecomment-568510250:26,log,log,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6340#issuecomment-568510250,1,['log'],['log']
Testability,"@jamesemery : i have run all integration tests, and I think this is a complete list of the remaining files I can hopefully get:. /private/gatk-tools-private/src/test/resources/withSymbolic.b37.vcf; /private/gatk-tools-private/src/test/resources/PhaseByTransmission/PhaseByTransmission.IntegrationTest.TP.vcf ; /private/gatk-tools-private/src/test/resources/yri.trio.gatk_glftrio.intersection.annotated.filtered.chr1.vcf ; /private/gatk-tools-private/src/test/resources/NA12878.HiSeq.WGS.b37_decoy.indel.recalibrated.vcf ; /private/gatk-tools-private/src/test/resources/validationReportEval.noGenotypes.vcf ; /private/gatk-tools-private/src/test/resources/validationReportEval.vcf ; /private/gatk-tools-private/src/test/resources/ac0.vcf ; /humgen/gsa-hpprojects/GATK/data/Comparisons/Validated/HapMap/3.3/genotypes_r27_nr.b37_fwd.vcf; /humgen/gsa-hpprojects/GATK/data/Validation_Data/snpEff2.0.5.AFR.unfiltered.VariantAnnotator.output.vcf. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-366146129:41,test,tests,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-366146129,8,['test'],"['test', 'tests']"
Testability,"@jamesemery @cmnbroad This fixes a personal pet peeve of mine, which is that we're packaging a bunch of test classes as a runtime dependency. It splits out a new test artifact which contains just the classes in utils.test and allows it to be published and consumed separately from the rest of the gatk. This allows us to make testng and minicluster no longer compile dependencies",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677:104,test,test,104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5112#issuecomment-413011677,4,['test'],"['test', 'testng']"
Testability,"@jamesemery @droazen I've updated this branch to ensure all read and write paths to shared state in `GenotypeLikelihoodCalculators` is synchronized. I then wrote a little [test](https://github.com/broadinstitute/gatk/commit/3bb178746b1dd286f55ba77e6939e2104ced98d0) using `AlleleSubsettingUtils` to access `GenotypeLikelihoodCalculators` 10^6 times to see the effect of adding synchronization. R session (times are in millis):; ```; > without_sync = c(10166, 10049, 10306, 10059, 10165); > with_sync = c(10700, 10384, 9923, 10097, 10190); > t.test(without_sync, with_sync, paired=TRUE). 	Paired t-test. data: without_sync and with_sync; t = -0.70447, df = 4, p-value = 0.52; alternative hypothesis: true difference in means is not equal to 0; 95 percent confidence interval:; -542.5421 322.9421; sample estimates:; mean of the differences ; -109.8 ; ```. The p-value is not less than 0.05, so we can't reject the null hypothesis (that the mean times are the same). So adding synchronization doesn't seem to make any difference in this test. BTW, I noticed that `GenotypeLikelihoods` has synchronization, so there is some precedent for thread-safety using this means.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479:172,test,test,172,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5071#issuecomment-426338479,4,['test'],['test']
Testability,@jamesemery Apparently my test doesn't work on travis. Gaaah.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4666#issuecomment-387097386:26,test,test,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4666#issuecomment-387097386,1,['test'],['test']
Testability,"@jamesemery Back to you, at long last. I adopted your suggestion of a proper search that doesn't revisit already-seen vertices and came up with a better way of seeding the ""good"" subgraph that is safe from your STR concern. As far as code is concerned it's a total rewrite — you can pretend the first PR commit doesn't exist. The new criterion for seeding the search is chains with good log odds on both ends and which are incident on a vertex with multiple good out-edges or multiple good in-edges. The rationale is that the adjacency of two bad edges may have good log odds (Suppose a bad edge comes in and two bad edges come out. One is a new error on top of the original error and one is the continuation of the original error) but two have two outgoing edges with good log odds requires an actual real variant. On our M2 validations this essentially no effect on sensitivity and a mild reduction in false positives. I will leave it to you (or to me when I don't have to work like a vampire) to investigate how well it interacts with junction trees. As a first step I wrote a basic unit test for the basic pathology of the old method.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6520#issuecomment-624265441:387,log,log,387,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6520#issuecomment-624265441,4,"['log', 'test']","['log', 'test']"
Testability,"@jamesemery Can we instrument the `HaplotypeCaller` to dump additional info to its log that would help us narrow this down? Such as the number of reads in each region, etc.?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6105#issuecomment-528986200:83,log,log,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6105#issuecomment-528986200,1,['log'],['log']
Testability,"@jamesemery Can you rebase this branch onto latest master to resolve the conflicts? Recommend doing a local squash first given the number of commits here to make it less painful (by ""local squash"" I mean first `rebase -i` onto the hash of the first commit in the `git log` history that's not your own, and then rebase onto `origin/master`).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3803#issuecomment-359036049:268,log,log,268,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3803#issuecomment-359036049,1,['log'],['log']
Testability,"@jamesemery Can you remove the non-functional test, and merge this once tests pass?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3042#issuecomment-453565602:46,test,test,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3042#issuecomment-453565602,2,['test'],"['test', 'tests']"
Testability,@jamesemery Can you take a quick look at this when you get a chance? It speeds up docker builds and might somewhat reduce test times.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7727#issuecomment-1069500093:122,test,test,122,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7727#issuecomment-1069500093,1,['test'],['test']
Testability,@jamesemery Could you also add an integration test with the pipeline above? You'll need to run bash using `ProcessController` or similar,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4167#issuecomment-358108007:46,test,test,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4167#issuecomment-358108007,1,['test'],['test']
Testability,"@jamesemery Could you review this? I think you may appreciate it. It took several tries, but I was finally able to write a stripped-down version of the code that actually slightly outperforms the old version. What I realized after a lot of profiling the old code and various failed rewrites was that cache-friendliness is the critical thing here. It turns out that this can be achieved without too many buffers, without precomputing the log frequencies, and without storing 2D and 3D arrays as flattened 1D arrays.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351:437,log,log,437,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351,1,['log'],['log']
Testability,@jamesemery Have you tried a 5 minute file to test? If it's as big as it looks it should show up.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5607#issuecomment-457753785:46,test,test,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5607#issuecomment-457753785,1,['test'],['test']
Testability,"@jamesemery How close is this to being merged? Once you've addressed all review comments to your satisfaction and have rebased to resolve the conflicts, let me know and I can give final approval after tests are green.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5913#issuecomment-601285399:201,test,tests,201,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5913#issuecomment-601285399,1,['test'],['tests']
Testability,"@jamesemery I added a pretty comprehensive set of tests for various kinds of corrupt BGZF files (as well as a regular GZIP file), and patched the tool to report something sensible in these cases. You can see the new tool output in the `*.out` files included in the branch. Needs another review from you before we can merge.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4239#issuecomment-453686695:50,test,tests,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4239#issuecomment-453686695,1,['test'],['tests']
Testability,"@jamesemery I consolidated the additions to ``GATKVariantContextUtils`` to use the methods in ``AlleleSubsettingUtils`` as much as possible, and also added more tests of pathological case (long alleles in long repeats, etc.) so now back to you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5144#issuecomment-420384916:161,test,tests,161,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5144#issuecomment-420384916,1,['test'],['tests']
Testability,"@jamesemery I fixed a problem with the test where I wasn't marking it as ""Cloud"", when things pass I'll merge.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4778#issuecomment-389904639:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4778#issuecomment-389904639,1,['test'],['test']
Testability,"@jamesemery I just need to fix one test. Will merge by the end of the week, is that acceptable?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6696#issuecomment-676623320:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6696#issuecomment-676623320,1,['test'],['test']
Testability,"@jamesemery I regenerated the file based on master, and see the same shift in QUAL scores. I managed to track this QUAL score shift back to #6401, which makes sense. If you look at the files changed in that PR, there are a number of expected test output files changed with this same QUAL score shift. I guess this particular file just got missed, and since there's enough leeway tests still passed. So I'm going to go ahead and merge. Thanks again for the review!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6626#issuecomment-641431772:242,test,test,242,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6626#issuecomment-641431772,2,['test'],"['test', 'tests']"
Testability,@jamesemery I was unable to test out this fix due to repeatedly encountering a (seemingly) unrelated git lfs error:. ```; Git LFS: (0 of 104 files) 0 B / 1.28 GB ; batch request: Host key verification failed.: exit status 255; batch request: Host key verification failed.: exit status 255; error: failed to fetch some objects from 'https://github.com/broadinstitute/gatk.git/info/lfs'; ```. I'll attempt to test this branch again in January prior to the next GATK release.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6883#issuecomment-733954722:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6883#issuecomment-733954722,2,['test'],['test']
Testability,"@jamesemery I will gladly review. If I understand the code change it seems like there was already basically the right logic to avoid this _but_ the code was neglecting to put the force calling alleles in a representation consistent with the output VCF. And the fix is simply to compute `forcedAlleles = AssemblyBasedCallerUtils.getAllelesConsistentWithGivenAlleles(givenAlleles, vc)` a bit upstream of where we were doing so previously. If I've got that right, this PR gets my :thumbsup:.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1081342841:118,log,logic,118,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1081342841,1,['log'],['logic']
Testability,"@jamesemery I've opened a ticket in hadoop bam.; @droazen Could you re-review this when you get a chance? It's super useful functionality. If we don't trust the fix for sharded files, we could globally disable them for cram/sam instead. I think the problem is not unique to this branch, it's just the first to test the file order or reading sharded cram/sam.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4545#issuecomment-395191688:310,test,test,310,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4545#issuecomment-395191688,1,['test'],['test']
Testability,"@jamesemery It looks like the tests are failing with:. ```; testBaseQualRawAnnotate FAILED; java.lang.AssertionError: expected [50,1,60,1|10,1,20,1] but found [|-1.4,1]; at org.testng.Assert.fail(Assert.java:93); at org.testng.Assert.failNotEquals(Assert.java:512); at org.testng.Assert.assertEqualsImpl(Assert.java:134); at org.testng.Assert.assertEquals(Assert.java:115); at org.testng.Assert.assertEquals(Assert.java:178); at org.broadinstitute.hellbender.tools.walkers.annotator.BaseQualityRankSumTestUnitTest.testBaseQualRawAnnotate(BaseQualityRankSumTestUnitTest.java:97); ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3527#issuecomment-326647631:30,test,tests,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3527#issuecomment-326647631,22,"['Assert', 'assert', 'test']","['Assert', 'AssertionError', 'assertEquals', 'assertEqualsImpl', 'testBaseQualRawAnnotate', 'testng', 'tests']"
Testability,@jamesemery Looks good. I had a few very minor comments. . Could you also add a test that does the same thing but uses a -L interval since you had to do some extra stuff to get that working and it tends to be a bit touchy?; Thank you!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2124#issuecomment-242830993:80,test,test,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2124#issuecomment-242830993,1,['test'],['test']
Testability,@jamesemery Looks like there is a test failure in this PR now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4674#issuecomment-388402050:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4674#issuecomment-388402050,1,['test'],['test']
Testability,"@jamesemery Okay, we'ce got some really good tests for EventGroup clustering _and_ branching now. It's ready for you to take another look.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8492#issuecomment-1716890925:45,test,tests,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8492#issuecomment-1716890925,1,['test'],['tests']
Testability,@jamesemery Some test failures here https://storage.googleapis.com/hellbender-test-logs/build_reports/master_16064.3/tests/test/index.html,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4082#issuecomment-356017217:17,test,test,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4082#issuecomment-356017217,4,['test'],"['test', 'test-logs', 'tests']"
Testability,@jamesemery Still some test failures https://storage.googleapis.com/hellbender-test-logs/build_reports/master_19811.2/tests/test/classes/org.broadinstitute.hellbender.tools.spark.validation.CompareDuplicatesSparkIntegrationTest.html#testOutputFile,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4894#issuecomment-397343622:23,test,test,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4894#issuecomment-397343622,5,['test'],"['test', 'test-logs', 'testOutputFile', 'tests']"
Testability,"@jamesemery The fun begins. No change in output yet, but a non-trivial change in implementation. Instead of making preliminary event groups according to overlap, then merging them according to mutually excluded events, this PR does it all in one step while automatically handling transitivity by treating as a matter of finding connected components of a graph whose vertices are events and whose edges are reasons (overlap and mutex) for events to be in the same event group. All the failures are from WDL tests. I assume those are not related.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8366:506,test,tests,506,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8366,1,['test'],['tests']
Testability,"@jamesemery The test looks good. I am averse to exact match tests and would prefer to just strea the VCF output and check for empty calls. Nonetheless, I understand that there's a tradition of exact match tests in some of our tools. I leave it up to you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1083589321:16,test,test,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7740#issuecomment-1083589321,3,['test'],"['test', 'tests']"
Testability,@jamesemery There appear to be some lingering test failures here after the rebase (mismatches between actual and expected VCF files).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5913#issuecomment-601852368:46,test,test,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5913#issuecomment-601852368,1,['test'],['test']
Testability,"@jamesemery There isn't an explicit test for the fix, because the the results with the fix are identical to the results without the fix. There is a test reading with an SBI index in disq, previously it was just falling back to the guesser though, which produces the same results. . What do you want me to add? A test reading with an sbi file? Hard to prove that it's not falling back to split guessing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6323#issuecomment-566777560:36,test,test,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6323#issuecomment-566777560,3,['test'],['test']
Testability,"@jamesemery This fixes the case you found, hopefully bringing us closer to turning on linked de Bruijn graphs. I will start testing M2. If you test in HC, continue to keep in mind that adaptive pruning is not default. This change will be most important for rare complex graphs and in combination with junction trees but I did see modest improvements to indel sensitivity even with the old assembly.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6520:124,test,testing,124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6520,2,['test'],"['test', 'testing']"
Testability,@jamesemery This is failing with a compiler error:. ```; error: package org.testng.annotations does not exist; import org.testng.annotations.Test; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4212#issuecomment-420053841:76,test,testng,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4212#issuecomment-420053841,3,"['Test', 'test']","['Test', 'testng']"
Testability,"@jamesemery This was the first pass where I reviewed the tests, so there are a bunch of new comments, and also some issues with the founder id integration.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3851#issuecomment-361723540:57,test,tests,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3851#issuecomment-361723540,1,['test'],['tests']
Testability,@jamesemery We have test failures again https://storage.googleapis.com/hellbender-test-logs/build_reports/master_19079.2/tests/test/index.html,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4750#issuecomment-388422469:20,test,test,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4750#issuecomment-388422469,4,['test'],"['test', 'test-logs', 'tests']"
Testability,"@jamesemery What I'm actually trying to do is essentially `GENOTYPE_GIVEN_ALLELES` except that I don't know the ALTs. I realize that may sound silly. What I've ended up doing for now is generate a gVCF, genotype it, and then write a custom tool that consumes VCF and gVCF and inserts hom-ref genotypes based on a) where there is no call in the VCF and b) there is confidence in the hom-ref genotype in the gVCF. My point in logging this issue is mostly that `EMIT_ALL_SITES` is pretty misleading as it stands. I think it would be good, at a minimum, to update the documentation for that option to make it very clear that it does not in fact ""emit all sites"" but instead ""emits more sites, but still a subset of all sites in the region being called"".",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6059#issuecomment-530535087:424,log,logging,424,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6059#issuecomment-530535087,1,['log'],['logging']
Testability,"@jamesemery and @droazen thank you for reviewing. @jamesemery I have enabled `GenomicsDBImportIntegrationTest.testGenomicsDBAlleleSpecificAnnotations()` and this test is passing. Is anything else required?. @droazen I incremented the GenomicsDB release that incorporates a fix for resizing LUTs when dealing with spanning deletions - this was a single line change in GenomicsDB that should fall under the umbrella of enabling allele-specific annotation support [3707](https://github.com/broadinstitute/gatk/issues/3707). This updated jar has been uploaded, but isn't available on Maven yet (it should be within the next hour). I agree that additional tests should be added for the bugs that this PR addresses. I'll plan on adding tests for the two high priority fixes ([4160](https://github.com/broadinstitute/gatk/issues/4160) and [3736](https://github.com/broadinstitute/gatk/issues/3736)) this afternoon.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4261#issuecomment-360881092:110,test,testGenomicsDBAlleleSpecificAnnotations,110,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4261#issuecomment-360881092,4,['test'],"['test', 'testGenomicsDBAlleleSpecificAnnotations', 'tests']"
Testability,@jamesemery are these test failures expected/known? They seem unrelated to this PR.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8347#issuecomment-1609714705:22,test,test,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8347#issuecomment-1609714705,1,['test'],['test']
Testability,"@jamesemery back to you -- in the _other_ PR, which was an accident. While you take another look I think I will work on a unit test for the new branching code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1714186038:127,test,test,127,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1714186038,1,['test'],['test']
Testability,@jamesemery feel free to push the test to the branch. I’m not going to get to it this week.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7125#issuecomment-793033943:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7125#issuecomment-793033943,1,['test'],['test']
Testability,"@jamesemery has completed the work of updating the tool to support the newer Gencode, and is currently testing a new datasource release. Once that's done, we plan to do a release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8296#issuecomment-1653870847:103,test,testing,103,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8296#issuecomment-1653870847,1,['test'],['testing']
Testability,"@jamesemery in order to get the tests to pass I had to regenerate one of the expected output vcf's for a GenotypGvcfs integration test, which makes sense because I'm changing the way we annotate variant id's. Can I just get a quick thumbs up if you are comfortable with this additional change before I merge, assuming tests now pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6626#issuecomment-639121904:32,test,tests,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6626#issuecomment-639121904,3,['test'],"['test', 'tests']"
Testability,"@jamesemery requests test files that show what a possible de novo looks like and I have agreed to prep some data towards this. Here is the data bundle that includes a GATK3.7 result.; [VariantAnnotator_PossibleDeNovo_sooheelee.zip](https://github.com/broadinstitute/gatk/files/2852379/VariantAnnotator_PossibleDeNovo_sooheelee.zip). The command I used with GATK3.7:; ```; java -jar $GATK -T VariantAnnotator \; -R ref/ref.fasta \; -V precomputed/trioGGVCF.vcf.gz \; -o trioVA.denovo.vcf.gz \; -A PossibleDeNovo ; -ped trio.ped; ```. Here are the three records that then show either `loConfDeNovo` or `hiConfDeNovo` annotations as a result:; ![screenshot 2019-02-11 13 10 16](https://user-images.githubusercontent.com/11543866/52583757-64f17680-2dfe-11e9-8c8e-11a9751f881c.png). For all of the records that change, see https://gatkforums.broadinstitute.org/gatk/discussion/comment/56268#Comment_56268.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4987#issuecomment-462433251:21,test,test,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4987#issuecomment-462433251,1,['test'],['test']
Testability,"@jamesemery sorry to bug on this topic, but I'm hoping to make a push early this year to fully migrate my lab off GATK3 . I looked more closely at the specific annotations we need to migrate. I decided that I will implement our walker, 'DiscvrVariantAnnotator', which is basically a light wrapper around VariantAnnotation. This will make it easier to spike in custom annotations. In that walker, I will override makeVariantAnnotations(). I will make a new marker interface for EngineAwareAnnotation, and test that on all the Annotation classes, and use this to inject FeatureManager. So no core GATK changes needed. I did find one thing I'd like to propose. You probably know PedigreeAnnotation is special-cased in GATK. Annotations that use it have automatic argument validation and have the SampleDB injected. Currently, PedigreeAnnotation is a subclass of InfoFieldAnnotation, so isnt available to GenotypeAnnotations. There doesnt appear to be a solid reason why. I tried to fix that and my best idea is the proposal here: #7041 . The core idea is to convert InfoFieldAnnotation and GenotypeAnnotation to interfaces. This is generally a trivial switch in existing code. With that, it becomes possible for classes that currently extend PedigreeAnnotation (which I switched to no longer extend InfoFieldAnnotation) to simply PedigreeAnnotation and implement InfoFieldAnnotation. This makes it possible for future classes to extend PedigreeAnnotation and implement GenotypeAnnotation.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6930#issuecomment-760424063:504,test,test,504,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6930#issuecomment-760424063,1,['test'],['test']
Testability,"@jamesemery thanks for the review. I don't think indels of various lengths should cause any problems, because the reference alleles are required to match in addition to the alt alleles. I added some tests to confirm this and things appear to be behaving correctly. . back to you!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6626#issuecomment-639011917:199,test,tests,199,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6626#issuecomment-639011917,1,['test'],['tests']
Testability,"@jamesemery the only way I could get genomicsDB tests to pass was to upgrade to the latest version and use the protobuf implementation for the vidmap by merging in #4993. That PR is blocked because I asked for allele-specific features and it's looking like no one is going to do that anytime soon. But if you'd rather merge that first and then rebase this to keep things tidy, I understand.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5237#issuecomment-425450125:48,test,tests,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5237#issuecomment-425450125,1,['test'],['tests']
Testability,"@jamesemery you can see from my log above I am using `4.2.0.0`, and a test case (hg19 SAM file) is attached above if you're interested in looking. I did play around with the `--mapping-quality-threshold-for-genotyping` option but it didn't seem to have an effect, but I am not 100% certain what I exactly did.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7124#issuecomment-794571777:32,log,log,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7124#issuecomment-794571777,2,"['log', 'test']","['log', 'test']"
Testability,"@jamesemery, thanks for kicking off tests. the compile failure is probably due to a bad merge. I pushed a fix - would you be able to restart tests?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8871#issuecomment-2189263528:36,test,tests,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8871#issuecomment-2189263528,2,['test'],['tests']
Testability,"@jamesemery, the bug report, i.e. test data from the researcher, is at `/humgen/gsa-scr1/pub/incoming/Exception_in_SplitNCigarReads.tgz`, as stated above.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5230#issuecomment-426410709:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5230#issuecomment-426410709,1,['test'],['test']
Testability,"@jamesemery, yes, I've opened #5248 with the isolated fix (and unit test). I'll leave this open for the `CollectAllelicCountsSpark` changes, which I'll update when the other changes it depends on are merged.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5222#issuecomment-426317398:68,test,test,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5222#issuecomment-426317398,1,['test'],['test']
Testability,"@jamesemery: thank you. however, I am probably missing something obvious here. i tried to access this using 'gsutil cp'; however, i get an AccessDeniedException: bbimber@gmail.com does not have storage.objects.list access to variant-eval-test-data. Should I, and/or is there another way to access this?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-363220456:238,test,test-data,238,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-363220456,1,['test'],['test-data']
Testability,@jason-weirather I see the error in the config file - this is definitely a bug in the data source release. There will need to be another data sources release to fix this and another data sources bug. I expect that this will be released by end of week. I will run through some additional tests on hg38 data to see if I can duplicate the null pointer exception.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4521#issuecomment-372345798:287,test,tests,287,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4521#issuecomment-372345798,1,['test'],['tests']
Testability,"@jason-weirather OK, I found the problem. It was _another_ issue with the data sources. I've fixed it in my local copy - we'll have to release another version tomorrow. I have also made a few logging upgrades so you'll get more information about errors. I'm opening the PR for this now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4521#issuecomment-375469404:192,log,logging,192,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4521#issuecomment-375469404,1,['log'],['logging']
Testability,"@jason-weirather There is a new set of data sources available in the data sources area (v1.1). I still haven't tested very thoroughly, but it should have all required files for hg38. I'm planning to test this further later this week / early next week.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4521#issuecomment-375059321:111,test,tested,111,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4521#issuecomment-375059321,2,['test'],"['test', 'tested']"
Testability,"@jean-philippe-martin , my thought was that we'd push RefAPISource down as far as it was needed (no calls to RefAPISource.getInstance()). It's a style question (pass down the instance of the class or have a Singleton and .getInstance(). Since we're going to have two or three legitimate classes behind RefAPISource, I think it's good to be explicit that it's not just one thing. I'd favor Singleton and .getInstance() if the only extra class was a mock for testing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/804#issuecomment-130901998:448,mock,mock,448,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/804#issuecomment-130901998,2,"['mock', 'test']","['mock', 'testing']"
Testability,"@jean-philippe-martin Agree that we probably shouldn't refactor `IntegrationTest` as part of this PR, but it looks like some other tests are failing now. The PR build failures are [here](https://travis-ci.com/broadinstitute/gatk/builds/97887212). There are some CRAN mirror problems that are affecting all builds at the moment, but there are also some failures that are fallout from the `IntegrationTest` changes. See [this](https://travis-ci.com/broadinstitute/gatk/jobs/171535202). The previous (`XReadLines`) code was gzip aware, but the new code is not, which is causing the test failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889:131,test,tests,131,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-456645889,2,['test'],"['test', 'tests']"
Testability,@jean-philippe-martin Any thoughts on the cause of the failure to load class `org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos` in travis? Do tests pass for you if you run them locally using `./gradlew test`?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232406786:160,test,tests,160,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232406786,2,['test'],"['test', 'tests']"
Testability,@jean-philippe-martin Are your jars properly set up? I'm seeing the Travis build fail the following way:. ```; ...; Gradle suite > Gradle test > org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSourceUnitTest.testReadFromFileAndHDFS FAILED; org.apache.hadoop.ipc.RemoteException(java.lang.NoClassDefFoundError): Could not initialize class org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos; at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol.getDescriptor(ClientNamenodeProtocolProtos.java); at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.getDescriptorForType(ClientNamenodeProtocolProtos.java); at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:598); ...; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232254552:138,test,test,138,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232254552,2,['test'],"['test', 'testReadFromFileAndHDFS']"
Testability,@jean-philippe-martin Could you please rebase this onto the latest master? This branch needs a git-lfs-related change in order to pass tests. Thanks!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3070#issuecomment-331986909:135,test,tests,135,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3070#issuecomment-331986909,1,['test'],['tests']
Testability,"@jean-philippe-martin I had assumed that there were already CRAM tests in ReadUtilsUnitTest for the old createSAMWriter method, but there aren't (there are integration tests that exercise the cram code path through PrintReadsIntegrationTest.) In general you have to just know which reference goes with which cram. The canonical file we use is print_reads.cram/print_reads.fasta (in the tools test folder). You should probably copy them into the ReadUtils test folder to use it in those tests. If you do,you'll have to also copy print_reads.fasta.fai, or you'll get misleading CRAM errors. Also note that you won't be able to use iterator comparison when comparing an Iterator<CRAMRecord> with Iterator<BAMRecord>.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332212832:65,test,tests,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332212832,5,['test'],"['test', 'tests']"
Testability,"@jean-philippe-martin I like your counter proposal in general for testing path integration. I think writing to GCS over NIO is an important enough feature that we should have at least 1 test in gatk that actually writes to a real GCS bucket in case there's ever an issue specifically with GCS (authentication issues are one potential problem I can imagine). . It seems like we should be able to design in a way that avoids collisions. What does `Files.createTempFile()` do with gcs? My guess is that it probably doesn't do the right thing, but maybe we could fix it so it would? Or use some sort of scheme with random UUID's like the methods in BucketUtils that we have already.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332235140:66,test,testing,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332235140,2,['test'],"['test', 'testing']"
Testability,@jean-philippe-martin I think this might be a slightly better approach then merging the cloud tests into the main tests. This just adds another build to the matrix so we have 1 for mandatory cloud tests and 1 for todo cloud tests. That way we don't dramatically increase the build time by mashing the cloud tests into the main ones.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/823:94,test,tests,94,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/823,5,['test'],['tests']
Testability,@jean-philippe-martin I think this seems good now. There were some merge conflicts so I resolved those. Hopefully tests will pass on the new version and we can merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3921#issuecomment-353471063:114,test,tests,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3921#issuecomment-353471063,1,['test'],['tests']
Testability,"@jean-philippe-martin I've implemented an initial patch for this issue here: https://github.com/droazen/google-cloud-java/tree/dr_retry_CloudStorageReadChannel_fetchSize. Since we still don't have our Google CLA issues worked out, I'm unable to PR it directly against `google-cloud-java`, so you'll have to do that part. We'll test it out on our end and see if the 503s are finally conquered once and for all!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3253#issuecomment-314566670:327,test,test,327,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3253#issuecomment-314566670,1,['test'],['test']
Testability,"@jean-philippe-martin In our initial tests with the latest gatk, we're still getting errors like this at a rate of ~2%:. ```; com.google.cloud.storage.StorageException: 503 Service Unavailable; java.lang.IllegalArgumentException: A project ID is required for this service but could not be determined from the builder or the environment. Please set a project ID using the builder.; com.google.cloud.storage.StorageException: 503 Service Unavailable; com.google.cloud.storage.StorageException: 503 Service Unavailable; java.lang.RuntimeException: java.util.concurrent.ExecutionException: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; com.google.cloud.storage.StorageException: 503 Service Unavailable; com.google.cloud.storage.StorageException: 503 Service Unavailable; com.google.cloud.storage.StorageException: 503 Service Unavailable; com.google.cloud.storage.StorageException: 503 Service Unavailable; com.google.cloud.storage.StorageException: 503 Service Unavailable; java.lang.RuntimeException: java.util.concurrent.ExecutionException: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Connection reset; htsjdk.tribble.TribbleException$MalformedFeatureFile: Unable to parse header with error: Remote host closed connection during handshake, for input source:; ```. Now, I know that you put in an explicit retry for 503's, so I'm wondering what could be going on. I've asked the person running the tests to check that they're using an up-to-date GATK jar, but I'm wondering if we're setting all the right retry options on the GATK side. Eg., your PR https://github.com/GoogleCloudPlatform/google-cloud-java/pull/2083 says ""but only when OptionMaxChannelReopens is set"" -- are we setting this properly? Any other thoughts on things we could try?. Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2749#issuecomment-306944607:37,test,tests,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2749#issuecomment-306944607,2,['test'],['tests']
Testability,@jean-philippe-martin It looks like `ReferenceDataSourceUnitTest` is what's covering the `engine.ReferenceFileSource` functionality. It should be easy to adapt one of those tests to run in jmfs.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3921#issuecomment-349752680:173,test,tests,173,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3921#issuecomment-349752680,1,['test'],['tests']
Testability,"@jean-philippe-martin It looks like it works fine on the cloud. I provided the `HELLBENDER_TEST_APIKEY`, and then removed the `cloud` group - from being excluded in `test` - from within `build.gradle` to look like this:. ```; test {; // enable TestNG support (default is JUnit); useTestNG{; excludeGroups 'bucket'; }; ...; ```. And then ran the following integration test, which finished successfully:. ```; $ gradle test -Dtest.single=BaseRecalibratorDataflowIntegrationTest --stacktrace; ...; Runtime.totalMemory()=1541406720. BUILD SUCCESSFUL. Total time: 32.277 secs. This build could be faster, please consider using the Gradle Daemon: http://gradle.org/docs/2.4/userguide/gradle_daemon.html; $; ```. How are you getting the error to show up?. Thanks,; Paul",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/580#issuecomment-113953068:166,test,test,166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/580#issuecomment-113953068,5,"['Test', 'test']","['TestNG', 'test']"
Testability,"@jean-philippe-martin It's interesting, though, that out of the two implementations only sharded failed with an out-of-memory error on 256 GB (in my tests, at least). I think it's premature to conclude that broadcast is inherently the more memory-hungry of the two, though it may well be the case -- more testing is needed. I agree that seeing how memory usage scales as we increase the bam size will be crucial, as we're already over-provisioning memory by a large amount on these smaller files.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/995#issuecomment-157865508:149,test,tests,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/995#issuecomment-157865508,2,['test'],"['testing', 'tests']"
Testability,@jean-philippe-martin Looks good. I think we should move that example test file into our wiki and out of the codebase. Needs a rebase as well but I think that should be minimal. Feel free to merge once it's rebased and the `TestMath` is moved.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/878#issuecomment-141123523:70,test,test,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/878#issuecomment-141123523,2,"['Test', 'test']","['TestMath', 'test']"
Testability,"@jean-philippe-martin Looks good. It seems to be conflicted now, but assuming that those are trivial changes feel free to merge when squashed and tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/556#issuecomment-111554955:146,test,tests,146,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/556#issuecomment-111554955,1,['test'],['tests']
Testability,"@jean-philippe-martin Ok, ping me once tests are passing and I'll finish the review.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232410706:39,test,tests,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232410706,1,['test'],['tests']
Testability,"@jean-philippe-martin So I ran the following specific test and it built successfully:. ```; $ gradle -Dtest.single=BaseRecalibratorDataflowIntegration test; ...lot's of output... Runtime.totalMemory()=1484259328. BUILD SUCCESSFUL. Total time: 27.859 secs. This build could be faster, please consider using the Gradle Daemon: http://gradle.org/docs/2.4/userguide/gradle_daemon.html; $; ```. Below is by running one of the local tests directly - thank you for the directions to the Readme as I was launching it previously differently compared to the recommended way:. ```; $ build/install/hellbender/bin/hellbender BaseRecalibratorDataflow -R src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.fasta -I src/test/resources/org/broadinstitute/hellbender/tools/BQSR/originalQuals.1kg.chr1.1-1K.1RG.dictFix.bam --secret client-secrets.json -OQ -knownSites src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf --RECAL_TABLE_FILE walktest.tmp -sortAllCols; [Tue Jun 02 03:22:33 EDT 2015] org.broadinstitute.hellbender.dev.tools.walkers.bqsr.BaseRecalibratorDataflow --knownSites /home/pgrosu/me/gg_hellbender_broad_institute/hellbender/src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf --RECAL_TABLE_FILE walktest.tmp --sort_by_all_columns true --input src/test/resources/org/broadinstitute/hellbender/tools/BQSR/originalQuals.1kg.chr1.1-1K.1RG.dictFix.bam --reference src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.fasta --useOriginalQualities true --client_secret client-secrets.json --run_without_dbsnp_potentially_ruining_quality false --solid_recal_mode SET_Q_ZERO --solid_nocall_strategy THROW_EXCEPTION --mismatches_context_size 2 --indels_context_size 3 --maximum_cycle_value 500 --mismatches_default_quality -1 --insertions_default_quality 45 --deletions_default_quality 45 --low_quality_tail 2 --quantizing_lev",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107794672:54,test,test,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107794672,6,['test'],"['test', 'tests']"
Testability,"@jean-philippe-martin Sorry, I originally typed ""you can't compare `Iterator<CRAMRecord>` with `Iterator<SAMRecord>`"" , but I didn't quote it, so it displays as ""you can't compare Iterator with Iterator"". Anyway, it looks like you're not doing that. Thanks for adding the CRAM tests. Rather than adding separate data providers and methods for them though, can you just change the existing providers and methods to have an output extension and a reference (null is OK), and then thread those through the test code. I made a branch of your branch with a commit [here](https://github.com/broadinstitute/gatk/commit/5e52fca813e57065713852d12f80a7599fcbc3ce) to make sure that would work - it eliminates a lot of redundant code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332381114:277,test,tests,277,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332381114,2,['test'],"['test', 'tests']"
Testability,"@jean-philippe-martin Tests fail in my branch, but they all look to be legitimate failures, missing environment variables and such. https://storage.googleapis.com/hellbender/test/build_reports/5237.2/tests/index.html",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1662#issuecomment-205463141:22,Test,Tests,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1662#issuecomment-205463141,3,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"@jean-philippe-martin Thank you for putting this together, but performing authentication and reading the first byte might be too small a test for running on the Cloud. Could you run a profile test using `gcloud-java-nio` with 100 GB, 500 GB, 1 TB, 10 TB of data and process it?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2013#issuecomment-233417619:137,test,test,137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2013#issuecomment-233417619,2,['test'],['test']
Testability,"@jean-philippe-martin Thanks for adding the additional test, but by ""integration test"", I meant something that exercises an actual tool (which is why I mentioned SelectVariants) with a non-default provider, not another unit test that uses GCS. I suggested SelectVariants since I thought it would be easy:. > all the previous comments have been addressed with the exception of adding a SelectVariants integration test. It should be pretty easy to clone an existing case and change it use a non-default nio provider. I think this last test is redundant with the one you already added. My apologies if that was confusing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135:55,test,test,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5378#issuecomment-455668135,5,['test'],['test']
Testability,"@jean-philippe-martin Travis runs the cloud tests using a service account on a non gcs machine. (at least I assume it's not a gcs vm, I think they use amazon cloud although that could have changed...) All we do to log in is:. ```; gcloud config set project broad-dsde-dev;; gcloud auth activate-service-account --key-file servicekey.json; ```. @kcibul Where you connecting from the broad network? I've had problems connecting to gcs from home because of IP restrictions on the broad projects. Maybe your gsutil has some configuration setup to do tunneling but gatk doesn't? Sort of a long shot since I would expect both to not work if either doesn't.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2425#issuecomment-282406671:44,test,tests,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2425#issuecomment-282406671,2,"['log', 'test']","['log', 'tests']"
Testability,@jean-philippe-martin We are testing this internally now to see if it resolves our GCS connection issues -- fingers crossed!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3044#issuecomment-306867623:29,test,testing,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3044#issuecomment-306867623,1,['test'],['testing']
Testability,"@jean-philippe-martin When I build a fatJar manually, and then run just using that, it seem to throw an exception :(. ```; $ gradle fatJar; $ java -jar build/libs/hellbender-all-GATK.4.alpha-380-g9f167ee-SNAPSHOT.jar BaseRecalibratorDataflow -R src/test/resources/org/broadinstitute/hellbender/tools/BQSR/human_b36_both.chr1_1k.fasta -I src/test/resources/org/broadinstitute/hellbender/tools/BQSR/originalQuals.1kg.chr1.1-1K.1RG.dictFix.bam --secret client-secrets.json -OQ -knownSites src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf --RECAL_TABLE_FILE walktest.tmp -sortAllCols; ...; java.lang.RuntimeException: java.lang.NoSuchMethodError: com.google.common.base.Stopwatch.createStarted()Lcom/google/common/base/Stopwatch;; at com.google.cloud.dataflow.sdk.Pipeline.run(Pipeline.java:155); at org.broadinstitute.hellbender.engine.dataflow.DataflowCommandLineProgram.runPipeline(DataflowCommandLineProgram.java:135); at org.broadinstitute.hellbender.engine.dataflow.DataflowCommandLineProgram.doWork(DataflowCommandLineProgram.java:101); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:97); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:150); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:71); at org.broadinstitute.hellbender.Main.main(Main.java:86); Caused by: java.lang.NoSuchMethodError: com.google.common.base.Stopwatch.createStarted()Lcom/google/common/base/Stopwatch;; at org.broadinstitute.hellbender.dev.pipelines.bqsr.BaseRecalibratorDataflowUtils$4.startBundle(BaseRecalibratorDataflowUtils.java:223); $; ```. ~p. ```; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/580#issuecomment-115040107:249,test,test,249,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/580#issuecomment-115040107,3,['test'],['test']
Testability,@jean-philippe-martin Where are you seeing that test failure? I'm seeing the travis failures as . ```; htsjdk.samtools.SAMException: Exception when processing alignment for BAM index i 1/2 76b aligned read.; 	at htsjdk.samtools.BAMFileWriter.writeAlignment(BAMFileWriter.java:142); 	at htsjdk.samtools.SAMFileWriterImpl.addAlignment(SAMFileWriterImpl.java:201); 	at htsjdk.samtools.AsyncSAMFileWriter.synchronouslyWrite(AsyncSAMFileWriter.java:36); 	at htsjdk.samtools.AsyncSAMFileWriter.synchronouslyWrite(AsyncSAMFileWriter.java:16); 	at htsjdk.samtools.util.AbstractAsyncWriter$WriterRunnable.run(AbstractAsyncWriter.java:124); 	at java.lang.Thread.run(Thread.java:748); Caused by: htsjdk.samtools.SAMException: Exception creating BAM index for record i 1/2 76b aligned read.; 	at htsjdk.samtools.BAMIndexer.processAlignment(BAMIndexer.java:119); 	at htsjdk.samtools.BAMFileWriter.writeAlignment(BAMFileWriter.java:139); 	... 5 more; Caused by: htsjdk.samtools.SAMException: IOException in BinaryBAMIndexWriter reference 0; 	at htsjdk.samtools.BinaryBAMIndexWriter.writeReference(BinaryBAMIndexWriter.java:151); 	at htsjdk.samtools.BAMIndexer.advanceToReference(BAMIndexer.java:138); 	at htsjdk.samtools.BAMIndexer.processAlignment(BAMIndexer.java:115); 	... 6 more; Caused by: java.nio.channels.ClosedByInterruptException; 	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202); 	at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:216); 	at java.nio.channels.Channels.writeFullyImpl(Channels.java:78); 	at java.nio.channels.Channels.writeFully(Channels.java:101); 	at java.nio.channels.Channels.access$000(Channels.java:61); 	at java.nio.channels.Channels$1.write(Channels.java:174); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at htsjdk.samtools.BinaryBAMIndexWriter.writeReference(BinaryBAMIndexWriter.java:149); 	... 8 more; ```. One of the ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-329967977:48,test,test,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-329967977,1,['test'],['test']
Testability,"@jean-philippe-martin Yeah, I'm seeing that. I suspect it's because we aren't passing the environment variables correctly to the docker tests so it's exploding with an unhelpful error during test initialization.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3159#issuecomment-314237740:136,test,tests,136,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3159#issuecomment-314237740,2,['test'],"['test', 'tests']"
Testability,@jean-philippe-martin You should have the ability to manually trigger builds on jenkins if you sign in as well. That would be an easy way to test if you don't want to wait for the nightly to run.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2517#issuecomment-292757760:141,test,test,141,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2517#issuecomment-292757760,1,['test'],['test']
Testability,"@jean-philippe-martin You're going to have to rebase this branch onto the latest master in order to pass tests, due to a change @lbergelson made in master.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3044#issuecomment-306597002:105,test,tests,105,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3044#issuecomment-306597002,1,['test'],['tests']
Testability,"@jean-philippe-martin Yup, reading hundreds of different files in the same tool. We're trying to optimize the buffer size for that case, that's what we're looking at in that other thread you were commenting on. It seems like we may have some memory leak somewhere else, you seem to need much more memory than we would expect if everything is working as expected. . This branch should fix the thread leak we were seeing. 👍 Merge when tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2643#issuecomment-299038867:433,test,tests,433,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2643#issuecomment-299038867,1,['test'],['tests']
Testability,"@jean-philippe-martin has added support for requester pays to gcloud. ; See https://github.com/GoogleCloudPlatform/google-cloud-java/pull/3406 . I've set up a new fork of the project at https://github.com/broadinstitute/google-cloud-java. I have a branch https://github.com/broadinstitute/google-cloud-java/tree/lb_update_pom_to_publish_to_orgbroad which I believe should make the changes necessary to run on dataproc and avoid https://github.com/GoogleCloudPlatform/google-cloud-java/issues/2453. However, if you rollback the dependencies the project no longer compiles. You can compile the nio-subproject, but the parent project can no longer build against the old dependencies. That makes me very nervous because it seems likely that we will encounter runtime errors if we substitute them. . JP created a small test case to reproduce the error and it seems like the dataproc team is looking at it. Hopefully they can resolve the issue and we can switch to the base library instead of needing to publish an additional sketchy version of it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4828#issuecomment-404322757:814,test,test,814,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4828#issuecomment-404322757,1,['test'],['test']
Testability,"@jean-philippe-martin reported a null pointer running the following. ```; BaseRecalibrator -I src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.bam -R hs37d5.fa --RECAL_TABLE_FILE output.table -knownSites src/test/resources/empty.vcf; ```. or . ```; BaseRecalibrator -I src/test/resources/org/broadinstitute/hellbender/tools/BQSR/HiSeq.1mb.1RG.2k_lines.bam -R hs37d5.fa --RECAL_TABLE_FILE output.table -knownSites src/test/resources/Homo_sapiens_assembly19.dbsnp135.chr1_1M.exome_intervals.vcf; ```. > Exception in thread ""main"" java.lang.NullPointerException; > at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.getSubsequenceAt(CachingIndexedFastaSequenceFile.java:286); > (...)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/355:98,test,test,98,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/355,4,['test'],['test']
Testability,@jean-philippe-martin since you have push access to this repo you should be able to force travis to rerun a branch if you're logged in,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1662#issuecomment-207072471:125,log,logged,125,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1662#issuecomment-207072471,1,['log'],['logged']
Testability,@jean-philippe-martin thanks for getting the nio fix and testing on dataproc!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2220#issuecomment-259089650:57,test,testing,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2220#issuecomment-259089650,1,['test'],['testing']
Testability,"@jean-philippe-martin, this change changes `testBQSRLocal` to be truly local, so that it reads the reference from the local filesystem (which was added in https://github.com/broadinstitute/hellbender/pull/827). So, for that test no API key is needed. . The `testBQSRRefCloud` test still loads the reference from the cloud, so we're still testing that case too.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/862#issuecomment-136760832:44,test,testBQSRLocal,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/862#issuecomment-136760832,5,['test'],"['test', 'testBQSRLocal', 'testBQSRRefCloud', 'testing']"
Testability,"@jjfarrell @cmnbroad I tracked the problem down to htsjdk, see https://github.com/samtools/htsjdk/pull/1255. What seems to be happening is that `SeekableStream#available()` is returning a negative value due to int overflow, which `ReadableByteChannelImpl` is relying on to fill its byte buffer (from `AbstractIndexedFastaSequenceFile#getSubsequenceAt`). When it gets a negative value it returns early, without filling the buffer. The end result is that the reference is not read correctly, hence the MD5 mismatch errors. The reason we haven't seen this before is that we've only tested on CRAMs with FASTA files that are less than 2GB (ones that don't cover the whole genome, or ones that are gzipped). When the file is less than 2GB there's no int overflow, so we don't see the error.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-452676624:579,test,tested,579,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-452676624,1,['test'],['tested']
Testability,"@jjfarrell If possible, could you pull from the latest master branch of GATK and test the updated SV pipeline on your data? Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4458#issuecomment-370449193:81,test,test,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4458#issuecomment-370449193,1,['test'],['test']
Testability,"@jjfarrell Yes, the fix was included in 4.0.0.0, if you're still encountering the problem then the fix must be incomplete. Would it be possible to provide a test case that triggers the bug in 4.0.0.0?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3845#issuecomment-358446091:157,test,test,157,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3845#issuecomment-358446091,1,['test'],['test']
Testability,"@jjfarrell and @mlathara: thanks for running these tests and sorry I havent been able to do anything yet with our data. I'm under some grant deadlines until into Oct, but I do hope to add to this. A couple comments:. 1) that broadly matches my experience. 2) My sense is that we were caught between and rock and a hard place with GenomicsDb and GenotypeGVCFs. Our workflow until this summer involved creating a workspace (running per-contig), which involved importing >1500 animals at first. This would execute OK when using a reasonable --batch-size on GenomicsDbImport. However, when we had large workspaces that were imported in lots of batches, GenotypeGVCFs (which we execute scattered, where each job works on a small interval) tended to perform badly and was a bottleneck (i.e. would effectively stall). Therefore we began to --consolidate the workspaces using GenomicsDBImport during the append process. Initially --consolidate worked; however, as @jjfarrell noted, that's memory intensive and once our workspace was a certain size, this basically died again. Therefore we even worked with @nalinigans to their the standalone GenomicsDB consolidate tool. This was a viable way to consolidate the workspaces and we successfully aggregated and consolidated all our data (which took a while). However, these massive, consolidated workspaces seem to choke GenotypeGVCFs. Therefore this process is still basically dead. 3) As I noted above, I'm currently giving up on trying to maintain permanent data in genomicsDB. There's so many advantages to not doing so, and letting the gVCFs exist as the permanent store. Notably, there are many reasons we would want/need to remake a gVCF (like the introduction of reblocking). Whenever any one of the source gVCFs changes, the workspace is basically worthless anyway (which is a massive waste of computation time). We've had great success running each GenotypeGVCFs scattered, where each job runs GenomicsDbImport on-the-fly, to make a transient workspace",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7968#issuecomment-1256246852:51,test,tests,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7968#issuecomment-1256246852,1,['test'],['tests']
Testability,"@jkobject Actually, we just noticed that your error is triggered by the file `gs://fc-secure-bd7b8bc9-f665-4269-997e-5a402088a369/5c2db926-3b1c-479c-9ed3-a99ce518de91/omics_mutect2/60955825-7723-4bc9-8202-bdd9975bb5c0/call-mutect2/Mutect2/7d737efc-c8be-4a6d-8803-4f786129521a/call-SplitIntervals/glob-0fc990c5ca95eebc97c4c204e3e303e1/0000-scattered.interval_list`, not the bam. Could you attempt the `gsutil` test on that file instead, and let us know what happens? Eg.,. ```; gsutil -u broad-firecloud-ccle cp gs://fc-secure-bd7b8bc9-f665-4269-997e-5a402088a369/5c2db926-3b1c-479c-9ed3-a99ce518de91/omics_mutect2/60955825-7723-4bc9-8202-bdd9975bb5c0/call-mutect2/Mutect2/7d737efc-c8be-4a6d-8803-4f786129521a/call-SplitIntervals/glob-0fc990c5ca95eebc97c4c204e3e303e1/0000-scattered.interval_list .; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064482965:409,test,test,409,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064482965,1,['test'],['test']
Testability,"@jkobject After further testing we think the issue might be more specific: the error seems to occur only when checking for the existence of non-existent files in non-requester-pays buckets when a requester-pays project is specified. In your case, it is checking for the existence of an index for your `interval_list` file and failing, since `interval_list` files don't have indices. As another experiment, it would be helpful to know whether your `Mutect2` command succeeds if you specify a specific interval string like ""1:1000000-2000000"" (doesn't matter which interval) for the `-L` argument instead of the `interval_list` file (but keeping all other inputs the same).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1065230706:24,test,testing,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1065230706,1,['test'],['testing']
Testability,"@jkobject After further testing we think the issue might be more specific: the error seems to occur only when checking for the existence of non-existent files in non-requester-pays buckets when a requester-pays project is specified. In your case, it is checking for the existence of an index for your interval_list file and failing, since interval_list files don't have indices. As another experiment, it would be helpful to know whether your Mutect2 command succeeds if you specify a specific interval string like ""1:1000000-2000000"" (doesn't matter which interval) for the -L argument instead of the interval_list file (but keeping all other inputs the same).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7716#issuecomment-1065238192:24,test,testing,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7716#issuecomment-1065238192,1,['test'],['testing']
Testability,"@jkobject Here's an update for you on this issue, as promised: we've tested the patch in https://github.com/broadinstitute/gatk/pull/7730 extensively on both our local machines and on a clean Google Cloud VM, and found it to work perfectly with all kinds of requester pays inputs to GATK (fastas, bams, vcfs, interval_lists, etc.). We now believe that the test failures in the PR are artifacts of some configuration issue in our Travis CI test environment, and that the PR does actually fix requester pays support in GATK. We are considering merging and releasing the branch as-is, and dealing with the issues in our test suite post-release. It would make us more confident doing this if you could test the branch out as well on your end and confirm whether it works for you. You can do this using the following commands:. ```; git clone https://github.com/broadinstitute/gatk.git gatk; cd gatk; git fetch; git checkout -b lb_refix_requester_pays origin/lb_refix_requester_pays; ./gradlew clean installDist; ./gatk <a GATK command that failed for you previously>; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7716#issuecomment-1079421576:69,test,tested,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7716#issuecomment-1079421576,5,['test'],"['test', 'tested']"
Testability,"@jkobject Our testing of the nightly image with our own service account and billing project suggests that the requester pays access issue is resolved, so we're not sure what's causing it to continue to fail for you. As an experiment, could you try this: within the gatk-nightly image, try to access your requester pays file `gs://cclebams/wgs_hg38/CDS-0b4jFH.wgs_ccle.bam` using the `gsutil` command with the `-u` option. Eg., `gsutil -u broad-firecloud-ccle cp gs://cclebams/wgs_hg38/CDS-0b4jFH.wgs_ccle.bam .`, and report whether that succeeds. Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064477058:14,test,testing,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064477058,1,['test'],['testing']
Testability,"@jkobject Sure, no problem! In the meantime we'll do additional testing on our end to try to confirm this theory, and submit another patch to Google. We are considering forking the library for now in the interests of getting a fully-working version of GATK released as soon as possible.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1065282902:64,test,testing,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1065282902,1,['test'],['testing']
Testability,"@jkobject Thanks for testing that for us! After looking into this issue a bit more, it seems that there might be a problem in the latest Google libraries with handling the case of a non-requester-pays input when a requester-pays project is provided. In our tests, running a similar `Mutect2` command line to yours with _all_ inputs in requester pays buckets succeeds, but when we run with a mix of requester-pays and non-requester-pays inputs, or all non-requester-pays inputs, and do specify a requester pays project, we're able to replicate your error. We are looking in a debugger now to pin down the cause. Can you tell us whether running `Mutect2` with a mix of requester-pays and non-requester-pays inputs and `--gcs-project-for-requester-pays` specified succeeded for you previously? If so, with which version(s) of GATK?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064548850:21,test,testing,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064548850,2,['test'],"['testing', 'tests']"
Testability,"@jkobject Thanks, we are testing with the nightly image now",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064452736:25,test,testing,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1064452736,1,['test'],['testing']
Testability,"@jkobject We are currently testing the new `google-cloud-nio` release in https://github.com/broadinstitute/gatk/pull/7730. In that branch, we added tests for all possible combinations of requester-pays and non-requester-pays inputs, but not all of the tests are passing yet. We're still looking into the reasons for the failures -- it could be a flaw in the way the tests are set up, or it could be that the failures are real. We should have an update by end of the week.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7716#issuecomment-1077813713:27,test,testing,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7716#issuecomment-1077813713,4,['test'],"['testing', 'tests']"
Testability,@jkobject thanks for the PR! This seems to only affect a subset of the issues you mentioned above - specifically #6345. Did this patch fix the error you're seeing in your data that you posted in #6651?. It's a good bandaid for this error case. There are some other places where a fix like this will need to be added as well. Are you able to update those areas and make some tests for this case?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7936#issuecomment-1182113899:374,test,tests,374,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7936#issuecomment-1182113899,1,['test'],['tests']
Testability,"@jmstover Thank you for your recommendation. I added the following line in the beginning of test.pbs. ```; source activate gatk; ```. However, running the following command still threw the same error. ; ```; singularity exec gatk.simg ./test.pbs; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433550679:92,test,test,92,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433550679,2,['test'],['test']
Testability,"@jmstover Yes, I pulled from broadinstiture/gatk. ; ```; singularity build gatk.simg docker://broadinstitute/gatk; ```; I don't have root permission to build Singularity image from definition file now. I may need to install a virtual machine first to test it. However, just like the activation of environment, I added the export command in my test.pbs and it worked. :-). ```; export HOME=/scratch/cqs/shengq2; source activate gatk; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433561271:251,test,test,251,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433561271,2,['test'],['test']
Testability,@jmthibault79 This fails with a compiler error: . ```; :compileTestJava/home/travis/build/broadinstitute/gatk/src/test/java/org/broadinstitute/hellbender/engine/spark/datasources/VariantsSparkSinkUnitTest.java:240: error: cannot find symbol; return inferFromUncompressedData(IOUtil.isGZIPInputStream(bis) ? new GZIPInputStream(bis) : bis);; ^; symbol: method isGZIPInputStream(BufferedInputStream); location: class IOUtil; 1 error; FAILED; ```. I think you perhaps need to update the htsjdk dependency to a release that includes this change?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5583#issuecomment-454957265:114,test,test,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5583#issuecomment-454957265,1,['test'],['test']
Testability,"@jnktsj see this PR to get an idea of how minimal the changes would be to switch the FC Featured versions of the ModelSegments WDLs to use NIO. For various reasons, I cannot easily make the switch to the WDLs in the repo here (as you can see, this causes tests to fail). So if you would like to go ahead and start testing, I would suggest that you simply clone the Featured WDLs and make the changes yourself, if that's something you're comfortable with.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5015#issuecomment-406044277:255,test,tests,255,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5015#issuecomment-406044277,2,['test'],"['testing', 'tests']"
Testability,"@jonn-smith @LeeTL1220 @droazen Thanks for sharing the information above, and I looked at it. It seems to me that once we have a chain file for one reference and another reference, the remaining steps are straightforward. I also noticed the following Picard utility [Picard LiftoverVcf]( https://broadinstitute.github.io/picard/command-line-overview.html#LiftoverVcf ) that can Lift over a VCF file from one reference to another. ; Therefore, creating the chain file between a pair of references (and limiting ourselves to cases where both references are from the same species, mouse/human) is the key. To that end, according to the following post [List of chain file creators](https://www.biostars.org/p/65558/) most of the chain file creation tools are available as a web interface. However, the UCSC one seems to be more popular, and fortunately, they have the utilities as open source and to some degree explain their steps in the [LiverOver_Howto](http://genomewiki.ucsc.edu/index.php/LiftOver_Howto) link you sent. With this approach, they first BLAT the pairwise contigs in the reference files and then use the utility DoSameSpeciesLiftOver.pl. . Based on this, it appears to me I should think about the following steps:; a) First, try out their code (UCSC) and make sure it works to produce chain files for two references successfully.; b) Design/propose a solution putting the logic in DoSameSpeciesLiftOver.pl into GATK, which also might need a BLAT run . Let me know what you think of this or have any suggestions about how I should proceed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6837#issuecomment-804188470:1386,log,logic,1386,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6837#issuecomment-804188470,1,['log'],['logic']
Testability,"@jonn-smith @LeeTL1220 The CNV test timeout was a temporary issue, but its been fixed. I'm pretty sure if you rebase on current master, it will go away.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4063#issuecomment-355795000:31,test,test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4063#issuecomment-355795000,1,['test'],['test']
Testability,@jonn-smith @droazen Had to make two very small changes. Should be ready for review if tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5134#issuecomment-416596440:87,test,tests,87,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5134#issuecomment-416596440,1,['test'],['tests']
Testability,"@jonn-smith @droazen I forgot to run the tests on my laptop before PR. Anyway, should be okay now. If not, I'll fix (again).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5134#issuecomment-416313694:41,test,tests,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5134#issuecomment-416313694,1,['test'],['tests']
Testability,"@jonn-smith All comments (except for https://github.com/broadinstitute/gatk/issues/5417) addressed, and the branch has been rebased onto your latest changes. If you give me a final thumbs up, I'll merge once tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5403#issuecomment-439152369:208,test,tests,208,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5403#issuecomment-439152369,1,['test'],['tests']
Testability,"@jonn-smith Assuming the tests pass, please review latest changes. If the tests have failed, I will see it tomorrow and address.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4872#issuecomment-397490924:25,test,tests,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4872#issuecomment-397490924,2,['test'],['tests']
Testability,"@jonn-smith Back to you. It took a fair amount of machinery to get a cromwell execution test running on travis with dummy inputs, etc., but its finally working. For the moment, the only tool that is annotated for WDLGen is PrintReads, but as soon as this goes in I'll start annotating others in a separate PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6504#issuecomment-648424901:88,test,test,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6504#issuecomment-648424901,1,['test'],['test']
Testability,@jonn-smith Can I merge if the tests pass?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5046#issuecomment-413336498:31,test,tests,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5046#issuecomment-413336498,1,['test'],['tests']
Testability,@jonn-smith Can you explain briefly why the tests are failing? It seems like this is the sort of change that our test code should just ignore.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4571#issuecomment-455234300:44,test,tests,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4571#issuecomment-455234300,2,['test'],"['test', 'tests']"
Testability,@jonn-smith Can you make sure that the test failure is nothing to block merging?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4063#issuecomment-355789698:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4063#issuecomment-355789698,1,['test'],['test']
Testability,"@jonn-smith Can you run the Carrot HaplotypeCaller tests on this branch? Agree that it might finally be time to make this the default, if we can convince ourselves that the accelerated implementation is stable.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684309813:51,test,tests,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8485#issuecomment-1684309813,1,['test'],['tests']
Testability,"@jonn-smith Could you comment on this one? The tool output clearly states that we don't support this version of Gencode, and that errors may occur:. ```; GENCODE GTF Header line 1 has a version number that is above maximum tested version (v 34) (given: 38): ##description: evidence-based annotation of the human genome (GRCh38), version 38 (Ensembl 104), mapped to GRCh37 with gencode-backmap Continuing, but errors may occur.; ```. Do we claim to support 38 anywhere? (eg., in documentation, etc.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7385#issuecomment-891227342:223,test,tested,223,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7385#issuecomment-891227342,1,['test'],['tested']
Testability,@jonn-smith Handing this one off to you for now. I wasn't sure what to do about test exactly.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6178#issuecomment-534581298:80,test,test,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6178#issuecomment-534581298,1,['test'],['test']
Testability,@jonn-smith Has this new version of the script been tested / is it in actual use?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7759#issuecomment-1090594754:52,test,tested,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7759#issuecomment-1090594754,1,['test'],['tested']
Testability,"@jonn-smith I am going to need to discuss with you how to fix the remaining broken test. I believe that the the issue is with the design of the test itself, not the code in this PR. There is an implicit assumption that the MafOutputRenderer will never create a Funcotation, which this PR violates. I believe that we should eliminate this assumption.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4917#issuecomment-398951356:83,test,test,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4917#issuecomment-398951356,2,['test'],['test']
Testability,@jonn-smith I did not fully tackle the tests for the uplaoder script and I suspect they are pretty broken now... I have spot-checked that they work with all 4 bundles...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8512#issuecomment-1703246347:39,test,tests,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8512#issuecomment-1703246347,1,['test'],['tests']
Testability,"@jonn-smith I forgot to change the default in the GATKConfig.java, and your test caught it. That's awesome!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4547#issuecomment-374994787:76,test,test,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4547#issuecomment-374994787,1,['test'],['test']
Testability,"@jonn-smith I tried running this with the proposed htsjdk change (since I'm unclear on whats broken there exactly), but the new test you added here seems to fail even with that change.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6223#issuecomment-545498470:128,test,test,128,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6223#issuecomment-545498470,1,['test'],['test']
Testability,@jonn-smith I'll add that it would be good to include an end-to-end integration test here as well to prove that the tool can successfully run to completion when the bounds-checking gets triggered.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7513#issuecomment-948797839:80,test,test,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7513#issuecomment-948797839,1,['test'],['test']
Testability,@jonn-smith I'll fix the tests and notify you.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4872#issuecomment-397418459:25,test,tests,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4872#issuecomment-397418459,1,['test'],['tests']
Testability,"@jonn-smith If tests pass, can I merge?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4881#issuecomment-397036412:15,test,tests,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4881#issuecomment-397036412,1,['test'],['tests']
Testability,@jonn-smith If you make the changes in a branch I can run it through the M2 testing Terra workspace.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5841#issuecomment-481373763:76,test,testing,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5841#issuecomment-481373763,1,['test'],['testing']
Testability,"@jonn-smith Looks good, merge when tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6492#issuecomment-598420328:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6492#issuecomment-598420328,1,['test'],['tests']
Testability,@jonn-smith Looks like that did the trick. The tests are passing now. How do you want to handle this branch? should I give you a review or try to take it over and let you review the changes i make to it?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8863#issuecomment-2386252218:47,test,tests,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8863#issuecomment-2386252218,1,['test'],['tests']
Testability,@jonn-smith Please review that I have tested to your satisfaction. Particularly around `FuncotationMap`. Please note that several issues are closed with this PR.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4838#issuecomment-393659921:38,test,tested,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4838#issuecomment-393659921,1,['test'],['tested']
Testability,"@jonn-smith Quick one when you get a chance - this fixes some things I noticed on my GATK branch when testing my new htsjdk `VCFHeader` code. The `Funcotator.checkIfAlreadyAnnotated `code was checking for a header line that was never generated by `Funcotator` AFAICT, and this also ties together the `Funcotator` engine and test code to use the same constants. More could probably be done here but it would require a bigger refactoring.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7555:102,test,testing,102,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7555,2,['test'],"['test', 'testing']"
Testability,"@jonn-smith Something is weird here, it looks like the the stubs are committed now by accident. That's what I see if I check it out locally. They're still valid git-lfs stubs, so running a `git-lfs checkout` will pull them down and then git will think that they've all been modified since they're not being tracked correctly by git-lfs... In the past to move things out of git-lfs I've had to do it in 2 commits. ; 1. remove the file from git, ; 2. re-commit it to a new location that isnt tracked by git-lfs. `git lfs migrate export` might help, but I've never used it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5381#issuecomment-434782675:59,stub,stubs,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5381#issuecomment-434782675,2,['stub'],['stubs']
Testability,@jonn-smith Thank you. I will be looking at the ucsc. I also found the following tool that implements the ucsc liftover file creation....the logic seems simple.; https://github.com/konstantint/pyliftover,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6837#issuecomment-800419348:141,log,logic,141,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6837#issuecomment-800419348,1,['log'],['logic']
Testability,@jonn-smith There are a bunch of test failures on this branch in travis -- could you fix these before we review? Thanks!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3410#issuecomment-320329698:33,test,test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3410#issuecomment-320329698,1,['test'],['test']
Testability,@jonn-smith This should be good to go now. I added a non-regenerated integration test for the specific problem.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6178#issuecomment-538132773:81,test,test,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6178#issuecomment-538132773,1,['test'],['test']
Testability,"@jonn-smith and @LeeTL1220 please review. I still plan to add a few more tests (in particular, for overlapping genes and for all-transcripts mode), but I will add these during review rather than holding this branch up any longer.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5403#issuecomment-437496907:73,test,tests,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5403#issuecomment-437496907,1,['test'],['tests']
Testability,@jonn-smith back to you. I fixed the broken test... Should be good for you to do your final datasource testing,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8512#issuecomment-1714396277:44,test,test,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8512#issuecomment-1714396277,2,['test'],"['test', 'testing']"
Testability,"@jonn-smith i added a readme in the LFS files. Looks like github won't display it though which is slightly annoying. Here is what it says (WARNING.txt: NOTE: this gencode.v43.PIK3CA.gtf file is slightly edited for the sake of testing MANE_SELECT and MANE_PLUS_CLINICAL.; transcript ""ENST00000643187.1"" is not actually classified as MANE_Plus_Clinical but it is included in the file for testing purposes.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/9012#issuecomment-2429685461:226,test,testing,226,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/9012#issuecomment-2429685461,2,['test'],['testing']
Testability,@jonn-smith is this in a release or would we have to download/compile to test?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6289#issuecomment-951261199:73,test,test,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6289#issuecomment-951261199,1,['test'],['test']
Testability,@jonn-smith tested a workaround using JEXL expressions to filter out spanning deletions but it was not working. This seems like a bug because spanning deletions can cause downstream issues.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7341#issuecomment-876574736:12,test,tested,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7341#issuecomment-876574736,1,['test'],['tested']
Testability,"@jonn-smith this is tested on my end. would you mind testing on yours and reviewing the pull request?. Also I am trying to run it using the jar file but when I use it I get an error:; ```; Error: A JNI error has occurred, please check your installation and try again; Exception in thread ""main"" java.lang.NoClassDefFoundError: org/broadinstitute/barclay/argparser/CommandLineException; ```; let me know if you have any inputs on this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7936#issuecomment-1185730223:20,test,tested,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7936#issuecomment-1185730223,2,['test'],"['tested', 'testing']"
Testability,"@jonn-smith, I did see XsvLocatableTableCodec and the .config file path, but this does not appear to work. To be clear this is something like:; ```; gatk IndexFeatureFile -I ./hg19/testTextSource.config; ```; In IndexFeatureFile (https://github.com/broadinstitute/gatk/blob/abe8148bda234edf6bd00fa51df44d456e8e2641/src/main/java/org/broadinstitute/hellbender/tools/IndexFeatureFile.java#L118), it does identify the correct codec; however, it then calls:. IndexFactory.createDynamicIndex(featurePath.toPath(), ...). where featurePath is the config file. This calls IndexFactory to open a lineReader on the config file (not the backing data source): https://github.com/samtools/htsjdk/blob/6d3fc7bc1f613ecfce1c22d368f3ae17cb86823d/src/main/java/htsjdk/tribble/index/IndexFactory.java#L598. . This then fails during XsvLocatableTableCodec.readActualHeader(), since this is trying to read the config file, not the TXT file.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1591678472:181,test,testTextSource,181,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1591678472,1,['test'],['testTextSource']
Testability,"@jonn-smith: any thoughts on the PR? I could try to put in a test, but this does allow Funcotator to read gzipped TSV files, which is rather useful when you're dealing with large inputs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1601753831:61,test,test,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1601753831,1,['test'],['test']
Testability,@jonn-smith: thanks. looks like the tests passed. what do you think about the PR and level of testing?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1608133539:36,test,tests,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8363#issuecomment-1608133539,2,['test'],"['testing', 'tests']"
Testability,"@joshwilding4444 Were you able to get our test suite running, or are you still running into this? We've never seen this error before and are not sure of the cause. Are you running with Java 8, or a later version of Java?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6748#issuecomment-696286788:42,test,test,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6748#issuecomment-696286788,1,['test'],['test']
Testability,"@jrvanalstine I'd strongly suggest that you upgrade. As discussed in the linked issue above, the underlying segmentation algorithm is completely different from that used in the beta workflows. Major changes were made to file formats and the overall structure of the pipeline as well. That said, it may still be the case that heavily downsampled input still gives strange results---if you are just downsampling to create test BAMs, I'd suggest that you increase the bin size to maintain a reasonable number of counts in each bin.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2944#issuecomment-474513366:420,test,test,420,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2944#issuecomment-474513366,1,['test'],['test']
Testability,"@jsotobroad I'm running a full sized test, but my plumbing test succeeded. I added a GenerateOutputMap step. Back to you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3585#issuecomment-330360241:37,test,test,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3585#issuecomment-330360241,2,['test'],['test']
Testability,"@jsotobroad The version I pushed up should be good for you to test with. There are some more bells and whistles that need to be added around user interface, but the fundamental of fixing the sample assignment should be good.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3675#issuecomment-334882135:62,test,test,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3675#issuecomment-334882135,1,['test'],['test']
Testability,"@jullee . 1. Yes, running in mitochondria-mode is somewhat like running in tumor-only mode because you don't have a matched normal. We have found that the false positive rate is very reasonable and comparable to other tools for mitochondria (including HaplotypeCaller). Your latter point (we're looking for calls at various allele fractions) is exactly why we chose to use Mutect instead of HaplotypeCaller. 2. I don't think we can currently output bp resolution reference confidence in Mutect2. There is development being done to allow Mutect to output a GVCF (which would give you reference confidence) but this is still a work in progress. You might be able to use the ""Genotype Given Alleles"" argument to force Mutect to output qualities at each base, but I haven't tested this at all. 3. We found that value for --min-pruning by looking at whole genome sequencing data. Both HaplotypeCaller and Mutect do a local reassembly at a potential variant site. This reassembly builds a graph where each path is a potential haplotype. The min-pruning argument tells you how many reads each path needs to have in order to be considered (otherwise it is pruned from the graph). By default this value is 1 which makes sense for 30-60X data, but if your coverage is very high (which it usually is for mitochondria) the graph will be too messy due to errors unless you turn that argument up. Because the depth is so high, you need more evidence to be sure a path in the graph isn't just noise. 4. The ploidy argument isn't used by Mutect2 because it is always looking for variation at arbitrary allele fractions. If you are instead using HaplotypeCaller you would need to change that argument either to 1 (this would only allow you to call HomVar sites) or as high as you need to get desired resolution. In other words if you want to be able to call sites at 1% allele fraction, you will need to set the ploidy argument to 100 if you are running HaplotypeCaller. Mutect2 will look for sites at all allele fract",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-432645864:770,test,tested,770,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5193#issuecomment-432645864,1,['test'],['tested']
Testability,@kachulis Back to you. I fixed the bug and wrote a test for it. I also put in a commit replacing some trimming code with the new normalization method.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6427#issuecomment-583111797:51,test,test,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6427#issuecomment-583111797,1,['test'],['test']
Testability,@kachulis I hope you find this entertaining. Closes #150. Closes #4919. . Also fixes a bug we didn't know about where `LeftAlignAndTrimVariants` didn't do anything when `--dont-trim` was set. Also fixes a bug where `LeftAlignAndTrimVariants` couldn't left align an indel past a SNP. Also fixes a bug where `LeftAlignAndTrimVariants` didn't left align multiallelic variants when splitting was turned off. Probably fixes a few other bugs since the old code failed a bunch of my unit tests.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6427:481,test,tests,481,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6427,1,['test'],['tests']
Testability,"@kachulis Interesting, this change has highlighted the fact that DBSNP (or the one we have checked in anyway) is full of duplicate variants with different IDs. It looks like most of the changes in that file are appending both duplicated IDs to the variant which certainly sounds more correct than before. I'm a little concerned about the Qual score changes, do you know what caused them? It looks like the tests don't actually check those scores exactly, it is probably unrelated now that I see we compare QUAL scores by:; `private static final double DEFAULT_FLOAT_TOLERANCE = 1e-1;` but it seems that there is a consistent 0.04 QUAL score change at almost every site in that file....; I would recommend trying to regenerate that file without your code change and if you see the same QUAL behavior then go ahead and merge (I just want to be sure that the splitting code is not destructive in some unforeseen way).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6626#issuecomment-639550318:406,test,tests,406,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6626#issuecomment-639550318,1,['test'],['tests']
Testability,@kcibul @ahaessly @mmorgantaylor do you guys know what the best way to upload multifile WDLs to Agora is? I can't import the current WDL as it is because the imports refer to a relative local file which Agora can't resolve. My workaround has been to rename the import path so that it points to a raw github file. I've been doing this manually for testing but it will not work with our automated Github -> Agora method creation tool (without some code changes to read the WDL and rename the imports).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7242#issuecomment-844495784:347,test,testing,347,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7242#issuecomment-844495784,1,['test'],['testing']
Testability,@kcibul @cmnbroad This should hopefully fix the problems you've both been seeing. . It turned out we weren't logging into docker on the wdl test branches because they don't set DOCKER_TEST but they still build docker images. I was confused about how that variable was used.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7256#issuecomment-841391272:109,log,logging,109,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7256#issuecomment-841391272,2,"['log', 'test']","['logging', 'test']"
Testability,@kcibul I'd still like the gVCFs for debugging and as test data for https://github.com/broadinstitute/gatk/issues/2668,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2658#issuecomment-299505754:54,test,test,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2658#issuecomment-299505754,1,['test'],['test']
Testability,"@kcibul reports that if the CNNScoreVariants python code throws an exception during async batch processing, the GATK tool hangs (specifically, it was happening when GATK was sending a . for a missing annotation, and the python code was trying to interpret that as a number and blowing up). It looks like this happens because `StreamingPythonScriptExecutor::waitForPreviousBatchCompletion` waits for the async write thread `Future` to complete first, before checking the fifo for an `ACK`/`NCK` (which is when the exception would be propagated). If the async write thread is blocked because the fifo is full because the python code isn't retrieving data because an exception was thrown, the java side will hang waiting for the `Future` complete. The solution is to reverse the order of the `waitForPreviousBatchCompletion` checking (ack first, then validate that the async write `Future` completes). There is a [branch]( https://github.com/broadinstitute/gatk/tree/cn_async_python_exception) with a test and a fix for the StreamingPythonExecutor, and a [separate branch](https://github.com/broadinstitute/gatk/tree/cn_cnn_exception) with a test for CNNScoreVariants that also has the executor fix. I need to verify that the CNNSCoreVariants test actually fails without the fix, and then this can be turned into a PR, which I'll do when I return from vacation.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7401:998,test,test,998,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7401,3,['test'],['test']
Testability,@kdatta @kgururaj Any update on when the modified version of this PR will be available? We're eager to test it out!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-279769739:103,test,test,103,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-279769739,1,['test'],['test']
Testability,"@kdatta @kgururaj It seems like we're losing rsID's in the input gvcf when we load them into genomics db. Is this deliberate to save space? Is it a bug? Is it a configuration option that isn't exposed by `GenomicsDBImport`? . I don't think it's important for production because they pass in a dbSNP at genotyping time so that can be recomputed, but it's causing issues in some of my tests.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2636:383,test,tests,383,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2636,1,['test'],['tests']
Testability,"@kdatta @kgururaj We have some questions about this pull request. It looks like maybe you forgot some commits, (and included some extra ones that you didn't intend to). . 1. The tests are a direct copy and paste of `PrintReadsIntegrationTests` and couldn't possibly run. Did you forget to push the commit with the actual test code? We really need some tests especially because it's not totally obvious how to use this tool and what needs to be in the jsons. . 2. The tool currently takes a partition index and a json with stream ids. The way we had envisioned this working was that it would take a `-V` argument with a list of vcfs and `-L` argument specifying what chunk of the genome to load. Can you explain why it is designed this way and if it is possible to change to use the more idiomatic input style? . 3. Can you let us know when 0.4.0 is available on maven? . We have additional review comments, but it seems premature to get into those details until the above are answered.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-277310677:178,test,tests,178,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-277310677,3,['test'],"['test', 'tests']"
Testability,"@kdatta Have you had time to try those experiments I suggested yesterday (inspecting the in-memory VCF header, and temporarily preventing the comparator from looking at `MIN_DP` in order to determine whether there are other mismatches)? We have a team of engineers here itching to try this new tool out and see how it scales, so it would be good to merge this as soon as we can. Let me know if I can help with the testing/debugging in any way, or if you need a meeting to talk through things.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293296258:414,test,testing,414,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293296258,1,['test'],['testing']
Testability,@kdatta How's the integration test coming? Any issues writing it? Will it be pushed soon? Thanks!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-290445381:30,test,test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-290445381,1,['test'],['test']
Testability,"@kdatta I'm fixing the comparator to address the type inconsistencies between BCF and VCF, and noticed then when I let the test run all the way through (I turned off the comparisons that are sensitive to allele ordering), I get an extra actual VC at the end that is not in the expected output. Can you take a look ? It looks like it's position is just past the end of the specified query interval:. java.lang.AssertionError: actual is longer than expected with at least one additional element: [VC null @ chr20:17981448-17981459 Q. of type=SYMBOLIC alleles=[G*, <NON_REF>] attr={END=17981459} GT=[[HG00096 ./.],[HG00268 ./. GQ 99 DP 41 PL 0,114,1275 {MIN_DP=38}],[NA19625 ./. GQ 99 DP 35 PL 0,99,977 {MIN_DP=33}]]",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295301159:123,test,test,123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295301159,2,"['Assert', 'test']","['AssertionError', 'test']"
Testability,"@kdatta It looks like ""attributesToIgnore"" only works for site level attributes, not genotype attributes, so it won't work for MIN_DP - I don't know if that was intentional or not. I've seen the issue you describe with SB, but I haven't seen it fail on either END or DP, so those surprise me. I'll look into it. Send me stack trace if you have one, since we're working on fixes for the comparator. To see the extra VCF, temporarily turn off the variant comparison assert, or replace it with a benign condition, and just let GenomicsDBTestUtils.assertCondition exhaust the iterators.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295414868:464,assert,assert,464,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-295414868,2,['assert'],"['assert', 'assertCondition']"
Testability,"@kdatta Looks like the integration tests passed on travis after clearing the cache! Once you address comments, squash, and rebase onto the latest gatk master the unit tests should pass as well, since you just need the TestNG fix that got merged into master. This means we can merge this today in all likelihood!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296301829:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296301829,3,"['Test', 'test']","['TestNG', 'tests']"
Testability,"@kdatta Pasting the relevant portion of the travis log here for reference. The test suite appears to be dying with error code 134 (process received `SIGABRT`), perhaps due to the following error: `[E::bcf_hdr_add_sample] Duplicated sample name 'HG00096'`. ```; :test[M::bwa_idx_load_from_disk] read 0 ALT contigs; [M::mem_pestat] skip orientation FF as there are not enough pairs; [M::mem_pestat] analyzing insert size distribution for orientation FR...; [M::mem_pestat] (25, 50, 75) percentile: (387, 415, 430); [M::mem_pestat] low and high boundaries for computing mean and std.dev: (301, 516); [M::mem_pestat] mean and std.dev: (407.54, 32.35); [M::mem_pestat] low and high boundaries for proper pairs: (258, 559); [M::mem_pestat] skip orientation RF as there are not enough pairs; [M::mem_pestat] skip orientation RR as there are not enough pairs; [M::mem_pestat] skip orientation FF as there are not enough pairs; [M::mem_pestat] analyzing insert size distribution for orientation FR...; [M::mem_pestat] (25, 50, 75) percentile: (387, 415, 430); [M::mem_pestat] low and high boundaries for computing mean and std.dev: (301, 516); [M::mem_pestat] mean and std.dev: (407.54, 32.35); [M::mem_pestat] low and high boundaries for proper pairs: (258, 559); [M::mem_pestat] skip orientation RF as there are not enough pairs; [M::mem_pestat] skip orientation RR as there are not enough pairs; [M::mem_pestat] skip orientation FF as there are not enough pairs; [M::mem_pestat] analyzing insert size distribution for orientation FR...; [M::mem_pestat] (25, 50, 75) percentile: (470, 502, 533); [M::mem_pestat] low and high boundaries for computing mean and std.dev: (344, 659); [M::mem_pestat] mean and std.dev: (501.23, 49.14); [M::mem_pestat] low and high boundaries for proper pairs: (281, 722); [M::mem_pestat] skip orientation RF as there are not enough pairs; [M::mem_pestat] skip orientation RR as there are not enough pairs; Created workspace /tmp/travis/genomicsdb-tests-1057177121940476778/worksp",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298740693:51,log,log,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298740693,3,"['log', 'test']","['log', 'test']"
Testability,"@kdatta Thanks for the update -- we do need to get these tests passing with our `assertVariantContextsAreEqual()` comparison routine, rather than your diffing tool, but we can relax this routine to be agnostic to allele ordering. About the `MIN_DP` issue: can you explain what was causing it? Why was it working with a `VCFCodec` and not a `BCF2Codec`? I still don't understand. Does it work now with our comparison routine and using a `BCF2Codec` internally, or does it still require a `VCFCodec` to pass? . And what was the ""ExcessHet problem"" (don't see a description of it above)? Was it just the ""no combination operation"" warning? What did the output look like before and after the fix for this annotation?. @cmnbroad has volunteered to have a look at the tests in this branch this afternoon, so we should be able to give you some more feedback soon!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293978277:57,test,tests,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-293978277,3,"['assert', 'test']","['assertVariantContextsAreEqual', 'tests']"
Testability,"@kdatta That's the right way to compare variants. Comparing variants is complicated so it's possible you've hit a bug in the comparator. . MIN_DP should be an integer, so it's funny that i's being treated as a double somewhere. Could you look at the site that's failing and check if ; 1) the expected output file I provided you has a 27.0 there or if it's 27 ( I grepped the file and didn't find any `27.0` as the MIN_DP but I could have missed it...); 2) your generated output file has 27.0 and not 27 (it's easy to mess up the ordering of expected and actual in the test code); 3. Check that the header of your output file reports MIN_DP as an Integer and not a Float or Double. If none of those are true than it sounds like a bug in the comparator. If that's the case if you upload your in progress test we can take it and figure out how to fix the comparator.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-292592251:568,test,test,568,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-292592251,2,['test'],['test']
Testability,"@kdmurray91 Our nightly builds are kind of janky at the moment. I built one for you and uploaded it [here](https://storage.googleapis.com/hellbender-test-logs/tmp/gatk-4.1.4.1-57-ga78bf17-SNAPSHOT.zip) to test it. . I think this bug is fixed so I'm going to close this issue, feel free to reopen or open a new issue if you have further issues.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6434#issuecomment-581654965:149,test,test-logs,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6434#issuecomment-581654965,2,['test'],"['test', 'test-logs']"
Testability,"@kguraj It looks like there are existing integration tests that use intervals that cover a pretty wide genomic range. It should be easy to write a test that programmatically generates a large set of (10000) or so very small intervals (1bp) with small (1bp) gaps between them (the gaps are necessary since otherwise the intervals will be merged together by the engine) that fails without this change and passes with it. It doesn't necessarily have to verify the results, just successfully complete.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4997#issuecomment-407056469:53,test,tests,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4997#issuecomment-407056469,2,['test'],"['test', 'tests']"
Testability,"@kguraj Thanks for the response(s). The test in the PR was super useful as a temporary test, but as you mentioned it runs pretty slowly, and as it stands the test passes on current master anyway. It seems to require on the order of 9000-1000 intervals instead rather than 1000 to actually hit stack overflow. Since that would be a very slow running test, I'm inclined to back it out. Also, the user who originally reported the issue was using 11k intervals, and it seems that the stack overflow fix is unlikely to help in that case. Is there any guidance for users on what is a reasonable number of intervals per process ? It sounds like the intention was that it be used with pretty small intervals. Should we issue a warning message in GenomicsDBImport at some threshold number of intervals ?. Are you planning to produce a jar with the error messages suppressed for this PR?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4997#issuecomment-407867902:40,test,test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4997#issuecomment-407867902,4,['test'],['test']
Testability,"@kgururaj As I start to think about upgrading exome joint calling to use GenomicsDBImport the 100 interval threshold seems like it might be problematic. I've been working with WGS data, so I don't have much intuition for benchmarking with missing data. Is there any performance downside to running over larger intervals that include missing data? For example, if we want to scatter the exome 50 ways, each subset of the exome interval list will have ~4000 intervals, but the GVCFs won't have data outside those intervals. Does it make sense to pass to GenomicsDBImport a single interval encompassing all of those?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-409956462:221,benchmark,benchmarking,221,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5066#issuecomment-409956462,1,['benchmark'],['benchmarking']
Testability,@kgururaj Can you please add a good integration test for this branch?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3982#issuecomment-357057167:48,test,test,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3982#issuecomment-357057167,1,['test'],['test']
Testability,"@kgururaj Do those first messages originate [here](https://github.com/Intel-HLS/TileDB/blob/33ad0355db215cb528162a74c16b706a059b0346/core/src/storage_manager/storage_manager.cc#L1168) ? I'm not sure what GenomicsDB code path leads there, but it looks like TileDB considers them to be an error that results in a short-circuit return. I'd be concerned that masking them would hide some underlying error. Are there any tests that verify that data round-trips though GDB when an interval list large enough to trigger these messages is encountered ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4997#issuecomment-407394879:416,test,tests,416,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4997#issuecomment-407394879,1,['test'],['tests']
Testability,"@kgururaj I ran the commands you suggested. . > [user@cedar5 bin]$ bash -x TestGenomicsDBJar/run_checks.sh; > + [[ hB != hxB ]]; > + XTRACE_STATE=-x; > + [[ hxB != hxB ]]; > + VERBOSE_STATE=+v; > + set +xv; > + unset XTRACE_STATE VERBOSE_STATE; > ++ uname -s; > + osname=Linux; > + jar xf genomicsdb--jar-with-dependencies.jar libtiledbgenomicsdb.so; > java.io.FileNotFoundException: genomicsdb--jar-with-dependencies.jar (No such file or directory); > at java.util.zip.ZipFile.open(Native Method); > at java.util.zip.ZipFile.<init>(ZipFile.java:219); > at java.util.zip.ZipFile.<init>(ZipFile.java:149); > at java.util.zip.ZipFile.<init>(ZipFile.java:120); > at sun.tools.jar.Main.extract(Main.java:1004); > at sun.tools.jar.Main.run(Main.java:305); > at sun.tools.jar.Main.main(Main.java:1288); > + jar xf genomicsdb--jar-with-dependencies.jar libtiledbgenomicsdb.dylib; > java.io.FileNotFoundException: genomicsdb--jar-with-dependencies.jar (No such file or directory); > at java.util.zip.ZipFile.open(Native Method); > at java.util.zip.ZipFile.<init>(ZipFile.java:219); > at java.util.zip.ZipFile.<init>(ZipFile.java:149); > at java.util.zip.ZipFile.<init>(ZipFile.java:120); > at sun.tools.jar.Main.extract(Main.java:1004); > at sun.tools.jar.Main.run(Main.java:305); > at sun.tools.jar.Main.main(Main.java:1288); > + '[' Linux == Darwin ']'; > + LIBRARY_SUFFIX=so; > + ldd libtiledbgenomicsdb.so; > ldd: ./libtiledbgenomicsdb.so: No such file or directory; > + md5sum libtiledbgenomicsdb.so; > md5sum: libtiledbgenomicsdb.so: No such file or directory. I'm using a compute canada server, so I don't have root access. The version of gatk4 I'm using was installed by their support team, and I load it using 'module load gatk'. I had that module loaded when I ran this test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4124#issuecomment-357005071:75,Test,TestGenomicsDBJar,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4124#issuecomment-357005071,2,"['Test', 'test']","['TestGenomicsDBJar', 'test']"
Testability,"@kgururaj I ran with batch size 50, using a sample map, 5 reader threads:. `java -jar GATK_GDBfork.jar GenomicsDBImport --genomicsdb-workspace-path forkTest --batch-size 50 -L chr20:45840744-45870555 --sample-name-map gnarly_reblocked_all.sample_map --reader-threads 5`. That sample map has 80K genomes because that's the project I'm working on now. Log was as follows:; ```; 16:27:48.831 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/humgen/gsa-hpprojects/dev/gauthier/reblockGVCF/GATK_GDBfork.jar!/com/intel/gkl/nati; ve/libgkl_compression.so; 16:27:48.947 INFO GenomicsDBImport - ------------------------------------------------------------; 16:27:48.948 INFO GenomicsDBImport - The Genome Analysis Toolkit (GATK) v4.0.3.0-24-g8804e16-SNAPSHOT; 16:27:48.948 INFO GenomicsDBImport - For support and documentation go to https://software.broadinstitute.org/gatk/; 16:27:48.949 INFO GenomicsDBImport - Executing as gauthier@gsa5.broadinstitute.org on Linux v2.6.32-642.15.1.el6.x86_64 amd64; 16:27:48.949 INFO GenomicsDBImport - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_121-b13; 16:27:48.950 INFO GenomicsDBImport - Start Date/Time: May 4, 2018 4:27:48 PM EDT; 16:27:48.950 INFO GenomicsDBImport - ------------------------------------------------------------; 16:27:48.950 INFO GenomicsDBImport - ------------------------------------------------------------; 16:27:48.950 INFO GenomicsDBImport - HTSJDK Version: 2.14.3; 16:27:48.951 INFO GenomicsDBImport - Picard Version: 2.18.1; 16:27:48.951 INFO GenomicsDBImport - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 16:27:48.951 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 16:27:48.951 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 16:27:48.951 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 16:27:48.951 INFO GenomicsDBImport - Deflater: IntelDeflater; 16:27:48.951 INFO GenomicsDBImport - Inflater: IntelInflater; 16",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4645#issuecomment-388079572:350,Log,Log,350,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4645#issuecomment-388079572,1,['Log'],['Log']
Testability,@kgururaj I suspect this error is coming from genomicsDB ? @EvanTheB did you see a change when running on identical inputs (the failure case the log files you included covers quite a bit more genomic territory than the success case).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5024#issuecomment-405949809:145,log,log,145,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5024#issuecomment-405949809,1,['log'],['log']
Testability,"@kgururaj If you can resolve the remaining conflict, we can get this one merged now that tests are passing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5799#issuecomment-477265333:89,test,tests,89,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5799#issuecomment-477265333,1,['test'],['tests']
Testability,"@kgururaj It looks like the test is still included in the PR - I think it should come out since it doesn't use enough intervals to test the fix, and it would be too slow if it did.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4997#issuecomment-408544552:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4997#issuecomment-408544552,2,['test'],['test']
Testability,"@kgururaj Looks like the only remaining TODOs here are test-related. Before we can merge, we need:. 1. Better tests for the case of multiple, non-adjacent intervals (in particular, a test case involving multiple intervals from different contigs, if that is supported, or a test showing that a sensible exception is thrown if it's not supported).; 2. A test covering the issue reported in #4716; 3. Test cases covering the new sites-only query support (#3688) and support for retrieving the GT field",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4645#issuecomment-394427475:55,test,test-related,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4645#issuecomment-394427475,6,"['Test', 'test']","['Test', 'test', 'test-related', 'tests']"
Testability,"@kgururaj Thanks for adding the test. Running it locally on my laptop (without your fix) succeeds though - I have to bump it up from 1000 intervals to 9000 to reproduce the stack overflow. But if I do that, it takes a long time to run, since it appears to be creating lots of small partitions. Is there any way to get it to use fewer partitions in a case like this where there are lots of intervals ?. Somewhat more concerning is that when with 8000 intervals, I see a different failure mode. First I see lots (thousands) of these messages:. `[GenomicsDB::VariantStorageManager] INFO: ignore message ""[TileDB::StorageManager] Error: Cannot list TileDB directory; Directory buffer overflow."" in the previous line`. followed by a failure that ends like this:. `[TileDB::StorageManager] Error: Cannot store schema; Too many open files in system.; libc++abi.dylib: terminating with uncaught exception of type LoadOperatorException: LoadOperatorException : Could not define TileDB array; TileDB error message : [TileDB::StorageManager] Error: Cannot store schema; Too many open files in system`. Can you reproduce that ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4997#issuecomment-407214031:32,test,test,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4997#issuecomment-407214031,1,['test'],['test']
Testability,"@kgururaj Thanks, this branch passes the test case that was failing for me before.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4645#issuecomment-385525908:41,test,test,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4645#issuecomment-385525908,1,['test'],['test']
Testability,"@kgururaj Thx for the updated jar. Can you remove the test commit now, and then we can run this on travis once more and then we can merge ? Thx.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4997#issuecomment-408502462:54,test,test,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4997#issuecomment-408502462,1,['test'],['test']
Testability,"@kgururaj We got this issue report in the forum, could you please look into it? Thanks!. https://gatkforums.broadinstitute.org/gatk/discussion/12388/how-to-use-multi-interval-in-genomicsdbimport-with-gatk-4-0-6-0. ----. I used the GenomicsDBImport with a interval list file and got a error like below.; So what is the correct way to use Multi-interval in GenomicsDBImport?. gatk version: 4.0.6.0. Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx4g -Xms4g -jar /mnt/gatk/gatk-4.0.6.0/gatk-package-4.0.6.0-local.jar GenomicsDBImport -L test.intervals --genomicsdb-workspace-path ../RAW_VCF/my_database -V file1 -V file2 -V file3. 02:57:15.591 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/mnt/workshop/xinchen.pan/test/gatk/gatk-4.0.6.0/gatk-package-4.0.6.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; 02:57:15.772 INFO GenomicsDBImport - ------------------------------------------------------------; 02:57:15.772 INFO GenomicsDBImport - The Genome Analysis Toolkit (GATK) v4.0.6.0; 02:57:15.772 INFO GenomicsDBImport - For support and documentation go to https://software.broadinstitute.org/gatk/; 02:57:15.772 INFO GenomicsDBImport - Executing as on Linux v3.10.0-514.6.1.el7.x86_64 amd64; 02:57:15.772 INFO GenomicsDBImport - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_121-b13; 02:57:15.773 INFO GenomicsDBImport - Start Date/Time: July 10, 2018 2:57:15 AM EDT; 02:57:15.773 INFO GenomicsDBImport - ------------------------------------------------------------; 02:57:15.773 INFO GenomicsDBImport - ------------------------------------------------------------; 02:57:15.773 INFO GenomicsDBImport - HTSJDK Version: 2.16.0; 02:57:15.773 INFO GenomicsDBImport - Picard Version: 2.18.7; 02:57:15.773 INFO GenomicsDBImport - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 02:57:15.773 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_S",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4994:660,test,test,660,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4994,2,['test'],['test']
Testability,"@kgururaj and @kdatta Here's some GVCF data for a trio of samples, each called to haploid (ploidy 1) and tetraploid (4) genotypes. I included the reference (just chromosome 20) and the intervals list. This is data from one of our workshop tutorials so many of the intervals in the list I used don't have any data (so lots of no-calls) but there should be enough usable calls for testing purposes. Let me know if this isn't sufficient to get you started. . Thanks for looking into this, it's very important for a non-trivial subset of our users. . [genomicsdb.zip](https://github.com/broadinstitute/gatk/files/1171416/genomicsdb.zip)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3342#issuecomment-317577301:379,test,testing,379,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3342#issuecomment-317577301,1,['test'],['testing']
Testability,"@kgururaj are you using the script I provided? Otherwise it must be something site specific here. . Update: This error only occurs when the genomicsdb is on the /tmp drive. I verified by copying the db back and forth, and it works when on the local drive, fails on the tmp drive. . The /tmp drive is XFS, and it does not have locking enabled. (`flock /tmp/test echo 1` fails). I suspect these other tickets may be relevant:. https://github.com/Intel-HLS/TileDB/pull/77; https://github.com/broadinstitute/gatk/issues/4753; https://gatkforums.broadinstitute.org/gatk/discussion/11184/could-not-open-array-genomicsdb-array-at-workspace-from-genotypegvcfs-in-gatk-4-0-0-0. However the error is an allocation error in a std::vector, so it could still be some other issue. Is the failure to flock not being checked for?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5024#issuecomment-407243127:356,test,test,356,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5024#issuecomment-407243127,1,['test'],['test']
Testability,"@kishorikonwar I had checked in the script a while ago, so that sim link just points to the version in GATK:. https://github.com/broadinstitute/gatk/blob/master/scripts/funcotator/testing/compareTwoReferenceDictionaries.sh; This only does the sequence dictionary check - not the base-level check, and it's not very sophistocated. More recently I wrote a script for doing the nucleotide diffs in python. I put it in the `jts_refdiff` branch here:; https://github.com/broadinstitute/gatk/blob/jts_refdiff/scripts/refDiff.py",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6837#issuecomment-800332643:180,test,testing,180,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6837#issuecomment-800332643,1,['test'],['testing']
Testability,"@ksw9 Can you check whether this is still an issue with the latest release (4.0.8.0)? That release introduced a new version of GenomicsDB. If it is still an issue in 4.0.8.0, can you provide a shareable test case to replicate the issue?. @kgururaj Could you comment on this one as well?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413201505:203,test,test,203,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5113#issuecomment-413201505,1,['test'],['test']
Testability,"@kvinter1 In future, it's a good idea to wait for tests to pass before merging, otherwise you risk the potential penalty of having to buy the team beer if test fail once it's in master. Doc changes are pretty low risk, but you never know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412913465:50,test,tests,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5104#issuecomment-412913465,2,['test'],"['test', 'tests']"
Testability,@laserson I gave this to you since I figured you'd be most likely to know how to turn off an adam log. Feel free to reassign if you don't have a chance to get to it.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1123#issuecomment-157160878:98,log,log,98,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1123#issuecomment-157160878,1,['log'],['log']
Testability,"@laserson I've tested using python 2.6, 2.7 and 3.5.0 All seem to work.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1211#issuecomment-162676366:15,test,tested,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1211#issuecomment-162676366,1,['test'],['tested']
Testability,"@laserson Ok, responded to the latest round of comments. Ping me when this is rebased/finalized and passing tests, and I'll take a last look and merge.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/928#issuecomment-145924161:108,test,tests,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/928#issuecomment-145924161,1,['test'],['tests']
Testability,@laserson do you know how to not create that adam.log file?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1123#issuecomment-165899502:50,log,log,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1123#issuecomment-165899502,1,['log'],['log']
Testability,"@laserson so if I understand correctly, the investigation into using @davidadamsphd 's code for MD gave negative result? If that;s the case, let's close this ticket and open one that repsresents your current work benchmarking. what do you think?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1100#issuecomment-159142756:213,benchmark,benchmarking,213,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1100#issuecomment-159142756,1,['benchmark'],['benchmarking']
Testability,"@lbergelson - Based on your answer, can I assume that GATK tools are supported on both Java 11 and Java 8; >We test against 8 and 11 so I would expect either of those to work with out any weird issues.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7842#issuecomment-1122828397:111,test,test,111,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7842#issuecomment-1122828397,1,['test'],['test']
Testability,"@lbergelson - back to you!. I agree that the tests are a bit complicated, but the only way of testing this. In addition, the new static classes can be used to test other error codes, and thus it will be useful for testing `mainEntry` in another PR for other error codes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4283#issuecomment-361891173:45,test,tests,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4283#issuecomment-361891173,4,['test'],"['test', 'testing', 'tests']"
Testability,"@lbergelson - maybe you can have a look, as you commented in the original issue. As the commit isn't in the repo yet, I cannot test if it is working here. But here are the logs for the commit in the repo where I did the change: https://jitpack.io/com/github/bioinformagik/gatk/6270fa279/build.log",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408047593:127,test,test,127,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-408047593,3,"['log', 'test']","['log', 'logs', 'test']"
Testability,@lbergelson - the last commit works. Check the logs and artifacts in this folder: https://jitpack.io/com/github/bioinformagik/gatk/336d389ecc605f4138226dddda41981f78278e09,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-413108251:47,log,logs,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-413108251,1,['log'],['logs']
Testability,"@lbergelson . I ran the FlagStatSpark tool on a bam with a splitting-index on the hdfs. It ran blazing fast with no delay at all with a total time of 1m41s. So it looks like it must be related to the splits on the cram. I see a similar delay(30-40 min) when testing the StructuralVariationDiscoveryPipelineSpark jobs on 50 crams. Below are some excerpts from the log of the fast FlagStatSpark on the bam. . No delay and tasks start right up....; ```; 18/03/07 20:31:40 INFO cluster.YarnClientSchedulerBackend: Application application_1507317228518_0369 has started running.; 18/03/07 20:31:40 INFO util.Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 41567.; 18/03/07 20:31:40 INFO netty.NettyBlockTransferService: Server created on 10.48.225.55:41567; 18/03/07 20:31:40 INFO storage.BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy; 18/03/07 20:31:40 INFO storage.BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 10.48.225.55, 41567, None); 18/03/07 20:31:40 INFO storage.BlockManagerMasterEndpoint: Registering block manager 10.48.225.55:41567 with 8.4 GB RAM, BlockManagerId(driver, 10.48.225.55, 41567, None); 18/03/07 20:31:40 INFO storage.BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 10.48.225.55, 41567, None); 18/03/07 20:31:40 INFO storage.BlockManager: Initialized BlockManager: BlockManagerId(driver, 10.48.225.55, 41567, None); 18/03/07 20:31:40 INFO handler.ContextHandler: Started o.e.j.s.ServletContextHandler@4d9cf71d{/metrics/json,null,AVAILABLE}; 18/03/07 20:31:48 INFO cluster.YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (192.168.18.186:36002) with ID 8; 18/03/07 20:31:48 INFO cluster.YarnSchedulerBackend$YarnDriverEndpoint: Registered executor NettyRpcEndpointRef(null) (192.168.18.196:45956) with ID 2; 18/03/07 20:31:48 INFO storage.BlockManagerMasterEndpoint: Registering block manag",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4506#issuecomment-371353888:258,test,testing,258,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4506#issuecomment-371353888,2,"['log', 'test']","['log', 'testing']"
Testability,"@lbergelson . I've run a few more tests, and found the following table. ```; NIO_VER	403_DENIED_PROJECT_ID; 99	685190392835; 98	685190392835; 97	685190392835; 96	539774316296; 95	685190392835; 94	685190392835; 93	539774316296; 92	685190392835; 91	539774316296; 90	539774316296; 89	PASS; 88	PASS; 87	PASS; 86	PASS; 85	PASS; ```; Googling both of the two mysterious project IDs, I landed onto tests by this Fiji project ([here](https://travis-ci.com/seomoz/fiji/jobs/43151327) and [here](https://travis-ci.com/seomoz/fiji/jobs/43513954)).; I parsed the test log and found the relevant part (for ID `685190392835`). ```; ""gce"":{. ""instance"":{; ""attributes"":{; ""startup-script"":""#!/usr/bin/env bash\necho poweroff | at now + 130 minutes\ncat > ~travis/.ssh/authorized_keys <<EOF\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDdzVnIEg2ribEvhEvFjR9IFPAkIVtQwZhlgUAHu1BgjBugFRiqg3eaPMOeOuIZBvzwoyotHIVp3XvAfivGyCW4Ke7+2cqlcX1L8kcmoWLm2fdLGlLr/lZnAjQtexMC76uLtR8udqWA0e2sqrSJs4H/blOQmHWPrl/VSG7daoVptzqXihRmXN+/Huo7mTxAjTUEjk4IOBn7sv7G5qLrEPv78AJIZhWHdhUTGLvx+YpzQvX8pE53TMi9W4ovkZTCwhSO3WYyBOY7H1xjeYb9XWTeP563Du1b0JMpQgtFLQUVXio9NzXZE55ovvGDRSLds+VfPsv4G/Whhq76dEZ+wZO3\n\nEOF\n""; },; ""cpuPlatform"":""Intel Haswell"",; ""description"":""Travis CI python test VM"",; ""disks"":[{""deviceName"":""persistent-disk-0"",""index"":0,""mode"":""READ_WRITE"",""type"":""PERSISTENT""}],; ""hostname"":""testing-gce-ec8614d2-40a2-4138-801e-d42d811590a2.c.travis-ci-prod-2.internal"",; ""id"":8221730359445041428,; ""image"":"""",; ""licenses"":[{""id"":""1000010""}],; ""machineType"":""projects/685190392835/machineTypes/n1-standard-2"",; ""maintenanceEvent"":""NONE"",; ""networkInterfaces"":[{""accessConfigs"":[{""externalIp"":""104.198.203.242"",""type"":""ONE_TO_ONE_NAT""}],""forwardedIps"":[],""ip"":""10.128.0.163"",""network"":""projects/685190392835/networks/default""}],; ""scheduling"":{""automaticRestart"":""TRUE"",""onHostMaintenance"":""MIGRATE"",""preemptible"":""FALSE""},; ""serviceAccounts"":{; ""685190392835-compute@developer.gserviceaccount.com"":{; ""aliases"":[""default""],; ""email"":""685",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-513242018:34,test,tests,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-513242018,4,"['log', 'test']","['log', 'test', 'tests']"
Testability,"@lbergelson .fai and .dict index were downloaded/created using the Picard from the gzipped genome downloaded from genbank: [here](ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/001/405/GCA_000001405.15_GRCh38/seqs_for_alignment_pipelines.ucsc_ids/). Picard didn't throw any error and worked with the gzipped file without problem. When I tried to run `gatk SplitNCigarReads` (and solved all the problems with missing `.fai` and `.dict`, `gatk` does inform me about these well enough to solve it), I got the following error:. [error.log](https://github.com/broadinstitute/gatk/files/4613491/error.log). I get yet another error with a different gzipped genome (yeah, I kind of don't know what exact reference was used to map this thing). After unpacking, it seems to run quite well and not just fail.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6590#issuecomment-627111739:531,log,log,531,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6590#issuecomment-627111739,2,['log'],['log']
Testability,"@lbergelson ; Tested working. ```bash; #!/bin/bash. set -eu. echo ""==============================""; export CRAM_BUCKET=""gs://broad-dsde-methods-shuang/tmp/test/""; gsutil ls -l -h ""${CRAM_BUCKET}""; echo ""=============================="". # on Louis branch containing NIO 100; echo ""==============================""; export GATK_DIR=""/Users/shuang/GATK/gatk""; export CLUSTER_NAME=""shuang-nio-100""; cd ""${GATK_DIR}"" && git pull && git checkout lb_update_nio && \; ./gradlew clean installAll && \; cd scripts/sv/ && \; bash create_cluster.sh \; ""${GATK_DIR}"" \; broad-dsde-methods \; ""${CLUSTER_NAME}"" \; 3h \; 120m \; gs://broad-dsde-methods-sv/reference/GRCh38/ \; ""${CRAM_BUCKET}"" \; gs://broad-dsde-methods-shuang/init/default_init.sh; echo ""=============================="". # on master (expected to fail); echo ""==============================""; export GATK_DIR=""/Users/shuang/GATK/forks/GatkFork""; export CLUSTER_NAME=""shuang-nio-81""; cd ""${GATK_DIR}"" && git checkout master && git fetch upstream && git rebase upstream/master && \; ./gradlew clean installAll && \; cd scripts/sv/ && \; bash create_cluster.sh \; ""${GATK_DIR}"" \; broad-dsde-methods \; ""${CLUSTER_NAME}"" \; 3h \; 120m \; gs://broad-dsde-methods-sv/reference/GRCh38/ \; ""${CRAM_BUCKET}"" \; gs://broad-dsde-methods-shuang/init/default_init.sh; echo ""==============================""; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-511985465:14,Test,Tested,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6042#issuecomment-511985465,2,"['Test', 'test']","['Tested', 'test']"
Testability,"@lbergelson @KevinCLydon This branch now passes all tests, is rebased onto the latest master, and is (finally) using the official GATK Python environment rather than the custom NVIDIA-provided one. I had to add two additional Python dependencies to our environment, and make some small modifications to the Python code to account for a newer version of pytorch-lightning that was required. The final outstanding issue in this PR is that I had to temporarily comment out the Jacoco coverage report code in our build.gradle and dockertest.gradle files, due to a bizarre problem where Jacoco was attempting to read/parse the new Pytorch model files added in this branch. This will have to be resolved before we can merge (or we might have to permanently disable Jacoco if it can't be...). After this is merged, there will have to be a second PR that adds the CNN tools to the `DeprecatedToolsRegistry`, and actually removes the legacy tools. When we do this, we need to be careful not to remove the expected CNN output files used by the new NVScoreVariants integration tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-2402661408:52,test,tests,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-2402661408,2,['test'],['tests']
Testability,"@lbergelson @droazen @davidbenjamin any thoughts on the best way to update the unit test data? I tried a few, but it is extremely laborious, and it takes 35 minutes for travis-ci to show me the next test failure. What's your best way of updating the ""expected"" VCFs?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430829037:84,test,test,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430829037,2,['test'],['test']
Testability,"@lbergelson @droazen @kgururaj ; 1. I was playing around with the test codes in GATK and did not push GenomicsDB tests in this PR. Will push it in the next commit.; 2. This is at the top of our discussion list for next week. GenomicsDB interfaces use these JSON files today which contain input configuration, list of samples, mapping between sample IDs and TileDB row indexes and stream ids for the input VCFs. If this tool takes the list of VCFs and intervals as input, we'd have to recreate JSON files internally and pass it to GenomicsDB. I wanted to avoid this for now as we are thinking about overhauling the input methodology completely in GenomicsDB with protocol buffers, but this is going to take a while. Also, we need to decide what's the best way to maintain the callset mappings.; 3. Will let you know asap. -Kushal.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-277320579:66,test,test,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-277320579,2,['test'],"['test', 'tests']"
Testability,"@lbergelson @droazen I'm trying to remove the shroud of enigma from this important class, starting by adding a few modest tests and chiseling away unused methods. Ultimately I want to document and write bulletproof tests for the merge methods, but that's for another day. I'm assuming you want PRs like this to go through the engine team. Feel free to send it back without further review if it needs more tests!",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4190:122,test,tests,122,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4190,3,['test'],['tests']
Testability,"@lbergelson @droazen Just noticed the M2 WDL test is failing here---is this similar to the CNV WDL failures you were seeing just before release?. ````; No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.; Check the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received; The build has been terminated; ````. If so, this is definitely something I've seen more frequently lately. Not sure what the remedy is, but would probably be worth looking into soon so we don't lose too much time to intermittent failures.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4118#issuecomment-356754166:45,test,test,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4118#issuecomment-356754166,1,['test'],['test']
Testability,@lbergelson @droazen Rebased and added a test asserting that spaces work as expected.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3982#issuecomment-358107484:41,test,test,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3982#issuecomment-358107484,2,"['assert', 'test']","['asserting', 'test']"
Testability,"@lbergelson @droazen While I was running gradle test, it occurred to me that spark tests are hogging a lot of resources. Each Power8 core can support 8 threads. On a big SMP machine, the statement ""DEFAULT_SPARK_MASTER=local[*]"" means a LOT of spark workers. Since we are running the test on a shared machine, the resource-hungry test is giving other applications some headaches. Is it possible to specify the number of local spark workers via an environmental variable? If the variable is not specified, then we can fall back to default ""local[*]"".",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1761#issuecomment-213613328:48,test,test,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1761#issuecomment-213613328,4,['test'],"['test', 'tests']"
Testability,"@lbergelson @jamesemery I'm on vacation, but saw #7800 and #7801 go by in the gatk4-github Slack channel. Just curious to see if this will work on Travis and/or Github Actions---can you take it from here, if needed?. I've confirmed that this branch works locally in my Ubuntu environment and that `import gcnvkernel` and `import sklearn` both work in the resulting environment (whereas these imports failed in master, although the environment built successfully---this seems to mirror what is happening on test infrastructure in #7800). In contrast, the approach in #7801 doesn't seem to work for me locally, and we've seen that including conda build strings is a bit restrictive. See e.g. https://github.com/broadinstitute/gatk/pull/5026#issuecomment-628860774. . Closes #7800.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7802:506,test,test,506,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7802,1,['test'],['test']
Testability,"@lbergelson @jean-philippe-martin I looked into this it a bit - it can be readily reproduced if the failing test is run through gradle, but not from IntelliJ, which is because when it runs through gradle, its using asyncIO for BAM writing, but when run from IntelliJ its using sync io. I'm not sure why this issue is showing up now, but in the cases that fail, the async writer thread is being interrupted by [this code](https://github.com/samtools/htsjdk/blob/912c28bec415c430b43515652ccaf13222b07e7b/src/main/java/htsjdk/samtools/util/AbstractAsyncWriter.java#L75) which is called from the main thread when the PrintReads closeTool method closes the writer (I added a trace statement to verify this). When I run in IntelliJ and force async io to be used, the interrupt call still happens, but there is no test failure.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3588#issuecomment-330558205:108,test,test,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3588#issuecomment-330558205,2,['test'],['test']
Testability,"@lbergelson @jonn-smith As per offline discussion, I will targz the references and untar as needed. And fix tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4783#issuecomment-391032669:108,test,tests,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4783#issuecomment-391032669,1,['test'],['tests']
Testability,@lbergelson @kgururaj Do we have a test that proves this is resolved? Not sure we should close this if the answer is no...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2636#issuecomment-306338737:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2636#issuecomment-306338737,1,['test'],['test']
Testability,@lbergelson Addressed issues with that test -- please re-review,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/526#issuecomment-104742624:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/526#issuecomment-104742624,1,['test'],['test']
Testability,"@lbergelson Alright, I have responded to all of your comments on the branch and added an explicit interval test (I could not check the same test for .sam files because they are unindexed and don't support interval traversals)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2124#issuecomment-243440036:107,test,test,107,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2124#issuecomment-243440036,2,['test'],['test']
Testability,"@lbergelson As discussed in person, I added an additional test case with a duplicated sample name in different batches, and the tests still passed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3868#issuecomment-347596528:58,test,test,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3868#issuecomment-347596528,2,['test'],"['test', 'tests']"
Testability,"@lbergelson As part of your current set of Spark test runs, can you also test whether this PR appears to work on dataproc?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4314#issuecomment-375064836:49,test,test,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4314#issuecomment-375064836,2,['test'],['test']
Testability,"@lbergelson Back in the GATK3 days, we had a plan in Bamboo that could run the test suite in parallel, with one job per test class, and aggregate the results at the end. This ran in ~15 minutes instead of 2-3 hours, but was prone to intermittent cluster-related failures. I'm wondering if there is a way in travis to do the same thing (or something similar), but in a more reliable way.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1769#issuecomment-214486343:79,test,test,79,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1769#issuecomment-214486343,2,['test'],['test']
Testability,@lbergelson Because `assert` is a reserved keyword. I would also prefer the verb.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2543#issuecomment-290765731:21,assert,assert,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2543#issuecomment-290765731,1,['assert'],['assert']
Testability,@lbergelson Build and test are passing on mac now using clang.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1504#issuecomment-188432394:22,test,test,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1504#issuecomment-188432394,1,['test'],['test']
Testability,@lbergelson Can you provide @kgururaj with your simple test case that replicates this issue?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3814#issuecomment-344285682:55,test,test,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3814#issuecomment-344285682,1,['test'],['test']
Testability,@lbergelson Do we actually have any tests that depend on R besides the RScriptExecutor tests (which don't do much). Also wondering if there would be inconsistencies with Picard R requirements.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4209#issuecomment-359096527:36,test,tests,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4209#issuecomment-359096527,2,['test'],['tests']
Testability,"@lbergelson Do you have an opinion on the best way to pip install the gcnvkernel python package and dependencies for Travis testing? I've verified that the pip install works within a basic conda environment with python=3.6. We'll need to load this environment both for unit/integration tests as well as WDL tests. As long as this is the only python environment we need, I think we can simply use the base environment in the Docker. If more environments are required (e.g., for @lucidtronix), then maybe we'll need to be more clever for unit/integration tests, but we can still load them manually in the scripts that kick off the WDL tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3838#issuecomment-348073948:124,test,testing,124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3838#issuecomment-348073948,5,['test'],"['testing', 'tests']"
Testability,"@lbergelson FWIW I definitely saw this issue at some point in the evolution of the Java 17 branch, though I didn't associate it with the gradle upgrade part of that branch (the Java 17 branch has the same gradle upgrade). IIRC, I later had to update to a newer jetty for other reasons - I think due to some binary incompatibility - but the newer version has a different issue that surfaces only when running on the docker (I think that issue is a variant of a known jetty issue with finding resources in a jar that isn't the main jar). I think I wound up throwing SkipExceptions for 10-15 tests only when running on the docker as a workaround.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8098#issuecomment-1322091023:589,test,tests,589,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8098#issuecomment-1322091023,1,['test'],['tests']
Testability,"@lbergelson FYI - see the links to details of the testNG issues above. Also, I reversed the actual/expected order in the assertEquals call that I changed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2611#issuecomment-296274935:50,test,testNG,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2611#issuecomment-296274935,2,"['assert', 'test']","['assertEquals', 'testNG']"
Testability,"@lbergelson For the `isinf` error, let's try this change in common_data_structure.h. ```; - if (isinf(small) == -1 || isinf(big) == -1); + if (std::isinf(small) == -1 || std::isinf(big) == -1); ```. The gettime related errors are because mac doesn't support clock_gettime ([discussion here](http://stackoverflow.com/questions/5167269/clock-gettime-alternative-in-mac-os-x)). The code in util.cc is part of some unused sandbox code, which can be removed. Try this command to check for AVX support on mac. ```; sysctl -a | grep machdep.cpu.features; ```. I'll try to get access to a mac to help the build debug go faster.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1504#issuecomment-187840330:418,sandbox,sandbox,418,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1504#issuecomment-187840330,1,['sandbox'],['sandbox']
Testability,@lbergelson I added a jimfs test to ReferenceFileSourceUnitTest. While I was there I also discovered there's not just `enging.ReferenceFileSource` but also `engine.datasources.ReferenceFileSource`. I updated the latter a little bit so it would work with `Path`s.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3921#issuecomment-349719673:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3921#issuecomment-349719673,1,['test'],['test']
Testability,"@lbergelson I added an integration test that writes to GCS... it doesn't work for me (""com.google.cloud.storage.StorageException (...) does not have storage.objects.get access to (...)""). This may be due to a misconfiguration on my end. I wonder if it'll work with Travis.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-334877523:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-334877523,1,['test'],['test']
Testability,"@lbergelson I added the ClassLoader fallback code in to `GATKPathSpecifier`. In doing so, I expected some of the `PathSpecifier` negative unit tests to produce different exceptions, but they didn't. This was because the tests were all using the `PathSpecifier` base class (because I took them from htsjdk-next which has only the base implementation). So I updated the tests to use `GATKPathSpecifier` (they all passed), then integrated the fallback code and changed 3 negative tests that went from FileSystemNotFoundException to ProviderNotFoundException. Finally I renamed the test class file to correctly reflect the class being tested. Sorry this was such a pain.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5526#issuecomment-457751714:143,test,tests,143,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5526#issuecomment-457751714,6,['test'],"['test', 'tested', 'tests']"
Testability,"@lbergelson I addressed all your comments. I had some difficulty reconciling the list of Strings for annotation names to remove with the List<Annotation> for the getDefaultVariantAnnotations update, so there may be a few tests failing because the RAW_MQ header disappeared. I'll deal with those when Travis is done, but could you take a look at the other changes?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4940#issuecomment-402273063:221,test,tests,221,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4940#issuecomment-402273063,1,['test'],['tests']
Testability,"@lbergelson I addressed your comments, cleaned up the code, and wrote tests. I removed UMI.java and UMIReadFilter.java. They will likely come back in a future PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6512#issuecomment-617454559:70,test,tests,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6512#issuecomment-617454559,1,['test'],['tests']
Testability,"@lbergelson I agree with you about moving tests up, though I would make the point that there were many tests that got pushed down in the first place because they would involve fixing bugs in MarkDuplicatesGATK that were already fixed in MarkDuplicatesSpark, I will audit the ones I did and didn't push up so i'm more confident there is a reason to have tests pushed down or not.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5166#issuecomment-419550902:42,test,tests,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5166#issuecomment-419550902,3,['test'],['tests']
Testability,"@lbergelson I disagree -- it's very clear to me that those tests will trigger Google authentication, just by tracing through the code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2706#issuecomment-300806909:59,test,tests,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2706#issuecomment-300806909,1,['test'],['tests']
Testability,"@lbergelson I ended up deciding to default to a '*' for empty NM tags, which is not supported and will cause an exception with the htsjdk SAMUtils.getOtherCannonicalAlignments() but I was able to test around it in this class.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2133#issuecomment-243794267:196,test,test,196,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2133#issuecomment-243794267,1,['test'],['test']
Testability,"@lbergelson I fixed the PL wiggle in the failing test. Think you could review before 4.1? Or maybe @droazen will look again? (Getting it in would be nice, but not critical.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4947#issuecomment-453157113:49,test,test,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4947#issuecomment-453157113,1,['test'],['test']
Testability,@lbergelson I implemented the JEXL filter matching introduced in htsjdk 2.8.1. The test now works as expected.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2323#issuecomment-272504875:83,test,test,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2323#issuecomment-272504875,1,['test'],['test']
Testability,"@lbergelson I just tested with one of our variants in the test suite for HaplotyeCaller (specifically `20	10098219	.	TATATATA	T,<NON_REF>`) and its definately the case that HaplotypeCaller will still output that variant even if you place the -L interval boundary inside the variant (like say at `10098221`) but it will fail to call that same deletion if you make the start of your interval anything but the first base of that deletion. . The HaplotypeCaller has its own filtering at Haplotype->Allele->Genotyper layer that restricts it to only calling alleles that START within the active region (excluding padding) which makes it impossible to output deletions starting before the provided intervals even if they overlap into the specified region. The HaplotypeCaller will however output deletions that go past the end of the provided -L intervals so long as they begin within the intervals in question. The HaplotypeCaller is hopelessly fickle and everything within a few thousand bases of the edge of the calling intervals is subject to start-position/calling failures and any given site may or may not disappear to assembly failures when close to the edge. Adjusting these settings at the VCF writer level could prevent the latter case from occurring (by filtering them with some strict setting to prevent deletions from overhanging the end of the -L region) but it cannot ever allow the former case to exist (that is to say it will never force a deletion from a few bases before the interval to be called by HaplotypeCaller since it will never send that allele to the genotyper under any circumstance). ; ; I would say that your branch adds an entirely new and subtle way for users to get confused about what the HaplotypeCaller is actually doing under the hood and why they did or didn't see a particular variant so we should tread carefully.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6339#issuecomment-908689670:19,test,tested,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6339#issuecomment-908689670,2,['test'],"['test', 'tested']"
Testability,@lbergelson I refactored the common logic into a utility class. Please take a look.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1871#issuecomment-243942141:36,log,logic,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1871#issuecomment-243942141,1,['log'],['logic']
Testability,"@lbergelson I think it doesn't actually need to implement max and min at all because those are only used in unit tests. Furthermore, the `kmerCounts` in `AssemblyResultSet` themselves are only used in such methods i.e. they don't need to be members at all. You could delete `CountSet` entirely without replacing it. And even if you keep it there it is definitely not crucial for performance and could easily be any old `SortedSet`. So, the options are 1) replace with `TreeSet` or whatever; 2) delete entirely. Which would you like?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2890#issuecomment-397398169:113,test,tests,113,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2890#issuecomment-397398169,1,['test'],['tests']
Testability,@lbergelson I think this is done? I have gotten rid of most of the references to travis left in the repo and this Appears to be working. I have left in a broken test to demonstrate that hte warning script works.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7754#issuecomment-1093227391:161,test,test,161,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7754#issuecomment-1093227391,1,['test'],['test']
Testability,@lbergelson I think this is ready and I fixed the biggest problem which was the forked-PR submissions. I have it functioning like it did in travis now (that is to say no posting/uploading except the artifact and skipping the cloud tests). You can see my test branch here: https://github.com/broadinstitute/gatk/actions/runs/2173571290. Can you re-review so hopefully we can merge?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7754#issuecomment-1100266315:231,test,tests,231,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7754#issuecomment-1100266315,2,['test'],"['test', 'tests']"
Testability,"@lbergelson I understand the change of userClassPathFirst can cause problems.; About the new parameter, I shouldn't have ""pull request"" it. It's absolutly unnecessary as `--conf 'spark.submit.deployMode=cluster'` works. Plus, as you said, it's hardcoded...; About #3933, I didn't retry the `-- --deploy-mode` solution after my userClassPathFirst modification. I added the parameter in my fork to test. I still think it's important to have it in gatk's parameters because it's simple for users, but it's not an emergency. For me, the userClassPathFirst change is important. Or a parameter to specify it. Without it, I can't get my jobs to work in cluster mode.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3946#issuecomment-351440051:396,test,test,396,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3946#issuecomment-351440051,1,['test'],['test']
Testability,"@lbergelson I updated to the latest 2.x Mockito and that fixed the problem. The only failing test now is FuncotatorIntegrationTest#nonTrivialLargeDataValidationTest. The output VCF differs in the `FUNCOTATION` annotation, and it’s to do with ordering of the fields. E.g. it will be. ```; 1_%7C_1|false_%7C_false|false_%7C_false; ```; not; ```; false_%7C_false|1_%7C_1|false_%7C_false; ``` . It looks like it could be a case of using HashSet not LinkedHashSet, or HashMap not LinkedHashMap - but a quick replace throughout the GATK and HTSJDK codebase didn’t fix the problem.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-532593427:40,Mock,Mockito,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6119#issuecomment-532593427,2,"['Mock', 'test']","['Mockito', 'test']"
Testability,"@lbergelson I uploaded the sharded BAM to https://console.cloud.google.com/storage/browser/gatk-tom-testdata/out/bqsr-sharded/?project=broad-gatk-collab. I also did some more debugging and got the following information about the (first) read that is failing:. ```; Caused by: java.lang.IllegalArgumentException: contig must be non-null and not equal to *, and start must be >= 1; .Bad read: HK35MCCXX160204:3:1204:16082:6812161GL000208.110030113S24M14SX617308030TTTACTTTTCCA; ACGAATAACTCACAGAGGTCCAAATATACACCATCAGATACTACAACAGGAGAGCTTCATTCCTGCCCTGTCAAAAGACATCTTCAACCCTATTAGTCGACTGCACACATCTCAATGAAGTTCCTCAGACGACTTCTGC,BB@; ?CBBBAA<7;->.5=B.AA-&6'=='50=?C;<+5;@C@(-C=C@CC@;A@@C6&C4(-(-(/7,(-A<<=B?A*9:(-2.<<=:@;C-)76?C8<###################################################MC:Z:45S106MMD:Z:24PG:Z:MarkDuplicates.1FRG:Z:HK35M.3NM:i:0MQ:i:37OQ:Z:,AFAFKKKFKKAAF<A,7AKAFK,,7,AF,77FFF<A,7AKKK,,FFKKKFFFKKKK7,F<,,; ,,,77,,,FAFFAFK,A7(,7,A<AAAFF,,77FK7F###################################################UQ:i:0AS:i:24. Clipped Read: HK35MCCXX160204:3:1204:16082:6812161GL000208.110030100S51HX617308030TTTACTTTTCCAACGAATAA; CTCACAGAGGTCCAAATATACACCATCAGATACTACAACAGGAGAGCTTCATTCCTGCCCTGTCAAAAGACATCTTCAAC,BB@?CBBBAA<7;->.5=B.AA-&6'=='50=?C;<+5;@C@(-C=C@CC@;A@@C6&C; 4(-(-(/7,(-A<<=B?A*9:(-2.<<=:@;C-)76?C8<MC:Z:45S106MMD:Z:24PG:Z:MarkDuplicates.1FRG:Z:HK35M.3NM:i:0MQ:i:37OQ:Z:,AFAFKKKFKKAAF<; A,7AKAFK,,7,AF,77FFF<A,7AKKK,,FFKKKFFFKKKK7,F<,,,,,77,,,FAFFAFK,A7(,7,A<AAAFF,,77FK7F###################################################UQ:i; :0AS:i:24. at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.AssemblyBasedCallerUtils.finalizeRegion(AssemblyBasedCallerUtils.java:91); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.AssemblyBasedCallerUtils.assembleReads(AssemblyBasedCallerUtils.java:246); at org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCallerEngine.callRegion(HaplotypeCallerEngine.java:493); at org.broadinstitute.hellbender.tools.HaplotypeCallerSpark.la",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3013#issuecomment-308145149:100,test,testdata,100,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3013#issuecomment-308145149,1,['test'],['testdata']
Testability,"@lbergelson I was a little surprised too, but the unit test that's failing is a dumb test. The header description had been copied into the test itself, so I extracted it as a static constant. The integration test for GVCFs checks headers, which, after some internal debate, I think is fair. And there's David's handy exact match update, so fixing it is super easy.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6431#issuecomment-581435478:55,test,test,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6431#issuecomment-581435478,4,['test'],['test']
Testability,"@lbergelson I was able to get the auth set up right for the integration test (locally). It fails in a few places because some combinations are not supported.; *edit* I spoke too soon, that was a bug in the test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-336530831:72,test,test,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-336530831,2,['test'],['test']
Testability,@lbergelson I've created a fix for this here: https://github.com/HadoopGenomics/Hadoop-BAM/compare/master...tomwhite:bam-split-guesser-fix. @achevali are you able to test the fix? There are instructions on how to run against a locally built Hadoop-BAM here: https://github.com/broadinstitute/gatk/wiki/Build-GATK-with-a-locally-built-htsjdk-or-Hadoop-BAM.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2113#issuecomment-248678742:166,test,test,166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2113#issuecomment-248678742,1,['test'],['test']
Testability,"@lbergelson I've made the change, merged the code and am in the process of re-running the test. Will make another PR shortly. I am fine for not passing cloud tests, if you guys think it's OK.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1761#issuecomment-213600618:90,test,test,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1761#issuecomment-213600618,2,['test'],"['test', 'tests']"
Testability,@lbergelson I've released spark-dataflow 0.2.0 with an update for the latest dataflow version. If you incorporate https://github.com/tomwhite/hellbender/commit/7b4caaac36515b8da0dd9fb197c7cf4cd351ec49 into this PR all the Spark tests should pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/582#issuecomment-113775473:228,test,tests,228,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/582#issuecomment-113775473,1,['test'],['tests']
Testability,"@lbergelson I've reverted the default stringency to SILENT. As for the Picard tools, I asked @droazen about unifying their arg names with this last week and he suggested we wait until we resolve https://github.com/broadinstitute/gatk/issues/1210 before we do that (though I'm happy to do it now if thats the decision). As for the BQSR tests, that issue is unrelated to this PR other than that I discovered the tests fail with stringency STRICT in the course of testing this PR. If we want to fix those, I'd prefer to make that a separate ticket.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1439#issuecomment-175241710:335,test,tests,335,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1439#issuecomment-175241710,3,['test'],"['testing', 'tests']"
Testability,"@lbergelson If this PR is being blocked by the variant test I requested during review, I'd be ok with merging it with only the reads test (and the variant test included but disabled), and a ticket to re-enable it later.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3767#issuecomment-343302261:55,test,test,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3767#issuecomment-343302261,3,['test'],['test']
Testability,"@lbergelson If you query for output after you've terminated the process, the query will fail immediately because the Futures will have been completed with a CancellationException when the pipes were broken by the termination. But I think even that might be subject to a race condition. Previously we were dependent on stdout/stderr for synchronization and error detection, but with the ack fifo and the python exception handler installed, we really aren't anymore. We do need to fix https://github.com/broadinstitute/gatk/issues/5100, and have a better logging integration strategy, but in general I think we should seek to eliminate all use of stdout/stderr except for advisory purposes. On a separate tangent, what I'd really like to do is unify the two PythonExecutors into a single one. All of these features I'm adding like profiling, version checking, logging integration etc., will have to be done in both of them otherwise.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698:553,log,logging,553,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5097#issuecomment-413575698,2,['log'],['logging']
Testability,@lbergelson Is there a way we can test this fix?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3400#issuecomment-319705302:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3400#issuecomment-319705302,1,['test'],['test']
Testability,@lbergelson Is this good to merge when tests pass?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5656#issuecomment-462507730:39,test,tests,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5656#issuecomment-462507730,1,['test'],['tests']
Testability,"@lbergelson Is this issue done, I was looking for things to contribute to, and was going to add these tests, but it looks like they are already there.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2158#issuecomment-266045994:102,test,tests,102,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2158#issuecomment-266045994,1,['test'],['tests']
Testability,@lbergelson Looks good to me -- go ahead and merge once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6526#issuecomment-613696026:56,test,tests,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6526#issuecomment-613696026,1,['test'],['tests']
Testability,@lbergelson Looks like i accidentally reactivated that test. The forward port of https://github.com/broadinstitute/gsa-unstable/pull/1541 broke that test as its now actually calculating something different entirely. I'll change it to properly reflect the new output.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3527#issuecomment-326651102:55,test,test,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3527#issuecomment-326651102,2,['test'],['test']
Testability,@lbergelson Looks like tests failed?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5308#issuecomment-430038245:23,test,tests,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5308#issuecomment-430038245,1,['test'],['tests']
Testability,@lbergelson Looks like we have a failure in `BigQueryUtilsUnitTest`:. ```; testQueryWithStorageAPI; java.lang.IllegalStateException: getTransportChannel() called when needsExecutor() is true; 	at com.google.api.gax.grpc.InstantiatingGrpcChannelProvider.getTransportChannel(InstantiatingGrpcChannelProvider.java:194); 	at com.google.api.gax.rpc.ClientContext.create(ClientContext.java:241); 	at com.google.cloud.bigquery.storage.v1beta1.stub.EnhancedBigQueryStorageStub.create(EnhancedBigQueryStorageStub.java:108); 	at com.google.cloud.bigquery.storage.v1beta1.BigQueryStorageClient.<init>(BigQueryStorageClient.java:144); 	at com.google.cloud.bigquery.storage.v1beta1.BigQueryStorageClient.create(BigQueryStorageClient.java:125); 	at com.google.cloud.bigquery.storage.v1beta1.BigQueryStorageClient.create(BigQueryStorageClient.java:116); 	at org.broadinstitute.hellbender.utils.bigquery.StorageAPIAvroReader.<init>(StorageAPIAvroReader.java:51); 	at org.broadinstitute.hellbender.utils.bigquery.StorageAPIAvroReader.<init>(StorageAPIAvroReader.java:45); 	at org.broadinstitute.hellbender.utils.bigquery.BigQueryUtils.executeQueryWithStorageAPI(BigQueryUtils.java:394); 	at org.broadinstitute.hellbender.utils.bigquery.BigQueryUtils.executeQueryWithStorageAPI(BigQueryUtils.java:370); 	at org.broadinstitute.hellbender.utils.bigquery.BigQueryUtilsUnitTest.testQueryWithStorageAPI(BigQueryUtilsUnitTest.java:74); ```. I suspect we need to bump our BigQuery dependency in this PR as well -- I'll attempt it.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1051025679:75,test,testQueryWithStorageAPI,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7700#issuecomment-1051025679,3,"['stub', 'test']","['stub', 'testQueryWithStorageAPI']"
Testability,@lbergelson Main goals of this epic:. * Hook up `BWASpark` and `HaplotypeCallerSpark` to `ReadsPipelineSpark`; * Benchmark `ReadsPipelineSpark` against running the spark tools individually; * Better/more consistent GCS support (either via the gcs-connector or NIO); * Better/more visible cluster-based testing for Spark (possibly on travis); * Fix the most serious/embarrassing Spark bugs,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3393#issuecomment-319408334:113,Benchmark,Benchmark,113,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3393#issuecomment-319408334,2,"['Benchmark', 'test']","['Benchmark', 'testing']"
Testability,@lbergelson No problem and thanks you. If I find out some other issues ( I'm going to test some Spark tools) on my side I'll say it to you.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3946#issuecomment-358243884:86,test,test,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3946#issuecomment-358243884,1,['test'],['test']
Testability,"@lbergelson No, I've never seen this issue locally. Declaring the encoding rather than leaving it to the platform sounds like a good idea, but if we declare it to always be UTF-8, these non-ASCII UTF-8 chars would be allowed in the source and javadoc (although I guess thats happening now anyway). Other than the rare case where we deliberately need non-ASCII chars for test purposes or such (like I recently needed in the htsjdk VCF 4.3 PR), it would be nice if we could keep them out of the source, especially for cases like this where the displayed glyph is hardly distinguishable from the intended one.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5936#issuecomment-492758643:370,test,test,370,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5936#issuecomment-492758643,1,['test'],['test']
Testability,"@lbergelson Not having these full references available is a significant drag on development, has wasted massive amounts of both Jonn's and Steve's time (and others too), and resulted in inferior tests compared to what we could have. I think this outweighs the other considerations you mention. I think that we can afford the extra lfs usage purely from a quota perspective given that we've just cut total usage in ~half. Removing or compressing some existing files should help quite a bit as well, as you suggested.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423628659:195,test,tests,195,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423628659,1,['test'],['tests']
Testability,@lbergelson Not sure we should merge this until we solve the intermittent timeout issue in the docker tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2804#issuecomment-305921296:102,test,tests,102,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2804#issuecomment-305921296,1,['test'],['tests']
Testability,"@lbergelson Please address the code review comments in a separate PR, since they mainly have to do with comments and testing -- I'm merging this as-is for now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4286#issuecomment-361620308:117,test,testing,117,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4286#issuecomment-361620308,1,['test'],['testing']
Testability,"@lbergelson Please take a look if you can. This gets the builds passing again, so I'm planning to merge it once the tests pass for a final time.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3557#issuecomment-328102781:116,test,tests,116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3557#issuecomment-328102781,1,['test'],['tests']
Testability,"@lbergelson Recommend that we take the quickest path to getting tests passing again, as several people are waiting to merge their PRs in time for the next release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6072#issuecomment-517653969:64,test,tests,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6072#issuecomment-517653969,1,['test'],['tests']
Testability,@lbergelson Removed the broken tests. The problem stemmed from markDuplicatesGATK being out of date. Since we are removing to remove it soon anyway i figured we would have the test only apply for markDuplicatesSpark,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5023#issuecomment-413289284:31,test,tests,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5023#issuecomment-413289284,2,['test'],"['test', 'tests']"
Testability,"@lbergelson Responded to comments and fixed the broken tests. It now strips out non-RG annotations before it goes to write the output, which is slightly more useful from a space/speed perspective.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4894#issuecomment-397710551:55,test,tests,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4894#issuecomment-397710551,1,['test'],['tests']
Testability,@lbergelson Responded to comments. I added an albeit weak test of the output for sanity. Also fixed some stuff i neglected when pushing this before,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4894#issuecomment-397066880:58,test,test,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4894#issuecomment-397066880,1,['test'],['test']
Testability,"@lbergelson So, the test failures are in `ScoreVariantAnnotationsIntegrationTest` and `TrainVariantAnnotationsModelIntegrationTest`, when run within the conda environment in the new docker image. I've confirmed that they happen with both Ubuntu 22.04 and 20.04. They are assertion failures from `h5diff` indicating that the actual outputs did not match the expected outputs, so there are likely actual numerical differences here. Most likely the newer Ubuntu releases are shipping with newer versions of native libraries that HDF5 (or some other GATK dependency) depends on, and there was some breaking change somewhere along the line. . I think our only option is to capture the outputs of these tests, and ask @samuelklee to confirm that the differences do not indicate an actual regression.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8610#issuecomment-1848740833:20,test,test,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8610#issuecomment-1848740833,3,"['assert', 'test']","['assertion', 'test', 'tests']"
Testability,"@lbergelson Sorry for all the problems! Apart from the fact that I had forgotten to publish the parent pom, I'm not a gradle user. Had no idea you have to explicitly call 'test' to run (or even compile) the tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3970#issuecomment-352170651:172,test,test,172,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3970#issuecomment-352170651,2,['test'],"['test', 'tests']"
Testability,"@lbergelson Thank you for reviewing. `FeatureDataSource.getGenomicsDBFeatureReader()` passes the default vcf header name to `GenomicsDBFeatureReader()` - and I've updated the GenomicsDB integration tests for clarity. If I've misunderstood your previous comment and other changes to `FeatureDataSource.getGenomicsDBFeatureReader()` are required, I can make these updates.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3994#issuecomment-354856711:198,test,tests,198,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3994#issuecomment-354856711,1,['test'],['tests']
Testability,"@lbergelson Thanks for the review - I think I've addressed everything, and tests are running now. Let me know if you have any more comments/responses - I'd like to get this merged today if possible to unblock VQSR-CNN.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3872#issuecomment-353359761:75,test,tests,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3872#issuecomment-353359761,1,['test'],['tests']
Testability,@lbergelson The branch just needed a rebase -- re-running tests now,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8889#issuecomment-2195425674:58,test,tests,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8889#issuecomment-2195425674,1,['test'],['tests']
Testability,"@lbergelson The instructions in our README are up-to-date, I believe:. ```; Running GATK4 with inputs on Google Cloud Storage:; ...; Install Google Cloud SDK; Log into your account:; gcloud auth application-default login; Done! GATK will use the application-default credentials you set up there.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2660#issuecomment-299289808:159,Log,Log,159,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2660#issuecomment-299289808,2,"['Log', 'log']","['Log', 'login']"
Testability,"@lbergelson The situation is rather odd: you seem to have **both** a file **and** a folder named ""`gs://hellbender/test/resources/parallel_copy/`"". Observe the first line of output:. ```bash; $ gsutil ls gs://hellbender/test/resources/parallel_copy/; gs://hellbender/test/resources/parallel_copy/; gs://hellbender/test/resources/parallel_copy/bar.txt; gs://hellbender/test/resources/parallel_copy/foo.txt; ```. The file exists and is empty. For evidence, observe that I can cat the file (note how it behaves differently from normal folders):. ```bash; $ gsutil cat gs://hellbender/test/resources/; CommandException: No URLs matched: gs://hellbender/test/resources/; $ gsutil cat gs://hellbender/test/resources/parallel_copy/; $; ```. So NIO is technically correct, `gs://hellbender/test/resources/parallel_copy/` is a file. Did you do anything unusual with regards to this path?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5546#issuecomment-450400675:115,test,test,115,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5546#issuecomment-450400675,9,['test'],['test']
Testability,@lbergelson The trouble with the large tests is that they can be automatically generated and have lots of output so it's hard to check the details. Do you have an example of where this was causing an error before? If so we can build a unit or integration test out of that variant to ensure this doesn't regress. If you can provide that kind of a locus I could go in and add in a test for it.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6178#issuecomment-534637031:39,test,tests,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6178#issuecomment-534637031,3,['test'],"['test', 'tests']"
Testability,"@lbergelson The ~370 MB of files added under `src/test/resources/large/filteringJointVcf` appear to be test data from an older version of VQSR Lite that are no longer referenced. I [deleted these files](https://github.com/broadinstitute/gatk/pull/8258/files) and that seems to have been enough to bring disk usage back under the limit, with no tests upset by their absence.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8256#issuecomment-1480202501:50,test,test,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8256#issuecomment-1480202501,3,['test'],"['test', 'tests']"
Testability,@lbergelson They are set even when running the non-cloud part of the test matrix?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2404#issuecomment-279083876:69,test,test,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2404#issuecomment-279083876,1,['test'],['test']
Testability,"@lbergelson This was on intelliJ. Of course it's also important for tests to work there, since that's what I usually check. Adding the global ban on guava-jdk5 as I do in #867 appears to fix this problem for good.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/866#issuecomment-135525211:68,test,tests,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/866#issuecomment-135525211,1,['test'],['tests']
Testability,"@lbergelson We can't, unfortunately -- in order to write good Funcotator tests we need b37/hg19 as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423630341:73,test,tests,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423630341,1,['test'],['tests']
Testability,@lbergelson We were just talking about this. Thanks to @skwalker's HaplotypeCaller tie out I think it's close. Question for the engine team: this is going to break several integration tests. What would you suggest doing?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-377359265:184,test,tests,184,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4614#issuecomment-377359265,1,['test'],['tests']
Testability,"@lbergelson We'll change the default to 10 in a separate PR, since that change could wreak havoc in the tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2314#issuecomment-287868842:104,test,tests,104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2314#issuecomment-287868842,1,['test'],['tests']
Testability,"@lbergelson Were you running the entire test suite, or some smaller subset of the tests? What was the command you used to run the tests when you got this exception?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6745#issuecomment-671478781:40,test,test,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6745#issuecomment-671478781,3,['test'],"['test', 'tests']"
Testability,@lbergelson With that assuming that last commit didn't break everything I think thats all the comments at least explicitly punted on. Its running all the tests. I intend to open issues on merge of this for two lingering problems: ; 1. figuring out how to get fork-pr branches to work without crashing ; 2. refactoring the wdl tests to use the docker image that is being built for docker images (note this is probably contingent on our answer for 1 since currently the docker upload and pull path breaks without secrets...),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7754#issuecomment-1098463662:154,test,tests,154,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7754#issuecomment-1098463662,2,['test'],['tests']
Testability,"@lbergelson Would you mind looking at this one? This branch started when I was working on our assembly and genotyping windows and ran into dead ends because the clipping code was indecipherable. i.e. as Laura put it it's fighting dragons and not fighting windmills. The diff looks intimidating but I took great pains to make the commit history reviewer-friendly. Every commit is self-contained. Also, only three commits are particularly demanding: CigarBuilder class, greatly simplified hard and soft clipping methods in ClippingOp, and sped a very wasteful test util for generating many cigar permutations. Most of the other commits are rubber-stampable.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6403:558,test,test,558,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6403,1,['test'],['test']
Testability,"@lbergelson Yeah, so the test was broken because it was assuming that the pairedEnds y value was getting truncated. Now that test is running on two reads that are ACTUALLY close enough for comparison.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4750#issuecomment-388442661:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4750#issuecomment-388442661,2,['test'],['test']
Testability,"@lbergelson Yes - this test is a leftover artifact of the original implementation, but we're no longer dependent on the features tested it so its fine to remove.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5537#issuecomment-451021915:23,test,test,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5537#issuecomment-451021915,2,['test'],"['test', 'tested']"
Testability,"@lbergelson You are correct. Let us do a bit more research to see if we can get GKL to log properly to both GATK 3 and 4. If not, we might have to go the route of having a GKL specific to GATK 3. Can we leave this PR open for now?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3416#issuecomment-320745313:87,log,log,87,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3416#issuecomment-320745313,1,['log'],['log']
Testability,@lbergelson You somehow have a HaplotypeCallerSpark test failure in this branch,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639116367:52,test,test,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6633#issuecomment-639116367,1,['test'],['test']
Testability,"@lbergelson actually many databases do such hardcoded directory management and provide tools to migrate data to other locations. The reason is they want to maintain writeahead logs, updates and other temporary files per database or table or array. We also followed the method in TileDB. Other storage formats like HDF5 are completely self-contained and stores everything in one file. Each method comes with its set of challenges :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3411#issuecomment-320326745:176,log,logs,176,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3411#issuecomment-320326745,1,['log'],['logs']
Testability,"@lbergelson addressed the comments and added a test, please rereview",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1919#issuecomment-226864611:47,test,test,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1919#issuecomment-226864611,1,['test'],['test']
Testability,"@lbergelson and @droazen - back to you and thank you for considering this when I know that you are about to release. Please, feel free to modify the PR, rebase to test if there is any incompatibility and/or revert commits. I would like to have this for the released version to be able to remove the configuration argument, which might be confusing for my users, and to been able to use `java.nio.Path` as a temp directory. Thanks in advance!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3998#issuecomment-355948112:163,test,test,163,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3998#issuecomment-355948112,1,['test'],['test']
Testability,"@lbergelson and @jonn-smith: Thanks and yes, i understand it's not a guaranteed stable tool. If I come up with anything that seems like a candidate change in core funcotator I will reach out here. Tests passed - would someone be able to actually merge the PR? Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8124#issuecomment-1353799022:197,Test,Tests,197,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8124#issuecomment-1353799022,1,['Test'],['Tests']
Testability,@lbergelson any insight as to why `org.broadinstitute.hellbender.utils.mcmc.PosteriorSummaryUtilsUnitTest` is failing? I haven't touched anything surrounding said code. Is this a flagging unit test?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4044#issuecomment-356120943:193,test,test,193,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4044#issuecomment-356120943,1,['test'],['test']
Testability,"@lbergelson are you able to help with the docker/gradle failures? Also, there are likely more gradle changes needed for publishing artifacts, but I'm not sure what's needed or how to test those changes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6007#issuecomment-502679381:183,test,test,183,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6007#issuecomment-502679381,1,['test'],['test']
Testability,@lbergelson can you clarify the expected behavior? Why should it not fail - the build (tests) cannot complete without RScript,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/351#issuecomment-93466492:87,test,tests,87,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/351#issuecomment-93466492,1,['test'],['tests']
Testability,@lbergelson can you have a look why the LFS files are working on one of the test configs and not the other? The test is CollectWgsMetrics and uses the big bam file + fasta,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/844#issuecomment-132996288:76,test,test,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/844#issuecomment-132996288,2,['test'],['test']
Testability,@lbergelson commented on [Mon Apr 11 2016](https://github.com/broadinstitute/gatk-protected/issues/443). I recently broke the ability to create a spark/shadow jar and only discovered it when I went to create one later. We should add simple tests for the generated jar to be sure it can be created / executed.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2844:240,test,tests,240,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2844,1,['test'],['tests']
Testability,@lbergelson commented on [Mon Nov 14 2016](https://github.com/broadinstitute/gatk-protected/issues/763). Update to the current version of public. This requires an update to spark 2.0 which means it needs some extra testing before merging. . @LeeTL1220 would like to run some wdl's to check that things are still working.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2911:215,test,testing,215,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2911,1,['test'],['testing']
Testability,"@lbergelson commented on [Wed Aug 31 2016](https://github.com/broadinstitute/gatk-protected/issues/659). I got a segfault while running CreatePanelOfNormalsIntegrationTest. Subsequent runs were unable to reproduce it. ```; 18:03:07.573 WARN TaskSetManager:70 - Stage 181 contains a task of very large size (119 KB). The maximum recommended task size is 100 KB.; Test: Test method testAllTargetsHDF5PoNCreationSpark[0](null, src/test/resources/org/broadinstitute/hellbender/tools/exome/create-pon-control-full.pcov)(org.broadinstitute.hellbender.tools.exome.CreatePanelOfNormalsIntegrationTest) produced standard out/err: 18:03:07.612 WARN TaskSetManager:70 - Stage 182 contains a task of very large size (119 KB). The maximum recommended task size is 100 KB. 18:03:07.612 WARN TaskSetManager:70 - Stage 182 contains a task of very large size (119 KB). The maximum recommended task size is 100 KB.; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x000000010a5a9401, pid=2425, tid=8963; #; # JRE version: Java(TM) SE Runtime Environment (8.0_91-b14) (build 1.8.0_91-b14); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.91-b14 mixed mode bsd-amd64 compressed oops); # Problematic frame:; # V [libjvm.dylib+0x1a9401]; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/louisb/Workspace/gatk-protected/hs_err_pid2425.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; #; ```. [hs_err_pid2425.log.txt](https://github.com/broadinstitute/gatk-protected/files/448383/hs_err_pid2425.log.txt). @yfarjoun Is this similar to the crash you saw a while back?. ---. @yfarjoun commented on [Wed Aug 31 2016](https://github.com/broadinstitute/gatk-protected/issues/659#issuecomment-243946864). no. this is different. On Wed, Aug 31, 2016 at 3",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2883:362,Test,Test,362,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2883,3,"['Test', 'test']","['Test', 'test']"
Testability,@lbergelson could you please take a look at the failing test? I suspect it is travis-related.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2813#issuecomment-306402286:56,test,test,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2813#issuecomment-306402286,1,['test'],['test']
Testability,"@lbergelson counter-proposal: since writing to a temp location in GCS would risk collisions if multiple people run the test, how about writing to JimFS instead? It's a RAM filesystem so each test machine gets its own, and it still requires the code to use the Path objects correctly since any conversion to File would fail. As a bonus, we do not incur Cloud charges and the test is much faster, so we can keep it as a unit test instead of an integration test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332078512:119,test,test,119,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-332078512,5,['test'],['test']
Testability,@lbergelson do any of the Jenkins jobs need reenabling? I see gatk-perf-test-spark-markeddupe and gatk-perf-test-spark-readpipeline are disabled - or were they disabled for another reason?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3437#issuecomment-326617327:72,test,test-spark-markeddupe,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3437#issuecomment-326617327,2,['test'],"['test-spark-markeddupe', 'test-spark-readpipeline']"
Testability,"@lbergelson has been able to replicate the bug using a simple test case, so this is confirmed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3814#issuecomment-343230937:62,test,test,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3814#issuecomment-343230937,1,['test'],['test']
Testability,@lbergelson here is the new version of the tool with all of the integration tests hand-verified verses the old version of the tool. The output now consistently passes validation and there is now an option to turn on (it is off by default) the N-splitting of secondary alignments.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2021#issuecomment-239503282:76,test,tests,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2021#issuecomment-239503282,1,['test'],['tests']
Testability,@lbergelson is going to try regenerating our service account key and see if that allows us to uncomment the GCS tests in this branch.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-429975698:112,test,tests,112,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-429975698,1,['test'],['tests']
Testability,@lbergelson looks like the tests passed this time around. We should open a ticket in Hadoop-Bam to fix the issue,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4545#issuecomment-395166345:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4545#issuecomment-395166345,1,['test'],['tests']
Testability,"@lbergelson or @droazen: this is related to your comments on #8752 about preserving the default behavior of just writing the first source. This PR overloads simpleMerge(), meaning code needs to opt-in to the feature of preserving all source names. . I cannot kick off tests - would one of you be able to to that?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8871#issuecomment-2164367475:268,test,tests,268,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8871#issuecomment-2164367475,1,['test'],['tests']
Testability,@lbergelson please review. Note that this branch will fail tests until the new maven artifact is published later today. I'll re-run tests at that time.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5099#issuecomment-412166037:59,test,tests,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5099#issuecomment-412166037,2,['test'],['tests']
Testability,@lbergelson please review.; Test pass locally and they should not fail on Travis.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/374#issuecomment-93051063:28,Test,Test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/374#issuecomment-93051063,1,['Test'],['Test']
Testability,@lbergelson still waiting on the new test project...,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2879#issuecomment-350798478:37,test,test,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2879#issuecomment-350798478,1,['test'],['test']
Testability,@lbergelson thank you for the comment and sorry for my bit late response. I excluded the dependency to the jsr203-s3a and tested that both local- and spark-gatk can access s3a files by dynamically loading it. I also added a new directory `scripts/s3a` for documentation and simple tests for s3a demonstration.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6698#issuecomment-665484597:122,test,tested,122,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6698#issuecomment-665484597,2,['test'],"['tested', 'tests']"
Testability,"@lbergelson thanks - could you take another look?. I agree about the many modes -- I'm not sure there's a way to clear that up. We're game to help with documentation/blog stuff that can help clarify what sort of usecases would benefit from different modes/features if that would help. Do you have any pointers for sample data that I could use for testing the ""many contigs to several"" case?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6681#issuecomment-667421004:347,test,testing,347,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6681#issuecomment-667421004,1,['test'],['testing']
Testability,@lbergelson the tests are not running on [gatk-jenkins.broadinstitute.org](url) so it's not usable yet. What remains to be done?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1400#issuecomment-199324556:16,test,tests,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1400#issuecomment-199324556,1,['test'],['tests']
Testability,"@lbergelson this is good to go, unless my other PR gets merged first, in which case I'll need to update the expected test data.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4940#issuecomment-415074916:117,test,test,117,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4940#issuecomment-415074916,1,['test'],['test']
Testability,@lbergelson this was originally your report. I added some details to the issue. If you think the PairHMM one should in fact be skipped then this should be the only one that's falsely ignored. Maybe we should put some reference to the ignore exception in the test name...?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6471#issuecomment-592150985:258,test,test,258,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6471#issuecomment-592150985,1,['test'],['test']
Testability,@lbergelson we might want to monitor how much this affects test time too. Maybe we should use a bigger number ?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6093#issuecomment-521371785:59,test,test,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6093#issuecomment-521371785,1,['test'],['test']
Testability,"@lbergelson you beat me because I was stuck trying to actually run a Picard tool in the integration test. (For future reference, that needs a workaround because the test running adds the ERROR level logging to all command lines and Barclay can't parse that for Picard tools for some reason.). The big reason I was using this instead of IntervalListTools is because the Picard version creates a terrible output file structure that I was having trouble capturing with a simple glob in WDL. I agree that the functionality here is largely redundant, but it was helping me get my workflow working faster at the moment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196:100,test,test,100,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5392#issuecomment-435894196,3,"['log', 'test']","['logging', 'test']"
Testability,"@lbergelson you shouldn't see it again but the magic phrases are. ""ok to test"" to accept this pull request for testing; ""test this please"" for a one time test run; ""add to whitelist"" to add the author to the whitelist",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232843624:73,test,test,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1994#issuecomment-232843624,4,['test'],"['test', 'testing']"
Testability,"@lbergelson, @akiezun AFAIK picard tools need you to specify specifically FLAG=true/ FLAG=false if it's a boolean flag. it is true that, if you want, any argument can have a default value (true or false) but to change it you will still need to assign true or false (i.e even if there is a default you cannot simply have FLAG on the commandline). Yes, the logic of the pipeline specifies all the commandline arguments, regardless of defaults so that if the defaults change (which the GATK used to do all the time!) the pipeline will not change. Thus the use case has to include being able to set all arguments to their value boolean or otherwise.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/133#issuecomment-94434510:355,log,logic,355,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/133#issuecomment-94434510,1,['log'],['logic']
Testability,"@lbergelson, I also checked the combined gvcf that you have provided and there's no 27.0 MIN_DP value there. The data type in GenomicsDB for MIN_DP is integer and we are getting 27, so there seems to be a bug in the comparator. The test pushed in to this PR should work. Our latest GenomicsDB v0.5.0 is also ready for release. I will release it over the weekend.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-292684300:232,test,test,232,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-292684300,1,['test'],['test']
Testability,"@lbergelson, I don't think that this solution will help in this case, because another error when trying to use `CommandLineProgramTest`is that it extends `BaseTest`, which loads directly a `GenomeLocParser` for a reference that is not present and it blows up in every test. Regarding the `Main` class, because you point it out here, I would like to have some control over `Main` and how it manages things like errors or logging header. Basically all the things that I'm facing at the moment are, apart of this error using the testing framework, is that the framework have tons of mentions to the GATK itself (error messages pointing to the GATK manual page or bundle tools), and little control over which of them should be expose to the final user. Only as an example, I would like to output a line with the name and version of my software and a short notice about the usage of the GATK framework and which version I'm using (for easier maintenance, and contribution if a bug is found).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2122#issuecomment-242802278:268,test,test,268,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2122#issuecomment-242802278,3,"['log', 'test']","['logging', 'test', 'testing']"
Testability,"@lbergelson, thanks for regenerating the service account key. All tests are enabled and pass now. ; @droazen, please feel free to merge with master.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-430472483:66,test,tests,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-430472483,1,['test'],['tests']
Testability,"@lbergelson,. tests passed, so like you said the failed builds should be transient; this outdated key should be updated nonetheless",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6116#issuecomment-524891431:14,test,tests,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6116#issuecomment-524891431,1,['test'],['tests']
Testability,"@lbergelson. Our simple s3 nio library is not currently open source, but we would be willing to make it so after testing it properly. We found that to get the s3 nio library work with GATK, a few minor changes needed to be made in the GATK source. This is especially true for the spark tools because, on AWS EMR Spark clusters, s3 uris can be treated exactly as if they are HDFS uris. Therefore, it was not quite as simple for us to just add the s3 nio library to the classpath and have everything work as expected. For that reason we put the project on hold until GATK is closer to release. Thanks,; David. ________________________________; From: Louis Bergelson <notifications@github.com>; Sent: Monday, July 31, 2017 11:57 AM; To: broadinstitute/gatk; Cc: David Brown; Mention; Subject: Re: [broadinstitute/gatk] update com.google.guava version (#3102). @david-wb<https://github.com/david-wb> Is your s3 plugin available as an open source plugin that others could use? We had another question about s3 support in gatk and I thought you might have some insight about it. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/broadinstitute/gatk/issues/3102#issuecomment-319146368>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABxO-d5XTtUyeAI0GzCFLP5eVGYiyQJEks5sThWegaJpZM4N31U->.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3102#issuecomment-319185834:113,test,testing,113,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3102#issuecomment-319185834,1,['test'],['testing']
Testability,"@lbergelson: I don't think so, for that they should use https://github.com/jdanbrown/minlog-slf4j and I do not think that they are using it. @ronlevine: I think that using `com.esotericsoftware.minlog.Log.setLogger()` with a GATK's implementation of `com.esotericsoftware.minlog.Log.Logger` will solve the problem. Actuallty, maybe it's worthy to set up this directly on startup to a custom implementation using the log4j logger to print the log, although that requires to override the `Logger.log()` method to log in the correct level.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2751#issuecomment-315788934:201,Log,Log,201,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2751#issuecomment-315788934,8,"['Log', 'log']","['Log', 'Logger', 'log', 'logger']"
Testability,@lbergelson: sorry to keep bugging you on this thread. Would it be possible to merge https://github.com/broadinstitute/gatk/pull/8871 into this feature branch and kick off tests? That includes the requested code changes.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8750#issuecomment-2231405229:172,test,tests,172,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8750#issuecomment-2231405229,1,['test'],['tests']
Testability,@lbergelson: thanks for your help. looks like the tests passed,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8166#issuecomment-1411119884:50,test,tests,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8166#issuecomment-1411119884,1,['test'],['tests']
Testability,"@ldgauthier & @droazen I've done as you've suggested. There is now a check in `GenomicsDBImport`, by wrapping the FeatureReader. It's a little ugly but it gets the job done. I've also added a simple test for GenotypeGVCFs to genotype a GVCF that has an MNP in it. I _think_ this is probably now ready for review. Let me know if you think further tests are needed!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-422989371:199,test,test,199,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5182#issuecomment-422989371,2,['test'],"['test', 'tests']"
Testability,"@ldgauthier (and maybe @eitanbanks ?) is there any chance you could take a look at this PR sooner rather than later? I apologize for being pushy, but this is becoming a blocking issue for me as I can't find any other way to generate a single-sample VCF with correct phasing information. I'm fairly confident that the tests will pass on this build cycle, given that I've updated the test files and the tests now pass locally.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5772#issuecomment-470692220:317,test,tests,317,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5772#issuecomment-470692220,3,['test'],"['test', 'tests']"
Testability,"@ldgauthier - Any thoughts on whether removing toString() from VariantAnnotation is safe - see comments above ? If not, we plan to remove it since there doesn't appear to be any code in GATK that relies on it (at least, no tests fail).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7041#issuecomment-775429828:223,test,tests,223,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7041#issuecomment-775429828,1,['test'],['tests']
Testability,"@ldgauthier ; My thinking on not doing the larger tests was that the native code hasn't changed for this support, so performance and functionality shouldn't see anything unexpected. Additionally, we technically do ""incremental import"" whenever the import is batched currently. We're just extending that same paradigm to extend beyond the case where the initial GenomicsDBImport command is used. Of course, all of this is not to say I don't want to do the larger tests...just wondering if we could capture that in a separate issue? @droazen mentioned that there's a tentative plan for a new GATK release this week and we would like to have this feature in there, if you agree. We'll work in parallel on the performance testing you requested. Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-518327043:50,test,tests,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-518327043,3,['test'],"['testing', 'tests']"
Testability,"@ldgauthier ; Performance for single import is the same, and we have CI tests on the genomicsdb side as well. Admittedly we haven't done a lot of large scale performance testing using GenomicsDBImport. Can you elaborate on what you mean by accuracy for large scale imports?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-517850985:72,test,tests,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-517850985,2,['test'],"['testing', 'tests']"
Testability,@ldgauthier @LeeTL1220 I put in an parameter for the MNP spacing and a bunch of tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4650#issuecomment-383357001:80,test,tests,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4650#issuecomment-383357001,1,['test'],['tests']
Testability,"@ldgauthier @davidbenjamin . I now have added in setting the genotype as phased (using a pipe) as well as upgraded htsjdk. The tests need updating, but it's easier to see what breaks then fix than run the tests locally! But please see if you agree with the rest of the PR while I update the tests manually. A few notes on the various tools related to making the genotype phased:. 1. Both `HaplotypeCaller` and `Mutect2` support the `--do-not-run-physical-phasing`, so all this can be turned off by the user. I am not going to add another command line option as this may confuse the user.; 2. `FilterMutectCalls` uses the `Mutect2FilteringEngine` internally. It does not look at the order of the alleles in the genotype (`GT` FORMAT field), but does look at the various other per-allele FORMAT fields (ex. `AD`, `AF`). Fortunately, I do not change their order in this PR as suggested by @ldgauthier.; 3. As @ldguathier note [in this comment](https://github.com/nh13/gatk4/pull/1#issuecomment-433970809) and [in this comment](https://github.com/nh13/gatk4/pull/1#issuecomment-433986488), that VQSR and Sam F's work do not look at genotypes either.; 4. I looked at VariantContextBuilder and then in particular VCFEncoder in htsjdk, and they do the right thing when we order the alleles according to phase.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-434790325:127,test,tests,127,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-434790325,3,['test'],['tests']
Testability,"@ldgauthier @davidbenjamin @lbergelson @droazen any chance you could let me know an estimate on when you could review this? It's totally fine if that's a week or two out, but it would help for my own planning purposes around the holiday season. Also, I'll fix up tests once folks agree on the approach.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436669919:263,test,tests,263,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436669919,1,['test'],['tests']
Testability,@ldgauthier @davidbenjamin please take a look. . Don't allow the number of lines changed intimidate you... (most are in test resource files). The first commit contains the actual main code changes. . The second and third commits update the test resources (where most of the changed lines come from) and test code. . The very last commit changes the default radius to 2... I was planning to set it to 0 since it is more parsimonious (less complex configuration) but it may well affect sensitivity and certainly changes the PL/QUAL values so I guess set the value two the current 2 (for PLs) is a safer and more conservative approach until we evaluate what is the optimal value for this parameter. . Perhaps @davidbenjamin would like to have a different default for Mutec. This is last minute change and may break some of the integration test so bear with me if that is the case. However I think you can start reviewing the code at this point.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6055#issuecomment-516992042:120,test,test,120,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6055#issuecomment-516992042,4,['test'],['test']
Testability,@ldgauthier @droazen . Nalini was kind enough to pull these changes into a branch so that the travis tests get run: https://github.com/broadinstitute/gatk/commits/genomicsdb_incremental_support. Let us know if you need more information from us.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-498817591:101,test,tests,101,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-498817591,1,['test'],['tests']
Testability,"@ldgauthier @lbergelson any ideas on how to get travis-ci to run? I don't see it in the build list. Unfortunately, using travis-ci is the best way down to track the tests I need to update.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443870452:165,test,tests,165,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443870452,1,['test'],['tests']
Testability,"@ldgauthier @lucidtronix I'm updating this with a proposed list of CNNScoreVariants issues I think need to be resolved before we can remove the `@Beta` tag (actually is currently marked `@Experimental`). Let me know what you think:. - https://github.com/broadinstitute/gatk/issues/4538 (Python factoring/PEP-8/code review); - factor python args handling (minimally factor out the inference args); - there is only one 2D test, which I think has no reads overlapping any of the variants; - we should add a test that specifies one or more intervals; - the tool currently adds standard VQSR header lines via addVQSRStandardHeaderLines, which is unnecssary; - integrate read downsampling; - determine/handle the failure mode when the user supplies a mix (of mismatched) 1D/2D arch and weights inputs. Other (not necessarily blockers):; - establish all defaults (weights/arch/etc) in Java code; - default arch is 1D - should this change to 2D ?; - see if we can remove the artificially small inference/batch sizes (1) used in the tests. I think we added these due to timeouts which should no longer be an issue.; - remove the `newExpectations` code paths in integration tests",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4540#issuecomment-429074231:420,test,test,420,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4540#issuecomment-429074231,4,['test'],"['test', 'tests']"
Testability,"@ldgauthier @meganshand this is ready for review. Please feel free to un/reassign as necessary. @fleharty @vruano if you have some bandwidth, please take a look. Don’t be intimidated by the number of line changes, they’re mostly in test resources. I’ve also highlighted the important changes with some comments to make things easy.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7394#issuecomment-901395317:232,test,test,232,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7394#issuecomment-901395317,1,['test'],['test']
Testability,"@ldgauthier @sooheelee AFAIK, this was the main blocking issue. One caveat though - last week we replaced all of the copies of the Picard tools in GATK with the ACTUAL tools from the Picard jar. The GATK copies were mostly CRAM enabled and tested, but I think the Picard ones have various mixed states wrt read/write capabilities for CRAM.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3154#issuecomment-334173702:240,test,tested,240,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3154#issuecomment-334173702,1,['test'],['tested']
Testability,@ldgauthier @vruano can i get a passing review on this so it can be merged? the failing tests were transient errors.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7120#issuecomment-844134051:88,test,tests,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7120#issuecomment-844134051,1,['test'],['tests']
Testability,"@ldgauthier At the test locus used in `HaplotypeCallerIntegrationTest.testHaploidNoCall()`, <NON_REF> allele/haploid genotype is no longer the most likely genotype after the changes in this PR. So I removed the integration test and added a unit test that checks that when the <NON_REF> allele is present in the genotype, the no_call genotype (e.g. ""."" or ""./."") has the correct ploidy, which was the problem #6563 fixed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6696#issuecomment-679416696:19,test,test,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6696#issuecomment-679416696,4,['test'],"['test', 'testHaploidNoCall']"
Testability,@ldgauthier Can you help review the annotation classes and tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/841#issuecomment-132803360:59,test,tests,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/841#issuecomment-132803360,1,['test'],['tests']
Testability,@ldgauthier Can you move `spanDel.exome.chr20.vcf` (as well as any other test files over about 1-2 MB) into a directory under `src/test/resources/large` so that they'll be stored in `git lfs` rather than check in to the repo?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4947#issuecomment-515497964:73,test,test,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4947#issuecomment-515497964,2,['test'],['test']
Testability,@ldgauthier Can you take a look at this? This fixed a pretty rare (but not rare enough that it wasn't causing mismatches in my other work) error in GATK where we would be mis-sizing assembly windows where indels that overlapped snps were involved. It made some moderate differences in PL scores in HC tests which suggests its actually happening somewhat more frequently than couple of dropped indels I observed would suggest. I see however that it affected one of the CombineGVCFs integration tests (specifically all the values seem to be off by very small margins). Is that a problem at all?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6661#issuecomment-671564473:301,test,tests,301,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6661#issuecomment-671564473,2,['test'],['tests']
Testability,"@ldgauthier Could you please rebase this branch onto the latest master, so that we can see whether tests pass?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6075#issuecomment-518340469:99,test,tests,99,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6075#issuecomment-518340469,1,['test'],['tests']
Testability,"@ldgauthier Could you take a look at this? I changed a bunch of logic to bring it inline with modern tool design. I think it's right, but maybe I'm breaking something that I didn't understand?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4352#issuecomment-363255647:64,log,logic,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4352#issuecomment-363255647,1,['log'],['logic']
Testability,"@ldgauthier Emitting the spanning-deletion-only sites completely would definitely make things simpler, since I could then use EMIT_ALL_CONFIDENT_SITES and GenotypingEngine would just naturally do the right thing. Also, the result would comport with my own naive expectations. Using the current PR, outputs could contain LowQual sites that GATK3 wouldn't have included. So if you're good with that, I'll update the PR and tests to reflect that before any more reviewing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5219#issuecomment-424454872:421,test,tests,421,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5219#issuecomment-424454872,1,['test'],['tests']
Testability,"@ldgauthier Excellent, these will definitely be a good test set.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4371#issuecomment-363920337:55,test,test,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4371#issuecomment-363920337,1,['test'],['test']
Testability,@ldgauthier Good point! I'll add a test that fails if the boolean toggle is left turned on.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5324#issuecomment-431404069:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5324#issuecomment-431404069,1,['test'],['test']
Testability,"@ldgauthier Great, thanks for checking. . It's actually chromosomes 20 and 21 that we typically restrict ourselves to, by the way. The complete reference sequences for them for both b37 and hg38 are in `src/test/resources/large`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-358053322:207,test,test,207,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-358053322,1,['test'],['test']
Testability,"@ldgauthier I _think_ you approved without needing it to send back to you, but I'm paranoid and not fully confident with the new github review system. Also, the changes to the test code to get rid of the duplicated likelihood-setting were pretty big.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2185#issuecomment-255445145:176,test,test,176,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2185#issuecomment-255445145,1,['test'],['test']
Testability,@ldgauthier I added an integration test for GVCF mode and it works fine: the alleles are as expected with the addition of `<NON REF>`. I'm now going to investigate how the MNPs interact with CombineGVCFs and GenotypeGVCFs.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4650#issuecomment-384473840:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4650#issuecomment-384473840,1,['test'],['test']
Testability,"@ldgauthier I did all of those things. Note that to be precise, when you remove the spanning deletion the ""het"" REF / SPAN_DEL must be treated as haploid, which the new tests do.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4801#issuecomment-392303568:169,test,tests,169,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4801#issuecomment-392303568,1,['test'],['tests']
Testability,"@ldgauthier I have a few questions about this one. I think maybe I don't understand what you're trying to clarify. There are some test failures as well, I think a few more files need updating.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6432#issuecomment-581995612:130,test,test,130,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6432#issuecomment-581995612,1,['test'],['test']
Testability,"@ldgauthier I have updated all the tests. I think this is ready for a final review, squash, and merge!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-444562391:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-444562391,1,['test'],['tests']
Testability,@ldgauthier I only want an extra set of eyes if it's necessary for approval. If you want to take my word that the tests are functionally the same but less messy I'll be glad to merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2185#issuecomment-256233423:114,test,tests,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2185#issuecomment-256233423,1,['test'],['tests']
Testability,@ldgauthier I put in a regression test from the user's data.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5562#issuecomment-467604200:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5562#issuecomment-467604200,1,['test'],['test']
Testability,"@ldgauthier I think at some point we removed example JSONs in both the CNV and M2 WDL directories. I believe the reasoning was that those JSONs were mostly non-informative templates that could just as easily be generated with `womtool inputs`; since they were also not tested (in contrast to the JSONs used by the Travis WDL tests), they had to be kept in sync manually. @davidbenjamin @LeeTL1220 can correct me if I'm wrong. In contrast, providing Jack's hyperparameters for WES via JSONs will actually be informative! However, we will inevitably run into some issues touched upon in https://github.com/broadinstitute/gatk/issues/4719. I agree that it would be desirable to set some default WES/WGS hyperparameters in the featured workspace. However, I hope this wouldn't require two separate workspaces for WES/WGS or any shenanigans like that. Ideally, this sort of thing could be covered at the tool level with argsets, as mentioned in that issue. @droazen any updates there?. In any case, I'm not sure having the JSON in this repo and not covered by any tests is what we want. ; Maybe @bshifaw can chime in? Are the featured workspaces covered by tests elsewhere? What is the current SOP for taking workflows from this repo, turning them into featured workspaces, and populating their configurations?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6017#issuecomment-505971851:269,test,tested,269,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6017#issuecomment-505971851,4,['test'],"['tested', 'tests']"
Testability,"@ldgauthier I think it's probably best to try and get to the bottom of why this variant's qual isn't being adjusted as it's reduced from 7 alleles in the gVCF to 2 alleles in the called VCF. This is, as you guessed, all single-sample. I've attached a reduced gVCF that just includes the variant in question, and the resulting genotyped VCF from running the command line below (and their indices) ; [here](https://github.com/broadinstitute/gatk/files/3059414/gatk-5793-testcase.tar.gz). ```; gatk GenotypeGVCFs \; -R /Work/refseq/hg19/hg19.fasta \; -V HG02568.g.vcf \; -O HG02568.vcf \; -L chr11:6637700-6637800 \; -stand-call-conf 30; ```. A few observations from running the above command but varying the `-stand-call-conf` at that locus, all performed with GATK 4.1.1.0:; - Running with `-stand-call-conf 30` results in a reduction from 7->2 alleles but no change at all in QUAL; - Running with `-stand-call-conf 0` results in the same genotype and QUAL, but another allele squeaks through even though it's not referenced in the genotype; - Running with `-stand-call-conf 100` results in no variants being emitted. Circling back to one of my original statements, I believe the least confusing way for this to work would be to think of it this way:; - If you run with `-stand-call-conf 0` you should see all variants; - If you run with `-stand-call-conf n` you should only lose variants that were previously emitted with `-stand-call-conf 0` that had QUAL < n. That said, it sounds like maybe the problem is less with the filtering on QUAL and more to do with the calculation of the final QUAL that ends up in the VCF?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5793#issuecomment-481273026:468,test,testcase,468,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5793#issuecomment-481273026,1,['test'],['testcase']
Testability,@ldgauthier I undid that change that made no sense and added some new tests so it doesn't happen again.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4352#issuecomment-367117807:70,test,tests,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4352#issuecomment-367117807,1,['test'],['tests']
Testability,"@ldgauthier I'm about to submit a bug fix PR. In the line you found the `.intersect(region)` should be `.intersect(region.getPaddedSpan())`. The intersection is to avoid a bug where the requested trimmed padded region is bigger than the original padded region, but `intersect(region)` causes it to lie within the original unpadded region, which is unnecessary and probably harmful to sensitivity (the trimming cigar didn't hurt sensitivity, but I wonder if this mistake may have offset a net benefit that it should have created). I replicated @jemunro's error in the branch, fixed it (of course), and wrote an equivalent regression test that fails before and passes after the PR. The rest is just the usual annoying updating of integration test files, which as of right now I'm in the middle of.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6495#issuecomment-599885755:632,test,test,632,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6495#issuecomment-599885755,2,['test'],['test']
Testability,"@ldgauthier I've fixed the NPE by deleting an incorrect implementation of `getRawKeyNames()`. Actually, I deleted them all, and just put a correct implementation as a default method in the `ReducibleAnnotation` interface, as we discussed. I also removed a bunch of unnecessary qualifiers from the interface. If tests pass this time around, we should finally be able to release :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539412047:311,test,tests,311,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539412047,1,['test'],['tests']
Testability,"@ldgauthier I've updated `GenomicsDBImportIntegrationTest.testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData` to use its own expected output VCF rather than running `CombineGVCFS` and comparing to the output of that. Let me know if you want to take one more look, or have someone else do so, before giving this a final thumb.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-418369155:58,test,testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-418369155,1,['test'],['testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData']
Testability,"@ldgauthier It looks like when you added GVCF mode to Mutect2, you may have marked this arg as beta even though it's shared with the HaplotypeCaller. Perhaps it would be easiest for M2 and HC to just have separate `-ERC` arg declarations? Or you could remove the beta label from the argument itself, and have M2 emit a logger message saying that GVCF mode is beta when running with `-ERC GVCF`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5988#issuecomment-499609768:319,log,logger,319,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5988#issuecomment-499609768,1,['log'],['logger']
Testability,@ldgauthier Looks like you have a test failure in `AS_QualByDepthUnitTest.testParseQualList` (https://storage.googleapis.com/hellbender-test-logs/build_reports/master_29045.13/tests/test/index.html),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6442#issuecomment-583616952:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6442#issuecomment-583616952,5,['test'],"['test', 'test-logs', 'testParseQualList', 'tests']"
Testability,"@ldgauthier Ok, I've addressed your comments by adding some extra assertions about the alleles and genotypes post-allele-subsetting. Ready for another look!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4497#issuecomment-371612858:66,assert,assertions,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4497#issuecomment-371612858,1,['assert'],['assertions']
Testability,@ldgauthier Tests are now passing and we no longer have a personal docker image in the wdl. Back to you!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5566#issuecomment-457240422:12,Test,Tests,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5566#issuecomment-457240422,1,['Test'],['Tests']
Testability,"@ldgauthier Tests are still failing because I haven't updated test vcfs. Before I do so could I get your opinion? Here's a summary of the rationale behind each commit:. * fa34758 When we get to `realignReadToBestHaplotype` we have discarded bases outside of the assembly region but we still have hard clips in the read Cigar. This change forces us to keep those Cigar elements after realigning to the best haplotype so that we know how far past the assembly window the read extended.; * 6af7ad4 After the above change, `BaseQualityRankSum` was liable to look for discarded bases in the hard-clipped part of the read. This fixes that.; * 952d217 The `Clipping` annotation doesn't do anything. It counts the number of hard clips, but pre-this PR there are no hard clips because those bases don't get realigned to the best haplotype and post-this PR the ""hard clips"" are just bases outside the assembly region. As a placeholder I'm setting it to zero (note how this doesn't break any tests!) but really I think we should just get rid of it.; * This PR introduced some off-by-one errors in the depth annotation (but not the ADs). While looking into this I found an apparent bug where some reads that don't overlap a variant get counted in the depth. The issue was that we were counting clipped bases in the overlap. I don't think this is correct because by this point in the code we have unclipped soft clips and gone through local reassembly. Therefore, anything clipped here is a part of the read we truly don't believe belongs anywhere near the assembly region. This change alone breaks the tests with a few off-by-one DP fields.; * 8c51c0a Uses hard clips in the Cigar to correct read position annotations.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4956#issuecomment-400755806:12,Test,Tests,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4956#issuecomment-400755806,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,@ldgauthier Thanks for the comments! I made the changes you requested and deleted the redundant test. Let me know if you have any more edits in mind.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-415436791:96,test,test,96,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-415436791,1,['test'],['test']
Testability,@ldgauthier Thanks for the feedback -- I'll see if I can add some additional assertions about the actual alleles retained at each site that had more than the maximum.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4497#issuecomment-370811446:77,assert,assertions,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4497#issuecomment-370811446,1,['assert'],['assertions']
Testability,"@ldgauthier The new test files you added were indeed correctly checked in as git-lfs files! You can tell this because in the diff for the PR these files are marked with the message ""Git LFS file not shown"". (I'll add that any new files added under `src/test/resources/large` get automatically tracked by lfs provided that you've completed the lfs setup instructions in https://github.com/broadinstitute/gatk#lfs -- we generally put files that are more than about 1 MB in there)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3255#issuecomment-316188293:20,test,test,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3255#issuecomment-316188293,2,['test'],['test']
Testability,"@ldgauthier The test is much clearer now, thanks for pointing me to the example. This will end up being tested in WARP with the next GATK release and I'm not sure how easy it is to test two commits of GATK in WARP against each other. If it's possible to do that without updating the official truth data, then I could run that before we merge this. Otherwise we'll end up catching any issues when we update WARP after the next GATK release (which I'm motivated to do when the time comes).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8862#issuecomment-2159220666:16,test,test,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8862#issuecomment-2159220666,3,['test'],"['test', 'tested']"
Testability,@ldgauthier There appears to be a legitimately failing unit test here: `GnarlyGenotyperEngineUnitTest. testGenotypeCallForLotsOfAlts()`. ```; java.lang.AssertionError: expected [true] but found [false]; 	at org.testng.Assert.fail(Assert.java:93); 	at org.testng.Assert.failNotEquals(Assert.java:512); 	at org.testng.Assert.assertTrue(Assert.java:41); 	at org.testng.Assert.assertTrue(Assert.java:51); 	at org.broadinstitute.hellbender.tools.walkers.gnarlyGenotyper.GnarlyGenotyperEngineUnitTest.testGenotypeCallForLotsOfAlts(GnarlyGenotyperEngineUnitTest.java:71); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(Test,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:60,test,test,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,20,"['Assert', 'assert', 'test']","['Assert', 'AssertionError', 'assertTrue', 'test', 'testGenotypeCallForLotsOfAlts', 'testng']"
Testability,"@ldgauthier This looks good, its a pretty simple change and there are unit tests and integration tests that enforce the new behavior. I would squash the two commits and give them an informative commit message.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3409#issuecomment-320707124:75,test,tests,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3409#issuecomment-320707124,2,['test'],['tests']
Testability,"@ldgauthier Travis finally ran, but unfortunately there were multiple test failures :(",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6168#issuecomment-538062765:70,test,test,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6168#issuecomment-538062765,1,['test'],['test']
Testability,"@ldgauthier Unfortunately there are still two integration test failures left after fixing that NPE:. ```; Gradle suite > Gradle test > org.broadinstitute.hellbender.tools.walkers.GnarlyGenotyperIntegrationTest > testUsingGenomicsDB[2]([Ljava.io.File;@2b20e8a, src/test/resources/org/broadinstitute/hellbender/tools/walkers/GnarlyGenotyper/twoSampleAS.vcf, src/test/resources/org/broadinstitute/hellbender/tools/walkers/GnarlyGenotyper/twoSampleASDB.vcf, [20:1-2147483647], [], /gatkCloneMountPoint/src/test/resources/large/human_g1k_v37.20.21.fasta) [31mFAILED[39m[0K. java.lang.IllegalStateException: Something went wrong: [0K. at org.broadinstitute.hellbender.tools.walkers.gnarlyGenotyper.GnarlyGenotyperEngine.finalizeGenotype(GnarlyGenotyperEngine.java:131). at org.broadinstitute.hellbender.tools.walkers.gnarlyGenotyper.GnarlyGenotyper.apply(GnarlyGenotyper.java:287). at org.broadinstitute.hellbender.engine.VariantWalker.lambda$traverse$0(VariantWalker.java:104). at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184). at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193). at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175). at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193). at java.util.Iterator.forEachRemaining(Iterator.java:116). at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801). at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482). at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472). at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151). at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174). at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234). at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418). at org.broadinstitute.hellbender.engine.VariantWalker.traverse(VariantWalker.java:102). at or",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539518973:58,test,test,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539518973,6,['test'],"['test', 'testUsingGenomicsDB']"
Testability,"@ldgauthier Yes, definitely. I believe Jack has done some evaluations in the past that were inconclusive, but I can benchmark this branch now and see if we get improvements with certain types of CNV categories.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4988#issuecomment-736834077:116,benchmark,benchmark,116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4988#issuecomment-736834077,1,['benchmark'],['benchmark']
Testability,"@ldgauthier Yes, there's definitely a disagreement about what the criteria should be. We can argue about changing it but that's outside of the scope of this issue... I was just testing if it actually behaved the way people think it does to or if we were accidentally letting in extra stuff that we definitely shouldn't be.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3754#issuecomment-495253164:177,test,testing,177,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3754#issuecomment-495253164,1,['test'],['testing']
Testability,"@ldgauthier Yes, this was just waiting on some resolution to the double-spanning deletion issue reported above. If a new GDB update makes the output of `GenomicsDBImport` concordant with that of `CombineGVCFs` in terms of the DP and AD's listed above, I think I can update the test files to reflect the new behavior. I still think that the behavior of Combine and GDBI is not exactly right as I mentioned in the last line of my long comment above, but maybe that's something that could be spun out into its own issue to fix independently, as long as we're OK with running with the current CombineGVCFs behavior in the meantime.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-415852291:277,test,test,277,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4963#issuecomment-415852291,1,['test'],['test']
Testability,@ldgauthier back to you. Travis testing of both cnn_score_variants.wdl and cram2filtered.wdl seems to be working now. I'm still using the gs://broad-dsde-methods/ bucket for a few files until I get the final word from Comms about where they should live.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4774#issuecomment-417343741:32,test,testing,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4774#issuecomment-417343741,1,['test'],['testing']
Testability,@ldgauthier here are a few examples of PGT having `1|0` in the existing tests:; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L2171; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L2172; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L6724; https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/YRIoffspring.chr20snippet.g.vcf#L7257. I'll be updating tests this week.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443863620:72,test,tests,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-443863620,6,['test'],"['test', 'tests']"
Testability,"@ldgauthier here's a little grep I did:; ```bash; find src/test/resources -name '*vcf' | xargs awk '{print $9, $10}' | grep PS | grep -v ""./."" | grep -v ""[012]|""; ```; 1. finds all the VCF files; 2. prints the format tags and values (9&10); 3. finds for all those that have the PS; 4. finds all those that are not no-calls; 5. finds those that that do not have a phased genotype",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445363598:59,test,test,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445363598,1,['test'],['test']
Testability,"@ldgauthier i'm not sure what this issue is. Is it about testing in htsjdk? If yes, maybe it belongs to htsjdk. Or is it a bug? If the latter, what is the test case?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/247#issuecomment-93482383:57,test,testing,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/247#issuecomment-93482383,2,['test'],"['test', 'testing']"
Testability,"@ldgauthier looking at things, I think there are actually a couple of issues. Here's a snippet of a 3-sample VCF generated with phasing enabled (sorry it's so wide):. ```; chr1 21900146 . C G 3516.25 . GT:AD:DP:F1R2:F2R1:GQ:PGT:PID:PL:PS 0|0:161,0:161:9,0:152,0:99:0|1:21900146_C_G:0,484,7601:21900146 0|0:183,0:183:16,0:167,0:99:0|1:21900146_C_G:0,566,8911:21900146 0|1:85,89:174:5,1:80,88:99:0|1:21900146_C_G:3525,0,3544:21900146; chr1 21900151 . T C 3493.25 . GT:AD:DP:F1R2:F2R1:GQ:PGT:PID:PL:PS 0|0:165,0:165:9,0:156,0:99:0|1:21900146_C_G:0,496,7733:21900146 0|0:188,0:188:17,0:171,0:99:0|1:21900146_C_G:0,566,8911:21900146 0|1:94,91:185:5,3:89,88:99:0|1:21900146_C_G:3502,0,3793:21900146; ```. You'll notice that both `GT` and `PGT` have phased genotypes. And in the case of samples with a homozygous genotype, the `PGT` has an incorrect heterozygous genotype. Going back and looking more closely at the test files that I updated, I also see where the `GT` is `1|1` that the `PGT` is erroneously heterozgyous. In talking to @nh13 about this, he pointed me at a section of code in `AssemblyBasedCallerGenotypingEngine` that purposefully sets the genotype to either `0|1` or `1|0` with a long note on line 512 that this is on purpose and that it'll get ""fixed"" later. Evidently that's not happening on the code path in `HaplotypeCaller` that generates a VCF as opposed to a GVCF. If this PR is likely to get accepted _and_ someone can point me in the right direction for fixing up the `PGT`, I'd be happy to try and fix that.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5772#issuecomment-471062432:909,test,test,909,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5772#issuecomment-471062432,1,['test'],['test']
Testability,@ldgauthier should be aware of this. This bug may not only affect AD or DP all this time but also other annotation that make their decision on whether to consider a read or not based on the informativeness. e.g ; SB test does.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7153#issuecomment-802550341:216,test,test,216,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7153#issuecomment-802550341,1,['test'],['test']
Testability,@ldgauthier sorry for the delay! Tests pass and I addressed all the easy comments. Would it be alright with you if we merge this in time for the upcoming release and then do a separate PR for the R code cleanups and cumulative Ti/Tv plot?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5251#issuecomment-476735064:33,Test,Tests,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5251#issuecomment-476735064,1,['Test'],['Tests']
Testability,@ldgauthier tests pass!!!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431211180:12,test,tests,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431211180,1,['test'],['tests']
Testability,"@ldgauthier tests pass, ready to merge at your leisure.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-446318359:12,test,tests,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-446318359,1,['test'],['tests']
Testability,"@ldgauthier the GATK3 tests have two bams relevant to MNPs. One has two unphased SNPs 3 bases apart; the other has two phased adjacent SNPs ie a DNP. That's it as far as I can tell. I think I ought to cook up some synthetic reads for a nice test. By the way, should add a MNP merging distance option as in ReadBackedPhasing? Currently, for example, the code I wrote can't make a MNP out of ACT -> GCA.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4650#issuecomment-380867582:22,test,tests,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4650#issuecomment-380867582,2,['test'],"['test', 'tests']"
Testability,"@ldgauthier the nightly docker build you pointed to seems behind 4.0.12.0. The Mutect2 error fixed in #5442 is present in the nightly docker build, so I can't test this fix.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5563#issuecomment-452334334:159,test,test,159,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5563#issuecomment-452334334,1,['test'],['test']
Testability,"@ldgauthier this finishes what we started in #4858 and is necessary for the pileup-calls-on-bamouts MC3 validation. The cause is the same, in that Pair-HMM has a tiny bias in favor of shorter haplotypes and thus it prefers deletion haplotypes when reads end inside STRs. In #4858 we broke near-ties in favor of the reference; this PR fixes the case where two alt haplotypes share a SNV and one of them has a spurious deletion. One important sanity check was that when I set `cigarTerm` to zero in `AssemblyBasedCallerUtils.java` no tests broke. This means that the refactoring needed to set up the change didn't affect behavior. I looked at most of the sites where `PL`s and/or `DP`s changed in the integration test vcfs and in every case the difference was from a fake deletion that this PR fixed. I also went through the diff of the bamouts in IGV and found the same thing. Finally, the changes to test vcfs in `GenotypeGVCFsIntegrationTest` and `GenomicsDBImporterIntegrationTest` are a consequence of changes to the `HaplotypeCallerIntegrationTest` vcfs.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5359:532,test,tests,532,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5359,3,['test'],"['test', 'tests']"
Testability,"@ldgauthier yes, that is an input file. Tests fail if I make those genotypes phased in that file since it used to compare with gatk3 :/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445383889:40,Test,Tests,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-445383889,1,['Test'],['Tests']
Testability,"@ldgauthier, @meganshand and I discussed whether we might want to switch from the one-sided p-values currently calculated by ExcessHet to mid p-values (which are used in the Hail implementation, see also https://www2.unil.ch/popgen/teaching/SISG14/Graffelman_Moreno_SAGMB_2013.pdf). She said you probably should make the call. As discussed by that reference, there can be significant differences between one-sided and mid p-values. However, since this PR already introduces differences between the old one-sided p-values and the corrected one-sided p-values, perhaps we want to go a step further and just switch over? Advantages would include consistency with Hail, as well as better power and type-1 error rate, at least according to that reference. But the test would no longer be specific to *excess* heterozygosity, which might not be desirable. I would also be curious to see what differences the correction or the switch would have in practice, given that the filter threshold is relatively conservative. Not sure I'm set up to rerun filtering on a large dataset, though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7394#issuecomment-892717403:759,test,test,759,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7394#issuecomment-892717403,1,['test'],['test']
Testability,"@ldgauthier, here is a solution that will render the LaTeX for the forum. `<img src=""http://latex.codecogs.com/svg.latex?$$ refRatio = \frac{min(X[0][0], X[0][1])}{max(X[0][0], X[0][1])} $$"" border=""0""/>`. I've tested that this renders on the forum to ; <img src=""http://latex.codecogs.com/svg.latex?$$ refRatio = \frac{min(X[0][0], X[0][1])}{max(X[0][0], X[0][1])} $$"" border=""0""/> . Please let me know if you want me to make these changes on your branch for the SOR and AS_SOR documentation.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5703#issuecomment-470581260:211,test,tested,211,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5703#issuecomment-470581260,1,['test'],['tested']
Testability,"@ldgauthier, you mentioned that it would take some time for you to dig into this. But, does this branch fix the overflow with combined annotation for RAW_MQandDP in the GenomicsDB you encountered for the large cohort? Please note that you have to explicitly set the useVCFCodec arg/option to true to test.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6305#issuecomment-583539839:300,test,test,300,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6305#issuecomment-583539839,1,['test'],['test']
Testability,"@ldguthier Yes, a small epsilon would be the way to go. I'll take this, as I just tested it and I noticed a formatting error in the Barclay code. But I'm planning to do a Barclay release in the next week or so anyway.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1292#issuecomment-590535041:82,test,tested,82,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1292#issuecomment-590535041,1,['test'],['tested']
Testability,"@lh3 I gave David some specific examples I had encountered of multiallelic variants where one or more of the alleles gets dropped using the independent alleles model. The new model preserves the expected alleles. @davidbenjamin I am perfectly happy with a QUAL decrease of 6 for an additional million reference samples. That's much less dramatic than the current implementation:; ![image](https://cloud.githubusercontent.com/assets/6578548/18005612/f5388c7a-6b68-11e6-8881-b07e450f983b.png). In terms of the args, given that it's most complicated than expected, I'm okay with leaving it as is and cleaning it up when we remove the other models. David, do you have a sense of what the values are for the old model versus new, maybe from the test cases I gave you? I want to make sure our 30 emission cutoff is still reasonable.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2098#issuecomment-242728417:740,test,test,740,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2098#issuecomment-242728417,1,['test'],['test']
Testability,"@lh3 We agree about the low-cov joint calling and have already tested it on 191 low-coverage (roughly 3-4x) samples from 1kg. The calls were identical except for one site with qual just above 30 that used to be just below, but this difference is basically arbitrary. If we simply add 15 to the qual threshold (as we should, because the new qual is systematically more permissive due to learning a minor allele fraction that may be greater than the average genome-wide heterozygosity), results are completely identical.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2255#issuecomment-258436797:63,test,tested,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2255#issuecomment-258436797,1,['test'],['tested']
Testability,"@louisb I did wind up making the docgen and wdlgen and tab completion integration tests non-docker only, since they're failing when run on the docker. The tasks themselves seem to be working fine - these tests are really just here to do a quick smoke test, and to make it easy to debug issues in case of a failure. I suspect the failures are related to the way we run the tests on the docker using the 3 separate jars. So for now I made them non-docker only.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8035#issuecomment-1448991698:82,test,tests,82,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8035#issuecomment-1448991698,4,['test'],"['test', 'tests']"
Testability,"@lucidtronix @mbabadi @samuelklee I think the best solution would be to establish a single, common Python environment, with a single set of dependencies, that all GATK Python tools depend on. We would establish a single docker image that has all of these dependencies pip installed, and could also include a conda env for the GATK environment for users who don't want to use the docker image. If we could do that, it would eliminate the need load per-tool conda environments. From what I've seen so far based on existing branches, the two environments we need (gCNV and CNN-VQSR) don't look that far apart in terms of dependencies. gCNV is using Theano, and CNN Tensorflow, but the rest looks [pretty close](https://docs.google.com/a/broadinstitute.org/spreadsheets/d/1RV7--uBQ0ctlXzMH09cmr0VimpZYIU68DdxJzE60y-c/edit?usp=sharing). So a strawman proposal for the main components for a common environment would be:. Python 3.6; Numpy >= 1.13.1; Scipy 1.0.0; Theano .0.9.0; Tensorflow 1.4.0; Pymc3 3.1; Keras 2.1.1. Can you all chime on on whether you think we can converge in a single environment ? If so, it would greatly simplify things, and we can start with getting a docker image built for running travis tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3692#issuecomment-348188451:1209,test,tests,1209,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3692#issuecomment-348188451,1,['test'],['tests']
Testability,"@lucidtronix @mbabadi Update on this: There is a branch [here](https://github.com/broadinstitute/gatk/commits/cn_python_environment) that updates the docker image that we build on travis to include a full anaconda installation. That may be overkill in the long run but for now gives us a base environment for running integration tests on Travis. The environment managers I've looked at (conda and virtualenv) both appear to work by activating a shell environment. Ideally, we wouldn't need an intermediate shell between the Java code and the Python code, but thats still TBD. In parallel, I'm working on a streaming I/O solution for using input/output streams over standard I/O as the next incarnation of the PythonScriptExecutor for https://github.com/broadinstitute/gatk/issues/3698.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3692#issuecomment-340804405:329,test,tests,329,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3692#issuecomment-340804405,1,['test'],['tests']
Testability,"@lucidtronix Any suggestions on this? I don't recall ever seeing this before, but we've hit it about 5 times in tests in the last week or so. It looks like its coming from this [jit assembler](https://github.com/intel/caffe/blob/a3d5b022fe026e9092fc7abc7654b1162ab9940d/xbyak/xbyak.h#L229) code used by the intel-optimized tensorflow ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6307#issuecomment-566108578:112,test,tests,112,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6307#issuecomment-566108578,1,['test'],['tests']
Testability,"@lucidtronix Have you looked at the conda env defined in this branch ? The .yml file here is based in part on dependencies I took from your conda env (minus the actual VQSR-CNN package, since we want our travis tests to run on the code and env defined in the GATK source repo - see comment above), but I haven't actually tried running your code with it yet. I want to make sure we're converging on a unified conda env.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3912#issuecomment-350307336:211,test,tests,211,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3912#issuecomment-350307336,1,['test'],['tests']
Testability,"@lucidtronix Hopefully by the time you see this the tests will have finished and you can update them if the output looks good. If it's not looking good, just let me know and we can wait until after the 4.1 release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5622#issuecomment-458718179:52,test,tests,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5622#issuecomment-458718179,1,['test'],['tests']
Testability,"@lucidtronix I have a few comments on the on the java side of this, and want to do a review pass. Let me know if/when its ready for that (it may already be, now that tests are passing).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4097#issuecomment-357995457:166,test,tests,166,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4097#issuecomment-357995457,1,['test'],['tests']
Testability,"@lucidtronix It looks like the StreamingPythonExecutorUnitTest and ProcessControllerUnitTest files are entirely removed now, instead of just being reverted (they had some stray changes included before). Those files need to be restored, then we can merge once tests pass again.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4097#issuecomment-360652766:259,test,tests,259,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4097#issuecomment-360652766,1,['test'],['tests']
Testability,@lucidtronix It looks like the update to the new htsjdk went in. Could you please rebase and enable that last test? Then this will be good to go!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2133#issuecomment-265775366:110,test,test,110,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2133#issuecomment-265775366,1,['test'],['test']
Testability,@lucidtronix Looks good now - lets squash and rebase/resolve on master and run tests again and should be good to go.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5175#issuecomment-428740780:79,test,tests,79,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5175#issuecomment-428740780,1,['test'],['tests']
Testability,"@lucidtronix The duplicate tranches are caused by a command line parser bug that appends the user-specified tranches with the default ones; any tranche that overlaps is output twice (and thats fixed in the build as of yesterday). However, you mentioned that you saw an extra line in the output file. I don't see any reason that the tranches should affect that, and I don't see it happening in my (smaller) test cases, so I just want confirm that what you were seeing was an extra line in the actual output vcf ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2276#issuecomment-262244820:406,test,test,406,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2276#issuecomment-262244820,1,['test'],['test']
Testability,@lucidtronix This looks good now. Can you squash it down to one commit and rebase and then we can merge once the tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4652#issuecomment-383583002:113,test,tests,113,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4652#issuecomment-383583002,1,['test'],['tests']
Testability,"@lucidtronix Try adding calls to `Utils.resetRandomGenerator()` at the start of each test case. We do this in `HaplotypeCallerIntegrationTest` as well, for the same reason.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5622#issuecomment-458771419:85,test,test,85,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5622#issuecomment-458771419,1,['test'],['test']
Testability,@lucidtronix looks like I got an intermittent 10-minute timeout failure in the CNN WDL test.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430040420:87,test,test,87,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5307#issuecomment-430040420,1,['test'],['test']
Testability,"@lucidtronix the beautiful thing about using Docker is that production is pinned to a specific image, but once we're done with all the arg changes I'll fix the production WDLs and we'll run the agonizingly long production test suite. In the unlikely event we need a hotfix in the meantime, we'll just have to branch from the last commit before renaming.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4029#issuecomment-355083906:222,test,test,222,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4029#issuecomment-355083906,1,['test'],['test']
Testability,"@lucidtronix there were places where a deletion allele was being counted as a SNP truth site (because the ref allele was ignored), so the tranches changed for the test data. After this goes in I can rerun the positive control exomes with the nightly and see if we need to change the filtering sensitivity threshold again.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6411#issuecomment-590331466:163,test,test,163,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6411#issuecomment-590331466,1,['test'],['test']
Testability,"@lucidtronix 👍 Once the htsjdk update is in, please update that test and then it looks good to me.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2133#issuecomment-258248596:64,test,test,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2133#issuecomment-258248596,1,['test'],['test']
Testability,@lukaskon Thanks for the report. This is almost certainly a bug on our end. It looks like it's happening at sites that are only covered by a spanning deletion. We're trying to create an allele internally with a space but code elsewhere is rejecting that. I suspect it used to work but we rewrote the allele handling code a while ago and didn't have a test for this particular edge case.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8427#issuecomment-1644205551:351,test,test,351,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8427#issuecomment-1644205551,1,['test'],['test']
Testability,"@magicDGS - thanks again for the help on this. yes, GATKReadFilterPluginDescriptor seems somewhat like the same concept as GATK3's PluginManager. Some of the not-yet-ported tools like VariantAnnotator used the plugin idea more heavily as well, so perhaps that'll get built out more when those are ported? I will work with that and perhaps try to pull out an AbstractPluginDescriptor. @droazen - in the earlier post you mentioned support on porting this. i think we're almost done, but it would be really helpful to test this using the same test data as GATK3 to ensure identical behavior. I dont know if there's any issues preventing sharing those files, but it seems like sharing those, at least privately wit us, should be a relatively straightforward thing. We're happy to do all that testing, if we could just get that test data. Sorry to keep bugging you on this point, but it'd be helpful if someone from GATK could reply on whether this is a possibility. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-344022553:515,test,test,515,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-344022553,4,['test'],"['test', 'testing']"
Testability,"@magicDGS @heuermh It sounds like there are definite advantages to switching to SLF4j. Our fear is that the switch will end up resulting in confusing class loading issues in different spark environments. We're just beginning a round of spark performance testing and evaluation under a pretty tight deadline, and we don't want to introduce any surprises. . We'd be happy to look at a pull request, but we might delay until the end of quarter to fully test / merge it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2176#issuecomment-261547892:254,test,testing,254,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2176#issuecomment-261547892,2,['test'],"['test', 'testing']"
Testability,"@magicDGS @lbergelson I vote that we temporarily disable ADAM support (and the associated tests), as we shouldn't let this issue block our ability to update to a newer htsjdk.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2247#issuecomment-257998124:90,test,tests,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2247#issuecomment-257998124,1,['test'],['tests']
Testability,"@magicDGS Could you add overloads of `IOUtils.createTempFile()` and `BaseTest.createTempFile()` that take a Path, and use them just in the tests you write for this PR? Once tests are in place, we can gradually migrate usages to the Path overloads in future PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4469#issuecomment-386412987:139,test,tests,139,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4469#issuecomment-386412987,2,['test'],['tests']
Testability,"@magicDGS Good catch, that's a bad bug. Would you mind adding a unit test for the new code?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3223#issuecomment-315860199:69,test,test,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3223#issuecomment-315860199,1,['test'],['test']
Testability,"@magicDGS I believe `searchBestAllele`'s behavior is correct. A larger (i.e. more positive or less negative) likelihood (or rather, log-likelihood) is a better allele. If you want to initialize some alleles to be better than the default, use a positive value. If you want them to be worse than the default, use a negative value. I'm not surprised that `PerReadAlleleLikelihoodMap` did something contradictory and backward. It was a remarkably silly class. There's no need to apologize for being confused by its misdirection.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2311#issuecomment-267243933:132,log,log-likelihood,132,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2311#issuecomment-267243933,1,['log'],['log-likelihood']
Testability,"@magicDGS I don't think so. Those tests have been failing forever. I think someone finally fixed the bug that was causing the email notifications to not happen. They're useless and annoying though, so I disabled that test... We haven't fixed it in years, so we're unlikely to do so now...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411500413:34,test,tests,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5094#issuecomment-411500413,2,['test'],"['test', 'tests']"
Testability,"@magicDGS I forgot about your question and apologize for the delay. The thing to understand is that in GATK 4 the only use for this class (except for the artificial case of unit tests) is to be filled immediately after construction with likelihoods from `PairHMM`. Therefore, the initialization is irrelevant to our purposes. I am loathe to add anything to the javadoc because confusion only arises relative to the deprecated `PerReadAlleleLikelihoodMap`, which will be forgotten in GATK 4.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2311#issuecomment-272471620:178,test,tests,178,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2311#issuecomment-272471620,1,['test'],['tests']
Testability,"@magicDGS I glanced at the tests and it appears there may be a scientific validation component, which I am unfamiliar with (I'm in an intro to Java course currently). Is this the case? If scientific validation is needed, then it is best to involve someone familiar with validation, e.g. Laura or Yossi. If all you need is data that can be run through these commands, I can put this together. Let me know. I'm late to these efforts, but I'd like to check one thing. Because of the way GRCh38 contigs are parsed, e.g. the HLAs that contain colons in their names, I believe we now prefer Picard-style intervals lists that tab-separate values instead of the `10:96000399-96000421` format that RealignerTargetCreator produces. I'm not certain of the status of GATK-style intervals lists, but I do know that the CNV developers have swiched to Picard-style. Is this what is produced by the new RealignerTargetCreator?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371506127:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371506127,1,['test'],['tests']
Testability,"@magicDGS I have long wanted to do this, it's very sill to have TestNG in our uberJar...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1481#issuecomment-289575758:64,Test,TestNG,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1481#issuecomment-289575758,1,['Test'],['TestNG']
Testability,"@magicDGS I like your suggestion of factoring out a CountingFilter class that can be reused for both filter types. Ideally, I think we should first get https://github.com/broadinstitute/gatk/pull/2218/files in first (it has some minor changes to CountingReadFilter). Hopefully that will be soon. In the meantime, if you're so inclined, you might try doing the CountingFilter refactoring as part of this PR (which still needs tests), since you'll have two clients for it. That will definitely require some careful refactoring of the existing classes in order to retain the current CountingFilter behavior).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2195#issuecomment-261546961:425,test,tests,425,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2195#issuecomment-261546961,1,['test'],['tests']
Testability,@magicDGS I provide some example data for a tutorial at <https://gatkforums.broadinstitute.org/gatk/discussion/7156/howto-perform-local-realignment-around-indels>. Search the page for ` tutorial_7156.tar.gz`. I showcase illustrative sites within the tutorial and also in <https://software.broadinstitute.org/gatk/blog?id=7847>. I'm actually new to test data so what cases are you hoping to test with the data? The snippet in the tutorial data is much larger than you need so it would be good narrow down the test case.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3104#issuecomment-314886000:348,test,test,348,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3104#issuecomment-314886000,3,['test'],['test']
Testability,"@magicDGS I think we covered all of these points earlier in this thread, but both the GATK3 test data and the tutorial data are written against reference(s) we don't have in GATK4, and are much larger than we want to include in the repo. We would need tests that work against one of the references we already have included. See my other comments above regarding `@Experiemtnal`/`@Beta`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371244790:92,test,test,92,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371244790,2,['test'],"['test', 'tests']"
Testability,@magicDGS I think you're right about using the `com.esotericsoftware.minlog.Log.setLogger()` with the file logger that overrides `com.esotericsoftware.minlog.Log.print`.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2751#issuecomment-315792928:76,Log,Log,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2751#issuecomment-315792928,3,"['Log', 'log']","['Log', 'logger']"
Testability,"@magicDGS I will check on whether any of the data can be made available to you. However, the existing GATK3 tests look to be written against the b36 reference, which we can't include in GATK4 even using git-lfs. So either way, I think new tests have to be developed. A new PR would be fine (please include a link to this one), but my suggestion would be that we make sure we have a plan for how to get good test coverage for IndelRealigner before we go any further with RealignerTargetCreator.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-365644765:108,test,tests,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-365644765,3,['test'],"['test', 'tests']"
Testability,"@magicDGS I'm just seeing this ticket. Sorry, I've been focused elsewhere, so many tickets come through my inbox, and my main work is mostly not through this repo. I can make test data. . Can you clarify which of hg19 and b37 is represented for which contig (20 or 21) in the repo?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371287334:175,test,test,175,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371287334,1,['test'],['test']
Testability,"@magicDGS I'm not sure what you're planning on using it for. This class is only tested for tables with small values (such that the sum of the table is less than 400). And as @lh3 said above, the way the HypergeometricDistribution is implemented it can be slow for tables with large values.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-267203885:80,test,tested,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-267203885,1,['test'],['tested']
Testability,"@magicDGS In the interest of moving this PR along, perhaps it would be easier to just write an integration test for `ExampleSlidingWindowReadWalker` that uses a large interval from a more realistic bam (such as `CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam` from `large`). This would address most of my concerns, and we could create a ticket to eventually add exhaustive tests with synthetic reads in a future PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4682#issuecomment-418453819:107,test,test,107,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4682#issuecomment-418453819,2,['test'],"['test', 'tests']"
Testability,@magicDGS It looks like jitpack runs `./gradlew install` ( https://jitpack.io/docs/BUILDING/#gradle-projects ) which will create both the normal and testutils jars after that's split out. So it should be fine. You'll obviously have to change how you import the jars to include the test utils jar but there's no getting around that.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-413614200:149,test,testutils,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5056#issuecomment-413614200,2,['test'],"['test', 'testutils']"
Testability,"@magicDGS It looks like you have triggered a few new compiler errors in the last branch, namely in the following places:. ```; /gatk/src/test/java/org/broadinstitute/hellbender/tools/spark/sv/discovery/SVDiscoveryTestDataProvider.java:33: error: cannot find symbol; BaseTest.b38_reference_20_21, ReferenceWindowFunctions.IDENTITY_FUNCTION);; ^; symbol: variable BaseTest; location: class SVDiscoveryTestDataProvider; /gatk/src/test/java/org/broadinstitute/hellbender/tools/copynumber/formats/SampleLocatableCollectionUnitTest.java:30: error: cannot find symbol; private static final String TEST_SUB_DIR = toolsTestDir + ""copynumber/formats"";; ^; symbol: variable toolsTestDir; location: class SampleLocatableCollectionUnitTest; /gatk/src/test/java/org/broadinstitute/hellbender/tools/copynumber/utils/annotatedregion/SimpleAnnotatedGenomicRegionUnitTest.java:18: error: cannot find symbol; private static final String TEST_FILE = publicTestDir + ""org/broadinstitute/hellbender/tools/copynumber/utils/combine-segment-breakpoints-with-legacy-header-learning-combined-copy-number.tsv"";; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-341143259:137,test,test,137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475#issuecomment-341143259,3,['test'],['test']
Testability,@magicDGS Just want to keep you up-to-date. The release is taking a bit longer than expected. I'll let you know when it's out so you can test it out.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3532#issuecomment-331930379:137,test,test,137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3532#issuecomment-331930379,1,['test'],['test']
Testability,"@magicDGS My apologies for the long delay on this. It looks like there are still quite a few standard porting issues that need to be addressed in this PR (brackets, finals, multiple top-level public classes, outdated GATK3 usage example, remove references to RODs, kebabify, etc., etc.). There is also the bigger issue of testing and validation - ideally at a minimum we'd reproduce the existing GATK3 tests, but since these are dependent on large, private files, those tests will have to be replaced with new tests, and validated/compared against GATK3. These same issues will come up with IndelRealigner. @vdauwera @sooheelee Even with @magicDGS graciously volunteering to do the work of porting the code, retaining the indel realignment tools will require internal review, helping with test development and validation, and support. Before we commit to that, I guess I want to make sure that this is indeed a high priority, and that you think porting this to GATK4 is a better option than relying on GATK3, or letting @magicDGS port it to ReadTools ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-363451643:322,test,testing,322,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-363451643,5,['test'],"['test', 'testing', 'tests']"
Testability,"@magicDGS Now that we have full-sized b37 and hg38 references checked in to the large test data, is this old PR unblocked?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-453573374:86,test,test,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-453573374,1,['test'],['test']
Testability,"@magicDGS Overall, the documentation changes are good. A few more minor comments: ; - If these are classes that are really pegged to the usage of LIBS, then you may want to mention that in the javadocs for the class. A comment along the lines of ""these classes are fairly low-level, developers should probably confirm that their changes do not belong in a higher-level calss such as LIBS"". ; - I am okay with an informal test of the speed, even if you just look at some logs. From the review, it looks like behavior of higher-level API calls will be unchanged. >I think that because the LocusIteratorByState is already splitting by sample, that can improve even more performance, because it will come directly in the state where it can be used by-sample in an efficient way. And maybe, if the tool does not require to split by sample at all, we can add an option to disable that behavior while creating the tracker. Agreed. I do not think you need to worry about the flag, for now. If you'd like, file an issue, but I think it is low priority for us. I tend to be worried about new developers or contributors getting lost in the codebase. And many do not have experience w/ GATK3. Hence, the documentation about when to use the class and why it exists. A couple additional things:; - I found a typo (see my comment); - Can you document the `presorted` parameter? Make sure to mention that if a developer specifies false, and sorting is needed, it will be done under-the-hood.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2321#issuecomment-332215187:421,test,test,421,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2321#issuecomment-332215187,2,"['log', 'test']","['logs', 'test']"
Testability,"@magicDGS Please do add the additional test(s) for `MappingQualityReadFilter` in this branch. We've pushed back the point release until end of day on Monday, so there should be enough time. It's ok to move the additional read-filter-related constants to your new class, but I'd wait for tests to pass on the branch first before doing so.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4103#issuecomment-360851910:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4103#issuecomment-360851910,2,['test'],"['test', 'tests']"
Testability,"@magicDGS Review complete for now. Looks good but I have some nitpicks. I think they're almost all due to it being ancient gatk3 code that no one has updated in a long time. I'd recommend dropping the deprecated formats and only supporting mpilup single sample format which should allow for massive simplification of both the Codec and the Feature. . We need some unit tests for the codec itself since it has a bunch of different potential error cases, and we should have some integration tests for the tool that show it correctly failing on cases with errors.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1862#issuecomment-224417179:369,test,tests,369,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1862#issuecomment-224417179,2,['test'],['tests']
Testability,"@magicDGS Thank you for the update, I noticed one last minor thing I wanted to change so I just made the change myself, I'll merge when the test finish!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4283#issuecomment-361993531:140,test,test,140,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4283#issuecomment-361993531,1,['test'],['test']
Testability,@magicDGS Thank you. Looks good. I will merge this once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3223#issuecomment-316088747:56,test,tests,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3223#issuecomment-316088747,1,['test'],['tests']
Testability,"@magicDGS Thanks for doing this, but I've already [implemented](https://github.com/broadinstitute/gatk/commit/8106d95cf68e24983f1d0c31f041b4cae9f75f51) a native GATK version of this, rather than a port of the Picard tool - I just haven't quite finished the tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2232#issuecomment-256018604:257,test,tests,257,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2232#issuecomment-256018604,1,['test'],['tests']
Testability,"@magicDGS Thanks for the change. You make a good point, especially since we genotype samples with ambiguous PLs as no-calls when there is data to annotate. This looks good to me, but it seems that it didn't change any of the tests. Can you add a test somewhere that shows no-call output with annotations? For example, from some real data I've seen a genotype such that the VCF has; `1 13418 . G A,<NON_REF> 6402.35 . [INFO annotations] GT:AD:DP:GQ:PGT:PID:PL ./.:9,0,0:9:.:.:.:0,0,0,0,0,0`, which has 9 reference reads you could output strand orientation for.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2534#issuecomment-329095827:225,test,tests,225,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2534#issuecomment-329095827,2,['test'],"['test', 'tests']"
Testability,"@magicDGS That sounds like a solution that could work, but it does add complexity. If it's going to be a more complicated change it seems like there have to be some concrete advantages, and I don't know enough about it to know what those are. Could you describe some of the advantages of switching to SLF4J? Are there specific features that you want to use that aren't available in the current logger?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2176#issuecomment-259197743:394,log,logger,394,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2176#issuecomment-259197743,1,['log'],['logger']
Testability,"@magicDGS That sounds perfectly fine to use #3614 . Regardless, I think you are safe to merge unless that quick test is worrisome.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2321#issuecomment-332609705:112,test,test,112,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2321#issuecomment-332609705,1,['test'],['test']
Testability,@magicDGS The cloud tests are skipping now for your builds so they shouldn't all be marked as failures incorrectly. I was hoping that was fixed now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2401#issuecomment-281422903:20,test,tests,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2401#issuecomment-281422903,1,['test'],['tests']
Testability,@magicDGS There's some test failures here still:. ```; java.lang.NullPointerException; at org.broadinstitute.hellbender.tools.funcotator.Funcotator.closeTool(Funcotator.java:174); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:893); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:110); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:175); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:194); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:152); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:138); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:179); at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:32); at ; ```. And it looks like it needs another rebase to account for the argument renaming that happened right before the 4.0.0.0 release. Once those are resolved I think we should be good to merge and get this in 4.0.1.0,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3998#issuecomment-358372918:23,test,test,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3998#issuecomment-358372918,1,['test'],['test']
Testability,@magicDGS This is a big improvement. Thank you for being the alpha tester for all of this.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2246#issuecomment-259000338:67,test,tester,67,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2246#issuecomment-259000338,1,['test'],['tester']
Testability,@magicDGS Was about to merge and noticed that it looks like the test files for these tests can be removed as well. Can you verify and include them if so ? Thanks.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3694#issuecomment-338199461:64,test,test,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3694#issuecomment-338199461,2,['test'],"['test', 'tests']"
Testability,"@magicDGS We are likely going to address this by splitting off a separate travis matrix entry that systematically tries to test every implementation of the PairHMM, and skips tests for implementations not supported by the hardware.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3732#issuecomment-342251101:123,test,test,123,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3732#issuecomment-342251101,2,['test'],"['test', 'tests']"
Testability,"@magicDGS We face this same issue with many of these tool ports - porting the code is often the easy part by far. I think we'd want to have a set of tests with reasonably good code coverage to start reviewing these PRs, as well as getting concordance with GATK3. And we'll have the same issue with IndelRealigner. I don't have any dataset at the ready other than the one used in GATK3. I can see if any of that data, which is currently private, can be shared with you if thats helpful.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-364606227:149,test,tests,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-364606227,1,['test'],['tests']
Testability,"@magicDGS We have an idea of what the problem is. If we're right, it will be fixed in the next GKL release, which should happen sometime tomorrow. I will then create a GATK branch that uses the new GKL release for you to test (and to ultimately merge into master). If we're wrong about what is causing the problem, we will have to continue to debug. Sorry about the slowness of this process. Like I said before, it's mostly due to us not having a system where we can reproduce the issue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3532#issuecomment-330636186:221,test,test,221,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3532#issuecomment-330636186,1,['test'],['test']
Testability,"@magicDGS We recently hit this ourselves (https://github.com/broadinstitute/gatk-protected/issues/1048). The fix is easy, but I'd like to find a way to repro it as a standalone test in Barclay, with no dependencies, i.e., no gatk dependencies. Also, to use docgen for your toolkit, you'll need to provide the source for common classes like read filters, argument collections, etc. You may have noticed that gatk-protected does this. I expect that list will grow as we add @DocumentedFeature to more tools and encounter more dependencies.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2739#issuecomment-303124944:177,test,test,177,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2739#issuecomment-303124944,1,['test'],['test']
Testability,"@magicDGS We'd definitely prefer to not take partially developed versions of either of these tools (or @Experimental or @Beta versions). We should aim to have either a single PR with everything, or two PRs, one for each tool, with complete functionality, including tests and test data, rather than an ongoing stream of partial PRs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371501208:265,test,tests,265,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371501208,2,['test'],"['test', 'tests']"
Testability,"@magicDGS We'd like to, but are currently prevented from migrating to Java 11 by our Spark dependency (see https://issues.igniterealtime.org/browse/SPARK-2017). This ticket is specifically for the task of benchmarking alternate Java 8 JDKs, rather than upgrading to newer versions of Java.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5279#issuecomment-429064810:205,benchmark,benchmarking,205,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5279#issuecomment-429064810,1,['benchmark'],['benchmarking']
Testability,@magicDGS You really made it much cleaner. Huge improvement over the old code. Thank you! . . Back to you with a few typos and request for a few more tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1862#issuecomment-224946148:150,test,tests,150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1862#issuecomment-224946148,1,['test'],['tests']
Testability,"@magicDGS `--nWayOut` is absolutely necessary for co-cleaning tumor-normal pairs of samples. This allows upfront filtering of tumor mutations against the matched-normal, the panel of normals and the germline sites to be much more efficient (in somatic mutation calling). . I will then go ahead and start making a base test dataset. The repo tests look like they tested all sorts of things, e.g. bad CIGARs. Will you be altering the base data I provide towards these other tests or are we focused just on the primary functionality? If more than just a normal dataset is needed, then do specify these requirements. Remember that I do not as of yet understand Java code. It would be helpful to also see the previous test data if its features are what we want to recapitulate. If we are instead making up new tests, then that is fine too. Since you bring up nwayout, it seems the test should accommodate two samples. I was thinking to make alt-ware mapped GRCh38 snippets that included ALT/HLA contigs, just to cover our bases. In fact, I can make test data on post-alt processed reads, to further accommodate recent advances in genomics. Let me know your thoughts.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371944022:318,test,test,318,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371944022,8,['test'],"['test', 'tested', 'tests']"
Testability,@magicDGS can you add tests for `N` in pileups? I forgot to ask for it in #1774,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1833#issuecomment-220026143:22,test,tests,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1833#issuecomment-220026143,1,['test'],['tests']
Testability,@magicDGS can you please attach /Users/daniel/workspaces/gatk4test/hs_err_pid31197.log to this issue?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1985#issuecomment-231371085:83,log,log,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1985#issuecomment-231371085,1,['log'],['log']
Testability,@magicDGS here you go. All unit tests in SV package now.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3789:32,test,tests,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3789,1,['test'],['tests']
Testability,@magicDGS the tests fail - maybe you misplaced the expected files (?),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1836#issuecomment-221759277:14,test,tests,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1836#issuecomment-221759277,1,['test'],['tests']
Testability,"@magicDGS this looks good. 2 more tests to add, then rebase and squash and it'll be ready to merge",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1836#issuecomment-221654197:34,test,tests,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1836#issuecomment-221654197,1,['test'],['tests']
Testability,@magicDGS 👍 Will merge when tests are done. Sorry for the back and forth. I think I might make the separate changes to customCommandLineValidation separately.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2226#issuecomment-255883571:28,test,tests,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2226#issuecomment-255883571,1,['test'],['tests']
Testability,@magicDGS 👍 when the tests pass. I didn't realize how broken this was. Sorry it was so painful!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2204#issuecomment-255847808:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2204#issuecomment-255847808,1,['test'],['tests']
Testability,"@magicDGS, after much discussion with @droazen, we will make this test set even smaller. Also, the current test set will be temporary, to unimpede you, until updates to the main test set can be made (discussion to start next week). @cmnbroad says we need to keep an eye out for coverage in the tests, given the need to make this dataset extremely small. So I removed chr17 from the mini-reference, such that only four small snippets of reference from various chromosomes remained. However, it appears there are only two usable indel realignments going on with GATK3. Note thate these are targeted exome samples with comparatively low coverage. [for_magicDGS.zip](https://github.com/broadinstitute/gatk/files/1820785/for_magicDGS.zip). There are two samples, so as to enable testing nWayOut, and an artificial reference `hg38_Shl01`. The two sites to hone in on are chr11:177568 and chr11:207134. Note also that the BAMs are in an invalid state according to ValidateSamFile. However, GATK3 RealignerTargetCreator and IndelRealigner did not seem to mind. I think these tools should allow processing of BAMs in any validation state. Apologies for the meager state of the data. On the bright side, the data set including the ref is only 23MB and will meet with @droazen's approval in terms of size. . Good luck @magicDGS.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-373845600:66,test,test,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-373845600,5,['test'],"['test', 'testing', 'tests']"
Testability,@magicDGS. It looks like there's some sort of compilation error here:. ```; /gatk/src/test/java/org/broadinstitute/hellbender/tools/walkers/markduplicates/MarkDuplicatesGATKIntegrationTest.java:180: error: incompatible types: inference variable T has incompatible bounds; ((GATKDefaultCLPConfigurationArgumentCollection) markDuplicatesGATK.configArgs).TMP_DIR = CollectionUtil.makeList(outputDir);; ^; equality constraints: String; lower bounds: File; where T is a type-variable:; T extends Object declared in method <T>makeList(T...); /gatk/src/test/java/org/broadinstitute/hellbender/tools/walkers/markduplicates/MarkDuplicatesGATKIntegrationTest.java:256: error: incompatible types: inference variable T has incompatible bounds; ((GATKDefaultCLPConfigurationArgumentCollection) markDuplicatesGATK.configArgs).TMP_DIR = CollectionUtil.makeList(outputDir);; ^; equality constraints: String; lower bounds: File; where T is a type-variable:; T extends Object declared in method <T>makeList(T...); ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3998#issuecomment-355606477:86,test,test,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3998#issuecomment-355606477,2,['test'],['test']
Testability,"@magicDGS:. 1. Yes, you're right that you're already correctly testing that you get the right number of shards back. No need for an extra assertion. 2. I think that realistically-sized reads (of differing lengths!) does add to the unit test, since it's important to test with reads that overlap extensively with other reads. You'll also want to vary the read lengths to test with reads of different lengths at the same start position, shorter reads that start after longer reads, and any other arrangements that are significant to your `ShardingIterator`. . It shouldn't be too difficult to write a simple method that uses `ArtificialReadUtils` to create small pileups of reads within a given interval (might be worth extracting into `ArtificialReadUtils` itself so that future tests can use it).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4682#issuecomment-389998139:63,test,testing,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4682#issuecomment-389998139,6,"['assert', 'test']","['assertion', 'test', 'testing', 'tests']"
Testability,"@magicDSG Can you rebase this since it now has conflicts with the doc update PR, and then we can merge when test pass (might as well squash as well.) Thx.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3195#issuecomment-328841365:108,test,test,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3195#issuecomment-328841365,1,['test'],['test']
Testability,"@magigDGS There are 4 separate issues in here, and I have slightly different feelings about each of them. Some comments:. - Removing the RNA string seems fine.; - I deliberately left the GATK test program group in because even though there is a Picard one, its harmless, and easier for people to find.; - I have reservations about exposing and sharing the super category maps. The Picard docgen process is pretty much unused and unmaintained at this point. The `getSuperCategoryMap` mthod really shouldn't be public, and it may even be removed in the near future. The GATK supercategory map ""truth"" should be defined by GATK.; - I'm reluctant to make the GATK `getSuperCategoryMap` public, because I don't think it can have any kind of useful contract. Its tied to the GATK doc templates and doc process, which we need to be able to change freely. It seems much safer for ReadTools to define it's own set categories (the overlap would probably pretty minimal I think - maybe just ReadFilters, right ?).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4247#issuecomment-360832234:192,test,test,192,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4247#issuecomment-360832234,1,['test'],['test']
Testability,"@marcopessoa, the fixes for this issue are not in master yet - here is the pending PR #6305. You could use the [genomicsdb_120_1](https://github.com/broadinstitute/gatk/tree/genomicsdb_120_1) branch to test out your scenario and post what you find to provide further validation for the changes in the PR. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6275#issuecomment-573447804:202,test,test,202,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6275#issuecomment-573447804,1,['test'],['test']
Testability,"@matthdsm this was intentionally left out of the recent 4.6 release, but should go into the next minor release. Would of course appreciate any testing/feedback from the community before then!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-2200883096:143,test,testing,143,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-2200883096,1,['test'],['testing']
Testability,"@maxim-h Thank you again for bringing these issues to our attention! . I am on the GATK Team and oversee the GATK forum; I'm concerned about your troubles with signing into your account to create a new forum post. If you could answer some of the following questions, I hope to be able to help identify the origin of the issue. When did you start having trouble signing into your GATK account? ; What is the username/email address associated with your GATK Forum account? ; Could you please walk me through more of what you are seeing/doing when trying to log into your existing GATK account?. Sign In Screen: <img width=""707"" alt=""Screen Shot 2022-11-30 at 12 40 52 PM"" src=""https://user-images.githubusercontent.com/108379952/204869379-633a776f-45ba-4666-9935-e8ce563b6ef3.png"">. Thank you again, and I look forward to hearing back from you!. Anthony",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8115#issuecomment-1332524357:555,log,log,555,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8115#issuecomment-1332524357,1,['log'],['log']
Testability,"@mbabadi @samuelklee The PythonScriptExecutor, which is based on the same underlying code as the RScriptExecutor, redirects the child process's stdout/stderr to an anonymous pipe, and then swallows anything written there without propagating it, unless the process exits with a non-zero exit code. There is a new [StreamingPythonExecutor](https://github.com/broadinstitute/gatk/commit/e59e41a0c90a169291be2317f96a1b31337ae9d9) (not yet merged) that allows you to keep the Python process alive; send and retrieve multiple commands, and retrieve the output. But it's more complicated to use, since its not one-shot, synchronous command execution. If you're going to use the PythonScriptExecutor (which is probably the best choice if its sufficient), then we should probably add a setting that causes it to redirect Python's stderr output to GATK's log output.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3838#issuecomment-345787089:845,log,log,845,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3838#issuecomment-345787089,1,['log'],['log']
Testability,@mbabadi Can you take a look - I know the tool is beta but as it stands its a bit painful to figure out whats happening when the tests fail.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3552#issuecomment-327582630:129,test,tests,129,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3552#issuecomment-327582630,1,['test'],['tests']
Testability,"@mbabadi I pushed new PoNs, I think that should get somatic tests to pass. Sorry about that, hope you didn't go too far down the rabbit hole trying to debug!. If you need to make changes to the Docker or Travis environments, perhaps coordinate with @cmnbroad to make them directly in #3912, which is still open.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-350180427:60,test,tests,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-350180427,1,['test'],['tests']
Testability,"@mbabadi I think the somatic tests are fixed: https://travis-ci.org/broadinstitute/gatk/builds/313333659?utm_source=email&utm_medium=notification Did you pull my commit?. Feel free to cut out some of the test cases if the WDL tests are too slow. Especially now that there is no real distinction between WGS/WES besides -L (except for in PreprocessIntervals, which integration tests should cover).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-350248239:29,test,tests,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-350248239,4,['test'],"['test', 'tests']"
Testability,"@mbabadi I've updated my PR to use miniconda3. @mbabadi @lucidtronix @samuelklee I think we should aim for tools that at least run out-of-box, without depending on any out-of-band configuration other than the conda env. On top of that we can provide guidance/configs for users on how to enable further optimizations, like g++. Does that sound like an achievable goal ?. As for the docker, we're going to have strike the right balance between image bloat and performance(including test performance). I think we're around 4+ gig now, and counting. Before the Python integration we were at 1.9G, and trying to find ways to reduce it. So lets see where we wind up but keep that in mind. Finally, we need to find a way to install the (GATK) python package(s) without depending on access to the GATK repo. Right now I think the gCNV branch has a ""pip install from source"" added to the conda env .yml. That will work on the docker at the moment (and thus on travis), but that won't work for non-docker users how don't have source/repo access. Also, one of the proposals to reduce the size of the docker is to remove the repo clone that is currently there. My proposal is that we change the gradle build to create an archive/zip of the python source (this would include the VQSR-CNN package code as well as gCNV kernel). We can then copy that on to the docker image, and pip-install it from the copy. That would retain the ability to always run travis tests based on the code in the repo, and also keep the nightly docker image in sync. We'll also have deliver the archive as an artifact somehow (perhaps including PyPi) for non-docker users.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3912#issuecomment-350303277:480,test,test,480,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3912#issuecomment-350303277,2,['test'],"['test', 'tests']"
Testability,"@mbabadi Looks like an integration test is now failing, which was not the case with the previous (Travis-related?) failures:. Gradle suite > Gradle test > org.broadinstitute.hellbender.tools.exome.germlinehmm.xhmm.XHMMSegmentGenotyperIntegrationTest.testRun[0](org.broadinstitute.hellbender.tools.exome.germlinehmm.xhmm.XHMMSegmentCallerBaseIntegrationTest$XHMMData@335a85cb) FAILED; org.broadinstitute.hellbender.exceptions.UserException$BadInput: Bad input: The sample names in the provided segments file does not match those on which HMM output is given; at org.broadinstitute.hellbender.utils.hmm.segmentation.HMMPostProcessor.composeGenotypingSegmentsFromSegmentsFile(HMMPostProcessor.java:552); at org.broadinstitute.hellbender.utils.hmm.segmentation.HMMPostProcessor.writeVariantsToVCFWriterOnGivenSegments(HMMPostProcessor.java:282); at org.broadinstitute.hellbender.tools.exome.germlinehmm.xhmm.XHMMSegmentGenotyper.makeCalls(XHMMSegmentGenotyper.java:79); at org.broadinstitute.hellbender.tools.exome.germlinehmm.xhmm.XHMMSegmentCallerBase.doWork(XHMMSegmentCallerBase.java:100); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:115); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:170); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:189); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:122); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:109); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:129); at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:28); at org.broadinstitute.hellbender.tools.exome.germlinehmm.xhmm.XHMMSegmentGenotyperIntegrationTest.testRun(XHMMSegmentGenotyperIntegrationTest.java:60)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2813#issuecomment-307206903:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2813#issuecomment-307206903,4,['test'],"['test', 'testRun']"
Testability,"@mbabadi Note that the GATK log output now goes to stderr, not stdout, to enable pipelining for select tools.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4629#issuecomment-379365531:28,log,log,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4629#issuecomment-379365531,1,['log'],['log']
Testability,"@mbabadi On testing, I think what you suggest is workable. I thought you guys would want unit tests for your own purposes - but for travis we're going to have to depend on java-driven tests anyway, so as long as we have good tests that should work.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3838#issuecomment-345794012:12,test,testing,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3838#issuecomment-345794012,4,['test'],"['testing', 'tests']"
Testability,"@mbabadi Thx. I think we need to take this, but have you actually run the tests on a Mac using this environment ? I can now create the environment with this change, but some of the python group tests fail when run from within it. If I just start Python with it activated and do ""import gcnvkernel"" or even ""import pymc3"", it fails. It might be a local issue - it would be comforting to know that we've actually solved the full problem and someone has successfully run from this env on a mac. >>> import gcnvkernel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/cnorman/miniconda3/envs/gatk/lib/python3.6/site-packages/gcnvkernel/__init__.py"", line 1, in <module>; from pymc3 import __version__ as pymc3_version; File ""/Users/cnorman/miniconda3/envs/gatk/lib/python3.6/site-packages/pymc3/__init__.py"", line 12, in <module>; from .sampling import *; File ""/Users/cnorman/miniconda3/envs/gatk/lib/python3.6/site-packages/pymc3/sampling.py"", line 14, in <module>; from .plots.traceplot import traceplot; File ""/Users/cnorman/miniconda3/envs/gatk/lib/python3.6/site-packages/pymc3/plots/__init__.py"", line 1, in <module>; from .autocorrplot import autocorrplot; File ""/Users/cnorman/miniconda3/envs/gatk/lib/python3.6/site-packages/pymc3/plots/autocorrplot.py"", line 2, in <module>; import matplotlib.pyplot as plt; File ""/Users/cnorman/miniconda3/envs/gatk/lib/python3.6/site-packages/matplotlib/pyplot.py"", line 116, in <module>; _backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup(); File ""/Users/cnorman/miniconda3/envs/gatk/lib/python3.6/site-packages/matplotlib/backends/__init__.py"", line 60, in pylab_setup; [backend_name], 0); File ""/Users/cnorman/miniconda3/envs/gatk/lib/python3.6/site-packages/matplotlib/backends/backend_macosx.py"", line 17, in <module>; from matplotlib.backends import _macosx; RuntimeError: Python is not installed as a framework. The Mac OS X backend will not be able to function correctly if Python is not in",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4087#issuecomment-356079886:74,test,tests,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4087#issuecomment-356079886,2,['test'],['tests']
Testability,"@mbabadi commented on [Thu Jan 05 2017](https://github.com/broadinstitute/gatk-protected/issues/843). - [ ] sinusoidal test data in `FourierLinearOperatorNDArrayUnitTest`; - [ ] case-sample calling on rearranged targets in `GermlineCNVCallerIntegrationTest`; - [ ] concordance on parameter estimation in `GermlineCNVCallerIntegrationTest`; - [ ] test Spark results match local results in `GermlineCNVCallerIntegrationTest`; - [ ] report statistics on max likelihood copy ratio as well in `GermlineCNVCallerIntegrationTest`; - [ ] report statistics on local copy ratio posteriors as well in `GermlineCNVCallerIntegrationTest`; - [ ] unit tests for `ComputableGraphStructure`; - [ ] unit tests for `ImmutableComputableGraph`; - [ ] unit tests for ensuring that ICG nodes are treated as immutable and not modified by mistake; - [ ] unit tests for `CoverageModelEMWorkspaceMathUtils`; - [ ] unit tests for `CoverageModelParameters` (reading/writing); - [ ] unit tests for `CoverageModelSparkUtils`; - [ ] the issue with Spark tests and custom serializers (gCNV Spark tests are currently disabled). **Discussion about gCNV ICG unit tests (May 1st, 2017):**; It is possible to automate the test for ComputableNodeFunctions. One initializes the parents to random values, calls the function, and checks whether it has had any side effects on the parents. One must make a random-data-provider-of-some-sort for each parent node because the parent INDArrays have different shapes. For other functions in CoverageModelEMComputeBlock and CoverageModelEMWorkspace that query ICG nodes -- one needs to create a firewall. One can elevate all such functions to classes that essentially behave functionally, (ICGNodeProvider, List<NodeKey>, extra arguments) -> output, as opposed to writing vanilla member functions such as CoverageModelEMComputeBlock.getBiasLatentPosteriorDataUnregularized, etc. Then we can write automated unit tests for these classes. Another approach is to write a thin ImmutableNDArray interface ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2929:119,test,test,119,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2929,10,['test'],"['test', 'tests']"
Testability,@mbabadi commented on [Thu Jan 12 2017](https://github.com/broadinstitute/gatk-protected/issues/853). - [ ] thread capping in `SynchronizedUnivariateSolver`; - [ ] faster calculation of prior copy number contribution to log likelihood in `IntegerCopyNumberExpectationsCalculator`; - [ ] optimize `CoverageModelEMWorkspace.replaceMaskedEntries` using Nd4j native ops,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2931:220,log,log,220,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2931,1,['log'],['log']
Testability,"@mbabadi commented on [Thu May 18 2017](https://github.com/broadinstitute/gatk-protected/issues/1058). - [ ] good choice of default parameters; - [ ] double-check assertion coverage in `CoverageModelArgumentCollection.validate()`; - [ ] if a model is provided, ARD and number of PCs must be overridden (currently, an exception is thrown if there is a discrepancy between model parameters and arguments). Relevant discussion:; **Mehrtash**: We may be able to get rid of a number of these parameters. Though, generally speaking, I'd rather expose more than less, with good default values and bold advanced disclaimers w/ proper documentation as you suggested. This is the case with sophisticated tools like HaplotypeCaller, StarAligner, etc. Soon enough, we will get strange errors from various users many of which can be resolved by changing a certain advanced parameter. Without exposing them, we will have to create patches for them and/or build custom jars.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2995:163,assert,assertion,163,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2995,1,['assert'],['assertion']
Testability,@mbabadi commented on [Thu May 18 2017](https://github.com/broadinstitute/gatk-protected/issues/1059). We have to learn the upcoming Nd4j _workspaces_ and use it to reduce the memory footprint of gCNV. It is already merged but the latest Nd4j release (0.8.0) doesn't have it yet. API:; https://github.com/deeplearning4j/nd4j/blob/master/nd4j-buffer/src/main/java/org/nd4j/linalg/api/memory/conf/WorkspaceConfiguration.java; https://github.com/deeplearning4j/nd4j/blob/master/nd4j-buffer/src/main/java/org/nd4j/linalg/api/memory/MemoryWorkspaceManager.java; https://github.com/deeplearning4j/nd4j/blob/master/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/memory/abstracts/Nd4jWorkspace.java; https://github.com/deeplearning4j/nd4j/blob/master/nd4j-buffer/src/main/java/org/nd4j/linalg/api/memory/MemoryWorkspace.java. Tests:; https://github.com/deeplearning4j/nd4j/blob/master/nd4j-backends/nd4j-tests/src/test/java/org/nd4j/linalg/workspace/BasicWorkspaceTests.java; https://github.com/deeplearning4j/nd4j/blob/master/nd4j-backends/nd4j-tests/src/test/java/org/nd4j/linalg/workspace/EndlessWorkspaceTests.java; https://github.com/deeplearning4j/nd4j/blob/master/nd4j-backends/nd4j-tests/src/test/java/org/nd4j/linalg/workspace/SpecialWorkspaceTests.java,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2996:840,Test,Tests,840,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2996,7,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,@mbabadi commented on [Tue May 02 2017](https://github.com/broadinstitute/gatk-protected/issues/1021). - [ ] factor I/O methods out of `CoverageModelEMWorkspace` and to a new class; - [ ] shrink the exposed API; - [ ] rename/refactor `CopyRatioCallingMetadata` appropriately; - [ ] rename/move `MathObjectAsserts` to test,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2979:317,test,test,317,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2979,1,['test'],['test']
Testability,@mbabadi commented on [Wed Apr 19 2017](https://github.com/broadinstitute/gatk-protected/issues/990). `RobustBrentSolver` is a univariate solver developed as a part of GATK coverage model. It has a Brent solver at the core but tries to avoid spurious non-bracketing conditions by creating a collection of refined sub-brackets. The implementation needs to be made more flexible:; - Allow the user to specify how sub-brackets are generated. The default grid is a logarithmic grid concentrated about the leftmost endpoint followed by uniform refinement of each grid element.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2971:461,log,logarithmic,461,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2971,1,['log'],['logarithmic']
Testability,"@mbabadi commented on [Wed Oct 19 2016](https://github.com/broadinstitute/gatk-protected/issues/745). The PoN must:. - [x] Contain as much non-trivial information as possible:; \* Model parameters (W, \Psi, m; also, ordered norms of W); \* Sample names used to make the PoN; \* Posterior expectations (\gamma, z, d, total remove variance, total unexplained variance); \* Useful distributions (bootstrapped distribution of log likelihoods and sample-specific variances); \* Command-line used to make the PoN (add a log file to the HDF5 bundle in the end). - [x] Be human-readable ideally. Binary dumps are fast but are difficult to work with in debugging.; - [ ] Encapsulated and easily shared, perhaps via HDF5 bundles. ---. @mbabadi commented on [Thu May 18 2017](https://github.com/broadinstitute/gatk-protected/issues/745#issuecomment-302465665). This is partially addressed in PR https://github.com/broadinstitute/gatk-protected/pull/857. We must, however, decide whether or not we want to bundle models into HDF5 blobs.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2905:422,log,log,422,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2905,2,['log'],['log']
Testability,"@mbabadi you're welcome! . About those two issues--I learned that with VPN on, Spark tools error locally (thanks to Steve). I turned off my VPN connection and am able to run PileupSpark locally. (There is an issue ticket on this at https://github.com/broadinstitute/gatk/issues/1534.). One other thing to note for PipeupSpark documentation--the tool will error if the output filename already exists. That is, unlike other GATK tools, it will not overwrite existing file names. Either this unusual behavior should be fixed or mentioned in the tooldoc. I'm testing this with dataproc now. When running locally, neither CollectBaseDistributionByCycleSpark nor CollectInsertSizeMetricsSpark output the PDF file. So this seems a bug and I'll put in an issue ticket if there isn't one already.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4068#issuecomment-356028074:555,test,testing,555,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4068#issuecomment-356028074,1,['test'],['testing']
Testability,@mcovarr Are those files not used anywhere? Why are tests passing without them?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8258#issuecomment-1480213743:52,test,tests,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8258#issuecomment-1480213743,1,['test'],['tests']
Testability,"@mcovarr Could you please try the new `ReferenceConfidenceVariantContextMerger.mergeWithRemapping()` method out in the GVS branch, and report whether your tests pass? Should be a drop-in replacement for `ReferenceConfidenceVariantContextMerger.merge()`. Once https://github.com/broadinstitute/gatk/issues/8317 is fixed, we'll make this behavior the default and ask you to switch back to `merge()`, as discussed recently.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8318#issuecomment-1546259917:155,test,tests,155,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8318#issuecomment-1546259917,1,['test'],['tests']
Testability,"@mcovarr Follow-up on the codecov thing. Apparently codecov is just not configured correctly? I asked at an Engine Team meeting and it looks like we're just not excluding test files for some reason, so that explains why it's calling out my test file as not covered. We could change it to ignore that directory, since it makes sense to not check for test coverage on test files, but I'm hesitant to include it here because it's sort of outside the scope of this PR.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8708#issuecomment-2000123077:171,test,test,171,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8708#issuecomment-2000123077,4,['test'],['test']
Testability,"@mcovarr Great - thanks for doing that. The number that we need is one that corresponds to the number of variant contexts that will be passed to `apply`. Is that what this does ? . If so, is there any reason that @KevinCLydon can't/shouldn't start using this branch for his testing ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8344#issuecomment-1577351781:274,test,testing,274,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8344#issuecomment-1577351781,1,['test'],['testing']
Testability,"@mcovarr I checked the test files in compressed as I was trying to save space, but I kind of agree that it's not very necessary (and they're not that big), so will decompress.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8137#issuecomment-1371299167:23,test,test,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8137#issuecomment-1371299167,1,['test'],['test']
Testability,"@mcovarr I committed your suggestions, fixed the failing tests, and rebased. Should be ready for you to build the docker image and do whatever final checks are necessary.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8708#issuecomment-2007671073:57,test,tests,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8708#issuecomment-2007671073,1,['test'],['tests']
Testability,@mcovarr Interesting. Maybe they were additional test files added when you incorporated the vqsr lite changes? It was very unclear to me if there were intentional changes / additions in the variant store branch or if things were just out of date / slightly different than master. Maybe we should have someone who was involved in that take a look so we can be sure to incorporate any positive changes that were made.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8256#issuecomment-1481275060:49,test,test,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8256#issuecomment-1481275060,1,['test'],['test']
Testability,@mcovarr This should prevent tests from triggering when only files in that subdirectory are touched. See https://github.com/broadinstitute/gatk/pull/8252 which demonstrates the tests not runnning.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8250#issuecomment-1476976916:29,test,tests,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8250#issuecomment-1476976916,2,['test'],['tests']
Testability,"@mcovarr added two tests (and refactored a dataprovider, because I'm a good person) -- take another look?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7864#issuecomment-1152529144:19,test,tests,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7864#issuecomment-1152529144,1,['test'],['tests']
Testability,"@mdayii The most likely reason for this is that you're not running gatk from within the shell that has the conda env activated. One test you might try is to start `python` from the same shell where you activated the conda env, and see if the command `import gatktool` succeeds.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7397#issuecomment-895597634:132,test,test,132,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7397#issuecomment-895597634,1,['test'],['test']
Testability,"@meganshand - I apologize - I may have confused the semantics. ; I am using ""PL"" in the way they are written in the VCF (-10*log(likelihood)), so high PLs mean low quality allele. ; Taking minimum between the two samples means that we keep the allele if it is sufficiently strongly supported in either sample. ; Could you suggest how to clarify this?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8841#issuecomment-2150794076:125,log,log,125,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8841#issuecomment-2150794076,1,['log'],['log']
Testability,@meganshand - do you want me to re-run the tests that failed (seem unrelated)?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8347#issuecomment-1608826711:43,test,tests,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8347#issuecomment-1608826711,1,['test'],['tests']
Testability,@meganshand 1 very minor comment about the tests. 👍 After that. This is awesome to find such a simple solution.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2629#issuecomment-297761108:43,test,tests,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2629#issuecomment-297761108,1,['test'],['tests']
Testability,@meganshand Are you also making this change in gatk3? ; @droazen Do we want to update the expected test outputs if they will not match gatk3?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2629#issuecomment-297775609:99,test,test,99,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2629#issuecomment-297775609,1,['test'],['test']
Testability,"@meganshand Do you have a public mitochondrial bam that I could use for a test? If not, what if I took just the reads at the beginning of the contig, excluding any variants, and anonymized the header? That would be enough. Actually, if you do have an entire mitochondrial bam that's public, I wouldn't mind adding a mitochondrial integration test to the repo. . .",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406461195:74,test,test,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406461195,2,['test'],['test']
Testability,"@meganshand Here's a quick example:. ![image](https://user-images.githubusercontent.com/11076296/158385742-20a3303b-d8ce-4335-b42f-622da9bfa8d3.png); ![image](https://user-images.githubusercontent.com/11076296/158385777-6174f8b8-7abb-4b31-92d1-11cc8064854b.png). Note that the malaria data used was pretty small: chr1-2 training (~20k positive training/truth variants, ~50k negative training variants; note also that the threshold for determining negative training was not tuned---a threshold corresponding to a 98% truth sensitivity was arbitrarily chosen), chr3 validation (~50k variants), and chr4-6 test (~150k variants). The LL score is calculated from a validation set held out from the training/truth positives used to train the model, while the F1 score is calculated using ""orthogonal truth"" positives/negatives determined using 3 families of ~30 trios each. However, there's some arbitrariness in how we define the boundary for the latter positives/negatives, and hence some arbitrariness in the F1 score itself. But I'd expect using gold-standard GIAB truth would be more straightforward. Not sure how much we can conclude, but that the validation and test F1s are similar and that the validation LL score isn't *too* far off are encouraging. That said, there is a pretty big drop in recall when optimizing LL. But we should also expect some discrepancy between LL and F1, according to one of the papers linked above. I would hope that with more variants or reliable training/truth (as in your data), things might stabilize or line up better. I'll try running with more malaria data, as well. The following trios x sites heatmap (top plot) for the validation set might better illustrate the arbitrariness in F1 (click to enlarge):. ![image](https://user-images.githubusercontent.com/11076296/158385585-1a0dfe8e-d4b7-4770-aed0-19ad81162c92.png). Here, yellow = het errors (since these are supposed to be clonal malaria samples), red = Mendelian errors, grey = no calls, green = Mendelian con",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431:603,test,test,603,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7711#issuecomment-1067396431,1,['test'],['test']
Testability,@meganshand I added a very specific test to check for this bug that I introduced. I confirmed that the test fails before this change and passes after.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5123#issuecomment-414433802:36,test,test,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5123#issuecomment-414433802,2,['test'],['test']
Testability,@meganshand I assume you'll want an updated gatk-protected snapshot that incorporates this change (will require us to update some expected test outputs). Do you anticipate any other patches to public of this nature before you kick off the official runs of the tool?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2629#issuecomment-297773292:139,test,test,139,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2629#issuecomment-297773292,1,['test'],['test']
Testability,@meganshand I updated the integration tests. The only difference between versions of the tool that got overwritten by the integration tests seems to relate to overhang fixing being order-dependent. I'm going to open a ticket to farther explore this issue. Otherwise I would say it is ready for final review.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2021#issuecomment-237348835:38,test,tests,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2021#issuecomment-237348835,2,['test'],['tests']
Testability,@meganshand I will include testing for this bug as part of an overall mitochondria integration test using your NA12878 bam in a separate PR.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406838107:27,test,testing,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5038#issuecomment-406838107,2,['test'],"['test', 'testing']"
Testability,"@meganshand Latest build failed with:. ```; org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.testWithAllAnnotations FAILED; java.lang.AssertionError: Iterators differ at element [9]: FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification""> != FORMAT=<ID=NUMT,Number=1,Type=String,Description=""Potentially a polymorphic NuMT false positive rather than a real mitochondrial variant.""> expected [FORMAT=<ID=PL,Number=G,Type=Integer,Description=""Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification"">] but found [FORMAT=<ID=NUMT,Number=1,Type=String,Description=""Potentially a polymorphic NuMT false positive rather than a real mitochondrial variant."">]; at org.testng.Assert.fail(Assert.java:93); at org.testng.Assert.failNotEquals(Assert.java:512); at org.testng.Assert.assertEqualsImpl(Assert.java:134); at org.testng.Assert.assertEquals(Assert.java:610); at org.testng.Assert.assertEquals(Assert.java:578); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertHeadersMatch(VariantAnnotatorIntegrationTest.java:66); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.runVariantAnnotatorAndAssertSomething(VariantAnnotatorIntegrationTest.java:92); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertVariantContextsMatch(VariantAnnotatorIntegrationTest.java:55); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.assertVariantContextsMatch(VariantAnnotatorIntegrationTest.java:49); at org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest.testWithAllAnnotations(VariantAnnotatorIntegrationTest.java:224); Exception in thread ""Thread-5"" java.nio.file.ClosedFileSystemException; 	at com.google.common.jimfs.FileSystemState.checkOpen(FileSystemState.java:64); ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5842#issuecomment-477769414:130,test,testWithAllAnnotations,130,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5842#issuecomment-477769414,16,"['Assert', 'assert', 'test']","['Assert', 'AssertionError', 'assertEquals', 'assertEqualsImpl', 'testWithAllAnnotations', 'testng']"
Testability,@meganshand Looks good! You can squash and merge once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-266836243:54,test,tests,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-266836243,1,['test'],['tests']
Testability,"@meganshand There's no need to test before merging because this is a bug fix for the edge case of negative infinity log likelihoods from PairHMM, regardless.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5736#issuecomment-468305471:31,test,test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5736#issuecomment-468305471,2,"['log', 'test']","['log', 'test']"
Testability,"@meganshand This fixes the Sarah's recent bug, and just makes sense in general. I am not adding a regression test because our work on linked de Bruijn graphs is going to moot stuff like this soon.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5960:109,test,test,109,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5960,1,['test'],['test']
Testability,@meganshand We think we may have identified the underlying problem -- a single typecast from long -> int in the `google-cloud-java` library. We are testing now to see if it actually resolves the errors.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-318419738:148,test,testing,148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-318419738,1,['test'],['testing']
Testability,"@meganshand Would you mind reviewing this PR, which will enable M3 testing on Ultima? To the extent your conscience permits it really only needs a rubber stamp. No one besides me is familiar with the M3 code and while that is eventually worth addressing I don't think you or anyone else should be responsible for increasing the M3 bus factor until it is more stable.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7975#issuecomment-1205825491:67,test,testing,67,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7975#issuecomment-1205825491,1,['test'],['testing']
Testability,@meganshand can you make a regression test with this file? At the **very least** include the commandline here. Otherwise we have a fix for an NPE that no one knows how to trigger.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1853#issuecomment-222031164:38,test,test,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1853#issuecomment-222031164,1,['test'],['test']
Testability,@meganshand can you take a look again please? ; 1. Added the test for parsing mc tag in the header correctly; 2. Generated a mechanism that automatically determines the correct value of flow-collapse-hmer-length parameter; 3. (unrelated) fixed a small bug in the assembly complexity annotation that created inconsistent results between SDK11 and SDK8,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8088#issuecomment-1336187494:61,test,test,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8088#issuecomment-1336187494,1,['test'],['test']
Testability,"@meganshand commented on [Thu Feb 16 2017](https://github.com/broadinstitute/gatk-protected/issues/907). Using a tiny bam file that I typically use for testing while running the CNV wdl on the cloud, I got the following errors (the tiny file is here: `gs://broad-dsde-methods/takuto/test_files/small_NA12878_hg19.bam`):. 1. The output tsv from TumorNormalizeSomaticReadCounts contained NaNs; 2. TumorPerformSeg threw the following error:. ```; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp; [February 16, 2017 3:23:02 PM UTC] org.broadinstitute.hellbender.tools.exome.PerformSegmentation --tangentNormalized /cromwell_root/broad-dsde-methods/cromwell-execution-24/TumorOnly/f30dd8c6-eec3-45ba-b7f2-f845d308d59d/call-TumorNormalizeSomaticReadCounts/small_NA12878.tn.tsv --output small_NA12878.seg --log2Input true --alpha 0.01 --nperm 10000 --pmethod hybrid --minWidth 2 --kmax 25 --nmin 200 --eta 0.05 --trim 0.025 --undoSplits none --undoPrune 0.05 --undoSD 3 --help false --version false --verbosity INFO --QUIET false --use_jdk_deflater false; [February 16, 2017 3:23:02 PM UTC] Executing as root@3addd2d7b373 on Linux 3.16.0-0.bpo.4-amd64 amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_121-b13; Version: Version:c17c8ed-SNAPSHOT; [February 16, 2017 3:23:04 PM UTC] org.broadinstitute.hellbender.tools.exome.PerformSegmentation done. Elapsed time: 0.04 minutes.; Runtime.totalMemory()=185597952; org.broadinstitute.hellbender.utils.R.RScriptExecutorException: ; Rscript exited with 1; Command Line: Rscript -e tempLibDir = '/cromwell_root/tmp/root/Rlib.5210694187065743072';source('/cromwell_root/tmp/root/CBS.8616708738798684646.R'); --args --sample_name=NA12878 --targets_file=/cromwell_root/broad-dsde-methods/cromwell-execution-24/TumorOnly/f30dd8c6-eec3-45ba-b7f2-f845d308d59d/call-TumorNormalizeSomaticReadCounts/small_NA12878.tn.tsv --output_file=small_NA12878.seg --log2_input=TRUE --min_width=2 --alpha=0.01 --nperm=10000 --pmethod=hybrid --kmax=25 --nmin=200 --eta=0.05 --t",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2944:152,test,testing,152,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2944,1,['test'],['testing']
Testability,@meganshand do you have any other ideas for how I can fix the test failure?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6872#issuecomment-709418489:62,test,test,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6872#issuecomment-709418489,1,['test'],['test']
Testability,"@mepowers any ideas? Code looks good, variant score tests are passing but other ci steps erroring out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438065324:52,test,tests,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-438065324,1,['test'],['tests']
Testability,"@mirounga Thanks for submitting this, but as @droazen said we're actively working on a URI facility to encompass things like this in a general way across input types. It does give me an idea for a new test for my URI PR though....",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5394#issuecomment-436021670:201,test,test,201,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5394#issuecomment-436021670,1,['test'],['test']
Testability,"@mishaploid, I am assuming the 295 to be single sample vcfs. What do the `data/processed/scattered_intervals/0004-scattered.intervals` look like? Are the intervals very small? Have you tried larger intervals?. @spikebike, thanks for the systemtap output. We do have large internal buffers to help with this type of usage, but will revisit the code to figure out the behavior you are seeing. We do have some experimental optimizations not rolled out yet for writing minimally to shared filesystems. Would you be able to run your tests if we create a gatk branch next week with those changes?. @ldgauthier, I think the Hail team used multi sample vcfs as well. We do have some optimizations(work-in-progress) for importing multi sample vcfs that will get rolled out in the next GenomicsDB release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6487#issuecomment-595405471:528,test,tests,528,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6487#issuecomment-595405471,1,['test'],['tests']
Testability,"@mlathara I don't have the exact logs for earlier imports, approximately:. first import was 100 samples, unknown batch size; (+) 250 samples, batch size 50; (+) 200 samples, batch size 50; (+) 461 samples, batch size 30; (+) 101 samples, batch size 21",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6910#issuecomment-719194971:33,log,logs,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6910#issuecomment-719194971,1,['log'],['logs']
Testability,"@mlathara If you could take a look at this, it would be helpful. It looks like you changed; `progressMeter.update(intervals.get(0))` in logMessageOnBatchCompletion() to `progressMeter.update(null)`; Presumably there was a problem with intervals being empty?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7222#issuecomment-824298207:136,log,logMessageOnBatchCompletion,136,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7222#issuecomment-824298207,1,['log'],['logMessageOnBatchCompletion']
Testability,"@mlathara OK, at least we have an answer. I can see the logic in what GenomicsDB is doing, but I would also say that a difference in behavior when using a combined gVCF as a data source as compared to a genomicsdb workspace as a source should absolutely not happen. There might be an argument for a user option to handle soft-clip interpretation; however, the defaults and behavior should be identical for reading a gVCF and reading a workspace.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7089#issuecomment-786807059:56,log,logic,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7089#issuecomment-786807059,1,['log'],['logic']
Testability,"@mlathara One additional observation. I made a single-sample GenomicsDB workspace. I imported one gVCF, and using a single interval of ~7m BP. I then tried to run a basic SelectVariants on this. This is the log (note the timestamps):. ```; 15:23:03.633 INFO GenomicsDBLibLoader - GenomicsDB native library version : 1.4.3-6069e4a; 15:23:04.814 info NativeGenomicsDB - pid=4658 tid=4659 No valid combination operation found for INFO field InbreedingCoeff - the field will NOT be part of INFO fields in the generated VCF records; 15:23:04.814 info NativeGenomicsDB - pid=4658 tid=4659 No valid combination operation found for INFO field MLEAC - the field will NOT be part of INFO fields in the generated VCF records; 15:23:04.814 info NativeGenomicsDB - pid=4658 tid=4659 No valid combination operation found for INFO field MLEAF - the field will NOT be part of INFO fields in the generated VCF records; 15:23:06.221 INFO IntervalArgumentCollection - Processing 7099472 bp from intervals; 15:23:06.263 INFO SelectVariants - Done initializing engine; 15:23:06.400 INFO ProgressMeter - Starting traversal; 15:23:06.400 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 15:32:48.365 INFO ProgressMeter - 20:7684 9.7 1000 103.1; 15:33:02.930 INFO ProgressMeter - 20:1915103 9.9 392000 39428.0; 15:33:13.624 INFO ProgressMeter - 20:2537472 10.1 518000 51183.7; 15:33:23.627 INFO ProgressMeter - 20:3588818 10.3 724000 70379.4; ```. You'll see it took nearly 10 minutes between when it first logs the 'starting traversal', and when it actually begins to traverse and report process. Is there some massive initialization step required by genomics DB? Just to reiterate, the input workspace in this case is tiny: one gVCF sample and only importing ~7m BP on one contig.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7968#issuecomment-1212563493:207,log,log,207,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7968#issuecomment-1212563493,2,['log'],"['log', 'logs']"
Testability,"@mlathara Thanks for the reply. The reason I'm very interested in this is scatter/gather, so in our use-case, the inputs would be identical. Like you say, this would essentially be X jobs initiated with the same command, just different intervals. Merging all the resulting per-contig workspaces back into one workspace has a lot of logistical appeal, and the resulting folder would still be a valid GenomicsDB workspace. The alternate idea we had been considering was to maintain these as a folder of per-workspaces. That might work, but has the downside of not being a 'real' file format. Any future operations would need to be interval-aware, which could be a problem.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6557#issuecomment-630617523:332,log,logistical,332,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6557#issuecomment-630617523,1,['log'],['logistical']
Testability,"@mlathara The nodes have considerably more (256 or so). is there any rule or thumb or guidance on expected memory needs based on number of gVCFs and/or type of input (WES vs WGS)?. I do think you might be onto something though. Out default cluster submission code takes our slurm job memory request, subtracts only a few GB and passes the remainder to -Xmx/Xms. I will update to leave more buffer as you suggest. Our cluster happens to be undergoing maintenance this week, so this particular job was killed. I'll update the GATK version, add --genomicsdb-shared-posixfs-optimizations, and adjust the memory. One other thing: i noticed GenomicsDBImport is not nearly as verbose in logging as typical GATK tools. Is that expected, or a symptom of whatever problem we're having?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6688#issuecomment-656259475:680,log,logging,680,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6688#issuecomment-656259475,1,['log'],['logging']
Testability,"@mlathara To those points:. - Yes, the test case I tried to make using GATK's test data doesnt show this. When I was working quickly I thought I repro'd it, but as you point out the REF bases for chr20:10-20 are actually Ns, so in this instance GenotypeGVCFs is doing the right thing. - Since my original posts, we figured out new information (posted above). When we simply do a SelectVariants on the genomicsDB workspace over these intervals, it produces a gVCF with Ns listed as the reference. In the actual reference, those sites are not Ns. That's making us look in a different direction than I originally thought. Our current plan is to remake one of our workspaces (exome data from ~800 samples) and see if this repros.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7018#issuecomment-755549351:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7018#issuecomment-755549351,2,['test'],['test']
Testability,"@mlathara Travis is totally borked. The timeout may or may not have to do with the fact that everyone is rerunning tests since they're failing sporadically. This looks good to me, so you can merge once tests pass. Also, if you send @droazen some notes on the new functionality to add to the release notes that would be a big help.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-519952186:115,test,tests,115,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-519952186,2,['test'],['tests']
Testability,"@mlathara Your last sentence about querying during incremental update is my point. It seems like it might be nice if GenomicsDB at least did something to indicate an update was happening (maybe write a lock file in the workspace?). If there was a standard pattern, other tools could at least be aware of this and deal with it appropriately. at minimum a reader could log a warning or something. If there is no I/O difference between the user copying a workspace and updating vs. GenomicsDB reading the input workspace and writing the output to a new location, then I guess I agree that one can make an argument that it's not critical for GenomicsDBImport to execute that copy itself. I dont understand the read/write pattern of these enough to answer that, but your replies above suggest no.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6558#issuecomment-617424085:367,log,log,367,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6558#issuecomment-617424085,1,['log'],['log']
Testability,"@mlathara if the sequence dictionary in the picard format ends up getting in the way of this feature making it into the release this week, then I'm happy with GATK-style and we can deal with Picard-style in a future PR. With regards to larger scale tests, if this is the same functionality as batch import then that's very reassuring. It's still worth doing some larger tests, but that doesn't need to be a blocker.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-518812234:249,test,tests,249,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-518812234,2,['test'],['tests']
Testability,@mlathara if you want to merge for the release and add the test later that's fine with me,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-519665093:59,test,test,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-519665093,1,['test'],['test']
Testability,"@mlathara sorry, I wasn't sure what you meant. Your interval list looks good. I'm not sure how to force GATK/Picard to output an interval list given a `-L` argument. I could produce a list that gives only where there's data in one of those files, but GenomicsDB doesn't have to be responsible for that. (If you read from the GDB you created with `-L chr20` in the query it will have no-calls from position 1 to 17959479 right?) I'd also like to make sure there's another test that also includes a list with multiple intervals.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-519162966:471,test,test,471,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-519162966,1,['test'],['test']
Testability,"@mlathara that's a fair point about query vs. import, I just thought the logic might be similar. And I didn't mention it, but maybe it's helpful to know that I was running the import with the consolidate option. Thanks for taking a look!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5449#issuecomment-485448056:73,log,logic,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5449#issuecomment-485448056,1,['log'],['logic']
Testability,"@munrosa I logged into that ftp server and couldn't see anything. Those instructions are really old and who knows if they still work. It's only 2 MB, so could you just email to davidben@broadinstitute.org?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3697#issuecomment-402270150:11,log,logged,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3697#issuecomment-402270150,1,['log'],['logged']
Testability,"@munrosa Is there any chance we could use part of the data you shared as an integration test within the gatk repository? The repo is public, but we would only need a few hundred bases of your data and could anonymize the sample name and anything else in the header. We fully understand if this is not possible, and are very grateful for the help you have given already.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3697#issuecomment-451712253:88,test,test,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3697#issuecomment-451712253,1,['test'],['test']
Testability,"@mwalker174 ; Hi Mark, I've finished writing the tests and would you please check again?; Here's the log running the whole pipeline (the number of simple variants extracted is approximately 1.5X the number of complex variants):. ```; .... below is output for complex variants only; 23:09:25.288 INFO StructuralVariationDiscoveryPipelineSpark - Discovered 1334 variants.; 23:09:25.288 INFO StructuralVariationDiscoveryPipelineSpark - CPX: 1334; 23:09:25.289 INFO StructuralVariationDiscoveryPipelineSpark - INV: 0; 23:09:25.289 INFO StructuralVariationDiscoveryPipelineSpark - BND_NOSS: 0; 23:09:25.289 INFO StructuralVariationDiscoveryPipelineSpark - DUP_INV: 0; 23:09:25.289 INFO StructuralVariationDiscoveryPipelineSpark - BND_INV33: 0; 23:09:25.289 INFO StructuralVariationDiscoveryPipelineSpark - BND_INV55: 0; 23:09:25.289 INFO StructuralVariationDiscoveryPipelineSpark - DEL: 0; 23:09:25.289 INFO StructuralVariationDiscoveryPipelineSpark - DUP: 0; 23:09:25.289 INFO StructuralVariationDiscoveryPipelineSpark - INS: 0; ..... below is output from this tool; 23:09:48.167 INFO StructuralVariationDiscoveryPipelineSpark - Discovered 688 variants.; 23:09:48.168 INFO StructuralVariationDiscoveryPipelineSpark - INV: 1; 23:09:48.168 INFO StructuralVariationDiscoveryPipelineSpark - DEL: 125; 23:09:48.168 INFO StructuralVariationDiscoveryPipelineSpark - INS: 562; 23:09:48.168 INFO StructuralVariationDiscoveryPipelineSpark - BND_NOSS: 0; 23:09:48.168 INFO StructuralVariationDiscoveryPipelineSpark - DUP_INV: 0; 23:09:48.168 INFO StructuralVariationDiscoveryPipelineSpark - BND_INV33: 0; 23:09:48.168 INFO StructuralVariationDiscoveryPipelineSpark - BND_INV55: 0; 23:09:48.168 INFO StructuralVariationDiscoveryPipelineSpark - CPX: 0; 23:09:48.168 INFO StructuralVariationDiscoveryPipelineSpark - DUP: 0; 23:09:48.215 INFO StructuralVariationDiscoveryPipelineSpark - Discovered 1555 variants.; 23:09:48.216 INFO StructuralVariationDiscoveryPipelineSpark - INV: 21; 23:09:48.216 INFO StructuralVariati",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4602#issuecomment-389343644:49,test,tests,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4602#issuecomment-389343644,2,"['log', 'test']","['log', 'tests']"
Testability,@mwalker174 ; absolutely. I'll begin the testing process. Thanks!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4602#issuecomment-387223011:41,test,testing,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4602#issuecomment-387223011,1,['test'],['testing']
Testability,"@mwalker174 @asmirnov239 I probably should rebuild models used for test resources, etc. Hopefully can get this done by release on Thursday. Might also fix #5852 while I'm at it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6245#issuecomment-549978870:67,test,test,67,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6245#issuecomment-549978870,1,['test'],['test']
Testability,@mwalker174 Can you test this branch out?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4749#issuecomment-387489170:20,test,test,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4749#issuecomment-387489170,1,['test'],['test']
Testability,"@mwalker174 I have some questions about your implementation. For example, is length calculated as both ends inclusive? And then the current median calculation for start and end of the SVCluster produce pretty lame results in my tests with tiny data.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6554#issuecomment-615459715:228,test,tests,228,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6554#issuecomment-615459715,1,['test'],['tests']
Testability,@mwalker174 I'm asking of a bit of a re-haul of the specialized logging so perhaps you wanna sit down next week and go thru the code in tandem if you want.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3611#issuecomment-333258346:64,log,logging,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3611#issuecomment-333258346,1,['log'],['logging']
Testability,"@mwalker174 Is encountering the same problem in the wild. He's reporting that it goes away if you specify the environment variables HELLBENDER_TEST_PROJECT and HELLBENDER_JSON_SERVICE_ACCOUNT_KEY. he's seeing the warning message:; ```; 16:55:09.480 WARN SparkContextFactory - Environment variables HELLBENDER_TEST_PROJECT and HELLBENDER_JSON_SERVICE_ACCOUNT_KEY must be set or the GCS hadoop connector will not be configured properly; ```; which *should* only appear during tests, so something is strange.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3591#issuecomment-330650894:474,test,tests,474,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3591#issuecomment-330650894,1,['test'],['tests']
Testability,"@mwalker174 This is just FYI... you do not need to do anything. You cannot assume that the user running the test doesn't have root access. Also, I cleaned up the test a bit to use standard TestNG conventions (note the ``@ Test``):; ```; @Test(expectedExceptions = UserException.CouldNotCreateOutputFile.class); @SuppressWarnings(""unchecked""); public void testWriteTwoKryo() throws Exception {; final File tempFile = createTempFile(""test"", "".dat"");; final Integer int_in = 29382;; final String str_in = ""test string"";; PSUtils.writeKryoTwo(tempFile.getPath(), int_in, str_in);. final Kryo kryo = new Kryo();; kryo.setReferences(false);; final Input input = new Input(BucketUtils.openFile(tempFile.getPath(), null));; final Integer int_out = (Integer) kryo.readClassAndObject(input);; final String str_out = (String) kryo.readClassAndObject(input);; input.close();. Assert.assertEquals(int_in, int_out);; Assert.assertEquals(str_in, str_out);. // Point to a subdir that does not exist, so that we get a FNF exception; PSUtils.writeKryoTwo(tempFile.getAbsolutePath() + ""/bad_dir/bad_subdir/"", int_out, str_out);; }; ```. Please note that this is not in ``master`` at the time of this writing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2708#issuecomment-300832489:108,test,test,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2708#issuecomment-300832489,12,"['Assert', 'Test', 'assert', 'test']","['Assert', 'Test', 'TestNG', 'assertEquals', 'test', 'testWriteTwoKryo']"
Testability,@mwalker174 mind reviewing this quick fix? I can also put in a regression test if anyone feels strongly.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5983#issuecomment-500833450:74,test,test,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5983#issuecomment-500833450,1,['test'],['test']
Testability,"@mwalker174 super quick one for you. Didn't think it was worth adding a regression test at this point (since this would involve editing sample names in some of the test resources/models), but feel free to file an issue if you think it might be worth addressing later.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7411#issuecomment-898440684:83,test,test,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7411#issuecomment-898440684,2,['test'],['test']
Testability,"@mwiewior I haven't done any Spark at all, so I think that @droazen and @lbergelson would be better reviewers. I did see that your conda and CNN tests appear to be failing, though you didn't change anything that should affect Python. I gave them a kick because hopefully it was just an inconsequential random error.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6643#issuecomment-738834376:145,test,tests,145,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6643#issuecomment-738834376,1,['test'],['tests']
Testability,@nalinigans - this should fix the tests with respect to the latest jar,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437139132:34,test,tests,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-437139132,1,['test'],['tests']
Testability,@nalinigans . I have not heard from the user yet. I have pinged the user again to send us their nfs info and I will keep you posted. I will have the results from testing the gatk branch you sent to me by the end of the day.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-439940389:162,test,testing,162,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5342#issuecomment-439940389,1,['test'],['testing']
Testability,"@nalinigans @droazen @mlathara I posted a while ago about an odd difference between data aggregated using CombineGVCFs and data aggregated using GenomicsDBImport. We created a minimal repro case to illustrate it. The basic idea is this:. - Run either CombineGVCFs or GenomicsDBImport on a set of gVCFs; - Run SelectVariants on the output. The data processed using GenomicsDBImport will contain a bunch of lines like these, with ambiguous REF alleles:. 19	75166	.	N	*,<NON_REF>	.	.	DP=3	GT:AD:DP:GQ:MIN_DP:PGT:PID:PL:PS:SB	./.:.:2:6:2:.:.:0,6,57,6,57,57	.|.:0,1,0:1:3:.:0|1:75165_AGCGGAGGGGAGCGGCGCGGAGGGGCGCGGAGGGGC_A:45,3,0,45,3,45:75165:0,0,1,0	./.:.:0:0:0:.:.:0,0,0,0,0,0	./.:.:0:0:0:.:.:0,0,0,0,0,0. the data processed through CombineGVCFs shows the proper REF:. 19	75166	.	G	*,<NON_REF>	.	.	DP=3	GT:AD:DP:GQ:MIN_DP:PGT:PID:PL:PS:SB	./.:.:2:6:2:.:.:0,6,57,6,57,57	.|.:0,1,0:1:3:.:0|1:75165_AGCGGAGGGGAGCGGCGCGGAGGGGCGCGGAGGGGC_A:45,3,0,45,3,45:75165:0,0,1,0	./.:.:0:0:0:.:.:0,0,0,0,0,0	./.:.:0:0:0:.:.:0,0,0,0,0,0. I dont fully understand the data format in a GenomicsDB Workspace, but it would suggest either a) it's storing the wrong REF, or b) the codec is somehow not properly re-adding the REF at read time. Here is a public, downloadable set of repro data. It's large mostly b/c it has our reference genome. The included bash script takes just a few minutes to run, should you want to repro the whole thing. I bundled our actual GATK JAR as well. You can view/download through the browser here:. https://prime-seq.ohsu.edu/project/Labs/Bimber/Collaborations/GATK/begin.view?. or download on the command line:. wget https://prime-seq.ohsu.edu/_webdav/Labs/Bimber/Collaborations/GATK/%40files/ambigRefRepro.tar.gz. Please let me know if there's anything we can check locally. We have a test case set up in intellij if there's something useful we could try through there. . These incorrect REF alleles become a problem downstream when genotyping. Thanks for any help.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7089:1794,test,test,1794,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7089,1,['test'],['test']
Testability,"@nalinigans @kgururaj I addressed the review comments and rebased the branch, however after rebasing some of the GenomicsDB tests that assert an exact match against `CombineGVCFs` output are failing, despite my regenerating the expected output using the latest `CombineGVCFs`. See the commit https://github.com/broadinstitute/gatk/pull/5397/commits/500b0263fd51bfb125297d5a85a9e58ce9278682, where I've added comments to the failing tests `testGenomicsDBImportFileInputs_newMQ()` and `testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData()`. Could one of you take a look at these failures and give your opinion? Is it possible that GenomicsDB no longer matches `CombineGVCFs` in these cases?. I found a note in the recent commit https://github.com/broadinstitute/gatk/commit/fb701919bc618bb5be94c1c85b69a73924842443 (from the PR https://github.com/broadinstitute/gatk/pull/5471) in which the author found it necessary to make separate copies of the `HaplotypeCaller` expected GVCFs in order to get the GenomicsDB tests to pass. This is likely related to the test failures we're seeing now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137:124,test,tests,124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5397#issuecomment-452797137,6,"['assert', 'test']","['assert', 'test', 'testGenomicsDBImportFileInputsAgainstCombineGVCFWithNonDiploidData', 'tests']"
Testability,@nalinigans @mlathara Is this an approach we could officially test and endorse? Do you foresee any technical issues with this approach with the current release of GenomicsDB?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6620#issuecomment-634824391:62,test,test,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6620#issuecomment-634824391,1,['test'],['test']
Testability,"@nalinigans I can test on my use case specifically, but it's going to take me some time to dig up all the data again.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6305#issuecomment-565182979:18,test,test,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6305#issuecomment-565182979,1,['test'],['test']
Testability,"@nalinigans I have some very long-running jobs that I'm trying to track, but my stderr is choked with buffer resize outputs. Would it be possible to turn those off by default or add a flag to turn them off? It makes for huge log files and it's hard to track if the log is still being updated for jobs that run >24hrs.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5568:225,log,log,225,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5568,2,['log'],['log']
Testability,"@nalinigans I tested (1) using your branch, i.e. running `CreateSomaticPanelOfNormal` as above but with `--genomicsdb-use-bcf-codec true` on the existing 4.1.8.0 GenomicsDBs built from 4.1.8.0 Mutect2 VCFs. I got ~100% records and alleles compared to 4.1.7.0 with some change probably due to minor changes in Mutect2 between versions (allele overlap is about 99.6%). As for using 4.1.7.0 M2 + genomicsDB (still running) as input, the PoN output was identical (all records/variants retained) to one created using 4.1.7.0. As you suggested, loss of PoN variants in 4.1.8.0 appears to be caused by the change to VCFCodec.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6744#issuecomment-673029318:14,test,tested,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6744#issuecomment-673029318,1,['test'],['tested']
Testability,"@nalinigans OK, I have been able to repro this using GATK's existing test data. It's not quite what I originally thought, but I created a test to illustrate it. It might be easier to show on this PR: #7018",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7005#issuecomment-754215452:69,test,test,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7005#issuecomment-754215452,2,['test'],['test']
Testability,"@nalinigans OK, thanks. I'll try to get docker going w/ intellij. to the original question/bug: is there anything inherent about GenotypeGVCFs with GenomicsDB as the source vs. a gVCF as the source that one would expect to change how GATK determines the reference allele? I have not actually run this yet, but if I'm correct on the problem this probably should repo it (an addition to GenotypeGVCFsIntegrationTest):. ```. @Test(timeOut = 1000000); public void testGenotypeGVCFsWithGenomicsDbAndForceOutput() throws IOException {; final File input = CEUTRIO_20_21_GATK3_4_G_VCF;; SimpleInterval interval = new SimpleInterval(""20"", 1, 11_000_000);; final File tempGenomicsDB = GenomicsDBTestUtils.createTempGenomicsDB(input, interval);; final String genomicsDBUri = GenomicsDBTestUtils.makeGenomicsDBUri(tempGenomicsDB);. File expected = getTestFile(""CEUTrio.20.gatk3.7_30_ga4f720357.expected.vcf"");; String reference = b37_reference_20_21;. runGenotypeGVCFSAndAssertSomething(genomicsDBUri, expected, Arrays.asList(""--"" + GenotypeGVCFs.FORCE_OUTPUT_INTERVALS_NAME, ""20:10-20""), GenotypeGVCFsIntegrationTest::assertVariantsContextsHaveNonAmgibuousRefs, reference);; }. ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7005#issuecomment-754120858:423,Test,Test,423,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7005#issuecomment-754120858,3,"['Test', 'assert', 'test']","['Test', 'assertVariantsContextsHaveNonAmgibuousRefs', 'testGenotypeGVCFsWithGenomicsDbAndForceOutput']"
Testability,"@nalinigans OK, we have more information. Is there other debugging or information we can gather?. - When we take that workspace, run SelectVariants over these intervals and write a new gVCF file, this gVCF reports the REF allele as N. Therefore this isnt specific to GenotypeGVCFs as we originally thought. - When I tried to make a repro case using the test data from GATK (see the PR linked above), I cant repro this Ns behavior. Therefore this is something to do with the specific workspace we have, or perhaps how it was created. Can you suggest additional debugging or tests?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7018#issuecomment-754269389:353,test,test,353,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7018#issuecomment-754269389,2,['test'],"['test', 'tests']"
Testability,"@nalinigans Once this goes into master, could you try out your PR with this patch and see if the disabled failing tests pass now?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5308#issuecomment-430017261:114,test,tests,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5308#issuecomment-430017261,1,['test'],['tests']
Testability,"@nalinigans Tests passed, but it's worth pointing out that the new `testWriteToAndQueryFromGCS()` test took 9 minutes to complete, which seems very slow. Possible performance issue?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-430760216:12,Test,Tests,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-430760216,3,"['Test', 'test']","['Tests', 'test', 'testWriteToAndQueryFromGCS']"
Testability,"@nalinigans Thanks - i have run the tool but I'm not entirely certain where I should focus. I understand what it's saying about the expected files within each fragment directory. So I could (and in the process of) counting the set of files per fragment. For our workspace, we expect 39 files/fragment. Checking the presence of those files is in the same lines as testing if __coords.tdb exists. The current state of this workspace seems to be that some contigs have more fragment folders than expected. at least some of these fragment folders have the expected number of files. is there nothing in the workspace that reports what fragments should exist? . Looking at this another way: can I run a SelectVariants on this workspace, requesting every sample that should exist? Can this write out GenomicsDB to a new workspace?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6910#issuecomment-722715379:363,test,testing,363,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6910#issuecomment-722715379,1,['test'],['testing']
Testability,"@nalinigans Thanks for the help on this. I wanted to let you know that even with the standalone tool and improvements, we've basically given up on trying to aggregate whole genome GenomicsDB workspaces with more than ~1000 samples. We can get virtually all the chromosomes to consolidate, but the largest (chr 1) can go for 10 days and eventually dies. It's just too unwieldy to be practical. My current idea is to stage our data into more reasonable workspaces of ~500 samples. These have the benefit of allowing existing data to be static, and we just keep appending/making new workspaces as we get more samples. Since GenotypeGVCFs only allows one input, the plan is:. - Run GenotypeGVCFs once per workspace. This is scattered into a huge number of jobs, so each job is reasonable.; - Take the VCFs from each of these and take the union of all sites.; - Repeat GenotypeGVCFs per workspace, giving it those sites as the whitelist of sites to force genotyping; - Merge the resulting VCFs into one. The latter is currently being tested.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7674#issuecomment-1150088864:1029,test,tested,1029,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7674#issuecomment-1150088864,1,['test'],['tested']
Testability,@nalinigans There are some test failures in the GenomicsDB cloud tests. See: https://storage.googleapis.com/hellbender-test-logs/build_reports/master_22153.1/tests/test/index.html. We'll have to fix these before we can merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422834247:27,test,test,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5197#issuecomment-422834247,5,['test'],"['test', 'test-logs', 'tests']"
Testability,"@nalinigans We have a very large WGS dataset (<2K subjects). We incrementally add to it over time. After each new batch of data is added, we typically run GenotypesGVCFs. We have run GenotypesGVCFs on prior iterations of this GenomicsDB workspace; however, we have never run it on this particular workspace, after the addition of new samples. You can get those files here: . https://prime-seq.ohsu.edu/_webdav/Labs/Bimber/Collaborations/GATK/%40files/Issue7674/. I think I was mistaken above. According to the job logs, we did run GATK GenomicsDBImport v4.2.5.0 when we did our last append. However, prior append operations would have used earlier GATK versions. I believe we have 79 fragments. We rarely do --consolidate, primarily because those jobs essentially never finish. We've had a lot of issues getting GATK/GenomicsDB to run effectively on this sample set. We have settled on doing the GenomicsDBImport/append operation with a moderate batch size. I realize newer GATK/GenomicsDB versions have been addressing performance, and it is possible we should re-evaluate this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7674#issuecomment-1042101804:514,log,logs,514,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7674#issuecomment-1042101804,1,['log'],['logs']
Testability,"@nalinigans Yes, it's been surprising me quite a bit too. When you say 'can you run SelectVariants', do you mean simply trying to select from the source GenomicsDB workspace as a test to see if java has enough resources? I can try this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7968#issuecomment-1201585570:179,test,test,179,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7968#issuecomment-1201585570,1,['test'],['test']
Testability,"@nalinigans pointed out that even if we do switch this pipeline back to the BCF codec, it's still likely to encounter errors with 64-bit values due to some recent changes in GenomicsDB, which now throws an exception for these values instead of silently truncating them as it did in the past. So just switching to the BCF codec in the WDL might not be enough. A couple of other options we discussed today for a quick fix for this issue:. - @ldgauthier suggested that we change the WDL to use an older (pre-4.1.8.0) version of GATK that is known to work well with this pipeline, which would be an easy change. The only problem is that users might run `CreateSomaticPanelOfNormals` in the latest GATK independently of the WDL anyway and continue to run into this issue. - @nalinigans suggested that we patch `CreateSomaticPanelOfNormals` so that it does something sensible when the AD annotation is completely missing. Since AD was already likely being truncated by the BCF codec in previous versions of this pipeline, its value was never particularly trustworthy to begin with. Whatever option we go with, we'll need to add a good regression test for the PoN workflow that would have caught this issue. Longer term, we'll plan on developing a fix at the HTSJDK level for the way missing values are handled for the AD and PL annotations in the VCF codec (@lbergelson is currently looking into how this could be done). @fleharty What are your thoughts? Is there someone on the M2 team who could work on a hotfix for the next GATK release?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6744#issuecomment-679273710:1140,test,test,1140,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6744#issuecomment-679273710,1,['test'],['test']
Testability,"@nalinigans: We now believe this is actually a GenomicsDB issue (or possibly an issue in the JNI layer.). @gokalpcelik was able to reproduce this problem on a set of 330 whole exomes. He found that if he ran GenotypeGenotypeGVCs from a GenomicsDB the memory usage climbed up to 10s of GB, but the java heap memory remained constant. He then tested firt extracting the combined GVCF from genomics db and then running GenotypeGVCFs and saw that memory usage for GenotypeGVCFs remained constant at 1 G. So we think this is probably a GenomicsDB issue. . GenomicsDBImport > GenotypeGVCFs ---- Memory ramps up immediately to 10s of gigabytes; GenomicsDBImport > SelectVariants to GVCF > GenotypeGVCFs ---- Memory is fixed at 1.1 GB. He can fill in more detail about the exact configuration if it helps.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8989#issuecomment-2432001934:341,test,tested,341,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8989#issuecomment-2432001934,1,['test'],['tested']
Testability,@nenewell I took a brief look yesterday and it looks like there are many bams that fail to validate due to errors with mate pairs. I'm not sure how concerned we are about those errors. It's the weirder ones like . ```; htsjdk.samtools.SAMException: SAMFormatException on record 01; at htsjdk.samtools.SamFileValidator.validateSamRecordsAndQualityFormat(SamFileValidator.java:308); at htsjdk.samtools.SamFileValidator.validateSamFile(SamFileValidator.java:199); at htsjdk.samtools.SamFileValidator.validateSamFileVerbose(SamFileValidator.java:159); at org.broadinstitute.hellbender.tools.picard.sam.ValidateSamFile.doWork(ValidateSamFile.java:129); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:97); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:150); at org.broadinstitute.hellbender.cmdline.PicardCommandLineProgram.instanceMain(PicardCommandLineProgram.java:51); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:71); at org.broadinstitute.hellbender.Main.main(Main.java:86); Caused by: htsjdk.samtools.SAMFormatException: Error parsing text SAM file. Not enough fields; File src/test/resources/org/broadinstitute/hellbender/tools/picard/analysis/CompareMetrics/colqualyldmtcs.bam; Line 1; ```. That seem particularly concerning.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/569#issuecomment-112826383:1190,test,test,1190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/569#issuecomment-112826383,1,['test'],['test']
Testability,"@nenewell If I understand what is going on correctly I think this may be a bug in the validator. Sam spec says . • If 0x1 is unset, no assumptions can be made about 0x2, 0x8, 0x20, 0x40 and 0x80. | Bit | Description |; | --- | --- |; | 1 0x1 | template having multiple segments in sequencing |; | 2 0x2 | each segment properly aligned according to the aligner |; | 4 0x4 | segment unmapped |; | 8 0x8 | next segment in the template unmapped |; | 16 0x10 | SEQ being reverse complemented |; | 32 0x20 | SEQ of the next segment in the template being reverse complemented |; | 64 0x40 | the first segment in the template |; | 128 0x80 | the last segment in the template |; | 256 0x100 | secondary alignment |; | 512 0x200 | not passing quality controls |; | 1024 0x400 | PCR or optical duplicate |; | 2048 0x800 | supplementary alignment |. So it shouldn't matter what google is setting the mate flags to if the read is a singleton. I know there are some other issues with things like this, I think `SAMRecord.equals()` isn't properly agnostic to certain flag combinations and will incorrectly evaluate as not equal even in some cases where the read is logically identical. Does that make sense or have I missed something?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/569#issuecomment-114255696:1150,log,logically,1150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/569#issuecomment-114255696,1,['log'],['logically']
Testability,"@nh13 - @Kmannth and I met today and discussed this ticket. As @droazen mentioned above, we're currently working on a new release, primarily bringing dependencies up to date and addressing a couple reported bugs related to processing SNPs and indels. The current release of GKL was primarily tested on SNPs and indels, and not long reads. We have a few open tickets surrounding long reads. We plan on addressing these in a future release. We will pull your ticket into that body of work. . In the meantime please let us know if you run into GKL issues with short reads, and we will be sure to prioritize for our pending release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6733#issuecomment-674241524:292,test,tested,292,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6733#issuecomment-674241524,1,['test'],['tested']
Testability,"@nh13 As a first step I'd suggest filing a ticket against the GKL (https://github.com/Intel-HLS/GKL) so that Intel engineers can have a look (but leave this GATK ticket open so that we can track it here as well). . This will be difficult to debug without a test case that Intel can run to reproduce the issue on their end. Does the crash only occur with this one particular sample, or have you seen it on more than one sample? If you could get to the point where you can reproduce it on a shareable bam snippet, that would obviously maximize the chances of this getting fixed. Intel is currently (at our request) doing a pass on the GKL with `valgrind` to find and fix memory safety issues (https://github.com/Intel-HLS/GKL/issues/107), so we expect the next GKL release to fix a bunch of ""use after free""-type errors. Maybe they'll get lucky and fix this one as well. Timeline for the release is within the next ~2-3 months. . After that we've asked them to test the GKL with long reads data, which is also known to trigger crashes like this (https://github.com/Intel-HLS/GKL/issues/105). If the problem in your case is that you've exceeded some hardcoded length limitation, the tests on long reads data might reveal the problem.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6733#issuecomment-667189113:257,test,test,257,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6733#issuecomment-667189113,3,['test'],"['test', 'tests']"
Testability,"@nh13 For the failures in the exact-match ""*IsConsistentWithPastResults()"" tests in `HaplotypeCallerIntegrationTest`, the easiest way to update the expected outputs is to do a run with the `-O` outputs in those tests set to the `expected` path, rather than the `output` path, then restore the original `-O` value after the expected files are overwritten. We should really implement a toggle in that class to do this automatically for all tests that assert an exact match on the output.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588:75,test,tests,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-431050588,4,"['assert', 'test']","['assert', 'tests']"
Testability,"@nh13 I did get started on this. It works, but needs formal tests. I might be able to finish it up this week, but if your need is urgent and you trust me without tests, then there's a branch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5704#issuecomment-474867341:60,test,tests,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5704#issuecomment-474867341,2,['test'],['tests']
Testability,@nh13 I never run the full tests locally because they take essentially forever. I just run the specific ones that seem likely to break and then let travis tell me if something else broke.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430751181:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-430751181,1,['test'],['tests']
Testability,@nh13 I wrote a test for your branch (its very simple it just reruns the gvcf mode tests with --disable-optimizations enabled) that should work for your branch. Its in the branch je_addTestForDisableOptimizations. Since you submitted this PR from your own clone of the GATK I cannot push this onto the branch as it stands. Would you be able to copy it into this branch?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7125#issuecomment-793077846:16,test,test,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7125#issuecomment-793077846,2,['test'],"['test', 'tests']"
Testability,@nh13 I'm ready to approve once you update the tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436774098:47,test,tests,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5318#issuecomment-436774098,1,['test'],['tests']
Testability,"@nh3 care to take a look? In the GGVCFs integration test, the with OxoGReadCounts.g.vcf file has ; ```; 20 10101674 . TTGTGTG T,TTG,TTGTGTGTGTGTG,TTGTGTGTGTGTGTG,<NON_REF> 1464.10 . DP=64;ExcessHet=3.0103;MLEAC=0,1,1,0,0;MLEAF=0.00,0.500,0.500,0.00,0.00;RAW_MQandDP=196622,64 GT:AD:DP:F1R2:F2R1:GQ:PL:SB 2/3:0,3,22,6,4,0:35:0,1,13,3,3,0:0,2,9,3,1,0:47:1481,1115,1205,557,577,581,932,574,0,925,973,621,47,860,972,1495,1189,615,968,1015,1570:0,0,20,15; ```; with read counts. | TTGTGTG* | T | TTG | TTGTGTGTGTGTG | TTGTGTGTGTGTGTG | <NON_REF> |; | --- | -- | -- | -- | -- | -- |; | 0 | 1 | 13 | 3 | 3 | 0 |; | 0 | 2 | 9 | 3 | 1 | 0 |. after genotyping alleles get dropped and trimmed and we have. | TTGTG* | T | TTGTGTGTGTG |; | -- | -- | -- |; | 0 | 13 | 3 |; | 0 | 9 | 3 |. Do you agree that's as expected? (I couldn't reproduce your exact example without the exact bam.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5833#issuecomment-476221850:52,test,test,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5833#issuecomment-476221850,1,['test'],['test']
Testability,"@olavurmortensen, looks like TILEDB_DISABLE_FILE_LOCKING=1 did not get passed to the tool. Did you use `export TILEDB_DISABLE_FILE_LOCKING=1` as the command to set the environment variable?; If you have and see the issue, please try the attached zip that contains a shared library with some debug/tracing messages, so we can pinpoint the issue a little more.; [libgenomicsdb.zip](https://github.com/broadinstitute/gatk/files/2922767/libgenomicsdb.zip); To use the zip, from a bash shell:. ```; %: tar zxf libgenomicsdb.zip; %: export LD_LIBRARY_PATH=`pwd`:$LD_LIBRARY_PATH; %: export TILEDB_DISABLE_FILE_LOCKING=1; %: gatk --java-options ""-Xmx4g -Xms4g"" GenomicsDBImport ...; ```; Please attach the log if you still see the issue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5740#issuecomment-468989614:699,log,log,699,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5740#issuecomment-468989614,1,['log'],['log']
Testability,"@olavurmortensen, yes please file a new issue. Please include your OS/platform version, your command, all the logs, any core dumps and steps to create a CIFS mount with your configuration in the issue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5608#issuecomment-468371003:110,log,logs,110,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5608#issuecomment-468371003,1,['log'],['logs']
Testability,"@olavurmortensen, yes, this has been tested on our systems and the fix will only mitigate NFS type of issues. However, there is improved logging of system errors now and we would like your inputs with logs and the exact NFS/CIFS configuration if you still run into issues to help us further debug what is happening. Please note that TILEDB_DISABLE_FILE_LOCKING env variable has to be set to 1 when doing the GenomicsDBImport.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5608#issuecomment-458665946:37,test,tested,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5608#issuecomment-458665946,3,"['log', 'test']","['logging', 'logs', 'tested']"
Testability,"@pawel125 From what I've found there are several posts mentioning issues with Lustre and sqlite:. - https://stackoverflow.com/questions/58842374/sqlite-disk-i-o-error-with-multiple-readers-on-lustre-filesystem; - https://github.com/CGATOxford/CGATPipelines/issues/39; - https://lustre-discuss.lustre.narkive.com/IsGsPBGV/lustre-sqlite. I haven't looked into it, but maybe one of them can help. If you happen to have a `/local` drive that is a purely local disk on a single node, then you can work from there with no issue and it won't change Funcotator's runtime. We don't seem to have a Lustre filesystem I can play with so I can't really do any testing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6708#issuecomment-662486473:647,test,testing,647,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6708#issuecomment-662486473,1,['test'],['testing']
Testability,@pawel125 This looks like a filesystem error - `I/O error in the advisory file locking logic (disk I/O error)`. Are you using an NFS file system to store the datasources or some other kind of network-mounted drive?. To be clear - the first issue you had was **not** a typo. The v1.7 data sources are not backwards compatible and the code changes haven't been merged yet.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6708#issuecomment-661885327:87,log,logic,87,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6708#issuecomment-661885327,1,['log'],['logic']
Testability,"@pgrosu Yes, that's correct. My point is that _in the code_ the factor of 2 in the numerator of your expression appears to be missing. If I have read the code of `GenotypeLikelihoodsCalculator::genotypeLikelihoods` correctly it behaves as follows (calculations are in log space but I have translated to real space; also it divides by ploidy at the end of the calculation instead of per read, but the effect is the same). Suppose (for pedagogical purposes) we have a triploid genotype AAB. Then the likelihood P(R | G = AAB) of read R given the genotype is (2/3) P (R | A) + (1/3) P (R | B). The overall likelihood of genotype AAB is the product of P(R | G) over all reads. This is the likelihood of the _phased_ genotype AAB, and it is the same GL that is used downstream in HaplotypeCaller. I don't see anywhere in the code where the (equal) contribution of a different permutation (eg ABA, BAA) is added, as in the numerator of your expression. Furthermore, it's hard to see where the correct combinatorial factor is hiding, because until you multiply the read likelihoods (add in log space) of all reads, which is a pretty transparent step, you _have to_ work with phased genotypes (since all reads must share the same phased genotype, you have to have a hierarchical model with unphased genotype -> phased genotype -> { all reads }). Thus, if a permutation factor needs to be there, it could only be put in right after all the read likelihoods are multiplied and nowhere else.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2019#issuecomment-235638474:268,log,log,268,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2019#issuecomment-235638474,2,['log'],['log']
Testability,"@pgrosu exactly the way you did, though I was running the test in the IDE. It looks like this depends on the length of the path, so perhaps the difference is the folder names we're using?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/580#issuecomment-114126169:58,test,test,58,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/580#issuecomment-114126169,1,['test'],['test']
Testability,"@pgrosu, the README has instructions for compiling the project. The plan would be to reproduce the bug outside of the codebase, though, by trying to serialize/deserialize something that looks like a ReadFilter instance. IIRC, we saw tests 1 and 3 of testBQSRCloud failing. Test 1 only reads public GCS files and runs the computation locally. It's quite possible you can run that with a free trial account.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107740493:233,test,tests,233,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107740493,3,"['Test', 'test']","['Test', 'testBQSRCloud', 'tests']"
Testability,@pjfan Looks good to me. Merge when tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2105#issuecomment-241119718:36,test,tests,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2105#issuecomment-241119718,1,['test'],['tests']
Testability,"@pnvaidya Actually, one more request, could go into the haplotype caller integration tests and specify to use `AVX_ENABLED` smith waterman?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3701#issuecomment-337346662:85,test,tests,85,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3701#issuecomment-337346662,1,['test'],['tests']
Testability,"@pontikos if you use the issue template we might be able to help. ### Affected tool(s) or class(es); _Tool/class name(s), special parameters?_. ### Affected version(s); - [ ] Latest public release version [version?]; - [ ] Latest master branch as of [date of test?]. #### Steps to reproduce; _Tell us how to reproduce this issue. If possible, include command lines that reproduce the problem. (The support team may follow up to ask you to upload data to reproduce the issue.)_",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5789#issuecomment-472916677:259,test,test,259,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5789#issuecomment-472916677,1,['test'],['test']
Testability,"@psfoley Did you just push another bug fix into this branch? Can you explain what the bug was, and create a github ticket with the bug description for our records?. We really need tests for each of the fixes in this branch, as well -- currently there are only tests for the allele-specific annotation support. I may attempt to add some tests later today if time permits.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4261#issuecomment-360860432:180,test,tests,180,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4261#issuecomment-360860432,3,['test'],['tests']
Testability,@psfoley The branch is failing tests after your latest commit with the error:. ```; > Could not resolve all dependencies for configuration ':runtime'.; > Could not find com.intel:genomicsdb:0.9.2-proto-3.0.0-beta-1+uuid-static.; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4261#issuecomment-360870965:31,test,tests,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4261#issuecomment-360870965,1,['test'],['tests']
Testability,"@psfoley You're right, you already did what I was asking. I suspect I subset to a specific commit at some point during the review and then forgot that you had made the change in a different commit... . This looks good to me. I'll merge when tests go green.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3994#issuecomment-354858551:241,test,tests,241,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3994#issuecomment-354858551,1,['test'],['tests']
Testability,"@pupgen I can't see anything obvious from the log, but some of the log messages seem to not be in the order I would expect. ; The GATK version you're running is almost 2 years old, and there have been quite a few releases since then. Can you reproduce this behavior with GATK 4.1.9.0 ? If so, can you include a log from that ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6990#issuecomment-744559303:46,log,log,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6990#issuecomment-744559303,3,['log'],['log']
Testability,"@rahulg603 We've confirmed this issue on our end, and have a proposed fix in a branch that we're currently testing. Should be resolved in the next GATK release, which will come out within the next ~week.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6179#issuecomment-1050232846:107,test,testing,107,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6179#issuecomment-1050232846,1,['test'],['testing']
Testability,@rick-heig Ah - thats super helpful - I think I see the problem. Is is possible for you try running the tests with [this branch](https://github.com/broadinstitute/gatk/tree/cn_left_align) ?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5511#issuecomment-446584198:104,test,tests,104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5511#issuecomment-446584198,1,['test'],['tests']
Testability,"@rick-heig I wouldn't expect to see those failures, so I think something is wrong. Are these the only tests in the entire suite that fail ? We pretty regularly run these tests on Ubuntu 16.04. Also please verify that you did install git-lfs and fetched the large files per the instructions in the README.md file ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5511#issuecomment-446225974:102,test,tests,102,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5511#issuecomment-446225974,2,['test'],['tests']
Testability,"@rick-heig thanks for trying again. I ran the tests on Ubuntu 18.04 (the previous attempts were on a Mac), and the Spark tests didn't fail for me there either...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5511#issuecomment-452639052:46,test,tests,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5511#issuecomment-452639052,2,['test'],['tests']
Testability,@rickymagner I think as long as you trust the test this is probably good to go in. I have some ideas about improvements but I'd say we should leave that for another pr.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1847989050:46,test,test,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8609#issuecomment-1847989050,1,['test'],['test']
Testability,@robby81 - we're finally getting around to fixing some of the underlying incompatibilities with this. We're working on updating some of the internals of Funcotator and there will be a new datasources release very soon. After that I'll test this branch again to see if it's functional.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7427#issuecomment-1653809525:235,test,test,235,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7427#issuecomment-1653809525,1,['test'],['test']
Testability,@ronlevine @lbergelson Have you guys thought about the Spark case - I don't think this will capture logging output from Spark workers unless the settings get propagated through the config (we also don't propagate the verbosity IIRC). It might be a little misleading to allow specification of a file for Spark tools if it doesn't capture all of the output.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2751#issuecomment-315897839:100,log,logging,100,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2751#issuecomment-315897839,1,['log'],['logging']
Testability,"@ronlevine I don't see a test covering that argument in GATK4. If you have such a test in GATK3, could you port it to GATK4 (or write a new test if the old one depends on large files in the Broad filesystem)?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2301#issuecomment-265793638:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2301#issuecomment-265793638,3,['test'],['test']
Testability,@ronlevine It looks to me that there could be some refactoring done here to separate out the AF update logic into a single function call that could be used in multiple places rather than having two sets of fairly complicated and highly similar logic. Could you see if that's doable?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1871#issuecomment-242121998:103,log,logic,103,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1871#issuecomment-242121998,2,['log'],['logic']
Testability,"@ronlevine Looks good to me. Feel free to merge after squashing/rebasing if there aren't any issues with the rebase. Ignore the codacy failure, it's something I was testing but I don't think it's that useful.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1871#issuecomment-247374180:165,test,testing,165,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1871#issuecomment-247374180,1,['test'],['testing']
Testability,"@ronlevine commented on [Fri Jul 15 2016](https://github.com/broadinstitute/gsa-unstable/issues/1438). ### Instructions. Follow up to #1432.; Remove the following code from `IntervalUtils. intervalFileToList()` when a new exome, correctly converted interval list (with no -1 length intervals) is released :. ```; if (interval.getStart() - interval.getEnd() == 1 ) { ; logger.warn(""Possible incorrectly converted length 1 interval : "" + interval);; }; ```. ---; ## Feature request; ### Tool(s) involved. Any tool using `IntervalUtils. intervalFileToList()` ; ### Description. Once this change is made, -1 length intervals will be validated and an exception will be thrown. ---. ---. @vdauwera commented on [Mon Nov 14 2016](https://github.com/broadinstitute/gsa-unstable/issues/1438#issuecomment-260495927). From what I understand of the referenced thread, the ""incorrect"" interval list may always be around, so we may never be able to just blow up on it. Would it perhaps be more viable to add an option to toggle the level of stringency, ie choose in the command line whether to blow up or skip on these invalid intervals? . ---. @vdauwera commented on [Mon Nov 14 2016](https://github.com/broadinstitute/gsa-unstable/issues/1438#issuecomment-260496001). @yfarjoun will want to opine on this, I think. . ---. @yfarjoun commented on [Mon Nov 14 2016](https://github.com/broadinstitute/gsa-unstable/issues/1438#issuecomment-260513266). I hope that when we move exomes to hg38 we will correct this silly thing; and a few decades later we will no need this code (hehe). Y. On Mon, Nov 14, 2016 at 6:19 PM, Geraldine Van der Auwera <; notifications@github.com> wrote:. > From what I understand of the referenced thread, the ""incorrect"" interval; > list may always be around, so we may never be able to just blow up on it.; > Would it perhaps be more viable to add an option to toggle the level of; > stringency, ie choose in the command line whether to blow up or skip on; > these invalid intervals?; > ; ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2520:368,log,logger,368,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2520,1,['log'],['logger']
Testability,@ronlevine commented on [Thu Sep 29 2016](https://github.com/broadinstitute/gatk-protected/issues/725). @ronlevine commented on [Tue Jul 19 2016](https://github.com/broadinstitute/gatk/issues/2017). Port https://github.com/broadinstitute/gsa-unstable/pull/1417. ---. @ronlevine commented on [Wed Jul 20 2016](https://github.com/broadinstitute/gatk/issues/2017#issuecomment-233990695). Need to port `GenotypeGVCFs` before testing the proposed changes in `GenotypingEngine.java`. ---. @ronlevine commented on [Thu Sep 29 2016](https://github.com/broadinstitute/gatk/issues/2017#issuecomment-250468170). @droazen Should this be a gatk-protected ticket instead since it depends on GenotypeGVCFs?,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2193:421,test,testing,421,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2193,1,['test'],['testing']
Testability,"@ronlevine just pointed out this is redundant w/ another issue (see above). for that issue you guys requested I write a unit test, which I did this morning. Feel free to apply that or not. It's attached to that thread as a patch (sorry, dont have a good local enlistment right now). It's nothing special, but tests are rarely a bad thing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3252#issuecomment-314527518:125,test,test,125,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3252#issuecomment-314527518,2,['test'],"['test', 'tests']"
Testability,"@ronlevine, I think that the following should work for output the Esotericsoft's MinLog to write to a file:; * Implement in `LoggerUtils` a class extending `com.esotericsoftware.minlog.Log.Logger` that overrides the print method to append to the provided file.; * Use`Log.setLogger()` with an instance of that class.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2751#issuecomment-315706353:125,Log,LoggerUtils,125,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2751#issuecomment-315706353,4,['Log'],"['Log', 'Logger', 'LoggerUtils']"
Testability,"@rsasch LGTM.... worked for me, and it looks like the testing all passed---lmk how else I can help",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7694#issuecomment-1054578042:54,test,testing,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7694#issuecomment-1054578042,1,['test'],['testing']
Testability,@ruchim would you be able to run the centaur tests on an arbitrary hash? That way we don't release bad WDL.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4319#issuecomment-362086043:45,test,tests,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4319#issuecomment-362086043,1,['test'],['tests']
Testability,"@sahuno Thanks for the detailed report here. As @lbergelson mentioned above, we're working on a new GKL release and will check if the issues above are resolved with the new release on Linux. We don't currently have plans to test specifically in Terra, but @lbergelson may be able to help pull in the right folks to do so once we get the new GKL release out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-664678234:224,test,test,224,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5690#issuecomment-664678234,1,['test'],['test']
Testability,"@samuelklee . In the non-docker integration test build we do run the R installation script, but a failure doesn't kill the build unless the tests fail because of it. . Would it be less painful if we had a readme explaining how to update the r-dependencies? That way it wouldn't be a surprise that you have to build a new docker image. Typically the workflow when updating the R installation script should probably be to update the base image and update the Dockerfile in the same PR that updates the R dependencies. That way we don't get out of sync. . I do like the idea of hosting the cran dependencies somewhere ourselves. Those cause us a lot of pain.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3712#issuecomment-337638980:44,test,test,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3712#issuecomment-337638980,2,['test'],"['test', 'tests']"
Testability,"@samuelklee @asmirnov239 @mbabadi I tried to run a 30-sample cohort through gCNV on all canonical chromosomes with 250bp bins sharded in 10k-interval blocks, but PostprocessGermlineCNVCalls gave the following error:. ```...; 19:26:14.967 INFO PostprocessGermlineCNVCalls - Analyzing shard 223...; 19:26:15.107 INFO PostprocessGermlineCNVCalls - Analyzing shard 224...; 19:26:15.259 INFO PostprocessGermlineCNVCalls - Analyzing shard 225...; 19:26:15.260 INFO PostprocessGermlineCNVCalls - Shutting down engine; [May 29, 2018 7:26:15 PM UTC] org.broadinstitute.hellbender.tools.copynumber.PostprocessGermlineCNVCalls done. Elapsed time: 3.34 minutes.; Runtime.totalMemory()=39753089024; ***********************************************************************. A USER ERROR has occurred: Bad input: Validation error occurred on line %d of the posterior file: Posterior probabilities for at at least one posterior record do not sum up to one.; ```. After inspecting the output from shard 225, it seems that the model starts producing nan values after ~1600 warmup iterations (looking at the ELBO log). This shard corresponds to a pericentromeric region chr3:91540501-94090250. . It would be nice to have the option to bypass this error in PostprocessGermlineCNVCalls. Here is the model config for the shard:. ```""p_alt"": 1e-06,; ""p_active"": 0.01,; ""cnv_coherence_length"": 10000.0,; ""class_coherence_length"": 10000.0,; ""max_copy_number"": 5,; ""num_calling_processes"": 1,; ""num_copy_number_states"": 6,; ""num_copy_number_classes"": 2; ""max_bias_factors"": 5,; ""mapping_error_rate"": 0.01,; ""psi_t_scale"": 0.001,; ""psi_s_scale"": 0.0001,; ""depth_correction_tau"": 10000.0,; ""log_mean_bias_std"": 0.1,; ""init_ard_rel_unexplained_variance"": 0.1,; ""num_gc_bins"": 20,; ""gc_curve_sd"": 1.0,; ""q_c_expectation_mode"": ""hybrid"",; ""active_class_padding_hybrid_mode"": 50000,; ""enable_bias_factors"": false,; ""enable_explicit_gc_bias_modeling"": false,; ""disable_bias_factors_in_active_class"": false; ""version"": ""0.7""; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4824:1093,log,log,1093,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4824,1,['log'],['log']
Testability,"@samuelklee @asmirnov239 Yes, the CNN tests failing here is completely expected! What we should probably do for now is deprecate the CNN tools, and move the legacy conda environment into a separate yml file that you have to activate manually if you need to run the old CNN tools for some reason. Then once NVidia implements a training tool to go along with `NVScoreVariants`, we can remove the CNN tools completely.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8094#issuecomment-1329704966:38,test,tests,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8094#issuecomment-1329704966,1,['test'],['tests']
Testability,"@samuelklee @mwalker174 @lucidtronix Tests seem to pass with this (numpy 1.18 seems to cause runtime errors for CNN, but 1.17 seems to work ok), so this should at least get us up to a version that addresses the gcc issues in [this forum post](https://gatk.broadinstitute.org/hc/en-us/community/posts/360056743551-Problem-Installing-GATK-python-environment-SOLUTION-POSTED).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6494#issuecomment-597327815:37,Test,Tests,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6494#issuecomment-597327815,1,['Test'],['Tests']
Testability,"@samuelklee After disabling the offending test with Chris Norman's blessing, this is ready for your review again. I butchered the commit history during the rebase but in the conversation above you can see everything I did. It's only about five things since the last time.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1217250357:42,test,test,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1217250357,1,['test'],['test']
Testability,@samuelklee Are the bins in the hist2D logarithmic? Could you post an updated plot with a colorbar?. FYI... @yfarjoun,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3915#issuecomment-415029149:39,log,logarithmic,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3915#issuecomment-415029149,1,['log'],['logarithmic']
Testability,@samuelklee Code cov reports are usually off for one of two reasons: ; 1. something went horribly wrong and codecov reported coverage before all the travis jobs finished. ; 2. something went horribly wrong and a large chunk of tests are silently failing to execute. . Good to check that it's 1 and not 2. Usually rerunning should fix case 1.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3550#issuecomment-327585487:227,test,tests,227,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3550#issuecomment-327585487,1,['test'],['tests']
Testability,"@samuelklee For each of the 3 tools, I would pick an existing, straightforward integration test, make a copy, shrink the interval way down, modify the command line to set all of the SW parameters to custom values, and check in new expected outputs. The goal is just to prove that the new arguments don't explode and have some actual effect on the output, so we don't need anything fancy.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-896317184:91,test,test,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6885#issuecomment-896317184,1,['test'],['test']
Testability,"@samuelklee I did not do everything, but if you want me to, I can. Otherwise, I'll squash and merge (assuming I did not inadvertently break tests)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3408#issuecomment-322549071:140,test,tests,140,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3408#issuecomment-322549071,1,['test'],['tests']
Testability,@samuelklee I have addressed both minor comments. I am going to merge if tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3713#issuecomment-339093795:73,test,tests,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3713#issuecomment-339093795,1,['test'],['tests']
Testability,"@samuelklee I know and it's bizarre -- I don't get the failure in my local tests, and I haven't changed anything that affects either XHMM-related resource files or tests. I keep investigating. Let me know if you have a clue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2813#issuecomment-307212673:75,test,tests,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2813#issuecomment-307212673,2,['test'],['tests']
Testability,"@samuelklee I support exposing these parameters via the command line, but I'd be opposed to any consolidation of parameters that changes the HaplotypeCaller output prior to the initial DRAGEN-GATK release in November, as the evaluations in that project are difficult enough as it is. If you want to do an evaluation to find the best set of SW parameters now, that's fine of course -- but we wouldn't be able to actually merge any breaking HaplotypeCaller changes until after the November DRAGEN-GATK release, and we'd also have to check whether the proposed changes affect the functional equivalence of GATK and DRAGEN (we're developing tests now that can check this). If you want to expose the SW parameters on the CLI now, I think 12 arguments is fine. Just give each argument a clear prefix indicating what it applies to (eg., `--read-to-haplotype-mismatch-penalty`). If a user has gotten to the point where they feel the need to mess with the SW parameters, their command line is probably already long and complex as it is, so adding a few additional arguments won't ruin their day.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6863#issuecomment-705081291:637,test,tests,637,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6863#issuecomment-705081291,1,['test'],['tests']
Testability,"@samuelklee I think HDF files have a unique signature that is intended to be used to identify them (including a non-ascii first byte to ensure they're not confused with text files). i.e.:. ```; ~/projects/gatk od -c -N 8 src/test/resources/large/cnv_somatic_workflows_test_files/wes-do-gc.pon.hdf5; 0000000 211 H D F \r \n 032 \n ; 0000010; ```. We can take this PR for the short-term if you want, but we should add an `isHDF5File` utility method, maybe in the hdf5-java-bindings repo. I think we might be able to use it the CNN tools as well.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5055#issuecomment-408514058:225,test,test,225,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5055#issuecomment-408514058,1,['test'],['test']
Testability,"@samuelklee I think it's right for what we're doing. We mount the test data as `/testdata` and then create a symlink from src/test/resources to /testdata to provide it to the test files. It seems to work.; ; I'm not clear what they get more of the other way around. More tests? Are they using our create docker script? Or our travis file? Or something else? I think we might just be able to just directly mount test data to src/test/resources and avoid the symlink, but I probably had a reason when I set it up that way... I think this is a non-issue unless they can provide more information.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3730#issuecomment-339439156:66,test,test,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3730#issuecomment-339439156,8,['test'],"['test', 'testdata', 'tests']"
Testability,"@samuelklee I think the issue may be that we currently run integration tests on both Java 8 on the docker and on Java 11 on CI (though I'm not 100% sure that these specific tests run on both). I was able to update the expected results on the Java 17 branch, but that branch only runs on one version of Java. So updating the expected results may just move the problem to Java 8. Not sure.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8107#issuecomment-1330948150:71,test,tests,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8107#issuecomment-1330948150,2,['test'],['tests']
Testability,@samuelklee I tried to address your comments and tests are now back to passing so I think this is ready for re-review. Thanks!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7932#issuecomment-1183485024:49,test,tests,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7932#issuecomment-1183485024,1,['test'],['tests']
Testability,"@samuelklee I will build the docker and run the warp tests, but if we do this again I'm going to teach you to fish. Wasn't there a VariantRecalibrator integration test that had some sort of random seed hijinx? Hopefully your fix should mean we don't need any shenanigans anymore -- can you see if there are any other tests we can clean up?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7709#issuecomment-1061820382:53,test,tests,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7709#issuecomment-1061820382,3,['test'],"['test', 'tests']"
Testability,"@samuelklee I wrote some benchmarks for the exact combinatorics and you were right, my optimization was pointless. Although the `CombinatoricsUtils` method does explicitly multiply out instead of using cached factorials 1) the number of multiplications is only min(ploidy, (allele count - 1)), and 2) it actually takes quite a while (much larger than reasonable ploidy and allele count) for multiplication to take longer than the memory access of stored factorials. . I have removed this error in judgment.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1066873168:25,benchmark,benchmarks,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1066873168,1,['benchmark'],['benchmarks']
Testability,"@samuelklee I'd say lets leave 2.1 base image up there for now, and yes on the cache clearing. Once tests pass with the cache cleared it should be good to merge. Feel free to squash and rebase if you like.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408453109:100,test,tests,100,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5040#issuecomment-408453109,1,['test'],['tests']
Testability,@samuelklee I'll write unit tests for segment quality calculation in a separate PR (issue #4464).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4396#issuecomment-369015522:28,test,tests,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4396#issuecomment-369015522,1,['test'],['tests']
Testability,"@samuelklee I've worked through all of the issues with the other repos (Barclay, picard, etc.), so we're ready to move forward with Java 17 reviews, but the `ModelSegments` tests are still inconsistent. This branch has updated `ModelSegments` expected result files that were produced locally with Java 17 (based on our discussion from some months ago), but now the same tests still fail on the docker. They succeed when run locally or in the CI non-docker job. At one point when I looked into these, the values produced when the tests fail look similar(/identical ?) to the values that the tests USED to produce (i.e., I suspect if we reverted expected results files, the tests might succeed on the docker and fail on the non-docker). I'm not sure what is causing the instability, but this is going to become a blocking issue for this in the next couple of weeks. We also have the option of disabling them only on the docker (or non-docker), but I hate to do that. Can you take a look at this in the next week or so ?. There is also one WDL test (`CNVSomaticPanelWorkflow.CreateReadCountPanelOfNormals`) that fails pretty consistently - I suspect this is a resource/memory issue since it sometimes returns exit code 134. The default CI machines are pitiful things, 7GB IIRC. The other test failures (doc and wdl gen) can be ignored for now - they require code that is on another branch that is dependent on a new Barclay version.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8035#issuecomment-1402764136:173,test,tests,173,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8035#issuecomment-1402764136,7,['test'],"['test', 'tests']"
Testability,"@samuelklee It's great to see this inching closer to finally getting merged! I think we should plan on merging it shortly after the upcoming 4.6 release, assuming the remaining testing doesn't reveal any issues. Since 4.6 will contain a number of important bug fixes and user-requested changes, I want to get it out before making a big breaking change to the Python environment. After 4.6 is out, we can meet briefly to discuss how best to handle the deprecation of the legacy CNN tools, and hopefully get this in at last.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-2121031481:177,test,testing,177,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-2121031481,1,['test'],['testing']
Testability,@samuelklee It's rebased and passing tests again.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6410#issuecomment-1020444154:37,test,tests,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6410#issuecomment-1020444154,1,['test'],['tests']
Testability,@samuelklee Looks good to me. I discussed w/ @cmnbroad and he thinks replacing the bams with crams is okay for this test.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4257#issuecomment-360530741:116,test,test,116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4257#issuecomment-360530741,1,['test'],['test']
Testability,@samuelklee Most of these changes are to unsupported WDL. And the (very few) changes to GATK code were to automated tests only.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5384#issuecomment-435106152:116,test,tests,116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5384#issuecomment-435106152,1,['test'],['tests']
Testability,"@samuelklee OK it is not a cromwell issue -- after your commit, the somatic denoising integration tests are failing locally too:; ```java.lang.IllegalArgumentException: Sample intervals must be identical to the original intervals used to build the panel of normals.```. I wouldn't worry about it now. It is most likely related to test resource files.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-350195448:98,test,tests,98,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-350195448,2,['test'],"['test', 'tests']"
Testability,"@samuelklee Oh interesting - the main jar and the test jar have directives - see for example the one for the main jar [here](https://github.com/broadinstitute/gatk/blob/cn_java_17/build.gradle#L413) - that should prevent that exception from happening (but only if you're running from a jar, otherwise you need to add a bunch of --add-exports manually to prevent that exception - I need to write up a wiki article on how to do that, since you need to do it to run tests from within the IDE). So it shouldn't happen on the docker, but if it is, maybe I missed a code path. I'll take a look.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8035#issuecomment-1409227831:50,test,test,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8035#issuecomment-1409227831,2,['test'],"['test', 'tests']"
Testability,@samuelklee Should I be worried that the tests don't pass?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4288#issuecomment-361311013:41,test,tests,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4288#issuecomment-361311013,1,['test'],['tests']
Testability,@samuelklee Test completed successfully.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5287#issuecomment-427596828:12,Test,Test,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5287#issuecomment-427596828,1,['Test'],['Test']
Testability,"@samuelklee Thank you, that's fixed now. . Regarding ScatterIntervals issue - what do you think about changing IntervalListTools logic to not produce singletons instead of filtering them out in GermlineCNVCaller?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6559#issuecomment-617319366:129,log,logic,129,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6559#issuecomment-617319366,1,['log'],['logic']
Testability,"@samuelklee Thanks for the PR review, I have implemented most changes and will make issues for the remaining momentarily. Waiting for the travis tests to pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-355590848:145,test,tests,145,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-355590848,1,['test'],['tests']
Testability,"@samuelklee The method you suggested, successfully solve my problems. I have tested 12 times and no more ""theano-gof-compilelock"" occurs. Thank you very much!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-549549909:77,test,tested,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-549549909,1,['test'],['tested']
Testability,"@samuelklee The performance issues were a mirage. It turned out that there was a misconfiguration in the Carrot tests so it was pegging the ""control"" version to an older GATK release from a year ago. There was a slight regression in the past year the we haven't caught but that is a separate discussion.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1551819210:112,test,tests,112,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1551819210,1,['test'],['tests']
Testability,"@samuelklee The results are definitely improved for the WES. WGS looks about the same. Here is the reproducibility WES test on HCC1143, which is improved. ![image](https://user-images.githubusercontent.com/2152339/51325543-2e148480-1a3b-11e9-9264-ea5ce5dbc1d9.png)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5575#issuecomment-455193485:119,test,test,119,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5575#issuecomment-455193485,1,['test'],['test']
Testability,"@samuelklee This is a very dangerous/misleading check! Most of the files in your list are actually in use in the test suite, and their presence is inferred from the path to the file(s) they are associated with. For example, vcf index files are loading indirectly by our readers, using the path to the vcf to infer the path to the index.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905#issuecomment-348591768:113,test,test,113,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905#issuecomment-348591768,1,['test'],['test']
Testability,"@samuelklee When you get a chance, could you repeat your test with latest gatk/master? We recently (ie., within the past 2 weeks) upgraded to a newer gcloud release, and I'm curious to test whether that had an effect.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5631#issuecomment-466520895:57,test,test,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5631#issuecomment-466520895,2,['test'],['test']
Testability,@samuelklee You were correct - old setting restored back old results:; ```; /soft/gatk-4.5.0.0/gatk DetermineGermlineContigPloidy --mean-bias-standard-deviation 0.01 --mapping-error-rate 0.01 -L /outputs/gatk_intervals.interval_list --interval-merging-rule OVERLAPPING_ONLY --contig-ploidy-priors /outputs/a_valid_ploidy_priors_table.tsv.copy.tsv --output /outputs/COHORT_runDir --output-prefix COHORT --input /outputs/E07002_normal_alignment.bam.counts.hdf5 --input /outputs/E07002_tumor_alignment.bam.counts.hdf5. /soft/gatk-4.5.0.0/gatk GermlineCNVCaller --p-alt 1e-6 --p-active 1e-2 --max-bias-factors 5 --interval-psi-scale 0.001 --sample-psi-scale 0.0001 --run-mode COHORT -L /outputs/gatk_intervals.interval_list --interval-merging-rule OVERLAPPING_ONLY --annotated-intervals /outputs/gatk_intervals.interval_list.annotated.tsv --contig-ploidy-calls /outputs/COHORT_runDir/COHORT-calls --input /outputs/E07002_normal_alignment.bam.counts.hdf5 --input /outputs/E07002_tumor_alignment.bam.counts.hdf5 --output /outputs/COHORT_runDir --output-prefix COHORT; ```. So I should just stick to new defaults and update tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8628#issuecomment-1857979895:1117,test,tests,1117,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8628#issuecomment-1857979895,1,['test'],['tests']
Testability,"@samuelklee You're right - I tested it and it's only an issue in postprocessing , so I'm only making a check there. Neither GermlineCNVCaller or DetermineContigPloidy code fails due to this issue. It should be all set to be reviewed now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6559#issuecomment-618079214:29,test,tested,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6559#issuecomment-618079214,1,['test'],['tested']
Testability,"@samuelklee commented on [Tue Aug 09 2016](https://github.com/broadinstitute/gatk-protected/issues/640). This combined with an unset random seed was causing `AlleleFractionSegmenter.testChromosomesOnDifferentSegments` to fail intermittently in #633. @davidbenjamin could you take a look when you get back? This could be fixed easily by a `Math.min` in the right place, but I don't know if the fact that the memory length seems to blow up is something generic that happens when we collapse to a single state that needs to be addressed more carefully. ---. @samuelklee commented on [Wed Aug 17 2016](https://github.com/broadinstitute/gatk-protected/issues/640#issuecomment-240523360). @davidbenjamin can you take a quick look? I think it's probably a quick fix. ---. @davidbenjamin commented on [Wed Aug 17 2016](https://github.com/broadinstitute/gatk-protected/issues/640#issuecomment-240530369). Sure.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2877:182,test,testChromosomesOnDifferentSegments,182,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2877,1,['test'],['testChromosomesOnDifferentSegments']
Testability,"@samuelklee commented on [Wed Oct 19 2016](https://github.com/broadinstitute/gatk-protected/issues/750). Tool for inferring mixture of CNV subclones from ACNV output.; - [x] Develop resources for simulating tumor phylogenies/mixtures; - Wrote python code for simulating phylogenies and generating corresponding truth tables for CN profiles, ACNV segment files (with varying noise---i.e., CR and MAF credible-interval sizes---and purity levels), and plots.; - [x] Design basic algorithm; - Gibbs sampling MCMC of Dirichlet mixture of CNV subclones, to start. Graphical model is written down.; - [x] Implement basic algorithm; - CLI roughly implemented in sl_purity_ploidy_mcmc branch. Could stand some refactoring and code cleanup before it is PR ready and needs tests.; - [x] Algorithm improvements; - Currently, the model is initialized assuming a 50-50 normal-tumor split and only a clonal population. This is run for ~100 MCMC iterations, and the result is used to initialize a second run that expands the number of populations. This tends to work reasonably well, but there are situations where the model can get stuck in incorrect, degenerate solutions. Going to try adding some MH steps that will swap populations to see if these can help get the model unstuck.; - Need to add outlier absorption to the model, which appears to be critical for inference of subclonal populations from real data (i.e., ACNV output), which may have spurious segments, oversegmentation, etc. Simple clonal models appear to work reasonably well without this, though.; - [x] Evaluate algorithm on simulated data.; - Implemented simple Queue pipeline for running CLI on simulated ACNV segment files. Takes <2 minutes for ~1000 iterations for each sample, can run 100s of samples in parallel on the gsa clusters.; - Need to write up some scripts to automatically calculate and plot metrics.; - [x] Evaluate algorithm on real data; - Some initial runs on HCC1143 purity series show reasonable results for the clonal model",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2909:762,test,tests,762,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2909,1,['test'],['tests']
Testability,"@samuelklee darn; the wgs pon related tests are still failing and the germline WDL exceeds the time limit (it completes in ~ 10 mins on gsa5, which is already quite slow, and ~ 3 mins on my laptop!). Something strange is going on. I wish there was an easy way to inspect the cromwell logs; perhaps there's a way to set cromwell logging to stdout.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-350194775:38,test,tests,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-350194775,3,"['log', 'test']","['logging', 'logs', 'tests']"
Testability,"@samuelklee gCNV integration tests and WDL tests pass locally. There are a number of issues:; - Somatic WDL tests fail on travis, and haven't tried them locally. Those tests were failing before I made changes -- it's unlikely to be related to my changes. Could you please take a look?; - Germline WDL tests are extremely slow on travis, perhaps there is no g++ and it is using python fallback? I don't know how to see the cromwell log files on travis. @lbergelson any pro tips?; - Python-related integration tests all fail on travis (though not locally w/ a properly setup python environment).; - I noticed that the python env in `Dockerfile` is based on `Miniconda2`. We strictly require Python 3 for gCNV.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-350158363:29,test,tests,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-350158363,7,"['log', 'test']","['log', 'tests']"
Testability,@samuelklee haha I just figured it out and was about to write to you. Hopefully the tests will pass now. The changes I made to travis yml were experimental -- I am reverting them.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-350188293:84,test,tests,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3925#issuecomment-350188293,1,['test'],['tests']
Testability,@samuelklee looks good to me assuming tests pass. Feel free to merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4145#issuecomment-357386346:38,test,tests,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4145#issuecomment-357386346,1,['test'],['tests']
Testability,"@samuelklee tests are passing now (and I didn't touch it, perhaps GATKave people fixed in issue in travis?). Will resolve conflicts and rebase again.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2813#issuecomment-307820329:12,test,tests,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2813#issuecomment-307820329,1,['test'],['tests']
Testability,"@samuelklee this PR adds new features to `gcnvkernel` (postprocessing) that are not currently invoked by any GATK tool. Ideally, we need python unit tests for such PRs, but right now, perhaps the tests can wait until I update `PostprocessGermlineCNVCalls`?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4335#issuecomment-363548654:149,test,tests,149,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4335#issuecomment-363548654,2,['test'],['tests']
Testability,"@samuelklee this is fantastic!. 1. @cmnbroad any ideas about the absence of log messages from python? by default, the logger writes to `sys.stderr`. Perhaps I should set it to `sys.stdout`?. 2. I think it makes sense to move python packages and scripts (or at least, the scripts) to src/main/resources.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3838#issuecomment-345774324:76,log,log,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3838#issuecomment-345774324,2,['log'],"['log', 'logger']"
Testability,"@samuelklee, I tested using v4.0.11.0 and see the same error with `-XL` so here is the bug report as promised.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5388#issuecomment-435476592:15,test,tested,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5388#issuecomment-435476592,1,['test'],['tested']
Testability,"@samuelklee, thanks for the update and suggestion. I moved CollectAllelicCounts to the `Coverage Analysis` category. CollectFragmentCounts isn't on the list currently so I added it to the same. I hope I'm not missing a bunch of other new tools given I missed this one. . @yfarjoun ; - You are now in charge of deciding whether we should include authorship in code. What the Comms team wants is for authorship to NOT show up in the gatkDoc/javaDoc. If you want to keep them, author lines should be at the bottom and formatted so they do not show up in the documentation. Geraldine is fine with completely removing them if you prefer that. There is a format trick that has javaDoc skip the author line and @vdauwera would know this or I can get you what I see in other docs. Let either of us know.; - I can help you test your changes. I think the categories are good to go now so I will need to put these into both Picard and GATK HelpConstants.java, with the latter being a placeholder until the new Picard release is incorporated into the next GATK release, with variables that then must be included in each tool doc. I will find an example in a bit. Which tool do you want to test? @cmnbroad can explain the engineering details in engineering lingo if you need more information.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3853#issuecomment-349404645:814,test,test,814,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3853#issuecomment-349404645,2,['test'],['test']
Testability,"@shengqh ; Looking at it, it seems that `test.pbs` is basically a shell script. So at the top of that add:. ```; source activate gatk; ```. Or... whatever it is you need to do to activate the environment. What the `exec` command is going to do is launch whatever is passed in. So... something like:. ```; singularity exec gatk.simg cat /etc/os-release; ```; Would show you the `/etc/os-release` file from within the container. `exec` isn't going to load a shell environment, but launch the application directly. In a `shell` look at: `/.singularity.d/actions/exec`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433549054:41,test,test,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433549054,1,['test'],['test']
Testability,"@shengzha Not yet, though I am working on it (this ticket will transition to the closed state when a fix has been merged). In the meantime if you have a small test case that illustrates the problem, please add it here, as that would help ensure the fix addresses the specific issue you're seeing. Thanks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6242#issuecomment-591991409:159,test,test,159,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6242#issuecomment-591991409,2,['test'],['test']
Testability,"@shisheng-1 Hello, thank you for your contribution! . I tried running with and with-out your change enabled and I didn't see any performance improvement when compiling. I didn't do a very scientific test, but running the following a few times on master vs your branch didn't show any performance advantage for using fork = true.; ```; ./gradlew clean compileTestJava; ```. | fork = | false | true |; | --- | ----- | ---- |; | run 1 | 77 | 93 |; | run 2 | 67 | 70 |. From my quick tests it looked like the forking version might actually be a bit slower but I suspect that's just noise. . Do you see different results?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7561#issuecomment-967263911:199,test,test,199,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7561#issuecomment-967263911,2,['test'],"['test', 'tests']"
Testability,"@skchronicles, I have not exhaustively tested every possible scenario and fringe case, but in theory it should be effectively the same as GATK3 combine variants. Happy to answer any questions if you hit issues.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7038#issuecomment-1191904789:39,test,tested,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7038#issuecomment-1191904789,1,['test'],['tested']
Testability,@slw287r I found the error and have fixed it in a branch. I will test it on a few genomes and then submit a PR.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6724#issuecomment-690550659:65,test,test,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6724#issuecomment-690550659,1,['test'],['test']
Testability,"@slzhao This is definitely a reasonable thing to do. Please feel free to issue a PR to do this. That said, I have to give you a warning. Some of the datasources rely on `sqlite3` and therefore have issues on some distributed filesystems (see this [post on Lustre/NFS errors](https://github.com/CGATOxford/CGATPipelines/issues/39)). There are a few posts in the GATK forums about this as well. So you may want to do some testing before using one centralized copy of the data sources. . As a heads-up - I do not have access to a Lustre filesystem so I am unable to do any debugging with it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6731#issuecomment-671508424:420,test,testing,420,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6731#issuecomment-671508424,1,['test'],['testing']
Testability,@sonejilab. As @gokalpcelik the logs should be helpful to figure out what happened. Particularly at the end there should be an accounting of how many reads were filtered by what filters. Possibly something is unexpected about the read flags for the STAR aligned reads and most likely they are being filtered out by the tool. You can disable all of the reads filters using this argument `--disable-tool-default-read-filters` and then re-enable the ones that are relevant. Next I would check that your input files are populated and are on the same reference as the -R input that you specified in your command.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8873#issuecomment-2176212771:32,log,logs,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8873#issuecomment-2176212771,1,['log'],['logs']
Testability,"@sooheelee - I think that to have a proper test suite similar to GATK's 3, we need also some test that exercise some code paths that requires some specific scientifically meaningful data (for example, known indels that are also included in some sample). I am not that familiar with the test data on this or GATK3 repository, so I am not sure if that was already covered. @sooheelee - this is going to be an exact port of the indel-realignment pipeline, as it is in the GATK3 code, so that means that I won't modify the interval list format or anything (although I will use the HTSJDK/Picard classes as used on GATK3). Because this will be an experimental/beta feature, I think that I can have a look to the new format after acceptance of the original port. @cmnbroad - I understand that a fully functional tool is a requirement for acceptance, but what I mean is that some specific features might require more work than others. I am only concerned about the `NWaySAMFileWriter`, which is just an specific way of output the data but does not add anything to the real realignment process (actually, I think that I've never heard about anyone around me using it). That is a nice feature, but I don't think that it is a high-priority - I care more about having the algorithm implemented to test if the actual processing of the data works, and add support for some way of output the data in a different PR. In addition, if the people still using indel-realignment does not require the n-way output, then it is pointless to spend time on it. I was also thinking about the mate-fixing algorithm in the tool, because it can be performed afterwards with Picard, which is not constraining by any distance between reads or records in RAM - nevertheless, this is really a drop of functionality that will change results, and that's why I didn't propose that. About the target-creator, known indels are really easy to port because the code is within the tool and is simpler - the only problem might be code coverage",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371515115:43,test,test,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371515115,3,['test'],['test']
Testability,"@sooheelee - the main idea is to run both tools with GATK3 on the test data, and then check if the port provides the same answer. Thanks a lot @cmnbroad and @sooheelee to look into this. I will try to make today a new PR for `RealignerTargetCreator` and start the work from scratch for `IndelRealignment` (it will take a bit longer, although without some support it might be actually a bit lighter too).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371501418:66,test,test,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371501418,1,['test'],['test']
Testability,"@sooheelee . Here is my command:. ```; singularity exec gatk.simg test.pbs; ```; Here is test.pbs:. ```; gatk DetermineGermlineContigPloidy \; -L filtered.interval_list \; --input A1.count.hdf5 --input A2.count.hdf5 \; --contig-ploidy-priors contig_ploidy_priors_homo_sapiens.tsv \; --interval-merging-rule OVERLAPPING_ONLY \; --output out \; --output-prefix exomeseq \; --verbosity DEBUG \; --mean-bias-standard-deviation 0.01 \; --mapping-error-rate 0.01 \; --global-psi-scale 0.001 \; --sample-psi-scale 0.0001; ```. Here is the error message and I think the python environment has been activated by Singularity. The task failed when it tried to create directory of '/root/.theano'. ```; 17:03:28.891 INFO DetermineGermlineContigPloidy - Initializing engine; 17:03:28.896 DEBUG ScriptExecutor - Executing:; 17:03:28.896 DEBUG ScriptExecutor - python; 17:03:28.896 DEBUG ScriptExecutor - -c; 17:03:28.896 DEBUG ScriptExecutor - import gcnvkernel. Traceback (most recent call last):; File ""/opt/miniconda/envs/gatk/lib/python3.6/site-packages/theano/configdefaults.py"", line 1738, in filter_compiledir; os.makedirs(path, 0o770) # read-write-execute for user and group; File ""/opt/miniconda/envs/gatk/lib/python3.6/os.py"", line 210, in makedirs; makedirs(head, mode, exist_ok); File ""/opt/miniconda/envs/gatk/lib/python3.6/os.py"", line 220, in makedirs; mkdir(name, mode); PermissionError: [Errno 13] Permission denied: '/root/.theano'; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433477833:66,test,test,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433477833,2,['test'],['test']
Testability,"@sooheelee Are you comfortable reviewing this? The code changes are minimal. Note that there is no ""regression test"" since the test files do not give rise to the scenario you encountered in https://github.com/broadinstitute/dsde-docs/issues/2891. Perhaps we can make sure that we include such a test case when we address https://github.com/broadinstitute/gatk/issues/4007.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4510#issuecomment-371297497:111,test,test,111,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4510#issuecomment-371297497,3,['test'],['test']
Testability,"@sooheelee Are you sure that smoothing doesn't always converge before we can see different behavior for your test data? How many iterations of smoothing do you get when you set this parameter to 0, and how many do you get when you set it to 1? (It might be helpful to post a condensed version of the stdout.). This parameter is not meant to be a boolean. If it is set to N > 0, then at most N smoothing iterations will be attempted before the next MCMC fit. However, if convergence is reached before N iterations, then the final MCMC fit is performed. If the parameter is set to 0, then no MCMC refits are performed. In both cases, the total number of allowed smoothing iterations is set by a separate parameter, `maximum-number-of-smoothing-iterations`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382781387:109,test,test,109,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4683#issuecomment-382781387,1,['test'],['test']
Testability,"@sooheelee I can't speak for CNV, but there isn't any general reason to prefer Picard interval lists in GATK. There was previously an issue with parsing interval queries that used contig names that contained "":"", but thats fixed now. The only time we prefer a Picard list is the theoretical case were you use a query interval against a sequence dictionary that contains contigs that make that query ambiguous (hg38 is not one of those). GATK will detect and reject such a query and suggest using a Picard interval file to disambiguate it. @magicDGS I'm not sure how/if writing tests against existing files in the repository will be useful. I want to restate that we don't want to take ports of these tools if they're marked `@Experimental `or `@Beta` because they haven't been validated, or don't have good test coverage. We need to find a way need to have valid tests so they'll be production ready.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371528161:577,test,tests,577,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371528161,3,['test'],"['test', 'tests']"
Testability,@sooheelee I fixed the javadoc and added a logger warning letting users know that they must input a .args file for their vcfs list. When I copy your .list file to a .args file everything works. I'm going to address the other stuff for the release as well.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3510#issuecomment-353631513:43,log,logger,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3510#issuecomment-353631513,1,['log'],['logger']
Testability,"@sooheelee I made requested changes, could you please look them over? ; @lbergelson Could you review the kebabbing and test classes changes? ; Thank you!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4003#issuecomment-354844807:119,test,test,119,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4003#issuecomment-354844807,1,['test'],['test']
Testability,"@sooheelee I think this is ready to go. Want to double-check?. I just made a couple doc fixes, but tests were passing and that shouldn't change.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3891#issuecomment-349067802:99,test,tests,99,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3891#issuecomment-349067802,1,['test'],['tests']
Testability,@sooheelee Looks good to me. You can merge once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3124#issuecomment-309868749:48,test,tests,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3124#issuecomment-309868749,1,['test'],['tests']
Testability,"@sooheelee We plan to have internal pilots running by then but haven't discussed releasing to the public in an beta or full release yet. We will have some unsupported WDL pipelines and light documentation available for external users, and we can provide benchmarking stats courtesy of our collaborators. It's probably safer to tag the tool as 'alpha' or 'beta' for the January release, though. We should be ready for full release sometime in the first half of next year, I expect.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3769#issuecomment-341538906:254,benchmark,benchmarking,254,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3769#issuecomment-341538906,1,['benchmark'],['benchmarking']
Testability,"@sooheelee You are right, the python environment is not activated automatically. However, I manually activated the environment and then run my test.pbs, I still got the error. ```; [shengq2@cqs1 singularity]$ singularity shell gatk.simg; Singularity: Invoking an interactive shell within container...; Singularity gatk.simg:/scratch/cqs/softwares/singularity> source activate gatk; (gatk) Singularity gatk.simg:/scratch/cqs/softwares/singularity> sh test.pbs. ...; 21:27:03.205 INFO DetermineGermlineContigPloidy - Initializing engine; 21:27:03.210 DEBUG ScriptExecutor - Executing:; 21:27:03.210 DEBUG ScriptExecutor - python; 21:27:03.210 DEBUG ScriptExecutor - -c; 21:27:03.210 DEBUG ScriptExecutor - import gcnvkernel. Traceback (most recent call last):; File ""/opt/miniconda/envs/gatk/lib/python3.6/site-packages/theano/configdefaults.py"", line 1738, in filter_compiledir; os.makedirs(path, 0o770) # read-write-execute for user and group; File ""/opt/miniconda/envs/gatk/lib/python3.6/os.py"", line 210, in makedirs; makedirs(head, mode, exist_ok); File ""/opt/miniconda/envs/gatk/lib/python3.6/os.py"", line 220, in makedirs; mkdir(name, mode); PermissionError: [Errno 13] Permission denied: '/root/.theano'; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433548346:143,test,test,143,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433548346,2,['test'],['test']
Testability,@sooheelee can you share that input file with Katie so she can add the het-non-ref case to the integration tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417312492:107,test,tests,107,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129#issuecomment-417312492,1,['test'],['tests']
Testability,"@sooheelee commented on [Fri Feb 17 2017](https://github.com/broadinstitute/gatk-protected/issues/911). A fix was implemented for HaplotypeCaller but not ported to GenotypeGVCFs nor CombineGVCFs nor CombineVariants. Although user is using v3.7-0-gcfedb67, my understanding is that these types of fixes will only be worked on in GATK4. - Previous discussion of HaplotypeCaller fix; https://github.com/broadinstitute/gsa-unstable/issues/855#issuecomment-278478318. ---; ### Test data submitted by user can be found at; /humgen/gsa-scr1/pub/incoming/bugrep_jgeibel_1.tar.gz. This includes chicken reference files. . ---; ### The command the user uses to generate the error is very long because we have many vcfs:; ```; Program Args: -T GenotypeGVCFs -R /usr/users/geibel/chicken/chickenrefgen/galGal5_Dec2015/galGal5.fa --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/i_WL_72631_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/i_WL_72632_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/i_WL_72633_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/i_WL_72634_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/i_WL_72635_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/i_WL_72636_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/i_WL_72637_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/i_WL_72638_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/i_WL_72639_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/i_WL_72640_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/i_WL_72641_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_sequence_nov2016/data/gVCF/i_WL_72642_chr26.raw.g.vcf --variant /usr/users/geibel/chicken/pool_seq",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2946:472,Test,Test,472,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2946,1,['Test'],['Test']
Testability,@sooheelee the tests seem to be failing because of the ReadDataProgramGroup.class?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4019#issuecomment-355987973:15,test,tests,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4019#issuecomment-355987973,1,['test'],['tests']
Testability,"@sooheelee, I was coming back to the port this week and I found run the tutorial that you provide me, and the port of `RealignerTargetCreator` (#3112) is providing the same result. Nevertheless, I cannot add the test data to the resources because the reference used is huge (3GB). The **7156_snippet.bam** is of a good size to include it, but it requires the whole reference because some pairs are mapped in other chromosomes. Can it be possible to get another example that it is limited to a couple of chromosomes, preferably 20 and 21 because a reference is already provided for that chromosomes? Thanks in advance!. In addition, I realized that the links to the data are broken in the tutorial; hopefully I downloaded it time ago, but it will be nice if they can be retrieved again in case I lose them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3104#issuecomment-325612165:212,test,test,212,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3104#issuecomment-325612165,1,['test'],['test']
Testability,"@spikebike will follow up with HPC specifics and logs). . #### Steps to reproduce; ```; Using GATK jar /share/apps/gatk-4.1.4.1/gatk-package-4.1.4.1-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx60g -Xms60g -jar /share/apps/gatk-4.1.4.1/gatk-package-4.1.4.1-local.jar GenomicsDBImport --genomicsdb-workspace-path data/interim/combined_database_bpres/0004 --batch-size 50 --reader-threads 6 --sample-name-map data/processed/sample_map --intervals data/processed/scattered_intervals/0004-scattered.intervals --tmp-dir /scratch/sdturner/genomicsdbimport/0004; ```. #### Expected behavior; My understanding is that it may be more efficient to use a small buffer and write the final database in full. . #### Actual behavior; Again my (limited) understanding is that the tool is writing output multiple times and throwing out all but the last write. Here is an example of a log for a 2.6 Mb region and 295 samples: ; ; ```; 07:24:39.198 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/share/apps/gatk-4.1.4.1/gatk-package-4.1.4.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; Feb 28, 2020 7:24:39 AM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 07:24:39.616 INFO GenomicsDBImport - ------------------------------------------------------------; 07:24:39.617 INFO GenomicsDBImport - The Genome Analysis Toolkit (GATK) v4.1.4.1; 07:24:39.617 INFO GenomicsDBImport - For support and documentation go to https://software.broadinstitute.org/gatk/; 07:24:39.617 INFO GenomicsDBImport - Executing as sdturner@c6-74 on Linux v4.15.0-65-generic amd64; 07:24:39.617 INFO GenomicsDBImport - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_20-b26; 07:24:39.617 INFO GenomicsDBImport - Start Date/Time: February 28, 2020 7:24",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6487:1288,log,log,1288,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6487,1,['log'],['log']
Testability,"@spikebike, just started looking at this issue again. We are benchmarking operations with NFS and will put out an optimized library soon. But, GenomicsDB does use filesystem locking to allow for simultaneous reads/writes. - Did you try `export TILEDB_DISABLE_FILE_LOCKING=1` ?; - Are you using the `--consolidate true` option with GenomicsDBImport explicitly? If yes, would it be possible to set that option to false which is also the default.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6487#issuecomment-616657603:61,benchmark,benchmarking,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6487#issuecomment-616657603,1,['benchmark'],['benchmarking']
Testability,"@t-ogasawara @frank-y-liu @gspowley @paolonarvaez @droazen @lbergelson please comment on the following proposal. The proposal is that we would spin off native PairHMM as a separate project/repo on github and host AVX code there and have alternative implementations extend that project/repo (by creating repos that depend on the AVX one). . In other words, now we have 1 repo, broadinstitute/gatk. After the proposed change we'll have 3 repos (all BSD licensed):; 1) broadinstitute/gatk; 2) broadinstitute/nativePairHMM-AVX; 2) broadinstitute/nativePairHMM-PPC. We will duplicate the native code (AVX and PPC will be separate copies of C++ files etc) to simplify the testing burden. The parties interested in working on a specific architecture will contribute code directly to the respective architecture-specific repo and gatk will take occasional updates of those repos. The gatk repo will depend on the other two. The PPC repo will depend on the AVX repo (and any other native repos will depend on the AVX one). The avx and ppc repos will have their own build systems and unit tests against the new interface. The AVX repo will expose something like the following Java API (to be worked out in detail). ```; //Used to copy references to byteArrays to JNI from reads; public final class JNIReadDataHolderClass {; public byte[] readBases = null;; public byte[] readQuals = null;; public byte[] insertionGOP = null;; public byte[] deletionGOP = null;; public byte[] overallGCP = null;; }. //Used to copy references to byteArrays to JNI from haplotypes; public final class JNIHaplotypeDataHolderClass {; public byte[] haplotypeBases = null;; }. public interface NativePairHMMKernel extends AutoCloseable { . /**; * Function to initialize the fields of JNIReadDataHolderClass and JNIHaplotypeDataHolderClass from JVM.; * C++ code gets FieldIDs for these classes once and re-uses these IDs for the remainder of the program. Field IDs do not; * change per JVM session; *; * @param readDataHolderClass class",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1748#issuecomment-214914864:666,test,testing,666,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1748#issuecomment-214914864,1,['test'],['testing']
Testability,"@t-ogasawara Thanks for pointing us to the OSU service -- that looks like just what we need! I'll see if I can obtain access for our project. If we can get access and set up automated continuous tests for PPC, then I think we can use a single repo for the two architectures as you propose. Without continuous testing, though, I'm not convinced that `if the files under common are changed, the changes should work on PPC if the tests don't fail on x86_64.` -- at least, we would not be comfortable making changes to common code without tests in place.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1748#issuecomment-215460975:195,test,tests,195,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1748#issuecomment-215460975,4,['test'],"['testing', 'tests']"
Testability,"@takeshi-yoshimura Native access to s3a::// seems useful. In order to include this though we need some tests to show that it works/ demonstrate how to use it. I'm a bit concerned that it's version 0.0.1 (although it looks like there is a [0.0.2](https://search.maven.org/artifact/net.fnothaft/jsr203-s3a) out, should that be the one incorporated instead?) and there doesn't seem to be any activity on the library's [github](https://github.com/fnothaft/jsr203-s3a) in the last two years-ish. I'm wondering how stable/supported it is. . Maybe @fnothaft can comment on it. What's the status of this library? Do you recommend incorporating it or is there a different solution you've moved on to?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6698#issuecomment-658863506:103,test,tests,103,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6698#issuecomment-658863506,1,['test'],['tests']
Testability,@takutosato Are tests failing because you still need to commit the wgs intervals file?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3228#issuecomment-313982114:16,test,tests,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3228#issuecomment-313982114,1,['test'],['tests']
Testability,@takutosato Here it is. The failure has nothing to do with this branch -- every branch is failing in the same way currently. I have tested and debugged this thoroughly and I am deliberately not writing unit tests for now because we're too busy with MC3 and the M2 paper. I intend to come back to these later.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4998:132,test,tested,132,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4998,2,['test'],"['tested', 'tests']"
Testability,@takutosato Here's another bug fix. After the big filtering refactor M2 filters will be unit-testable and these things will be easier to prevent. This fixes the last edge case mentioned by @byoo in the discussion of #5563.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5578:93,test,testable,93,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5578,1,['test'],['testable']
Testability,"@takutosato In addition to the bug fix, an integration test I should have written long ago.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6137:55,test,test,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6137,1,['test'],['test']
Testability,"@takutosato It's possible I will need to change the automatic test code to account for WDL 1.0, but the new WDL definitely works.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6144#issuecomment-529225231:62,test,test,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6144#issuecomment-529225231,1,['test'],['test']
Testability,"@takutosato Most of the files changed are just due to a change in method signature. Any significant block of ""new"" code is just your code moved to a different class. This PR does a few things:. * Move logic from the orientation bias annotation into the filter.; * Package F1R2 counts and learned orientation bias models in .tar.gz files to simplify command lines and accomodate multiple samples.; * Make all orientation bias tools fully multi-sample.; *Extract a backend for CollectF1R2Counts and use this backend inside Mutect2. I have tested the new pipeline on Firecloud. Do you have time to review this before the release tomorrow? If not, I can ask Lee.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5840:201,log,logic,201,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5840,2,"['log', 'test']","['logic', 'tested']"
Testability,"@takutosato Since this is an unsupported script that I have already tested to make sure results are the same, don't spend much time on it. Here's the summary:. * Put sub-sampling of hapmap (the most expensive part and a one-time cost because the samples are the same every time) into its own wdl.; * Put the rest of generating the truth into the same wdl as the sensitivity validation. This will make things simpler for the TAG team.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3379:68,test,tested,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3379,1,['test'],['tested']
Testability,@takutosato Taking advantage of WDL 1.0. @meganshand Your changes in #6108 are now tested in Terra.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6144:83,test,tested,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6144,1,['test'],['tested']
Testability,"@takutosato Tests appear to be failing, can you take a look at this?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5286#issuecomment-428215790:12,Test,Tests,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5286#issuecomment-428215790,1,['Test'],['Tests']
Testability,@takutosato The one test failure occurs because when there is low normal coverage germline risk might get triggered too often. I might need to adjust the default value but it won't affect the code otherwise.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4690#issuecomment-383357595:20,test,test,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4690#issuecomment-383357595,1,['test'],['test']
Testability,"@takutosato This corrects the math error you pointed out in your code review of the docs. While we're at it, it also outputs the error bars according to the formula given in the docs. I have tested it on an in silico contamination series and it improves results slightly.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3385:191,test,tested,191,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3385,1,['test'],['tested']
Testability,@takutosato Two quick edge cases and new unit tests. These were exposed when fixing other bugs.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6518:46,test,tests,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6518,1,['test'],['tests']
Testability,@takutosato Unfortunately we still have to maintain two wdls. Just a few weeks more. I tested this on FC.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5580:87,test,tested,87,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5580,1,['test'],['tested']
Testability,@takutosato You can merge once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4895#issuecomment-408650061:31,test,tests,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4895#issuecomment-408650061,1,['test'],['tests']
Testability,@takutosato sorry for the test fails. They are resolved now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5510#issuecomment-446687690:26,test,test,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5510#issuecomment-446687690,1,['test'],['test']
Testability,"@tedsharpe @cwhelan please review. - Adds MarkDuplicatesReadFilter (to replace MarkedOpticalDuplicateReadFilter). MarkedOpticalDuplicateReadFilter will be removed in a subsequent PR because the Filter tool currently uses it.; - Changed some types (short to int, float to double) in the DUST algorithm; - Adds HostAlignmentReadFilter for filtering sufficiently well-mapped host reads. The helper function is there to run the test on supplementary alignments. I chose not to expose this as a GATK filter because the definitions of coverage and identity used here could be different than what some users would expect. @lbergelson Addressed your comments from the other branch:; - Added docstring to AmbiguousBaseReadFilter argument; - Made filterOpticalOnly an argument; - Argument variables changed from uppercase to lowercase; - See above regarding the duplicates filters",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2665:424,test,test,424,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2665,1,['test'],['test']
Testability,@tedsharpe Can you suggest a good set of test cases for this tool that would properly exercise your BWA bindings? Thanks!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2523#issuecomment-288757516:41,test,test,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2523#issuecomment-288757516,1,['test'],['test']
Testability,@tedsharpe I'm still a bit worried about this. Does `registerClasses` get called multiple times in the life time of the spark executor? I had assumed it was invoked once at startup on a global Kryo instance and then that instance was serialized to all of the nodes. I don't actually know that's the case though. . Have you tested that this works if you have classes that have different registration requirements? Could you add a test that shows that it works to reregister during execution?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1775#issuecomment-215475784:323,test,tested,323,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1775#issuecomment-215475784,2,['test'],"['test', 'tested']"
Testability,"@tedsharpe I've addressed some of your comments here -- all the simpler stuff plus:. - I now only make distal targets for split reads with one supplementary alignment. We can make a ticket to handle more complex cases at some point.; - I renamed the concept of strand in the `EvidenceTargetLink` and related classes -- I'm now calling it `evidenceUpstreamOfBreakpoint`.; - I canonicalize `EvidenceTargetLinks` and only create them when the source is upstream of the target. This allowed me to get rid of the de-duplication code, so thanks for the suggestion. It seemed tricky to me to try to cluster these links during the initial pass over the reads while at the same time keeping track of coherent evidence. In my testing it doesn't seem like it is slow to run over the `EvidenceRDD` again to do this, but we could think about trying to change this sometime if we're looking for optimizations. . Want to take another look?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3469#issuecomment-328300806:716,test,testing,716,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3469#issuecomment-328300806,1,['test'],['testing']
Testability,@tedsharpe Looks good. Thanks for all the stylistic revisions and additional commenting! . My IDE caught some string comparisons using `==` which could definitely lead to confusing issues down the road. Once you've addressed the comments feel free to rebase and merge. Are you planning on adding integration tests for the tools at some point? They really should have some. I did notice a few edge cases in your code that didn't have any test coverage. You can probably catch those when you add integration tests though hopefully.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1435#issuecomment-182036825:308,test,tests,308,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1435#issuecomment-182036825,3,['test'],"['test', 'tests']"
Testability,@tedsharpe Looks like you have some test failures in `FuncotateSegmentsIntegrationTest` (see latest gatk-bot comment above for the test logs). Could you resolve these before I re-review?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7142#issuecomment-880990221:36,test,test,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7142#issuecomment-880990221,3,"['log', 'test']","['logs', 'test']"
Testability,@tedsharpe This sounds related to the test hangs you were telling me about.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2484#issuecomment-287822865:38,test,test,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2484#issuecomment-287822865,1,['test'],['test']
Testability,@tedsharpe and I discussed in person. This approach will cause problems for tests that rely on custom registrators. Back to you Ted until it grows additional layers of indirection.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1775#issuecomment-215145245:76,test,tests,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1775#issuecomment-215145245,1,['test'],['tests']
Testability,"@tedsharpe, I have changed the implementation to use a lazy non-cached recreation of the read mapping information. . I have not added the additional mapping information in your branch like the MQ value. I would do that in a separate commit. . Please take a look and perhaps run your benchmark.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3133#issuecomment-311404369:283,benchmark,benchmark,283,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3133#issuecomment-311404369,1,['benchmark'],['benchmark']
Testability,"@tedsharpe, please take another look. I have changed a few things apart from your comments... Now I'm addressing another separated yet related issue (getName returns now the read name and nothing else), and get the tests to pass (hopefully).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3133#issuecomment-309907784:215,test,tests,215,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3133#issuecomment-309907784,1,['test'],['tests']
Testability,"@teepean Ok, great - thx for testing that out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5805#issuecomment-474020523:29,test,testing,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5805#issuecomment-474020523,1,['test'],['testing']
Testability,"@teepean We generally don't test on Windows, though we do try to keep things working there if possible. Is there any chance you could try running [this branch](https://github.com/broadinstitute/gatk/tree/cn_temp_dr_windows) in the same environment that previously failed, and see if it solves the problem ? Thx ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5805#issuecomment-473966580:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5805#issuecomment-473966580,1,['test'],['test']
Testability,@tfenne @gubrins @pkaleta @aushev We've opened a PR to improve these log messages here: https://github.com/broadinstitute/gatk/pull/6891,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5912#issuecomment-709475596:69,log,log,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5912#issuecomment-709475596,1,['log'],['log']
Testability,"@tfenne Did you do any testing with compression level 2 + the Intel Deflater? @jsotobroad 's latest results suggest that it may offer the best speed/size tradeoff, with the current version of the GKL at least.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3413#issuecomment-323812606:23,test,testing,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3413#issuecomment-323812606,1,['test'],['testing']
Testability,"@tfenne I have a PR that should clean this up. If there's anything else you'd like to see specifically in the tests, let me know.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6029#issuecomment-518280582:110,test,tests,110,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6029#issuecomment-518280582,1,['test'],['tests']
Testability,@tfenne I would prefer this be limited to single-sample until all the multi-sample cases are tested.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5772#issuecomment-472918993:93,test,tested,93,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5772#issuecomment-472918993,1,['test'],['tested']
Testability,"@tfenne We've had a couple of instances of non-determinism in the HaplotypeCaller in the past (https://github.com/broadinstitute/gatk/pull/6195, https://github.com/broadinstitute/gatk/pull/6104), but these resulted only in *very* minor differences in the output, and were patched in version 4.1.4.0. ""A hardware issue that intermittently affects only AVX operations"" is theoretically possible I suppose, but seems unlikely. Could you try re-running a bunch of times with DEBUG logging verbosity (`--verbosity DEBUG`), as well as the diagnostic arguments `--bam-output`, `--assembly-region-out`, and `--debug-assembly-region-state` (if that last argument exists in 4.1.4.1, not sure about that). If you get lucky and replicate the issue with these debug arguments on, the extra logging and output files would help us to attempt to diagnose the issue. @jamesemery Could you provide your thoughts on this one? What could intermittently cause the allele likelihoods to be null in the annotation code?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6889#issuecomment-709376374:477,log,logging,477,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6889#issuecomment-709376374,2,['log'],['logging']
Testability,"@thw17 I have a patch for this issue -- I am still testing it internally, but it should make it into the next GATK release.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4312#issuecomment-365650170:51,test,testing,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4312#issuecomment-365650170,1,['test'],['testing']
Testability,"@timmykuo I assume you're referring to the `createSequenceDictionaryFromFeatureIndex` function, which only gets called when a feature file that contains no embedded sequence dictionary is used. It unconditionally issues a warning indicating that the dictionary is missing, and that the code will try to fall back and extract one from the file's associated index. So it looks correct to me. If I've misinterpreted the ticket, please include the actual command that you used, along with the actual warning that is logged, and I'll take another look.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5692#issuecomment-465564813:512,log,logged,512,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5692#issuecomment-465564813,1,['log'],['logged']
Testability,"@tlangs If we provided an instrumented version of the `HaplotypeCaller` that dumped information about the reads in each shard, could you run it and provide us with the log the next time you get a mismatching shard? This would help us diagnose what's going on here.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6105#issuecomment-533585827:168,log,log,168,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6105#issuecomment-533585827,1,['log'],['log']
Testability,"@tmelman I have added tests, so this is ready for another round of review.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8198#issuecomment-1430251794:22,test,tests,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8198#issuecomment-1430251794,1,['test'],['tests']
Testability,"@tomwhite , let me know when this is ready to review. Do you want to combine the shuffles into one shuffle in this test or another?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/889#issuecomment-140587616:115,test,test,115,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/889#issuecomment-140587616,1,['test'],['test']
Testability,"@tomwhite , since this is becoming used by others, I went back and checked the regex, turns out that it is no catching all the contigs in the headers, so here is the updated one:; ```; (chr([0-9]{1,2}|X|Y|M|Un|EBV)(_[A-Z]+[0-9]{6,8}v[0-9](_random|_alt|_decoy)?)?|HLA-[A-Z]{1,3}([0-9])?\*[0-9]{2,2}:[0-9]{2,3}(N|Q|(:[0-9]{2,2}){0,}(N|L|S|Q)?)); ```; There are 3366 different contigs in the bam/vcf files I ""tested"" this with, and this catches all of them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3360#issuecomment-323534663:406,test,tested,406,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3360#issuecomment-323534663,1,['test'],['tested']
Testability,"@tomwhite - the JNI libraries are now Apache2 licensed (and using Apache2 BWA) and so we are unblocked in using them (courtesy of the author, @lindenb https://github.com/lindenb/jbwa) . Can you add them to this PR so I can test it easily? Thanks",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1750#issuecomment-214361399:223,test,test,223,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1750#issuecomment-214361399,1,['test'],['test']
Testability,@tomwhite . I found this 1000 genomes cram that also generates the error. The test cram above would take a lot of paper work to make available. ```; wget ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000_genomes_project/data/GBR/HG04302/alignment/HG04302.alt_bwamem_GRCh38DH.20150718.GBR.low_coverage.cram; wget ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000_genomes_project/data/GBR/HG04302/alignment/HG04302.alt_bwamem_GRCh38DH.20150718.GBR.low_coverage.cram.crai. ```. Here is the error with this cram.... ```; gatk CountReadsSpark --input /project/casa/gcad/test/HG04302.alt_bwamem_GRCh38DH.20150718.GBR.low_coverage.cram --reference file:///restricted/projectnb/casa/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa -- --spark-runner SPARK --spark-master yarn; Using GATK jar /share/pkg/gatk/4.0.12.0/install/bin/gatk-package-4.0.12.0-spark.jar; Running:; /share/pkg/spark/2.3.0/install/bin/spark-submit --master yarn --conf spark.kryoserializer.buffer.max=512m --conf spark.driver.maxResultSize=0 --conf spark.driver.userClassPathFirst=false --conf spark.io.compression.codec=lzf --conf spark.yarn.executor.memoryOverhead=600 --conf spark.driver.extraJavaOptions=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 --conf spark.executor.extraJavaOptions=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 /share/pkg/gatk/4.0.12.0/install/bin/gatk-package-4.0.12.0-spark.jar CountReadsSpark --input /project/casa/gcad/test/HG04302.alt_bwamem_GRCh38DH.20150718.GBR.low_coverage.cram --reference file:///restricted/projectnb/casa/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --spark-master yarn; 2019-01-07 11:33:18 WARN SparkConf:66 - The configuration key 'spark.yarn.executor,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-451999969:78,test,test,78,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-451999969,2,['test'],['test']
Testability,"@tomwhite . I tried rerunning the job using a bgzip reference to work around the problem. However, the same error is being generated (htsjdk.samtools.cram.CRAMException: Reference sequence MD5 mismatch for slice). . ```; gatk CountReadsSpark --input /project/casa/gcad/test/HG04302.alt_bwamem_GRCh38DH.20150718.GBR.low_coverage.cram --reference file:///restricted/projectnb/casa/wgs.hg38/pipelines/hc/cram.test/GRCh38_full_analysis_set_plus_decoy_hla.fa.gz -- --spark-runner SPARK --spark-master yarn. Using GATK jar /share/pkg/gatk/4.0.12.0/install/bin/gatk-package-4.0.12.0-spark.jar; Running:; /share/pkg/spark/2.3.0/install/bin/spark-submit --master yarn --conf spark.kryoserializer.buffer.max=512m --conf spark.driver.maxResultSize=0 --conf spark.driver.userClassPathFirst=false --conf spark.io.compression.codec=lzf --conf spark.yarn.executor.memoryOverhead=600 --conf spark.driver.extraJavaOptions=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 --conf spark.executor.extraJavaOptions=-DGATK_STACKTRACE_ON_USER_EXCEPTION=true -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=false -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 /share/pkg/gatk/4.0.12.0/install/bin/gatk-package-4.0.12.0-spark.jar CountReadsSpark --input /project/casa/gcad/test/HG04302.alt_bwamem_GRCh38DH.20150718.GBR.low_coverage.cram --reference file:///restricted/projectnb/casa/wgs.hg38/pipelines/hc/cram.test/GRCh38_full_analysis_set_plus_decoy_hla.fa.gz --spark-master yarn; 2019-01-09 13:35:04 WARN SparkConf:66 - The configuration key 'spark.yarn.executor.memoryOverhead' has been deprecated as of Spark 2.3 and may be removed in the future. Please use the new key 'spark.executor.memoryOverhead' instead.; 2019-01-09 13:35:05 WARN NativeCodeLoader:62 - Unable to load native-hadoop library for your platform... usi",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-452814616:269,test,test,269,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5547#issuecomment-452814616,2,['test'],['test']
Testability,"@tomwhite . I'm following the instructions but I get an error when I try to use the spark runner I built. ```; ➜ hellbender git:(master) ✗ spark-submit \; build/libs/hellbender-all-*-spark.jar CountReadsDataflow \; --input ./src/test/resources/org/broadinstitute/hellbender/tools/flag_stat.bam \; --output countreads \; --runner SPARK; [July 14, 2015 1:14:50 PM EDT] org.broadinstitute.hellbender.tools.dataflow.pipelines.CountReadsDataflow --output countreads --input ./src/test/resources/org/broadinstitute/hellbender/tools/flag_stat.bam --runner SPARK --interval_set_rule UNION --interval_padding 0 --client_secret client_secret.json --numWorkers 0 --help false --version false --VERBOSITY INFO --QUIET false; [July 14, 2015 1:14:50 PM EDT] Executing as louisb@wm1b0-8ab on Mac OS X 10.9.5 x86_64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_45-b14; Version: Version:GATK.4.alpha-413-g741d007-SNAPSHOT JdkDeflater; 13:14:50.576 [main] INFO org.broadinstitute.hellbender.tools.dataflow.pipelines.CountReadsDataflow - Initializing engine; 13:14:50.577 [main] INFO org.broadinstitute.hellbender.tools.dataflow.pipelines.CountReadsDataflow - Done initializing engine; 13:14:50.971 [main] INFO org.broadinstitute.hellbender.tools.dataflow.pipelines.CountReadsDataflow - Loading client_secret.json; Jul 14, 2015 1:14:51 PM com.google.cloud.genomics.dataflow.utils.DataflowWorkarounds registerGenomicsCoders; INFO: Registering coders for genomics classes; 15/07/14 13:14:51 WARN reflections.Reflections: could not create Vfs.Dir from url. ignoring the exception and continuing; org.reflections.ReflectionsException: could not create Vfs.Dir from url, no matching UrlType was found [file:/Library/KeyAccess/KeyAccess.app/Contents/SharedFrameworks/KeyAccess.framework/KeyAccess]; either use fromURL(final URL url, final List<UrlType> urlTypes) or use the static setDefaultURLTypes(final List<UrlType> urlTypes) or addDefaultURLTypes(UrlType urlType) with your specialized UrlType.; at org.reflections.vfs.Vfs.fr",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/639#issuecomment-121313713:229,test,test,229,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/639#issuecomment-121313713,2,['test'],['test']
Testability,@tomwhite :+1: It ran fine with the released 5.1 version on the default (latest) version of the dataproc cluster. ```; ./gatk-launch ExampleNioCountReads -P gs://${TEST_BUCKET}/hellbender-test-inputs/CEUTrio.HiSeq.WGS.b37.ch20.1m-2m.NA12878.bam -- --sparkRunner GCS --cluster jp-spark; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2220#issuecomment-258915838:188,test,test-inputs,188,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2220#issuecomment-258915838,1,['test'],['test-inputs']
Testability,"@tomwhite @davidadamsphd could you take a look and see if it's in the right direction?. Some notes:; - This is only impl'd for pure Spark at the moment. Gonna work on adding support for dataflow as well.; - It was easier to remove the `final` modifier on the `GATKRead` impl rather than reimplement all the methods and simply pass them through. Let me know if that's ok.; - Should we target Parquet IO only in the context of writing to Hadoop? Or should I make sure it works anytime a local/single bam file is being written?; - Definitely need to add more tests. One thing that's annoying is that the cleanup for `readsSinkParquetTest` doesn't seem to happen.; - Registered `AlignmentRecord` with the `GATKRegistrator`, but there aren't any tests that exercise it. There's a touch of scala-to-java ugliness there, so let me know if we should just reimplement the `AvroSerializer` class.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/888#issuecomment-139423282:556,test,tests,556,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/888#issuecomment-139423282,2,['test'],['tests']
Testability,"@tomwhite @droazen This fixes the problem I was seeing, but it's insanely slow for some reason. A 30gb file on a heavy duty cluster was taking between 30-50 minutes depending on how I sharded it. Most of that time is spent on the merging step where the master concatenates the chunks. . I think the refactoring of the writing that I've done isn't a bad thing to have. I added some extra log statements that it much easier to understand what's going on when it's slow.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2333:387,log,log,387,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2333,1,['log'],['log']
Testability,@tomwhite @jamesemery Any insight as to why these `ExampleAssemblyRegionWalkerSpark` tests might be failing ?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5511#issuecomment-448261095:85,test,tests,85,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5511#issuecomment-448261095,1,['test'],['tests']
Testability,"@tomwhite After spending some time searching for this feature for my testing purposes, it would be helpful to expose the NIO adapter toggle directly from the command line in this branch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-418494235:69,test,testing,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5138#issuecomment-418494235,1,['test'],['testing']
Testability,"@tomwhite Apologies for not getting around to this one before leaving, but rather than keep it blocked while I'm away I'm re-assigning to @cmnbroad, who I'm sure can give you a speedy review. ; My main comment from glancing at the code is that the new `PushPullTransformer` and `PushToPullIterator` classes lack direct unit tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5311#issuecomment-439260444:324,test,tests,324,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5311#issuecomment-439260444,1,['test'],['tests']
Testability,@tomwhite Back to you. Feel free to squash and merge once it's no longer outputting the api key into the logs.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/862#issuecomment-138978116:105,log,logs,105,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/862#issuecomment-138978116,1,['log'],['logs']
Testability,@tomwhite Could you rebase this branch and merge once tests pass?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/980#issuecomment-157483883:54,test,tests,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/980#issuecomment-157483883,1,['test'],['tests']
Testability,@tomwhite Could you update the part of the readme that lists the test type options to include the new one? It's near the top of the test section. Aren't you on vacation?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3377#issuecomment-318705714:65,test,test,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3377#issuecomment-318705714,2,['test'],['test']
Testability,@tomwhite How's the test coverage in Hadoop-BAM these days?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1440#issuecomment-288499952:20,test,test,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1440#issuecomment-288499952,1,['test'],['test']
Testability,@tomwhite I added a unit test that checks if we can read from both `file://` and `hdfs://`. It failed before your change but passes now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1433#issuecomment-171809455:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1433#issuecomment-171809455,1,['test'],['test']
Testability,"@tomwhite I did the following to get it to work; 1. installed jbwa to `lib` like this (I think that's better than `~`). ```; mkdir lib; cd lib/; mkdir jbwa; git clone https://github.com/lindenb/jbwa #this uses the apache2 version of bwa so it's all good; cd jbwa/; make; ```. and changed build.gradle accordingly; 1. add `""-Djava.library.path=lib/jbwa/src/main/native""` to `applicationDefaultJvmArgs` to find the library at runtime (not just in tests)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1750#issuecomment-219527014:445,test,tests,445,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1750#issuecomment-219527014,1,['test'],['tests']
Testability,"@tomwhite I haven't tested them because I am using them for looking at some structural variant VCF files generated from BAM files aligned to GRCh38. The regex is from eyeballing those 3000 lines of headers :tired_face:. If you would like such tests, I can provide one quickly, just tell me the preferred format, and preferably where to in htsjdk.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3360#issuecomment-322907595:20,test,tested,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3360#issuecomment-322907595,2,['test'],"['tested', 'tests']"
Testability,@tomwhite I think this might have been from the first run of the jenkins tests since the disq change over - not sure though. You should have access to the `broad-gatk-test-jenkins-robust` bucket now if you need it.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5545#issuecomment-449440744:73,test,tests,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5545#issuecomment-449440744,2,['test'],"['test-jenkins-robust', 'tests']"
Testability,@tomwhite I'm curious if the reason this is working for you but not for me is because you're testing with a file that fits into a single partition.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2306#issuecomment-267184794:93,test,testing,93,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2306#issuecomment-267184794,1,['test'],['testing']
Testability,"@tomwhite I'm merging this in. It looks good. I haven't tested all the hadoop instructions myself yet, but if we hit problems we'll update when we find them. Thanks for these instructions.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/639#issuecomment-125370709:56,test,tested,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/639#issuecomment-125370709,1,['test'],['tested']
Testability,@tomwhite I've uploaded that bam to gs://hellbender/test/resources/issue2113/HCC1143.bam. Can you test your fix against it in the cloud?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2113#issuecomment-291262482:52,test,test,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2113#issuecomment-291262482,2,['test'],['test']
Testability,"@tomwhite If you could put together a quick PR against GATK4 with a temporary copy of the bam merger that uses the old code path, I'd be happy to test it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2287#issuecomment-265817061:146,test,test,146,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2287#issuecomment-265817061,1,['test'],['test']
Testability,"@tomwhite Ignore my previous message, sorry -- I see that you commented above that you tested https://github.com/broadinstitute/gatk/pull/4314 and it had no effect. I've opened https://github.com/broadinstitute/gatk/pull/4428 to revert the ADAM upgrade for now until we understand the underlying cause of the performance regression. @fnothaft It seems to me that the serializer registrations in ADAM could in theory affect the GATK, since we both register serializers for core classes in htsjdk. It seems worth investigating as a possibility, at least, as it's the only candidate mentioned so far that seems to have the potential to cause such a massive performance difference.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4376#issuecomment-367069808:87,test,tested,87,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4376#issuecomment-367069808,1,['test'],['tested']
Testability,"@tomwhite Is this still an issue? If not, can we re-enable the disabled test in `DataprocIntegrationTest` and close this?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3840#issuecomment-460406606:72,test,test,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3840#issuecomment-460406606,1,['test'],['test']
Testability,@tomwhite My tests were running HaplotypeCallerSpark on an exome on gcs. It took ~40 minutes with and without the changes.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4376#issuecomment-364187885:13,test,tests,13,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4376#issuecomment-364187885,1,['test'],['tests']
Testability,"@tomwhite On the GATK side, I think the steps are:; 1. Rev our Hadoop-BAM dependency once https://github.com/HadoopGenomics/Hadoop-BAM/pull/49 is in.; 2. Take one of our existing test inputs and create a copy of it sorted by query name using the hellbender tool `SortSam`. I think a good file to use would be `src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.bam`, as that file hasn't had either MD or BQSR run on it, and it's the primary input in the `ReadsPipelineSparkIntegrationTest`.; 3. Before making any actual changes to MarkDuplicatesSpark, write a new integration test proving that MarkDuplicatesSpark can read in the queryname-sorted bam above, and produces the same result as when run on the coordinate-sorted version of the bam. The output in both cases when running with `--shardedOutput false` should be a coordinate-sorted bam.; 4. Now the potentially tricky part: in `MarkDuplicatesSpark`, we want to detect queryname-sorted reads using the `SAMFileHeader` SO attribute (`SAMFileHeader.getSortOrder()`), and if we have them, avoid performing the first `groupByKey()` operation in `MarkDuplicatesSparkUtils.transformReads()`, instead relying on the natural ordering of the reads to create the `PairedEnds` objects.; 5. Make sure that the test you wrote in step 3 doesn't break after doing step 4 :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1411#issuecomment-170043162:179,test,test,179,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1411#issuecomment-170043162,4,['test'],['test']
Testability,"@tomwhite Review complete. Looks good, very exciting to be getting it running on spark too. I like the approach of toggling spark/google at the command line level. It makes it easy to separate out the testing of each. I ran everything on spark locally without trouble so it works at least for the existing tests. . Could you rebase this onto master as well, there's a recent pull request that adds an `isRemote()` method to `DataflowCommandlineProgram` which needs to be updated to take into account the spark runner. . Let me know what you think about moving the system property check into the runner default. I think it's probably a cleaner way to hook in, but maybe I haven't thought through every case.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/546#issuecomment-109348174:201,test,testing,201,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/546#issuecomment-109348174,2,['test'],"['testing', 'tests']"
Testability,"@tomwhite Review complete. Thanks for this! . I'm at a bit of a loss for how to test the hadoop bam reading. I think we should have a unit test for it, but I don't know the right way to do it. Is there an easy way to spin up something that serves local files as hdfs? Ideally we could have an hdfs layer running on travis that we could query files from in order to test. . At a minimum we need unit tests testing that we can actually read an hdfs file. Even if they have to be stuck in their own hdfs group and excluded from the travis set, we need some thing that can be run to verify that it works.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/553#issuecomment-111200909:80,test,test,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/553#issuecomment-111200909,5,['test'],"['test', 'testing', 'tests']"
Testability,@tomwhite So I'm running on the latest gatk which uses hadoop-bam 7.6.0 (which i think includes those fixes) and I still get this error. I'm running on a dataproc cluster and my exact commandline is:. ```; ./gatk-launch FlagStatSpark -I file:///home/akiezun/gatk/src/test/resources/org/broadinstitute/hellbender/tools/valid.bam -- --sparkRunner SPARK --sparkMaster yarn-client; ```. the file `/home/akiezun/gatk/src/test/resources/org/broadinstitute/hellbender/tools/valid.bam` does exit locally on the master node. Can you reproduce it too? What do you get?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1417#issuecomment-235951615:267,test,test,267,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1417#issuecomment-235951615,2,['test'],['test']
Testability,@tomwhite Sorry! I missed your message. This reproduces reliably on our cluster if you run the command I posted above on our current master branch. ```; ./gatk-launch MarkDuplicatesSpark -I file:///home/unix/louisb/flag_stat.bam -O file:///home/unix/louisb/testoutput.bam -- --sparkRunner SPARK --sparkMaster yarn-client; ```. You'll have to adapt it to your own file system or log into ours. Folders under /home/unix/ are visible to every node in our cluster.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1451#issuecomment-188483706:257,test,testoutput,257,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1451#issuecomment-188483706,2,"['log', 'test']","['log', 'testoutput']"
Testability,@tomwhite That test failure is an issue with our R installation. It's fixed in master.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3790#issuecomment-341717663:15,test,test,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3790#issuecomment-341717663,1,['test'],['test']
Testability,@tomwhite The point of the singleton pattern is for testing: tests can substitute their own instance instead of the default one. They put in a mock that doesn't need to call out to the internet - this way it's both faster and self-contained (as unit tests are supposed to be).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/804#issuecomment-130773530:52,test,testing,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/804#issuecomment-130773530,4,"['mock', 'test']","['mock', 'testing', 'tests']"
Testability,"@tomwhite There are situations where this approach doesn't work yet. (not to say that it couldn't be fixed in order to work...). There may be other issues, but heres one:. For example, changing the position of a headerless read causes serialization crashes. ```; @Test; public void testChangingContigsOnHeaderlessGATKRead(){; final SparkConf conf = new SparkConf().set(""spark.kryo.registrator"",; ""org.broadinstitute.hellbender.engine.spark.SAMRecordToGATKReadAdapterSerializerUnitTest$TestGATKRegistrator"");; final KryoSerializer kryoSerializer = new KryoSerializer(conf);; final SerializerInstance sparkSerializer = kryoSerializer.newInstance();; final GATKRead read = ArtificialReadUtils.createSamBackedRead(""read1"", ""1"", 100, 50);; final SAMRecord samRecord = read.convertToSAMRecord(null);; final SAMRecordToGATKReadAdapter headerlessRead = new SAMRecordToGATKReadAdapter(samRecord);; check(sparkSerializer, headerlessRead);. headerlessRead.setPosition(""2"", 1);; check(sparkSerializer, headerlessRead);; }; ```. results in . ```; java.lang.NullPointerException; at htsjdk.samtools.SAMRecord.getReferenceIndex(SAMRecord.java:343); at htsjdk.samtools.BAMRecordCodec.encode(BAMRecordCodec.java:112); at org.broadinstitute.hellbender.engine.spark.SAMRecordToGATKReadAdapterSerializer.write(SAMRecordToGATKReadAdapterSerializer.java:21); at org.broadinstitute.hellbender.engine.spark.SAMRecordToGATKReadAdapterSerializer.write(SAMRecordToGATKReadAdapterSerializer.java:10); at com.esotericsoftware.kryo.Kryo.writeClassAndObject(Kryo.java:568); at org.apache.spark.serializer.KryoSerializerInstance.serialize(KryoSerializer.scala:250); at org.broadinstitute.hellbender.engine.spark.SAMRecordToGATKReadAdapterSerializerUnitTest.check(SAMRecordToGATKReadAdapterSerializerUnitTest.java:78); at org.broadinstitute.hellbender.engine.spark.SAMRecordToGATKReadAdapterSerializerUnitTest.testChangingContigsOnHeaderlessGATKRead(SAMRecordToGATKReadAdapterSerializerUnitTest.java:72); at sun.reflect.NativeMethodAc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1127#issuecomment-157441550:264,Test,Test,264,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1127#issuecomment-157441550,3,"['Test', 'test']","['Test', 'TestGATKRegistrator', 'testChangingContigsOnHeaderlessGATKRead']"
Testability,@tomwhite Very glad to hear that the cause of the regression is the same for both BQSR and HC! Could you test whether https://github.com/broadinstitute/gatk/pull/4314 resolves the issue as well (as opposed to an actual revert of https://github.com/broadinstitute/gatk/commit/8a366c7ba570c61338f7109b86c3284b80d5cf47),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4376#issuecomment-365992568:105,test,test,105,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4376#issuecomment-365992568,1,['test'],['test']
Testability,@tomwhite Was the fix for this ever merged and tested? Assigning to you to resolve.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2113#issuecomment-288531507:47,test,tested,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2113#issuecomment-288531507,1,['test'],['tested']
Testability,"@tomwhite What if we created a special, shaded version of Hadoop just for the MiniCluster, and used it as a test dependency in GATK? Or perhaps we could start the MiniCluster using the command line client instead of directly from GATK? Could either of those approaches work? . Tagging @lbergelson as well for an opinion.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5928#issuecomment-494410699:108,test,test,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5928#issuecomment-494410699,1,['test'],['test']
Testability,"@tomwhite When you get a chance, could you please test this branch to check whether the performance regression you reported earlier is resolved?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4584#issuecomment-376283397:50,test,test,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4584#issuecomment-376283397,1,['test'],['test']
Testability,"@tomwhite You should switch to using this vcf in your bqsr tests, as well (assuming you stick with that CEUTrio.HiSeq.WGS.b37.ch1.1m-65m.NA12878.bam for reads)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/927#issuecomment-143244969:59,test,tests,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/927#issuecomment-143244969,1,['test'],['tests']
Testability,@tomwhite a test is failing. ```; Gradle suite > Gradle test > org.broadinstitute.hellbender.utils.gcs.BucketUtilsTest.testCopyAndDeleteHDFS FAILED; java.lang.ClassCastException: org.apache.hadoop.fs.RawLocalFileSystem cannot be cast to org.apache.hadoop.fs.LocalFileSystem; at org.apache.hadoop.fs.FileSystem.getLocal(FileSystem.java:342); at org.apache.hadoop.hdfs.server.datanode.DataNode.makeInstance(DataNode.java:2362); at org.apache.hadoop.hdfs.server.datanode.DataNode.instantiateDataNode(DataNode.java:2260); at org.apache.hadoop.hdfs.MiniDFSCluster.startDataNodes(MiniDFSCluster.java:1449); at org.apache.hadoop.hdfs.MiniDFSCluster.initMiniDFSCluster(MiniDFSCluster.java:832); at org.apache.hadoop.hdfs.MiniDFSCluster.<init>(MiniDFSCluster.java:471); at org.apache.hadoop.hdfs.MiniDFSCluster$Builder.build(MiniDFSCluster.java:430); at org.broadinstitute.hellbender.utils.gcs.BucketUtilsTest.testCopyAndDeleteHDFS(BucketUtilsTest.java:80). ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1344#issuecomment-163955059:12,test,test,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1344#issuecomment-163955059,4,['test'],"['test', 'testCopyAndDeleteHDFS']"
Testability,"@tomwhite and @lbergelson ; I've been testing the 4.0.0.0 release with the bgzip output fix for HaplotypeCallerSpark (#3725). Thanks again for the work on that bug. I'm now hitting a similar issue with empty output VCFs. It will correctly output bgzipped VCFs when there are variants in the region, but if we call in a region with no variants we end up with plain text output. Here is a self contained test case that demonstrates the issue:. https://s3.amazonaws.com/chapmanb/testcases/gatk/gatk4_haplotypecallerspark_plain.tar.gz. The first example command line produces plain text because it includes no variants, while the second is correct:; ```; gatk-launch --java-options '-Xms1g -Xmx2g' HaplotypeCallerSpark --reference hg19.2bit -I Test1-sort-recal.bam -L chrM:1-70 --spark-master local[1] --output plain_text.vcf.gz; gatk-launch --java-options '-Xms1g -Xmx2g' HaplotypeCallerSpark --reference hg19.2bit -I Test1-sort-recal.bam -L chrM:1-75 --spark-master local[1] --output correct_gzip.vcf.gz; ```; Thank you again for all the help.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4197:38,test,testing,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4197,3,['test'],"['test', 'testcases', 'testing']"
Testability,"@tomwhite can you review? We have CHD 5.7 running now and 1.6 is available on the cloud so no reason to not upgrade AFAIK. For some reason, the lists returned from `.collect` are no longer mutable so i have to make copies in 1 test",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1834:227,test,test,227,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1834,1,['test'],['test']
Testability,"@tomwhite found performance issues with large (eg., exome target) interval lists on Spark in the course of our quarterly Spark evaluation. Specifically this test case was very slow:. ```; ./gatk-launch CountReadsSpark ; -I hdfs:///WGS-G94982-NA12878.bam ; -L Broad.human.exome.b37.interval_list; -- --sparkRunner GCS --cluster YOUR_CLUSTER --num-executors NUM_EXECUTORS --executor-cores 4 --executor-memory 16g; ```. Where the bam was `gs://hellbender/q4_spark_eval/WGS-G94982-NA12878.bam` pre-staged into HDFS and the interval list was a localized copy of `gs://hellbender/q4_spark_eval/Broad.human.exome.b37.interval_list`. A proposed fix is https://github.com/HadoopGenomics/Hadoop-BAM/pull/121",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2313:157,test,test,157,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2313,1,['test'],['test']
Testability,"@tomwhite it's awesome. One test I did went from 1.10 minutes to 0.11 minutes (using 47726 intervals)! Thanks, let's put it in hadoop-bam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1532#issuecomment-210015043:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1532#issuecomment-210015043,1,['test'],['test']
Testability,"@tomwhite just added support. We should try `PrintReadsSpark` or `SortBamSpark` on a large CRAM file to see if we have any reading or writing problem, and add cram tests for other spark tools if it looks good.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/966#issuecomment-158400239:164,test,tests,164,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/966#issuecomment-158400239,1,['test'],['tests']
Testability,@tomwhite wrote code to read in the reference from hdfs. We need to move that logic into htsjdk (to avoid the two getting out of sync). Assigning to @droazen for now.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/831:78,log,logic,78,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/831,1,['log'],['logic']
Testability,@tomwhite 👍 The fix and test look good to me.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3539#issuecomment-326609538:24,test,test,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3539#issuecomment-326609538,1,['test'],['test']
Testability,"@tomwhite, @jean-philippe-martin, and/or @lbergelson please review. @tomwhite If you could try running with this branch on a Spark cluster and let me know if anything appears broken to you, that would be helpful! The few Spark tools I tested ran fine, but my testing was very basic.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5928#issuecomment-490491155:235,test,tested,235,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5928#issuecomment-490491155,2,['test'],"['tested', 'testing']"
Testability,"@tomwhite, any luck fixing these tests?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/851#issuecomment-145904989:33,test,tests,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/851#issuecomment-145904989,1,['test'],['tests']
Testability,"@tomwhite, the local BaseRecalibratorDataflow needs the API key because, even though it's running locally, it fetches reference bases from the Google Genomics API. . That is also why I put it in the ""cloud"" group: my understanding is that this is the group of tests that will fail if you don't have valid credentials for the Google cloud.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/862#issuecomment-136757937:260,test,tests,260,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/862#issuecomment-136757937,1,['test'],['tests']
Testability,@tovanadler Review complete. Lets only disable the tests for dataflow. Thanks for including the test failure reason in there.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/798#issuecomment-130385405:51,test,tests,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/798#issuecomment-130385405,2,['test'],"['test', 'tests']"
Testability,"@tovanadler Review complete. Looks good, just a few comments. I have a few comments about the organization of duplicate marking. I think you've inherited some very old style code that could maybe use some refactoring. I think we do need to also include the histogram and the metrics headers. Those could be done in a separate ticket though. I'm a bit worried that the test is indeterministic. Unless I overlooked something which is likely, it seems like it might depend on the ordering of a PCollection which is undefined. This isn't problematic for the actual metric file, but might be for the tests. What do you think about reorganizing to output an annotation on only 1 of the ""best"" reads with the count of all optical duplicates in it's group. That would simplify the code, and since we only care about the global count it wouldn't change the information content.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/749#issuecomment-126762958:368,test,test,368,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/749#issuecomment-126762958,2,['test'],"['test', 'tests']"
Testability,"@tushu1232 Sorry for the delay. I'm looking into this. I think you've hit a serious bug in the gatk-launch script. Do you have $GATK_LOCAL_JAR set in your environment? . It looks like the case where a local jar is explicitly specified results in the environment variables not being properly defined, which means you end up hitting #2026. ; If they were properly defined you should be seeing the line `Snappy is disabled via system property` included in your standard out. . I've opened #2316 to deal with the issue. Until that's fixed though, the workaround is to invoke the jars directly and add `-Dsnappy.disable=true`. i.e. `java -Dsnappy.disable=true -jar $GATK_LOCAL_JAR SortSam --input BAM_BWA/SRR2.sorted.bam --output hpcinfra/hadoop/test.bam --SORT_ORDER queryname`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2300#issuecomment-267119418:741,test,test,741,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2300#issuecomment-267119418,1,['test'],['test']
Testability,"@ury the performance evaluation is based on the HCC1395 benchmark, as described in my original report (see above). More variants in newer versions is in line with our analysis, but the new variants are likely to be mostly false positives.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1407452410:56,benchmark,benchmark,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7921#issuecomment-1407452410,1,['benchmark'],['benchmark']
Testability,@vdauwera All tests passed. Can you describe the problem you had in GATK3?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2301#issuecomment-265792221:14,test,tests,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2301#issuecomment-265792221,1,['test'],['tests']
Testability,"@vdauwera General arg checking can be done in `customCommandLineValidation`, which returns zero or more error messages and prints them to stderr. I suppose log / warn messages could also be put in there. But it might be nice to have a more specific process for checking values of numeric args.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/135#issuecomment-71076678:156,log,log,156,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/135#issuecomment-71076678,1,['log'],['log']
Testability,@vdauwera It shouldn't. It looks like production uses a different docker build script. Only the mutect2 and cnv wdls should have been affected and the tests for each of those tools still worked.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3358#issuecomment-317862466:151,test,tests,151,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3358#issuecomment-317862466,1,['test'],['tests']
Testability,"@vdauwera The hack is in GATK4, `IntervalUtils.intervalFileToList`:; ```; // The current Agilent exome interval list is off-by-one on all end positions. Until this is fixed we; // need to tolerate intervals where the end is one before the start. We should remove this once a; // corrected version of the interval list is released. This is tracked in:; // https://github.com/broadinstitute/gatk/issues/2089; if (interval.getStart() - interval.getEnd() == 1 ) {; logger.warn(""Ignoring possibly incorrectly converted length 1 interval : "" + interval);; }; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2520#issuecomment-288727842:461,log,logger,461,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2520#issuecomment-288727842,1,['log'],['logger']
Testability,@vdauwera The latest game plan for this ticket (which is being addressed in #2021) is to have SplitNCigarReads create a supplementary alignment from each split and soft clip the bases that align elsewhere. This allows the bam to be more usable by other tools (like BQSR) since the logic to handle supplementary reads already exists. This means that we need an additional argument to HaplotypeCaller so that allows using supplementary alignments (See #2043). . My question is how can we document that SplitNCigarReads is not recommended for use with the changes to make the reads supplementary until #2043 is resolved? Is it possible to make the tool hidden in GATK4 or give it some tag that makes it clear it isn't ready for use yet?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1394#issuecomment-235062440:281,log,logic,281,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1394#issuecomment-235062440,1,['log'],['logic']
Testability,"@vdauwera The tools are categorized and listed in the Google Spreadsheet above. It is waiting for you to assign tech leads to tools for documentation. One thing that @chandrans brought to my attention is that for BaseRecalibrator one of the parameters (`-bqsr`) actually causes an error. One can no longer generate the 2nd recalibration table with correction on the fly and instead must use the recalibrated BAM through BaseRecalibrator to generate the 2nd recal table for plotting. **This type of information is missing from the tool docs.** Furthermore, updates I made to the BQSR slidedeck (that showcase this `-bqsr` parameter) are based on information from a developer and this information turns out to be incorrect now (perhaps correct at some point in development?). Soooo, I think it may be prudent that those responsible for tool docs test the commands on data. - [4] Make sure the doc content enables Best Practices, e.g. plotting BQSR recalibration, and ; - [5] Test example commands to ensure they work. If they do not, make corrections and notate the change in application in the documentation.; - [6] Remember @vdauwera's plan to change the representation of parameters from camel to KEBAB case. Issue is <https://github.com/broadinstitute/gatk/issues/2596>. Geraldine would like your help to do this for the tools you are responsible for. Remember to change the integration tests too. . ### What the gatkDocs look like as of commit of `Mon Nov 20 17:30:46 2017 -0500` where we upgraded htsjdk to 2.13.1: . # [gatkdoc.zip](https://github.com/broadinstitute/gatk/files/1492593/gatkdoc.zip). Download and load the `index.html` into a web browser to click through the docs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3853#issuecomment-346060583:844,test,test,844,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3853#issuecomment-346060583,3,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"@vdauwera Well, the full truth is that the M2 WDL tests are experiencing intermittent failures at the moment due to out-of-disk-space issues on travis. You can safely merge this if only the M2 WDL tests failed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3167#issuecomment-311502730:50,test,tests,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3167#issuecomment-311502730,2,['test'],['tests']
Testability,"@vdauwera commented on [Mon Mar 20 2017](https://github.com/broadinstitute/gatk-protected/issues/942). @vdauwera commented on [Sat Mar 07 2015](https://github.com/broadinstitute/gsa-unstable/issues/855). #### Issue description / case details. Users who are dealing with large ploidies (typically for pooled experiments) run into limitations where the combination of the ploidy and numbers of alleles in the high teens and above produces too many possible genotypes for GenotypeGVCFs to handle under its current architecture. . For example, in the case reported here, the ploidy is 19 and the number of alternate alleles is 21, so GenotypeGVCFs cannot handle the large number of possible genotypes that result from all the possible combinations. A reasonable way to deal with this would be to cull the possible combinations dynamically at runtime to eliminate the most unlikely combinations up front. ; #### Test data. Has been provided by the user ; #### [Original forum post](http://gatkforums.broadinstitute.org/discussion/4954/combination-of-ploidy-and-number-of-alleles-error-when-running-genotypegvcfs/p1). ---. @vruano commented on [Tue Mar 10 2015](https://github.com/broadinstitute/gsa-unstable/issues/855#issuecomment-77993425). The error message explain the reason well ... a possibility to actually address this issue is to dynamically reduce the number of alt alleles loosing the less likely ones base on a maximum number of possible genotypes. So the user does not indicate the maximum number of alternative but the maximum number of genotypes. Which alt. alleles make it could be decided by taking a look in the corresponding hom. alt genotype likelihood dropping those alternatives with the worst hom. PLs. ---. @vdauwera commented on [Tue Mar 10 2015](https://github.com/broadinstitute/gsa-unstable/issues/855#issuecomment-78122186). @vruano What you propose sounds great. How much work would it take to implement this? . ---. @vruano commented on [Mon Mar 23 2015](https://github.com/",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2955:907,Test,Test,907,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2955,1,['Test'],['Test']
Testability,@vdauwera need a test case,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/268#issuecomment-93477189:17,test,test,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/268#issuecomment-93477189,1,['test'],['test']
Testability,@vdauwera please enter a specific test case that fails on GATK3 and you want to work on GATK4. ok to include links to broad-only files for now.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/385#issuecomment-94332155:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/385#issuecomment-94332155,1,['test'],['test']
Testability,"@vdauwera reported this here #950 :. > Can't seem to do git clone https://github.com/broadinstitute/hellbender/. ```; wmd16-c9e:codespace vdauwera$ git clone http://github.com/broadinstitute/hellbender/; Cloning into 'hellbender'...; remote: Counting objects: 22221, done.; remote: Compressing objects: 100% (142/142), done.; remote: Total 22221 (delta 47), reused 4 (delta 4), pack-reused 22046; Receiving objects: 100% (22221/22221), 36.63 MiB | 3.58 MiB/s, done.; Resolving deltas: 100% (9903/9903), done.; Checking connectivity... done.; Downloading src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam (76.16 MB); Username for 'http://github.com': vdauwera; Password for 'http://vdauwera@github.com': ; Error accessing media: src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam (6b1304800e60c0ac0358df137bdad48b7857a36465b04fef3fbbb09380f04746). Errors logged to /Users/vdauwera/codespace/hellbender/.git/lfs/objects/logs/20151005T220016.510795175.log.; Use `git lfs logs last` to view the log.; Downloading src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam.bai (11.25 KB); Username for 'http://github.com': ; ```. > Looks like I'm failing to download large test files. Do I need to be on VPN for this to work? Or is it expected and I should ignore it?",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/952:558,test,test,558,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/952,9,"['log', 'test']","['log', 'logged', 'logs', 'test']"
Testability,"@vdauwera reports getting this error when running `GenomicsDBImport` with a large interval list as the `-L` input:. ```; java.util.concurrent.CompletionException: org.broadinstitute.hellbender.exceptions.GATKException: Cannot call query with different interval, expected:1:29867-31003 queried with: 1:68590-70510; ```. Looking at the code that produces this error, this seems like a ""should never happen"" type of error that would likely only be produced by a race condition of some kind. Full stderr log follows:. ```; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp.876625c8; 04:37:28.801 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/gatk/gatk-package-4.0.9.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; 04:37:29.319 INFO GenomicsDBImport - ------------------------------------------------------------; 04:37:29.319 INFO GenomicsDBImport - The Genome Analysis Toolkit (GATK) v4.0.9.0; 04:37:29.320 INFO GenomicsDBImport - For support and documentation go to https://software.broadinstitute.org/gatk/; 04:37:29.320 INFO GenomicsDBImport - Executing as root@7a7880aef99b on Linux v4.9.0-0.bpo.6-amd64 amd64; 04:37:29.321 INFO GenomicsDBImport - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_171-8u171-b11-0ubuntu0.16.04.1-b11; 04:37:29.321 INFO GenomicsDBImport - Start Date/Time: October 8, 2018 4:37:28 AM UTC; 04:37:29.321 INFO GenomicsDBImport - ------------------------------------------------------------; 04:37:29.322 INFO GenomicsDBImport - ------------------------------------------------------------; 04:37:29.322 INFO GenomicsDBImport - HTSJDK Version: 2.16.1; 04:37:29.323 INFO GenomicsDBImport - Picard Version: 2.18.13; 04:37:29.323 INFO GenomicsDBImport - HTSJDK Defaults.COMPRESSION_LEVEL : 2; 04:37:29.323 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 04:37:29.324 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 04:37:29.324 INFO GenomicsDBImport - HTSJDK Defaults.US",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5300:500,log,log,500,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5300,1,['log'],['log']
Testability,"@vdauwera reports that the following `ApplyBQSRSpark` command fails with an NIO-related error on dataproc:. ```; time ./gatk-launch ApplyBQSRSpark \; -I gs://hellbender/test/resources/benchmark/CEUTrio.HiSeq.WEx.b37.NA12892.bam \; -R gs://gatk-legacy-bundles/b37/human_g1k_v37.2bit \; -O gs://gatk-demo/TEST/gatk4-spark/recalibrated.bam \; -bqsr gs://gatk-demo/TEST/gatk4-spark/recalibration.table \; -apiKey $APIKEY_ORTMP \; -- \; --sparkRunner GCS \; --cluster gvda-test-bqsr \; --num-executors 40 \; --executor-cores 4 \; --executor-memory 20g; ```. ```; java.nio.file.FileSystemNotFoundException: Provider ""gs"" not installed; at java.nio.file.Paths.get(Paths.java:147); at org.seqdoop.hadoop_bam.util.NIOFileUtil.asPath(NIOFileUtil.java:30); at org.seqdoop.hadoop_bam.util.SAMFileMerger.mergeParts(SAMFileMerger.java:51); at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSink.writeReadsSingle(ReadsSparkSink.java:231); at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSink.writeReads(ReadsSparkSink.java:153); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.writeReads(GATKSparkTool.java:247); at org.broadinstitute.hellbender.tools.spark.ApplyBQSRSpark.runTool(ApplyBQSRSpark.java:49); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:348); at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:38); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:109); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:167); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:186); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:76); at org.broadinstitute.hellbender.Main.main(Main.java:92); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2287:169,test,test,169,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2287,5,"['TEST', 'benchmark', 'test']","['TEST', 'benchmark', 'test', 'test-bqsr']"
Testability,"@vilay-nference Were you able to get this configuration to pass tests on your end? I've attempted to incorporate your changes into https://github.com/broadinstitute/gatk/pull/8998, but I'm running into issues with hadoop and protobuf incompatibilities. I see the same problem with your branch when I try to run tests on it. (I also can't run tests without disabling -Werror on your branch since there are still some unresolved deprecation and other minor issues). Errors look like this:. ```; Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.NoClassDefFoundError: Could not initialize class org.apache.hadoop.security.proto.SecurityProtos [in thread ""IPC Server handler 1 on default port 64812""]; 	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos.<clinit>(ClientNamenodeProtocolProtos.java); ```. and you can easily trigger one by running `ParallelCopyGCSDirectoryIntoHDFSSparkIntegrationTest`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8950#issuecomment-2412827680:64,test,tests,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8950#issuecomment-2412827680,3,['test'],['tests']
Testability,"@vruano , I try to look at them if the main purpose of this PR is testing, which I totally understand for Cigar related acrobatics.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3531#issuecomment-325508326:66,test,testing,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3531#issuecomment-325508326,1,['test'],['testing']
Testability,"@vruano ; Since there's some a major change of implementation following your suggestions (single class instead of abstract-base-and-sole-inheritor, remove over-classing), I'm issuing this PR to replace #5117, so the comments you made there are easier to be kept track of. Basically, ; * the first commit is trivial; * the second commit is to address some comments you have about various utils classes; * the third commit is what's contained in #5117 ; * the fourth commit is the re-implementation, which replaces the two old classes with a new class so it's easier to read; * the fifth commit is a simple integration test for this new tool. Thanks!",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5164:617,test,test,617,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5164,1,['test'],['test']
Testability,"@vruano ; Tests are failing, could you resolve this?; It appears to be in:; org.broadinstitute.hellbender.tools.walkers.annotator.VariantAnnotatorIntegrationTest > testAgainstMutect2 FAILED; java.lang.IllegalArgumentException: Dirichlet parameters may not be negative; at org.broadinstitute.hellbender.utils.Utils.validateArg(Utils.java:798); at org.broadinstitute.hellbender.utils.Dirichlet.<init>(Dirichlet.java:26); at org.broadinstitute.hellbender.tools.walkers.mutect.SomaticLikelihoodsEngine.getEffectiveCounts(SomaticLikelihoodsEngine.java:56)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7303#issuecomment-859204971:10,Test,Tests,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7303#issuecomment-859204971,1,['Test'],['Tests']
Testability,"@vruano I had to roll back making the constructor of `GenotypeLikelihoodCalculators` private and all of its methods static because tests were failing. Interestingly, individual test classes all passed but running the entire test suite as a whole failed with scary heap errors. I believe that making this class effectively a singleton object shared by the entire GATK causes its memory requirements to grow out of control somehow. There has to be a smart way around this, but IMO it's beyond the scope of this ticket.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1918#issuecomment-232557153:131,test,tests,131,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1918#issuecomment-232557153,3,['test'],"['test', 'tests']"
Testability,@vruano I think GATK 4 fixes this by extracting allele subsetting from genotyping and the qual score. Is there a particular bam and variant I can test on before closing this issue?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1858#issuecomment-272495411:146,test,test,146,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1858#issuecomment-272495411,1,['test'],['test']
Testability,"@vruano I tried to reproduce this by specifying a non-existent BAM file to `CountReadsSpark`. I get a `UserException` (stacktrace below), not an NPE. Can you post your stacktrace please?. ```; org.broadinstitute.hellbender.exceptions.UserException: Failed to read bam header from /Users/tom/workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/nonexistent.bam; Caused by:/Users/tom/workspace/gatk/src/test/resources/org/broadinstitute/hellbender/tools/nonexistent.bam; at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSource.getHeader(ReadsSparkSource.java:204); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeReads(GATKSparkTool.java:381); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeToolInputs(GATKSparkTool.java:361); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:351); at org.broadinstitute.hellbender.engine.spark.SparkCommandLineProgram.doWork(SparkCommandLineProgram.java:38); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:116); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:179); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:198); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:121); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:108); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:128); at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:28); at org.broadinstitute.hellbender.utils.test.CommandLineProgramTester.runCommandLine(CommandLineProgramTester.java:88); at org.broadinstitute.hellbender.tools.spark.pipelines.CountReadsSparkIntegrationTest.testNonExistentInputBam(CountReadsSparkIntegrationTest.java:111). Caused by:; java.io.FileNotFoundException: /Users/tom/workspace/gatk/src/test/resourc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2541#issuecomment-293293199:310,test,test,310,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2541#issuecomment-293293199,2,['test'],['test']
Testability,"@vruano The AF calculator is not where the alleles are removed. It calculates an honest probability that each exists. For example, if we have two alts and PLs are `(999,0,999,0,999,999)` -- that is, it's definitely a het, and we have no clue which alt allele it is, then it correctly says that the posterior probability of each alt allele is 0.5. Now, this probability of 0.5 is quite low for a real variant (below the default confidence threshold). `calculateOutputAlleleSubset` sees that and evaluates each allele independently, thus dropping both, but that's a consequence of relying on marginal probabilities. which this example suggests we ought not to do. The logic in `Mutect2` is different and avoids this issue. It does model comparison to see if we can remove alt alleles one at a time, starting with the alt allele with the worst marginal likelihood. Thus, it drops one alt allele, because there is only a tiny likelihood cost since the other alt allele can explain the data, but does not drop a second alt allele since then half the reads wouldn't fit. This is exactly what Yossi proposed.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6364#issuecomment-576775674:666,log,logic,666,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6364#issuecomment-576775674,1,['log'],['logic']
Testability,"@vruano and @davidbenjamin , it looks like we have another `HaplotypeCaller` bug in the latest release (4.1.7.0). It seems that this wasn't caught prior to release due to the wrong version of the GATK docker image being run during full-scale testing. Would you be able to look into this when you have a chance? Thanks!. @vruano , it appears that you may have last touched this code in commit d9fd22f52aaf5133daaa81b47b37d33147a5c7d7, so possibly you have some insight into what might be going on here?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6586#issuecomment-624797706:242,test,testing,242,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6586#issuecomment-624797706,1,['test'],['testing']
Testability,"@vruano and @magicDGS I made most of the changes you requested, with the following exceptions:. * methods that were complex enough and I am not the original author&mdash;I didn't change most of them except adding some arg checking; * `SVFileUtils.createDirectory()` not sure if the change is what you would like to see (most likely still needs some work) and it can be moved to `BucketUtils` (I need to add tests for it before that); * `SVFileUtils.writeSAMFile()` maybe it is worth to move it to some engine utils, but I need to talk to some Engine guy first.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3674#issuecomment-339382637:407,test,tests,407,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3674#issuecomment-339382637,1,['test'],['tests']
Testability,"@vruano back to you. I fixed the 1H1H1M problem you brought up ""GATK3's filter would not complain for consecutive H operations at the beginning whereas the new code does"" and I entered tests for it (one for head, one for tail). I entered https://github.com/broadinstitute/hellbender/issues/428 for clarifying the spec.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/380#issuecomment-94995337:185,test,tests,185,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/380#issuecomment-94995337,1,['test'],['tests']
Testability,@vruano can you advise here? is an important testcase missing? The code looks exactly the same in gatk3,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1081#issuecomment-165838711:45,test,testcase,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1081#issuecomment-165838711,1,['test'],['testcase']
Testability,"@vruano can you clarify? The specific CIGAR ""50I2S"" that you mentioned is _not_ flagged as bad by BadCigarFilter in GATK3. Can you provide test cases for this issue?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/373#issuecomment-95942798:139,test,test,139,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/373#issuecomment-95942798,1,['test'],['test']
Testability,"@vruano can you review because 1) much of this was your idea and 2) I trust you to spot any dodgy architecture? @droazen In addition to all gatk public tests passing (of course), all the HaplotyeCaller tests in gatk-protected pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1918#issuecomment-226261254:152,test,tests,152,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1918#issuecomment-226261254,2,['test'],['tests']
Testability,"@vruano thanks for the report. I had a look at your branch, but I couldn't run the test as the test file _input_long_variants.vcf_ seems to be missing. Could you add it, and submit a PR please?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2554#issuecomment-293287225:83,test,test,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2554#issuecomment-293287225,2,['test'],['test']
Testability,"@vruano you're raising 3 issues:; 1) is the algorithm correct?; 2) is the algorithm's results the same as in GATK3?; 3) is the algorithm esthetically pleasing/readable. For 1, I'm going to create a new ticket - it's not under discussion here.; For 2, I'll enter the cases you're suggesting as unit tests and see what happens.; For 3, I can work on making it read better. . My first goal in this tickets is to port the existing filter. If we can improve the readability at the same time, that's great. Fixing any bugs or deficiencies of the algorithm is strictly future work (if it has been broken all this time in GATK3, it's ok for it to be broken for a few more weeks in GATK4).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/380#issuecomment-94912380:298,test,tests,298,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/380#issuecomment-94912380,1,['test'],['tests']
Testability,@wangdy12 thanks.I have tested and your fix is effective. By Calling HaplotypeCallerSpark I can get the good results on an cluster. The GATK version is 4.0.2.1-2.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4231#issuecomment-371691142:24,test,tested,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4231#issuecomment-371691142,1,['test'],['tested']
Testability,@wangshun1121 That definitely sounds like a bug. Is it possible for you to try running with the newest released version 4.1.3.0 in order to test if it's still present?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6102#issuecomment-523200282:140,test,test,140,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6102#issuecomment-523200282,1,['test'],['test']
Testability,@xmzhuo @twood1 we have released a fix for a very similar bug in Funcotator (#6289 ). Could you test the newest GATK version 4.2.3.0 and let us know if it also solves this bug?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6651#issuecomment-964530200:96,test,test,96,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6651#issuecomment-964530200,1,['test'],['test']
Testability,@xmzhuo Interesting. Is this `hg19` or `hg38` data? I can add this to our tests. For everyone else - thanks for your patience. I'm starting to work on this issue this week so we should have a fix relatively soon (1-2 weeks).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6651#issuecomment-811174076:74,test,tests,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6651#issuecomment-811174076,1,['test'],['tests']
Testability,"@xysj1989 We primarily run this workflow using the WDL on Terra. In this case, each GermlineCNVCaller shard is run on a separate VM using the GATK Docker. Hopefully, we can always at least guarantee that this default mode of running the workflow is functional and covered by tests. However, if you'd like to instead run multiple instances of GermlineCNVCaller locally, you may need to make sure certain environment variables are set appropriate. For example, I think you can address (2) above (the location of the temporary theano directory) by either setting environment variables or modifying your Theano configuration (see http://deeplearning.net/software/theano/library/config.html) appropriately. You may also want to check the GermlineCNVCaller task in the WDL to see how other variables are set there. Let me look into whether you can also address (1) in this way, or if this will require a GATK code change, and get back to you. (Of course, if you figure it out before me, please follow up!) Thanks again for bringing this to our attention.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-548007200:275,test,tests,275,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6235#issuecomment-548007200,1,['test'],['tests']
Testability,"@yegeniy Thank you for your contribution! If you could move the filter to our common filter location and add a few unit tests for it, it would be super (test the different combinations of the boolean parameters and flags on reads).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1053#issuecomment-151336422:120,test,tests,120,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1053#issuecomment-151336422,2,['test'],"['test', 'tests']"
Testability,@yfarjoun Do you mean TRAVIS tests or human-review?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3853#issuecomment-349668263:29,test,tests,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3853#issuecomment-349668263,1,['test'],['tests']
Testability,@yfarjoun I agree with your test.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6139#issuecomment-528528253:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6139#issuecomment-528528253,1,['test'],['test']
Testability,"@yfarjoun I pushed a commit to this branch that fixes the truncation issue flagged above, adds unit tests for the new argument collection, and adds integration tests to cover the new -O argument for all affected tools. This can be merged once tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7072#issuecomment-777074618:100,test,tests,100,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7072#issuecomment-777074618,3,['test'],['tests']
Testability,"@yfarjoun I'm not understanding... If we're on the reverse strand, then we reach the adaptor at the 5' end of the forward strand i.e. at one `getMateStart() + 1`, which is what the code does now. If we're on the forward strand the equivalent logic would be `getMateEnd() + 1`, but no such method exists, so we use `read.getStart() + abs(read.getFragmentLength())`. Why is this not equivalent?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3184#issuecomment-358740758:242,log,logic,242,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3184#issuecomment-358740758,1,['log'],['logic']
Testability,@yfarjoun Let me know once the production tests have passed and I'll take a final look at this.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6625#issuecomment-638960307:42,test,tests,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6625#issuecomment-638960307,1,['test'],['tests']
Testability,"@yfarjoun Right, the intention of this ticket was to implement the codec in htsjdk, then add a GATK integration test proving that we can now access interval_list files as tribble features.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5788#issuecomment-472566997:112,test,test,112,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5788#issuecomment-472566997,1,['test'],['test']
Testability,@yfarjoun That was a messy rebase. Assuming these tests pass everything should be in order for you to take another look.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7432#issuecomment-1082263595:50,test,tests,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7432#issuecomment-1082263595,1,['test'],['tests']
Testability,"@yfarjoun The native PairHMM requires only AVX1, which is on pretty much all cloud CPUs at this point, so it can be (and is) tested in Travis. The native SmithWaterman requires AVX2, which is only on Skylake or newer CPUs -- and travis does not provide a way to request the required architectures, unfortunately.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6281#issuecomment-558717618:125,test,tested,125,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6281#issuecomment-558717618,1,['test'],['tested']
Testability,"@yfarjoun We don't have continuous tests for the native SmithWaterman (since we don't have the ability to request the necessary hardware in travis), and so we didn't feel comfortable making it the default for that reason.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6281#issuecomment-558210103:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6281#issuecomment-558210103,1,['test'],['tests']
Testability,@yfarjoun What do you want to do with this one? Are the issues with the tests resolved?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6453#issuecomment-758914892:72,test,tests,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6453#issuecomment-758914892,1,['test'],['tests']
Testability,"@yfarjoun for small arrays, `FastMath.log` is pretty much as fast as it gets. It is highly optimized. If you are dealing with giant arrays, however, an alternative is to cast the Java arrays into [NDArray](www.nd4j.org) and execute Nd4j native ops. Here's how the timings look:; ```N = 1, Apache = 0.001625 ms, Nd4j = 0.113038 ms; N = 10, Apache = 0.002112 ms, Nd4j = 0.029833 ms; N = 100, Apache = 0.011660 ms, Nd4j = 0.028464 ms; N = 1000, Apache = 0.049915 ms, Nd4j = 0.052455 ms; N = 10000, Apache = 0.348786 ms, Nd4j = 0.430606 ms; N = 100000, Apache = 3.572483 ms, Nd4j = 1.810641 ms; N = 10000000, Apache = 323.021844 ms, Nd4j = 175.421305 ms; ```; The nd4j times include the overhead of creating NDArrays and pulling back the results to JVM heap. The break even point is around N ~ 1000. If accuracy is not a concern, (1) a native implementation of log using half-precision floats or (2) caching, tabulation, and linear interpolation could help. ps> I just realized that the Nd4j call was using 4 threads. if you replace for loops in Java with parallel streams in Java with the same number of threads, Apache always beats Nd4j in this specific test:; ```N = 1, Apache = 0.073910 ms, Nd4j = 0.122488 ms; N = 10, Apache = 0.086508 ms, Nd4j = 0.056924 ms; N = 100, Apache = 0.067022 ms, Nd4j = 0.051674 ms; N = 1000, Apache = 0.081751 ms, Nd4j = 0.075098 ms; N = 10000, Apache = 0.202142 ms, Nd4j = 0.514030 ms; N = 100000, Apache = 1.190085 ms, Nd4j = 1.990945 ms; N = 10000000, Apache = 96.536308 ms, Nd4j = 210.331251 ms; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2577#issuecomment-292602609:38,log,log,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2577#issuecomment-292602609,3,"['log', 'test']","['log', 'test']"
Testability,"@yfarjoun if you still want this, the tests need some work",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6453#issuecomment-729913770:38,test,tests,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6453#issuecomment-729913770,1,['test'],['tests']
Testability,"@yl-h Thank you for the update! Although we write tests for bug fixes, there is nothing so reassuring as hearing from users. As you noted, the `FRACTION` and `BETA` annotations will require a more involved solution to compute properly, but fortunately they are experimental and not used in filtering.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6744#issuecomment-707802282:50,test,tests,50,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6744#issuecomment-707802282,1,['test'],['tests']
Testability,"@yurivict I cant actually navigate to the build log you included, but since you seem to have previously [succeeded](https://github.com/broadinstitute/gatk/issues/5483) in building with gradle-4.6, which gradle version are you seeing this issue with ? Do you know if its different in gradle 3.1 vs 4.x ?.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446221996:48,log,log,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5499#issuecomment-446221996,1,['log'],['log']
Testability,"@yurivict Sorry to hear that that option didn't work for you -- we'll test it out on our end to see if it works for us. In the meantime, as a temporary workaround you can change the version number *after* building by editing the `Implementation-Version` attribute in the `META-INF/MANIFEST.MF` file inside the GATK jar.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7143#issuecomment-799765077:70,test,test,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7143#issuecomment-799765077,1,['test'],['test']
Testability,"@yurivict The large files under `src/main/resources/large/` are required to build GATK, since they are packaged inside the GATK jar and used by tools at runtime. These are things like ML models and native C/C++ libraries used for acceleration of certain tools. The large files under `src/test/resources/large/`, on the other hand, are only required by the test suite when running tests. Hope this clears things up!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8912#issuecomment-2223906223:288,test,test,288,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8912#issuecomment-2223906223,3,['test'],"['test', 'tests']"
Testability,"@zamirai I've incorporated your patch from https://github.com/NVIDIA-Genomics-Research/nvscorevariants/commit/937ffafb78b0f3e7df9b1edc3b08d11e3ebee35a into this PR. With this change, the 2D tests now pass, even when I reduce the epsilon to 0.01. Thanks for the fix!. @asmirnov239 is now working on merging the new conda environment into the GATK conda environment and making the necessary updates to existing tools. This will likely require at least another few weeks.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1252819520:190,test,tests,190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8004#issuecomment-1252819520,1,['test'],['tests']
Testability,A PR into a branch for myself to check test coverage (cannot be into the master because of the Spark bug).,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2285:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2285,1,['test'],['test']
Testability,A bit of further information. The conda forge maintainers actually noticed that this was problematic and pushed a patched version of the recipe with corrected version bounds. I'm not sure why we're still resolving the old incorrect version. . I'm in favor of pinning the exact dependencies to prevent this problem. We can always unpin and test periodically.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7800#issuecomment-1105425883:339,test,test,339,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7800#issuecomment-1105425883,1,['test'],['test']
Testability,A check:; Can you clone https://github.com/kgururaj/TestGenomicsDBJar ?; ```; export GENOMICSDB_VERSION=0.8.1-proto-3.0.0-beta-1+uuid-static; curl -O http://repo1.maven.org/maven2/com/intel/genomicsdb/${GENOMICSDB_VERSION}/genomicsdb-${GENOMICSDB_VERSION}-jar-with-dependencies.jar; bash -x TestGenomicsDBJar/run_checks.sh; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4124#issuecomment-356988842:52,Test,TestGenomicsDBJar,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4124#issuecomment-356988842,2,['Test'],['TestGenomicsDBJar']
Testability,A command line that triggered the crash in our testing: ; ```; gatk HaplotypeCaller -R /cromwell_root/gcp-public-data--broad-references/hg38/v0/dragen_reference/Homo_sapiens_assembly38_masked.fasta -I gs://broad-dsde-methods-dragen/reprocessed_data_v3.7.5_masked/CH1_CHM13_WGS1/CH1_CHM13_WGS1.bam -L /cromwell_root/fc-971fd540-210c-4e5a-87ce-d3f8c91c7557/submissions/0586864c-d263-4797-89f1-b517e487ad2a/VariantCalling/b177671c-e96b-433e-824a-f9d641184e75/call-ScatterIntervalList/glob-cb4648beeaff920acb03de7603c06f98/109scattered.interval_list -O CH1_CHM13_WGS1.vcf.gz --pileup-detection --pileup-detection-absolute-alt-depth 0 --pileup-detection-bad-read-tolerance 0.4 --pileup-detection-enable-indel-pileup-calling --pileup-detection-active-region-phred-threshold 3.0 --use-pdhmm -contamination 0.0 -G StandardAnnotation -G StandardHCAnnotation --dragen-mode --disable-spanning-event-genotyping --dragstr-params-path /cromwell_root/fc-971fd540-210c-4e5a-87ce-d3f8c91c7557/submissions/0586864c-d263-4797-89f1-b517e487ad2a/VariantCalling/b177671c-e96b-433e-824a-f9d641184e75/call-DragstrAutoCalibration/CH1_CHM13_WGS1.bam.dragstr -GQB 10 -GQB 20 -GQB 30 -GQB 40 -GQB 50 -GQB 60 -GQB 70 -GQB 80 -GQB 90; ```. `--dragstr-params-path /cromwell_root/fc-971fd540-210c-4e5a-87ce-d3f8c91c7557/submissions/0586864c-d263-4797-89f1-b517e487ad2a/VariantCalling/b177671c-e96b-433e-824a-f9d641184e75/call-DragstrAutoCalibration/CH1_CHM13_WGS1.bam.dragstr` is likely optional. `-L` is optional and any interval will likely work to reproduce the error.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8712#issuecomment-2034726852:47,test,testing,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8712#issuecomment-2034726852,1,['test'],['testing']
Testability,"A couple of high-level things to start:. - I think the main short-term issue is getting some tests with inout/output files, and a test strategy, both for Python unit testing and for GATK integration testing. @mbabadi Do you have any tests for exercise this functionality ?; - We're probably going to want to standardize on a way to integrate tool logging (both the level and the stream) with Python logging. Since the stdout/stderr streams of the Python process will be redirected back to GATK via anonymous pipes, we need to ensure that verbose logging doesn’t block Python, which will happen when the buffering capability of the pipe is exceeded.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3838#issuecomment-344927793:93,test,tests,93,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3838#issuecomment-344927793,8,"['log', 'test']","['logging', 'test', 'testing', 'tests']"
Testability,A couple unrelated tests failing; hopefully a rebase will clear those up.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2098#issuecomment-240491388:19,test,tests,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2098#issuecomment-240491388,1,['test'],['tests']
Testability,"A few interrelated issues:. -The install_R_packages.R script is copied and installed in the base Docker image. However, it is currently also copied (but not installed) in the non-base Docker image for some reason. @jamesemery may be able to comment (#4251).; -Different R packages are installed in that script in different ways. Some are pegged to older versions sourced from http://cran.r-project.org/src/contrib/Archive URLs; this is to prevent the http://cran.r-project.org/src/contrib URLs for the most recent versions from breaking out under us, which has happened frequently in the past. Other packages are simply installed using `dependencies = ...`; -We should perhaps consider moving the R dependencies into the conda environment, see discussion in #4209.; -R dependencies are cached in a `site-library` folder in the Travis build to avoid intermittent connection issues with the aforementioned URLs. This can cause tests to break after the fact if the cache is not cleared every time a dependency is removed. If we decide to cache pip installs similarly, we will also run into this issue.; -Requiring the base Docker image to be updated every time an R dependency is changed is also fragile. If it is accidentally not updated when dependencies are removed, tests can continue to pass.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4250:925,test,tests,925,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4250,2,['test'],['tests']
Testability,"A few minor issues:. - [x] Change `--resource <blah>` to `--resource:<blah>` in tool-level documentation. EDIT: Added to the sl_lite_overlap branch mentioned below.; - [x] The VCF writer in VariantRecalibrator has a few conditionals to allow for VCF headers without contig lines, we could do the same for the writer in LabeledVariantAnnotationsWalker. EDIT: Added to the sl_lite_overlap branch mentioned below.; - [ ] Double check whether we should worry about any differences in extraction on test data (provided via email) from https://gatk.broadinstitute.org/hc/en-us/community/posts/7974912707099-VariantRecalibrator-IndexOutOfBoundsException. Probably nothing to worry about, and at least the error messaging in the new tools is more informative.; - [x] We could change the strategy for checking for resource overlaps to require allele-level matching (rather than only matching on start position, as was inherited from VQSR). A quick test on malaria shows that this can reduce the number of overlaps by O(10%), but performance doesn't really change too much. Branch is already open at https://github.com/broadinstitute/gatk/tree/sl_lite_overlap; - [ ] Expand the exact-match tests to cover some of these strategies, which were added separately in #8049 and merged to make a release deadline.; - [x] Catch the exception in https://github.com/broadinstitute/gatk/blob/fd782504d18b56dbc266c2b3bb4eb32f21916776/src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/scalable/LabeledVariantAnnotationsWalker.java#L389 and throw the same message that is thrown in AS mode. Added in #8074.; - [x] Add message to the score tool that the scores HDF5 file will not be out when the input VCF is empty (such a message is already emitted about the annotations HDF5 file). Added in #8074.; - [ ] Megan suggested in the review of #8074 that dynamic disk sizing could be added to the WDL.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1222787946:494,test,test,494,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1222787946,3,['test'],"['test', 'tests']"
Testability,"A few points:; 1. When we wrote the Java interface, the 'agreement' was that the sample names would be unique and consistent within the VCF headers. Hence, the assert statement in the Java code.; 1. Having said that, the sample name in the VCF header is ignored completely if checks are disabled (which are disabled by default). This includes the assert statement and a couple of other checks in the importer code. The sample name is taken from the name to reader map provided in the constructor call. This map is created from the tab delimited file.; 1. Would it be possible to provide a simple test case to replicate the bug? I couldn't replicate it. Here is what I did.; 1. Three VCF files - t0.vcf.gz, t1.vcf.gz, t0_dup.vcf.gz. t0 and t0_dup are identical except for the GT field in one location. So, these 2 files have the same header (same sample name in the header).; 1. Tab file (unique sample names). HG00141 test_inputs/vcf_test_inputs/t0.vcf.gz; HG0155 test_inputs/vcf_test_inputs/t0_dup.vcf.gz; HG00192 test_inputs/vcf_test_inputs/t1.vcf.gz. 1. Import. ./gatk-launch GenomicsDBImport --genomicsDBWorkspace /tmp/ws -L 1:1-1000000 --sampleNameMap test_inputs/gatk4_dup_test_list --batchSize 2; 1. Query prints the output correctly. ./bin/gt_mpi_gather -j test_inputs/query/gatk4-generated.json --produce-Broad-GVCF. #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT HG00141 HG00192 HG0155; 1 12144 . G <NON_REF> . . . GT 0/0 . 0/0; 1 12191 . T <NON_REF> . . . GT 0/0 0/0 0/0; 1 17385 . G A,T,<NON_REF> . . . GT 0/1 2/2 1/1. ./gatk-launch SelectVariants -V gendb:///tmp/ws --output t.vcf.gz -R Homo_sapiens_assembly19.fasta; #CHROM POS ID REF ALT QUAL FILTER INFO FORMAT HG00141 HG0155 HG0192; 1 12141 . C <NON_REF> . . END=12144 GT:DP:GQ:MIN_DP:PL ./.:2:0:0:0,0,0 ./.:2:0:0:0,0,0 .; 1 12145 . C <NON_REF> . . END=12277 GT:DP:GQ:MIN_DP:PL ./.:2:0:0:0,0,0 ./.:2:0:0:0,0,0 ./.:3:0:0:0,0,0; 1 12278 . C <NON_REF> . . END=12295 GT:DP:GQ:MIN_DP:PL ./.:2:0:0:0,0,0 ./.:2:0:0:0,0,0 .; 1 17385 rs987;d345",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3814#issuecomment-343344853:160,assert,assert,160,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3814#issuecomment-343344853,3,"['assert', 'test']","['assert', 'test']"
Testability,A few tests that are not marked as either `cloud` or `bucket` are now failing in Travis due to undefined environment variables -- should fix this before merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/545#issuecomment-109324558:6,test,tests,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/545#issuecomment-109324558,1,['test'],['tests']
Testability,"A few things worth mentioning. 1) This skeleton is mostly a direct port of the existing Dataflow pipeline.; 2) I had to modify some test data because there is a (masked) bug in the Dataflow code, see #795.; 3) Serialization was a slight pain and I had to bump the kryo version to the latest 2.x, as well as add two custom Serializers. If there's a cleaner way to handle any of that I'm all ears.; 4) I'm using Hadoop-bam for reading and writing reads and variants.; 5) There are unit tests for all code except for the skeleton itself. I've run it on a cluster on my machine successfully, but haven't written the tests (which will take a little while to design and get right).",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/850:132,test,test,132,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/850,3,['test'],"['test', 'tests']"
Testability,"A forum topic asked whether we can have a behavior to keep original contig names in FastaAlternateReferenceMaker tool. . A new parameter `--keep-contig-names` is added. . New optional behavior is to set contig names as ; `>originalcontigname description`. Here is my small local test and its result. **VCF**; ```; ##fileformat=VCFv4.2; ##FILTER=<ID=PASS,Description=""All filters passed"">; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""GT"">; ##contig=<ID=chr17,length=83257441>; #CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	Sample; chr17	1	.	N	A	100	PASS	.	GT	1/1; ```; **Original Fasta**; ```; >chr```. **New Fasta with new optional behavior**; ```; >chr17 chr```. **Sequence dictionary created for the new Fasta.**. ```; @HD	VN:1.0	SO:unsorted; @SQ	SN:chr17	LN:83257441	M5:8127f7ddcacb7afb1a6277cdd629fdcd	UR:file:///path/to/chr17_mod2.fasta; ```. Default valu",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8865:279,test,test,279,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8865,1,['test'],['test']
Testability,"A good news is that my [intense reading tests](https://github.com/broadinstitute/gatk/blob/jp_gcloud_17_snapshot/src/test/java/org/broadinstitute/hellbender/utils/nio/ExtremeReadsTest.java#L64) related to fixing #2685 did not trigger this bug. Possibly we were lucky, and possibly upgrading the gcloud version as that PR does brought in a fix for this issue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2516#issuecomment-303881453:40,test,tests,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2516#issuecomment-303881453,2,['test'],"['test', 'tests']"
Testability,A handful of simple optimizations for VariantRecalibrator:; - Preallocate arrays when the size is known; - Eliminate unnecessary boxing of doubles; - Lift some loop invariants with unnecessary allocations (this eliminates millions of array allocations on the full SNP test used by GATK3). The current GATK4 (multi-variant walker) implementation is about 3% faster than GATK3 without these; these bring it to about 6% faster.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2186:268,test,test,268,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2186,1,['test'],['test']
Testability,A little more info about the interval file:; ```; lichtens@OncobuntuMk3:~$ head /home/lichtens/broad_oncotator_configs/allchr.1kg.phase3.v5a.snp.maf10.biallelic.recode.fixed.prune5.trim1M.test.interval_list; 1:14604-14604; 1:14930-14930; 1:15211-15211; 1:15820-15820; 1:30923-30923; 1:49298-49298; 1:51479-51479; 1:54716-54716; 1:55545-55545; 1:58814-58814; lichtens@OncobuntuMk3:~$ wc /home/lichtens/broad_oncotator_configs/allchr.1kg.phase3.v5a.snp.maf10.biallelic.recode.fixed.prune5.trim1M.test.interval_list; 999914 999914 21793054 /home/lichtens/broad_oncotator_configs/allchr.1kg.phase3.v5a.snp.maf10.biallelic.recode.fixed.prune5.trim1M.test.interval_list; lichtens@OncobuntuMk3:~$ . ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2356#issuecomment-275219492:188,test,test,188,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2356#issuecomment-275219492,3,['test'],['test']
Testability,"A logger with configurable verbosity would be great, but low priority is fine. This is a very low priority issue.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2689#issuecomment-300304840:2,log,logger,2,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2689#issuecomment-300304840,1,['log'],['logger']
Testability,A number of the cloud and bucket tests are failing on google dataflow. These need to be fixed. ; #750 is a pre-requisite. Once the tests are fixed we should make these tests mandatory.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/751:33,test,tests,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/751,3,['test'],['tests']
Testability,"A quick patch to help out the Variants team, which is struggling with a problematic callset. Note that a similar regularization to the effective number per component probably should have been applied to solve the issue in https://github.com/broadinstitute/gatk/pull/6425. I'm not sure if the lack of this regularization will still lead to convergence issues, but I would hope that the fix that was implemented instead (treating vanishing components as a special case and skipping computation) suffices. As discussed there, we may also want to eventually remove the idiosyncratic finalize step; it’s likely this is the source of issues here, since the correct Bayesian M step is already regularized by the prior. The covariance regularization term added here is standard (c.f. e.g. https://github.com/scikit-learn/scikit-learn/blob/7e1e6d09bcc2eaeba98f7e737aac2ac782f0e5f1/sklearn/mixture/_gaussian_mixture.py#L154), but it may result in non-negligible changes to VQSLODs. As just discussed with the Variants team, we can probably use the WARP validation to convince ourselves that results are functionally equivalent. I updated the exact-match tests without much close examination (by simply forcing IntegrationTestSpec.assertEqualTextFiles to overwrite the old expected files), so someone may want to sanity check them. There were also a few more interactions between the integration tests for different tools than I anticipated. Some tests use output generated by an upstream tool as input and break encapsulation.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7709:1144,test,tests,1144,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7709,4,"['assert', 'test']","['assertEqualTextFiles', 'tests']"
Testability,"A quick run off between 4.beta.2 BaseRecalibrator and 4.beta.3 doesn't show any difference to me. It must be either some difference in the user's command line, their data, or possibly a change in their environment over time. I'm going to request that they upload example commandline and test files that reproduce the problem.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3491#issuecomment-324452717:287,test,test,287,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3491#issuecomment-324452717,1,['test'],['test']
Testability,A reminder to myself: I forgot to set —interval-merging-rule on some of the examples. Will go back and check all of the examples with test files at some point.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4010#issuecomment-354528898:134,test,test,134,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4010#issuecomment-354528898,1,['test'],['test']
Testability,"A researcher is asking about the status of the ports for FindCoveredIntervals, DiagnoseTargets, and DepthOfCoverage at https://gatkforums.broadinstitute.org/gatk/discussion/12950/. In addition, they have some suggestions for features for DiagnoseTargets. I've recapitulated their post below:. ---. This is a GATK3 issue, but I hope that GATK4 will incorporate the following suggestion. And while we are on the subject, what is the roadmap for FindCoveredIntervals, DiagnoseTargets, and DepthOfCoverage (or something even more awesome) in GATK4?. A common pattern is to use `FindCoveredIntervals --uncovered` to create an interval list that serves as input to `DiagnoseTargets`. On a good day, FindCoveredIntervals --uncovered might create an interval list file that is empty, i.e., all the tested intervals were covered well enough by the given criteria. In this case DiagnoseTargets will first emit a warning like; ```; #WARN 18:11:43,557 IntervalUtils - The interval file /gpfs/share/cmoco_sys_dev/nfs/storage/cromwell/cromwell-executions/somatic_workflow/6a32b126-f616-42c5-9ec6-2994a4e4bd81/call-BamQCGatk/shard-4/bam_qc/2a4033e0-ea75-4d33-91ff-7ba7656536fe/call-FindUncoveredIntervals/shard-1/execution/VAL18-248-NT-D@VAL18-248-NT-D.08302018JH.Lymphoma.uncovered_intervals.interval_list contains no intervals that could be parsed.; ```; and then it raises an error like; ```; ###### ERROR MESSAGE: This tool only works if you provide one or more intervals (use the -L argument). If you want to run whole genome, use -T DepthOfCoverage instead.; ```; and exit with a non-zero return code. It is certainly possible to trap the empty interval list and skip DiagnoseTargets, but it I think it would be better if DiagnoseTargets emitted the warning but then quit with empty output and a zero rc. This would avoid the problem of a workflow that was developed with test data that always had some uncovered intervals suddenly failing when there is excellent coverage.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/19#issuecomment-426093222:790,test,tested,790,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/19#issuecomment-426093222,2,['test'],"['test', 'tested']"
Testability,"A rough estimate of reduction from compressing uncompressed vcf and fasta files in our test data is that we'll go from ~2.8G in the large folder currently -> 2.1G. We may not want to compress everything, since we probably want tests on uncompressed files as well, but it would be a good thing to look into.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423621352:87,test,test,87,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111#issuecomment-423621352,2,['test'],"['test', 'tests']"
Testability,"A seemingly large change PR, but most changes are trivial.; The non-trivial part:. * a new tool `StructuralVariantionDiscoveryPipelineSpark` to run the whole process of SV discovery, by delegating works to `FindBreakpointEvidenceSpark` and `DiscoverVariantsFromContigAlignmentsSAMSpark`, both of which are refactored to accommodate the new tool;; * class `AlignmentRegion` is effectively moved into a new class `AlignedAssembly` (named quite close to the existing class `AlignedAssemblyOrExcuse` but will be moved into a different sub-package in a sequential PR).; * integration tests (local mode and on MiniClusters/hdfs) for all 5 major tools `FindBreakpointEvidenceSpark`, `DiscoverVariantsFromContigAlignmentsSAMSpark`, `StructuralVariantionDiscoveryPipelineSpark`, `AlignAssembledContigsSpark` and `DiscoverVariantsFromContigAlignmentsSGASpark`; a draw back is these integration tests do not test correctness of results but simple tests if these tools run.; * various unit tests. The two paths involving use of Fermi-lite are tested to be running and generating compatible results. The path involves using SGA as the assembler is also running but generates significantly less variants. (see attached run logs).; [differentVersions.txt](https://github.com/broadinstitute/gatk/files/956271/differentVersions.txt). The access levels of the various classes and methods are not optimal now because a serial PR that simply repackaging these classes (hence access levels must be changed) is expected to be generated immediately after this PR is approved.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2621:579,test,tests,579,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2621,7,"['log', 'test']","['logs', 'test', 'tested', 'tests']"
Testability,"A shortcut in the code returns empty values if there are no reads supporting the reference, but if an alt has no reads then the rank sum test from Apache Math returns NaN. Output for invalid rank sum test Z-scores should return null/empty rather than NaN. (Pipe-delimited raw annotations don't have to follow the VCF spec using `.` for missing.) This will involve updating a lot of exact match integration test results.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7512:137,test,test,137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7512,3,['test'],['test']
Testability,"A single site changed by a small amount in CNN score which was expected. (We weren't 100% sure we were testing any sites where downsampling would kick in, so this is good from a test coverage perspective. I think this is safe to include. I'm updating the test file and will push once tests pass locally.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5622#issuecomment-458765209:103,test,testing,103,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5622#issuecomment-458765209,4,['test'],"['test', 'testing', 'tests']"
Testability,"A user discovered it. I'm assuming they used the log messages. We could write a test that fails with a corrupt SBI index to prove that it breaks, but that seemed a bit convoluted.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6323#issuecomment-567094756:49,log,log,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6323#issuecomment-567094756,2,"['log', 'test']","['log', 'test']"
Testability,"A user gets an issue with the HDF5 library when running DenoiseReadCounts on an arm64 processor. We would like to create a fallback solution for this tool, since in this case the tool is not working with HDF5 files. This request was created from a contribution made by dbpiero on June 01, 2021 10:22 UTC. Link: [https://gatk.broadinstitute.org/hc/en-us/community/posts/360078197412-Error-running-DenoiseReadCounts-on-arm64-processor](https://gatk.broadinstitute.org/hc/en-us/community/posts/360078197412-Error-running-DenoiseReadCounts-on-arm64-processor). \--. If you are seeing an error, please provide(REQUIRED) : ; ; a) GATK version used: 4.2.0.0. b) Exact command used: gatk DenoiseReadCounts -I sample.counts.tsv --annotated-intervals annotated\_intervals.tsv --standardized-copy-ratios sample.standardizedCR.tsv --denoised-copy-ratios sample.denoisedCR.tsv. c) Entire error log: A USER ERROR has occurred: Cannot load the required HDF5 library. HDF5 is currently supported on x86-64 architecture and Linux or OSX systems. Dear Administrators,. I try to run DenoiseReadCounts on new apple silicon chip (M1) with arm64 architecture, but I got this error: A USER ERROR has occurred: Cannot load the required HDF5 library. HDF5 is currently supported on x86-64 architecture and Linux or OSX systems. I created a docker with ubuntu 20.04 to launch gatk and I have already installed libhdf5-103:arm64 library and hdf5-tools inside but launching DenoiseReadCounts i get the same error. Is there a way to solve this issue?. Thanks<br><br><i>(created from <a href='https://broadinstitute.zendesk.com/agent/tickets/161375'>Zendesk ticket #161375</a>)<br>gz#161375</i>",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7297:881,log,log,881,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7297,1,['log'],['log']
Testability,"A user running GenotypeGVCFs with a GenomicsDB ran into a new issue with 4.2.4.1. They were previously running 4.1.9.0. . Their complete program log is below: . This request was created from a contribution made by Andrius Jonas Dagilis on January 06, 2022 16:24 UTC. Link: [https://gatk.broadinstitute.org/hc/en-us/community/posts/360073212811-GenotypeGVCFs-stalls-while-using-all-sites#community\_comment\_4414746059419](https://gatk.broadinstitute.org/hc/en-us/community/posts/360073212811-GenotypeGVCFs-stalls-while-using-all-sites#community_comment_4414746059419). ```; Using GATK jar /nas/longleaf/apps/gatk/4.2.4.1/gatk-4.2.4.1/gatk-package-4.2.4.1-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx190g -jar /nas/longleaf/apps/gatk/4.2.4.1/gatk-4.2.4.1/gatk-package-4.2.4.1-local.jar GenotypeGVCFs -R /proj/matutelb/projects/drosophila/melanogaster/dmel6_ref.fasta -V gendb://all_mels_chr2L -L chr2L -O all_mels_chr2L.vcf.gz; 19:40:48.803 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/nas/longleaf/apps/gatk/4.2.4.1/gatk-4.2.4.1/gatk-package-4.2.4.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; Jan 13, 2022 7:40:50 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 19:40:50.088 INFO GenotypeGVCFs - ------------------------------------------------------------; 19:40:50.089 INFO GenotypeGVCFs - The Genome Analysis Toolkit (GATK) v4.2.4.1; 19:40:50.090 INFO GenotypeGVCFs - For support and documentation go to https://software.broadinstitute.org/gatk/; 19:40:50.102 INFO GenotypeGVCFs - Executing as adagilis@t0601.ll.unc.edu on Linux v3.10.0-1160.2.2.el7.x86_64 amd64; 19:40:50.103 INFO GenotypeGVCFs - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_292-b10; 19:40:50.103 INFO GenotypeGVCFs - Start Date/Tim",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7639:145,log,log,145,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7639,1,['log'],['log']
Testability,"A utility class to go from Read to SAMRecord, with an initial simple test.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/493:69,test,test,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/493,1,['test'],['test']
Testability,"A warning message would be helpful, although I doubt most Terra users read their logs unless there's an error. What are the chances this can get addressed in htsjdk?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7732#issuecomment-1074323858:81,log,logs,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7732#issuecomment-1074323858,1,['log'],['logs']
Testability,"A24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCallingCarrot.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCallingCarrot.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCallingCarrot.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkComparison.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""BenchmarkComparison.referenceVersion"": ""HG38"",; ""BenchmarkComparison.stratIntervals"": [; ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/exome_evaluation_",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510:2048,Benchmark,BenchmarkComparison,2048,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510,4,['Benchmark'],['BenchmarkComparison']
Testability,"AAGAACACATAGATGCATTTGGAAGCCAGTGTGGACGCCATGTGATCTGTGCCCACATATCACATGGCCGCTTTGGGATAGGGCCTGTCTGCCCATACTGGCTTCCAAACGCCTCTGTGTGTTCCTGTATGTGGGTGTGCACGTACCTGTCACATGTGTATGCACAGACCACAGGATGTCCACACTGGCTTCCAAATGCGTCTCTGTGTTCCTGTCTGTGAGTTCCAAATGTGTGCACACCTACAGACAGGAACATGGAAACACATTTGGAAGCCAGTGTGGACACCCTGTGATCTGTGCGTACACATGTGACACGTGCATGCACACCCACAGACAGGAACACAGAGACACATTTGGAAGCCAGTGTGGACGCCCTGTGATCTGTGCCCACACACATCACACGTGCATACACACCCACAGACAGGAACACAGAGACACATTTGGAAGCCAGTGTGGATGCCCTGTGATCTGTGTGTACACGTGACACGTGCGTACACACCCACATACAGGAACACAGCCACATTTGGAAGCCAGTGCAGACGCCCTGTGATCTGTGTGTACACATGTGACACGTGCGTGCACACTCACAGACAGGAACACAGAGACGCATTTGGAAGCCAGTGTGGACATCCTGTGGTCTGCGCGTACACATGTGACAGGTACGTGCACGCCCACATACAGGAACACACAGAGGCCTTTGGAAGCCAGCATGGGCAGACAGGCCCTATCCCAAAGCGGCC;SVLEN=1454;SVTYPE=CPX;TOTAL_MAPPINGS=1; ```. So the strategy taken in this branch is; * for the first two cases, re-interpretation is easy and done in this ""post-processing"" tool, and bare-bone annotated simple variants are given , annotated with `EVENT` that links the simple variants back to the complex variant; * for the last case, ; * re-collect the contigs that induced the CPX call, preprocess its alignment, then send the contig to the current pair-iteration algorithm for re-interpretation, the returned simple variants will be checked for consistency with the CPX variant that was induced by the same contig, and dropped if it is inconsistent (the two types of variants `<DEL>` and `<INV>`, are main concerns as they could easily stem from mis-interpretations of small dispersed duplications); then, ; * the CPX variants who have rejected re-interpreted simple variants will be analyzed one last time, to extract `<DEL>` and `<INV>`; ; * these variants will also be annotated with `EVENT` to link back to the CPX variants. Based on manual review, this salvages ~600 variants that would be dropped by evaluation scripts that would simply ignore the CPX variants. ---; Tests will be added if this strategy is given the green light (so no merging yet).",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4602:4805,Test,Tests,4805,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4602,1,['Test'],['Tests']
Testability,"AC:. While in a Notebook, I can run Hail 120 and I can specifically run the new vcf_combiner code; merge_alleles() works in the 120; and we must use array_elements_required=False in import_VCF to get around the missing data issue Dan pointed out; ![image](https://github.com/broadinstitute/gatk/assets/6863459/3da27122-8b6b-4bec-b785-55846e671cff). Hail version 120 has been pinned in the Integration test -- pinned!. Integration test with above pin has succeeded.; https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/a1c5e4c4-2058-4dad-8261-87b23c8bb0f3",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8502:401,test,test,401,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8502,2,['test'],['test']
Testability,ADAM ReadsSparkSinkUnitTest.loadReadsADAM test fails on NA12878.chr17_69k_70k.dictFix.bam,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1267:42,test,test,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1267,1,['test'],['test']
Testability,"ADAM has no header. I realize I'm only coming into the game rather late, but would it be possible to ditch `SAMRecord`? Since you're already using Google `Read`-backed data as well, instead of writing against an interface (`GATKRead`), you could simply come up with your own, more-awesome concrete data structure. (Perhaps even an Avro `SpecificRecord` a la `AlignmentRecord`). In cases where ADAM wants a header back, at the moment it actually runs an aggregation across all the reads to rebuild it. (I'm trying to add a patch that allows you to specify a header, though, because it's breaking a hellbender test for reading/writing parquet.)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/900#issuecomment-140990644:608,test,test,608,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/900#issuecomment-140990644,1,['test'],['test']
Testability,ADAM test fails on CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam and NA12878.chr17_69k_70k.dictFix.bam,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1254:5,test,test,5,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1254,1,['test'],['test']
Testability,"AD_FOR_SAMTOOLS : false; 10:19:39.337 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 10:19:39.337 INFO GenomicsDBImport - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 10:19:39.337 INFO GenomicsDBImport - Deflater: IntelDeflater; 10:19:39.337 INFO GenomicsDBImport - Inflater: IntelInflater; 10:19:39.337 INFO GenomicsDBImport - GCS max retries/reopens: 20; 10:19:39.338 INFO GenomicsDBImport - Requester pays: disabled; 10:19:39.338 INFO GenomicsDBImport - Initializing engine; 10:19:39.489 INFO IntervalArgumentCollection - Processing 100 bp from intervals; 10:19:39.490 INFO GenomicsDBImport - Done initializing engine; 10:19:39.948 INFO GenomicsDBLibLoader - GenomicsDB native library version : 1.4.4-ce4e1b9; 10:19:39.951 INFO GenomicsDBImport - Vid Map JSON file will be written to /home/test/Software/gatk-4.4.0.0/test/./02/vidmap.json; 10:19:39.951 INFO GenomicsDBImport - Callset Map JSON file will be written to /home/test/Software/gatk-4.4.0.0/test/./02/callset.json; 10:19:39.951 INFO GenomicsDBImport - Complete VCF Header will be written to /home/test/Software/gatk-4.4.0.0/test/./02/vcfheader.vcf; 10:19:39.951 INFO GenomicsDBImport - Importing to workspace - /home/test/Software/gatk-4.4.0.0/test/./02; 10:19:40.060 INFO GenomicsDBImport - Importing batch 1 with 2 samples; 10:19:40.075 INFO GenomicsDBImport - Shutting down engine; org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 0.01 minutes.; Runtime.totalMemory()=285212672; java.lang.NumberFormatException: For input string: ""G""; 	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67); 	at java.base/java.lang.Integer.parseInt(Integer.java:668); 	at java.base/java.lang.Integer.parseInt(Integer.java:786); 	at htsjdk.tribble.readers.TabixReader.getIntv(TabixReader.java:337); 	at htsjdk.tribble.readers.TabixReader.access$500(TabixReader.java:48); 	at htsjdk.tribble.readers.TabixReader$IteratorImpl.next(TabixRea",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8517:2648,test,test,2648,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8517,1,['test'],['test']
Testability,"AFPriorProviderUnitTest.java:37 compared doubles by strict equality which is not the right way. It should use the `TOLERANCE` (equal to `0.0001`) eg change . ```; Assert.assertEquals(priors[j], Math.log10(het) - Math.log10(j)); ```. to. ```; Assert.assertEquals(priors[j], Math.log10(het) - Math.log10(j), TOLERANCE); ```. @frank-y-liu can you make this change and see it if fixed your problem? If yes, can you contribute a fix?",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1536:163,Assert,Assert,163,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1536,4,"['Assert', 'assert']","['Assert', 'assertEquals']"
Testability,AMTOOLS : false; 10:24:14.186 INFO Funcotator - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 10:24:14.186 INFO Funcotator - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 10:24:14.186 INFO Funcotator - Deflater: IntelDeflater; 10:24:14.186 INFO Funcotator - Inflater: IntelInflater; 10:24:14.186 INFO Funcotator - GCS max retries/reopens: 20; 10:24:14.186 INFO Funcotator - Using google-cloud-java patch 6d11bef1c81f885c26b2b56c8616b7a705171e4f from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 10:24:14.187 WARN Funcotator -. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. Warning: Funcotator is a BETA tool and is not yet ready for use in production. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. 10:24:14.187 INFO Funcotator - Initializing engine; 10:24:15.574 INFO FeatureManager - Using codec VCFCodec to read file file:///omics/chatchawit/sm/out/sample21.vcf; 10:24:15.701 INFO Funcotator - Done initializing engine; log4j:WARN No appenders could be found for logger (org.broadinstitute.hellbender.tools.funcotator.dataSources.DataSourceUtils).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 10:24:15.728 INFO FeatureManager - Using codec VCFCodec to read file file:///omics/chatchawit/bundle/dsrc/dbsnp/hg38/hg38_All_20170710.vcf.gz; 10:24:15.884 INFO FeatureManager - Using codec XsvLocatableTableCodec to read file file:///omics/chatchawit/bundle/dsrc/oreganno/hg38/oreganno.tsv; 10:24:15.945 INFO FeatureManager - Using codec GencodeGtfCodec to read file file:///omics/chatchawit/bundle/dsrc/gencode/hg38/gencode.v27.chr_patch_hapl_scaff.annotation.REORDERED.gtf; WARNING 2018-04-28 10:24:17 AsciiLineReader Creating an indexable source for an AsciiFeatureCodec using a stream that is neither a PositionalBufferedStream nor a BlockCompressedInputStream; 10:24:29.369 INFO ProgressMeter - Starting traversal; 10:24:29.370 ,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-385137363:2830,log,logger,2830,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4712#issuecomment-385137363,1,['log'],['logger']
Testability,ASAnnotation.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.chr20snippet.g.unindexed.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.InsertSizeRankSum.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.MateRankSum.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.MateRankSum.chr20snippet.withoutIndex.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12891.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12892.AS.chr20snippet.g.unsorted.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12892.AS.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12892.AS.InsertSizeRankSum.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12892.AS.MateRankSum.chr20snippet.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12892.AS.MateRankSum.chr20snippet.withoutIndex.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/VariantAnnotatorEngine/one_entry_source.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/combine-gvcf-wrong-ref-input1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/combine-gvcf-wrong-ref-input2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/convertToBasePairResolution.vcf.idx; src/test/resources/org/broadinstitut,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:48116,test,test,48116,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"ATION_STRINGENCY STRICT --COMPRESSION_LEVEL 2 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --GA4GH_CLIENT_SECRETS client_secrets.json --help false --version false --showHidden false --USE_JDK_DEFLATER false --USE_JDK_INFLATER false; Aug 10, 2023 12:49:43 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; [Thu Aug 10 12:49:43 UTC 2023] Executing as root@34684eaa046e on Linux 4.15.0-208-generic amd64; OpenJDK 64-Bit Server VM 1.8.0_191-8u191-b12-0ubuntu0.16.04.1-b12; Deflater: Intel; Inflater: Intel; Provider GCS is available; Picard version: Version:4.1.3.0; [Thu Aug 10 12:49:43 UTC 2023] picard.analysis.artifacts.CollectSequencingArtifactMetrics done. Elapsed time: 0.03 minutes.; Runtime.totalMemory()=2076049408; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; htsjdk.samtools.SAMException: Cannot read non-existent file: file:///gatk/data/Continuum/WES/vcf/NG-27280_CLTSS_LTS_001A_lib506241_7636_2_MarkedDup.bam; at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:483); at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:470); at picard.analysis.SinglePassSamProgram.makeItSo(SinglePassSamProgram.java:95); at picard.analysis.SinglePassSamProgram.doWork(SinglePassSamProgram.java:84); at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:305); at org.broadinstitute.hellbender.cmdline.PicardCommandLineProgramExecutor.instanceMain(PicardCommandLineProgramExecutor.java:25); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:162); at org.broadinstitute.hellbender.Main.mainEntry(Main.java:205); at org.broadinstitute.hellbender.Main.main(Main.java:291); (gatk) root@34684eaa046e:/gatk/data/Continuum/WES/vcf# ls; GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.gz; (gatk) root@34684eaa046e:/gatk/data/Continuum/WES/vcf# ; ```; Please help me; Thanks",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8462:2329,assert,assertFileIsReadable,2329,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8462,2,['assert'],['assertFileIsReadable']
Testability,ATKTool.doWork(GATKTool.java:1064); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:140); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:[192](https://github.com/broadinstitute/gatk/actions/runs/5547450688/jobs/10131043668#step:12:192)); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:211); at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:160); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:146); at org.broadinstitute.hellbender.Main.instanceMain(Main.java:187); at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:27); at org.broadinstitute.hellbender.testutils.CommandLineProgramTester.runCommandLine(CommandLineProgramTester.java:111); at org.broadinstitute.hellbender.tools.walkers.rnaseq.SplitNCigarReadsIntegrationTest.testLargeFileThatForcesSnappyUsage(SplitNCigarReadsIntegrationTest.java:85); Caused by:; htsjdk.samtools.util.RuntimeIOException: Write error; BinaryCodec in writemode; streamed file (filename not available); at htsjdk.samtools.util.BinaryCodec.writeBytes(BinaryCodec.java:222); at htsjdk.samtools.util.BlockCompressedOutputStream.writeGzipBlock(BlockCompressedOutputStream.java:444); at htsjdk.samtools.util.BlockCompressedOutputStream.deflateBlock(BlockCompressedOutputStream.java:408); at htsjdk.samtools.util.BlockCompressedOutputStream.write(BlockCompressedOutputStream.java:301); at htsjdk.samtools.util.BinaryCodec.writeBytes(BinaryCodec.java:220); at htsjdk.samtools.util.BinaryCodec.writeBytes(BinaryCodec.java:212); at htsjdk.samtools.BAMRecordCodec.encode(BAMRecordCodec.java:168); at htsjdk.samtools.BAMFileWriter.writeAlignment(BAMFileWriter.java:134); ... 15 more; Caused by:; java.io.IOException: No space left on device; at sun.nio.ch.FileDispatcherImpl.write0(Native Method); at sun.nio.ch.FileDispatcherImpl.write(Fi,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8404#issuecomment-1635002002:1912,test,testLargeFileThatForcesSnappyUsage,1912,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8404#issuecomment-1635002002,1,['test'],['testLargeFileThatForcesSnappyUsage']
Testability,"ATKTool.java:1048). at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139). at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.java:191). at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:210). at org.broadinstitute.hellbender.Main.runCommandLineProgram(Main.java:163). at org.broadinstitute.hellbender.Main.instanceMain(Main.java:149). at org.broadinstitute.hellbender.Main.instanceMain(Main.java:190). at org.broadinstitute.hellbender.CommandLineProgramTest.runCommandLine(CommandLineProgramTest.java:27). at org.broadinstitute.hellbender.testutils.CommandLineProgramTester.runCommandLine(CommandLineProgramTester.java:111). at org.broadinstitute.hellbender.tools.walkers.GnarlyGenotyperIntegrationTest.runTool(GnarlyGenotyperIntegrationTest.java:93). at org.broadinstitute.hellbender.tools.walkers.GnarlyGenotyperIntegrationTest.testUsingGenomicsDB(GnarlyGenotyperIntegrationTest.java:70). Caused by:. java.lang.IllegalStateException: Number of AS_QUALapprox values doesn't match the number of alleles in the variant context. at org.broadinstitute.hellbender.tools.walkers.annotator.allelespecific.AS_QualByDepth.parseQualList(AS_QualByDepth.java:235). at org.broadinstitute.hellbender.tools.walkers.annotator.allelespecific.AS_QualByDepth.finalizeRawData(AS_QualByDepth.java:143). at org.broadinstitute.hellbender.tools.walkers.gnarlyGenotyper.GnarlyGenotyperEngine.finalizeGenotype(GnarlyGenotyperEngine.java:121). ... 26 more; ```. ```; Gradle suite > Gradle test > org.broadinstitute.hellbender.tools.walkers.GenotypeGVCFsIntegrationTest > testEntireVariantContext[21](/gatkCloneMountPoint/src/test/resources/org/broadinstitute/hellbender/tools/walkers/annotator/allelespecific/NA12878.AS.chr20snippet.g.vcf, src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/AS_Annotations.keepRawCombined.expected.vcf, [-A, ClippingRankSum",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539518973:3028,test,testUsingGenomicsDB,3028,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6079#issuecomment-539518973,1,['test'],['testUsingGenomicsDB']
Testability,Abandon SamFileTester in favor of ArtificialSAMUtils for unit tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/211:62,test,tests,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/211,1,['test'],['tests']
Testability,"About 3% of our GATK 4.0.0.0 GenotypeGVCFs runs (with a GenomicsDB as input) are failing with a `__pthread_tpp_change_priority` error and exiting with status -6. The stderr of such a run ends like this:; ```; 2018-03-10T07:14:27.165578644Z GENOMICSDB_TIMER,GenomicsDB iterator next() timer,Wall-clock time(s),74.01474455399772,Cpu time(s),62.96424693700022; 2018-03-10T07:14:27.168329699Z java: tpp.c:84: __pthread_tpp_change_priority: Assertion `new_prio == -1 || (new_prio >= fifo_min_prio && new_prio <= fifo_max_prio)' failed.; ```. Stdout from the same run:; ```; 2018-03-09T13:13:41.095913747Z 13:13:41.095 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/gatk/gatk.jar!/com/intel/gkl/native/libgkl_compression.so; 2018-03-09T13:13:41.329888610Z 13:13:41.327 INFO GenotypeGVCFs - ------------------------------------------------------------; 2018-03-09T13:13:41.329934964Z 13:13:41.327 INFO GenotypeGVCFs - The Genome Analysis Toolkit (GATK) v4.0.0.0; 2018-03-09T13:13:41.329942970Z 13:13:41.327 INFO GenotypeGVCFs - For support and documentation go to https://software.broadinstitute.org/gatk/; 2018-03-09T13:13:41.329952404Z 13:13:41.328 INFO GenotypeGVCFs - Executing as root@localhost on Linux v4.4.0-112-generic amd64; 2018-03-09T13:13:41.329960555Z 13:13:41.328 INFO GenotypeGVCFs - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_151-8u151-b12-1~deb9u1-b12; 2018-03-09T13:13:41.329988865Z 13:13:41.328 INFO GenotypeGVCFs - Start Date/Time: March 9, 2018 1:13:41 PM UTC; 2018-03-09T13:13:41.329995417Z 13:13:41.328 INFO GenotypeGVCFs - ------------------------------------------------------------; 2018-03-09T13:13:41.330000910Z 13:13:41.328 INFO GenotypeGVCFs - ------------------------------------------------------------; 2018-03-09T13:13:41.330011002Z 13:13:41.328 INFO GenotypeGVCFs - HTSJDK Version: 2.13.2; 2018-03-09T13:13:41.330022980Z 13:13:41.328 INFO GenotypeGVCFs - Picard Version: 2.17.2; 2018-03-09T13:13:41.330030226Z 13:13:41.329 INFO GenotypeGVCFs - ",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4518:436,Assert,Assertion,436,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4518,1,['Assert'],['Assertion']
Testability,"AccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:497); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); ```. #### Steps to reproduce; These are the arguments I used (the input bam is on the file system):. ```; final String[] args = {; ""-I"", ""/humgen/gsa-hpprojects/dev/mshand/SpecOps/Mitochondria/Filtering/IGV/198489_vs_811158/sorted.mt.1.bam"",; ""-"" + M2ArgumentCollection.TUMOR_SAMPLE_SHORT_NAME, ""198489"",; ""-R"", ""/humgen/gsa-hpprojects/dev/mshand/SpecOps/Mitochondria/MitochondriaOnlyFastas/Homo_sapiens_assembly38.mt_only.fasta"",; ""-O"", outputVcf.getAbsolutePath(),; ""--max-reads-per-alignment-start"", ""0"",; ""-default-af"", ""0"",; ""--initial-tumor-lod"", ""0"",; ""--tumor-lod-to-emit"", ""0"",; ""--min-p",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5036:4324,test,testng,4324,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5036,1,['test'],['testng']
Testability,AccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 	at org.g,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2797:2105,test,testng,2105,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2797,3,['test'],['testng']
Testability,AccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35); 	at org.g,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:1742,test,testng,1742,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,1,['test'],['testng']
Testability,"AccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); Caused by: com.intel.genomicsdb.GenomicsDBException: Could not load genomicsdb native library; 	at com.intel.genomicsdb.GenomicsDBImporter.<clinit>(GenomicsDBImporter.java:72); 	... 37 more; ```. if you dig into it more you get down to the following error:; ```; /private/var/folders/xt/vq7wz8955r1401mv8w0f4zf9qbfwzl/T/libtiledbgenomicsdb6159269479234619546.dylib: dlopen(/private/var/folders/xt/vq7wz8955r1401mv8w0f4zf9qbfwzl/T/libtiledbgenomicsdb6159269479234619546.dylib, 1): ; Library not loaded: /opt/local/lib/libuuid.16.dylib; Referenced from: /private/var/folders/xt/vq7wz8955r1401mv8w0f",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4062:2596,test,testng,2596,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4062,1,['test'],['testng']
Testability,"Accidentally killing the testng jvm with the system.exit(), will solve at some point, don't merge yet.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/343#issuecomment-88169541:25,test,testng,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/343#issuecomment-88169541,1,['test'],['testng']
Testability,Accidentally turned off 3 Gnarly tests that didn't get run since #8741,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8892:33,test,tests,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8892,1,['test'],['tests']
Testability,"According to https://tools.ietf.org/html/rfc3986#section-2, there are many disallowed characters in URIs that we could use as a delimiter for logical name, like |. This would be a syntax change vs. GATK3, however.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2000#issuecomment-232475025:142,log,logical,142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2000#issuecomment-232475025,1,['log'],['logical']
Testability,"Ack, I didn't realize we had this already. I recently added `IOUtils.assertFileIsReadable` which is a slight variant of this. Could whoever does this unify these two? Honestly, boh names are a bit verbose. Maybe `Utils.canRead()` would be a better name?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2145#issuecomment-245112859:69,assert,assertFileIsReadable,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2145#issuecomment-245112859,1,['assert'],['assertFileIsReadable']
Testability,"Actually, I think Hadoop-BAM _will_ pick up the local htsjdk, since I've had problems in the past due to the fact that Hadoop-BAM is built with an older version of htsjdk than GATK is, but it runs with the (usually newer) version provided by GATK. But either way for this test it shouldn't matter.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1657#issuecomment-209070951:272,test,test,272,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1657#issuecomment-209070951,1,['test'],['test']
Testability,"Actually, I think I can add all my changes to this one pull request and tests should pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3835#issuecomment-344407486:72,test,tests,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3835#issuecomment-344407486,1,['test'],['tests']
Testability,"Actually, I think this is intended behavior, according to the current tests. If there is no targets file, the tool will attempt to get target names from the read-count file and then fail if they are missing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3017#issuecomment-335618994:70,test,tests,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3017#issuecomment-335618994,1,['test'],['tests']
Testability,"Actually, I'm going to go ahead and add some exact match tests to guard against this sort of thing. Behavior for key somatic CNV tool modules (i.e., kernel segmentation and MCMC) is unit tested to within statistical noise (so, not exact match) on simulated data, but most integration tests just check for plumbing and not correctness. The idea was always that this sort of thing would be covered by what eventually became CARROT, since such tests would probably have to be long running and require more resources than are available in the repo to be useful. See the high priority but long dormant issues https://github.com/broadinstitute/gatk/issues/4122 and https://github.com/broadinstitute/gatk/issues/4123, as well as https://github.com/broadinstitute/gatk/issues/4630. In fact, I think the original idea was that Lee's validation would be the first to go into CARROT. Note also that I did some work to set up transition of all existing CNV tests (also including the somatic CNV validation against TCGA SNP calls that I put together on Terra) before going on leave and moving off CNVs, but during all that, we managed to 1) lose TCGA access, 2) delete the test files on which Lee based his validation after he left, and 3) reassign at least one of the people that was going to help with the transition. Again, the resulting differences here are minor and it's unlikely that future non-CNV code changes will have similar effects, since the CNV code is relatively well encapsulated, but the exact-match checks will hopefully give us some peace of mind until CARROT tests are ready. @jonn-smith @KevinCLydon looping you in just in case you're not aware of all of this history. Would love to chat about where CARROT is at and where you'd like it to go---feel free to ping me anytime!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7649#issuecomment-1023354175:57,test,tests,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7649#issuecomment-1023354175,7,['test'],"['test', 'tested', 'tests']"
Testability,"Actually, if you have the time, an even more valuable test would be to repeat your comparison with latest master vs. a rebased copy of this branch onto latest master. That would tell us whether the performance difference you saw is due to the downsampling, or due to the differences in the traversal code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-330921307:54,test,test,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-330921307,1,['test'],['test']
Testability,"Actually, ignore that previous comment. It would completely break the tests. They're singletons in the ""there can only be one at at time"" sense, since they will all share the same value, but not in the sense that it's ok to initialize them only once. we could provide a factory function for them instead though. It seems awkward to have so many individual trivial classes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/440#issuecomment-96825236:70,test,tests,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/440#issuecomment-96825236,1,['test'],['tests']
Testability,"Actually, is `gatk` even in the `PATH` of the Docker image? (If not, this is why tests are now failing.) Should we add it? Otherwise, should we instead launch with `/gatk/gatk` in the WDLs and require they be used with the Docker?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4071#issuecomment-355862387:81,test,tests,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4071#issuecomment-355862387,1,['test'],['tests']
Testability,"Actually, is the reshape dependency even required for AnalyzeCovariates? If not, we should just remove the import statement from BQSR.R. In any case, we should still add a test to cover plotting. @droazen can you delegate this?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5022#issuecomment-405647323:172,test,test,172,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5022#issuecomment-405647323,1,['test'],['test']
Testability,Adam moved the code for SplitNCigarReads and all supporting utils over.; I've updated the tests so that they all use a small snippet of the reference instead of the entire hg19 (hg19mini.fasta),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/91:90,test,tests,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/91,1,['test'],['tests']
Testability,Add CARROT GitHub Action to support running CARROT tests from PRs,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6916:51,test,tests,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6916,1,['test'],['tests']
Testability,Add CRAM integration tests for HaplotypeCaller.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3681:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3681,1,['test'],['tests']
Testability,Add ExampleReadWalkerWithVariantsSpark.java and tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5289:48,test,tests,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5289,1,['test'],['tests']
Testability,Add GATKTool unit test for picard interval lists.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3827:18,test,test,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3827,1,['test'],['test']
Testability,Add GCS-NIO basic unit test,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1662:23,test,test,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1662,1,['test'],['test']
Testability,Add HC/Mutect2 integration tests for --min-base-quality-score,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4136:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4136,1,['test'],['tests']
Testability,Add NIO test that accesses public GCS data while not being authenticated,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5340:8,test,test,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5340,1,['test'],['test']
Testability,Add PathLineIterator and test,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3801:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3801,1,['test'],['test']
Testability,Add PrintReadsSpark tests that write to a GCS bucket,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3097:20,test,tests,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3097,1,['test'],['tests']
Testability,Add R group to integration tests that use R.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/752:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/752,2,['test'],['tests']
Testability,Add Spark tests to travis matrix,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/551:10,test,tests,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/551,1,['test'],['tests']
Testability,Add Spark tests to travis matrix. Addresses #551.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/596:10,test,tests,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/596,1,['test'],['tests']
Testability,Add a GCS and Hadoop test to ReadsDataflowSourceTest,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/686:21,test,test,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/686,1,['test'],['test']
Testability,Add a GCS and Hadoop tests to ReadsDataflowSourceTest,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/666:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/666,1,['test'],['tests']
Testability,Add a RefAPISource test for a query on an interval that starts on the contig and runs off of it,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/698:19,test,test,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/698,1,['test'],['test']
Testability,Add a VQSR multi-tranche test.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2286:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2286,1,['test'],['test']
Testability,Add a VQSR test that includes user-specified tranches (inspired by https://github.com/broadinstitute/gatk/issues/2276).,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2286:11,test,test,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2286,1,['test'],['test']
Testability,Add a dependency to the official NIO jar and include tests for gcloud-java-nio. This is based on the earlier NIO example. Now that NIO support is official we can move this test to our main branch. CC: @lbergelson @droazen,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1994:53,test,tests,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1994,2,['test'],"['test', 'tests']"
Testability,Add a dependency to the official NIO jar and include tests for gcloud-java-nio. This is based on the earlier NIO example. Now that NIO support is official we can move this test to our main branch. I'm resubmitting this as a branch from broadinstitute/ directly so (hopefully) the Travis cloud tests will run. CC: @lbergelson @droazen,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2013:53,test,tests,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2013,3,['test'],"['test', 'tests']"
Testability,Add a few more tests to ModelSegments pipeline.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3916:15,test,tests,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3916,1,['test'],['tests']
Testability,Add a github bot to post link to the TestNG test reports in PRs,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6234:37,Test,TestNG,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6234,2,"['Test', 'test']","['TestNG', 'test']"
Testability,Add a method BaseTest.getAuthenticatedPipelineOptions() useful for bucket-based unit tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/742:85,test,tests,85,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/742,1,['test'],['tests']
Testability,Add a read/write roundtrip Spark integration test for a CRAM and reference on HDFS.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6618:45,test,test,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6618,1,['test'],['test']
Testability,"Add a test that validates than an ambiguous interval query can be disambiguated by the user by providing the interval in a bed file; changes the error message to recommend this alternative; fixes an issue where the error message was displaying the entire interval query multiple times, rather than the specific contigs which make the query ambiguous.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4183:6,test,test,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4183,1,['test'],['test']
Testability,Add a test to validate WDLs in the scripts directory.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7826:6,test,test,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7826,1,['test'],['test']
Testability,"Add a version of `createSAMWriter` that takes in a `Path` so we can work with NIO for output. This allows PrintReads to write its output to a cloud bucket. Tested like this:; ```; $ ./gatk-launch PrintReads -I gs://$MYBUCKET/CEUTrio.HiSeq.WEx.b37.NA12892.bam -L 10:1000000-2000000 -O gs://$MYBUCKET/pr.bam; $ gsutil cp gs//$MYBUCKET/pr.bam .; $ samtools view pr.bam | md5sum; c7f41be91031bea6d28d59d40b54f304 -; ```. This MD5 matches the expected output for this command. Once we agree this is the correct way forward, I should go ahead and change all of the other tools similarly. This PR is part of addressing #2422",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558:156,Test,Tested,156,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558,1,['Test'],['Tested']
Testability,Add ability to log to file,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2751:15,log,log,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2751,1,['log'],['log']
Testability,Add ability to use the is_loaded column to get the samples for training.; log job id; break up vet to vet_new queries; [VS-165]; [VS-166]; [VS-167]. [VS-165]: https://broadworkbench.atlassian.net/browse/VS-165; [VS-166]: https://broadworkbench.atlassian.net/browse/VS-166; [VS-167]: https://broadworkbench.atlassian.net/browse/VS-167,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7434:74,log,log,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7434,1,['log'],['log']
Testability,"Add additional integration tests for BaseRecalibratorSpark that use --joinStrategy BROADCAST, now that it's going to be the default",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1140:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1140,1,['test'],['tests']
Testability,"Add additional validation around duplicated rows in the VAT; <img width=""1418"" alt=""duplicate_AN_or_AC_values"" src=""https://user-images.githubusercontent.com/6863459/220667710-a416ab64-4f9b-475b-9268-ef7b86bfa81e.png"">. This has a successful run (except for one failure that is because it's being run on way less data); https://job-manager.dsde-prod.broadinstitute.org/jobs/07ddde58-ac0d-4229-9f96-d093f5c11682; The failed test is:; SpotCheckForAAChangeAndExonNumberConsistency. Perhaps we want to update this to not run this test if there are less than 10k samples?; Yes we do:; Here's the ticket for that:; https://broadworkbench.atlassian.net/browse/VS-878",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8175:423,test,test,423,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8175,2,['test'],['test']
Testability,Add an ADAM-formatted file for testing,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1067:31,test,testing,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1067,1,['test'],['testing']
Testability,Add an initial stub end-to-end integration test for the ReadsPreProcessingPipeline,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/772:15,stub,stub,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/772,2,"['stub', 'test']","['stub', 'test']"
Testability,Add argument to log to file that captures logging output from all dependencies,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3587:16,log,log,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3587,2,['log'],"['log', 'logging']"
Testability,Add benchmark exome run details [VS-1005],MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8532:4,benchmark,benchmark,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8532,1,['benchmark'],['benchmark']
Testability,Add better integration tests to HaplotypeCaller for less-common arguments,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7632:23,test,tests,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7632,1,['test'],['tests']
Testability,Add better tests and re-evaluate Pileup-Caller support for Mutect2,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8242:11,test,tests,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8242,1,['test'],['tests']
Testability,"Add better tests for the Spark ""walker"" classes",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5276:11,test,tests,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5276,1,['test'],['tests']
Testability,Add default tool header information to the output of PostprocessGermlineCNVCalls and update the integration test accordingly,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4267:108,test,test,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4267,1,['test'],['test']
Testability,Add full-sized B37 and HG38 references to our large test data,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5309:52,test,test,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5309,1,['test'],['test']
Testability,Add gcs-connector for Spark unit tests running locally,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3159:33,test,tests,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3159,1,['test'],['tests']
Testability,Add good integration test for GCS -L and -R support,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4102:21,test,test,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4102,1,['test'],['test']
Testability,Add good integration tests for BwaSpark,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2523:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2523,1,['test'],['tests']
Testability,Add hap.py/som.py benchmarking results to docs for each release,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/9019:18,benchmark,benchmarking,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/9019,1,['benchmark'],['benchmarking']
Testability,Add integration test for BGE samples [VS-1225],MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8920:16,test,test,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8920,1,['test'],['test']
Testability,Add integration test that checks filtering for CreatePanelOfNormals for rounding.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3181:16,test,test,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3181,1,['test'],['test']
Testability,Add integration test using -maxNumPLValues for GenotypeGVCFs,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1895:16,test,test,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1895,1,['test'],['test']
Testability,Add integration tests for GCS support in VariantWalkers,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2396:16,test,tests,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2396,2,['test'],['tests']
Testability,Add integration tests for correctness for DetermineGermlineContigPloidy and GermlineCNVCaller.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4375:16,test,tests,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4375,1,['test'],['tests']
Testability,Add integration tests in Funcotator for out of bounds variants,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7523:16,test,tests,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7523,1,['test'],['tests']
Testability,Add integration tests showing that bai-indexed traversal by intervals on cram files works,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/860:16,test,tests,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/860,1,['test'],['tests']
Testability,Add is_loaded column to sample_info and logic to populate after ingest [VS-158],MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7389:40,log,logic,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7389,1,['log'],['logic']
Testability,"Add large files for testing, tracked using git-lfs",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/839:20,test,testing,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/839,1,['test'],['testing']
Testability,Add logging export to VDS creation VS 1139,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8583:4,log,logging,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8583,1,['log'],['logging']
Testability,Add malaria spanning deletion exception regression test with fix,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8802:51,test,test,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8802,1,['test'],['test']
Testability,Add more sensitive tests to HaplotypeCallerSpark,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4302:19,test,tests,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4302,1,['test'],['tests']
Testability,"Add more test cases for the errors seen in issue #6289 . Specifically we should add both more unit tests and integration tests. One variant that should be added in integration tests is the following:; ```; ##fileformat=VCFv4.1; ##contig=<ID=chr9,length=138394717>; ##FORMAT=<ID=GT,Number=1,Type=String,Description=""Genotype"">; #CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	Sample; chr9	67726241	.	TCA	TCACACA,TCACACACA	182	PASS	.	GT	./.; ```. The issue with adding more tests is that we don't have the full Funcotator datasources in our `git-lfs` repo because of size concerns. To add tests we'll need to add more intervals to our datasources to support the variants' loci, or create variants in the regions we already cover.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7523:9,test,test,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7523,6,['test'],"['test', 'tests']"
Testability,Add more testing for create_genes_bqloadjson_from_annotations and create_vt_bqloadjson_from_annotations,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8137:9,test,testing,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8137,1,['test'],['testing']
Testability,"Add new scripts to gatk/scripts/sv/ folder, and alter action (but not; passed parameters) of older scripts to make running sv spark jobs; more convenient.; Added:; -copy_sv_results.sh: copy files to time and git-stamped folder on; google cloud storage; -> results folder on cluster; -> command line arguments to SV discover pipeline; -> console log file (if present). -manage_sv_pipeline.sh: create cluster, run job, copy results, and; delete cluster. Manage cluster naming, time and git-stamping,; and log file production. Altered:; -create_cluster.sh: control GCS zone and numbers of workers via; environmental variables. Defaults to previous hard-coded values. -runWholePipeline.sh: accept command-line arguments for sv; discovery pipeline, work with clusters having NUM_WORKERS != 10",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3370:345,log,log,345,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3370,2,['log'],['log']
Testability,Add official nio and test,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1994:21,test,test,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1994,1,['test'],['test']
Testability,Add official nio and test (with Travis test this time hopefully),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2013:21,test,test,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2013,2,['test'],['test']
Testability,Add option to run Spark tests only,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3377:24,test,tests,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3377,1,['test'],['tests']
Testability,"Add path support, and test.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4424:22,test,test,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4424,1,['test'],['test']
Testability,Add smoke tests for sparkJar / shadowJar,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2844:10,test,tests,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2844,1,['test'],['tests']
Testability,Add table size check to quickstart integration test [VS-501],MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7970:47,test,test,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7970,1,['test'],['test']
Testability,Add test coverage requirements for hellbender tools to README,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/382:4,test,test,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/382,1,['test'],['test']
Testability,Add test covering --missingValuesInExpressionsShouldEvaluateAsFailing in VariantFiltration,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2303:4,test,test,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2303,1,['test'],['test']
Testability,Add test for DataProvider failures,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3619:4,test,test,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3619,1,['test'],['test']
Testability,Add test for index query on CRAM from Path.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4916:4,test,test,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4916,1,['test'],['test']
Testability,Add test illustrating GenotypeGVCFs/forceoutput N issue,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7018:4,test,test,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7018,1,['test'],['test']
Testability,Add test of Java 11 shadow jar.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7346:4,test,test,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7346,1,['test'],['test']
Testability,Add tests for AlleleSubsettingUtils,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2158:4,test,tests,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2158,1,['test'],['tests']
Testability,Add tests for CollectGcBiasMetrics,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1133:4,test,tests,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1133,1,['test'],['tests']
Testability,Add tests for Funcotator indel protein change strings consistency with MAF and VCF,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3842:4,test,tests,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3842,1,['test'],['tests']
Testability,Add tests for SortSam,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/210:4,test,tests,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/210,1,['test'],['tests']
Testability,Add tests for all branches in WellformedReadFilter,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/271:4,test,tests,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/271,1,['test'],['tests']
Testability,Add tests for different dup scoring strategies to AbstractMarkDuplicatesCommandLineProgramTest,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1245:4,test,tests,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1245,1,['test'],['tests']
Testability,Add tests for the Dataflow Mark Duplicates by running the existing Mark Duplicates tests on the Dataflow code.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/798:4,test,tests,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/798,2,['test'],['tests']
Testability,Add tests to CPX variants in SV pipeline and fixing bugs,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4330:4,test,tests,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4330,1,['test'],['tests']
Testability,Add tests to GermlineCNVCallerIntegrationTest,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6893:4,test,tests,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6893,1,['test'],['tests']
Testability,Add that check that all the contigs match (and are not null which is an option for Locatables) and address adam's remaining comments and then it's good to merge. Thanks for the in depth tests.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/892#issuecomment-140805521:186,test,tests,186,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/892#issuecomment-140805521,1,['test'],['tests']
Testability,Add the ability to log to file,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2728:19,log,log,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2728,1,['log'],['log']
Testability,"Add the ability to tag (assign logical names to) inputs (eg., -I:tumor tumor.bam). Needed by https://github.com/broadinstitute/hellbender/issues/93",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/94:31,log,logical,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/94,1,['log'],['logical']
Testability,"Add the gcs-connector as a GATK dependency, and write a test showing that GCS access with the Spark local runner works",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3125:56,test,test,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3125,1,['test'],['test']
Testability,Add unit tests for AddOrReplaceReadGroups,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/198:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/198,1,['test'],['tests']
Testability,Add unit tests for BamIndexStats,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/199:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/199,1,['test'],['tests']
Testability,Add unit tests for BuildBamIndex,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/200:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/200,1,['test'],['tests']
Testability,Add unit tests for CalculateReadGroupChecksum,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/201:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/201,1,['test'],['tests']
Testability,Add unit tests for CheckTerminatorBlock,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/202:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/202,1,['test'],['tests']
Testability,Add unit tests for CopyNumberArgumentValidationUtils.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5749:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5749,1,['test'],['tests']
Testability,Add unit tests for DownsampleSam,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/203:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/203,1,['test'],['tests']
Testability,Add unit tests for EstimateLibraryComplexity,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/204:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/204,1,['test'],['tests']
Testability,Add unit tests for FilterReads,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/205:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/205,1,['test'],['tests']
Testability,Add unit tests for FixMateInformation,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/206:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/206,1,['test'],['tests']
Testability,Add unit tests for ReorderSam,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/207:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/207,1,['test'],['tests']
Testability,Add unit tests for ReplaceSamHeader,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/208:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/208,1,['test'],['tests']
Testability,Add unit tests for RevertOriginalBaseQualitiesAndAddMateCigar,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/209:9,test,tests,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/209,1,['test'],['tests']
Testability,AddCommentsToBam needs CRAM tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1225:28,test,tests,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1225,1,['test'],['tests']
Testability,"Addded abstract class MachineLearningUtils to provide an interface and; handle common tasks. These include loading data, splitting data into; training and test sets, cross-validation, and optimizing classifier; hyperparameters. Also added XGBoostUtils which provides a concrete implemention of; MachineLearningUtils (by wrapping xgboost4j) and serves as an example; of how to provide access to a 3rd-party machine learning library. Finally, added an example tool: ExampleTrainXGBoostClassifier. This; demonstrates a typical training use case of loading data, training a; classifier, assessing accuracy, and saving the classifier. It also; demonstrates a typical filtering use case of loading a saved classifer,; and using it to calculate probabilities or class labels. This is working towards issue 4922 by providing the tools necessary to; train classifiers in general, but does not provide tools to train a; BreakpointEvidence filter, so does not resolve it. Additionally, this; framework should eventually be extended to provide a bayesian; hyperparameter optimizer. One outstanding problem with these changes is that xgboost4j threading; does not appear to work on OSX, resulting in slower training. However,; it does work on linux.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5146:155,test,test,155,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5146,1,['test'],['test']
Testability,Added CRAM input to CNV WDL and tests.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4257:32,test,tests,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4257,1,['test'],['tests']
Testability,Added Gencode's GeneTranscriptType as an annotation field in GencodeFunctotation. Updated unit tests after adding new annotation field. resolves #4408,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7343:95,test,tests,95,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7343,1,['test'],['tests']
Testability,Added Utils::split (and tests). Added performance test for string splitting.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3776:24,test,tests,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3776,2,['test'],"['test', 'tests']"
Testability,"Added XGBoostEvidenceFilter, an alternative BreakpointEvidence filter; based on XGBoost classifier.; - Default is still BreakpointDensityFilter. Switch by passing; ""--sv-evidence-filter-type XGBOOST"" instead of ""DENSITY"".; - Decisions based on evidence overlap or coherence are now scaled based; on coverage depth (in both filter types).; - Multiple avenues for supplying saved classifier binary file,; including built-in resource, local file, and google cloud storage.; - BreakpointEvidence updated to carry information necessary for; classifier. Unit tests were correspondingly updated.; - Data from genome tracts used for some classifier features. From the; hg38 genome: gaps, centromeres, and umap s100. Additional changes to convenience scripts; - Updated sanity_checks.sh to return error signal when exiting; - Bugfixes to manage_sv_pipeline.sh for linux compatibility; - Update run_whole_pipeline.sh to detect preemptible workers and; thus set NUM_EXECUTORS correctly",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4769:553,test,tests,553,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4769,1,['test'],['tests']
Testability,"Added a `PrintReads` based test (`IntelInflaterIntegrationTest.testIntelInflaterDeflaterWithPrintReads`) to test integration of `IntelInflater` and `IntelDeflater`. Removed the previous `IntelInflater` and `IntelDeflater` integration tests, which were basically copies of GKL unit tests. . **Note:** ; The `PrintReads` test is using `CEUTrio.HiSeq.WGS.b37.NA12878.20.21.tiny.md.bam` for input. When using `CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam` for input, we see the exception below when comparing `PrintReads` input and output. **This is true when using `IntelInflater`/`IntelDeflater`, as well as JDK `Inflater`/`Deflater`.** Is this a problem?. ```; htsjdk.samtools.SAMFormatException: SAM validation error: ERROR: Record 9762, Read name 20GAVAAXX100126:7:2:8126:115177, bin field of BAM record does not equal value computed based on alignment start and end, and length of sequence to which read is aligned; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-284551832:27,test,test,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-284551832,6,['test'],"['test', 'testIntelInflaterDeflaterWithPrintReads', 'tests']"
Testability,Added a few comments requesting clarification about some of the test cases. The branch also needs to be rebased onto the latest master before we can proceed.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3494#issuecomment-331990229:64,test,test,64,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3494#issuecomment-331990229,1,['test'],['test']
Testability,Added a few of the remaining useful features to MarkDuplicatesSpark and associated tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5377:83,test,tests,83,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5377,1,['test'],['tests']
Testability,"Added a new WEX test bam to src/test/resources/large, with a companion target interval list",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4756:16,test,test,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4756,2,['test'],['test']
Testability,"Added a new catch block in `PathLineIterator` for character encoding; errors, along with a new error message to be given to the user for such; cases. Added unit test for malformed xsv locatable files. Fixes #4006",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5124:161,test,test,161,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5124,1,['test'],['test']
Testability,Added a new test to assert that the toggle is off -- back to you @ldgauthier,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5324#issuecomment-431406667:12,test,test,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5324#issuecomment-431406667,2,"['assert', 'test']","['assert', 'test']"
Testability,"Added a pure ""empirical"" isize distribution where the prob of each size is determine by the fraction of cases with that insert size + some smoothing so that 0-count insert size don't have 0 probability. Also I moved the supported isize distribution ""shapes"" (normal, lognormal, empirical) to a enum.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4827#issuecomment-417537129:267,log,lognormal,267,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4827#issuecomment-417537129,1,['log'],['lognormal']
Testability,Added a quick-and-dirty temporary port of RepeatLengthCovariate; to test this functionality. Resolves #4568,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4688:68,test,test,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4688,1,['test'],['test']
Testability,Added a regression test with two good variants that this PR rescues from being false negatives. Also made the sensitivity thresholds in the other integration tests higher because even without `--genotype-germline-sites` this PR saves a few calls.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8717#issuecomment-2008062964:19,test,test,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8717#issuecomment-2008062964,2,['test'],"['test', 'tests']"
Testability,Added a test to validate WDLs in the scripts directory. (#7826),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7829:8,test,test,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7829,1,['test'],['test']
Testability,"Added a test to verify that https://github.com/broadinstitute/gatk/issues/3154 is fixed now that we've upgraded htsjdk (though we should keep that ticket open until @sooheelee can verify her particular incarnation of this issue). Also note that while the CRAM MD5 slice calculation is fixed, GATK users can still have problem reading CRAMs made from references containing ambiguity codes if the .dict accompanying the reference was generated with samtools. This is tracked by https://github.com/broadinstitute/gatk/issues/3306, but is really a samtools issue. The simple workaround is to recreate the .dict using CreateSequenceDictionary, which is what I've done to create the test in this PR.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3430:8,test,test,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3430,2,['test'],['test']
Testability,Added a unit test to verify that GATKReads are being coded correctly; regardless of backing implementation.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/642:13,test,test,13,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/642,1,['test'],['test']
Testability,"Added a unit test. To do so I had to make `BaseRecalibrationEngine.calculateKnownSites()` static. This wasn't a problem because I don't think it accesses any instance attributes but if there's some reason it shouldn't be static, I can do an integration test instead.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6389#issuecomment-576898683:13,test,test,13,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6389#issuecomment-576898683,2,['test'],['test']
Testability,Added a very simple test for sorting iterator. Back to you @droazen.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2249#issuecomment-267139593:20,test,test,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2249#issuecomment-267139593,1,['test'],['test']
Testability,"Added a workflow file for enabling the GitHub Action which processes PR comments to determine if they are meant to trigger and CARROT test, and then processes them if they are formatted in that way. BIG IMPORTANT NOTE: Before this is merged, we need to set two secrets for this repo:; - `CARROT_TOPIC_NAME`, which is the name of the Google Cloud PubSub topic that messages will be sent to if a comment should trigger a run, and; - `CARROT_SA_KEY`, which is the service account key JSON for the service account that has write access to the PubSub topic.; If this is merged before those are set, I'm fairly confident we're just gonna get an email saying the action failed each time someone posts a PR comment (CARROT or otherwise), which would be less than ideal. Closes #6916",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6917:134,test,test,134,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6917,1,['test'],['test']
Testability,Added ability for user to override to annotate again. Wrote unit and integration tests for new feature and override ability. resolves #5679,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7349:81,test,tests,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7349,1,['test'],['tests']
Testability,"Added ability to call gatk tools to collect variant calling metrics.; It is optional, and defaulted to not collect. Passing Extract run with metrics collected [here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Quickstart%20v3%20ggrant/job_history/97411a89-bd75-48dd-8dba-00d6af5373e7).; Passing Extract run where we don't (default) collect metrics [here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Quickstart%20v3%20ggrant/job_history/dfe6a72f-f2e0-4999-a7c9-f8243e0f1586).; Passing Integration test [here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/b11f03a9-16ef-4b1e-9b1c-c281f41b43a1)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8968:504,test,test,504,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8968,1,['test'],['test']
Testability,Added an ExampleAssemblyRegionWalker to provide a full integration test in public for assembly region traversal,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2179:67,test,test,67,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2179,1,['test'],['test']
Testability,"Added basic java wrappers for training and tranches. I'm working on integration tests and docs today, but the other files should be ready for 1st round review.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4245#issuecomment-363434657:80,test,tests,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4245#issuecomment-363434657,1,['test'],['tests']
Testability,Added bucket-based test case (and verified that it passes). @jean-philippe-martin please re-review,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/737#issuecomment-124181131:19,test,test,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/737#issuecomment-124181131,1,['test'],['test']
Testability,"Added contig name overrides for hg19 VS B37; Added in code to convert VCF INDEL positions to MAF INDEL positions.; Added start/stop positions for IGRs.; Added argument to ignore filtered variants at the front of processing to save time.; Added a script to fully retrieve the COSMIC data sources. Fixed how the MafOutputRenderer handles mapping fields to values.; Fixed a bug in LocatableXsv and COSMIC parsers (was missing name and; version).; In Gencode: Now TumorSeqAllele1 is the refAllele, not the AltAllele.; Fixed some problems with VCF output.; Updated VCF outputs to have better header info.; Refactored header output for OutputRenderers.; Changed the logic for creating alt protein sequences.; Fixed a bug in the LocatableXsvFuncotationFactory that caused annotations to be incorrectly associated with a factory.; Fixed several bugs in the GencodeFuncotationFactory.; Fixed bugx in the handling of UTR variants.; Fixed the Transcript Selection Mode ordering.; Fixed an issue with splice sites. Minor speed fix to GencodeFuncotationFactory. Now CosmicFuncotationFactory opens the database in read-only mode. Bugfix - now LocatableXsvFuncotationFactories use overrides. Now the reference should properly align with ALL indels regardless of; length. ReferenceContext now always rendered on + strand. Now will create funcotations for transcripts without fasta sequences. Minor changes to FuncotatorIntegrationTest. - Added in more integration test files. These are as yet unused - must; refactor the files themselves to actually reflect what should be correct; as far as produced funcotations. - Updated LocatableXsvFuncotationFactoryUnitTest.java and SimpleKeyXsvFuncotationFactoryUnitTest.java; to reflect the change to funcotation factories to always produce the; expected funcotations (rather than only producing funcotations when; there are data that match the target variant). Fixed an issue with the new VariantClassification code. Fixed issue #4410. Fixed #4022. Fixed #4420. Fixed #3922",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4472:1553,test,test,1553,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4472,1,['test'],['test']
Testability,Added functionality for travis tests to upload reports from a docker image,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3353:31,test,tests,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3353,1,['test'],['tests']
Testability,Added gCNV integration test to detect numerical differences in the outputs.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7889:23,test,test,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7889,1,['test'],['test']
Testability,"Added handling of interval to count reads.; Additional tests are ported from the dataflow side: CountReadsDataflowIntegrationTest; Note that the semantics of no specifying any -L is to count **all** reads, aligned and unaligned.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/932:55,test,tests,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/932,1,['test'],['tests']
Testability,Added in a script to pull down the latest Gencode data source.; Fixed an issue in 5' UTR processing that would cause variant alleles with length > 1 to throw an exception (issue 4712).; Added three test cases to prevent regression of issue 4712.; Updated Gencode codec to be compatible with latest Gencode release (v28).; Fixed a bug in the version detection for Funcotator data sources that would prevent newer data source versions from being detected as compatible (date comparison error).,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4770:198,test,test,198,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4770,1,['test'],['test']
Testability,"Added in argument for MAF out.; Added more ""required"" MAF fields.; Added Funcotation::getDataSourceName; Added contig name overrides for hg19 VS B37; Added in code to convert VCF INDEL positions to MAF INDEL positions.; Added start/stop positions for IGRs.; Added argument to ignore filtered variants at the front of processing to save time.; Added a script to fully retrieve the COSMIC data sources. Fixed how the MafOutputRenderer handles mapping fields to values.; Fixed a bug in LocatableXsv and COSMIC parsers (was missing name and; version).; In Gencode: Now TumorSeqAllele1 is the refAllele, not the AltAllele.; Fixed some problems with VCF output.; Updated VCF outputs to have better header info.; Refactored header output for OutputRenderers.; Changed the logic for creating alt protein sequences.; Fixed a bug in the LocatableXsvFuncotationFactory that caused annotations to be incorrectly associated with a factory.; Fixed several bugs in the GencodeFuncotationFactory.; Fixed bugx in the handling of UTR variants.; Fixed the Transcript Selection Mode ordering.; Fixed an issue with splice sites. Minor speed fix to GencodeFuncotationFactory. Now CosmicFuncotationFactory opens the database in read-only mode. Bugfix - now LocatableXsvFuncotationFactories use overrides. Now the reference should properly align with ALL indels regardless of; length. ReferenceContext now always rendered on + strand. Now will create funcotations for transcripts without fasta sequences. Minor changes to FuncotatorIntegrationTest. - Added in more integration test files. These are as yet unused - must; refactor the files themselves to actually reflect what should be correct; as far as produced funcotations. - Updated LocatableXsvFuncotationFactoryUnitTest.java and SimpleKeyXsvFuncotationFactoryUnitTest.java; to reflect the change to funcotation factories to always produce the; expected funcotations (rather than only producing funcotations when; there are data that match the target variant). Fixed an",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4472:765,log,logic,765,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4472,1,['log'],['logic']
Testability,Added in new data sources for funcotator testing.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5296:41,test,testing,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5296,1,['test'],['testing']
Testability,Added in regression tests and fixes for correctness of many annotations,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5302:20,test,tests,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5302,1,['test'],['tests']
Testability,"Added in test condition for AD field with only 1 value in MAF mode. This isn't really a bug, but an error mode that needed more explicit; feedback.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5860:9,test,test,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5860,1,['test'],['test']
Testability,Added in test files for funcotator data sources in the test resources (in git LFS). Also added a feature to the XSV parser to allow for too many / too few columns in each row of an XSV data set. Fixes #3906,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3908:9,test,test,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3908,2,['test'],['test']
Testability,"Added log warning for when total size of PL arrays for a VC will likely exceed 100,000",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6334:6,log,log,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6334,1,['log'],['log']
Testability,Added logging statements to b37 conversion process.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7760:6,log,logging,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7760,1,['log'],['logging']
Testability,Added logic for generating a simplified read filter output in the case of multiple filters joined by AND. Fixes #3520,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6315:6,log,logic,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6315,1,['log'],['logic']
Testability,"Added more logging functionality to better inform users. Fixed NullPointerException when onTraversalStart throws.; Now logs version number information for data sources.; Now checks minimum data sources version and requires that the user; upgrade if the version is too old. Fixes #4521 in a roundabout way - data sources need to be re-released for this version to run at all, but these new data sources contain a fix for the HG38 issue.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4563:11,log,logging,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4563,2,['log'],"['logging', 'logs']"
Testability,Added new VariantContext comparison functionality for testing,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7021:54,test,testing,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7021,1,['test'],['testing']
Testability,Added numerical-stability tests and updated test data for all ModelSegments single-sample and multiple-sample modes.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7652:26,test,tests,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7652,2,['test'],"['test', 'tests']"
Testability,Added several test files from GATK3 and made sweeping bugfixes for the finalizeRawAnnotations() code for many of the reducible annotation classes. . Fixes #3544,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3722:14,test,test,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3722,1,['test'],['test']
Testability,Added some changes per Laura's review. Mainly:; - added a `--genomicsdb-update-workspace-path` that specifies the path to an existing workspace for incremental import and interval_list generation cases; - removed `--incremental` since the above made it superfluous; - added an `--output-interval-list-to-file` argument that will just generate a picard style interval_list at the location specified by the argument for an existing workspace. No import done when this is used; - changed the existing tests to use multiple intervals instead of a single interval. @ldgauthier I'm not entirely sure about the picard interval_list generation. Any chance you could help with providing some expected input/output for that so that I can add a test for it? I ran through a simple test with it but not really sure what the output should look like.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-518447724:498,test,tests,498,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5970#issuecomment-518447724,3,['test'],"['test', 'tests']"
Testability,"Added some commits to address a few more issues. Not sure if tests still pass, or if I'll need to fix up more test resources---we'll see!. Closes #5778.; Closes #5809.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5811#issuecomment-475267631:61,test,tests,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5811#issuecomment-475267631,2,['test'],"['test', 'tests']"
Testability,Added test. ; Thanks!. Edit: please ignore the accidentally added new file. I am looking at how this tool is potentially going to be used.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1529#issuecomment-190899805:6,test,test,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1529#issuecomment-190899805,1,['test'],['test']
Testability,Added tests for allele-specific annotation support to GenotypeGVCFs.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3722:6,test,tests,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3722,1,['test'],['tests']
Testability,Added tests for the multisample segmenter and some unit tests for the genotyping code. @fleharty @mwalker174 this is ready for review!,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-614242160:6,test,tests,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6499#issuecomment-614242160,2,['test'],['tests']
Testability,Added tests to GenomicsDBImport testing for non-diploid genotyping,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4000:6,test,tests,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4000,2,['test'],"['testing', 'tests']"
Testability,"Added the documentation and test for `ReadPileup.getPileupForSample`. Back to you, @akiezun",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1774#issuecomment-219004548:28,test,test,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1774#issuecomment-219004548,1,['test'],['test']
Testability,Added the new VariantContext comparison functionality from #6417 but without yet integrating it into any existing tests.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7021:114,test,tests,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7021,1,['test'],['tests']
Testability,"Added two new optional flags to `SplitIntervals`, and their corresponding tests. 1. `--prefix` for adding a prefix to the created interval files; 2. `--digits` for configuring the number of digits used to enumerate the interval files. This modifications were requested by a community user (#7157)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7488:74,test,tests,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7488,1,['test'],['tests']
Testability,Added unit and integration tests. Had to make a few things protected for testing and added a vcf with a single SNP (where @ldgauthier found this bug) for the integration test. Back to you @droazen.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3655#issuecomment-337705296:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3655#issuecomment-337705296,3,['test'],"['test', 'testing', 'tests']"
Testability,Added unit tests for XsvLocatableTableCodecUnitTest and XsvTableFeature. Fixes #3972,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3997:11,test,tests,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3997,1,['test'],['tests']
Testability,Added validateSampleNameMap command line parameter; Added a unit test; Updated genomicsdb version to 0.6.3,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2733:65,test,test,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2733,1,['test'],['test']
Testability,"Added. . I'll write instructions on how to add more next week. Essentially you just make a ""new item"" in Jenkins and make it a ""copy"" instead of a blank project. You'd base it on either the ""-spark-"" jobs or the other kind of jobs and just alter the commandline. . It's at a point now, though, where if I have to, I can reproduce them in a few minutes so it's not a bother in the long term to have me do it. But I _WILL_ be writing up some docs on how this all works. As it is now, every push to master kicks off the setup, as encapsulated in ""gatk-perf-test"". That sets up the master node and grabs necessary files and builds the code. If that's successful, it launches the downstream tests. Whether these succeed or fail, it tears it all down when it's done so we don't burn money. As it stands today, the average times are:; applybqsr - 1hr 30 min (1 cpu); baserecalibrator - 2 hr 45 min (1 cpu); spark-markeddupe - 10 min (10 nodes, 16 cpu each); spark-readpipeline - 30 min (5 nodes, 16 cpu each)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1609#issuecomment-228500517:554,test,test,554,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1609#issuecomment-228500517,2,['test'],"['test', 'tests']"
Testability,"Added:. - service account support for SitesOnly task, added GATK flag to not output a timestamp info VCF to help Call Caching; - switch to SSD, increased size and moved to pre-emptibles for Annotate task; - service account support for BQ Loading; - service account support for BQ Smoke Test",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7345:286,Test,Test,286,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7345,1,['Test'],['Test']
Testability,Adding AD for scale testing VS 225 add AD,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7713:20,test,testing,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7713,1,['test'],['testing']
Testability,Adding CRAM integration tests for CountReads.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/870:24,test,tests,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/870,1,['test'],['tests']
Testability,Adding `FuncotateSegments` as an option to the Somatic CNV WDL.; - Added automated WDL test to find obvious failures.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5967:87,test,test,87,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5967,1,['test'],['test']
Testability,Adding a circle.yml file; Adding the autogenerated gradle wrappers because CircleCI uses them to figure out how to gradle properly; Removing parallel tests once again because the CircleCI containers crash due to 2 jvms consuming too much memory.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/520:150,test,tests,150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/520,1,['test'],['tests']
Testability,Adding a cloud test for java 11.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6210:15,test,test,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6210,1,['test'],['test']
Testability,Adding a gradle testAll task to run all the tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/760:16,test,testAll,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/760,2,['test'],"['testAll', 'tests']"
Testability,"Adding a little more fuel to the fire on this one. Our workaround for this for the time being was going to be to run HC twice - once to output a gVCF and again to output a called VCF directly. While being a little wasteful of compute we figured this would give us correctly phased calls in a genotyped VCF while also giving us the reference confidence information in a gVCF. However, we just tried that and found that there is no phasing information in the genotyped VCF produced directly from HaplotypeCaller without any `-ERC` parameter. Looking at the logs i see:. ```; 09:00:09.140 INFO HaplotypeCallerEngine - Disabling physical phasing, which is supported only for reference-model confidence output; ```. Based on this I don't think there's a workaround. I can either generate a gVCF with `-ERC GVCF` or `-ERC BP_RESOLUTION`, but then running `GenotypeGVCFs` will mangle the phase information, _or_ run without `-ERC` but then get zero phasing information. Am I missing a potential workaround? Also, I'm curious why phasing is disabled for non-ERC mode as, at least to me, it's not immediately obvious why that would be.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5727#issuecomment-470610709:555,log,logs,555,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5727#issuecomment-470610709,1,['log'],['logs']
Testability,Adding a new `Utils.nonNull` which is a fluent style assert to throw `IllegalArgumentException` on nulls.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/475:53,assert,assert,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/475,1,['assert'],['assert']
Testability,Adding a note to developers that if they change the install_R_scripts script they must rebuild gatkbase and test with clean caches.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4289:108,test,test,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4289,1,['test'],['test']
Testability,Adding a second contig to Dataflow tests.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/747:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/747,1,['test'],['tests']
Testability,Adding a test and small features to var store branch,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6761:9,test,test,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6761,1,['test'],['test']
Testability,Adding a test to capture an expected edge case in Reblocking,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8928:9,test,test,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8928,1,['test'],['test']
Testability,Adding cloud tests on java 11,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6210:13,test,tests,13,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6210,1,['test'],['tests']
Testability,Adding cram test to UnmarkDuplicatesIntergrationTest,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2174:12,test,test,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2174,1,['test'],['test']
Testability,Adding documentation as a way to test the process.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/386:33,test,test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/386,1,['test'],['test']
Testability,"Adding in a parser that handles text files that are delimited with some known separator (i.e. commas, tabs, words). The new class is called `SimpleKeyXsvFuncotationFactory` and it is usable with the rest of `Funcotator` using new command-line arguments. Added new integration tests that include this new data source factory. Fixes #3757",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3897:276,test,tests,276,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3897,1,['test'],['tests']
Testability,"Adding in the option for using a compressed representation of our reference data. The flag use_compressed_references needs to be passed into ingest and also export, and doing so causes us to use a different internal schema for the ref_ranges table that can save ~40% on space. On the VCF path, the packed data is expanded while we populate the prepare tables before extract. On the VDS path, the packed data is expanded while we extract from the tables to create the Avro files. I updated integration tests to take use_compressed_refs as an option, and saw what I needed. Integrations tests for the VCF and VDS paths go to completion and fail, but in the expected way. AssertIdenticalOutputs, the important part, passes. AssertTableSizesAreExpected fails because the ref_ranges table is so much smaller (255884464 vs 431805033 expected) and AssertCostIsTrackedAndExpected fails because the PrepareRangesCallsetTask.GvsPrepareRanges.BigQuery Query Scanned is similarly smaller (340787200 vs 515899392). Given the nature of the change and the fact that it is an optional flag that defaults to zero, updating the integration tests to cover this path did not seem sound at this time. But using them to verify that the _content_ of the final vcfs wasn't affected by the change makes more sense. VCF integration run: https://job-manager.dsde-prod.broadinstitute.org/jobs/e9896786-9d3f-48b9-ab6f-9a76d9fafafe; Hail integration run: https://job-manager.dsde-prod.broadinstitute.org/jobs/dbdd0934-50c3-4477-a191-3282341eacd3. another post-merge integration run with same results: identical outputs, failure due to lower table sizes and query scan costs; https://job-manager.dsde-prod.broadinstitute.org/jobs/edabdac3-1856-4e2a-aadc-3bcd4c353956",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8543:501,test,tests,501,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8543,6,"['Assert', 'test']","['AssertCostIsTrackedAndExpected', 'AssertIdenticalOutputs', 'AssertTableSizesAreExpected', 'tests']"
Testability,Adding names and logging,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/753:17,log,logging,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/753,1,['log'],['logging']
Testability,Adding non-diploid tests to SelectVariantsIntegrationTest and GATKVariantContextUtilsUnitTest. I haven't uncovered any missed diploid assumptions ... :-),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1382#issuecomment-214457532:19,test,tests,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1382#issuecomment-214457532,1,['test'],['tests']
Testability,Adding runtime blocks and having the CNV WDL get tested in a local+docker backend.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3408#issuecomment-320987933:49,test,tested,49,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3408#issuecomment-320987933,1,['test'],['tested']
Testability,Adding scripts related to setting up haplotypecaller carrot regression tests.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7726:71,test,tests,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7726,1,['test'],['tests']
Testability,Adding tests and doc to ReadsSource,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/480:7,test,tests,7,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/480,1,['test'],['tests']
Testability,Adding tests on openJDK since it seems like we're going to have to support it.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2695:7,test,tests,7,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2695,1,['test'],['tests']
Testability,Adding tests separately since this is blocking @droazen,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/476#issuecomment-97874612:7,test,tests,7,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/476#issuecomment-97874612,1,['test'],['tests']
Testability,"Adding the errorOnOutOfDateIndex option, which will cause a; UserException to be thrown when an index file is opened that is out of; date with respect to its data file. This option defaults to false to; preserve baseline behavior. Split tests apart and added a method to change the last modified time of a file. Fixes #1683",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3063:237,test,tests,237,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3063,1,['test'],['tests']
Testability,Adding the test in lieu of truncation sounds good. But I need to wait until we have a version of Picard that conforms to enable it.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5551#issuecomment-451970908:11,test,test,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5551#issuecomment-451970908,1,['test'],['test']
Testability,Adding the uber_monitor.py script to GvsUtils.wdl; Threaded it into GvsCreateFilterSet; Included a unit test.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8268:104,test,test,104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8268,1,['test'],['test']
Testability,Additional comment from @jamesemery. >>the negate read filter doesn't display the name correctly in the logs,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8724#issuecomment-1986374798:104,log,logs,104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8724#issuecomment-1986374798,1,['log'],['logs']
Testability,Additionally got rid of the unit test for `ExpandingArrayList`,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6069:33,test,test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6069,1,['test'],['test']
Testability,"Addressed code review comments:. * Pulled `if( firstNonHeaderByteIndex == -1 ){` check out of while loop in `gatherWithBlockCopying()`; * `testBlockGather()` writes output to a temp file, not a hardcoded path; * Corrected docs for `--gatherType` argument. Will merge once tests pass in travis",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3139#issuecomment-312341540:139,test,testBlockGather,139,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3139#issuecomment-312341540,2,['test'],"['testBlockGather', 'tests']"
Testability,Addressed comments and beefed-up test coverage. Back to @ldgauthier.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6090#issuecomment-523273986:33,test,test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6090#issuecomment-523273986,1,['test'],['test']
Testability,"Addressed comments and tests are passing, back to @droazen.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285526613:23,test,tests,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2423#issuecomment-285526613,1,['test'],['tests']
Testability,Addressed comments. Tests pass. Notice that now src/test/java/org/broadinstitute/hellbender/BwaMemIntegrationTest.java takes longer to run (3+ minutes) due to the change from creating the image from the index file to using the fasta file. Just giving you the heads-up. @tedsharpe,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3474#issuecomment-325028831:20,Test,Tests,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3474#issuecomment-325028831,2,"['Test', 'test']","['Tests', 'test']"
Testability,"Addressed feedback, updated so it can write reports and added test that checks the exact same reports as the BaseRecalibrator integration test (they pass).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/511#issuecomment-101783201:62,test,test,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/511#issuecomment-101783201,2,['test'],['test']
Testability,"Addressed review comments, expanded documentation, added some test cases, and did some minor renaming/cleanup. Thanks, back to you @asmirnov239!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3515#issuecomment-329054563:62,test,test,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3515#issuecomment-329054563,1,['test'],['test']
Testability,"Addresses #4397 and #5054. Restructured gCNV WDLs to pass data more efficiently to postprocessing tasks, and added a wrapper workflow for gCNV case WDL that scatters samples in multiple blocks. Also cleaned up some of the unused cromwell travis tests.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5176:245,test,tests,245,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5176,1,['test'],['tests']
Testability,"Addresses #6157 . (Very minor tests are failing, which I will fix ASAP.)",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6168:30,test,tests,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6168,1,['test'],['tests']
Testability,"Addresses #6242. Current behavior: when all the reads in a read group are filtered in the base recalibration step, the read group is not logged in the recal table. Then ApplyBQSR encounters these reads, can't find the read group in the recal table, and throws an error. New behavior: if `--allow-read-group` flag is set to true, then ApplyBQSR outputs the original quantities (after quantizing). . I avoided the alternative approach of collapsing (marginalizing) across the read groups, mostly because it would require a complete overhaul of the code. I also think that using recal data from other read groups might not be a good idea. In any case, using OQ should be good enough; I assume that these ""missing"" read groups are low enough quality to be filtered out and are likely to be thrown out by downstream tools. I also refactored the BQSR code, mostly to update the variable and class names to be more accurate and descriptive. For instance:. ReadCovariates.java -> PerReadCovariateMatrix.java; EstimatedQReported -> ReportedQuality",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/9020:137,log,logged,137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/9020,1,['log'],['logged']
Testability,"Addresses the last comment, once test pass this can be merged.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3474#issuecomment-325512779:33,test,test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3474#issuecomment-325512779,1,['test'],['test']
Testability,"Addresses. https://github.com/broadinstitute/dsp-spec-ops/issues/280. Analysis has been done and delivered, this is primarily documentation of how to do it in the future. If someone wants to test-drive the instructions, there is a GVS VCF at. ```; gs://broad-dsp-spec-ops/scratch/bigquery-jointcalling/comparison-v3/gvs.chr20.vcf.gz*; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7237:191,test,test-drive,191,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7237,1,['test'],['test-drive']
Testability,"Adds a WDL that replaces the ""serial"" SnpThenIndel joint filtering workflow added in #7932. This simplified replacement only runs one iteration of the extract-train-score toolchain, rather than running one iteration for SNPs followed by another for INDELs. The original SnpThenIndel workflow (used for Ultima) will be updated and moved to the WARP repo. (EDIT: I was originally confused here, the WDL that was replaced in this PR simply ran SNPs and indels separately, rather than serially. Curious that things still tied out, but I’m not sure it’s worth looking into at this point.). Test files have also been subset to chr21-22 and slimmed down. A test for the positive-negative was also added, as well as tests of an empty shard. The first commit contains the original workflow (JointVcfFilteringOriginal.wdl), as well as a reimplementation (JointVcfFilteringSnpThenIndel.wdl) that calls the simplified workflow (JointVcfFiltering.wdl). I've verified that both the original and reimplemented SnpThenIndel workflows tie out on the original test data. The second commit then removes the original and the reimplementation, leaving only the simplified workflow. It may thus be easier to review the first commit, second commit, or the overall changes, depending on what you are looking at. @meganshand can you take a look and let me know if there's any missing functionality, or if this otherwise won't work for Ultima and/or importing in WARP? Apologies for the delay!",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8074:585,Test,Test,585,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8074,4,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"Adds a couple warnings in case the user can write to the configured tmp-dir but can't set the files as executable or execute them, with the assumption in the latter case that the cause is likely that the directory is mounted using the ""noexec"" mount option. I'm not sure if a test makes sense for this, because it would probably require mounting a directory for testing, and the user running the tests may not have permissions to do that. I think only root can mount with options in Ubuntu? Do we require root for other tests?. Fixes #8453",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8951:276,test,test,276,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8951,4,['test'],"['test', 'testing', 'tests']"
Testability,"Adds a new ReadWalker tool, `RealignSoftClippedReads`, that realigns soft-clipped fragments using BWA. This tool is motivated by a specific artifact produced by Illumina DRAGEN v3.7.8 in which reads containing small indels are erroneously soft-clipped, often within mobile element contexts (LINE, SINE, ALU, SVA, etc). This is particularly problematic for mobile element insertion callers such as [Scramble](https://github.com/GeneDx/scramble) that rely on soft-clips for identifying potential insertion sites but do not perform a local assembly. In some cases, these soft-clipped reads are aligned to the incorrect region (confirmed by BLAT query and comparison to BWA alignments). An example of a false positive site produced by Scramble is shown below. <img width=""1008"" alt=""Screenshot 2023-11-16 at 2 09 45 PM"" src=""https://github.com/broadinstitute/gatk/assets/5686877/9d2c1dfd-9673-49f0-9372-c4c9cf6ffd9f"">. This PR includes the new tool and unit/integration tests and some minor refactoring to expose non-Spark BWA read mapping. This tool should be considered experimental until thorough benchmarking and analysis can be performed.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8588:966,test,tests,966,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8588,2,"['benchmark', 'test']","['benchmarking', 'tests']"
Testability,Adds a simple test to test a cram in UnmarkDuplicatesIntergrationTest,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2174:14,test,test,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2174,2,['test'],['test']
Testability,"Adds a tool for calling SVs using various SV evidence (BNDs, SV pipeline DEL calls, discordant read pairs, split reads) and copy number calls from gCNV. Possible haplotypes are enumerated using a traversal of the sequence graph supported by the SV evidence. The copy number posteriors are integrated to call likely events associated with the possible genotypes. Unit and integration tests forthcoming.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5161:383,test,tests,383,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5161,1,['test'],['tests']
Testability,"Adds an R entry to the travis matrix. Note that some R tests were already in the ""R"" test group.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6454:55,test,tests,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6454,2,['test'],"['test', 'tests']"
Testability,"Adds some flexibility to the allowed split-read strand annotations on SV records:. - Allow INS -+ strands; - Allow INV null strands; - When clustering, only require that strands match for INV/BND records. The changes affecting INS variants are commensurate with changing going into gatk-sv (see https://github.com/broadinstitute/gatk-sv/pull/553). Added tests for the new functionality and improved some unit test coverage for a few related cases.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8378:354,test,tests,354,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8378,2,['test'],"['test', 'tests']"
Testability,Adds wdl that tests joint VCF filtering tools,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7932:14,test,tests,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7932,1,['test'],['tests']
Testability,Adjusted logic for filtering zero-coverage samples and intervals in CreateReadCountPanelOfNormals.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6624:9,log,logic,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6624,1,['log'],['logic']
Testability,Adressed most recent pr comments; tests passed so merging.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2684#issuecomment-301602200:34,test,tests,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2684#issuecomment-301602200,1,['test'],['tests']
Testability,"After #5688 we need to adjust some of the default values when in mitochondria mode. I tested these parameters with the mixture samples and it looked good. In particular note that the TLOD divided by depth filter is no longer needed, so the default would now be 0. Again, would love to get this in before the release on Tuesday (fyi @droazen). @ldgauthier @davidbenjamin @jsotobroad",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5827:86,test,tested,86,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5827,1,['test'],['tested']
Testability,"After Jonathan's recent modifications I'm a little confused about what should happen if a reference isn't provided -- should it ever error or just warn? @jamesemery I ended up changing the expected behavior of one of the tests, but I'm happy to change it back if we can define the correct behavior.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6272#issuecomment-556256773:221,test,tests,221,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6272#issuecomment-556256773,1,['test'],['tests']
Testability,"After discussing with @jamesemery we decided to wait until after the 4.1 release before merging this one, as it needs careful review/testing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5607#issuecomment-458250495:133,test,testing,133,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5607#issuecomment-458250495,1,['test'],['testing']
Testability,"After discussing with @ldgauthier, I'm going to approve this PR as-is, and Laura will address the remaining TODOs in a separate PR. For the record, the three remaining issues that need addressing are:. * Get rid of the `instanceof VariantWalker` check in `FeatureManager` by making `GATKTool.getGenomicsDBOptions()` return null (or `new GenomicsDBOptions(referenceArguments.getReferencePath())`) instead of throwing an exception, and then having `GATKTool.initializeFeatures()` (and its overrides) pass the GenomicsDB options in to the `FeatureManager` constructor, which can then propagate them down here. * Add a simple direct integration test for the new `--floor-blocks` HaplotypeCaller arg. * Address my maintenance concerns about `AnnotationUtils.isAlleleSpecific()` by adding an empty marker interface for AS annotations (open to other ideas here if you don't like that one)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4947#issuecomment-517350314:641,test,test,641,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4947#issuecomment-517350314,1,['test'],['test']
Testability,"After discussion in #3084, I offer myself to port the indel realignment pipeline. After exploring the GATK3 implementation, I will split the port in the following independent tasks:. - [ ] Port `RealignerTargetCreator` (require test data after run with GATK3); - [ ] Port `ConstrainedMateFixingManager`; - [ ] Port `NWaySAMFileWriter` (requires some change in the engine to get the ID for the inputs). The previous port will be integrated in the `IndelRealigner` tool implementation.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3104:228,test,test,228,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3104,1,['test'],['test']
Testability,After discussion with @LeeTL1220 this seems to be a known issue with Cromwell returning an exception (https://github.com/broadinstitute/cromwell/issues/2538). It has been confirmed that the tests are indeed succeeding despite returning a stack trace upon failing to find the docker image uploaded to Dockerhub because Cromwell is succeeding in a check to the local installation for the requested image after failure.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3558#issuecomment-328623422:190,test,tests,190,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3558#issuecomment-328623422,1,['test'],['tests']
Testability,"After discussion with @davidbenjamin the decision is not to create a new option, but instead to make AD use fragment depth, and create a new annotation RAD (read alternative allele depth) that will use the current logic for AD.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7490#issuecomment-933817589:214,log,logic,214,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7490#issuecomment-933817589,1,['log'],['logic']
Testability,"After extensive QC, Ryan Collins with the Talkowski lab has a set of ~20 samples that he believes to have sex chromosome genotypes that are not XX or XY. It would be great to run our tool on them and see what it predicts. Normals could probably come from any of the same projects: G100345, G68758, G81032, G94818, etc.; Case data has already been copied to gs: //broad-dsde-methods/testdata/aneuploidy_samples/",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4371:382,test,testdata,382,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4371,1,['test'],['testdata']
Testability,"After further testing, we've found that this problem also occurs with the JDK deflater/inflater at compression level 9. This makes it much more likely to be a bug in the tool or the test itself, rather than the Intel deflater/inflater.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3117#issuecomment-309060263:14,test,testing,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3117#issuecomment-309060263,2,['test'],"['test', 'testing']"
Testability,"After looking at this again (years later), I don't think this is a real thing. Whether they occur in the same sample or not, variants get represented based on the SW alignment of the assembled haplotype to the reference haplotype. The S1 GGAGTC allele will get aligned to the reference as a G->GT insertion. When it's genotyped against the reads from the other haplotype it probably used to exhibit different behavior because HC didn't have spanning deletions, but thanks to Chris W. now it does! (#4963) I'm closing this since we don't have a real test case and I don't believe our whiteboard scribbles anymore.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2917#issuecomment-427392369:549,test,test,549,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2917#issuecomment-427392369,1,['test'],['test']
Testability,"After running `./gradlew clean jacocoTestReport` (or just `./gradlew clearn test`), there are some test files appearing as ""untracked"" in the git repository:. * `likelihoods.txt`; * `src/test/resources/snpSampledModel.report`; * `src/test/resources/vqsr_model.report`. I think that this should be test files in a temp directory and should be clean after the test suite finishes (or after the single test runs).",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4206:76,test,test,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4206,7,['test'],['test']
Testability,"After running unit tests during docker build, delete the large test files.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2719:19,test,tests,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2719,2,['test'],"['test', 'tests']"
Testability,"After speaking with Laura, I will test this commit in WARP against the previous commit to make sure that this change doesn't alter the JointGenotyping outputs. I also added another edge case test, but I want to make sure I run this version on a full size ~60 sample cohort of dragen generated WGS samples over chrX to make sure the downstream code works ok with other haploid/diploid mixes of no-calls/calls.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8862#issuecomment-2163894473:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8862#issuecomment-2163894473,2,['test'],['test']
Testability,"After the merger with gatk-protected, the docker integration tests are intermittently (but frequently) hitting the hard travis time limit of 50 minutes. We need to fix this ASAP!",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2808:61,test,tests,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2808,1,['test'],['tests']
Testability,"After the rebase and tests are passing, I want to do a quick review pass on this.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3998#issuecomment-358378753:21,test,tests,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3998#issuecomment-358378753,1,['test'],['tests']
Testability,"After the updates to the python environment made in #8561, the CNN tools are no longer functional and were deprecated. However, we may want to provide a separate environment in which some of these tools can still be used, perhaps in conjunction with NVScoreVariants. If so, we should also re-enable the relevant integration and WDL tests and provide appropriate documentation.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8907:332,test,tests,332,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8907,1,['test'],['tests']
Testability,"After writing tests, should present to the rest of the team to spread the knowledge :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1440#issuecomment-183047775:14,test,tests,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1440#issuecomment-183047775,1,['test'],['tests']
Testability,"Again, it's difficult to hold these discussions over issues and understand exactly where the blockers are, but one argument in favor of the wrapper class (FeatureInputAwareVariantContext), instead of re-purposing the source field, is that we can a) retain a reference to the actual FeatureInput class, and b) this should not change existing tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-823598048:341,test,tests,341,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-823598048,1,['test'],['tests']
Testability,"Again, my testing is outlined in https://github.com/broadinstitute/gatk/issues/3487.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5144#issuecomment-418897366:10,test,testing,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5144#issuecomment-418897366,1,['test'],['testing']
Testability,"Agree with Louis -- test infrastructure can go in the standard jar, as long as tests themselves remain separate.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/525#issuecomment-103590180:20,test,test,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/525#issuecomment-103590180,2,['test'],"['test', 'tests']"
Testability,"Agreed. My DROID's auto-correct hates me; please forgive my spelling mistakes. Geraldine Van der Auwera notifications@github.com wrote:. > Filters should filter, not explode. It's not uncommon to have a few reads; > that fail this filter; that shouldn't be a cause of failure. If you want to; > build in some different logging modes based on thresholds (eg if more than; > N percent reads fail, indicating the whole bam is probably broken, log a; > warning) that's fine. But no explosions please.; > ; > On Mon, Feb 23, 2015 at 3:50 PM, Louis Bergelson notifications@github.com; > wrote:; > ; > > Currently MalformedReadFilter is the gating function which warns people if; > > their bams are broken. Do we really want to filter out reads with these; > > problems? Or do we want to explode and give a warning? Either way,; > > something called a ReadFilter isn't the right name for it, but I think the; > > current behavior maybe close to what is wanted.; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/broadinstitute/hellbender/issues/193#issuecomment-75628742; > > .; > ; > ## ; > ; > Geraldine A. Van der Auwera, Ph.D.; > Bioinformatics Scientist II; > GATK Support & Outreach; > Broad Institute; > ; > —; > Reply to this email directly or view it on GitHub.￼",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/193#issuecomment-75642515:319,log,logging,319,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/193#issuecomment-75642515,2,['log'],"['log', 'logging']"
Testability,"Ah the ""Tool Docs Index"" link thing is because I left out the extension on purpose; our php server is configured to grab whatever file is present with that basename, with a rule of precedence in case there are several with different extensions (which is useful because of reasons). But locally the browser doesn't know to do that. I'm putting in some logic to handle this, thanks for pointing it out.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3165#issuecomment-311098545:351,log,logic,351,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3165#issuecomment-311098545,1,['log'],['logic']
Testability,"Ah yes indeed, I see. Would you like me to move these tests to ReferenceFileSourceUnitTest? That seems like a better home for them.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3921#issuecomment-349763803:54,test,tests,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3921#issuecomment-349763803,1,['test'],['tests']
Testability,"Ah, I didn't hit refresh before fixing that test :) Thanks for the comments. I'll make those changes.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-266833465:44,test,test,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2307#issuecomment-266833465,1,['test'],['test']
Testability,"Ah, I just tried to fix this, and although the change itself is easy (in Barclay), it has an unfortunate side effect on the tab completion tests. The Barclay test class/argument container has an ""extradocs"" companion reference that is not a CLP. This change now filters that companion out when running the tab completion doclet. But that triggers a guard in docgen that throws if a class that is targeted for output references an extradocs class that is *not* selected for output, whcih is useful for docgen, but not tab completion or wdl gen. Also we need better separation and granularity for the Barclay tests in general, especially with the addition of wdlgen. @jonn-smith I'll take this one unless you object...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6615#issuecomment-634028742:139,test,tests,139,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6615#issuecomment-634028742,3,['test'],"['test', 'tests']"
Testability,"Ah, I see - thats sounds less ominous. Some of the expected results appear to have changed quite a lot though. Can you rebase this on current master (much preferred over merging master into this branch since it keeps your commits together) - there are conflicts with a recent set of changes we merged in last week. Note that some of those changes are in code that you moved (i.e., into the new ArgumentCollection class) so they'll have to be propagated to the new code. . Also, the (non VariantEval) test failures in this branch are fallout from the change to add the source to the VariantContexts. I think @jonn-smith / @KevinCLydon have a fix for that so the stalled https://github.com/broadinstitute/gatk/pull/4571 can be merged, since that will be a prerequisite for this branch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-736081899:500,test,test,500,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6973#issuecomment-736081899,1,['test'],['test']
Testability,"Ah, I see you didn't mean the one I linked to, but a different one, in master. Yes, it's supposed to work. No, I wouldn't spend effort trying to debug it, since it's about to be replaced by the one I linked to. edit: here, ""it"" = [the one in master](https://github.com/broadinstitute/hellbender/blob/master/src/test/java/org/broadinstitute/hellbender/tools/walkers/bqsr/BaseRecalibratorDataflowIntegrationTest.java#L186).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/833#issuecomment-132335425:311,test,test,311,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/833#issuecomment-132335425,1,['test'],['test']
Testability,"Ah, i see. DIRECT is the old version of LOCAL. But when i run in LOCAL, it is just run local walker, not the spark mode at all... I just want to test some sparkWalker...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1386#issuecomment-166157361:145,test,test,145,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1386#issuecomment-166157361,1,['test'],['test']
Testability,"Ah, it's because of https://github.com/samtools/htsjdk/issues/297. But why is the test calling toString()?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/811#issuecomment-130762350:82,test,test,82,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/811#issuecomment-130762350,1,['test'],['test']
Testability,"Ah, just saw this last round of comment updates after I posted my last review. Type hinting can certainly wait - would be good to get there though. For the short term, I think the main things are the basic tests, and dealing with the model/json file distribution and argument defaults.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4245#issuecomment-367470699:206,test,tests,206,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4245#issuecomment-367470699,1,['test'],['tests']
Testability,"Ah, now that I'm going through and re-updating test resources for a rebase, I see that I missed responding to this:. > Now that I think more about it, I'm surprised none of the GenotypeGVCFs tests changed. I guess they must all be too few samples. I think some of them did? E.g. I'm having to re-update `src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/expected/gvcf.basepairResolution.includeNonVariantSites.vcf`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7394#issuecomment-914580997:47,test,test,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7394#issuecomment-914580997,3,['test'],"['test', 'tests']"
Testability,"Ah, ok, so you would extend `Main` anyway even if we had a way to control which packages it looks in? That's good to know. Can you not use base test because of that GenomeLocParser? We should fix that.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2122#issuecomment-242816026:144,test,test,144,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2122#issuecomment-242816026,1,['test'],['test']
Testability,"Ah, wonderful :) . Yeah I think we had tested FixMate at the time but no joy.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1864#issuecomment-222239104:39,test,tested,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1864#issuecomment-222239104,1,['test'],['tested']
Testability,"Ah, yes. I only ran tests in the SV packages. Will fix the failing tests.; Thanks for the detailed review! Very helpful. Will address these ASAP.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3917#issuecomment-349685136:20,test,tests,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3917#issuecomment-349685136,2,['test'],['tests']
Testability,"Aha, I see the problem. You branched this off of your `lb_dataflow` branch, and the tests in that branch are not passing. Could you rebase this change onto the current master and re-submit the pull request?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/369#issuecomment-91332051:84,test,tests,84,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/369#issuecomment-91332051,1,['test'],['tests']
Testability,"Aha, good -- that's consistent with @skwalker's results showing a ~30%-40% performance regression vs. GATK3 when using a large interval list + the latest GATK4 HC. I think this is something we can resolve through profiling -- I'll update you in a few days with my progress. In the mean time, it would be valuable to me to know whether you see the same performance difference in Mutect2 when running *without* an interval list (latest master vs. this downsampling branch). Perhaps you could create a large-but-not-too-large bam snippet to test that out?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-330910227:538,test,test,538,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3238#issuecomment-330910227,1,['test'],['test']
Testability,Ahh... I see https://github.com/disq-bio/disq/pull/124 was such a simple fix.... How did we find this bug in the first place? Was the split guessing failing in some case? I think on this end its probably acceptable to just accept this branch and point to the PR in disq. Can we not write a unit test for the SBI index there where we provide an invalid SBI index in a place where the split guessing would have worked and assert that it is indeed trying to use the index?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6323#issuecomment-567092790:295,test,test,295,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6323#issuecomment-567092790,2,"['assert', 'test']","['assert', 'test']"
Testability,Align the Funcotator checkIfAlreadyAnnotated test with the Funcotator engine code.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7555:45,test,test,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7555,1,['test'],['test']
Testability,All 4 of the above tests are running consistently in Jenkins. Will keep an eye on them for avg time.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1609#issuecomment-228441538:19,test,tests,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1609#issuecomment-228441538,1,['test'],['tests']
Testability,All ReadFilters should have a flag to invert their tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6005:51,test,tests,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6005,1,['test'],['tests']
Testability,"All Travis tests pass. Coverage computation appears to be broken, though (?).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/819#issuecomment-131220091:11,test,tests,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/819#issuecomment-131220091,1,['test'],['tests']
Testability,"All code review comments have been addressed, but I need to wait for https://github.com/broadinstitute/hellbender/pull/922 to be merged and rebase on top of it before tests will pass in this branch, as the spark tests are causing us to hit the travis log file limit.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/911#issuecomment-143060329:167,test,tests,167,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/911#issuecomment-143060329,3,"['log', 'test']","['log', 'tests']"
Testability,All comments addressed -- will merge after tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3519#issuecomment-325039173:43,test,tests,43,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3519#issuecomment-325039173,1,['test'],['tests']
Testability,All comments addressed -- will merge once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1670#issuecomment-203662503:42,test,tests,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1670#issuecomment-203662503,1,['test'],['tests']
Testability,All comments addressed -- will squash and merge once tests pass.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1975#issuecomment-235987179:53,test,tests,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1975#issuecomment-235987179,1,['test'],['tests']
Testability,"All comments addressed, and tests should now pass. Going to check over the code one final time and then merge.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/601#issuecomment-119325792:28,test,tests,28,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/601#issuecomment-119325792,1,['test'],['tests']
Testability,"All comments addressed. Since tests on travis are broken at the moment, we're unfortunately forced to merge this without travis passing, however since only documentation is touched this should be safe.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3158#issuecomment-310772135:30,test,tests,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3158#issuecomment-310772135,1,['test'],['tests']
Testability,"All done, and I was able to add the test for the non-Dataflow BaseRecalibrator. As expected, without my fix this test fails. I'll merge once the tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/878#issuecomment-141255726:36,test,test,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/878#issuecomment-141255726,3,['test'],"['test', 'tests']"
Testability,"All of our tests use contig ""1"". This is fragile, we should add tests that include two contigs. This is not currently possible with ArtificialReadUtils (issue #688).",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/689:11,test,tests,11,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/689,2,['test'],['tests']
Testability,"All right - sorry for the grief with this. This is a new pull request for these changes, squashed and rebased on Hellbender master, including changes for the code review comments for 3 files:; src/main/java/org/broadinstitute/hellbender/tools/picard/sam/FilterReads.java:; src/test/java/org/broadinstitute/hellbender/tools/exome/ExomeReadCountIntegrationTest.java:; src/test/java/org/broadinstitute/hellbender/tools/picard/vcf/AbstractVcfMergingClpTester.java:",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/583:277,test,test,277,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/583,2,['test'],['test']
Testability,All subclasses do the same. This involves updating all callers to pass a `Path` instead of a `File`. Added a test in `TableUtilsUnitTest` that writes a table to an in-memory `Path` to demonstrate we're not using files underneath (it works). Added a similar test in `TableReaderUnitTest` that reads from an in-memory `Path`. Fixes #5747,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5785:109,test,test,109,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5785,2,['test'],['test']
Testability,All tests have passed @lbergelson or whoever would like to give green light to merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4084#issuecomment-356068331:4,test,tests,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4084#issuecomment-356068331,1,['test'],['tests']
Testability,"All the work is in BucketUtils, the other modified files are just a result of changing the method signatures. `BucketUtilsTest` pass. Do we have some extra test code that's not run by Travis but that perhaps we should run here? I'm thinking of tests that would spin up a Spark instance and make sure read/write still works as expected.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2565#issuecomment-291274664:156,test,test,156,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2565#issuecomment-291274664,2,['test'],"['test', 'tests']"
Testability,"All ways of reading reference sequences are hidden behind a common interface,; ReferenceDataflowSource. See https://github.com/broadinstitute/hellbender/pull/804 for initial discussion of the design, and https://github.com/broadinstitute/hellbender/issues/567 for the issue that this solves. This change adds some HTSJDK extensions to work with Hadoop, these should eventually be added to HTSJDK in some form. I was able to run BQSR on a Spark cluster using this code, by using the following:. ``` bash; # Copy BAM into HDFS; hadoop fs -put ./src/test/resources/org/broadinstitute/hellbender/tools/BQSR/NA12878.chr17_69k_70k.dictFix.bam bam/NA12878.chr17_69k_70k.dictFix.bam. # Copy FASTA (reference) into HDFS; hadoop fs -mkdir fasta ; hadoop fs -put ./src/test/resources/human_g1k_v37.chr17_1Mb.fasta fasta/human_g1k_v37.chr17_1Mb.fasta; hadoop fs -put ./src/test/resources/human_g1k_v37.chr17_1Mb.dict fasta/human_g1k_v37.chr17_1Mb.dict; hadoop fs -put ./src/test/resources/human_g1k_v37.chr17_1Mb.fasta.fai fasta/human_g1k_v37.chr17_1Mb.fasta.fai. spark-submit \; --master $SPARK_MASTER \; --conf spark.driver.userClassPathFirst=true \; --conf spark.executor.userClassPathFirst=true \; --conf spark.io.compression.codec=lzf \; build/libs/hellbender-all-*-spark.jar ApplyWholeBQSRDataflow \; --reference hdfs://$NAMENODE/user/$USER/fasta/human_g1k_v37.chr17_1Mb.fasta \; --input hdfs://$NAMENODE/user/$USER/bam/NA12878.chr17_69k_70k.dictFix.bam \; --output hdfs://$NAMENODE/user/$USER/out/bqsr \; --knownSites $HELLBENDER_HOME/src/test/resources/org/broadinstitute/hellbender/tools/BQSR/dbsnp_132.b37.excluding_sites_after_129.chr17_69k_70k.vcf \; --RECAL_TABLE_FILE /dev/stdout \; --runner SPARK \; --sparkMaster $SPARK_MASTER ; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/827:547,test,test,547,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/827,5,['test'],['test']
Testability,Allele-specific annotations and tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1825:32,test,tests,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1825,1,['test'],['tests']
Testability,AlleleSubsettingUtils.calculateMostLikelyAlleles was incorrectly removing all alleles if the best alleles were tied and numAltAllelesToKeep=1; fixes #2157. move tests into AlleleSubsettingUtilsUnitTest from GATKVariantContextUtilsUnitTest as part of #2158; a few typo fixes that I noticed,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2170:161,test,tests,161,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2170,1,['test'],['tests']
Testability,"Allow CH to create custom cohorts with a subset of samples. Tested with sample_id=1 (sample name = ERS4367795). Imported:; <img width=""851"" alt=""Screen Shot 2022-05-13 at 4 13 15 PM"" src=""https://user-images.githubusercontent.com/6863459/168382823-abcfad4a-e641-43eb-a806-6556c49b9a8b.png"">. In the alt-allele; <img width=""1213"" alt=""Screen Shot 2022-05-17 at 6 52 30 PM"" src=""https://user-images.githubusercontent.com/6863459/168925071-dc889fa8-0875-4dcf-b318-330f0f3a27ae.png"">. In the filter:; <img width=""1186"" alt=""Screen Shot 2022-05-17 at 6 51 43 PM"" src=""https://user-images.githubusercontent.com/6863459/168924994-3ceb693e-9223-49b4-adca-50dfaff18c9a.png"">. In the prepare:; <img width=""589"" alt=""Screen Shot 2022-05-17 at 2 47 32 PM"" src=""https://user-images.githubusercontent.com/6863459/168887752-5897a0b9-2a6d-4393-9e3b-450a64c649c7.png"">. In the extract:; <img width=""1780"" alt=""Screen Shot 2022-05-17 at 6 48 17 PM"" src=""https://user-images.githubusercontent.com/6863459/168924703-ad863dee-19c9-4b6e-90b3-696781e86c93.png"">",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7844:60,Test,Tested,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7844,1,['Test'],['Tested']
Testability,Allow Spark UI to run during tests by setting the gatk.spark.debug system property,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1193:29,test,tests,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1193,1,['test'],['tests']
Testability,Allow VQSR Classic Memory overrides to be passed from GvsJointVariantCalling.wdl to GvsCreateFilterSet.wdl.; Increase memory overhead on a couple of tasks in GvsVQSRClassic.wdl. @RoriCremer is running the integration test [here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/8a8b5553-d9d4-47f5-80fb-ec5992172143).,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8452:217,test,test,217,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8452,1,['test'],['test']
Testability,Allow programmatic setting of log4j logging level.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/787:36,log,logging,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/787,1,['log'],['logging']
Testability,Allow tests to fail gracefully if HELLBENDER_TEST_INPUTS isn't set.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2404:6,test,tests,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2404,1,['test'],['tests']
Testability,Allow use of SparkPipelineRunner for dataflow tests.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/546:46,test,tests,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/546,1,['test'],['tests']
Testability,Allow user to set log4j logging level.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/603:24,log,logging,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/603,1,['log'],['logging']
Testability,Almost looks like there is a buffer overrun somewhere. Most of our testing has been on `nfs` and have not encountered a tcache(thread local cache) issue. Is `gpfs` available as open source?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8683#issuecomment-1935180685:67,test,testing,67,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8683#issuecomment-1935180685,1,['test'],['testing']
Testability,"Alright, I think I am in agreement with you @lbergelson about this behavior. Furthermore, all I needed out of this branch was an exposed mechanism for getting back the un-merged intervals so that I can track them myself in subtools. To that end I think I'm going to keep this branch and its tests and get rid of the merging rule argument in favor of leaving the logic for merging in place to be accessed by tools.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5887#issuecomment-567666730:291,test,tests,291,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5887#issuecomment-567666730,2,"['log', 'test']","['logic', 'tests']"
Testability,"Also @vruano , if you feel like it, please see if the integration test is at least resembling what you would like to see.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2595#issuecomment-293913493:66,test,test,66,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2595#issuecomment-293913493,1,['test'],['test']
Testability,Also I'm slightly afraid of this branch on the grounds that it cases haplotype caller integration test failures due to subtle math rounding differences here and there in the expected outputs. The fact that this was distinct from `AssemblyBasedCallingUtils.getVariantContextsFromActiveHaplotypes()` in the first place is suspect. Perhaps these should be unified to prevent future confusion.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6661#issuecomment-644964777:98,test,test,98,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6661#issuecomment-644964777,1,['test'],['test']
Testability,Also added a (Deactivated) test for moving a genomicsDB. fixes #3342 ; fixes #3345 ; fixes #3411,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4000:27,test,test,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4000,1,['test'],['test']
Testability,"Also as part of the mock-up, we should actually package the mock config files inside of our jar, load them off the classpath, and test file-based override ability.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3126#issuecomment-309543353:20,mock,mock-up,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3126#issuecomment-309543353,3,"['mock', 'test']","['mock', 'mock-up', 'test']"
Testability,"Also don't allow the total number of lines intimidate you, those are by most part test input/output vcf lines.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6055#issuecomment-558831215:82,test,test,82,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6055#issuecomment-558831215,1,['test'],['test']
Testability,Also fix an issue with git lfs and some tabix indices in src/test/resources/large/gvcfs,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2612:61,test,test,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2612,1,['test'],['test']
Testability,"Also fixed some minor style issues in argument variable names and the WDL. This should help recover some deletions and might possibly clear up some issues with MAF estimation when the number of hets is small. @LeeTL1220 can you run on some test cases to check the effect? (Note that the changes to fix estimation of the posterior widths, which will in turn affect similar-segment smoothing, are in another branch; we should test those changes as well.). Note that the default threshold of zero for the tumor in matched-normal mode should ensure that the sites genotyped as het should always match in the tumor and the normal. (This will ultimately make multisample segmentation, as enabled by #5524, more straightforward.) There was previously a check for this condition in the integration test; however, it wasn't actually activated by the test data. I could modify the test data to add a proper regression test, but since these test files are generated by running another tool on a test BAM in the repo, this could be misleading. I'm OK with punting in this case. @jonn-smith do you mind reviewing, since this resulted from your turn as liaison? Should be super quick. Thanks again for raising the issue!",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5556:240,test,test,240,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5556,8,['test'],['test']
Testability,"Also important to note that that gvcf is not shareable publicly, so variants from it can't be directly added as test examples.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2587#issuecomment-299576017:112,test,test,112,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2587#issuecomment-299576017,1,['test'],['test']
Testability,Also improved the existing tests for FragmentLengthReadFilter. Resolves #5884,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5886:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5886,1,['test'],['tests']
Testability,"Also intermittent segfaults in the Java 11 unit tests:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007f946d77f0f2, pid=7513, tid=7540; #; # JRE version: OpenJDK Runtime Environment (11.0.2+9) (build 11.0.2+9); # Java VM: OpenJDK 64-Bit Server VM (11.0.2+9, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # V [libjvm.so+0x8fd0f2] jni_GetByteArrayElements+0x72; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/share/apport/apport %p %s %c %d %P"" (or dumping to /home/travis/build/broadinstitute/gatk/core.7513); #; # An error report file with more information is saved as:; # /home/travis/build/broadinstitute/gatk/hs_err_pid7513.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; #; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6513#issuecomment-602077546:48,test,tests,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6513#issuecomment-602077546,2,"['log', 'test']","['log', 'tests']"
Testability,"Also just realized there’s *yet another* implementation in htsjdk, HardyWeinbergCalculation at https://github.com/samtools/htsjdk/blob/master/src/main/java/htsjdk/tribble/util/popgen/HardyWeinbergCalculation.java, so just a reminder to myself to check against that. Looks like a two-sided p-value of sorts is calculated there—I think this is P_{2\alpha} from Wigginton, although I need to double check. EDIT: Yup, it is, and furthermore the implementation appears to be correct. Phew! Added one more test to guard against a possible overflow issue that came up with that implementation, although it doesn't appear we have the same issue here. Will also note that 1) tests for the htsjdk implementation are pretty slim and don't actually cover very much, and 2) I don't see why we need to have two copies of this implementation, when all that essentially differs is the choice of p-value returned---we could certainly consolidate and expose the option of which p-value to return. Finally, I will also note that there is an implementation in bcftools. I have not checked it for correctness, but it appears to allow the calculation of both the one-sided p-value intended by ExcessHet, as well as what Wigginton calls P_{HWE}. So with that, the aforementioned implementations have covered every p-value discussed by that paper—and then one!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7394#issuecomment-892893837:500,test,test,500,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7394#issuecomment-892893837,2,['test'],"['test', 'tests']"
Testability,Also looking into the python log output perhaps the minimum of 10 epochs for training is too hi as the numbers that are spit out seem to indicated that things are quite settled in just a bunch of iteration (~4-5 or so).,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427548042:29,log,log,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5288#issuecomment-427548042,1,['log'],['log']
Testability,Also reduced the overall number of tests to execute by eliminating non-docker unit and integration tests from the travis.yml. I would suggest checking that the docker tests in this travis execution actually uploaded to where it says they do on gcloud.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3353:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3353,3,['test'],['tests']
Testability,"Also seeing this in 4.1.4.1. From my testing, this is happening back through version 4.1.1.0, with 4.1.0.0 being unaffected.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6289#issuecomment-583041040:37,test,testing,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6289#issuecomment-583041040,1,['test'],['testing']
Testability,Also seen by @akiezun: printreads test using print_reads.sorted.queryname.sam and printing to print_reads.sorted.queryname.cram,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1259#issuecomment-162882435:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1259#issuecomment-162882435,1,['test'],['test']
Testability,"Also some minor alphabetization of the gCNV test jsons. @davidbenjamin @LeeTL1220 @droazen I assume `gatk` is in the `PATH` for all backends and use `gatk` to launch. (EDIT: Actually, let me see if this actually works correctly...I originally got it working by launching with `/gatk/gatk`, but this won't work outside of the Docker. EDIT#2: See comment below.). Note that I did not change the unsupported M2 WDLs to use the gatk launch script. Please feel free to add commits directly. Closes #4025.; Closes #3967.; Closes #3968.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4071:44,test,test,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4071,1,['test'],['test']
Testability,Also some tests for collection classes. Refactoring may avoid code duplication here.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3916#issuecomment-352080910:10,test,tests,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3916#issuecomment-352080910,1,['test'],['tests']
Testability,Also tested with 4.3.0.0 -- same result,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8943#issuecomment-2271545151:5,test,tested,5,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8943#issuecomment-2271545151,1,['test'],['tested']
Testability,"Also this is a pretty spare set of tests, but I thought I'd get the ball rolling while I work on some more sophisticated ones.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6554#issuecomment-615460249:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6554#issuecomment-615460249,1,['test'],['tests']
Testability,Also uncomment getAuthenticatedGcs test and update; code to new way of setting retry params.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2581:35,test,test,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2581,1,['test'],['test']
Testability,"Also updated code and documentation to indicate how to properly run this; test. Sadly it has to be done manually because I don't know of a; reasonable way to disable default credentials. Nevertheless it's good that the test is there even for automated runs,; so we can check that loading the explicit credentials does not break; anything.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2879:74,test,test,74,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2879,2,['test'],['test']
Testability,"Also, @LeeTL1220 @davidbenjamin @jonn-smith I think we need to have some plan for running Oncotator WDL tests on Travis and/or moving everything over to a single Funcotator WDL in the near future.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4319#issuecomment-362074334:104,test,tests,104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4319#issuecomment-362074334,1,['test'],['tests']
Testability,"Also, @vdauwera thank Brad Chapman for this excellent test case. No one ever sends us such complete data to reproduce. It even has a run script that demonstrates the problem!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3429#issuecomment-321870350:54,test,test,54,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3429#issuecomment-321870350,1,['test'],['test']
Testability,"Also, @yonahgreene, please write some more thorough unit test cases in `GATKVariantContextUtilsUnitTest`.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6084#issuecomment-519356184:57,test,test,57,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6084#issuecomment-519356184,1,['test'],['test']
Testability,"Also, I think @mwalker174 should have the final say on merging, as he's the current gCNV owner. Would be great if he could run any GATK-SV-specific tests and report back on runtime/accuracy!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-2079902153:148,test,tests,148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8561#issuecomment-2079902153,1,['test'],['tests']
Testability,"Also, I wouldn't worry about talking to the Travis people---this will give us more incentive to keep our tests short, which I think is a good thing...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4064#issuecomment-355669069:105,test,tests,105,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4064#issuecomment-355669069,1,['test'],['tests']
Testability,"Also, MQ filtering results in stochastic coverage dropout. It is likely that low MQ regions significantly overlap across samples, in which case, downstream CNV can learn such biases and correct the coverage. Will test this in validations.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4551#issuecomment-375722179:213,test,test,213,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4551#issuecomment-375722179,1,['test'],['test']
Testability,"Also, any index files, etc. should be retained if necessary. CNV team will delete their files, but I'll leave it up to engine and the other teams about how much we want to remove. src/test/resources/dbsnp_132.b36.excluding_sites_after_129.chr1_1k.vcf.idx; src/test/resources/empty.vcf.idx; src/test/resources/exampleFASTA.fasta.fai; src/test/resources/fastaWithoutDict.fasta.fai; src/test/resources/fastaWithoutFai.dict; src/test/resources/hg19micro.dict; src/test/resources/hg19micro.fasta.fai; src/test/resources/hg19mini.dict; src/test/resources/hg19mini.fasta.fai; src/test/resources/Homo_sapiens_assembly19_chr1_1M.dict; src/test/resources/Homo_sapiens_assembly19_chr1_1M.fasta.fai; src/test/resources/Homo_sapiens_assembly19.dbsnp135.chr1_1M.exome_intervals.vcf.idx; src/test/resources/HSA19.dbsnp135.chr1_1M.exome_intervals.modified.vcf.idx; src/test/resources/human_g1k_v37.chr17_1Mb.dict; src/test/resources/human_g1k_v37.chr17_1Mb.fasta.fai; src/test/resources/iupacFASTA.dict; src/test/resources/iupacFASTA.fasta.fai; src/test/resources/joint_calling.chr1_1M.1kg_samples.10samples.noINFO.vcf.idx; src/test/resources/large/1000G.phase3.broad.withGenotypes.chr20.10100000.vcf.idx; src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.cram.bai; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/bias_covariates_ARD_coefficients.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/mean_bias_covariates_matrix.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/mean_bias_covariates_norm2.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/target_specific_mean_log_bias.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/model_final/target_specific_unexplained_variance.tsv; src/test/resources/large/cnv_germline_workflows_test_files/inputs/wes_pon/posteriors_final/bias_covariates_ARD_coefficients_histo",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:1390,test,test,1390,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"Also, could you provide at what level is the logging configured @jjfarrell ?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4531#issuecomment-373807025:45,log,logging,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4531#issuecomment-373807025,1,['log'],['logging']
Testability,"Also, do you want to run the ""GATK protected test suite"" against ""GATK Public""? Explain the workflow you envision. . 1. A PR comes in on GATK Public. ; 2. Job runs with the HEAD of GATK Public PR. (The commit hash); 3. Job grabs GATK Protected and...? that's where Im not sure what you want. ""against a snapshot of GATK public built from the current branch"". Is GATK Protected regularly taken from a GATK snapshot? Do you have a scripted mechanism for that or just using GIT tools?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1758#issuecomment-287539278:45,test,test,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1758#issuecomment-287539278,1,['test'],['test']
Testability,"Also, good point on the arg name collision. The command line parser handles this (for any args, even across plugins or across anywhere) but I didn't see any tests, so I added tests to both CommandLineParserUnitTest and CommandLineParserPluginUnitTest.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1973#issuecomment-244960357:157,test,tests,157,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1973#issuecomment-244960357,2,['test'],['tests']
Testability,"Also, if the WDL-generation and tab-completion tests continue to fail, I’ll address it after I get back. I think this has something to do with non-ASCII characters in the Javadocs, but I thought I had gotten all of them…",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7954#issuecomment-1198211557:47,test,tests,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7954#issuecomment-1198211557,1,['test'],['tests']
Testability,"Also, in #2355 the argument collection may be changed to a visible-for-testing package-protected field instead of being public.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2532#issuecomment-289361017:71,test,testing,71,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2532#issuecomment-289361017,1,['test'],['testing']
Testability,"Also, in case you didn't know, our travis builds should all publish test logs, you can find the link if you skip down to the very end of the travis log and look for a line like:. ```; See the test report at https://storage.googleapis.com/hellbender/test/build_reports/12615.1/tests/test/index.html; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-329968084:68,test,test,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2558#issuecomment-329968084,7,"['log', 'test']","['log', 'logs', 'test', 'tests']"
Testability,"Also, interestingly, if you look at the pipeline we run nightly in jenkins, there hasn't been any performance regression there. https://gatk-jenkins.broadinstitute.org/view/Performance/job/gatk-perf-test-spark-readpipeline/buildTimeTrend",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4376#issuecomment-364188535:199,test,test-spark-readpipeline,199,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4376#issuecomment-364188535,1,['test'],['test-spark-readpipeline']
Testability,"Also, it may be prudent for me to run the data through the commands the tests use, as the data I will make comes from an external source and may not validate in its current state, depending on the tool.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371500028:72,test,tests,72,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3112#issuecomment-371500028,1,['test'],['tests']
Testability,"Also, it might be a good idea to separate the various CNN java and test files and resources from the VQSR package and files.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4539#issuecomment-376588932:67,test,test,67,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4539#issuecomment-376588932,1,['test'],['test']
Testability,"Also, just to provide some context to all tagged: certain users of the old CNV pipeline expressed somewhat vague concerns with the non-fragment-based coverage collection strategies—which also differed across WES and WGS, to boot—-but didn’t offer any compelling demonstrations that fragment-based strategies were better. For the new version of the pipelines, the main priority was to pick a single strategy to unify WES/WGS coverage collection. We decided to give a simple fragment-based strategy a shot—-with the intention of using automated evaluations to test it in a rigorous manner. Although those aren’t in place yet, I’m comfortable with making the call against it at this point.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4551#issuecomment-375126971:558,test,test,558,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4551#issuecomment-375126971,1,['test'],['test']
Testability,"Also, let's restart tests after fixing the compilation warning and make sure those pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4254#issuecomment-360533204:20,test,tests,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4254#issuecomment-360533204,1,['test'],['tests']
Testability,"Also, looks like tests are passing, so the runtime version check seems to have done the trick. I’ll leave it up to you both what the next steps should be, no strong opinions on my end!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8111#issuecomment-1331409026:17,test,tests,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8111#issuecomment-1331409026,1,['test'],['tests']
Testability,"Also, once the tests pass, I'm going to rebase on master and then run them one more time.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5526#issuecomment-457752282:15,test,tests,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5526#issuecomment-457752282,1,['test'],['tests']
Testability,"Also, per your comment, static test files are fine, especially when the alternative is a bunch of parsing code.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831453242:31,test,test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7238#issuecomment-831453242,1,['test'],['test']
Testability,"Also, perhaps we could add CRAMs to the mix of BAMs used in the WDL tests. Should be addressed at the same time as #4007. However, I wouldn't want to just expand the test matrix, since those tests already run long enough.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4253#issuecomment-360362374:68,test,tests,68,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4253#issuecomment-360362374,3,['test'],"['test', 'tests']"
Testability,"Also, the cloud tests should be skipped by default (ie., in the case of no environment variables set).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2404#issuecomment-279083759:16,test,tests,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2404#issuecomment-279083759,1,['test'],['tests']
Testability,"Also, the test breaks with this messge: ""Can't run cloud tests without keys so don't run tests."" I'm guessing Travis is not able to see the Google project keys!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298413935:10,test,test,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2634#issuecomment-298413935,3,['test'],"['test', 'tests']"
Testability,"Also, this seems to misbehave when run on a GZIP file that is NOT a block gzipped file. I get the following result which appears to be flawed in a number of ways:; ```; Block at file offset 0; 	- compressed size: 25442; 	- uncompressed size: 2114545489. 15:24:38.967 INFO PrintBGZFBlockInformation - Shutting down engine; [January 25, 2018 3:24:38 PM EST] org.broadinstitute.hellbender.tools.diagnostics.PrintBGZFBlockInformation done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=190840832; ***********************************************************************. A USER ERROR has occurred: Error while parsing BGZF file. Error message was: testBrokenFile/gnomADaccuracyTest.SynDip.unBlocked.vcf.gz has invalid uncompressedLength: -758824605. ***********************************************************************; Set the system property GATK_STACKTRACE_ON_USER_EXCEPTION (--java-options '-DGATK_STACKTRACE_ON_USER_EXCEPTION=true') to print the stack trace.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4239#issuecomment-360589954:648,test,testBrokenFile,648,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4239#issuecomment-360589954,1,['test'],['testBrokenFile']
Testability,"Also, update code to use Hellbender's IOUtils instead of htsjdk's IOUtil; for these checks. We have both, presumably there's a reason Hellbender has their own and we should use them (for example, we can only add the hinting in our own). Sample error now:. A USER ERROR has occurred: Couldn't read file gs://foo/sam/m54113_160913_184949.scraps.beginning.sam. Error was: Error 403: jp-testing@redacted.iam.gserviceaccount.com does not have storage.objects.get access to foo/sam/m54113_160913_184949.scraps.beginning.sam. Potential cause: incorrect Google Cloud configuration; see instructions in the README. Fixes: #5468",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5477:383,test,testing,383,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5477,1,['test'],['testing']
Testability,"Also, we might want to write some tests for gatk-launch, since it's starting to have lots of different invocation configurations and I find that any line of python code I don't actually run tends to have some horrible error that a compiler would have complained about.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2090#issuecomment-239881662:34,test,tests,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2090#issuecomment-239881662,1,['test'],['tests']
Testability,"Also, we should confirm that the tool itself emits a warning message to the logger when given coordinate-sorted input.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5672#issuecomment-463772659:76,log,logger,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5672#issuecomment-463772659,1,['log'],['logger']
Testability,"Also, we should find out why the travis builds have been appearing to succeed even when these tests fail.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3558#issuecomment-328093511:94,test,tests,94,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3558#issuecomment-328093511,1,['test'],['tests']
Testability,"Also, you had comment about a test being removed, but the comment got lost before I replied to it. The test that I removed was testing for a condition that got converted into an exception, and then avoided by restructuring the calling class to avoid having that condition come up. I added tests to make sure that it throws properly in those cases though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/859#issuecomment-170123169:30,test,test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/859#issuecomment-170123169,4,['test'],"['test', 'testing', 'tests']"
Testability,Also:; - Cleaned up headers in some test resources.; - Made sequence-dictionary checking more uniform across all CNV tools.; - Fixed an NPE bug in PlotModeledSegments input validation.; - Improved documentation regarding sex chromosomes in the ModelSegments pipeline.; - Miscellaneous boy-scout activities. Closes #3916.; Closes #3951.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4268:36,test,test,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4268,1,['test'],['test']
Testability,"Alternatively, if we can't slim down the test data without harming the legitimacy of the tests, we can explore running the VQSR tests in parallel in travis (as a separate test group).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2063#issuecomment-235996850:41,test,test,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2063#issuecomment-235996850,4,['test'],"['test', 'tests']"
Testability,"Although I was again wrong by static-blocks and inheritance (see https://github.com/broadinstitute/gatk/issues/3483), I think that in the case of the tests is better to make overridable this config - thus, I keep it open.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5013#issuecomment-405101030:150,test,tests,150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5013#issuecomment-405101030,1,['test'],['tests']
Testability,"Although this has been resolved (we now have a test with multiple known sites files), are we sure that we have sufficient tests involving indel known sites?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/231#issuecomment-90968924:47,test,test,47,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/231#issuecomment-90968924,2,['test'],"['test', 'tests']"
Testability,Always login to docker on travis instead of qualifying it,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7256:7,log,login,7,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7256,1,['log'],['login']
Testability,"Am 90% certain at this point that the jar they were using for testing was built incorrectly. The `CloudStorageReadChannel.class` file in the latest `google-cloud-nio-0.19.0-alpha-shaded.jar` should be 6169 bytes, but their jar has 5401 bytes for that class. And that's the primary class JP patched in the latest release. So I am pretty hopeful that this was just a simple build error.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2749#issuecomment-306947226:62,test,testing,62,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2749#issuecomment-306947226,1,['test'],['testing']
Testability,Am going to rebase this branch by request of @LeeTL1220 to get travis tests to re-run,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3172#issuecomment-311672809:70,test,tests,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3172#issuecomment-311672809,1,['test'],['tests']
Testability,"An alternate implementation, instead of wrapping RefApiSource and introducing a new interface, is to keep the RefApiSource API as the interface to use, so we only have one. . It's OK if the Spark methods throw NotImplemented on some calls that are not relevant to Spark. Then we can have RefApiSource be mostly empty, and we'd be using subclasses of it (or implementations, depending on whether we go the abstract class or interface route). . We still need some way to stub, because there are places deep in the code that call RefApiSource.getInstance(). We could have a getDataflowInstance() and a getSparkInstance() - the former would normally return the code formerly known as RefApiSource, except if tests set up the mock. getSparkInstance can return always the same thing apparently since you didn't see a need for a mock - but this way if we need it later, at least the code follows the same pattern.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/804#issuecomment-130793086:469,stub,stub,469,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/804#issuecomment-130793086,4,"['mock', 'stub', 'test']","['mock', 'stub', 'tests']"
Testability,An examination of the current test suite runtimes shows that the test suite could be split quite evenly along the utils/tools boundary.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1769#issuecomment-214503706:30,test,test,30,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1769#issuecomment-214503706,2,['test'],['test']
Testability,An experiment related to failed tests in #6042,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6046:32,test,tests,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6046,1,['test'],['tests']
Testability,"An update on this, I restarted with genomicsdb-segment-size as you suggested. here's the timing thus far:. ```; 26 Feb 2022 02:19:16,306 DEBUG: 	02:19:16.301 INFO GenomicsDBImport - Callset Map JSON file will be re-written to /home/exacloud/gscratch/prime-seq/workDir/0950f56d-7565-103a-a738-f8f3fc8675d2/Job4.work/WGS_1852_consolidated.gdb/callset.json; 26 Feb 2022 02:19:16,312 DEBUG: 	02:19:16.301 INFO GenomicsDBImport - Incrementally importing to workspace - /home/exacloud/gscratch/prime-seq/workDir/0950f56d-7565-103a-a738-f8f3fc8675d2/Job4.work/WGS_1852_consolidated.gdb; 26 Feb 2022 03:45:50,581 DEBUG: 	03:45:50.445 INFO GenomicsDBImport - Done importing batch 1/5; 26 Feb 2022 05:24:59,873 DEBUG: 	05:24:59.588 INFO GenomicsDBImport - Done importing batch 2/5; 26 Feb 2022 06:45:40,497 DEBUG: 	06:45:40.103 INFO GenomicsDBImport - Done importing batch 3/5; 26 Feb 2022 08:00:46,636 DEBUG: 	08:00:46.328 INFO GenomicsDBImport - Done importing batch 4/5; ```. So it progressed through the first 4 batches, which is what it did originally. Previously, it would always die after logging this line. It's been at this point for ~24H, but at least it appears to still be running. Do you expect it to log 'done importing batch 5/5'? Any idea what GenomicsDB is doing in this phase?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7674#issuecomment-1053576986:1086,log,logging,1086,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7674#issuecomment-1053576986,2,['log'],"['log', 'logging']"
Testability,"And it would be lovely to port the fix to GATK3 assuming it's similarly; affected.; On Tue, May 24, 2016 at 10:19 PM Adam Kiezun notifications@github.com; wrote:. > is this is actual NPE that surfaces when running this tool? if yes, can we; > have a regression test for it (ie make a test with an actual small input; > that blows up); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/broadinstitute/gatk/pull/1853#issuecomment-221456201; > ; > ## ; > ; > Geraldine A. Van der Auwera, PhD; > Manager of Outreach and Communications; > Data Sciences and Data Engineering; > Broad Institute",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1853#issuecomment-221465429:261,test,test,261,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1853#issuecomment-221465429,2,['test'],['test']
Testability,And make sure we have tested examples for all kinds of walkers.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/323#issuecomment-146268591:22,test,tested,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/323#issuecomment-146268591,1,['test'],['tested']
Testability,And need to add tests?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4918#issuecomment-398595262:16,test,tests,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4918#issuecomment-398595262,1,['test'],['tests']
Testability,"And probably other kinds of files too. The stack below results from handing it a .ADAM file in the MeanQualityByCycleSparkIntegrationTest.test_ADAM test. The ReadSparkSource code is currently delegating to Hadoop-BAM, which is in turn delegating to promiscuous htsjdk code that says anything that doesn't look like known file type [must be a SAM file](https://github.com/samtools/htsjdk/blob/bd92747fd3672635de96473fea6d4b38e8635c8e/src/java/htsjdk/samtools/SAMFileReader.java#L754). It then happily creates a bogus SAMFileHeader from the .ADAM stream. All 3 layers should probably be more discriminating. This currently doesn't break any tests. I discovered it when running the HB tests against a local version of htsjdk with a strict setHeader implementation that attempts to resolve all reference names on every setHeader call. That code caused this test to fail because its using the bogus header. ""main@1"" prio=5 tid=0x1 nid=NA runnable; java.lang.Thread.State: RUNNABLE; at htsjdk.samtools.SAMTextHeaderCodec.decode(SAMTextHeaderCodec.java:113); at htsjdk.samtools.SAMTextReader.readHeader(SAMTextReader.java:200); at htsjdk.samtools.SAMTextReader.<init>(SAMTextReader.java:63); at htsjdk.samtools.SAMTextReader.<init>(SAMTextReader.java:73); at htsjdk.samtools.SAMFileReader.init(SAMFileReader.java:684); at htsjdk.samtools.SAMFileReader.<init>(SAMFileReader.java:148); at org.seqdoop.hadoop_bam.util.SAMHeaderReader.readSAMHeaderFrom(SAMHeaderReader.java:66); at org.seqdoop.hadoop_bam.util.SAMHeaderReader.readSAMHeaderFrom(SAMHeaderReader.java:47); at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSource.getHeader(ReadsSparkSource.java:195); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeReads(GATKSparkTool.java:284); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.initializeToolInputs(GATKSparkTool.java:264); at org.broadinstitute.hellbender.engine.spark.GATKSparkTool.runPipeline(GATKSparkTool.java:255); at org.broadinstitute.hel",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1280:148,test,test,148,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1280,4,['test'],"['test', 'tests']"
Testability,"And testBQSRCloud passes.; This contrasts with my local branch (#863, awaiting review) where testBQSRBucket passes but testBQSRCloud fails.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/866#issuecomment-135506244:4,test,testBQSRCloud,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/866#issuecomment-135506244,3,['test'],"['testBQSRBucket', 'testBQSRCloud']"
Testability,And there are only five warning involving the `variantutils` package:. ```; 2022-08-16T00:09:07.2671678Z src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/PosteriorProbabilitiesUtils.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.2726493Z src/main/java/org/broadinstitute/hellbender/engine/FeatureContext.java:3: error: package com.google.common.annotations does not exist; --; 2022-08-16T00:09:07.3012792Z src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/ReblockGVCF.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.3151812Z src/main/java/org/broadinstitute/hellbender/utils/logging/OneShotLogger.java:3: error: package com.google.common.annotations does not exist; --; 2022-08-16T00:09:07.4015304Z src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/LeftAlignAndTrimVariants.java:3: error: package com.google.common.annotations does not exist; 2022-08-16T00:09:07.4023160Z src/main/java/org/broadinstitute/hellbender/utils/Utils.java:3: error: package com.google.common.collect does not exist; --; 2022-08-16T00:09:07.4438276Z src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/PosteriorProbabilitiesUtils.java:251: error: cannot find symbol; 2022-08-16T00:09:07.4438417Z @VisibleForTesting; --; 2022-08-16T00:09:07.4439223Z src/main/java/org/broadinstitute/hellbender/tools/walkers/variantutils/PosteriorProbabilitiesUtils.java:271: error: cannot find symbol; 2022-08-16T00:09:07.4439362Z @VisibleForTesting; ```. None of them appear to differ from the other warnings.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217242923:701,log,logging,701,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217242923,1,['log'],['logging']
Testability,"And with the third option (using jdk inflater/deflator) the first error I found is:. ```; Using GATK jar /usr/gitc/gatk4/gatk-package-4.beta.1-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=1 -Dsnappy.disable=true -XX:GCTimeLimit=50 -XX:GCHeapFreeLimit=10 -XX:+PrintFlagsFinal -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+PrintGCDetails -Xloggc:gc_log.log -Xms4000m -jar /usr/gitc/gatk4/gatk-package-4.beta.1-local.jar BaseRecalibrator -R /cromwell_root/broad-references/hg38/v0/Homo_sapiens_assembly38.fasta -I gs://broad-gotc-dev-cromwell-execution/PairedEndSingleSampleWorkflow/66442def-ad3f-4c6c-960e-17578f6b382c/call-SortAndFixSampleBam/CHMI_CHMI3_WGS2.aligned.duplicate_marked.sorted.bam --useOriginalQualities -O CHIM.recal_data.csv -knownSites gs://broad-references/hg38/v0/Homo_sapiens_assembly38.dbsnp138.vcf -knownSites /cromwell_root/broad-references/hg38/v0/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz -knownSites /cromwell_root/broad-references/hg38/v0/Homo_sapiens_assembly38.known_indels.vcf.gz -L chr11:1+ --use_jdk_deflater --use_jdk_inflater; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp.hlHVlU; [July 24, 2017 5:49:13 PM UTC] BaseRecalibrator --useOriginalQualities true --knownSites gs://broad-references/hg38/v0/Homo_sapiens_assembly38.dbsnp138.vcf --knownSites /cromwell_root/broad-references/hg38/v0/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz --knownSites /cromwell_root/broad-references/hg38/v0/Homo_sapiens_assembly38.known_indels.vcf.gz --output CHIM.recal_data.csv --intervals chr11:1+ --input gs://broad-gotc-dev-cromwell-execution/PairedEndSingleSampleWorkflow/66442def-ad3f-4c6c-960e-17578f6b382c/call-SortAndFixSampleBam/CHMI_CHMI3_WGS2.aligned.duplicate_marked.sorted.bam --reference /cromwell_root/broad-references/hg38/v0/Homo_sapiens_assembly38.fasta --use_jdk_deflater true --use_jdk_inflater true ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549881:490,log,log,490,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3316#issuecomment-317549881,1,['log'],['log']
Testability,AndFailureCallbacks(Utils.scala:1348); 	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13.apply(PairRDDFunctions.scala:1211); 	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13.apply(PairRDDFunctions.scala:1190); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); 	at org.apache.spark.scheduler.Task.run(Task.scala:86); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745). **This is the stack I get when the test completes but fails (note that the expected line count appears to not match the line count of the expected output file in the repo): **. java.lang.AssertionError: line counts expected [2629] but found [507]; 	at org.testng.Assert.fail(Assert.java:94); 	at org.testng.Assert.failNotEquals(Assert.java:496); 	at org.testng.Assert.assertEquals(Assert.java:125); 	at org.testng.Assert.assertEquals(Assert.java:372); 	at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.assertEqualTextFiles(IntegrationTestSpec.java:211); 	at org.broadinstitute.hellbender.utils.test.IntegrationTestSpec.assertEqualTextFiles(IntegrationTestSpec.java:190); 	at org.broadinstitute.hellbender.tools.examples.ExampleAssemblyRegionWalkerSparkIntegrationTest.testExampleAssemblyRegionWalker(ExampleAssemblyRegionWalkerSparkIntegrationTest.java:29); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2349:3263,test,testng,3263,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2349,1,['test'],['testng']
Testability,AndPass.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/filteredSamples.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/filteringDepthInFormat.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/filteringZInFormatWithMissing.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/goodMask.bed.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/twoDeletions.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/unfilteredForFiltering.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/variantFiltrationInfoField.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/vcfexample2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/vcfMask.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/ad-bug-input.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/CEUTrio.20.21.missingIndel.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/chr21.bad.pl.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combined_genotype_gvcf_exception.nocall.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combined_genotype_gvcf_exception.original.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combine.single.sample.pipeline.1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combine.single.sample.pipeline.2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/GenotypeGVCFs/combine.single.sample.pipeline.3.vcf.idx; src/test/resou,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:56198,test,test,56198,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"Andrey is OOO, but maybe @lbergelson knows---is it expected that the CNN tests are failing (due to keras being missing)? I think I just need to get oriented about the order in which this and any other PRs (e.g., to replace or otherwise reorganize code for the CNN) are going to be merged.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8094#issuecomment-1324213574:73,test,tests,73,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8094#issuecomment-1324213574,1,['test'],['tests']
Testability,"Anecdotally, some people have seen logging issues around the Conda; progress bars filling logs. I know Conda had a change request to add a; silent or quiet mode. Suggestions on the back of a postcard... On Mon 15 Oct 2018, 21:27 Chris Norman, <notifications@github.com> wrote:. > Changing the exception throwing code won't help with either of those -; > that code would only execute when the tool is actually run. Currently, the; > PR is failing to even build on Travis during the part of the build where it; > creates the Docker image on which the tests will run. Travis is killing it; > because its producing so much progress output during the conda environment; > creation - right when its resolving tensorflow packages.; >; > My suggestion above was to see if we can (at least temporarily) get past; > that so we can see how big the Docker is, and whether the CNNScoreVariants; > tests pass with the new environment. Then we can figure out if we have any; > additional issues to resolve.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430000969>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AG6lrwV2gaTYs6ur_AXznl6iV0AMxQ8Cks5ulO_DgaJpZM4XNHdi>; > .; >",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430007451:35,log,logging,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430007451,4,"['log', 'test']","['logging', 'logs', 'tests']"
Testability,AnnotatePairOrientation needs more testing before it can be taken out of experimental status,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3623:35,test,testing,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3623,1,['test'],['testing']
Testability,AnnotatedIntervalCodec has not been tested with NIO,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4579:36,test,tested,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4579,1,['test'],['tested']
Testability,"Annotation will not be calculated, genotype is not called or alleleLikelihoodMap is null; ```. I have a theory about what's going on, and I'm hoping someone who is more knowledgable can tell me if my theory is sensible or impossible, and if there's anything I can do to confirm it. My theory is this: that a) the one bad job got run on a compute instance that has a hardware issue that intermittently affects only AVX operations, b) that the Intel native PairHMM doesn't handle that situation gracefully but instead returns an empty likelihoods map and c) that's causing the warnings I'm seeing the discrepancies in the gVCFs. I'm at a bit of a loss for what to do here since I've tried multiple times to reproduce the issue and cannot. And therefore also can't try running with different GATK versions or options etc. But at the same time if it's possible for a hardware issue to cause these problems without crashing the GATK that's very scary. The following is the logging prior to traversal so you can see which versions of various things are in use:. ```; 03:15:01.986 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:conda/share/gatk4-4.1.4.1-1/gatk-package-4.1.4.1-local.jar!/com/intel/gkl/native/libgkl_compression.so; Oct 09, 2020 3:15:02 AM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 03:15:02.169 INFO HaplotypeCaller - ------------------------------------------------------------; 03:15:02.170 INFO HaplotypeCaller - The Genome Analysis Toolkit (GATK) v4.1.4.1; 03:15:02.170 INFO HaplotypeCaller - For support and documentation go to https://software.broadinstitute.org/gatk/; 03:15:02.170 INFO HaplotypeCaller - Executing as <redacted> on Linux v4.4.0-1114-aws amd64; 03:15:02.170 INFO HaplotypeCaller - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_144-b01; 03:15:02.170 INFO HaplotypeCaller - Start Date/Time: October <redacted>; 03:15:02.170 INF",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6889:2664,log,logging,2664,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6889,1,['log'],['logging']
Testability,Another build which shows that both read and write completed with only the jar from Maven central:; https://travis-ci.org/kgururaj/TestGenomicsDBJar/builds/224470365,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296283732:131,Test,TestGenomicsDBJar,131,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2389#issuecomment-296283732,1,['Test'],['TestGenomicsDBJar']
Testability,"Another error, probably related, is in ReadsSparkSinkUnitTest when run on NA12878_20_21_WGS_bam. ```; Gradle suite > Gradle test > org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSinkUnitTest.readsSinkTest[3](/home/travis/build/broadinstitute/gatk/src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam, ReadsSparkSinkUnitTest4, .bam) FAILED; java.lang.AssertionError: Reads are out of order (compare=121017): 20GAVAAXX100126:8:45:9150:97256 99 21 10121582 0 101M = 10121932 437 TATGAGCTACCATGTCTCCTGTTTAACCTGAGTCTGAAGAGATTCAAAGTGCAGGTGCCATGAATGCCTCTTTAATAGCTCCATGTCGATTGATTTTCTGG DDDBGFFEFEFFBFFFHFAHGFDGGHEFHDGGFF@DBDCE?GFGFHHEGFAFHG6FGFFFGGFHA>>@B>BDCDDFGGFHFFHGGFF>H=>>=D<GGBGGF X0:i:5 X1:i:0 MD:Z:101 RG:Z:20GAV.8 XG:i:0 AM:i:0 NM:i:0 SM:i:0 XM:i:0 XO:i:0 BQ:Z:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A MQ:i:0 OQ:Z:HHHHHHHGHHHGFHHHHHFHHHGHHHHHHGHHHHDGEGGGEHHHHHHGHHFHHH:HHHHGHHGHE??ADAEGGGGHHHHHHHHHHHHHHBBBBF?HHFHHH XT:A:R; and 20GAVAAXX100126:6:4:14681:182722 163 21 10000565 0 64M37S = 10000875 410 TGTGATCCACCCGCCTTGGCCTCCCAAAGTGCTCGGATTACAGGCATGAGCCACCGTGAGTGACCTTGCGTTGTGATTTTTACGACAATTATCCCATATGT BC;?897=><=120-E??-5D-CDDAH6:-;F9(03/65E5@F0%(65G6@B5=G&=;C?B7F###################################### X0:i:7 X1:i:2 XC:i:64 MD:Z:8G24G30 RG:Z:20GAV.6 XG:i:0 AM:i:0 NM:i:2 SM:i:0 XM:i:2 XO:i:0 BQ:Z:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ MQ:i:0 OQ:Z:B@6@859<<<;192-@;;15@+@@@=B35&<B5(97079B<?B6((:6B6=@4>A+<<B=>7A###################################### XT:A:R; expected [true] but found [false]; at org.testng.Assert.fail(Assert.java:94); at org.testng.Assert.failNotEquals(Assert.java:496); at org.testng.Assert.assertTrue(Assert.java:42); at org.broadinstitute.hellbender.engine.spark.datasources.ReadsSparkSinkUnitTest.readsSinkTest(ReadsSparkSinkUnitTest.java:87). ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162896290:124,test,test,124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1258#issuecomment-162896290,13,"['Assert', 'assert', 'test']","['Assert', 'AssertionError', 'assertTrue', 'test', 'testng']"
Testability,"Another issue that came up on the URI migration branch. The implementation of this method declares that only the `ReferenceTwoBitSparkSource` implementation of `ReferenceSparkSource` is broadcastable, but the method is unused, and there are tools with tests (`CpxVariantReInterpreterSparkIntegrationTest`) that broadcast both the File and Hadoop implementations. So we should either take this, or fix the callers to be more discriminating.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6523:252,test,tests,252,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6523,1,['test'],['tests']
Testability,"Another one for you, @LeeTL1220, if you don't mind. It's not as long as it looks, most of the additions are test resources. Thanks in advance!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4268#issuecomment-360648291:108,test,test,108,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4268#issuecomment-360648291,1,['test'],['test']
Testability,"Another question: is there a way to get the test data used for GATK3 and VariantEval? Even if they're not small enough to reasonably check in, it would be at least useful to use that integration test as a way to validate it's working as expected in GATK4.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-337340876:44,test,test,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-337340876,2,['test'],['test']
Testability,Another test for BigQueryUtils,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6861:8,test,test,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6861,1,['test'],['test']
Testability,"Another thing that just come to my mind is to rely on [SLF4J](https://www.slf4j.org/) for logging - downstream projects can configure which logger they want to use, and they can have their own ways of setting logging verbosity. If the logging system from HTSJDK wants to be maintain, it can also add a simple implementation of SLF4J with the verbosity levels that are in the current implementation.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4340#issuecomment-371401288:90,log,logging,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4340#issuecomment-371401288,4,['log'],"['logger', 'logging']"
Testability,"Another update: when test run on 10,000 files using 4 executors, one strange observation is that only one executor is doing the work, leading to low efficiency. Not sure exactly why this is the case.; http://dataflow01.broadinstitute.org:18088/history/application_1464285223085_0152/executors/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1877#issuecomment-223853392:21,test,test,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1877#issuecomment-223853392,1,['test'],['test']
Testability,"Another user reported a very similar error while running:. ```; ./gatk/gatk-launch MarkDuplicatesSpark -I ../NA12878.bwa.sam -R ../B37/human_g1k_v37_decoy.fasta -O testMD.bam --sparkRunner SPARK --sparkMaster local[64] > NA12878.MD.spark 2>&1; ```. ```; [February 22, 2016 3:53:50 PM CST] org.broadinstitute.hellbender.tools.spark.transforms.markduplicates.MarkDuplicatesSpark done. Elapsed time: 19.84 minutes.; Runtime.totalMemory()=38586548224; java.lang.ClassCastException: htsjdk.samtools.SAMRecord cannot be cast to htsjdk.samtools.SAMRecord; at org.broadinstitute.hellbender.utils.read.HeaderlessSAMRecordCoordinateComparator.compare(HeaderlessSAMRecordCoordinateComparator.java:13); at scala.math.LowPriorityOrderingImplicits$$anon$7.compare(Ordering.scala:153); at scala.math.Ordering$$anon$5.compare(Ordering.scala:122); at java.util.TimSort.countRunAndMakeAscending(TimSort.java:351); at java.util.TimSort.sort(TimSort.java:230); at java.util.Arrays.sort(Arrays.java:1438); at scala.collection.SeqLike$class.sorted(SeqLike.scala:615); at scala.collection.AbstractSeq.sorted(Seq.scala:40); at scala.collection.SeqLike$class.sortBy(SeqLike.scala:594); at scala.collection.AbstractSeq.sortBy(Seq.scala:40); at org.apache.spark.RangePartitioner$.determineBounds(Partitioner.scala:281); at org.apache.spark.RangePartitioner.<init>(Partitioner.scala:154); at org.apache.spark.rdd.OrderedRDDFunctions$$anonfun$sortByKey$1.apply(OrderedRDDFunctions.scala:62); at org.apache.spark.rdd.OrderedRDDFunctions$$anonfun$sortByKey$1.apply(OrderedRDDFunctions.scala:61); at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:147); at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:108); at org.apache.spark.rdd.RDD.withScope(RDD.scala:306); at org.apache.spark.rdd.OrderedRDDFunctions.sortByKey(OrderedRDDFunctions.scala:61); at org.apache.spark.api.java.JavaPairRDD.sortByKey(JavaPairRDD.scala:922); at org.broadinstitute.hellbender.engine.spark.datasource",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1315#issuecomment-188391775:164,test,testMD,164,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1315#issuecomment-188391775,1,['test'],['testMD']
Testability,Answers inline and made a minor update based on review comments. Back to @jonn-smith. Also this branch has conflict now I'll rebase and run test again once we're ready to merge.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5093#issuecomment-417749401:140,test,test,140,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5093#issuecomment-417749401,1,['test'],['test']
Testability,Any chance you could test with GATK 4.1.0.0 to make sure it's still happening? GATK 3.5 is no longer maintained.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5789#issuecomment-472137336:21,test,test,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5789#issuecomment-472137336,1,['test'],['test']
Testability,Any solutions for this? (besides increasing the ulimit to ungodly numbers or docker) I am testing a pipeline in an HPC cluster and I am running with this issue (too many open files) but in mutect2:; ```bash; A USER ERROR has occurred: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai. ***********************************************************************; org.broadinstitute.hellbender.exceptions.UserException$CouldNotReadInputFile: Couldn't read file file:///home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa. Error was: Fasta index file could not be opened: /home/jshleap/projects/def-jshleap/IBM_benchmark/benchmark/Homo_sapiens_assembly38.fa.fai; at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:145); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:111); at org.broadinstitute.hellbender.utils.fasta.CachingIndexedFastaSequenceFile.<init>(CachingIndexedFastaSequenceFile.java:96); at org.broadinstitute.hellbender.engine.ReferenceFileSource.<init>(ReferenceFileSource.java:35); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.makeStandardMutect2PostFilterReadTransformer(Mutect2Engine.java:165); at org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2.makePostReadFilterTransformer(Mutect2.java:263); at org.broadinstitute.hellbender.engine.AssemblyRegionWalker.traverse(AssemblyRegionWalker.java:279); at org.broadinstitute.hellbender.engine.GATKTool.doWork(GATKTool.java:1048); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.runTool(CommandLineProgram.java:139); at org.broadinstitute.hellbender.cmdline.CommandLineProgram.instanceMainPostParseArgs(CommandLineProgram.j,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291:90,test,testing,90,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598198291,5,"['benchmark', 'test']","['benchmark', 'testing']"
Testability,Any test data larger than about 1-2 MB we typically put into `src/test/resources/large` and check into git lfs (see https://github.com/broadinstitute/gatk#lfs for setup/usage instructions),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-358053968:4,test,test,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-358053968,2,['test'],['test']
Testability,Any test that tries to access a bucket seems to stall indefinitely. I think this has to do with gcloud not accepting our credentials file on travis. I suspect it's trying to open a web browser. I suspect it may need to be reconfigured with a service account key and an explicit authorization step before the build.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/444:4,test,test,4,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/444,1,['test'],['test']
Testability,"Any update on this? I just ran into a form of this problem in the context of some pipeline unit tests. I have a task that runs the following:. ```; gatk GenomicsDBImport \; --sample-name-map ${sample_map} \; --genomicsdb-workspace-path ${cohort_name}_gdb \; --genomicsdb-shared-posixfs-optimizations \; -L ${interval_list}. gatk GenotypeGVCFs \; -R ${ref_fasta} \; -V gendb://${cohort_name}_gdb \; -O ${cohort_name}.joint.vcf \; -L ${interval_list} ; ```. Which runs fine, but if I re-run the test suite the system complains it can't delete the gdb workspace. I have to manually `sudo rm` which is gross. I can work around this by adding either `chmod 777 -R ${cohort_name}_gdb` or `rm -r ${cohort_name}_gdb` as a cleanup step, but that seems gross too. . My use case is just a toy example for training purposes, but I worry about what this could mean for a production environment. Am I missing something?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8233#issuecomment-2078126120:96,test,tests,96,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8233#issuecomment-2078126120,2,['test'],"['test', 'tests']"
Testability,"Apologies @bbimber -- your efforts to port this tool to GATK4 are much appreciated. Our team has been extremely busy with the lead up to the 4.0 release, which is why we haven't been as responsive lately. I'll have someone take a look at the test data in question to see if it can be publicly shared.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/616#issuecomment-358029799:242,test,test,242,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/616#issuecomment-358029799,1,['test'],['test']
Testability,"Apologies on the poor report. There are no other users in these compute nodes (I am the tester) and for all intents and purposes the ulimit is pretty high (hard limit of 8192 max files). I am using GATK version 4.1.4.1, although it might be the one that has been optimised for IBM power9 systems by @ruzhuchen. Currently I am waiting for the sys admin to increase the max files further, but I believe that this is far from ideal. Here is the (simplified) command:; ```bash; gatk --java-options ""-Xmx40g -Djava.library.path=/bio/apps/gatk_4.1.4/gatk-4.1.4.1/libs -DGATK_STACKTRACE_ON_USER_EXCEPTION=true"" Mutect2 -R Homo_sapiens_assembly38.fa -I illuminaN_hg38.br.recal.bam --max-mnp-distance 0 -O illuminaN.vcf.gz; ```; May be I am running it wrong?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598233814:88,test,tester,88,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5316#issuecomment-598233814,1,['test'],['tester']
Testability,"Apologies! Switched to the correct branch. I tested it with a troublesome region I identified in one of the chromosomes, using the following command:. ```; gatk --java-options ""-Xmx8g"" GenotypeGVCFs -R genome.fasta -V gendb://test_database -O gttest.chrom2.vcf.gz --tmp-dir=/db --sample-ploidy 24 -L chrom2:4320000-4400000 --only-output-calls-starting-in-intervals ; ```. Run info:. ```; INFO GenotypeGVCFs - ------------------------------------------------------------; INFO GenotypeGVCFs - The Genome Analysis Toolkit (GATK) v4.1.4.1-7-gdb054ab-SNAPSHOT; INFO GenotypeGVCFs - For support and documentation go to https://software.broadinstitute.org/gatk/; INFO GenotypeGVCFs - Executing as marco.pessoa@baru.local on Linux v3.10.0-1062.4.1.el7.x86_64 amd64; INFO GenotypeGVCFs - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_232-b09; INFO GenotypeGVCFs - Start Date/Time: January 14, 2020 1:53:14 PM BRT; INFO GenotypeGVCFs - ------------------------------------------------------------; INFO GenotypeGVCFs - ------------------------------------------------------------; INFO GenotypeGVCFs - HTSJDK Version: 2.21.0; INFO GenotypeGVCFs - Picard Version: 2.21.2; INFO GenotypeGVCFs - HTSJDK Defaults.COMPRESSION_LEVEL : 2; INFO GenotypeGVCFs - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; INFO GenotypeGVCFs - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; INFO GenotypeGVCFs - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; INFO GenotypeGVCFs - Deflater: IntelDeflater; INFO GenotypeGVCFs - Inflater: IntelInflater; INFO GenotypeGVCFs - GCS max retries/reopens: 20; INFO GenotypeGVCFs - Requester pays: disabled; INFO GenotypeGVCFs - Initializing engine; ```. Run starts, a few variants are detected. Then It gets stuck in a region for about 30 minutes, and prints an out-of-memory error:. ```; INFO ProgressMeter - chrom2:4323711 0.3 2000 7859.6; INFO ProgressMeter - chrom2:4325583 0.6 3000 4753.5; INFO ProgressMeter - chrom2:4327262 0.8 4000 5010.5; INFO ProgressMeter",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6275#issuecomment-574329688:45,test,tested,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6275#issuecomment-574329688,1,['test'],['tested']
Testability,"Apologies, I'd missed the unit test before. We expect these to change since we now include REF alleles in the outputs. I updated the tests and rebased so hopefully checks will now finish cleanly.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3490#issuecomment-324591544:31,test,test,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3490#issuecomment-324591544,2,['test'],"['test', 'tests']"
Testability,"Applied all the changes. Sadly, we're again just over the limit for metadata, so the cloud test fails. This is probably related to #580. Investigating. FWIW, The error message is the following:. INFO: Job finished with status FAILED; 2015-06-24T20:10:32.657Z: Error: (f6e58f70eaefdd34): Workflow failed. Causes: (927072a024420657): Step setup_resource_global_gce_worker_pool3: Set up of resource global_gce_worker_pool failed Causes: (927072a0244205e2): Unable to create VMs. Causes: (927072a02442056d): Error:; Message: Value for field 'resource.metadata.items[1].value' is too large; HTTP Code: 413; 2015-06-24T20:10:32.732Z: Detail: (9e816d0c4aa89aa6)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/595#issuecomment-114997384:91,test,test,91,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/595#issuecomment-114997384,1,['test'],['test']
Testability,"Applied feedback, rebased, squashed. Merge pending passing tests. Thank you!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107694686:59,test,tests,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/535#issuecomment-107694686,1,['test'],['tests']
Testability,"Applied feedback, reproduced bug and updated our description (#650), submitted bug report (https://github.com/google/google-http-java-client/issues/297), squashed. Merging once tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/835#issuecomment-132698966:177,test,tests,177,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/835#issuecomment-132698966,1,['test'],['tests']
Testability,Apply a fix that Miguel made here: https://github.com/broadinstitute/gatk/pull/8785 but did not merge (yet - because he didn't want to disrupt the VAT that at time was under construction). This fixes a bug in the partioning logic used in creating Hail VAT inputs.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8911:224,log,logic,224,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8911,1,['log'],['logic']
Testability,Apply latest test changes to echo callset,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8807:13,test,test,13,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8807,1,['test'],['test']
Testability,ApplyBQSR CRAM tests.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1564:15,test,tests,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1564,1,['test'],['tests']
Testability,ApplyBQSR: cloud tests that pass,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/595:17,test,tests,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/595,1,['test'],['tests']
Testability,"ApplyBQSRDataflow, with passing tests.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/835:32,test,tests,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/835,1,['test'],['tests']
Testability,ApplyBQSRIntegrationTest needs CRAM tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1226:36,test,tests,36,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1226,1,['test'],['tests']
Testability,"Are some of the FASTA test files misnamed? For example, src/test/resources/large/human_g1k_v37.20.21.fasta seems to only include chr20, but the associated dict and fai include chr21 as well. Is this intentional?",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3904:22,test,test,22,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3904,2,['test'],['test']
Testability,"Are there tests for the newly-ported CigarUtils methods?. Also, need a better commit description than ""wip"" :)",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/151#issuecomment-71214051:10,test,tests,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/151#issuecomment-71214051,1,['test'],['tests']
Testability,"Are you building this from the docker `broadinstitute/gatk` image?. If so, I've found an error in it (@sooheelee, @samuelklee )... the Docker Manifest has set:; ```; export HOME=""/root""; ````; ... That's going to make some things not work if you're using it as a non-root user. If you are using that, try building from a Singularity definition file that looks like:. ```; Bootstrap: docker; From: broadinstitute/gatk. %environment; export HOME=/path/to/home. %runscript; bash -c ""source activate gatk; /gatk/gatk \""$@\""""; ```; I'm still testing this since I don't know the gatk software at all ... but with setting HOME in `%environment` you'll be overriding what the Docker manifest is setting. Setting `%runscript` you can then execute `gatk` by running:. ```; singularity run gatk.simg DetermineGermlineContigPloidy \; -L filtered.interval_list \; --input A1.count.hdf5 --input A2.count.hdf5 \; --contig-ploidy-priors contig_ploidy_priors_homo_sapiens.tsv \; --interval-merging-rule OVERLAPPING_ONLY \; --output out \; --output-prefix exomeseq \; --verbosity DEBUG \; --mean-bias-standard-deviation 0.01 \; --mapping-error-rate 0.01 \; --global-psi-scale 0.001 \; --sample-psi-scale 0.0001; ```; Or if `gatk.simg` is executable, by just calling that image file if `run-singularity` is in your path. You just need to pass the options to gatk, not call gatk. So that would be:; ```; ./gatk.simg DetermineGermlineContigPloidy [...]; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433557019:537,test,testing,537,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4782#issuecomment-433557019,1,['test'],['testing']
Testability,"Are you testing with a single chromosome interval or multiple intervals? If a single interval, there should be no difference since a single thread will be used.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4645#issuecomment-387760986:8,test,testing,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4645#issuecomment-387760986,1,['test'],['testing']
Testability,"Aren't those consistent with the count files in src/test/resources/org/broadinstitute/hellbender/tools/copynumber/gcnv-sim-data/?. See some possibly related discussion in https://github.com/broadinstitute/gatk/issues/6924. However, it's possible that test data needs resyncing more generally, including the model/call files used in the WDL tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6957#issuecomment-726890240:52,test,test,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6957#issuecomment-726890240,3,['test'],"['test', 'tests']"
Testability,ArgumentsBuilder in Mutect2 pipeline tool tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6219:42,test,tests,42,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6219,1,['test'],['tests']
Testability,ArtificallyContaminatedBams/contamination.case.4.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.5.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.6.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.7.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.8.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.1.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.2.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.3.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.4.txt; src/test/resources/org/broadinstitute/hellbender/tools/ArtificallyContaminatedBams/contamination.case.broken.5.txt; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/bqsr.fakeSitesForTesting.b37.chr17.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/bqsr.fakeSitesForTesting.b37.chr20.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/bqsr.manyObservations.full.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/bqsr.manyObservations.piece.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.cram.bai; src/test/resources/org/broadinstitute/hellbender/tools/BQSR/CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.noMD.noBQSR.md.bqsr.bam.bai; src/test/resources/org/broadinstit,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:17554,test,test,17554,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"As I recall I put that switch in because the error log seemed to suggest that is the point at which it ran out of allocated memory. . . From: Louis Bergelson <notifications@github.com> ; Sent: Wednesday, October 30, 2019 3:58 PM; To: broadinstitute/gatk <gatk@noreply.github.com>; Cc: rdbremel <rdbremel017@gmail.com>; Mention <mention@noreply.github.com>; Subject: Re: [broadinstitute/gatk] Funcotator shuts down (#6182). . Very strange. We should look into that. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub <https://github.com/broadinstitute/gatk/issues/6182?email_source=notifications&email_token=ANCR2VDTW3RZLYED6HR274LQRHYPDA5CNFSM4I2MRFQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECVXZKI#issuecomment-548109481> , or unsubscribe <https://github.com/notifications/unsubscribe-auth/ANCR2VHBDWN7PK2PECLDMALQRHYPDANCNFSM4I2MRFQA> . <https://github.com/notifications/beacon/ANCR2VC35RMPQW7YOGVMNULQRHYPDA5CNFSM4I2MRFQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECVXZKI.gif>",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548110389:51,log,log,51,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548110389,1,['log'],['log']
Testability,"As a compromise fix, I have added a check to the validation code that asserts the dictionaries actually exist to save ourselves the potential null-pointer exceptions. @droazen . Fixes #6142",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6147:70,assert,asserts,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6147,1,['assert'],['asserts']
Testability,As a note to future viewers. As it currently stands enabling process-parallel tests on travis VM's doesn't work well because we don't have enough memory to run 2 simultaneous gatk instances.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1769#issuecomment-288512001:78,test,tests,78,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1769#issuecomment-288512001,1,['test'],['tests']
Testability,"As a result of @jonn-smith 's initial survey of the available libraries, we are going to test out Owner (https://github.com/lviggiano/owner), which appears to satisfy all of our requirements in an elegant and straightforward way.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3078#issuecomment-309543856:89,test,test,89,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3078#issuecomment-309543856,1,['test'],['test']
Testability,"As a stopgap solution to allow `gs://` access on Spark with the local runner, let's add the `gcs-connector` as a project dependency, and craft a test case the runs a simple Spark tool like `PrintReadsSpark` using the local runner with GCS inputs and outputs. I've already started this in the branch https://github.com/broadinstitute/gatk/compare/dr_fix_gcs_spark_writing, but it's not working yet since the gcs-connector requires some extra authentication-related setup.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3125:145,test,test,145,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3125,1,['test'],['test']
Testability,"As an addendum to this task, we would also want to improve the test coverage to the underlying methods by hitting the newly exposed API.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5910#issuecomment-499224455:63,test,test,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5910#issuecomment-499224455,1,['test'],['test']
Testability,"As an example, the following test is failing in [`ExampleFeatureWalkerIntegrationTest`](https://github.com/broadinstitute/gatk/blob/master/src/test/java/org/broadinstitute/hellbender/tools/examples/ExampleFeatureWalkerIntegrationTest.java):. ```java; ...; @Test; public void testExampleFeatureWalkerWithIntervals() throws IOException {; IntegrationTestSpec testSpec = new IntegrationTestSpec(; "" -R "" + hg19MiniReference +; "" -I "" + TEST_DATA_DIRECTORY + ""reads_data_source_test1.bam"" +; "" -F "" + TEST_DATA_DIRECTORY + ""example_features.bed"" +; "" -L 1 "" +; "" -auxiliaryVariants "" + TEST_DATA_DIRECTORY + ""feature_data_source_test.vcf"" +; "" -O %s"",; Arrays.asList(TEST_OUTPUT_DIRECTORY + ""expected_ExampleFeatureWalkerIntegrationTestWithIntervals_output.txt""); );; testSpec.executeTest(""testExampleIntervalWalker"", this);; }; ```. Where `expected_ExampleFeatureWalkerIntegrationTestWithIntervals_output.txt` is just the first feature from the [`expected_ExampleFeatureWalkerIntegrationTest_output.txt`](https://github.com/broadinstitute/gatk/blob/master/src/test/resources/org/broadinstitute/hellbender/tools/examples/expected_ExampleFeatureWalkerIntegrationTest_output.txt):. ```; Current feature: htsjdk.tribble.bed.FullBEDFeature:1:11-300; 	Overlapping reference bases: NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN. 	Overlapping read at 1:200-275; 	Overlapping read at 1:205-280; 	Overlapping read at 1:210-285. 	Overlapping variant at 1:100-100. Ref: G* Alt(s): [A]; 	Overlapping variant at 1:199-200. Ref: GG* Alt(s): [G]; 	Overlapping variant at 1:200-200. Ref: G* Alt(s): [A]; 	Overlapping variant at 1:203-206. Ref: GGGG* Alt(s): [G]; 	Overlapping variant at 1:280-280. Ref: G* Alt(s): [A]; 	Overlapping variant at 1:284-286. Ref: GGG* Alt(s): [G];",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2310:29,test,test,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2310,7,"['Test', 'test']","['Test', 'test', 'testExampleFeatureWalkerWithIntervals', 'testExampleIntervalWalker', 'testSpec']"
Testability,"As determined by @davidadamsphd , the `Copyable` interface idea won't work:. The recommendation from the Dataflow team was to make a narrow API and do the copying part of the API. I started down this route, and I think it might be doable for things like the walker interface. The idea is to make a Copyable interface and have our interfaces extend that. . However, we have unsafe code already in the engine. I tried to make this SafeDoFn approach, however it became clear quickly that we'd have a combinatorial explosion of classes because we don't just have `DoFn<GATKRead,POut>`, but also `<Iterable<GATKRead>,POut>`, and many others. So, this approach will not work for the engine. I then tried to make a general purpose solution (using coders to write to bytes and then recreate a new class). This doesn't work for a few reasons, most critical is that the coder registry isn't Serializable, so that can't be passed down deep enough to get this to work. While working on this, I chatted with someone on the Dataflow team who is working on the verification on the direct runner. He has a PR out and likely going to get it approved soon. So, for the engine, we could always test using the direct runner and know for sure there are not issues (once we can use his code). However, there are two downsides:. 1) We will need to wait for a cut of the SDK (which looking at their previous clip is likely ~ two weeks away). . 2) I don't know if we want the direct runner test as our general purpose solution. Can we expect Comp Bios to always test with the direct runner first? Will they write anything more complex than functions that use the Walker interface?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/702#issuecomment-127403661:1175,test,test,1175,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/702#issuecomment-127403661,3,['test'],['test']
Testability,"As discussed at the GATK Office Hours meeting, the --genotype-germline-sites should no longer be labeled as experimental. Link: [https://gatk.broadinstitute.org/hc/en-us/community/posts/360077847071-Mutect-genotype-germline-sites-status](https://gatk.broadinstitute.org/hc/en-us/community/posts/360077847071-Mutect-genotype-germline-sites-status). \--. If not an error, choose a category for your question(REQUIRED): ; ; e) Will Mutect2's \[--genotype-germline-sites\](/hc/en-us/articles/360037593851-Mutect2#--genotype-germline-sites) be in future releases?. I notice that this flag is still set to `EXPERIMENTAL` in the Mutect2 docs.  Is there a way I can track the status of this feature?  It is important for the functionality of the pipeline I have built (i.e. we want to be able to see all of the germline variants that Mutect wants to call -- doesn't have to perfect per sé, but those calls are important), so we want to ensure it stays in the picture because it seems to be working for our needs (even after a lot of pressure testing).<br><br><i>(created from <a href='https://broadinstitute.zendesk.com/agent/tickets/149087'>Zendesk ticket #149087</a>)<br>gz#149087</i>",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7318:1034,test,testing,1034,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7318,1,['test'],['testing']
Testability,"As discussed briefly on Slack, this would encourage stability of these dependencies and would cut down on Travis build time. (However, we might still want to test the build regularly.). One possible approach would be to use a base yml containing the non-GATK python packages to establish the conda enviroment in the base Docker, and then separately add the lines to pip install the GATK python package for users that might want to use the resulting yml outside of Docker. Note that we may want to clean up dependencies for e.g. VCF processing and perhaps consolidate on a common ML framework at some point in the near future.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6535:158,test,test,158,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6535,1,['test'],['test']
Testability,"As discussed in #5608 with @nalinigans. . ## Software version. GATK v4.1.0.0-32-g213f99c-SNAPSHOT. ## OS/Platform. ```; $ uname -a; Linux hnpv-fargenCompute01 4.4.0-101-generic #124-Ubuntu SMP Fri Nov 10 18:29:59 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux. $ lsb_release -a; No LSB modules are available.; Distributor ID: Ubuntu; Description: Ubuntu 16.04.3 LTS; Release: 16.04; Codename: xenial; ```. ## Command . ```; TILEDB_DISABLE_FILE_LOCKING=1. gatk --java-options ""-Xmx4g -Xms4g"" GenomicsDBImport \; -V [GVCF file] \; -V [GVCF file] \; --genomicsdb-workspace-path data/genomicsdb/run1 \; --tmp-dir=tmp \; -L [target BED file]; ```. ## CIFS configuration. /etc/fstab:; ```; /[servername]/[mountame] /mnt/[mountname] cifs credentials=/root/.smbcredentials,iocharset=utf8,uid=1004,gid=1005,file_mode=0770,dir_mode=0770,noperm,mfsymlinks 0 0; ```. ## Log. Using GATK wrapper script /mnt/fargen/experiments/joint_call/gatk_27-02-2019_213f99c/gatk/build/install/gatk/bin/gatk; Running:; /mnt/fargen/experiments/joint_call/gatk_27-02-2019_213f99c/gatk/build/install/gatk/bin/gatk GenomicsDBImport -V data/gvcf/FN000009.g.vcf.gz -V old_data/FN000010.g.vcf.gz --genomicsdb-workspace-path data/genomicsdb/run1 --tmp-dir=tmp -L /mnt/fargen/resources/sureselect_human_all_exon_v6_utr_grch38/S07604624_Padded.bed; 12:52:35.654 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/mnt/fargen/experiments/joint_call/gatk_27-02-2019_213f99c/gatk/build/install/gatk/lib/gkl-0.8.6.jar!/com/intel/gkl/native/libgkl_compression.so; 12:52:37.520 INFO GenomicsDBImport - ------------------------------------------------------------; 12:52:37.521 INFO GenomicsDBImport - The Genome Analysis Toolkit (GATK) v4.1.0.0-32-g213f99c-SNAPSHOT; 12:52:37.521 INFO GenomicsDBImport - For support and documentation go to https://software.broadinstitute.org/gatk/; 12:52:37.521 INFO GenomicsDBImport - Executing as olavur@hnpv-fargenCompute01.heilsunet.fo on Linux v4.4.0-101-generic amd64; 12:52:37.521 INFO Geno",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5740:851,Log,Log,851,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5740,1,['Log'],['Log']
Testability,"As discussed in #6866, we also need to generate some degenerate artificial data for which the inference does not converge to test for the inference restart.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6893#issuecomment-745631122:125,test,test,125,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6893#issuecomment-745631122,1,['test'],['test']
Testability,"As discussed in GATK office hours, this issue was reported by a user with HaplotypeCaller Spark. The entire stack trace is included below. This request was created from a contribution made by stanedav on August 03, 2020 10:07 UTC. Link: [https://gatk.broadinstitute.org/hc/en-us/community/posts/360072104512-HaplotypeCallerSpark-error](https://gatk.broadinstitute.org/hc/en-us/community/posts/360072104512-HaplotypeCallerSpark-error). \--. Hello, I am testing HaplotypeCallerSpark algorithm on my local machine for speeding up the variant calling. I tried to apply algorithm on my BQSR bam but I am getting this error (full log below):. ERROR Executor: Exception in task 15.0 in stage 5.0 (TID 1324) ; ; java.util.ConcurrentModificationException ... (more in log). Version of GATK: 4.1.7.0. Command I used:. $gatk --java-options ""-Xmx48g -Xms32g"" HaplotypeCallerSpark \\ ; ; \-R hg19.fasta \\ ; ; \-I remdup\_recal.bam \\ ; ; \-O output.g.vcf \\ ; ; \-L wes.bed \\ ; ; \-ERC GVCF \\ ; ; \--dont-use-soft-clipped-bases. Full log:. [https://www.dropbox.com/s/iez0zixclsh86zp/hc.log?dl=0](https://www.dropbox.com/s/iez0zixclsh86zp/hc.log?dl=0)<br><br><i>(created from <a href='https://broadinstitute.zendesk.com/agent/tickets/6546'>Zendesk ticket #6546</a>)<br>gz#6546</i>",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6738:452,test,testing,452,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6738,6,"['log', 'test']","['log', 'testing']"
Testability,"As discussed in https://github.com/broadinstitute/gatk/issues/1203, we are keeping SHUFFLE so that we have a baseline during performance testing. Closing.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2231#issuecomment-288534664:137,test,testing,137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2231#issuecomment-288534664,1,['test'],['testing']
Testability,"As discussed in person I think it would be a little more helpful to provide an option to either log all of the times or none of them, rather than setting a threshold.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1997#issuecomment-245394341:96,log,log,96,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1997#issuecomment-245394341,1,['log'],['log']
Testability,"As discussed in person with @ldgauthier and @davidbenjamin, the final merged version of this PR didn't contain the actual bug fix (just the test).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5661#issuecomment-477729458:140,test,test,140,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5661#issuecomment-477729458,1,['test'],['test']
Testability,"As discussed with @lbergelson, I tested this patch manually on my local machine as well as on a clean Google Cloud VM and found it to work perfectly in all cases. I believe that the test failures here are artifacts of some configuration issue with the Travis CI VM environment, rather than indicative of a real problem. I'll see if I can recruit an external user who ran into the requester pays issue to test this branch for additional confirmation.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7730#issuecomment-1079415266:33,test,tested,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7730#issuecomment-1079415266,3,['test'],"['test', 'tested']"
Testability,"As discussed, creating a issue ticket to investigate why the user is seeing inaccurate genotype calls for spanning deletion. Synthetic bam files have been uploaded to the server with the name parikh_spanning_deletions_data.zip. Included in the folder: ; ./bam_per_RG/ - Contains the synthetic bam and their index files for each sample; ./commands.txt - The commands I used to generate the final files; ./other_files/gatk.bed - Used to generate output for the interval of interest; ./other_files/gvcf_per_RG/ - The gvcf files and the bamout files generated per sample; ./other_files/logs - Logs of HC, GenomicsDBImport, and GenotypeGVCFs; ./other_files/samples.vcf - The final vcf file generated. User was able to replicate the issue using the standard fasta file found at http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6588#issuecomment-624922884:582,log,logs,582,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6588#issuecomment-624922884,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"As explain in the documentation. for logging GATK is using `org.apache.logging.log4j.Logger`. Nevertheless, because I would like to use GATK4 as a framework, I think that API users could benefit from using [SLF4J](http://www.slf4j.org/) as a plugin system for allow users to decide which system use. Because it exists a wrapper for log4j, I think that this could be done easily without changing any behaviour or configuration. In addition, I believe that the usage of SLF4J is similar as the one used in log4j.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2176:37,log,logging,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2176,3,"['Log', 'log']","['Logger', 'logging']"
Testability,"As far as I can tell, even master passes when that line is removed. So the comments in the integration test are already misleading or out of date. Do you see differently?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7709#issuecomment-1064187912:103,test,test,103,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7709#issuecomment-1064187912,1,['test'],['test']
Testability,"As far as I can tell, they've just turned off the entire genomics api. I'm going to disable these tests immediately and then wait until I hear back from google to decide what to do in the future. . There's a support ticket [here](https://enterprise.google.com/supportcenter/managecases#Case/0016000000MNGDy/U-14725661).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4163#issuecomment-358042689:98,test,tests,98,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4163#issuecomment-358042689,1,['test'],['tests']
Testability,As it turns out some of the `createGenomeLoc()` instances are being used by the GermlineCNVPipeline tests (evidently in ValidateVariants) and will fail if genome validation is enabled. This should be investigated.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7300#issuecomment-861713884:100,test,tests,100,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7300#issuecomment-861713884,1,['test'],['tests']
Testability,"As of https://github.com/broadinstitute/gatk/pull/1424, `VariantWalker` prefers the sequence dictionary from the driving variants in `getBestAvailableSequenceDictionary()` over other sequence dictionaries, as it should. However, if the driving variants input does not have a declared sequence dictionary, but does have an index file, we end up creating an incomplete sequence dictionary from the index with no contig lengths and using it as the ""best available"" dictionary, even if better dictionaries from the reference or reads are available. This is discussed in https://github.com/broadinstitute/gatk/pull/1424#discussion_r70674157, and is replicated in the test `ExampleVariantWalkerIntegrationTest.testExampleVariantWalker_UndefinedContigLengthsInDictionary`",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1999:662,test,test,662,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1999,1,['test'],['test']
Testability,"As part of #8083 we are drastically rewriting the entire Pileup-Caller infrastructure for DRAGEN-GATK. In doing so we have largely neglected its original functionality in Mutect2 and some of the changes (namely the re-factoring of that code to now happen after trimming like in with the GGA code) are going to impact the overall results for pileupcalling. It seems that we never added a real test of this functionality and its unclear to me currently what the meterics are that we want to assure ourselves that its working as intended. In #8083 I have checked that the code is hooked up manually, but its not clear to me what a proper test looks like for mutect without re-hashing the test samples that were being used in the bacterial project. I'm a little skeptical about adding a test that just asserts ""these results were different somehow"" and yet thats essentially the sort of test i would like and that would have saved me here. I would really like to have something better in place, especially if we are going to keep sharing the pileup-calling code between HC and M2 going forward.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8242:392,test,test,392,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8242,6,"['assert', 'test']","['asserts', 'test']"
Testability,As part of #8083 we have added yet another heterogenous way of spitting out detailed debugging logs from yet another part of the HaplotypeCaller (namely in this case a toggle that prints to Stdout). This is in contrast to the existing (mostly assembly region position information) `--verbosity DEBUG` debug arguments and the various debug output stream arguments like `--debug-assembly-region-state`. These debug modes have proliferated and it has become difficult/confusing to know which ones are relevant if you are developing the code. . At some point it might be worth creating some sort of static debug manager class that manages the various specific output streams and saves us from having to pass debugger state to all of the various subclasses/utility methods of the HaplotypeCallerEngine. Importantly using `DEBUG` to stderr is not entirely useful as it jumbles all of the various debugger outputs into one output which quickly becomes large and difficult to read. We must support optionally splitting the output streams by functionality to files.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8246:95,log,logs,95,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8246,1,['log'],['logs']
Testability,"As part of my work in the Pipeline Dev team, I created 2 GATK images to address issue discussed [here](https://github.com/broadinstitute/gatk/issues/8684) (ie. having too many docker layers, we hit ACR limits very quickly). The images are in terrapublic, a premium-tier ACR and is publicly accessible. I made two images, one is squashed to just 1 layer, the other is reduced to just 12 layers (from the original 45). With these changes and the fact that terrapublic is on [premium](https://learn.microsoft.com/en-us/azure/container-registry/container-registry-skus#registry-throughput-and-throttling) tier, the maximum docker pulls per minute becomes 833 (ie. 10k readOps / 12 layers) for the reduced-layers image and 10,000 for the squashed one. We have yet to test these in our pipelines but I anticipate the squashed version to be slower since it won’t be able to take advantage of any parallel pulls or caching, hence the two versions to allow pipeline devs to decide which one is better for their use-case.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8808:762,test,test,762,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8808,1,['test'],['test']
Testability,As part of our work on this ticket can we confirm our belief that it doesn't apply to `HaplotypeCaller`? (perhaps by adding a new unit test?),MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6686#issuecomment-653142069:135,test,test,135,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6686#issuecomment-653142069,1,['test'],['test']
Testability,"As part of the effort to use linked de Bruijn graphs in assembly, we should eliminate the hacks that we use to mitigate the problems with cycles. Eventually this should become the only thing we ever do, but for now let's create a command line option in which we assemble a true de Bruijn graph where each kmer corresponds to exactly one vertex. This ought not to break anything although until we finish the linked de Bruijn epic it will hurt precision a bit. A lot of work for this ticket will be new unit tests.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5922:506,test,tests,506,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5922,1,['test'],['tests']
Testability,"As part of this, could you port `SAMPileupCodecUnitTest`. It's shamefully incomplete and only tests `canDecode`, but that's better than nothing. It would be good to have some unit tests for the codec itself on various pileup lines the different parsing cases.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1862#issuecomment-224409134:94,test,tests,94,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1862#issuecomment-224409134,2,['test'],['tests']
Testability,"As per the linked discussion, we are going to try to get access to a hosted PPC service that we can run automated tests on. If we're successful in setting up PPC automated tests, then the two native PairHmm implementations could live in the same repo -- if not, then we might prefer two separate repos.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1788#issuecomment-215710485:114,test,tests,114,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1788#issuecomment-215710485,2,['test'],['tests']
Testability,"As reported by @jkobject testing our latest gatk-nightly image, certain non-requester-pays accesses fail with the latest google-cloud-nio version (0.123.23) when `--gcs-project-for-requester-pays` is specified. . The specific issue appears to be checks for the existence of non-existent files in non-requester-pays buckets when `--gcs-project-for-requester-pays` is set, resulting in a ""User project specified in the request is invalid"" error:. ```; code: 400; message: User project specified in the request is invalid.; reason: invalid; location: null; retryable: false; com.google.cloud.storage.StorageException: User project specified in the request is invalid.; 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.translate(HttpStorageRpc.java:233); 	at com.google.cloud.storage.spi.v1.HttpStorageRpc.list(HttpStorageRpc.java:376); 	at com.google.cloud.storage.StorageImpl.lambda$listBlobs$11(StorageImpl.java:391); 	at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:105); 	at com.google.cloud.RetryHelper.run(RetryHelper.java:76); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 	at com.google.cloud.storage.Retrying.run(Retrying.java:51); 	at com.google.cloud.storage.StorageImpl.listBlobs(StorageImpl.java:388); 	at com.google.cloud.storage.StorageImpl.list(StorageImpl.java:359); 	at com.google.cloud.storage.contrib.nio.CloudStoragePath.seemsLikeADirectoryAndUsePseudoDirectories(CloudStoragePath.java:118); 	at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.checkAccess(CloudStorageFileSystemProvider.java:743); 	at java.nio.file.Files.exists(Files.java:2385); 	at htsjdk.tribble.util.ParsingUtils.resourceExists(ParsingUtils.java:418); 	at htsjdk.tribble.TribbleIndexedFeatureReader.loadIndex(TribbleIndexedFeatureReader.java:162); 	at htsjdk.tribble.TribbleIndexedFeatureReader.hasIndex(TribbleIndexedFeatureReader.java:228); 	at org.broadinstitute.hellbender.engine.FeatureDataSource.<init>(FeatureDataSourc",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7716:25,test,testing,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7716,1,['test'],['testing']
Testability,"As reported by @kachulis and confirmed by @epiercehoffman :. I run PrintReads over and over again, on the same input data, not doing anything, just read in, write out, ie gatk PrintRead -I input.bam -O output.bam. Mostly, I just get an identical 9GB bam over and over again (as confirmed by md5). However, sometimes (~10% of the time it seems), I get a MUCH larger “bam”, more like ~45GB. In runs where I get these larger output files, they are not always the same size, sometimes 45GB, sometimes 47GB (still always with the same input file, same commandline, same wdl task, etc). The runs that produce these larger bam also take much longer, with slower “reads per minute rate). They report exactly the same number of reads processed in the logs as the “normal” runs. Looking inside the large output “bams” with gsutil cat, I see the header suddenly transitioning from compressed looking jibberish to a plaintext header, and then after a bit back to compressed looking jibberish again. Additionally, if I run these large bams through samtools view to get samtools to write them as a bam (ie samtools view big.bam -o samtools_out.bam) the resulting bam is much smaller ~6GB. It kind of seems like sometimes gatk will just stop compressing the output, and then start back up again, seemingly randomly??. I suspect this may be an issue with all gatk tools, I first encountered this recently with PostProcessReadsForRSEM, and then confirmed the behavior in PrintReads as a minimal example. Maybe it’s something to do with google hardware, I’ve only seen this in Terra so far (not that I’ve tried to reproduce it anywhere else).; seeing this in 4.2.6.0. Summary of investigative results:; * reproducible on very small files (at about same rate of ~10%); * appears to be related to intel deflater. when running with jdk deflater (--use-jdk-deflater) all 100/100 runs result in same sized bam. I’ve run a version sweep, and it looks like the behavior begins in 4.2.1.0, but does not occur in earlier version",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8141:742,log,logs,742,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8141,1,['log'],['logs']
Testability,"As reported in https://github.com/broadinstitute/gatk/issues/4133 piped commands that work in Picard, don't work when running with GATK. The immediate culprit is the line:; ```; 15:29:29.595 INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/louisb/Workspace/gatk/build/install/gatk/lib/gkl-0.8.2.jar!/com/intel/gkl/native/libgkl_compression.dylib; ```; Which is emitted to stdout in GATK, a similar warning is instead output to STDERR in picard. . There are likely other problematic logging lines.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4135:514,log,logging,514,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4135,1,['log'],['logging']
Testability,"As scientists we must strive to standardize to the most rational units of measurement, including our measurement of the passage of time. That is why we, the GATK authors, would like to announce that we are updating the GATK display time to display the current system time stamped according to the French Revolutionary Calendar. Here is an example of the new logging outputs:. ```; Décadi, 10-Germinal-232, 7:74:79, L’outil:Couvoir INFO NativeLibraryLoader - Loading libgkl_compression.dylib from jar:file:/Users/emeryj/hellbender/gatk/build/libs/gatk-package-4.5.0.0-20-g105b63e-SNAPSHOT-local.jar!/com/intel/gkl/native/libgkl_compression.dylib; Décadi, 10-Germinal-232, 7:74:79, L’outil:Couvoir INFO CountReads - ------------------------------------------------------------; Décadi, 10-Germinal-232, 7:74:79, L’outil:Couvoir INFO CountReads - The Genome Analysis Toolkit (GATK) v4.5.0.0-20-g105b63e-SNAPSHOT; Décadi, 10-Germinal-232, 7:74:79, L’outil:Couvoir INFO CountReads - For support and documentation go to https://software.broadinstitute.org/gatk/; Décadi, 10-Germinal-232, 7:74:79, L’outil:Couvoir INFO CountReads - Executing as emeryj@wm85b-6ec on Mac OS X v13.2.1 x86_64; Décadi, 10-Germinal-232, 7:74:79, L’outil:Couvoir INFO CountReads - Java runtime: OpenJDK 64-Bit Server VM v17.0.6+10; Décadi, 10-Germinal-232, 7:74:79, L’outil:Couvoir INFO CountReads - Start Date/Time: March 29, 2024 at 2:35:42 PM EDT; Décadi, 10-Germinal-232, 7:74:79, L’outil:Couvoir INFO CountReads - ------------------------------------------------------------; Décadi, 10-Germinal-232, 7:74:79, L’outil:Couvoir INFO CountReads - ------------------------------------------------------------; Décadi, 10-Germinal-232, 7:74:79, L’outil:Couvoir INFO CountReads - HTSJDK Version: 4.1.0; Décadi, 10-Germinal-232, 7:74:79, L’outil:Couvoir INFO CountReads - Picard Version: 3.1.1; Décadi, 10-Germinal-232, 7:74:79, L’outil:Couvoir INFO CountReads - Built for Spark Version: 3.5.0; Décadi, 10-Germinal-232, 7:74:79, L’ou",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8756:358,log,logging,358,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8756,1,['log'],['logging']
Testability,"As stated in the title. I tried the new gatk version 4.2.1.0 to update the GENCODE data for Funcotator. Log:; /home/robby/Tools/NGS/gatk-4.2.1.0/gatk IndexFeatureFile -I /home/robby/Tools/NGS/gencode/hg19/gencode.v38lift37.annotation.REORDERED.gtf; Using GATK jar /home/robby/Tools/NGS/gatk-4.2.1.0/gatk-package-4.2.1.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /home/robby/Tools/NGS/gatk-4.2.1.0/gatk-package-4.2.1.0-local.jar IndexFeatureFile -I /home/robby/Tools/NGS/gencode/hg19/gencode.v38lift37.annotation.REORDERED.gtf; 14:34:51.448 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/robby/Tools/NGS/gatk-4.2.1.0/gatk-package-4.2.1.0-local.jar!/com/intel/gkl/native/libgkl_compression.so; Aug 02, 2021 2:34:51 PM shaded.cloud_nio.com.google.auth.oauth2.ComputeEngineCredentials runningOnComputeEngine; INFO: Failed to detect whether we are running on Google Compute Engine.; 14:34:51.566 INFO IndexFeatureFile - ------------------------------------------------------------; 14:34:51.566 INFO IndexFeatureFile - The Genome Analysis Toolkit (GATK) v4.2.1.0; 14:34:51.566 INFO IndexFeatureFile - For support and documentation go to https://software.broadinstitute.org/gatk/; 14:34:51.572 INFO IndexFeatureFile - Initializing engine; 14:34:51.572 INFO IndexFeatureFile - Done initializing engine; 14:34:51.674 WARN GencodeGtfCodec - GENCODE GTF Header line 1 has a version number that is above maximum tested version (v 34) (given: 38): ##description: evidence-based annotation of the human genome (GRCh38), version 38 (Ensembl 104), mapped to GRCh37 with gencode-backmap Continuing, but errors may occur.; 14:34:51.676 WARN GencodeGtfCodec - GENCODE GTF Header line 1 has a version number that is above maximum tested version (v 34) (given: 38): ##description: evidence-based annotation of the human genome (GRCh38), version 38",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7385:104,Log,Log,104,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7385,1,['Log'],['Log']
Testability,"As we discussed on Slack, this will fix the NaNs, but I'm not convinced that we should allow the single-contig use case without at least a warning. The ploidy step will essentially perform no inference, since I think the per-contig bias and ploidy factors will cancel out with the way the likelihood is written---it will simply return the prior, and all samples will be guaranteed to have ploidy = 2. @asmirnov239 is going to do some more testing to make sure we understand this right and perhaps add a warning/documentation. The current likelihood is a bit confusing (I tried to address some of these issues in the unmerged ploidy-model update), but in any case, the problem is degenerate and it's hard to define appropriate behavior without additional priors and model structure.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6613#issuecomment-631693589:439,test,testing,439,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6613#issuecomment-631693589,1,['test'],['testing']
Testability,"As we have finished implementing the updated logic for how variants are interpreted and location inferred by studying local assembly contig alignment signatures, it is time to clean up the corresponding package in the pipeline and make the switch to the updated implementation, which now outputs not only insertion, deletion, small tandem duplication, and inversions, but also novel adjacencies (BND records whose meanings cannot be fully resolved solely from assembly alignment signatures) as well as complex variants that theoretically could be arbitrarily complex (`<CPX>`, as long as we have assembled across the full event). . ## Planed organization. the `discovery` package could be divided roughly now into. ### interface. `SvDiscoveryDataBundle`, `SvDiscoverFromLocalAssemblyContigAlignmentsSpark`, `SvType`, `AnnotatedVariantProducer`. ### alignment prep (sub package). `AlignmentInterval`, `AlignedContig` (refactor `AssemblyContigWithFineTunedAlignments` into `AlignedContig`), `AlignedContigGenerator`, `AlignedAssembly`, `ContigAlignmentsModifier` (refactor `AlnModType` into it), `GappedAlignmentSplitter`, `StrandSwitch`, `FilterLongReadAlignmentsSAMSpark` (factor out the major methods in the new alignment filter by score into a 1st level class). ### type & location inference (sub package). * imprecise: refactor out methods from to-be-deprecated `DiscoverVariantsFromContigAlignmentsSAMSpark`. * alignment classification: `ChimericAlignment` and `NovelAdjacencyReferenceLocations` (very tricky to decouple the functionalities because both have over 50 uses), `AssemblyContigAlignmentSignatureClassifier`, `VariantDetectorFromLocalAssemblyContigAlignments`. * simple: `SimpleSVType`, `SvTypeInference`, `InsDelVariantDetector`, `BreakpointComplications` (rename to `BreakpointComplicationsForSimpleTypes`). * complex: `BreakEndVariantType`, `SuspectedTransLocDetector`, `SimpleStrandSwitchVariantDetector`. ### deprecated. `DiscoverVariantsFromContigAlignmentsSAMSpark` . It currentl",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4111:45,log,logic,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4111,1,['log'],['logic']
Testability,As well as some tests to the test suite.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3254:16,test,tests,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3254,2,['test'],"['test', 'tests']"
Testability,Assert that ELBO did not become NaN during each step of inference,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6186:0,Assert,Assert,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6186,1,['Assert'],['Assert']
Testability,Assert.java:41); 	at org.testng.Assert.assertTrue(Assert.java:51); 	at org.broadinstitute.hellbender.tools.walkers.gnarlyGenotyper.GnarlyGenotyperEngineUnitTest.testGenotypeCallForLotsOfAlts(GnarlyGenotyperEngineUnitTest.java:71); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassP,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:1329,Test,TestRunner,1329,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,1,['Test'],['TestRunner']
Testability,Assert.java:51); 	at org.broadinstitute.hellbender.tools.walkers.gnarlyGenotyper.GnarlyGenotyperEngineUnitTest.testGenotypeCallForLotsOfAlts(GnarlyGenotyperEngineUnitTest.java:71); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109); 	at org.testng.TestRunner.privateRun(TestRunner.java:744); 	at org.testng.TestRunner.run(TestRunner.java:602); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340); 	at org.testng.SuiteRunner.run(SuiteRunner.java:289); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226); 	at org.testng.TestNG.runSuites(TestNG.java:1144); 	at org.testng.TestNG.run(TestNG.java:1115); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141); 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90); 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61); 	at sun.reflect.NativeMethodAcc,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293:1381,test,testng,1381,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6086#issuecomment-519578293,1,['test'],['testng']
Testability,AssertionError: The optimization step for ELBO update returned a NaN while running DetermineGermlineContigPloidy,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6573:0,Assert,AssertionError,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6573,1,['Assert'],['AssertionError']
Testability,"Assigning to @davidbenjamin to determine whether the change in question should be ported, and if it should, to make the change and add a unit test that fails without it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2466#issuecomment-287444638:142,test,test,142,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2466#issuecomment-287444638,1,['test'],['test']
Testability,"Assuming failed push test is transient, since this PR does not affect the python env.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4931#issuecomment-399581084:21,test,test,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4931#issuecomment-399581084,1,['test'],['test']
Testability,"At one point the README says:; > [...] large files used to build GATK, and test files required to run the test suite [...]. Does this mean that all production builds should contain large files?; Are they used by some gatk commands?. The README is just not clear about this.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8912:75,test,test,75,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8912,2,['test'],['test']
Testability,"At some positions (such as 20:10001430 in src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk4.g.vcf) reads with mismatches or indels in the BWA-aligned pileup get realigned during local assembly (where they will get evaluated as variants in the active region). However, the flanking regions adjacent to the active region are evaluated using the original alignments. This can lead to het calls outside the active region that get capped to GQ0 homRef calls. The solution is not entirely trivial since we hard clip reads after we trim the active region and compute the likelihoods used for their realignments based on this clipped sequence. One relatively easy hack that would be a partial improvement would be to omit reads that had been realigned from the pileup in the flanking regions.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5171:46,test,test,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5171,2,['test'],"['test', 'testGVCFMode']"
Testability,"At the moment, all tests share a global Spark context. Once the test context is created, subsequent calls to `getTestSparkContext(Map<String, String> overridingProperties)` or `getSparkContext(...)` return the existing context and `overridingProperties` is ignored. This results in failure of integration tests of tools that need to override certain Spark configs (e.g. to register custom serializers). To make life a bit easier for gatk-protected devs, it is (at least) desirable to take a global set of overriding Spark config key-value pairs from within the gradle build script, and considering them when instantiating the global test Spark context. In particular, I would like to add a few comma-separated extra registrators to `spark.kryo.registrator`. Perhaps this feature is already present?",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2337:19,test,tests,19,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2337,4,['test'],"['test', 'tests']"
Testability,"Attached is a log file from a travis job (https://travis-ci.com/github/broadinstitute/gatk/builds/212021574) where this happened again, with the core dump file contents embedded in the log text. [log.txt](https://github.com/broadinstitute/gatk/files/5772739/log.txt). The java stack indicates that the seg fault originated in a call to `jni_GetByteArrayElements` made from GKL `com.intel.gkl.pairhmm.IntelPairHmm.computeLikelihoodsNative`:. `Stack: [0x00007ff9430cc000,0x00007ff9431cd000], sp=0x00007ff9431c84d0, free space=1009k; Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code); V [libjvm.so+0x8fd0f2] jni_GetByteArrayElements+0x72; C [libgkl_pairhmm9647826338235308809.so+0x66c02] JavaData::getData(JNIEnv_*, _jobjectArray*&, _jobjectArray*&)+0x222. Java frames: (J=compiled Java code, j=interpreted, Vv=VM code); j com.intel.gkl.pairhmm.IntelPairHmm.computeLikelihoodsNative([Ljava/lang/Object;[Ljava/lang/Object;[D)V+0; j com.intel.gkl.pairhmm.IntelPairHmm.computeLikelihoods([Lorg/broadinstitute/gatk/nativebindings/pairhmm/ReadDataHolder;[Lorg/broadinstitute/gatk/nativebindings/pairhmm/HaplotypeDataHolder;[D)V+9; j org.broadinstitute.hellbender.utils.pairhmm.VectorLoglessPairHMM.computeLog10Likelihoods(Lorg/broadinstitute/hellbender/utils/genotyper/LikelihoodMatrix;Ljava/util/List;Lorg/broadinstitute/hellbender/utils/pairhmm/PairHMMInputScoreImputator;)V+356; j org.broadinstitute.hellbender.utils.pairhmm.VectorPairHMMUnitTest.testLikelihoodsFromHaplotypesForAvailableImplementations()V+478; v ~StubRoutines::call_stub; J 4376 jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; java.base@11.0.2 (0 bytes) @ ...`",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6649#issuecomment-754921032:14,log,log,14,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6649#issuecomment-754921032,6,"['Stub', 'log', 'test']","['StubRoutines', 'log', 'testLikelihoodsFromHaplotypesForAvailableImplementations']"
Testability,Attaching the whole log here: https://gist.github.com/lbergelson/e4babd039228975d3c63,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/364#issuecomment-93028566:20,log,log,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/364#issuecomment-93028566,1,['log'],['log']
Testability,Attempt to eliminate lines in vcf with only * as ALT when using SelectVariants (change to SelectVariants). Also includes addition of new tests in SelectVariantsIntegrationTest to ensure this is true over many variations of arguments / assignments.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5129:137,test,tests,137,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5129,1,['test'],['tests']
Testability,"Attempting to get wgs coverage with 10000 bp bin size on; /seq/picard_aggregation/D4491/HCC1143/v1/HCC1143.bam; produces the following stacktrace (see first line for command line). ```; ERROR 14:06:46,283 FunctionEdge - Error: java -Xmx16g -jar /dsde/working/slee/acnv-eval/resources/gatk-protected-536b94e-create-apon.jar SparkGenomeReadCounts -o /dsde/working/aaronc/testing/case/HCC1143/cov/HCC1143-coverage.tsv -I /seq/picard_aggregation/D4491/HCC1143/v1/HCC1143.bam -bins 10000 -R /seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta --sparkMaster local[1] ; ERROR 14:06:46,288 FunctionEdge - Contents of /dsde/working/aaronc/testing/case/HCC1143/cov/HCC1143-coverage.tsv.out:; 16/08/24 14:06:09 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 23.2 KB, free 284.6 KB); 16/08/24 14:06:09 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on localhost:56998 (size: 23.2 KB, free: 10.4 GB); 16/08/24 14:06:09 INFO SparkContext: Created broadcast 0 from newAPIHadoopFile at ReadsSparkSource.java:105; 16/08/24 14:06:10 INFO FileInputFormat: Total input paths to process : 1; 16/08/24 14:06:21 INFO SparkUI: Stopped Spark web UI at http://10.200.98.30:4040; 16/08/24 14:06:21 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!; 16/08/24 14:06:21 INFO MemoryStore: MemoryStore cleared; 16/08/24 14:06:21 INFO BlockManager: BlockManager stopped; 16/08/24 14:06:21 INFO BlockManagerMaster: BlockManagerMaster stopped; 16/08/24 14:06:21 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!; 16/08/24 14:06:21 INFO SparkContext: Successfully stopped SparkContext; 14:06:21.109 INFO SparkGenomeReadCounts - Shutting down engine; [August 24, 2016 2:06:21 PM EDT] org.broadinstitute.hellbender.tools.genome.SparkGenomeReadCounts done. Elapsed time: 0.36 minutes.; Runtime.totalMemory()=3192389632; java.lang.IndexOutOfBoundsException; at java.nio.ByteBuffer.wrap(ByteBuffer.ja",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2113:369,test,testing,369,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2113,2,['test'],['testing']
Testability,Attempts to fix https://github.com/broadinstitute/gatk/issues/5685. I don't have test data from the users who reported the bug but it seemed like it was likely due to this issue.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5864:81,test,test,81,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5864,1,['test'],['test']
Testability,Audit tools with tests with suspicious FeatureCache misses,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5895:17,test,tests,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5895,1,['test'],['tests']
Testability,"Augh, looks like we'll have to actually rebase this onto samtools/htsjdk#796 to get it to pass tests, due to a change in codec detection.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2344#issuecomment-277355740:95,test,tests,95,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2344#issuecomment-277355740,1,['test'],['tests']
Testability,Authenticate with dockerhub when running tests on travis,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7102:41,test,tests,41,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7102,1,['test'],['tests']
Testability,Automate performance testing (including Spark),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1609:21,test,testing,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1609,1,['test'],['testing']
Testability,Automated testing of docker image in travis,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2697:10,test,testing,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2697,1,['test'],['testing']
Testability,Automatically run cloud tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/656:24,test,tests,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/656,1,['test'],['tests']
Testability,Avro test,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7192:5,test,test,5,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7192,1,['test'],['test']
Testability,"Awaiting the Barclay snapshot with broadinstitute/barclay#33, which is ready, but I'll sanity check again in AM before I merge. NOTE: All of the GATK tests have passed locally with this branch. However, I had to make one temporary change because SelectVariants has a feature that clashes with the collection list file feature in https://github.com/broadinstitute/barclay/pull/28. SelectVariants currently has two arguments that are defined as `List<File>`, that are each intended to take a list of file names, each of which in turn contains a list of sample names. SelectVariants manually loads all of the samples from all of the files in the list, and creates a list of unique sample names. With the https://github.com/broadinstitute/barclay/pull/28, the CLP now loads the list directly, and hands SelectVariants a list of sample names rather than the list of file names, which breaks one test. I think both features are working as intended, but collide when a .list file is used. I temporarily renamed the test file to not have a .list extension (so it won't trigger the CLP file loading), but we'll have to decide how to properly reconcile these two features.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2388:150,test,tests,150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2388,3,['test'],"['test', 'tests']"
Testability,"Awesome @lbergelson! Now the tests are passing here, so I will probably rebase all of my PRs soon to avoid the annoying ""red cross of death"". Thanks!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2401#issuecomment-281515727:29,test,tests,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2401#issuecomment-281515727,1,['test'],['tests']
Testability,Awesome news. Looking forward to test it.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3697#issuecomment-446847867:33,test,test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3697#issuecomment-446847867,1,['test'],['test']
Testability,"Awesome, glad this is patched up so fast. Will this get picked up by the nightly docker build? I can test tomorrow if so.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5563#issuecomment-452010770:101,test,test,101,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5563#issuecomment-452010770,1,['test'],['test']
Testability,"Awesome, thanks so much. Your workaround does work on that test set. That's a bonus: that warning spam was annoying the heck out of me too.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5650#issuecomment-462502271:59,test,test,59,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5650#issuecomment-462502271,1,['test'],['test']
Testability,"Awh, some test resource files were not carried over from protected...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2813#issuecomment-306320015:10,test,test,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2813#issuecomment-306320015,1,['test'],['test']
Testability,"BImport - Done importing batch 1/1; 06:50:14.221 INFO ProgressMeter - Qrob_Chr02:1 427.5 1 0.0; 06:50:14.229 INFO ProgressMeter - Traversal complete. Processed 1 total batches in 427.5 minutes.; 06:50:14.236 INFO GenomicsDBImport - Import completed!; 06:50:14.236 INFO GenomicsDBImport - Shutting down engine; [January 27, 2019 6:50:14 AM CST] org.broadinstitute.hellbender.tools.genomicsdb.GenomicsDBImport done. Elapsed time: 428.57 minutes.; Runtime.totalMemory()=8988393472; Tool returned:; true; Using GATK jar /home/WangBS/software/GATK/gatk/build/libs/gatk-package-4.0.11.0-56-g2c0e9b0-SNAPSHOT-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xmx24g -jar /home/WangBS/software/GATK/gatk/build/libs/gatk-package-4.0.11.0-56-g2c0e9b0-SNAPSHOT-local.jar GenotypeGVCFs -R /home/WangBS/Reference/Qrobur/Qrob_PM1N.fa -V gendb:///home/WangBS/Analyses/vcf/test/chr02 -all-sites -O /home/WangBS/Analyses/vcf/test/chr02.vcf; 06:50:19.236 INFO NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/WangBS/software/GATK/gatk/build/libs/gatk-package-4.0.11.0-56-g2c0e9b0-SNAPSHOT-local.jar!/com/intel/gkl/native/libgkl_compression.so; 06:51:21.116 INFO GenotypeGVCFs - ------------------------------------------------------------; 06:51:21.116 INFO GenotypeGVCFs - The Genome Analysis Toolkit (GATK) v4.0.11.0-56-g2c0e9b0-SNAPSHOT; 06:51:21.116 INFO GenotypeGVCFs - For support and documentation go to https://software.broadinstitute.org/gatk/; 06:51:21.117 INFO GenotypeGVCFs - Executing as WangBS@cu53 on Linux v3.10.0-693.el7.x86_64 amd64; 06:51:21.117 INFO GenotypeGVCFs - Java runtime: OpenJDK 64-Bit Server VM v1.8.0_131-b12; 06:51:21.117 INFO GenotypeGVCFs - Start Date/Time: January 27, 2019 6:50:19 AM CST; 06:51:21.117 INFO GenotypeGVCFs - ------------------------------------------------------------; 06:51:21.117 INFO GenotypeGVCFs - --------",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5865:4886,test,test,4886,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5865,2,['test'],['test']
Testability,BQSR Spark integration tests use incorrect list of variants,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1017:23,test,tests,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1017,1,['test'],['tests']
Testability,BQSR pipeline without saving + fixed tests for BQSR on spark,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1031:37,test,tests,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1031,1,['test'],['tests']
Testability,"BQSR tests in spark use a bam file and dbSNP file that are non-corresponding (coming from different chromosomes). . ""CEUTrio.HiSeq.WGS.b37.ch20.1m-1m1k.NA12878.bam"";; ""dbsnp_132.b37.excluding_sites_after_129.chr17_69k_70k.vcf"";. the same tests in non-spark use properly matched bam and vcf file",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1017:5,test,tests,5,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1017,2,['test'],['tests']
Testability,BQSRGatherer and tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1543:17,test,tests,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1543,1,['test'],['tests']
Testability,"BTW, by ""works"" I mean I can create the env. I didn't try running the tests with the resulting env.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4061#issuecomment-355648762:70,test,tests,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4061#issuecomment-355648762,1,['test'],['tests']
Testability,"BTW, this is low-priority because the logic is only invoked for *SAM* files, not *BAM*s.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4153#issuecomment-358057205:38,log,logic,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4153#issuecomment-358057205,1,['log'],['logic']
Testability,"Bacause `AnalyzeCovariates` just takes 2 tables and doesnt care who made the tables, all we need to test is that GATK3 pipeline: `BaseRecalibrator --BQSR` is the equal to GATK4 pipeline `ApplyBQSR --bqsr` followed by `BaseRecalibrator` on the resulting bam",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/322#issuecomment-94593792:100,test,test,100,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/322#issuecomment-94593792,1,['test'],['test']
Testability,"Back to @akiezun. Code itself looks good now, just need to rename `getNeighboringOnGenomeCigarElement()`. Tests are TERRIBLE though and need to be re-written from scratch.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1795#issuecomment-219454211:106,Test,Tests,106,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1795#issuecomment-219454211,1,['Test'],['Tests']
Testability,"Back to @droazen. Also in the last round, I didn't actually add the code in PositionalDownSampler to reject `submit` after `signalEndOfInput` was called (I added the state to keep track of it, but left out the actual validate call in submit). Letting tests run then, back to you.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5594#issuecomment-457759988:251,test,tests,251,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5594#issuecomment-457759988,1,['test'],['tests']
Testability,Back to @droazen. Responded to all of the comments. I did an interim commit to test the lfs changes on docker/travis so there are two commits for this round.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4530#issuecomment-375670798:79,test,test,79,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4530#issuecomment-375670798,1,['test'],['test']
Testability,Back to @jamesemery -- needs an integration test.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2042#issuecomment-237275723:44,test,test,44,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2042#issuecomment-237275723,1,['test'],['test']
Testability,"Back to @meganshand. I put in a simple mitochondrial integration test. Given that our MC3 validation already covers this particular bug I actually don't think it needs a new test for mitochondria. Also, for later, are any of your spike-in bams public (or rather, public + public)? I noticed that the NA12878 truth doesn't have very low AFs.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408649991:65,test,test,65,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5057#issuecomment-408649991,2,['test'],['test']
Testability,"Back to you @droazen - two things to ""discuss"" still:. * Is it still needed the test for the mapping quality arg? There was one failing, but I didn't realized because of the compilation error (you can check it in the ""Fix compilation"" commit.; * Should I pass some of the `StandardArgumentDefinitions` to the new class?. Thank you!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4103#issuecomment-360850011:80,test,test,80,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4103#issuecomment-360850011,1,['test'],['test']
Testability,"Back to you with the added test, @droazen and/or @lbergelson! Thanks for having a look to this!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2111#issuecomment-245966727:27,test,test,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2111#issuecomment-245966727,1,['test'],['test']
Testability,"Back to you, still without tests for tmp dir working with NIO due to lack of information: should it be at the tool level (e.g., running `MarkDuplicatesGATK` with NIO tmp dir - my main use case) or just checking the property value that is correctly set?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4469#issuecomment-374883868:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4469#issuecomment-374883868,1,['test'],['tests']
Testability,"Back, atcha Louis. You just set which registrator to use via a static method. You can change it for any given unit test or suite, or even for a given phase of program execution within a Spark executable. Crazy!",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1775#issuecomment-215241805:115,test,test,115,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1775#issuecomment-215241805,1,['test'],['test']
Testability,Bad sequence dictionaries in gCNV test data,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6957:34,test,test,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6957,1,['test'],['test']
Testability,"Barclay can't currently handle immutable collections in `@Argument` values due to; https://github.com/broadinstitute/gatk/issues/4702. Tests for these arguments are coming in a separate, larger branch, but I; wanted to get the fixes in first since it's such a simple fix.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4703:135,Test,Tests,135,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4703,1,['Test'],['Tests']
Testability,Base 10 logarithms are ugly.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/778:8,log,logarithms,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/778,1,['log'],['logarithms']
Testability,"BaseRecalibrator can take multiple feature files as known sites (the --knownSites argument). But BaseRecalibratorSpark can't and so BQSRPipelineSpark can't and ReadsPipelineSpark can't. Once this is fixed, relevant tests should be reenabled",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1085:215,test,tests,215,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1085,1,['test'],['tests']
Testability,"BaseRecalibrator made to fit the skeleton, including local and cloud tests.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/812:69,test,tests,69,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/812,1,['test'],['tests']
Testability,"BaseRecalibratorIntegrationTest ; `{new BQSRTest(GRCh37Ref_chr2021, trickyBam_chr20, dbSNPb37_chr20, ""-indelBQSR "", getResourceDir() + ""expected.CEUTrio.HiSeq.WGS.b37.ch20.4379150-4379157.recal.txt"")},`. the bam file and the vcf file have no overlap which makes this test less useful than it should be",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1843:267,test,test,267,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1843,1,['test'],['test']
Testability,BaseRecalibratorSparkOptimizedIntegrationTest.testBQSRLocal fails once we started doing stringent checks of results. It needs to be fixed. It may have something to do with masking of variants,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1119:46,test,testBQSRLocal,46,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1119,1,['test'],['testBQSRLocal']
Testability,BaseTest instantiates a GenomeLocParser that uses one of our test references. This causes BaseTest to be unusable by external projects that don't have the file included. We should either package the reference file in the jar or we should remove the GenomeLocParser from BaseTest and instantiate it in the classes that actually use it.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2125:61,test,test,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2125,1,['test'],['test']
Testability,"Based off of the integration test differences, this seems to only affect reference block bases following deletions (which is expected).",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5665#issuecomment-462883021:29,test,test,29,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5665#issuecomment-462883021,1,['test'],['test']
Testability,"Based on DR's email, I rebased these commits to get the travis tests going.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3157#issuecomment-311459570:63,test,tests,63,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3157#issuecomment-311459570,1,['test'],['tests']
Testability,"Based on DR's email, I will rebase to get the travis tests going.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3146#issuecomment-311448971:53,test,tests,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3146#issuecomment-311448971,1,['test'],['tests']
Testability,"Based on a GATK test run using a locally built htsjdk, the following are prerequisites to upgrading to the next htsjdk release (post-2.19.0):. - https://github.com/broadinstitute/gatk/issues/5839; - Fix CountReads and CountReadsSpark tests. These are failing because they specify `src/test/resources/org/broadinstitute/hellbender/tools/chr7_1_20.interval_list` as an interval argument. Since there is now a tribble codec that handles that extension, the file is treated as a picard interval list and parsed by the codec, but the file is not in picard interval list format.; - A release of Disq upgraded to the new htsjdk version (due to CRAM changes - Container.offset renamed to Container.byteOffset); - Fix failing SortSamSparkIntegration.testSortBAMsSharded tests. Under investigation.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5877:16,test,test,16,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5877,5,['test'],"['test', 'testSortBAMsSharded', 'tests']"
Testability,"Based on gs://broad-gotc-test-results/staging/joint_genotyping/exome/scientific/2021-09-03-11-25-15/gather_vcfs_low_memory/small_callset_high_threshold.vcf.gz (from the console output) there are slightly fewer variants filtered with ExcessHet now, which is expected since you said it was an across-the-board shift. Expected (old) has 4335 and actual (new) has 4133 -- no new things, just some now pass. If you can calculate a new equivalent threshold I'd rather use that, but otherwise I'm not overly concerned about the changes. I'm not concerned about the Jenkins call caching unless it's for the GenotypeGVCFs task where ExcessHet actually gets calculated. For the ReducibleAnnotation comments, if you just revert your changes (statics, visibility, etc.) and open an issue I'm fine with that. Admittedly this could be another target for refactoring.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7394#issuecomment-921160043:25,test,test-results,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7394#issuecomment-921160043,1,['test'],['test-results']
Testability,"Based on testing performed on google cloud, this problem seems to have resolved itself after we updated to the newest googleCloudJava package in this #5135. Something fixed by switching off of our ancient fork must have been responsible for the file being misread by spark. I suggest we close this issue as it appears to be resolved unless @droazen you want to do a post-mortem to figure out what the relevant change must have been?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5133#issuecomment-419539317:9,test,testing,9,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5133#issuecomment-419539317,1,['test'],['testing']
Testability,"Based on the TODO that was in ReadsDataSource.java, I exposed a SamReaderFactory parameter for ReadsDataSource rather than limit it to just validation stringency. Whats the right protocol for adding a test that uses a test file from another package (I'm reaching into the picard test data for a data file for an engine test). Alternatively, is there a better way to test this change ?",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/565:201,test,test,201,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/565,5,['test'],['test']
Testability,"Based on the thread above, we identified and removed any fragments (there were 3 total) that lacked all the expected files. The primary chromosome jobs had been running fine, but most are eventually hitting this 'bad_alloc' error. Does this suggest a memory issue? There is not much else information printed. One example log is below. Note: these jobs are run on a slurm cluster with the following java options: -Xmx104g -Xms104g -Xss2m. The job requests 128gb RAM total, leaving 24 as a buffer for the c++ layer. . 05 Nov 2020 09:10:06,291 DEBUG: 09:10:06.291 INFO GenomicsDBImport - Importing batch 2 with 50 samples; 05 Nov 2020 20:39:53,314 DEBUG: 20:39:53.313 INFO ProgressMeter - 1:1 1695.3 2 0.0; 05 Nov 2020 20:39:53,454 DEBUG: 20:39:53.314 INFO GenomicsDBImport - Done importing batch 2/4; 05 Nov 2020 20:40:00,591 DEBUG: 20:40:00.589 INFO GenomicsDBImport - Importing batch 3 with 50 samples; 06 Nov 2020 11:08:48,202 DEBUG: 11:08:48.197 INFO ProgressMeter - 1:1 2564.2 3 0.0; 06 Nov 2020 11:08:48,358 DEBUG: 11:08:48.201 INFO GenomicsDBImport - Done importing batch 3/4; 06 Nov 2020 11:08:55,067 DEBUG: 11:08:55.067 INFO GenomicsDBImport - Importing batch 4 with 33 samples; 07 Nov 2020 15:40:57,625 DEBUG: terminate called after throwing an instance of 'std::bad_alloc'; 07 Nov 2020 15:40:57,908 DEBUG: what(): std::bad_alloc",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6910#issuecomment-723585893:321,log,log,321,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6910#issuecomment-723585893,1,['log'],['log']
Testability,"Based on timing results (see below), we should do two things:; 	1) Switch to the HTSJDK `ParsingUtils::split` method for all; 	 cases where we split a string using a single character.; 	2) Switch to the `Utils::split` method for all cases where; 	 we split a string by another string of length > 1. A quick stopgap that will reduce splitting time by ~1/2 is to just; replace all calls to Java's `String::split` with `Utils::split` (since; they both take two Strings as arguments, it should be very easy). Also, I have disabled the test so that it doesn't slow down testing cycles. Fixes #3759. | Method | Benchmark | Total Time (ns) | Total Time (ms) | Time Per Split Operation (ns) | Time Per Split Operation (ms) | ; | --- | --- | --- | --- | --- | --- |; | Java String::split | Split on Words | 131867865203 | 131867.865203 | 6048.98464233945 | 0.00604898464233945 |; | Java String::split | Split on Chars | 12917243085 | 12917.243085 | 3004.010019767442 | 0.003004010019767442 |; | HTSJDK ParsingUtils::split | Split on Words | N/A | N/A | N/A | N/A | ; | HTSJDK ParsingUtils::split | Split on Chars | 5882790859 | 5882.790859 | 1368.0908974418605 | 0.0013680908974418606 | ; | GATK Utils::split | Split on Words | 38734463275 | 38734.463275 | 1776.8102419724771 | 0.0017768102419724772 |; | GATK Utils::split | Split on Chars | 7120052467 | 7120.052467 | 1655.826155116279 | 0.0016558261551162792 |",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3776:531,test,test,531,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3776,3,"['Benchmark', 'test']","['Benchmark', 'test', 'testing']"
Testability,Basic testing of mutect2-replicate-validation.wdl still incomplete,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2948:6,test,testing,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2948,1,['test'],['testing']
Testability,"Bayesian GMM:. This is essentially an exact port of the sklearn implementation, but only allowing for full covariance matrices. I think it might be good for those in the Bishop reading group to take a look during review. I decided to split this off into its own branch (just updated the existing branch https://github.com/broadinstitute/gatk/tree/sl_sklearn_bgmm_port) and only include stubs for the BGMM backend in the above tools. This is so we can prioritize merging the IsolationForest implementation for @meganshand. We can easily add this module back when it's been reviewed separately. TODOs:. - [x] Class-level docs.; - [x] Method-level docs. I think pointers back to the original sklearn code will suffice for most methods, but I've also included some parameter descriptions. Also note that I've retained original sklearn comments throughout the implementation and have also commented on mathematical expressions where it might be helpful.; - [x] Unit tests. There's already test data (generated using Pyro) checked in and the results match the sklearn implementation to high precision, I just need to write numerical checks. There are also already unit tests for static utility methods. Future work:; - [ ] Expanding unit tests to cover more of the interface. These initial unit tests will almost certainly not completely cover the possibilities allowed by the interface, e.g. warm starts. Could be a good exercise for other developers. EDIT: At least one test of warm starts has been added.; - [ ] As mentioned in the prototyping discussion, expanding this implementation to properly include marginalization might be of future interest. However, I think a very strong case would have to made before proceeding, as I think closely matching the sklearn implementation has obvious benefits for maintainability.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948712:386,stub,stubs,386,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7724#issuecomment-1067948712,7,"['stub', 'test']","['stubs', 'test', 'tests']"
Testability,"Bcftools setGT plugin is probably the best way of fixing this issue currently. ; ```; bcftools plugin setGT -h ; About: Sets genotypes. The target genotypes can be specified as:; ./. .. completely missing (""."" or ""./."", depending on ploidy); ./x .. partially missing (e.g., ""./0"" or "".|1"" but not ""./.""); . .. partially or completely missing; a .. all genotypes; b .. heterozygous genotypes failing two-tailed binomial test (example below); q .. select genotypes using -i/-e options; and the new genotype can be one of:; . .. missing (""."" or ""./."", keeps ploidy); 0 .. reference allele (e.g. 0/0 or 0, keeps ploidy); c:GT .. custom genotype (e.g. 0/0, 0, 0/1, m/M, overrides ploidy); m .. minor (the second most common) allele (e.g. 1/1 or 1, keeps ploidy); M .. major allele (e.g. 1/1 or 1, keeps ploidy); p .. phase genotype (0/1 becomes 0|1); u .. unphase genotype and sort by allele (1|0 becomes 0/1); Usage: bcftools +setGT [General Options] -- [Plugin Options]; Options:; run ""bcftools plugin"" for a list of common options. Plugin options:; -e, --exclude <expr> Exclude a genotype if true (requires -t q); -i, --include <expr> include a genotype if true (requires -t q); -n, --new-gt <type> Genotypes to set, see above; -t, --target-gt <type> Genotypes to change, see above. Example:; # set missing genotypes (""./."") to phased ref genotypes (""0|0""); bcftools +setGT in.vcf -- -t . -n 0p. # set missing genotypes with DP>0 and GQ>20 to ref genotypes (""0/0""); bcftools +setGT in.vcf -- -t q -n 0 -i 'GT=""."" && FMT/DP>0 && GQ>20'. # set partially missing genotypes to completely missing; bcftools +setGT in.vcf -- -t ./x -n . # set heterozygous genotypes to 0/0 if binom.test(nAlt,nRef+nAlt,0.5)<1e-3; bcftools +setGT in.vcf -- -t ""b:AD<1e-3"" -n 0. # force unphased heterozygous genotype if binom.test(nAlt,nRef+nAlt,0.5)>0.1; bcftools +setGT in.vcf -- -t ./x -n c:'m/M'; ```; I was always wondering if GATK will have a plugin interface where people can code their own using groovy, kotlin, javascr",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8328#issuecomment-1556119501:419,test,test,419,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8328#issuecomment-1556119501,1,['test'],['test']
Testability,"Because the filename doesn't occur at the beginning of a word when you use a logical name:. --arg aname:~/dir1/... the ~ doesn't get expanded by the shell, so the command fails, and the resulting error message is confusing because we call file.getAbsolutePath() on the file object to create the exception, which prepends the current directory onto the (unexpanded, nonexistent) filename (see https://github.com/broadinstitute/gatk/issues/2199). If we can't fix the underlying problem we should try to improve the error message.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2200:77,log,logical,77,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2200,1,['log'],['logical']
Testability,Because there is currently no way in travis to prevent the build stages from being triggered in every pull request it was decided to simply upload the nightly build without tests instead. An example of how to use build stages can be seen in this branch for future reference: https://github.com/broadinstitute/gatk/tree/je_travisBuildStages,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3396#issuecomment-319721849:173,test,tests,173,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3396#issuecomment-319721849,1,['test'],['tests']
Testability,Beef up tests and delete unused code in GATKVariantContextUtils,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4190:8,test,tests,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4190,1,['test'],['tests']
Testability,"Before implementing, it is required that all tools that use this class have tests.; This issue can be closed when multithreading is removed from IlluminaBasecallsConverter and that all those tests pass.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/378#issuecomment-94332846:76,test,tests,76,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/378#issuecomment-94332846,2,['test'],['tests']
Testability,"Before our cromwell/WDL tests even start to build the docker image, we could run womtool to validate the WDL. This will catch some obvious errors in much less time.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4802:24,test,tests,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4802,1,['test'],['tests']
Testability,"Before this change you can run tests only once before gradle decides that the task is ""UP-TO-DATE"". I want to be able to rerun tests multiple times (bonus: guess what I'm testing) and so this caching got in the way. With this change, tasks are always rerunnable. Test it by running this twice:. ```; ./gradlew test --tests *VariantFiltrationIntegrationTest*; ```. @lbergelson can you review?",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1719:31,test,tests,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1719,6,"['Test', 'test']","['Test', 'test', 'testing', 'tests']"
Testability,"Before we can accept a change like this, we need a good unit test to illustrate the problem that this patch fixes. The test should fail without the fix, and pass with it.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4213#issuecomment-359886591:61,test,test,61,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4213#issuecomment-359886591,4,['test'],['test']
Testability,"Below are the contents of my reference folder. The index is there, but I don't know why the tool can't recognize it. Please help, thanks!; kh3@rgcaahauva08091 ~/Resources/genome_b37 $> ls -l genome.*; -rw-rw---- 1 kh3 kh3 784809415 Sep 16 10:16 genome.2bit; -rw-rw---- 1 kh3 kh3 3168829906 Feb 4 2014 genome.fa; -rw-r----- 1 kh3 kh3 106669 Sep 16 11:32 genome.fa.amb; -rw-r----- 1 kh3 kh3 3276 Sep 16 11:32 genome.fa.ann; -rw-r----- 1 kh3 kh3 3137454592 Sep 16 11:31 genome.fa.bwt; -rw-rw---- 1 kh3 kh3 2984 Feb 4 2014 genome.fa.fai; -rw-rw---- 1 kh3 kh3 2984 Sep 16 13:18 genome.fai; -rw-r----- 1 kh3 kh3 784363628 Sep 16 11:32 genome.fa.pac; -rw-r----- 1 kh3 kh3 1568727304 Sep 16 11:44 genome.fa.sa. Using GATK wrapper script /home/kh3/Softwares/gatk/build/install/gatk/bin/gatk; Running:; /home/kh3/Softwares/gatk/build/install/gatk/bin/gatk BwaAndMarkDuplicatesPipelineSpark -I /home/kh3/data/Illumina/GATK4/Platinum/TEST/test.spark.bam -R /home/kh3/Resources/genome_b37/ge; nome.2bit --disableSequenceDictionaryValidation true -t 16 -O /home/kh3/data/Illumina/GATK4/Platinum/TEST/test.spark.aligned.bam; 15:47:28.760 INFO IntelGKLUtils - Trying to load Intel GKL library from:; jar:file:/home/kh3/Softwares/gatk/build/install/gatk/lib/gkl-0.1.2.jar!/com/intel/gkl/native/libIntelGKL.so; 15:47:28.809 INFO IntelGKLUtils - Intel GKL library loaded from classpath.; [September 16, 2016 3:47:28 PM EDT] org.broadinstitute.hellbender.tools.spark.pipelines.BwaAndMarkDuplicatesPipelineSpark --threads 16 --output /home/kh3/data/Illumina/GATK4/Platinum/TEST/test.spark; .aligned.bam --reference /home/kh3/Resources/genome_b37/genome.2bit --input /home/kh3/data/Illumina/GATK4/Platinum/TEST/test.spark.bam --disableSequenceDictionaryValidation true --fixedChunkSiz; e 100000 --duplicates_scoring_strategy SUM_OF_BASE_QUALITIES --readValidationStringency SILENT --interval_set_rule UNION --interval_padding 0 --interval_exclusion_padding 0 --bamPartitionSize 0 --shardedO; utput false --numReducers 0 --s",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2171:922,TEST,TEST,922,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2171,2,"['TEST', 'test']","['TEST', 'test']"
Testability,"Below is probably too specific but I am not sure if this is desired (unlikely IMO) or actually another edge-case bug. Summary: `InsertSizeMetics.WIDTH_OF_99_PERCENT` potentially get larger than `InsertSizeMetrics.MAX_INSERT_SIZE - InserSizeMetrics.MIN_INSERT_SIZE`. Details:; Using the non-empty bam file, fragment length values of valid reads (13 reads) are; {36,36,36,38,38,40,41,41,41,41,44,44,45}, with median value 41.; However, the `CollectInsertSizeMetricsTest.java` unit test is yielding 11 as the value for `InsertSizeMetics.WIDTH_OF_99_PERCENT`, which is greater than 10 (that is, max-min+1).; Debugging step-by-step shows that the problem lies in function . `public void InsertSizeMetricsCollector::addMetricsToFile(final MetricsFile<InsertSizeMetrics,Integer>)` . In short, the logic in the implementation for finding the bin widths is to have two variables, `low` and `high`, that starts from `InsertSizeMetics.MEDIAN_INSERT_SIZE` and incremented and decremented by 1 gradually. The actual widths are calculated by `distance = (max - min)+1`.; In this particular edge case, during the last iteration, `max` was increased from the previous iteration to an out of bound value--46 (that is greater than 45, the actual max in the data). The increment and decrement of `low` and `high` are done at the bottom of the `while` block spanning form line 138 to line 162 in the function. This causes the culprit. In hypothetical scenario, when the distribution under investigation is extremely biased (max-median >> median-min, or the other way around), the `WIDTH_OF_99_PERCENT` could end up much higher than max-min. @akiezun @cwhelan please check. If this is not the intended result, fix should be easy.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1519:479,test,test,479,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1519,2,"['log', 'test']","['logic', 'test']"
Testability,Benchmark Disq-enabled GATK Spark tools vs. pre-Disq versions,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5275:0,Benchmark,Benchmark,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5275,1,['Benchmark'],['Benchmark']
Testability,Benchmark ReadsPipelineSpark against running its component Spark tools individually,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3395:0,Benchmark,Benchmark,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3395,1,['Benchmark'],['Benchmark']
Testability,Benchmark ReadsPipelineSpark on queryname sorted BAMs,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1559:0,Benchmark,Benchmark,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1559,1,['Benchmark'],['Benchmark']
Testability,"Benchmark alternate JDKs such as OpenJ9, which show promise of an across-the-board 10-20% speedup",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5279:0,Benchmark,Benchmark,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5279,1,['Benchmark'],['Benchmark']
Testability,Benchmark bam conversion vs. reading directly from crams in single-sample pipeline,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5208:0,Benchmark,Benchmark,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5208,1,['Benchmark'],['Benchmark']
Testability,"Benchmark level 2 compression with latest GKL, consider making it the default",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4491:0,Benchmark,Benchmark,0,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4491,1,['Benchmark'],['Benchmark']
Testability,"BenchmarkComparison/75ea4d64-414f-43aa-a8d6-9c34870b1491/call-BenchmarkVCFTestSample/Benchmark/540fbadc-ba57-4012-8ff1-76461ecb7bb3/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""99.85891111111113"",; ""NIST controlHCsystemhours"": ""0.17817777777777768"",; ""NIST controlHCwallclockhours"": ""70.22329166666665"",; ""NIST controlHCwallclockmax"": ""3.8036305555555554"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-NISTSampleHeadToHead/BenchmarkComparison/75625b9d-e48b-4859-803e-58989e3ccf62/call-CONTROLRuntimeTask/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-NISTSampleHeadToHead/BenchmarkComparison/75625b9d-e48b-4859-803e-58989e3ccf62/call-BenchmarkVCFControlSample/Benchmark/21373bda-c620-4200-ad29-1e3886ea52ad/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""104.20126111111112"",; ""NIST evalHCsystemhours"": ""0.20587777777777783"",; ""NIST evalHCwallclockhours"": ""76.10080000000004"",; ""NIST evalHCwallclockmax"": ""3.949438888888889"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-NISTSampleHeadToHead/BenchmarkComparison/75625b9d-e48b-4859-803e-58989e3ccf62/call-EVALRuntimeTask/monitoring.pdf"",; ""NIST evalindelF1Score"": ""0.9902"",; ""NIST evalindelPrecision"": ""0.9903"",; ""NIST evalsnpF1Score"": ""0.9899"",; ""NIST evalsnpPrecision"": ""0.9887"",; ""NIST evalsnpRecall"": ""0.9911"",; ""NIST evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/9c49383b-01a9-4bc0-90fa-cde7e1090a47/call-NISTSampleHeadToHead/BenchmarkComparison/75625b9d",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169:20651,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,20651,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1549231169,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,"BenchmarkComparison/85b07a68-f04f-4396-80b4-f153b2d0020d/call-BenchmarkVCFTestSample/Benchmark/272d076b-7300-4ea4-bbf7-d63f80fad94b/call-CombineSummaries/summary.csv"",; ""NIST controlHCprocesshours"": ""108.95665833333332"",; ""NIST controlHCsystemhours"": ""0.21568055555555551"",; ""NIST controlHCwallclockhours"": ""78.62844166666666"",; ""NIST controlHCwallclockmax"": ""4.166558333333334"",; ""NIST controlMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-NISTSampleHeadToHead/BenchmarkComparison/043115ef-b68a-49a3-8272-8352b304c3aa/call-CONTROLRuntimeTask/monitoring.pdf"",; ""NIST controlindelF1Score"": ""0.9902"",; ""NIST controlindelPrecision"": ""0.9903"",; ""NIST controlsnpF1Score"": ""0.9899"",; ""NIST controlsnpPrecision"": ""0.9887"",; ""NIST controlsnpRecall"": ""0.9911"",; ""NIST controlsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-NISTSampleHeadToHead/BenchmarkComparison/043115ef-b68a-49a3-8272-8352b304c3aa/call-BenchmarkVCFControlSample/Benchmark/b7031327-e5c1-4869-a5d9-98e5a8934db9/call-CombineSummaries/summary.csv"",; ""NIST evalHCprocesshours"": ""112.84528333333336"",; ""NIST evalHCsystemhours"": ""0.8645277777777777"",; ""NIST evalHCwallclockhours"": ""88.01737777777778"",; ""NIST evalHCwallclockmax"": ""4.8386555555555555"",; ""NIST evalMonitoringLogs"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-NISTSampleHeadToHead/BenchmarkComparison/043115ef-b68a-49a3-8272-8352b304c3aa/call-EVALRuntimeTask/monitoring.pdf"",; ""NIST evalindelF1Score"": ""0.9902"",; ""NIST evalindelPrecision"": ""0.9903"",; ""NIST evalsnpF1Score"": ""0.9899"",; ""NIST evalsnpPrecision"": ""0.9887"",; ""NIST evalsnpRecall"": ""0.9911"",; ""NIST evalsummary"": ""gs://dsde-methods-carrot-prod-cromwell/BenchmarkVCFsHeadToHeadOrchestrated/ba9f32d5-7b46-462c-8d1f-5692eee05534/call-NISTSampleHeadToHead/BenchmarkComparison/043115ef",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441:20621,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,20621,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8467#issuecomment-1687811441,4,['Benchmark'],"['Benchmark', 'BenchmarkComparison', 'BenchmarkVCFControlSample', 'BenchmarkVCFsHeadToHeadOrchestrated']"
Testability,Bernick Test Commit for Jenkins,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2005:8,Test,Test,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2005,2,['Test'],['Test']
Testability,Bigger Permutect tensors and Permutect test datasets can be annotated with truth VCF,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8836:39,test,test,39,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8836,1,['test'],['test']
Testability,"Blech, I can't figure out how to get it to work properly so you don't have to manually specify the output coder. My implementation:. ```; public static <A,B> PCollection<B> apply(PCollection<? extends A> input, SerializableFunction<A, B> f){; return input.apply(DataflowUtils.lift(f));; }. public static <A,B> PTransform<PCollection<? extends A>, PCollection<B>> lift(SerializableFunction<A, B> f){; return ParDo.of(new DoFn<A, B>() {; @Override; public void processElement(ProcessContext c) throws Exception {; c.output(f.apply(c.element()));; }; });; }; ```. example usage:. ```; @Test; public void testApplyToString(){; Pipeline p = GATKTestPipeline.create();; PCollection<Integer> pints = p.apply(Create.of(Arrays.asList(1, 2, 3)));. PCollection<String> presults = DataflowUtils.apply( pints, Object::toString).setCoder(StringUtf8Coder.of());. DataflowAssert.that(presults).containsInAnyOrder(""1"",""2"",""3"");; p.run();; }; ```. note the `setCoder` call, if you don't include that you get. ```; SLF4J: Class path contains multiple SLF4J bindings.; SLF4J: Found binding in [jar:file:/Users/louisb/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-jdk14/1.7.7/25d160723ea37a6cb84e87cd70773ff02997e857/slf4j-jdk14-1.7.7.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: Found binding in [jar:file:/Users/louisb/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-log4j12/1.7.10/b3eeae7d1765f988a1f45ea81517191315c69c9e/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: Found binding in [jar:file:/Users/louisb/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-log4j12/1.7.5/6edffc576ce104ec769d954618764f39f0f0f10d/slf4j-log4j12-1.7.5.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.; SLF4J: Actual binding is of type [org.slf4j.impl.JDK14LoggerFactory]; java.lang.IllegalStateException: Unable to infer a default Coder for AnonymousParDo.out [PCollection]; either correct the root cause below ",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248:583,Test,Test,583,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/658#issuecomment-122314248,2,"['Test', 'test']","['Test', 'testApplyToString']"
Testability,"Bleh. ```; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007f513eecd0f2, pid=6936, tid=6963; #; # JRE version: OpenJDK Runtime Environment (11.0.2+9) (build 11.0.2+9); # Java VM: OpenJDK 64-Bit Server VM (11.0.2+9, mixed mode, tiered, compressed oops, g1 gc, linux-amd64); # Problematic frame:; # V [libjvm.so+0x8fd0f2] jni_GetByteArrayElements+0x72; #; # Core dump will be written. Default location: Core dumps may be processed with ""/usr/share/apport/apport %p %s %c %d %P"" (or dumping to /home/travis/build/broadinstitute/gatk/core.6936); #; # An error report file with more information is saved as:; # /home/travis/build/broadinstitute/gatk/hs_err_pid6936.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; ```. Then exit 134 which is ""something is fucked but we don't know what"". . Looks like a seg fault somewhere with some JNI something....",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-606830417:711,log,log,711,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5026#issuecomment-606830417,1,['log'],['log']
Testability,"Block9-10=minGQ=9(inclusive),maxGQ=10(exclusive); ##GVCFBlock90-99=minGQ=90(inclusive),maxGQ=99(exclusive); ##GVCFBlock99-100=minGQ=99(inclusive),maxGQ=100(exclusive); ##INFO=<ID=BaseQRankSum,Number=1,Type=Float,Description=""Z-score from Wilcoxon rank sum test of Alt Vs. Ref base qualities"">; ##INFO=<ID=ClippingRankSum,Number=1,Type=Float,Description=""Z-score From Wilcoxon rank sum test of Alt vs. Ref number of hard clipped bases"">; ##INFO=<ID=DP,Number=1,Type=Integer,Description=""Approximate read depth; some reads may have been filtered"">; ##INFO=<ID=DS,Number=0,Type=Flag,Description=""Were any of the samples downsampled?"">; ##INFO=<ID=END,Number=1,Type=Integer,Description=""Stop position of the interval"">; ##INFO=<ID=ExcessHet,Number=1,Type=Float,Description=""Phred-scaled p-value for exact test of excess heterozygosity"">; ##INFO=<ID=InbreedingCoeff,Number=1,Type=Float,Description=""Inbreeding coefficient as estimated from the genotype likelihoods per-sample when compared against the Hardy-Weinberg expectation"">; ##INFO=<ID=MLEAC,Number=A,Type=Integer,Description=""Maximum likelihood expectation (MLE) for the allele counts (not necessarily the same as the AC), for each ALT allele, in the same order as listed"">; ##INFO=<ID=MLEAF,Number=A,Type=Float,Description=""Maximum likelihood expectation (MLE) for the allele frequency (not necessarily the same as the AF), for each ALT allele, in the same order as listed"">; ##INFO=<ID=MQ,Number=1,Type=Float,Description=""RMS Mapping Quality"">; ##INFO=<ID=MQRankSum,Number=1,Type=Float,Description=""Z-score From Wilcoxon rank sum test of Alt vs. Ref read mapping qualities"">; ##INFO=<ID=RAW_MQ,Number=1,Type=Float,Description=""Raw data for RMS Mapping Quality"">; ##INFO=<ID=ReadPosRankSum,Number=1,Type=Float,Description=""Z-score from Wilcoxon rank sum test of Alt vs. Ref read position bias"">; ##bcftools_normCommand=norm -m +any -O z -o AD0616.10.norm.g.vcf.gz AD0616.10.g.vcf.gz; ##bcftools_normVersion=1.2+htslib-1.2.1; ##contig=<ID=1,length",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4514#issuecomment-372215582:16200,test,test,16200,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4514#issuecomment-372215582,2,['test'],['test']
Testability,"Both Travis and Github actions are failing all of the conda tests at the moment. [Example Log](https://api.travis-ci.com/v3/job/567253185/log.txt) . There seems to be a problem with the conda environment.; ```; java.lang.RuntimeException: A required Python package (""gcnvkernel"") could not be imported into the Python environment. This tool requires that the GATK Python environment is properly established and activated. Please refer to GATK README.md file for instructions on setting up the GATK Python environment.; ```; ```; java.lang.AssertionError: The installed version of sklearn does not match the 0.23.1 version that was requested. Check the build log to see the actual version that was resolved by conda.; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7800:60,test,tests,60,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7800,5,"['Assert', 'Log', 'log', 'test']","['AssertionError', 'Log', 'log', 'tests']"
Testability,"Both gatk-perf-test-spark-markeddupe and gatk-perf-test-spark-readpipeline have been passing for the last few days, so I'll close this now.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3437#issuecomment-327116293:15,test,test-spark-markeddupe,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3437#issuecomment-327116293,2,['test'],"['test-spark-markeddupe', 'test-spark-readpipeline']"
Testability,"Both sound right, but it would be comforting to know for sure that the proposed changes will actually fix the problem. I ran a profiler on some of the existing test cases, but they're not substantial enough to make the profiling results interesting. My previous hacking branch is https://github.com/broadinstitute/gatk/tree/cn_variant_eval_walker. The changes were basically exploratory - I was really just hacking to see what kinds of issues we'd run into. The branch is way behind master so it really needs a rebase. It would be great it you want to pursue this, but I'd strongly suggest trying to break it up into a series of incremental PRs as much as possible. I haven't looked at these classes for quite a while, but one proposal would be to start with a PR that just does #5441, then one that factors out the eval engine so it can be reused, and then another to change the VariantEval base class.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5439#issuecomment-720719517:160,test,test,160,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5439#issuecomment-720719517,1,['test'],['test']
Testability,"BucketUtils was a solution before we had Filesystem providers. It's stuck around as a parallel set of code because we couldn't trust the providers at first. In the long run it should be removed and replaced entirely by `Files` operations. We need to test that all the functionality exists / works as expected though, and it hasn't been a high priority to do so. Particularly, I'm not sure we have a lot of faith in the HDFS NIO plugin, so we may need to keep around special cases for that. It could definitely at least be simplified a lot though.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3569#issuecomment-328993020:250,test,test,250,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3569#issuecomment-328993020,1,['test'],['test']
Testability,Bug report recieved via email: . I am testing GATK4 walker version. I tried the following command. ./gatk-launch BaseRecalibrator -R human_g1k_v37_decoy.fasta -I NA12878.md.bam -O NA12878.br.table --knownSites 1000G_phase1.indels.b37.vcf **-L Broad.human.exome.b37.interval_list -jdk_inflater=true**. It will fail with the following error message `htsjdk.samtools.SAMFormatException: Invalid GZIP header`. If I run ; ./gatk-launch BaseRecalibrator -R human_g1k_v37_decoy.fasta -I NA12878.md.bam -O NA12878.br.table --knownSites 1000G_phase1.indels.b37.vcf **-L Broad.human.exome.b37.interval_list**. or . ./gatk-launch BaseRecalibrator -R human_g1k_v37_decoy.fasta -I NA12878.md.bam -O NA12878.br.table --knownSites 1000G_phase1.indels.b37.vcf **-jdk_inflater=true**. or . ./gatk-launch BaseRecalibrator -R human_g1k_v37_decoy.fasta -I NA12878.md.bam -O NA12878.br.table --knownSites 1000G_phase1.indels.b37.vcf. all three will run with no problem. However when combined **-L and -jdk_inflater=true** it will fail with error. This problem is on both Intel system and Power system. It feels like an easy fix. Would you please look into that? Thanks!,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2722:38,test,testing,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2722,1,['test'],['testing']
Testability,Bug. It creates inaccurate ref calls. Test case is available in https://github.com/broadinstitute/gsa-unstable/issues/1271,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/269#issuecomment-183000341:38,Test,Test,38,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/269#issuecomment-183000341,1,['Test'],['Test']
Testability,Build and test on Java 11,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6119:10,test,test,10,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6119,1,['test'],['test']
Testability,Build test Script to evaluate HaplotypeCallerSpark automatically against default mode,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5396:6,test,test,6,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5396,1,['test'],['test']
Testability,BuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/4.raw.pp.ec.filter.pass.merged.rmdup.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/4.raw.pp.fq; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.fastq; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.rmdup-contigs.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.pp.ec.filter.pass.merged.rmdup.fa; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/sga/RunSGAViaProcessBuilderOnSpark/9.raw.pp.fq; src/test/resources/org/broadinstitute/hellbender/tools/spark/sv/utils/SVContext.vcf.gz.tbi; src/test/resources/org/broadinstitute/hellbender/tools/splitNCigarReadsSnippet.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.bam; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.cram; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.dict; src/test/resources/org/broadinstitute/hellbender/tools/split_reads.fasta.fai; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.bam; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.cram; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_missing_lib.dict; src/test/resources/org/broadinstitute/hellbender/tools/split_reads_,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:44264,test,test,44264,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,Bump test coverage for SV utils package,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5139:5,test,test,5,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5139,1,['test'],['test']
Testability,"Bumps [com.google.protobuf:protobuf-java](https://github.com/protocolbuffers/protobuf) from 3.23.4 to 3.25.5.; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/9d0ec0f92b5b5fdeeda11f9dcecc1872ff378014""><code>9d0ec0f</code></a> Updating version.json and repo version numbers to: 25.5</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/4a197e78ad2430e22e992c5a7727b61ae220f727""><code>4a197e7</code></a> Merge pull request <a href=""https://redirect.github.com/protocolbuffers/protobuf/issues/18387"">#18387</a> from protocolbuffers/cp-lp-25</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/b5a7cf7cf4b7e39f6b02205e45afe2104a7faf81""><code>b5a7cf7</code></a> Remove RecursiveGroup test case which doesn't exist in 25.x pre-Editions</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/f000b7e18fd6921ca02ea4b87608e8cadcb7b64f""><code>f000b7e</code></a> Fix merge conflict by adding optional label to proto2 unittest_lite.proto</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/4728531c162f2f9e8c2ca1add713cfee2db6be3b""><code>4728531</code></a> Add recursion check when parsing unknown fields in Java.</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/850fcce9176e2c9070614dab53537760498c926b""><code>850fcce</code></a> Internal change</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/b7044987de77f1dc368fee558636d0b56d7e75e1""><code>b704498</code></a> Internal change</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/e67347986eaf7d777a6ee34367fa99f4912423ab""><code>e673479</code></a> Fix cord handling in DynamicMessage and oneofs. (<a href=""https://redirect.github.com/protocolbuffers/protobuf/issues/18375"">#18375</a>)</li>; <li><a href=""https://github.com/protocolbuffers/protobuf/commit/8a60b6527a976cfd0028153da3ad8e4ed280e0de""><code>8a60b65</code></a> Merge pull request <a href=""https://redirect.github.c",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/9004:775,test,test,775,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/9004,1,['test'],['test']
Testability,Bundle the whole HG19 and HG38 reference in git lfs for tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5111:56,test,tests,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5111,1,['test'],['tests']
Testability,But that smoke test doesn't actually test any new functionality. The variable was there in the WDL before and was already being used - it just had no default value.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5872#issuecomment-483668246:15,test,test,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5872#issuecomment-483668246,2,['test'],['test']
Testability,BwaMemIntegrationTest fails on gsa5 and crashes the test suite. . Bwa produces ```[bwt_restore_sa] SA-BWT inconsistency: seq_len is not the same. Abort!``` and then exits which kills the test suite in a gross way. @SHuang-Broad points out that this often indicates that the version of bwa that was used to generate the index has a difference from the version that is used to load the index. It's unclear what's happening here because that same test with the same files passes on travis and on mac.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2451:52,test,test,52,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2451,3,['test'],['test']
Testability,BwaSpark needs good integration tests.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2523:32,test,tests,32,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2523,1,['test'],['tests']
Testability,BwaSpark too verbose logging coming from jbwa,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2054:21,log,logging,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2054,1,['log'],['logging']
Testability,"By default we only support OSX and modernish linux on amd64. We don't have a plan to test or officially support aarch64. However, it's mostly java so it might mostly work? The things I can think of off the bat that won't work are the optimizations for intel hardware, i.e. the fast pairhmm and deflate/inflate optimizations will definitely not work. They **should** degrade to java implementations automatically though. . IBM has a fork that works on power8 which reimplements some of the optimizations for PairHMM, so it's definitely possible to implement the various native optimizations for other architectures although not a small project. . GenomicsDB won't work since we only bundle libs for amd64/osx. You could in theory compile it yourself and pass the library on the library path. Other things that will need special attention would any of the library wrappers, for bwa-mem, fermlite, and hdf5. Those will similarly need custom builds supplied to the gatk. . I suspect that you could get the reads pipeline working, but newer tools with weirder native dependencies will be tricky.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6118#issuecomment-524959548:85,test,test,85,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6118#issuecomment-524959548,1,['test'],['test']
Testability,"By got them all, I mean, every `@Test` in every file with spark and test in it's name. We need a way to automate this..",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1814#issuecomment-218606011:33,Test,Test,33,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1814#issuecomment-218606011,2,"['Test', 'test']","['Test', 'test']"
Testability,"By modifying the test I was able to isolate the error in the `org.broadinstitute.hellbender.tools.walkers.variantutils` package, which is strange because the PR did not modify the javadoc for any class in that package. The integration test runs `com.sun.tools.javadoc.Main.execute` and asserts that the output code is zero, which does not yield a useful error message. In order to produce something more meaningful I hacked the test to output the entire `stdout` and `stderr` as follows:. ```; final StringWriter out = new StringWriter();; final PrintWriter err = new PrintWriter(out);. final int result = com.sun.tools.javadoc.Main.execute(""program"", err, err, err, ""doclet"",docArgList.toArray(new String[] {}));; err.flush(); // probably not needed; String message = out.toString(); // message contains the entire stdout and stderr of the call to execute; Assert.assertEquals(result, 0, message);; ```. The output is about 2000 lines, but a lot of it is clearly innocuous. Removing lines such as; * `2022-08-16T00:09:07.2336106Z [parsing completed 1ms]`; * `2022-08-16T00:09:07.4456202Z [loading ZipFileIndexFileObject[/jars/gatk-package-4.2.6.1-56-gad9a538-SNAPSHOT-test.jar(org/broadinstitute/hellbender/tools/walkers/variantutils/ReblockGVCFIntegrationTest.class)]]`; * `2022-08-16T00:09:07.4459732Z [loading RegularFileObject[src/main/java/org/broadinstitute/hellbender/cmdline/argumentcollections/OptionalIntervalArgumentCollection.java]]`; * `2022-08-16T00:09:07.4462012Z [parsing started RegularFileObject[src/main/java/org/broadinstitute/hellbender/cmdline/argumentcollections/OptionalReferenceInputArgumentCollection.java]]`; * 2022-08-16T00:09:07.2322755Z [loading ZipFileObject[/gatk/gatk-package-unspecified-SNAPSHOT-local.jar(htsjdk/samtools/SAMSequenceDictionary.class)]]. brings it down to 353 lines, the majority of which look like . ```2022-08-16T00:09:07.4435974Z src/main/java/org/broadinstitute/hellbender/cmdline/CommandLineProgram.java:479: error: cannot find symbol; 2022-08-1",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217231488:17,test,test,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7991#issuecomment-1217231488,6,"['Assert', 'assert', 'test']","['Assert', 'assertEquals', 'asserts', 'test']"
Testability,By the way the default overlap overhand radius for reads/fragments to be included in PL and annotations is set to 2. The most inclusive of the two version in existence. Can be changed to whatever you think is best but test would be updated accordingly.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6055#issuecomment-558829903:218,test,test,218,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6055#issuecomment-558829903,1,['test'],['test']
Testability,"By the way, `theano` needs `g++` for compiling the computational graph. In your opinion, what/where is a good strategy/place to assert this @cmnbroad?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3912#issuecomment-349510293:128,assert,assert,128,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3912#issuecomment-349510293,1,['assert'],['assert']
Testability,CFs/testWrongReferenceBaseBugFix.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/CombineGVCFs/tetraploid-gvcf-3.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testClusteredSnps.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testDeletions.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilter1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilter2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilteringDPfromFORMATAndFailMissing.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilteringDPfromFORMAT.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilteringDPfromINFO.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilteringZfromFORMAT.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testFilterWithSeparateNames.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testGenotypeFilters1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/walkers/filters/VariantFiltration/expected/testVariantFiltration_testGenotypeFilters2,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:52363,test,test,52363,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"CFsHeadToHeadOrchestrated.NIST_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToH",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067505110:8155,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,8155,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067505110,8,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"CFsHeadToHeadOrchestrated.NIST_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthLabel"": ""HG002_GRCh38_GIAB"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark.broad-header.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.hapMap"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkVCFsHeadToHeadOrchestrated.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""BenchmarkVCFsHeadToHeadOrchestrated.reference"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sa",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067505110:8400,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,8400,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067505110,8,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"CI didn't fail when I opened the pull request, however, one of the two CI runs failed when I commits the additional changes to two files (one for unit test of VectorPairHMM and one for Java API of VectorPairHMM). I found that PrintReads failed in the log output, but I could not figure out the root cause. ```; $ ./gatk-launch PrintReads -I src/test/resources/NA12878.chr17_69k_70k.dictFix.bam -O output.bam; Missing GATK wrapper script: /home/travis/build/broadinstitute/gatk/build/install/gatk/bin/gatk. To generate the wrapper run:. /home/travis/build/broadinstitute/gatk/gradlew installDist. The command ""./gatk-launch PrintReads -I src/test/resources/NA12878.chr17_69k_70k.dictFix.bam -O output.bam"" exited with 3.; ```",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1748#issuecomment-213250708:151,test,test,151,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1748#issuecomment-213250708,4,"['log', 'test']","['log', 'test']"
Testability,CI failures look unrelated to my changes; ```; 2024-04-19T15:02:06.0366967Z #30 2368.0 E: Failed to fetch http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu/pool/main/g/gcc-13/libgcc-s1_13.1.0-8ubuntu1~18.04_amd64.deb Unable to connect to ppa.launchpad.net:http:; ```,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8783#issuecomment-2066932180:150,test,test,150,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8783#issuecomment-2066932180,1,['test'],['test']
Testability,CI test,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5799:3,test,test,3,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5799,1,['test'],['test']
Testability,CI tests in GenomicsDB - https://github.com/Intel-HLS/GenomicsDB/pull/116/files#diff-4d1bd3fdfc67d35993565f52590bd28f,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2636#issuecomment-306343424:3,test,tests,3,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2636#issuecomment-306343424,1,['test'],['tests']
Testability,CNNPipelineIntegration tests needs expected results validation,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4537:23,test,tests,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4537,1,['test'],['tests']
Testability,"CNNVariantScore has a 2d integration test but the vcf and bam inputs have no overlapping genomic territory, so no reads data is ever transmitted to the python code",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4536:37,test,test,37,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4536,1,['test'],['test']
Testability,CNNVariantScore needs 2d test with overlapping reads,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4536:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4536,1,['test'],['test']
Testability,"CNVCalls - Writing segments VCF file to /srv/scratch/testardqu/CNV_Hyperexome/segments_joint/genotyped-segments-SAMPLE_6.vcf.gz...; 01:48:46.860 INFO PostprocessGermlineCNVCalls - Generating denoised copy ratios...; 01:48:47.487 INFO PostprocessGermlineCNVCalls - Writing denoised copy ratios to /srv/scratch/testardqu/CNV_Hyperexome/ratios_joint/denoised-copy-ratios-SAMPLE_6.tsv...; 01:48:47.773 INFO PostprocessGermlineCNVCalls - PostprocessGermlineCNVCalls complete.; 01:48:47.773 INFO PostprocessGermlineCNVCalls - Shutting down engine; [December 6, 2022 1:48:47 AM GMT] org.broadinstitute.hellbender.tools.copynumber.PostprocessGermlineCNVCalls done. Elapsed time: 123.29 minutes.; Runtime.totalMemory()=7257194496; Using GATK jar /gatk/gatk-package-4.3.0.0-local.jar; Running:; java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -Xms4g -Djava.io.tmpdir=/srv/scratch/testardqu/CNV_Hyperexome/tmp/ -jar /gatk/gatk-package-4.3.0.0-local.jar PostprocessGermlineCNVCalls --model-shard-path /srv/scratch/testardqu/CNV_Hyperexome/GermlineCNVCaller/GermlineCNVCaller_1_of_8-model/ --model-shard-path /srv/scratch/testardqu/CNV_Hyperexome/GermlineCNVCaller/GermlineCNVCaller_2_of_8-model/ --model-shard-path /srv/scratch/testardqu/CNV_Hyperexome/GermlineCNVCaller/GermlineCNVCaller_3_of_8-model/ --model-shard-path /srv/scratch/testardqu/CNV_Hyperexome/GermlineCNVCaller/GermlineCNVCaller_4_of_8-model/ --model-shard-path /srv/scratch/testardqu/CNV_Hyperexome/GermlineCNVCaller/GermlineCNVCaller_5_of_8-model/ --model-shard-path /srv/scratch/testardqu/CNV_Hyperexome/GermlineCNVCaller/GermlineCNVCaller_6_of_8-model/ --model-shard-path /srv/scratch/testardqu/CNV_Hyperexome/GermlineCNVCaller/GermlineCNVCaller_7_of_8-model/ --model-shard-path /srv/scratch/testardqu/CNV_Hyperexome/GermlineCNVCaller/GermlineCNVCaller_8_of_8-model/ --calls-shard-path /srv/scratch/testardqu/CNV_Hyperexome/Germl",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8183:11584,test,testardqu,11584,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8183,1,['test'],['testardqu']
Testability,"CPU usage was high. ```; %CPU WallTime Time Lim RSS mem memlim cpus; hugemem-ex; 105958574 R ds6924 hm82 getpileu 99 07:23:01 16:00:00 1120GB 1120GB 1400GB 37; ```. However, it never proceeds past the first interval. ```; 08:21:42.921 INFO GetPileupSummaries - The Genome Analysis Toolkit (GATK) v4.4.0.0; 08:21:42.921 INFO GetPileupSummaries - Start Date/Time: January 12, 2024 at 8:21:42 AM GMT+10:00; 08:21:42.927 INFO GetPileupSummaries - Initializing engine; 08:55:35.361 INFO IntervalArgumentCollection - Processing 326649654 bp from intervals; 08:57:45.036 INFO GetPileupSummaries - Done initializing engine; 08:57:45.101 INFO ProgressMeter - Starting traversal; 08:57:45.106 INFO ProgressMeter - Current Locus Elapsed Minutes Loci Processed Loci/Minute; (END); ```. There is a memory error in some log files but only after many hours and no intervals processed. ```; 08:34:26.243 INFO ProgressMeter - Starting traversal; 08:34:26.244 INFO ProgressMeter - Current Locus Elapsed Minutes Loci Processed Loci/Minute; 15:35:01.977 INFO GetPileupSummaries - Shutting down engine; [January 12, 2024 at 3:35:02 PM GMT+10:00] org.broadinstitute.hellbender.tools.walkers.contamination.GetPileupSummaries done. Elapsed time: 433.32 minutes.; Runtime.totalMemory()=31136546816; Exception in thread ""main"" java.lang.OutOfMemoryError: Java heap space; ```",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8654:806,log,log,806,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8654,1,['log'],['log']
Testability,CRAM Tests for CompareBaseQualities.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1574:5,Test,Tests,5,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1574,1,['Test'],['Tests']
Testability,CRAM integration tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/784:17,test,tests,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/784,1,['test'],['tests']
Testability,CRAM test to verify proper stream management with multiple queries on remote files.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7066:5,test,test,5,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7066,1,['test'],['test']
Testability,"CRAMInputFormat doesn't support several of the new features in BAMInputFormat, specifically:; - interval filtering https://github.com/HadoopGenomics/Hadoop-BAM/pull/59; - keep read pairs together (should test queryname sorted CRAM in Hadoop-BAM) https://github.com/HadoopGenomics/Hadoop-BAM/pull/49; - we should also test this issue on CRAM https://github.com/HadoopGenomics/Hadoop-BAM/pull/80",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1777:204,test,test,204,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1777,2,['test'],['test']
Testability,CRAMs for 20 normals are in gs: //broad-dsde-methods/testdata/aneuploidy_samples_panel. These are all from the same project (G100345) so it will be interesting to see if there are any batch effects that show up in the GQs.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/4371#issuecomment-365064461:53,test,testdata,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/4371#issuecomment-365064461,1,['test'],['testdata']
Testability,CSTests/expected_VariantWalkerGCSSupportIntegrationTest_vcf_wholefile.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/GenomicsDBIntegration/tiny.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/minimal_bcf_file.bcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/minimal_bed_file.bed.idx; src/test/resources/org/broadinstitute/hellbender/engine/minimal_vcf3_file.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/minimal_vcf4_file.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/MultiVariantDataSource/baseVariants.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/MultiVariantDataSource/interleavedVariants_1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/MultiVariantDataSource/interleavedVariants_1_WithOverlap.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/MultiVariantDataSource/interleavedVariants_2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/MultiVariantDataSource/interleavedVariants_2_WithOverlap.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/MultiVariantDataSource/splitVariants_1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/MultiVariantDataSource/splitVariants_2.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/MultiVariantWalkerGroupedOnStart/gvcfExample1.vcf.idx; src/test/resources/org/broadinstitute/hellbender/engine/reads_data_source_test1_with_unmapped.bam.bai; src/test/resources/org/broadinstitute/hellbender/engine/reads_data_source_test3.bam.bai; src/test/resources/org/broadinstitute/hellbender/engine/spark/datasources/ReadsSparkSink/directoryWithNoPartFiles; src/test/resources/org/broadinstitute/hellbender/engine/spark/datasources/ReadsSparkSink/directoryWithNoPartFiles/_SUCCESS; src/test/resources/org/broadinstitute/hellbender/engine/spark/datasources/ReadsSparkSink/fragments_test; src/test/resources/org/broadinstitute/hellbender/engine/spark/datasources/Rea,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:11613,test,test,11613,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,"CTTTCTTTCTTTCTTTCTT,CTCTTTCTTTCTTTCTT,CTCTTTCTTTCTTTCTTTCTTTCTTTCTTTCTTTCTT,TTCTTTCTTTCTTTCTTTCTT,CTTCTTTCTTTCTTTCTTTCTTTCTT,CTTTCTTTCTCTTTCTTTCTTTCTTTCTTTCTT,CTTTCTTTCTTTCTTTCTTTCTTTCTTTCTT,CTTTCTCTTTCTTTCTTTCTTTCTTTCTTTCTT,*,CTTTCTCTTTCTTTCTTTCTTTCTTTCTTTCTTTCTT,CTCTT,CTTTCTTTCTCTTTCTTTCTTTCTTTCTTTCTTTCTT,CTTCTTTCTTTCTTTCTT,CTTCTTTCTTTCTTTCTTTCTT,CTTTCTTTCTTTCTTTCTCTTTCTTTCTTTCTTTCTTTCTT,CTTTCTTTCTCTTTCTTTCTTTCTTTCTTTCTTTCTTTCTT,CTTTCTTTCTTTCTCTTTCTTTCTTTCTTTCTTTCTT,CTCTTTCTTTCTTTCTTTCCTTCTTTCTTTCTTTCTTTCTT,CTTCTTTCTTTCTTTCTTTCTTTCTTTCTT,CTTTCTTCTTTCTTTCTTTCTTTCTT	174463.40	.	AC=187,86,161,58,27,33,4,150,57,56,18,99,1,14,2,20,87,7,2,8,1,1,1,3,9,2,1,1;AF=0.042,0.019,0.036,0.013,6.054e-03,7.399e-03,8.969e-04,0.034,0.013,0.013,4.036e-03,0.022,2.242e-04,3.139e-03,4.484e-04,4.484e-03,0.020,1.570e-03,4.484e-04,1.794e-03,2.242e-04,2.242e-04,2.242e-04,6.726e-04,2.018e-03,4.484e-04,2.242e-04,2.242e-04;AN=4460;BaseQRankSum=0.358;ClippingRankSum=0.198;DP=46213;ExcessHet=0.0000;FS=6.806;InbreedingCoeff=0.2453;MLEAC=60,92,186,69,34,35,4,159,68,72,16,119,1,16,3,25,119,8,3,10,1,1,1,4,9,3,1,1;MLEAF=0.013,0.021,0.042,0.015,7.623e-03,7.848e-03,8.969e-04,0.036,0.015,0.016,3.587e-03,0.027,2.242e-04,3.587e-03,6.726e-04,5.605e-03,0.027,1.794e-03,6.726e-04,2.242e-03,2.242e-04,2.242e-04,2.242e-04,8.969e-04,2.018e-03,6.726e-04,2.242e-04,2.242e-04;MQ=67.44;MQRankSum=-6.960e-01;QD=26.22;ReadPosRankSum=0.804;SOR=1.593; ```. GATK4 output:; ```; chr5	43198207	.	CTCTTTCTTTCTTTCTTTCTT	CTCTTTCTTTCTT,CTCTTTCTT,CTTTCTTTCTTTCTTTCTTTCTT,CTCTTTCTTTCTTTCTTTCTTTCTT,TTCTTTCTTTCTTTCTTTCTT,*	148098.81	.	AC=341,97,161,163,100,87;AF=0.077,0.022,0.036,0.037,0.022,0.020;AN=4450;BaseQRankSum=0.358;ClippingRankSum=0.198;DP=46213;ExcessHet=0.0000;FS=6.806;InbreedingCoeff=0.2868;MLEAC=86,125,234,200,160,174;MLEAF=0.019,0.028,0.053,0.045,0.036,0.039;MQ=68.92;MQRankSum=-6.960e-01;QD=31.22;ReadPosRankSum=0.804;SOR=1.602; ```. I'm happy to provide more test data if needed and I have the input that generated this site.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2674:2469,test,test,2469,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2674,1,['test'],['test']
Testability,"CTX events have CTX_PP/QQ or CTX_PQ/QP as CPX_TYPE values in GATK-SV VCFs. However, slashes are not allowed as part of enum values, so these are represented in the ComplexVariantSubtype enum as CTX_PP_QQ and CTX_PQ_QP. This caused the CTX subtypes to not be recognized and to be dropped during SVConcordance (https://github.com/broadinstitute/gatk-sv/issues/664). This representation may merit further discussion, as it's not ideal that the ComplexVariantSubtype values are not a 1:1 match with the VCF values. But as one possible solution without altering the VCF, I've implemented a workaround that replaces the slash with an underscore during getComplexSubtype. I've also updated SVAnnotate to use this method, in the hopes that we can use it across all of the SV tools for more consistent behavior. I added a unit test for getComplexSubtype with one regular CPX_TYPE, one CTX subtype, and one non-CPX event. The test suites for SVCallRecord, SVCallRecordUtils, SVAnnotate, and SVConcordance all ran successfully on my branch.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8885:818,test,test,818,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8885,2,['test'],['test']
Testability,CalculateGenotypePostiors minor updates to javadoc and logger type,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5601:55,log,logger,55,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5601,1,['log'],['logger']
Testability,CallSetSampleOrdering/badlySorted1000-batch-size13.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/flag_stat.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/flag_stat.fasta; src/test/resources/org/broadinstitute/hellbender/tools/genome/HCC1143_chr22_27M_37M.tiny.bam; src/test/resources/org/broadinstitute/hellbender/tools/genome/HCC1143_chr22_27M_37M.tiny.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/genome/HCC1143_chr3_1K_11K.tiny.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/GenomicsDBImport/testHeaderContigLineSorting1.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/GenomicsDBImport/testHeaderContigLineSorting2.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.3.8-4-g7b0250253f.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk3.5.alleleSpecific.g.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk3.5.g.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testGVCFMode.gatk3.8-4-g7b0250253f.alleleSpecific.g.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.5.alleleSpecific.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.5.vcf; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.8-4-g7b0250253f.alleleSpecific.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/expected.testVCFMode.gatk3.8-4-g7b0250253.vcf.idx; src/test/resources/org/broadinstitute/hellbender/tools/haplotypecaller/pretendTobeTetraPloidTetraAllelicSite.bam.bai; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.empty.table.gz; src/test/resources/org/broadinstitute/hellbender/tools/HiSeq.1mb.1RG.noSG.table.gz; src/test/resource,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3905:37124,test,test,37124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3905,1,['test'],['test']
Testability,Caller - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false; 10:56:25.354 INFO GermlineCNVCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true; 10:56:25.355 INFO GermlineCNVCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false; 10:56:25.356 INFO GermlineCNVCaller - Deflater: IntelDeflater; 10:56:25.357 INFO GermlineCNVCaller - Inflater: IntelInflater; 10:56:25.358 INFO GermlineCNVCaller - GCS max retries/reopens: 20; 10:56:25.358 INFO GermlineCNVCaller - Using google-cloud-java patch 6d11bef1c81f885c26b2b56c8616b7a705171e4f from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes; 10:56:25.360 WARN GermlineCNVCaller -. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. Warning: GermlineCNVCaller is a BETA tool and is not yet ready for use in production. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!. 10:56:25.361 INFO GermlineCNVCaller - Initializing engine; 10:56:54.347 INFO GermlineCNVCaller - Done initializing engine; log4j:WARN No appenders could be found for logger (org.broadinstitute.hdf5.HDF5Library).; log4j:WARN Please initialize the log4j system properly.; log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.; 10:56:55.287 INFO GermlineCNVCaller - Retrieving intervals from first read-count file (hdf5/grexome0426.hdf5)...; 10:56:55.384 INFO GermlineCNVCaller - No GC-content annotations for intervals found; explicit GC-bias correction will not be performed...; 10:56:55.482 INFO GermlineCNVCaller - Running the tool in the COHORT mode...; 10:56:55.485 INFO GermlineCNVCaller - Validating and aggregating data from input read-count files...; 10:56:55.511 INFO GermlineCNVCaller - Aggregating read-count file hdf5/grexome0426.hdf5 (1 / 387); 10:56:55.812 INFO GermlineCNVCaller - Aggregating read-count file hdf5/grexome0342.hdf5 (2 / 387); 10:56:56.274 INFO GermlineCNVCaller - Aggregating read-count file hdf5/grexome0316.hdf5 (3 / 387); 10:56:56.635 INFO GermlineCNVCaller - ,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5053:2902,log,logger,2902,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5053,1,['log'],['logger']
Testability,Calling `isCloudStorageUrl` should be decidable without logging in.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/2706#issuecomment-300807188:56,log,logging,56,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/2706#issuecomment-300807188,1,['log'],['logging']
Testability,"CallingCarrot.contamination"": 0.0383312,; ""VariantCallingCarrot.final_vcf_base_name"": ""NA24385"",; ""VariantCallingCarrot.gatk_docker"": ""image_build:gatk|ce0a811376d45c6ea62b40e78abffcd37c0317b4"",; ""VariantCallingCarrot.haplotype_scatter_count"": 50,; ""VariantCallingCarrot.input_bam"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bam"",; ""VariantCallingCarrot.input_bam_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/NA24385_NA24385_O1D1_SM-G947H_v1_NS.bai"",; ""VariantCallingCarrot.ref_dict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""VariantCallingCarrot.ref_fasta"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta"",; ""VariantCallingCarrot.ref_fasta_index"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.fasta.fai"",; ""VariantCallingCarrot.use_gatk3_haplotype_caller"": true; },; ""test_options"": null,; ""eval_input"": {; ""BenchmarkComparison.confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkComparison.controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkComparison.controlVcf"": ""test_output:VariantCallingCarrot.control_vcf"",; ""BenchmarkComparison.controlVcfIndex"": ""test_output:VariantCallingCarrot.control_vcf_index"",; ""BenchmarkComparison.evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkComparison.evalVcf"": ""test_output:VariantCallingCarrot.output_vcf"",; ""BenchmarkComparison.evalVcfIndex"": ""test_output:VariantCallingCarrot.output_vcf_index"",; ""BenchmarkComparison.hapMap"": ""gs://gcp-public-data--broad-references/hg38/v0/Homo_sapiens_assembly38.haplotype_database.txt"",; ""BenchmarkComparison.refDict"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/Homo_sapiens_assembly38.dict"",; ""BenchmarkComparison.refIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypec",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510:1734,Benchmark,BenchmarkComparison,1734,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1055740510,4,['Benchmark'],['BenchmarkComparison']
Testability,Can handle .tsv and .tsv.gz input and output files. ; In theory NIO ready. ; @Header lines are preserved.; No test added so far but you should be able to test it out on a given file(s) or bucket url(s) like so:. `./gatk CondenseReadCounts --input input.100bp.tsv -O output.1000bp.tsv.gz -f 10 --out-bin-length 1000`. The last argument ```--out-bin-length 1000``` is optional and make sure that only those bins with exactly 1000 bases are output.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5707:110,test,test,110,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5707,2,['test'],['test']
Testability,"Can probably copy existing tests for SHUFFLE, replacing the reference with a .2bit reference.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1140#issuecomment-157495199:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1140#issuecomment-157495199,1,['test'],['tests']
Testability,Can we make this test for either `g.vcf` or `gvcf` instead of one or the other? Both seem reasonable to me.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2163#issuecomment-246829661:17,test,test,17,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2163#issuecomment-246829661,1,['test'],['test']
Testability,Can you add a badge to htsjdk for these tests @lbergelson? One of our promises was that non-Broadies would be able to see the status of them.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1705#issuecomment-213494430:40,test,tests,40,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1705#issuecomment-213494430,1,['test'],['tests']
Testability,Can you add tests that prove that #1572 and #3069 are fixed?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3177#issuecomment-312061731:12,test,tests,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3177#issuecomment-312061731,1,['test'],['tests']
Testability,Can you also post your log here as well?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8873#issuecomment-2173898607:23,log,log,23,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8873#issuecomment-2173898607,1,['log'],['log']
Testability,"Can you give a bit more information here? If I'm understanding correctly, it's not clear that the same issue is at play here. The original issue was that duplicate/incomplete fragments were causing queries to the workspace to fail. . In this latest instance, it seems you are appending additional samples to the existing workspace. Is that right? If so,; - are you seeing the same/similar error? That is, it's a core dump? Can you share the error messages, any logs, core dump files etc?; - did you clean up the workspace before importing? That is, remove the incomplete fragment @nalinigans identified and the duplicated ones?. My first instinct is that even if the incomplete/duplicated fragments weren't cleaned up, the incremental import shouldn't have an issue -- at least not till it gets to the consolidate phase, which only happens after all batches are imported. Sounds like you were seeing an issue at batch 3 of 4, so might have something to do with the samples in that batch...or some other import issue. You mentioned that previous imports to this particular contig failed -- were those just transient failures that worked when rerun, or was there some configuration that you changed to get that to work?. For completeness, the way I identified duplicate fragments was to do an md5sum check on some of the internal files. If any pair of fragments have the same md5sum they are likely duplicates. So, from the workspace directory, something like:. ```; find . -name ""ALT.tdb"" -exec md5sum {} \;|sort; ```; That will highlight the fragments that are potentially duplicate. To confirm that the fragments are indeed duplicates, you'll then want to take that list of potentially duplicate fragments and check that all corresponding files within each pair of potentially duplicate fragments actually have the same md5sum. I have a crude bash script that I can share if you want.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6910#issuecomment-722541707:461,log,logs,461,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6910#issuecomment-722541707,1,['log'],['logs']
Testability,"Can you please test this change with the `HaplotypeCaller` in protected and make sure nothing changes? In particular, can you run `HaplotypeCallerIntegrationTest` and `HaplotypeCallerEngineUnitTest` and make sure they pass with this change? This PR makes me a little nervous given the centrality of the classes touched, even though the optimization itself is simple enough...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1795#issuecomment-216595202:15,test,test,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1795#issuecomment-216595202,1,['test'],['test']
Testability,"Can you point out where in the log you see that? I'm looking at it but I don't see anything about memory in the log you provided. (Except the Runtime.totalMemory()=4523032576 which is just standard output spam from gatk when it shutsdown) Sequence dictionary validation usually happens first, it's strange that a failure in the middle of a run would be effected by it. I'm no very curious what weird thing is happening that's causing this...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548114772:31,log,log,31,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6182#issuecomment-548114772,2,['log'],['log']
Testability,"Can you provide me some test data for include in the tools integration test, @vdauwera and/or @sooheelee? If not, I will try to use some BAM files already in the repository...",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/3104#issuecomment-308060263:24,test,test,24,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/3104#issuecomment-308060263,2,['test'],['test']
Testability,Can you provide the whole log as an attachment? It is really hard to debug with missing information.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8952#issuecomment-2287898755:26,log,log,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8952#issuecomment-2287898755,1,['log'],['log']
Testability,Can you provide your logs that shows the error message?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/8918#issuecomment-2236819113:21,log,logs,21,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/8918#issuecomment-2236819113,1,['log'],['logs']
Testability,Can you repeat this same test over an NFS filesystem from a Broad server?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1033#issuecomment-150652588:25,test,test,25,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1033#issuecomment-150652588,1,['test'],['test']
Testability,Can you share more of the log? It would also be helpful to rerun after adding `--java-options '-DGATK_STACKTRACE_ON_USER_EXCEPTION=true'` between `gatk` and `VariantRecalibrator`. I'm guessing this fails quickly.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7225#issuecomment-828651626:26,log,log,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7225#issuecomment-828651626,1,['log'],['log']
Testability,Can you suggest the best way for us to get your tests to pass on travis?,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/529#issuecomment-105983808:48,test,tests,48,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/529#issuecomment-105983808,1,['test'],['tests']
Testability,"Can you try to tag all the tests in test classes with ""spark"" in their name? Might as well be thorough..",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1814#issuecomment-218601522:27,test,tests,27,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1814#issuecomment-218601522,2,['test'],"['test', 'tests']"
Testability,"Can't seem to do git clone https://github.com/broadinstitute/hellbender/. This is my console output:. ```; wmd16-c9e:codespace vdauwera$ git clone http://github.com/broadinstitute/hellbender/; Cloning into 'hellbender'...; remote: Counting objects: 22221, done.; remote: Compressing objects: 100% (142/142), done.; remote: Total 22221 (delta 47), reused 4 (delta 4), pack-reused 22046; Receiving objects: 100% (22221/22221), 36.63 MiB | 3.58 MiB/s, done.; Resolving deltas: 100% (9903/9903), done.; Checking connectivity... done.; Downloading src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam (76.16 MB); Username for 'http://github.com': vdauwera; Password for 'http://vdauwera@github.com': ; Error accessing media: src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam (6b1304800e60c0ac0358df137bdad48b7857a36465b04fef3fbbb09380f04746). Errors logged to /Users/vdauwera/codespace/hellbender/.git/lfs/objects/logs/20151005T220016.510795175.log.; Use `git lfs logs last` to view the log.; Downloading src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam.bai (11.25 KB); Username for 'http://github.com': ; ```. Looks like I'm failing to download large test files. Do I need to be on VPN for this to work? Or is it expected and I should ignore it?",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/950#issuecomment-145722061:547,test,test,547,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/950#issuecomment-145722061,9,"['log', 'test']","['log', 'logged', 'logs', 'test']"
Testability,Cannot read indices on BGZF files created by IndexFeatureFile when they are written using the default .tbi extension. see discussion in https://github.com/broadinstitute/gatk/pull/985; See the disabled test `IndexFeatureFileIntegrationTest.testVCFGZIndex_inferredName`,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/1187:202,test,test,202,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/1187,1,['test'],['test']
Testability,Capture excessive log output regressions in the test suite,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/7368:18,log,log,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/7368,2,"['log', 'test']","['log', 'test']"
Testability,"CarrotOrchestrated.EXOME1_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthLabel"": ""NA12878_GRCh38_TWISTExome"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.CHM_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf_i",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067505110:7395,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,7395,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/7651#issuecomment-1067505110,8,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"CarrotOrchestrated.EXOME1_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.EXOME1_output_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthLabel"": ""NA12878_GRCh38_TWISTExome"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcf"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz"",; ""BenchmarkVCFsHeadToHeadOrchestrated.EXOME1_truthVcfIndex"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/GIAB_v3.3.2_NA12878_hg38.vcf.gz.tbi"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_confidenceInterval"": ""gs://dsp-methods-carrot-data/test_data/haplotypecaller_tests/HG002_GRCh38_GIAB_1_22_v4.2.1_benchmark_noinconsistent.bed"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlLabel"": ""CONTROLSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_controlVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_control_vcf_index"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalLabel"": ""TESTSNAPSHOT2018HG002"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalMonitoringExample"": ""test_output:VariantCallingCarrotOrchestrated.NIST_representative_benchmarking"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalRuntimeSummaries"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_runtimes"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcf"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf"",; ""BenchmarkVCFsHeadToHeadOrchestrated.NIST_evalVcfIndex"": ""test_output:VariantCallingCarrotOrchestrated.NIST_output_vcf",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508:8154,Benchmark,BenchmarkVCFsHeadToHeadOrchestrated,8154,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/6351#issuecomment-1533286508,68,['Benchmark'],['BenchmarkVCFsHeadToHeadOrchestrated']
Testability,"Census_Table_1_full_2012-03-15.txt -> file:///home/shiyang/softwares/funcotator_dataSources/funcotator_dataSources.v1.7.20200521s/cancer_gene_census/hg19/CancerGeneCensus_Table_1_full_2012-03-15.txt; 15:41:51.073 INFO DataSourceUtils - Resolved data source file path: file:///home/shiyang/softwares/gatk-4.1.8.1/Cosmic.db -> file:///home/shiyang/softwares/funcotator_dataSources/funcotator_dataSources.v1.7.20200521s/cosmic/hg19/Cosmic.db; 15:41:51.190 INFO DataSourceUtils - Resolved data source file path: file:///home/shiyang/softwares/gatk-4.1.8.1/gencode.v34lift37.annotation.REORDERED.gtf -> file:///home/shiyang/softwares/funcotator_dataSources/funcotator_dataSources.v1.7.20200521s/gencode/hg19/gencode.v34lift37.annotation.REORDERED.gtf; 15:41:51.190 INFO DataSourceUtils - Setting lookahead cache for data source: Gencode : 100000; 15:41:51.191 WARN GencodeGtfCodec - GENCODE GTF Header line 1 has a version number that is above maximum tested version (v 28) (given: 34): ##description: evidence-based annotation of the human genome (GRCh38), version 34 (Ensembl 100), mapped to GRCh37 with gencode-backmap Continuing, but errors may occur.; 15:41:51.192 WARN GencodeGtfCodec - GENCODE GTF Header line 1 has a version number that is above maximum tested version (v 28) (given: 34): ##description: evidence-based annotation of the human genome (GRCh38), version 34 (Ensembl 100), mapped to GRCh37 with gencode-backmap Continuing, but errors may occur.; 15:41:51.192 INFO FeatureManager - Using codec GencodeGtfCodec to read file file:///home/shiyang/softwares/funcotator_dataSources/funcotator_dataSources.v1.7.20200521s/gencode/hg19/gencode.v34lift37.annotation.REORDERED.gtf; 15:41:51.193 WARN GencodeGtfCodec - GENCODE GTF Header line 1 has a version number that is above maximum tested version (v 28) (given: 34): ##description: evidence-based annotation of the human genome (GRCh38), version 34 (Ensembl 100), mapped to GRCh37 with gencode-backmap Continuing, but errors may occur.; 15:4",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6758:17854,test,tested,17854,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6758,1,['test'],['tested']
Testability,"CentOS Linux release 7.8.2003 (Core); JAVA: openjdk/14.0.1; GATK: 4.1.8.1. ---. I was running this following command:. intervals=$(echo ""$(seq 1 22) X Y"" | tr "" "" ""\n"" | sed 's/^/-L /' | xargs); ref_fasta=""/data1/GenomicDatabases/Human/GATK/b37/human_g1k_v37_decoy.fasta""; gvcfs=$(find hapcall -maxdepth 1 -name ""*_hapcall.g.vcf.gz"" -type f | xargs ls | sed 's/^/-V /' | xargs); /data1/software/gatk/4.1.8.1/gatk --java-options ""-XX:ParallelGCThreads=30 -Xms100g -Xmx100g -Djava.io.tmpdir=tmp"" CombineGVCFs -R ${ref_fasta} -O combine/human_combine.g.vcf.gz ${gvcfs} ${intervals} -G StandardAnnotation -G AS_StandardAnnotation --create-output-variant-index true > combine/human_combine.log 2>&1. ---. Here the log:; [human_combine.log](https://github.com/broadinstitute/gatk/files/5165640/human_combine.log). 09:10:26.647 INFO IntervalArgumentCollection - Processing 3095677412 bp from intervals; 09:10:26.694 INFO CombineGVCFs - Done initializing engine; 09:10:26.713 INFO ProgressMeter - Starting traversal; 09:10:26.714 INFO ProgressMeter - Current Locus Elapsed Minutes Variants Processed Variants/Minute; 09:10:30.685 WARN ReferenceConfidenceVariantContextMerger - Detected invalid annotations: When trying to merge variant contexts at location 1:13021 the annotation MLEAC=[1, 0] was not a numerical value and was ignored; 09:10:39.543 INFO ProgressMeter - 1:232994 0.2 1000 4676.9; 09:10:51.253 INFO ProgressMeter - 1:688469 0.4 2000 4890.4; 09:11:01.889 INFO ProgressMeter - 1:809005 0.6 3000 5117.3; 09:11:13.838 INFO ProgressMeter - 1:818424 0.8 5000 6366.2; 09:11:16.811 INFO CombineGVCFs - Shutting down engine; [September 3, 2020 at 9:11:16 AM CST] org.broadinstitute.hellbender.tools.walkers.CombineGVCFs done. Elapsed time: 1.20 minutes.; Runtime.totalMemory()=107374182400; java.lang.NullPointerException; 	at org.broadinstitute.hellbender.tools.walkers.annotator.allelespecific.StrandBiasUtils.encode(StrandBiasUtils.java:52); 	at java.base/java.util.stream.ReferencePipeline$3$1.accep",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/6790:685,log,log,685,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/6790,4,['log'],['log']
Testability,"Certainly the author can't just ""certify"" that the tool works without writing tests to prove it on an ongoing basis as the tool is modified -- I don't think that was what @nh13 meant (but please correct me if I misunderstood). I read that as ""if tests pass, the author certifies that the tool is in a usable state for its intended use(s)""",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/382#issuecomment-93806764:78,test,tests,78,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/382#issuecomment-93806764,2,['test'],['tests']
Testability,Change extract so that when we filter at the genotype level (with FT) the VCF header has the filter definition in the comment/unstructured fields of the VCF Header.; Also minor renaming of ExtractCohort argument. Passing Integration Test (all chromosomes) [here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/8e240d47-a75e-46b6-88f4-e95e7c1cf4e8); Passing Integration Test (chr20 and friends) [here](https://app.terra.bio/#workspaces/gvs-dev/GVS%20Integration/job_history/17ce6f1d-932d-4f4f-a2c8-f5f044bb1a67),MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8773:233,Test,Test,233,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8773,2,['Test'],['Test']
Testability,Change large test files from PR 8741 to lfs,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8769:13,test,test,13,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8769,1,['test'],['test']
Testability,"Change looks good - but can you please add a test, preferably for both longArgNames since it looks like there is no test for this method at all? Thx.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2360#issuecomment-275697908:45,test,test,45,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2360#issuecomment-275697908,2,['test'],['test']
Testability,Change root logging level to INFO,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/328:12,log,logging,12,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/328,1,['log'],['logging']
Testability,Change tests to not clobber GCS files being used by other tests.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3810:7,test,tests,7,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3810,2,['test'],['tests']
Testability,Change travis WDL test jobs to always retain the cromwell logs,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/5098:18,test,test,18,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/5098,2,"['log', 'test']","['logs', 'test']"
Testability,Changed SelectVariants so that it can handle multiple rsIDs separated by ';' in a VCF file.; The corresponding entry gets removed if any of those rsIDs has been set by the user to be deleted.; I also changed testExcludeSelectionIDFromFile() in SelectVariantsIntegrationTest to check this case.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5464:208,test,testExcludeSelectionIDFromFile,208,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5464,1,['test'],['testExcludeSelectionIDFromFile']
Testability,Changed exact-match tests for ModelSegments to allow for numerical differences due to Java version.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/8111:20,test,tests,20,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/8111,1,['test'],['tests']
Testability,Changed logging output to stderr,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/4167:8,log,logging,8,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/4167,1,['log'],['logging']
Testability,Changed the build_docker.sh to run git LFS dependent tests,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3323:53,test,tests,53,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3323,1,['test'],['tests']
Testability,"Changed the varargs code, and made a small change to the ProgressLogger implementation to fix another problem I found while testing. Also re-deleted the file you mentioned. Thx for finding those.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/612#issuecomment-127209366:124,test,testing,124,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/612#issuecomment-127209366,1,['test'],['testing']
Testability,Changed to stderr. Waiting for the tests as per good policy.,MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2447#issuecomment-293105632:35,test,tests,35,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2447#issuecomment-293105632,1,['test'],['tests']
Testability,"Changes here look good, let's merge after addressing the failing ADAM tests.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/2247#issuecomment-257998899:70,test,tests,70,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/2247#issuecomment-257998899,1,['test'],['tests']
Testability,"Changes to enable multi-threaded native AVX PairHMM using OpenMP. Also includes a performance improvement in the native C++ `Context` class. `VectorLoglessPairHMM.java` is hardcoded to set the maximum number of PairHMM threads (`maxNumberOfThreads`) to 100. This is the maximum number of threads **allowed** by GATK, not the number of threads **requested**. C code in the native library will query OpenMP for the number of threads available on the platform, and use min(OpenMP threads available, `maxNumberOfThreads`) threads. **Measured Speedup**; Command. ```; ./gatk-launch HaplotypeCaller -R src/test/resources/large/human_g1k_v37.20.21.fasta -I src/test/resources/large/CEUTrio.HiSeq.WGS.b37.NA12878.20.21.bam -O out.g.vcf -ERC GVCF; ```. 1 thread; INFO PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 36.882098080000006; 2 threads; INFO PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 18.160468659000003; 3 threads; INFO PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 12.541517043; 4 threads; INFO PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 9.727374342000001. **Potential issues**; - The target platform running GATK must have OpenMP installed; - The code has not been tested on Mac. **Todo**; - New Java code to allow the user to specify `maxNumberOfThreads` variable in `VectorLoglessPairHMM.java`.; - Move `maxNumberOfThreads` to the native `initialize` function, once we migrate to the new native library.",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/1813:600,test,test,600,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/1813,3,['test'],"['test', 'tested']"
Testability,"Changes to the testing framework to remove references to the test resources, keeping them into the src/test package. This changes include:. * Factor out a `GATKBaseTest` for separate test resources from test utilities in `BaseTest`; * Remove duplicated `CleanSamIntegrationTest`; * Repackage `CommandLineProgramTest` to be in the test sources, and use it's interface in testers; * Move some testers to the src/test package because they are tool-specific (added TODO to other ones that aren't that clear); * Refactor `TargetsToolsTestUtils` to use a provided reference. Closes #3029; Closes #2125",MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/3475:15,test,testing,15,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/3475,9,['test'],"['test', 'testers', 'testing']"
Testability,Changing Funcotator large test boolean back to false where it belongs.,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5521:26,test,test,26,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5521,1,['test'],['test']
Testability,"Changing the exception throwing code won't help with either of those - that code would only execute when the tool is actually run. Currently, the PR is failing to even build on Travis because Travis is killing it during the part of the build where it creates the Docker image on which the tests will run. It appears to be producing so much progress output during the conda environment creation - right when its resolving tensorflow packages - that Travis terminates the whole build. My suggestion above was to see if we can (at least temporarily) get past that so we can see get the build to succeed; see how big the resulting Docker is; and whether the CNNScoreVariants tests pass with the new environment. Then we can figure out if we have any additional issues to resolve.",MatchSource.ISSUE_COMMENT,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430000969:289,test,tests,289,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/pull/5291#issuecomment-430000969,2,['test'],['tests']
Testability,Check in an ADAM Parquet file for testing purposes,MatchSource.ISSUE,broadinstitute,gatk,4.6.0.0,https://github.com/broadinstitute/gatk/issues/896:34,test,testing,34,https://software.broadinstitute.org/gatk,https://github.com/broadinstitute/gatk/issues/896,1,['test'],['testing']
