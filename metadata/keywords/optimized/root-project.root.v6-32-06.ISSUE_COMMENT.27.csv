quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/182542/console).; ### Errors:; - [2023-08-17T12:05:56.971Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1144 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1682167922:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1682167922,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/182807/console).; ### Errors:; - [2023-08-19T15:07:30.280Z] CMake Error at C:/build/workspace/root-pullrequests-build/roottest/root/meta/rootmap/duplicateWarning/CMakeLists.txt:1 (configure_file): ; - [2023-08-19T15:07:30.280Z] CMake Error at C:/build/workspace/root-pullrequests-build/roottest/root/meta/rootmap/duplicateWarning/CMakeLists.txt:2 (configure_file): ; - [2023-08-19T15:07:33.842Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1216 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13478#issuecomment-1685024870:683,message,message,683,https://root.cern,https://github.com/root-project/root/pull/13478#issuecomment-1685024870,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183155/console).; ### Errors:; - [2023-08-24T08:38:22.609Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1144 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13524#issuecomment-1691256712:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13524#issuecomment-1691256712,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183350/console).; ### Errors:; - [2023-08-25T15:35:16.557Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1144 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1693552244:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1693552244,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183470/console).; ### Errors:; - [2023-08-29T12:48:07.876Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1144 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13476#issuecomment-1697379409:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13476#issuecomment-1697379409,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183476/console).; ### Errors:; - [2023-08-29T12:52:23.361Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1144 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13476#issuecomment-1697387473:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13476#issuecomment-1697387473,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183506/console).; ### Errors:; - [2023-08-29T13:30:31.670Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1144 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13476#issuecomment-1697451660:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13476#issuecomment-1697451660,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183626/console).; ### Errors:; - [2023-08-30T12:12:46.395Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1144 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13476#issuecomment-1699049249:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13476#issuecomment-1699049249,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183632/console).; ### Errors:; - [2023-08-30T12:40:27.669Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1144 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13476#issuecomment-1699095108:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13476#issuecomment-1699095108,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183638/console).; ### Errors:; - [2023-08-30T12:42:53.250Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1144 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13476#issuecomment-1699098739:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13476#issuecomment-1699098739,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183644/console).; ### Errors:; - [2023-08-30T12:50:23.979Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1144 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13476#issuecomment-1699109466:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13476#issuecomment-1699109466,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183650/console).; ### Errors:; - [2023-08-30T12:56:02.897Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1144 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13476#issuecomment-1699117767:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13476#issuecomment-1699117767,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183692/console).; ### Errors:; - [2023-08-30T20:33:24.836Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1144 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13476#issuecomment-1699800005:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13476#issuecomment-1699800005,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183741/console).; ### Errors:; - [2023-08-31T12:31:07.738Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1144 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13476#issuecomment-1700947184:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13476#issuecomment-1700947184,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183982/console).; ### Errors:; - [2023-09-04T14:46:33.358Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1147 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13596#issuecomment-1705391748:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13596#issuecomment-1705391748,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184000/console).; ### Errors:; - [2023-09-04T15:28:33.863Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1147 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13596#issuecomment-1705449176:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13596#issuecomment-1705449176,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184069/console).; ### Errors:; - [2023-09-05T09:30:29.289Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1147 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13596#issuecomment-1706269660:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13596#issuecomment-1706269660,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184243/console).; ### Errors:; - [2023-09-06T09:25:01.006Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1147 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13596#issuecomment-1707987152:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13596#issuecomment-1707987152,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184662/console).; ### Errors:; - [2023-09-12T13:38:38.069Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13637#issuecomment-1715745531:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13637#issuecomment-1715745531,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184832/console).; ### Warnings:; - [2023-09-14T12:38:33.261Z] CMake Warning at CMakeLists.txt:235 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1719495030:289,message,message,289,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1719495030,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/185073/console).; ### Errors:; - [2023-09-18T14:04:53.798Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13663#issuecomment-1723496500:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13663#issuecomment-1723496500,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/185223/console).; ### Errors:; - [2023-09-19T11:36:55.499Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13668#issuecomment-1725332245:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13668#issuecomment-1725332245,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/185409/console).; ### Errors:; - [2023-09-20T16:41:04.433Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4685#issuecomment-1728093787:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/4685#issuecomment-1728093787,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/185574/console).; ### Errors:; - [2023-09-22T06:28:59.832Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13592#issuecomment-1730873262:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13592#issuecomment-1730873262,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/185593/console).; ### Errors:; - [2023-09-22T10:46:44.428Z] CMake Error at core/CMakeLists.txt:11: ; - [2023-09-22T10:46:44.428Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1198 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13653#issuecomment-1731208108:417,message,message,417,https://root.cern,https://github.com/root-project/root/pull/13653#issuecomment-1731208108,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/185742/console).; ### Errors:; - [2023-09-26T08:52:53.484Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13715#issuecomment-1735110128:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13715#issuecomment-1735110128,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186206/console).; ### Errors:; - [2023-09-29T12:39:23.967Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13759#issuecomment-1740831229:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13759#issuecomment-1740831229,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186416/console).; ### Errors:; - [2023-10-02T21:03:03.375Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13779#issuecomment-1743761600:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13779#issuecomment-1743761600,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186440/console).; ### Errors:; - [2023-10-03T01:36:30.441Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13780#issuecomment-1744025822:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13780#issuecomment-1744025822,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186542/console).; ### Errors:; - [2023-10-03T14:16:01.471Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13779#issuecomment-1745072308:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13779#issuecomment-1745072308,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186990/console).; ### Errors:; - [2023-10-10T12:37:54.184Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13773#issuecomment-1755323065:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13773#issuecomment-1755323065,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186996/console).; ### Errors:; - [2023-10-10T12:38:08.300Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13728#issuecomment-1755323612:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13728#issuecomment-1755323612,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187177/console).; ### Errors:; - [2023-10-13T16:03:47.628Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13860#issuecomment-1761819503:388,message,message,388,https://root.cern,https://github.com/root-project/root/pull/13860#issuecomment-1761819503,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187419/console).; ### Errors:; - [2023-10-18T09:20:47.833Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13870#issuecomment-1768037531:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13870#issuecomment-1768037531,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187439/console).; ### Errors:; - [2023-10-18T11:00:51.690Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13860#issuecomment-1768283347:388,message,message,388,https://root.cern,https://github.com/root-project/root/pull/13860#issuecomment-1768283347,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/188081/console).; ### Errors:; - [2023-10-25T22:42:13.059Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13940#issuecomment-1780156729:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13940#issuecomment-1780156729,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/188151/console).; ### Errors:; - [2023-10-26T15:14:37.906Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13947#issuecomment-1781330486:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13947#issuecomment-1781330486,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/188202/console).; ### Errors:; - [2023-10-27T10:00:43.229Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13953#issuecomment-1782702949:388,message,message,388,https://root.cern,https://github.com/root-project/root/pull/13953#issuecomment-1782702949,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/188227/console).; ### Errors:; - [2023-10-27T12:48:34.845Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604#issuecomment-1782860948:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13604#issuecomment-1782860948,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/188267/console).; ### Errors:; - [2023-10-27T14:19:31.977Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13960#issuecomment-1782999682:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13960#issuecomment-1782999682,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/188272/console).; ### Errors:; - [2023-10-27T14:20:26.928Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13959#issuecomment-1783001143:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13959#issuecomment-1783001143,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/188557/console).; ### Errors:; - [2023-11-01T15:04:28.692Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13860#issuecomment-1789202618:388,message,message,388,https://root.cern,https://github.com/root-project/root/pull/13860#issuecomment-1789202618,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/188917/console).; ### Errors:; - [2023-11-12T12:51:54.575Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604#issuecomment-1807118636:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13604#issuecomment-1807118636,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189007/console).; ### Errors:; - [2023-11-13T12:24:22.199Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:535 (message): ; - [2023-11-13T12:24:22.455Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1198 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6908#issuecomment-1808068981:314,message,message,314,https://root.cern,https://github.com/root-project/root/pull/6908#issuecomment-1808068981,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189247/console).; ### Warnings:; - [2023-11-14T16:41:29.853Z] CMake Warning at C:/build/workspace/root-pullrequests-build/roottest/CMakeLists.txt:5 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052#issuecomment-1810847365:339,message,message,339,https://root.cern,https://github.com/root-project/root/pull/14052#issuecomment-1810847365,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189332/console).; ### Warnings:; - [2023-11-14T21:51:36.465Z] CMake Warning at C:/build/workspace/root-pullrequests-build/roottest/CMakeLists.txt:5 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052#issuecomment-1811539723:339,message,message,339,https://root.cern,https://github.com/root-project/root/pull/14052#issuecomment-1811539723,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189337/console).; ### Warnings:; - [2023-11-14T23:24:16.470Z] CMake Warning at C:/build/workspace/root-pullrequests-build/roottest/CMakeLists.txt:5 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052#issuecomment-1811621378:339,message,message,339,https://root.cern,https://github.com/root-project/root/pull/14052#issuecomment-1811621378,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189342/console).; ### Warnings:; - [2023-11-15T01:38:17.338Z] CMake Warning at C:/build/workspace/root-pullrequests-build/roottest/CMakeLists.txt:5 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052#issuecomment-1811731690:339,message,message,339,https://root.cern,https://github.com/root-project/root/pull/14052#issuecomment-1811731690,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189417/console).; ### Warnings:; - [2023-11-15T16:47:23.299Z] CMake Warning at C:/build/workspace/root-pullrequests-build/roottest/CMakeLists.txt:5 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052#issuecomment-1813024511:339,message,message,339,https://root.cern,https://github.com/root-project/root/pull/14052#issuecomment-1813024511,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189432/console).; ### Warnings:; - [2023-11-15T19:38:08.370Z] CMake Warning at C:/build/workspace/root-pullrequests-build/roottest/CMakeLists.txt:5 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052#issuecomment-1813260298:339,message,message,339,https://root.cern,https://github.com/root-project/root/pull/14052#issuecomment-1813260298,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189437/console).; ### Warnings:; - [2023-11-15T23:09:00.271Z] CMake Warning at C:/build/workspace/root-pullrequests-build/roottest/CMakeLists.txt:5 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052#issuecomment-1813515512:339,message,message,339,https://root.cern,https://github.com/root-project/root/pull/14052#issuecomment-1813515512,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189467/console).; ### Warnings:; - [2023-11-16T02:49:06.728Z] CMake Warning at C:/build/workspace/root-pullrequests-build/roottest/CMakeLists.txt:5 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052#issuecomment-1813755240:339,message,message,339,https://root.cern,https://github.com/root-project/root/pull/14052#issuecomment-1813755240,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189482/console).; ### Warnings:; - [2023-11-16T13:21:39.261Z] CMake Warning at C:/build/workspace/root-pullrequests-build/roottest/CMakeLists.txt:5 (message): . ### Failing tests:; - [projectroot.roottest.root.meta.roottest_root_meta_loadernotapp_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189482/testReport/projectroot.roottest.root/meta/roottest_root_meta_loadernotapp_build/); - [projectroot.roottest.root.meta.roottest_root_meta_loadernotapp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189482/testReport/projectroot.roottest.root/meta/roottest_root_meta_loadernotapp/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189482/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189482/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.meta.tclass.issue-6840.roottest_root_meta_tclass_issue_6840_emulatePairs_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189482/testReport/projectroot.roottest.root.meta.tclass/issue-6840/roottest_root_meta_tclass_issue_6840_emulatePairs_build/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052#issuecomment-1814590033:339,message,message,339,https://root.cern,https://github.com/root-project/root/pull/14052#issuecomment-1814590033,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189487/console).; ### Errors:; - [2023-11-16T13:24:51.823Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-1814432610:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-1814432610,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189512/console).; ### Warnings:; - [2023-11-16T17:41:48.984Z] CMake Warning at C:/build/workspace/root-pullrequests-build/roottest/CMakeLists.txt:5 (message): . ### Failing tests:; - [projectroot.roottest.root.meta.roottest_root_meta_loadernotapp_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189512/testReport/projectroot.roottest.root/meta/roottest_root_meta_loadernotapp_build/); - [projectroot.roottest.root.meta.roottest_root_meta_loadernotapp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189512/testReport/projectroot.roottest.root/meta/roottest_root_meta_loadernotapp/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052#issuecomment-1815156322:339,message,message,339,https://root.cern,https://github.com/root-project/root/pull/14052#issuecomment-1815156322,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189717/console).; ### Warnings:; - [2023-11-17T02:10:34.943Z] CMake Warning at C:/build/workspace/root-pullrequests-build/roottest/CMakeLists.txt:5 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052#issuecomment-1815697532:339,message,message,339,https://root.cern,https://github.com/root-project/root/pull/14052#issuecomment-1815697532,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/189988/console).; ### Errors:; - [2023-11-22T10:04:45.593Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13860#issuecomment-1822543532:388,message,message,388,https://root.cern,https://github.com/root-project/root/pull/13860#issuecomment-1822543532,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190028/console).; ### Errors:; - [2023-11-23T08:47:51.699Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13860#issuecomment-1824074538:388,message,message,388,https://root.cern,https://github.com/root-project/root/pull/13860#issuecomment-1824074538,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191103/console).; ### Warnings:; - [2023-12-08T23:13:59.684Z] CMake Warning at C:/build/workspace/root-pullrequests-build/roottest/CMakeLists.txt:5 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052#issuecomment-1848006955:339,message,message,339,https://root.cern,https://github.com/root-project/root/pull/14052#issuecomment-1848006955,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191876/console).; ### Errors:; - [2023-12-20T17:34:46.069Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14286#issuecomment-1864873611:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/14286#issuecomment-1864873611,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/192069/console).; ### Errors:; - [2024-01-08T10:30:44.430Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1880739765:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1880739765,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/192458/console).; ### Errors:; - [2024-01-12T12:06:28.859Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13860#issuecomment-1889006759:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/13860#issuecomment-1889006759,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/192549/console).; ### Errors:; - [2024-01-12T18:13:25.113Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1126 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12357#issuecomment-1889747757:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/12357#issuecomment-1889747757,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/193066/console).; ### Errors:; - [2024-01-18T19:40:32.360Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1128 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14387#issuecomment-1899097024:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/14387#issuecomment-1899097024,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/193076/console).; ### Errors:; - [2024-01-18T22:23:43.926Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1128 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14388#issuecomment-1899315716:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/14388#issuecomment-1899315716,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/193086/console).; ### Warnings:; - [2024-01-18T23:08:05.291Z] CMake Warning at C:/build/workspace/root-pullrequests-build/roottest/CMakeLists.txt:5 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052#issuecomment-1899437323:339,message,message,339,https://root.cern,https://github.com/root-project/root/pull/14052#issuecomment-1899437323,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/193136/console).; ### Errors:; - [2024-01-19T13:47:50.164Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1128 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14393#issuecomment-1900456917:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/14393#issuecomment-1900456917,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/193226/console).; ### Errors:; - [2024-01-22T09:49:36.922Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1128 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14282#issuecomment-1903620587:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/14282#issuecomment-1903620587,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/193331/console).; ### Errors:; - [2024-01-23T12:21:33.604Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1128 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14409#issuecomment-1905945833:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/14409#issuecomment-1905945833,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194026/console).; ### Errors:; - [2024-01-29T21:23:01.297Z] CMake Error at tutorials/CMakeLists.txt:477 (message): ; - [2024-01-29T21:23:01.298Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1200 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14481#issuecomment-1915595556:295,message,message,295,https://root.cern,https://github.com/root-project/root/pull/14481#issuecomment-1915595556,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196252/console).; ### Errors:; - [2024-02-21T10:30:17.059Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/RootMacros.cmake:1406 (target_link_libraries): ; - [2024-02-21T10:30:17.059Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1200 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14784#issuecomment-1956346640:489,message,message,489,https://root.cern,https://github.com/root-project/root/pull/14784#issuecomment-1956346640,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196918/console).; ### Errors:; - [2024-02-28T10:24:19.643Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1128 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14846#issuecomment-1968674800:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/14846#issuecomment-1968674800,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196923/console).; ### Errors:; - [2024-02-28T10:42:02.128Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1128 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14846#issuecomment-1968705734:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/14846#issuecomment-1968705734,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196933/console).; ### Errors:; - [2024-02-28T10:48:58.973Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1128 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14846#issuecomment-1968717851:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/14846#issuecomment-1968717851,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/196938/console).; ### Errors:; - [2024-02-28T10:57:18.360Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1128 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14846#issuecomment-1968732616:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/14846#issuecomment-1968732616,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/197800/console).; ### Errors:; - [2024-03-08T08:34:44.889Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1128 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14916#issuecomment-1985267400:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/14916#issuecomment-1985267400,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198262/console).; ### Errors:; - [2024-03-12T13:59:18.704Z] CMake Error at cmake/modules/RootBuildOptions.cmake:408 (message): ; - [2024-03-12T13:59:18.960Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1200 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14942#issuecomment-1991718534:307,message,message,307,https://root.cern,https://github.com/root-project/root/pull/14942#issuecomment-1991718534,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198267/console).; ### Errors:; - [2024-03-12T16:20:09.606Z] CMake Error at cmake/modules/RootBuildOptions.cmake:408 (message): ; - [2024-03-12T16:20:09.606Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1200 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-1992053494:307,message,message,307,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-1992053494,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198272/console).; ### Errors:; - [2024-03-12T16:37:50.227Z] CMake Error at cmake/modules/RootBuildOptions.cmake:408 (message): ; - [2024-03-12T16:37:50.485Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1200 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14944#issuecomment-1992092209:307,message,message,307,https://root.cern,https://github.com/root-project/root/pull/14944#issuecomment-1992092209,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198277/console).; ### Errors:; - [2024-03-12T16:50:31.161Z] CMake Error at cmake/modules/RootBuildOptions.cmake:408 (message): ; - [2024-03-12T16:50:31.161Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1200 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645#issuecomment-1992117284:307,message,message,307,https://root.cern,https://github.com/root-project/root/pull/14645#issuecomment-1992117284,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198282/console).; ### Errors:; - [2024-03-12T16:53:36.395Z] CMake Error at cmake/modules/RootBuildOptions.cmake:408 (message): ; - [2024-03-12T16:53:36.395Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1200 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14822#issuecomment-1992123443:307,message,message,307,https://root.cern,https://github.com/root-project/root/pull/14822#issuecomment-1992123443,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198292/console).; ### Errors:; - [2024-03-12T21:09:31.032Z] CMake Error at cmake/modules/RootBuildOptions.cmake:408 (message): ; - [2024-03-12T21:09:31.032Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1200 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14945#issuecomment-1992593566:307,message,message,307,https://root.cern,https://github.com/root-project/root/pull/14945#issuecomment-1992593566,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198297/console).; ### Errors:; - [2024-03-12T21:15:32.828Z] CMake Error at cmake/modules/RootBuildOptions.cmake:408 (message): ; - [2024-03-12T21:15:32.828Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1200 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14946#issuecomment-1992601155:307,message,message,307,https://root.cern,https://github.com/root-project/root/pull/14946#issuecomment-1992601155,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198302/console).; ### Errors:; - [2024-03-12T21:45:32.533Z] CMake Error at cmake/modules/RootBuildOptions.cmake:408 (message): ; - [2024-03-12T21:45:32.789Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1200 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14947#issuecomment-1992639456:307,message,message,307,https://root.cern,https://github.com/root-project/root/pull/14947#issuecomment-1992639456,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198307/console).; ### Errors:; - [2024-03-12T21:58:48.011Z] CMake Error at cmake/modules/RootBuildOptions.cmake:408 (message): ; - [2024-03-12T21:58:48.267Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1200 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14948#issuecomment-1992655000:307,message,message,307,https://root.cern,https://github.com/root-project/root/pull/14948#issuecomment-1992655000,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198327/console).; ### Errors:; - [2024-03-13T06:55:50.424Z] CMake Error at cmake/modules/RootBuildOptions.cmake:408 (message): ; - [2024-03-13T06:55:50.424Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1200 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14913#issuecomment-1993687751:307,message,message,307,https://root.cern,https://github.com/root-project/root/pull/14913#issuecomment-1993687751,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198332/console).; ### Errors:; - [2024-03-13T07:09:45.483Z] CMake Error at cmake/modules/RootBuildOptions.cmake:408 (message): ; - [2024-03-13T07:09:45.739Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1200 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14913#issuecomment-1993702727:307,message,message,307,https://root.cern,https://github.com/root-project/root/pull/14913#issuecomment-1993702727,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198337/console).; ### Errors:; - [2024-03-13T07:18:41.214Z] CMake Error at cmake/modules/RootBuildOptions.cmake:408 (message): ; - [2024-03-13T07:18:41.214Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1200 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14912#issuecomment-1993712311:307,message,message,307,https://root.cern,https://github.com/root-project/root/pull/14912#issuecomment-1993712311,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198402/console).; ### Errors:; - [2024-03-13T13:13:53.820Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-install-Release.cmake:37 (message): ; - [2024-03-13T13:13:53.820Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-install-Release.cmake:47 (message): ; - [2024-03-13T13:13:54.096Z] CMake Error at src/tbb/cmake_install.cmake:83 (file): ; - [2024-03-13T13:51:53.856Z] LINK : fatal error LNK1104: cannot open file 'C:\build\workspace\root-pullrequests-build\build\bin\libCore.dll' [C:\build\workspace\root-pullrequests-build\build\core\Core.vcxproj],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14955#issuecomment-1994458190:369,message,message,369,https://root.cern,https://github.com/root-project/root/pull/14955#issuecomment-1994458190,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198417/console).; ### Errors:; - [2024-03-13T14:01:19.544Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-install-Release.cmake:37 (message): ; - [2024-03-13T14:01:19.546Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-install-Release.cmake:47 (message): ; - [2024-03-13T14:01:19.546Z] CMake Error at src/tbb/cmake_install.cmake:83 (file): ; - [2024-03-13T14:02:02.594Z] LINK : fatal error LNK1104: cannot open file 'C:\build\workspace\root-pullrequests-build\build\bin\libCore.dll' [C:\build\workspace\root-pullrequests-build\build\core\Core.vcxproj],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14955#issuecomment-1994479879:369,message,message,369,https://root.cern,https://github.com/root-project/root/pull/14955#issuecomment-1994479879,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198432/console).; ### Errors:; - [2024-03-13T14:08:44.180Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-install-Release.cmake:37 (message): ; - [2024-03-13T14:08:44.181Z] CMake Error at src/tbb/cmake_install.cmake:83 (file): ; - [2024-03-13T14:08:44.181Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-install-Release.cmake:47 (message): ; - [2024-03-13T14:09:28.482Z] LINK : fatal error LNK1104: cannot open file 'C:\build\workspace\root-pullrequests-build\build\bin\libCore.dll' [C:\build\workspace\root-pullrequests-build\build\core\Core.vcxproj],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14906#issuecomment-1994495053:369,message,message,369,https://root.cern,https://github.com/root-project/root/pull/14906#issuecomment-1994495053,2,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198964/console).; ### Errors:; - [2024-03-19T14:44:16.756Z] CMake Error at tree/ntuple/v7/test/CMakeLists.txt:49 (configure_file): ; - [2024-03-19T14:44:38.799Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1204 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14728#issuecomment-2007374332:449,message,message,449,https://root.cern,https://github.com/root-project/root/pull/14728#issuecomment-2007374332,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/199225/console).; ### Errors:; - [2024-03-22T16:30:09.548Z] CMake Error at tree/ntuple/v7/test/CMakeLists.txt:49 (configure_file): ; - [2024-03-22T16:30:32.528Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1204 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14728#issuecomment-2015463840:449,message,message,449,https://root.cern,https://github.com/root-project/root/pull/14728#issuecomment-2015463840,1,['message'],['message']
Integrability,Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/199786/console).; ### Errors:; - [2024-04-02T13:44:43.914Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1132 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14728#issuecomment-2032086632:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/14728#issuecomment-2032086632,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53925/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:799 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:785 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1534#issuecomment-464360527:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/1534#issuecomment-464360527,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53931/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:799 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:785 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1534#issuecomment-464472718:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/1534#issuecomment-464472718,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54093/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:767 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-465307820:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-465307820,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54285/console).; ### Errors:; - CMake Error at cmake/modules/CheckCompiler.cmake:122 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:828 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3466#issuecomment-467346886:201,message,message,201,https://root.cern,https://github.com/root-project/root/pull/3466#issuecomment-467346886,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54369/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build_2/rootspi/jenkins/root-build.cmake:767 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3471#issuecomment-467467063:288,message,message,288,https://root.cern,https://github.com/root-project/root/pull/3471#issuecomment-467467063,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54671/console).; ### Warnings:; - CMake Warning at interpreter/llvm/src/CMakeLists.txt:48 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3496#issuecomment-468807132:206,message,message,206,https://root.cern,https://github.com/root-project/root/pull/3496#issuecomment-468807132,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54857/console).; ### Warnings:; - CMake Warning at interpreter/llvm/src/CMakeLists.txt:48 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3496#issuecomment-470376943:206,message,message,206,https://root.cern,https://github.com/root-project/root/pull/3496#issuecomment-470376943,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54893/console).; ### Warnings:; - CMake Warning at interpreter/llvm/src/CMakeLists.txt:56 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3509#issuecomment-470487963:206,message,message,206,https://root.cern,https://github.com/root-project/root/pull/3509#issuecomment-470487963,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55007/console).; ### Warnings:; - CMake Warning at interpreter/llvm/src/CMakeLists.txt:48 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3496#issuecomment-471004326:206,message,message,206,https://root.cern,https://github.com/root-project/root/pull/3496#issuecomment-471004326,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55062/console).; ### Warnings:; - CMake Warning at interpreter/llvm/src/CMakeLists.txt:48 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3523#issuecomment-471631385:206,message,message,206,https://root.cern,https://github.com/root-project/root/pull/3523#issuecomment-471631385,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55074/console).; ### Warnings:; - CMake Warning at interpreter/llvm/src/CMakeLists.txt:48 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3523#issuecomment-471671898:206,message,message,206,https://root.cern,https://github.com/root-project/root/pull/3523#issuecomment-471671898,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55261/console).; ### Errors:; - CMake Error at cmake/modules/RootNewMacros.cmake:248 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:828 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3537#issuecomment-472538811:201,message,message,201,https://root.cern,https://github.com/root-project/root/pull/3537#issuecomment-472538811,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55298/console).; ### Errors:; - CMake Error at cmake/modules/RootNewMacros.cmake:252 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:828 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3537#issuecomment-472811813:201,message,message,201,https://root.cern,https://github.com/root-project/root/pull/3537#issuecomment-472811813,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55371/console).; ### Warnings:; - CMake Warning at interpreter/llvm/src/CMakeLists.txt:48 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3547#issuecomment-473321770:206,message,message,206,https://root.cern,https://github.com/root-project/root/pull/3547#issuecomment-473321770,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55391/console).; ### Errors:; - CMake Error at interpreter/cling/tools/plugins/example/CMakeLists.txt:10 (add_dependencies): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:828 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3550#issuecomment-473594461:340,message,message,340,https://root.cern,https://github.com/root-project/root/pull/3550#issuecomment-473594461,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55538/console).; ### Warnings:; - CMake Warning at interpreter/llvm/src/CMakeLists.txt:48 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3547#issuecomment-474572445:206,message,message,206,https://root.cern,https://github.com/root-project/root/pull/3547#issuecomment-474572445,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55700/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:828 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3579#issuecomment-475325632:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/3579#issuecomment-475325632,1,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55730/console).; ### Errors:; - CMake Error at TBB-stamp/TBB-download-Release.cmake:16 (message): ; - CMake Error at PCRE-stamp/PCRE-download-Release.cmake:16 (message): ; - 0&gt;MSBUILD : error MSB4166: Child node ""15"" exited prematurely. Shutting down. Diagnostic information may be found in files in ""C:\Users\sftnight\AppData\Local\Temp\"" and will be named MSBuild_*.failure.txt. This location can be changed by setting the MSBUILDDEBUGPATH environment variable to a different directory. ; - MSBUILD : error MSB4166: Child node ""15"" exited prematurely. Shutting down. Diagnostic information may be found in files in ""C:\Users\sftnight\AppData\Local\Temp\"" and will be named MSBuild_*.failure.txt. This location can be changed by setting the MSBUILDDEBUGPATH environment variable to a different directory. . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:785 (message):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3574#issuecomment-475551607:203,message,message,203,https://root.cern,https://github.com/root-project/root/pull/3574#issuecomment-475551607,3,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55742/console).; ### Errors:; - 0&gt;MSBUILD : error MSB4166: Child node ""13"" exited prematurely. Shutting down. Diagnostic information may be found in files in ""C:\Users\sftnight\AppData\Local\Temp\"" and will be named MSBuild_*.failure.txt. This location can be changed by setting the MSBUILDDEBUGPATH environment variable to a different directory. ; - CMake Error at C:/build/workspace/root-pullrequests-build/build/builtins/pcre/PCRE-prefix/src/PCRE-stamp/PCRE-configure-Release.cmake:16 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:16 (message): ; - 0&gt;MSBUILD : error MSB4166: Child node ""8"" exited prematurely. Shutting down. Diagnostic information may be found in files in ""C:\Users\sftnight\AppData\Local\Temp\"" and will be named MSBuild_*.failure.txt. This location can be changed by setting the MSBUILDDEBUGPATH environment variable to a different directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3581#issuecomment-475599045:607,message,message,607,https://root.cern,https://github.com/root-project/root/pull/3581#issuecomment-475599045,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56013/console).; ### Warnings:; - CMake Warning at interpreter/llvm/src/CMakeLists.txt:48 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3610#issuecomment-477194251:206,message,message,206,https://root.cern,https://github.com/root-project/root/pull/3610#issuecomment-477194251,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56241/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:774 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3627#issuecomment-478963553:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/3627#issuecomment-478963553,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56358/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:792 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3621#issuecomment-479147783:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/3621#issuecomment-479147783,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56392/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:792 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3621#issuecomment-479220668:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/3621#issuecomment-479220668,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56480/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build_2/rootspi/jenkins/root-build.cmake:792 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3633#issuecomment-479480339:249,message,message,249,https://root.cern,https://github.com/root-project/root/pull/3633#issuecomment-479480339,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57898/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:801 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2917#issuecomment-485822327:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/2917#issuecomment-485822327,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57934/console).; ### Warnings:; - CMake Warning at interpreter/llvm/src/CMakeLists.txt:48 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3728#issuecomment-486149543:206,message,message,206,https://root.cern,https://github.com/root-project/root/pull/3728#issuecomment-486149543,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58076/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:801 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2917#issuecomment-486790723:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/2917#issuecomment-486790723,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58163/console).; ### Warnings:; - CMake Warning at interpreter/llvm/src/CMakeLists.txt:48 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3728#issuecomment-487201388:206,message,message,206,https://root.cern,https://github.com/root-project/root/pull/3728#issuecomment-487201388,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58307/console).; ### Errors:; - ERROR: Timeout after 10 minutes . ### Warnings:; - CMake Warning at interpreter/llvm/src/CMakeLists.txt:56 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3726#issuecomment-487540885:255,message,message,255,https://root.cern,https://github.com/root-project/root/pull/3726#issuecomment-487540885,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58821/console).; ### Errors:; - ninja: error: unknown target '/maxcpucount' . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:801 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3763#issuecomment-489992381:308,message,message,308,https://root.cern,https://github.com/root-project/root/pull/3763#issuecomment-489992381,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58833/console).; ### Errors:; - CMake Error at C:/Program Files/CMake/share/cmake-3.14/Modules/ExternalProject.cmake:2220 (add_custom_command): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:844 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3777#issuecomment-489998441:359,message,message,359,https://root.cern,https://github.com/root-project/root/pull/3777#issuecomment-489998441,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58845/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/build/googletest-prefix/src/googletest-stamp/googletest-build-Release.cmake:49 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3779#issuecomment-490010864:285,message,message,285,https://root.cern,https://github.com/root-project/root/pull/3779#issuecomment-490010864,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58871/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/build/googletest-prefix/src/googletest-stamp/googletest-build-Release.cmake:49 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3782#issuecomment-490026840:285,message,message,285,https://root.cern,https://github.com/root-project/root/pull/3782#issuecomment-490026840,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58873/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/build/googletest-prefix/src/googletest-stamp/googletest-build-Release.cmake:49 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3779#issuecomment-490053576:285,message,message,285,https://root.cern,https://github.com/root-project/root/pull/3779#issuecomment-490053576,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59493/console).; ### Errors:; - CMake Error at cmake/modules/RootBuildOptions.cmake:337 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:849 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3831#issuecomment-493466175:204,message,message,204,https://root.cern,https://github.com/root-project/root/pull/3831#issuecomment-493466175,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59499/console).; ### Errors:; - CMake Error at cmake/modules/RootBuildOptions.cmake:337 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:849 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3831#issuecomment-493468611:204,message,message,204,https://root.cern,https://github.com/root-project/root/pull/3831#issuecomment-493468611,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59505/console).; ### Errors:; - CMake Error at cmake/modules/RootBuildOptions.cmake:337 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:849 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3831#issuecomment-493470924:204,message,message,204,https://root.cern,https://github.com/root-project/root/pull/3831#issuecomment-493470924,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59703/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:789 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3798#issuecomment-495120761:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/3798#issuecomment-495120761,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59860/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:789 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3857#issuecomment-495509310:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/3857#issuecomment-495509310,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59902/console).; ### Errors:; - ghprbCommentBody=Build failed on ROOT-fedora29/python3.\n[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59857/console).\n### Errors:\n- CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:789 (message): \n\n,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3857#issuecomment-495560784:413,message,message,413,https://root.cern,https://github.com/root-project/root/pull/3857#issuecomment-495560784,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/60052/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:789 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3823#issuecomment-496168991:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/3823#issuecomment-496168991,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/60126/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:807 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3875#issuecomment-496493227:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/3875#issuecomment-496493227,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/60284/console).; ### Errors:; - CMake Error at cmake/modules/RootBuildOptions.cmake:339 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:850 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3886#issuecomment-497018159:204,message,message,204,https://root.cern,https://github.com/root-project/root/pull/3886#issuecomment-497018159,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/60847/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-configure-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3896#issuecomment-499775769:268,message,message,268,https://root.cern,https://github.com/root-project/root/pull/3896#issuecomment-499775769,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/60938/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:812 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3930#issuecomment-500028132:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/3930#issuecomment-500028132,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/60944/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:812 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3931#issuecomment-500027949:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/3931#issuecomment-500027949,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61340/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build_2/rootspi/jenkins/root-build.cmake:812 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3963#issuecomment-502192628:245,message,message,245,https://root.cern,https://github.com/root-project/root/pull/3963#issuecomment-502192628,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61376/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:830 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3964#issuecomment-502234104:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/3964#issuecomment-502234104,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61536/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:830 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3964#issuecomment-502822775:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/3964#issuecomment-502822775,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61548/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:830 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3964#issuecomment-502892571:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/3964#issuecomment-502892571,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61554/console).; ### Errors:; - CMake Error at tutorials/CMakeLists.txt:529: ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:879 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3974#issuecomment-502993576:292,message,message,292,https://root.cern,https://github.com/root-project/root/pull/3974#issuecomment-502993576,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61590/console).; ### Errors:; - CMake Error at C:/Program Files/CMake/share/cmake-3.14/Modules/FindPackageHandleStandardArgs.cmake:137 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build_2/rootspi/jenkins/root-build.cmake:879 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3975#issuecomment-503040682:251,message,message,251,https://root.cern,https://github.com/root-project/root/pull/3975#issuecomment-503040682,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61626/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:836 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3964#issuecomment-503227150:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/3964#issuecomment-503227150,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61632/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:836 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3964#issuecomment-503246248:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/3964#issuecomment-503246248,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61722/console).; ### Errors:; - CMake Error at C:/Program Files/CMake/share/cmake-3.14/Modules/FindPackageHandleStandardArgs.cmake:137 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:918 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3975#issuecomment-503432242:251,message,message,251,https://root.cern,https://github.com/root-project/root/pull/3975#issuecomment-503432242,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61902/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/build/ZSTD-prefix/src/ZSTD-stamp/ZSTD-configure-Release.cmake:49 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:879 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3947#issuecomment-504291895:271,message,message,271,https://root.cern,https://github.com/root-project/root/pull/3947#issuecomment-504291895,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62127/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:879 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3850#issuecomment-506255163:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/3850#issuecomment-506255163,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62576/console).; ### Errors:; - CMake Error at cmake/modules/RootBuildOptions.cmake:344 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:922 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4041#issuecomment-508501564:204,message,message,204,https://root.cern,https://github.com/root-project/root/pull/4041#issuecomment-508501564,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62588/console).; ### Errors:; - CMake Error at cmake/modules/RootBuildOptions.cmake:344 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:922 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4041#issuecomment-508505729:204,message,message,204,https://root.cern,https://github.com/root-project/root/pull/4041#issuecomment-508505729,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62650/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:861 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4041#issuecomment-508708487:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4041#issuecomment-508708487,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/63236/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build_2/rootspi/jenkins/root-build.cmake:861 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4082#issuecomment-510834258:288,message,message,288,https://root.cern,https://github.com/root-project/root/pull/4082#issuecomment-510834258,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/63368/console).; ### Errors:; - CMake Error at cmake/modules/SearchInstalledSoftware.cmake:670 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:907 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4070#issuecomment-511396985:211,message,message,211,https://root.cern,https://github.com/root-project/root/pull/4070#issuecomment-511396985,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/63452/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4005#issuecomment-512008670:264,message,message,264,https://root.cern,https://github.com/root-project/root/pull/4005#issuecomment-512008670,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/63524/console).; ### Errors:; - CMake Error at cmake/modules/FindSQLite3.cmake:51 (include): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:906 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4097#issuecomment-512338682:308,message,message,308,https://root.cern,https://github.com/root-project/root/pull/4097#issuecomment-512338682,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/63542/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:906 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-512508014:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-512508014,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/63566/console).; ### Errors:; - CMake Error at TBB-stamp/TBB-download-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4005#issuecomment-512769115:203,message,message,203,https://root.cern,https://github.com/root-project/root/pull/4005#issuecomment-512769115,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/63578/console).; ### Errors:; - CMake Error at TBB-stamp/TBB-download-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4097#issuecomment-512772005:203,message,message,203,https://root.cern,https://github.com/root-project/root/pull/4097#issuecomment-512772005,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/63668/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:845 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3913#issuecomment-513709638:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/3913#issuecomment-513709638,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/63674/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:845 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3913#issuecomment-513711494:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/3913#issuecomment-513711494,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/63794/console).; ### Errors:; - CMake Error at cmake/modules/RootMacros.cmake:324 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:906 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4108#issuecomment-514265002:198,message,message,198,https://root.cern,https://github.com/root-project/root/pull/4108#issuecomment-514265002,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/63812/console).; ### Errors:; - CMake Error at cmake/modules/RootMacros.cmake:534 (add_dependencies): ; - CMake Error at cmake/modules/RootMacros.cmake:534 (add_dependencies): ; - CMake Error at cmake/modules/RootMacros.cmake:534 (add_dependencies): ; - CMake Error at cmake/modules/RootMacros.cmake:534 (add_dependencies): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:906 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4108#issuecomment-514618865:539,message,message,539,https://root.cern,https://github.com/root-project/root/pull/4108#issuecomment-514618865,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64100/console).; ### Errors:; - ERROR: Timeout after 10 minutes ; - ERROR: Error fetching remote repo 'origin' ; - ERROR: Error fetching remote repo 'origin' ; - CMake Error at C:/build/workspace/root-pullrequests-build_2/rootspi/jenkins/root-build.cmake:845 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4128#issuecomment-515975035:375,message,message,375,https://root.cern,https://github.com/root-project/root/pull/4128#issuecomment-515975035,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64280/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build_2/rootspi/jenkins/root-build.cmake:906 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-517698554:245,message,message,245,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-517698554,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64414/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:845 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4134#issuecomment-518630156:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/4134#issuecomment-518630156,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64438/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:845 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4134#issuecomment-518658083:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/4134#issuecomment-518658083,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64444/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:845 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4134#issuecomment-518965306:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/4134#issuecomment-518965306,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64450/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:845 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4134#issuecomment-518968765:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/4134#issuecomment-518968765,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64522/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:845 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4165#issuecomment-519556829:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/4165#issuecomment-519556829,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64792/console).; ### Errors:; - CMake Error at googletest-stamp/googletest-download-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4187#issuecomment-520723704:217,message,message,217,https://root.cern,https://github.com/root-project/root/pull/4187#issuecomment-520723704,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64853/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:877 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:863 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4191#issuecomment-520819032:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4191#issuecomment-520819032,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65051/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:845 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4201#issuecomment-521230916:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4201#issuecomment-521230916,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65362/console).; ### Errors:; - error: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/logs/HEAD.lock': File exists. ; - error: cannot lock ref 'refs/remotes/origin/pr/3957/head': Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/refs/remotes/origin/pr/3957/head.lock': File exists. ; - error: failed to run reflog ; - error: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/logs/HEAD.lock': File exists. ; - error: cannot lock ref 'refs/remotes/origin/pr/3957/head': Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/refs/remotes/origin/pr/3957/head.lock': File exists. ; - error: cannot lock ref 'refs/remotes/origin/pr/4056/head': Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/refs/remotes/origin/pr/4056/head.lock': File exists. ; - error: failed to run reflog ; - CMake Error at C:/build/workspace/root-pullrequests-build_2/rootspi/jenkins/root-build.cmake:846 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4126#issuecomment-522079254:1104,message,message,1104,https://root.cern,https://github.com/root-project/root/pull/4126#issuecomment-522079254,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65464/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:846 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4237#issuecomment-522541763:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4237#issuecomment-522541763,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65499/console).; ### Errors:; - CMake Error at clad-stamp/clad-download-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4240#issuecomment-522703769:205,message,message,205,https://root.cern,https://github.com/root-project/root/pull/4240#issuecomment-522703769,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65625/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4250#issuecomment-523406685:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/4250#issuecomment-523406685,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65763/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:846 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3030#issuecomment-523946594:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/3030#issuecomment-523946594,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66139/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:846 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4278#issuecomment-524881679:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/4278#issuecomment-524881679,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66265/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:846 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4286#issuecomment-525218328:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4286#issuecomment-525218328,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66301/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:846 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4290#issuecomment-525318221:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4290#issuecomment-525318221,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66367/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-525438980:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-525438980,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66735/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:846 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4319#issuecomment-526620458:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4319#issuecomment-526620458,1,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66741/console).; ### Errors:; - C:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\RooAbsPdf.cxx(190): fatal error C1083: Cannot open include file: 'vdt/log.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message): ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolSerializer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolRecordMapping.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-526643482:526,message,message,526,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-526643482,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66789/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:846 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4321#issuecomment-526708170:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4321#issuecomment-526708170,1,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66807/console).; ### Errors:; - C:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\RooAbsPdf.cxx(190): fatal error C1083: Cannot open include file: 'vdt/log.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message): ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolRecordMapping.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolSerializer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-526742943:526,message,message,526,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-526742943,1,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66856/console).; ### Errors:; - ghprbCommentBody=Build failed on windows10/default.\n[See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66789/console).\n### Errors:\n- CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:846 (message): \n\n . ### Warnings:; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolSerializer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolDumper.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolDumper.cpp(62): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member functio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4321#issuecomment-526836433:407,message,message,407,https://root.cern,https://github.com/root-project/root/pull/4321#issuecomment-526836433,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66886/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4325#issuecomment-527051985:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/4325#issuecomment-527051985,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66958/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:846 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4329#issuecomment-527365791:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4329#issuecomment-527365791,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67175/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:879 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:865 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-528283791:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-528283791,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67199/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/rootCommon.cmake:230 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4346#issuecomment-528396505:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4346#issuecomment-528396505,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67248/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:885 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:868 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-528444430:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-528444430,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67486/console).; ### Errors:; - CMake Error at cmake/modules/CheckCompiler.cmake:123 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:917 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4363#issuecomment-529428867:201,message,message,201,https://root.cern,https://github.com/root-project/root/pull/4363#issuecomment-529428867,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67740/console).; ### Errors:; - CMake Error at cmake/modules/FindZSTD.cmake:63 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:919 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-530741384:195,message,message,195,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-530741384,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67746/console).; ### Errors:; - CMake Error at cmake/modules/FindZSTD.cmake:63 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:919 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-530762535:195,message,message,195,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-530762535,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67833/console).; ### Errors:; - CMake Error at cmake/modules/FindZSTD.cmake:63 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:917 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-531751920:195,message,message,195,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-531751920,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67839/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:917 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-531753972:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-531753972,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67851/console).; ### Errors:; - CMake Error at C:/Program Files/CMake/share/cmake-3.14/Modules/FindPackageHandleStandardArgs.cmake:137 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:917 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-531766624:251,message,message,251,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-531766624,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67997/console).; ### Errors:; - CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1471 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:915 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:866 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4375#issuecomment-532314115:212,message,message,212,https://root.cern,https://github.com/root-project/root/pull/4375#issuecomment-532314115,3,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68072/console).; ### Errors:; - CMake Error at builtins/glew/CMakeLists.txt:50 (target_compile_definitions): ; - CMake Error at builtins/glew/CMakeLists.txt:51 (target_link_libraries): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:915 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-532747421:400,message,message,400,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-532747421,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68724/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:853 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4445#issuecomment-536145405:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4445#issuecomment-536145405,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68856/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:853 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4453#issuecomment-536905603:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4453#issuecomment-536905603,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/69151/console).; ### Errors:; - CMake Error at bindings/pyroot/CMakeLists.txt:79 (if): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:921 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4479#issuecomment-538359508:302,message,message,302,https://root.cern,https://github.com/root-project/root/pull/4479#issuecomment-538359508,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/69427/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:889 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:872 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4502#issuecomment-539901857:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/4502#issuecomment-539901857,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/69451/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:872 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-539950170:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-539950170,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/69457/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:872 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4502#issuecomment-539969619:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/4502#issuecomment-539969619,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/69469/console).; ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:872 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4502#issuecomment-540031636:247,message,message,247,https://root.cern,https://github.com/root-project/root/pull/4502#issuecomment-540031636,1,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/69688/console).; ### Errors:; - C:\build\workspace\root-pullrequests-build\root\bindings\pyroot_experimental\PyROOT\ROOT\src\TTreePyz.cxx(93,61): error C2664: 'CPyCppyy::Converter *CPyCppyy::CreateConverter(const std::string &,dims_t)': cannot convert argument 2 from 'long [2]' to 'dims_t' [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot_experimental\PyROOT\ROOT\ROOTPython.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:872 (message):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-540699486:634,message,message,634,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-540699486,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/69746/console).; ### Errors:; - CMake Error at cmake/modules/RootBuildOptions.cmake:357 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:921 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4523#issuecomment-540767416:204,message,message,204,https://root.cern,https://github.com/root-project/root/pull/4523#issuecomment-540767416,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/69787/console).; ### Errors:; - CMake Error at cmake/modules/RootBuildOptions.cmake:357 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:921 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4523#issuecomment-540935888:204,message,message,204,https://root.cern,https://github.com/root-project/root/pull/4523#issuecomment-540935888,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/69823/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:853 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4528#issuecomment-541018307:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4528#issuecomment-541018307,1,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/69925/console).; ### Errors:; - C:\build\workspace\root-pullrequests-build\root\bindings\pyroot_experimental\PyROOT\ROOT\src\TTreePyz.cxx(93,61): error C2664: 'CPyCppyy::Converter *CPyCppyy::CreateConverter(const std::string &,dims_t)': cannot convert argument 2 from 'long [2]' to 'dims_t' [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot_experimental\PyROOT\ROOT\ROOTPython.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:872 (message):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-541116739:634,message,message,634,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-541116739,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/69961/console).; ### Errors:; - CMake Error at C:/Program Files/CMake/share/cmake-3.14/Modules/FindPackageHandleStandardArgs.cmake:137 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:921 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-541271385:251,message,message,251,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-541271385,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/69973/console).; ### Errors:; - CMake Error at cmake/modules/RootMacros.cmake:333 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:921 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4536#issuecomment-541335907:198,message,message,198,https://root.cern,https://github.com/root-project/root/pull/4536#issuecomment-541335907,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70069/console).; ### Errors:; - CMake Error at cmake/modules/RootMacros.cmake:333 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:921 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4536#issuecomment-541456666:198,message,message,198,https://root.cern,https://github.com/root-project/root/pull/4536#issuecomment-541456666,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70129/console).; ### Errors:; - CMake Error at C:/Program Files/CMake/share/cmake-3.14/Modules/FindPackageHandleStandardArgs.cmake:137 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:921 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-541610025:251,message,message,251,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-541610025,2,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70300/console).; ### Errors:; - C:\build\workspace\root-pullrequests-build\root\core\foundation\src\FoundationUtils.cxx(101,10): error C2664: 'DWORD GetModuleFileNameW(HMODULE,LPWSTR,DWORD)': cannot convert argument 2 from 'char [260]' to 'LPWSTR' [C:\build\workspace\root-pullrequests-build\build\core\foundation\Foundation_Stage1.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\core\foundation\src\FoundationUtils.cxx(105,37): error C3861: 'DirName': identifier not found [C:\build\workspace\root-pullrequests-build\build\core\foundation\Foundation_Stage1.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\core\foundation\src\FoundationUtils.cxx(105,29): error C3861: 'DirName': identifier not found [C:\build\workspace\root-pullrequests-build\build\core\foundation\Foundation_Stage1.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\core\foundation\src\FoundationUtils.cxx(105,37): error C3861: 'DirName': identifier not found [C:\build\workspace\root-pullrequests-build\build\core\foundation\Foundation.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\core\foundation\src\FoundationUtils.cxx(105,29): error C3861: 'DirName': identifier not found [C:\build\workspace\root-pullrequests-build\build\core\foundation\Foundation.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\core\foundation\src\FoundationUtils.cxx(106,14): error C3861: 'StrDup': identifier not found [C:\build\workspace\root-pullrequests-build\build\core\foundation\Foundation_Stage1.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\core\foundation\src\FoundationUtils.cxx(106,14): error C3861: 'StrDup': identifier not found [C:\build\workspace\root-pullrequests-build\build\core\foundation\Foundation.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:874 (message):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4553#issuecomment-542648300:1984,message,message,1984,https://root.cern,https://github.com/root-project/root/pull/4553#issuecomment-542648300,1,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70312/console).; ### Errors:; - C:\build\workspace\root-pullrequests-build\root\core\foundation\src\FoundationUtils.cxx(108,55): error C2664: 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt; ROOT::FoundationUtils::GetFallbackRootSys::&lt;lambda_9fb16fa0be1be96d912f398ac18f6254&gt;::operator ()(std::string &) const': cannot convert argument 1 from 'char [260]' to 'std::string &' [C:\build\workspace\root-pullrequests-build\build\core\foundation\Foundation.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\core\foundation\src\FoundationUtils.cxx(108,55): error C2664: 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt; ROOT::FoundationUtils::GetFallbackRootSys::&lt;lambda_9fb16fa0be1be96d912f398ac18f6254&gt;::operator ()(std::string &) const': cannot convert argument 1 from 'char [260]' to 'std::string &' [C:\build\workspace\root-pullrequests-build\build\core\foundation\Foundation_Stage1.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\core\foundation\src\FoundationUtils.cxx(108,14): error C3861: 'StrDup': identifier not found [C:\build\workspace\root-pullrequests-build\build\core\foundation\Foundation.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\core\foundation\src\FoundationUtils.cxx(108,14): error C3861: 'StrDup': identifier not found [C:\build\workspace\root-pullrequests-build\build\core\foundation\Foundation_Stage1.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:874 (message):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4553#issuecomment-542671425:1690,message,message,1690,https://root.cern,https://github.com/root-project/root/pull/4553#issuecomment-542671425,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70606/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:936 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4566#issuecomment-544948336:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/4566#issuecomment-544948336,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70618/console).; ### Errors:; - CMake Error at C:/Program Files/CMake/share/cmake-3.14/Modules/FindPackageHandleStandardArgs.cmake:137 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:936 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4566#issuecomment-544966571:251,message,message,251,https://root.cern,https://github.com/root-project/root/pull/4566#issuecomment-544966571,2,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70672/console).; ### Errors:; - CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1499 (message): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:936 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:887 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4375#issuecomment-545065831:212,message,message,212,https://root.cern,https://github.com/root-project/root/pull/4375#issuecomment-545065831,3,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70695/console).; ### Errors:; - C:\build\workspace\root-pullrequests-build\root\bindings\pyroot_experimental\PyROOT\ROOT\src\TTreePyz.cxx(93,61): error C2664: 'CPyCppyy::Converter *CPyCppyy::CreateConverter(const std::string &,dims_t)': cannot convert argument 2 from 'long [2]' to 'dims_t' [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot_experimental\PyROOT\ROOT\ROOTPython.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:887 (message):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-545201513:634,message,message,634,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-545201513,1,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70719/console).; ### Errors:; - C:\build\workspace\root-pullrequests-build\root\bindings\pyroot_experimental\PyROOT\ROOT\src\TTreePyz.cxx(93,61): error C2664: 'CPyCppyy::Converter *CPyCppyy::CreateConverter(const std::string &,dims_t)': cannot convert argument 2 from 'long [2]' to 'dims_t' [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot_experimental\PyROOT\ROOT\ROOTPython.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:887 (message):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-545309663:634,message,message,634,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-545309663,1,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70731/console).; ### Errors:; - C:\build\workspace\root-pullrequests-build\root\bindings\pyroot_experimental\PyROOT\ROOT\src\TTreePyz.cxx(93,61): error C2664: 'CPyCppyy::Converter *CPyCppyy::CreateConverter(const std::string &,dims_t)': cannot convert argument 2 from 'long [2]' to 'dims_t' [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot_experimental\PyROOT\ROOT\ROOTPython.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:887 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:31 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:125 (message):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-545468698:634,message,message,634,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-545468698,3,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70800/console).; ### Errors:; - CMake Error at interpreter/CMakeLists.txt:159 (string): ; - CMake Error at C:/build/workspace/root-pullrequests-build/roottest/cmake/modules/RoottestMacros.cmake:400 (CMAKE_PARSE_ARGUMENTS): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4576#issuecomment-545873415:438,message,message,438,https://root.cern,https://github.com/root-project/root/pull/4576#issuecomment-545873415,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70820/console).; ### Errors:; - CMake Error at interpreter/CMakeLists.txt:159 (string): ; - CMake Error at C:/build/workspace/root-pullrequests-build/roottest/cmake/modules/RoottestMacros.cmake:400 (CMAKE_PARSE_ARGUMENTS): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4576#issuecomment-545908378:438,message,message,438,https://root.cern,https://github.com/root-project/root/pull/4576#issuecomment-545908378,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70838/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:873 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4578#issuecomment-545948376:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/4578#issuecomment-545948376,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70850/console).; ### Errors:; - CMake Error at interpreter/CMakeLists.txt:159 (string): ; - CMake Error at C:/build/workspace/root-pullrequests-build/roottest/cmake/modules/RoottestMacros.cmake:400 (CMAKE_PARSE_ARGUMENTS): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4576#issuecomment-545972720:438,message,message,438,https://root.cern,https://github.com/root-project/root/pull/4576#issuecomment-545972720,1,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70891/console).; ### Errors:; - error: Failed to merge in the changes. ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:873 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-546325080:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-546325080,1,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70927/console).; ### Errors:; - C:\build\workspace\root-pullrequests-build\root\bindings\pyroot_experimental\PyROOT\ROOT\src\TTreePyz.cxx(93,61): error C2664: 'CPyCppyy::Converter *CPyCppyy::CreateConverter(const std::string &,dims_t)': cannot convert argument 2 from 'long [2]' to 'dims_t' [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot_experimental\PyROOT\ROOT\ROOTPython.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:31 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:125 (message):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546609466:634,message,message,634,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546609466,3,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70933/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/roottest/cmake/modules/RoottestMacros.cmake:400 (CMAKE_PARSE_ARGUMENTS): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:31 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:125 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546613683:378,message,message,378,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546613683,4,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70951/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/roottest/cmake/modules/RoottestMacros.cmake:400 (CMAKE_PARSE_ARGUMENTS): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:31 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:125 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546694230:378,message,message,378,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546694230,4,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70963/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/roottest/cmake/modules/RoottestMacros.cmake:400 (CMAKE_PARSE_ARGUMENTS): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:31 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:125 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546705091:378,message,message,378,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546705091,4,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70969/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/roottest/cmake/modules/RoottestMacros.cmake:400 (CMAKE_PARSE_ARGUMENTS): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:31 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:130 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546713460:378,message,message,378,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546713460,4,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70975/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/roottest/cmake/modules/RoottestMacros.cmake:400 (CMAKE_PARSE_ARGUMENTS): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:36 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:130 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546715109:378,message,message,378,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546715109,4,['message'],['message']
Integrability,Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70981/console).; ### Errors:; - CMake Error at C:/build/workspace/root-pullrequests-build/roottest/cmake/modules/RoottestMacros.cmake:400 (CMAKE_PARSE_ARGUMENTS): ; - CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message): . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:36 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:130 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546723680:378,message,message,378,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546723680,4,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71059/console).; ### Errors:; - C:\build\workspace\root-pullrequests-build\root\bindings\pyroot_experimental\PyROOT\ROOT\src\TTreePyz.cxx(93,61): error C2664: 'CPyCppyy::Converter *CPyCppyy::CreateConverter(const std::string &,dims_t)': cannot convert argument 2 from 'long [2]' to 'dims_t' [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot_experimental\PyROOT\ROOT\ROOTPython.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:36 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:130 (message):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547073630:634,message,message,634,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547073630,3,['message'],['message']
Integrability,"Build failed on windows10/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71203/console).; AXEL DEBUG: logParserAction errors=1, warnings=1; ### Errors:; - C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Utils\PlatformWin.cpp(385,1): fatal error C1189: #error: ""Unsupported/Untested _MSC_VER"" [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Utils\obj.clingUtils.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4592#issuecomment-547397186:590,message,message,590,https://root.cern,https://github.com/root-project/root/pull/4592#issuecomment-547397186,1,['message'],['message']
Integrability,"Building the Windows version:; ```; Creating directories for 'TBB'; Building Custom Rule E:/Programs/github_repositories/normal/root/CMakeLists.txt; Performing download step (download, verify and extract) for 'TBB'; -- TBB download command succeeded. See also E:/Programs/github_repositories/normal/root/build_windows/TBB-prefix/src/TBB-stamp/T; BB-download-*.log; No update step for 'TBB'; No patch step for 'TBB'; Performing configure step for 'TBB'; CMake Error at E:/Programs/github_repositories/normal/root/build_windows/TBB-prefix/src/TBB-stamp/TBB-configure-Release.cmake:49; (message):; Command failed: 1. 'devenv.exe' '/useenv' '/upgrade' 'build/vs2013/makefile.sln'. See also. E:/Programs/github_repositories/normal/root/build_windows/TBB-prefix/src/TBB-stamp/TBB-configure-*.log. ```; Might be due to (from the log files):; ```; Microsoft Visual Studio 2019 Version 16.9.4.; Copyright (C) Microsoft Corp. All rights reserved. The license for Visual Studio has expired. The evaluation period for this product has ended.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8742#issuecomment-887674511:584,message,message,584,https://root.cern,https://github.com/root-project/root/issues/8742#issuecomment-887674511,1,['message'],['message']
Integrability,"But it's a good question, because we do not depend on pandas like on jupyter or numba. we just support to push data to it and test a specific interface of pandas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654645154:44,depend,depend,44,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654645154,2,"['depend', 'interface']","['depend', 'interface']"
Integrability,"But should we explicitly add optional ROOT dependencies there? Not sure. Anyway I put it there temporarily, for the sake of a CI run. Related PR:; * https://github.com/root-project/root/pull/14685",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173#issuecomment-2045233909:43,depend,dependencies,43,https://root.cern,https://github.com/root-project/root/pull/15173#issuecomment-2045233909,1,['depend'],['dependencies']
Integrability,"By putting it into `buildconfig/`, it will also appear in the releases. Is that what we want, given GPL licensed dependencies?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14648#issuecomment-1936984129:113,depend,dependencies,113,https://root.cern,https://github.com/root-project/root/pull/14648#issuecomment-1936984129,1,['depend'],['dependencies']
Integrability,"By the way, props to you for also writing such a nice commit message :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14160#issuecomment-1836881985:61,message,message,61,https://root.cern,https://github.com/root-project/root/pull/14160#issuecomment-1836881985,1,['message'],['message']
Integrability,Can I have a reproducer and some more info?. - how do I get that code into cling?; - `error: no template named 'RAttrValue'`; - how does it crash? Do you have an error message / backtrace?; - Is the missing semicolon after the class decl intentional?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8494#issuecomment-865036952:168,message,message,168,https://root.cern,https://github.com/root-project/root/issues/8494#issuecomment-865036952,1,['message'],['message']
Integrability,Can one of you confirm that this issue can be closed? nullptr checks should now only be injected if `TRint` is used *and* if there is a terminal attached (or Windows) *and* if outside callfunc.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010763602:88,inject,injected,88,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010763602,1,['inject'],['injected']
Integrability,Can we find a way to be interface-wise backward compatible? (Maybe offer two function overload instead of one).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943#issuecomment-327931155:24,interface,interface-wise,24,https://root.cern,https://github.com/root-project/root/pull/943#issuecomment-327931155,1,['interface'],['interface-wise']
Integrability,"Can we simply add `const TROOT *&GetROOTPtrRef()`, in the source file of where `gROOT` is injected in the list of globals?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-457495268:90,inject,injected,90,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-457495268,2,['inject'],['injected']
Integrability,"Can you expand on why we cannot snapshot from TTree to RNTuple? In general, I'm not sure if it's a good idea to change the default behavior depending on the type of the datasource. Ideally, `kDefault` would for now always mean `kTTree` but be kind of deprecated from the beginning to get users to choose which snapshot format they want. Then at a later point, we could remove it entirely and force users to choose the wanted format, to eventually re-introduce `kDefault` in ROOT7 to mean `kRNTuple`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15750#issuecomment-2333926984:140,depend,depending,140,https://root.cern,https://github.com/root-project/root/pull/15750#issuecomment-2333926984,1,['depend'],['depending']
Integrability,"Can you motivate why we should include those in ROOT's interface? I understand the motivation for testing! I'm sure you have a good reason to also expose them, I'd just like to see the reasons :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8383#issuecomment-857664938:55,interface,interface,55,https://root.cern,https://github.com/root-project/root/pull/8383#issuecomment-857664938,1,['interface'],['interface']
Integrability,Can you paste the entire callfunc wrapper?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426#issuecomment-1917959962:34,wrap,wrapper,34,https://root.cern,https://github.com/root-project/root/pull/14426#issuecomment-1917959962,1,['wrap'],['wrapper']
Integrability,"Can you please try to build the PCH and try again? Also, can you run with GDB and post the stack trace? Maybe there are other missing dependencies in the test, which then tries to load them at runtime from the PCH. I wonder why there is a dependency on the PCH for the other test in any case, as I pointed out [here](https://github.com/root-project/root/blob/master/tmva/sofie/test/CMakeLists.txt#L96-L103)? Since the build is parallel, the order may slightly change after my changes, but these changes passed all tests before. I am a bit bummed that a test that is broken on master is holding off these changes after it has passed all the tests before several times, and has been held off twice already, for the LLVM upgrade, and the branching of 6.28, and that is not counting the first time these changes were proposed, back in 2019, when it was held for later because CMake was too old... It's hard to get motivated to contribute when this sort of hurdle keeps getting in the way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1403838311:134,depend,dependencies,134,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403838311,2,['depend'],"['dependencies', 'dependency']"
Integrability,Can you share the whole valgrind report without the wrapper? The error you quote is intentional (and part of the ROOT suppression file).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759611858:52,wrap,wrapper,52,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759611858,1,['wrap'],['wrapper']
Integrability,"Changed TGDMLWrite interface to take UInt_t. The export precision is now handled by GDML and partially .C export (just matrices for now), but not by xml export. @pcanal, @linev what is your take? Could we do the same for the xml exporter?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1901#issuecomment-383544565:19,interface,interface,19,https://root.cern,https://github.com/root-project/root/pull/1901#issuecomment-383544565,1,['interface'],['interface']
Integrability,"Chatted with @Axel-Naumann and changed the logic:; 1. No two IMT tutorials will run in parallel; 2. Other tests and/or tutorials will, however, still be started in parallel with an IMT tutorial (--> may still oversubscribe to 200%); 3. To reduce the OS in case 2., I just lied to CMake that IMT *tutorials* always use 4 CPUs. What they actually use depends on the hardware, but without this you would have `1xIMTx8 + 7xnormal`. Now, you have `1xIMTx8 + 4xnormal`, so only 150% subscription on an 8-core machine, and 100% on a 4-core.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6274#issuecomment-682628956:349,depend,depends,349,https://root.cern,https://github.com/root-project/root/pull/6274#issuecomment-682628956,1,['depend'],['depends']
Integrability,Cherry picked in #2716 to integrate with root-project/roottest#220,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2346#issuecomment-425665457:26,integrat,integrate,26,https://root.cern,https://github.com/root-project/root/pull/2346#issuecomment-425665457,1,['integrat'],['integrate']
Integrability,Closing because we decided to not go that route.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15873#issuecomment-2187512355:42,rout,route,42,https://root.cern,https://github.com/root-project/root/pull/15873#issuecomment-2187512355,1,['rout'],['route']
Integrability,Closing since #7335 can handle better xrootd OpenSSL dependency (particularly OpenSSL builtin),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8963#issuecomment-914357681:53,depend,dependency,53,https://root.cern,https://github.com/root-project/root/pull/8963#issuecomment-914357681,1,['depend'],['dependency']
Integrability,"Closing this in favour of:; https://github.com/root-project/root/pull/8270. Besides the changes of the aforementioned PR, a new interface in `TInterpreter` will be necessary to use `AddIncludePath` with the `-isystem` flag.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8263#issuecomment-850307470:128,interface,interface,128,https://root.cern,https://github.com/root-project/root/pull/8263#issuecomment-850307470,1,['interface'],['interface']
Integrability,Closing: these changes are being integrated in https://github.com/root-project/root/pull/8770 (which solves #6347 ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6361#issuecomment-889718031:33,integrat,integrated,33,https://root.cern,https://github.com/root-project/root/pull/6361#issuecomment-889718031,1,['integrat'],['integrated']
Integrability,"ColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140); ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56); ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153); ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:81782,depend,depends,81782,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"Commenting here what I discussed with @dpiparo offline. This looks alright, but I think that rather than fixing this here, it might be better to fix it in the builtins themselves, so that not only it works for `libCore`, but also other libraries if needed (think another builtin depending on xxhash, like maybe lzma). Ideally, code outside of `builtins/` should never have to test for `builtin_foo`, but just use the target `foo::foo` and the builtin, when enabled, should take care of properly setting up the target properties so that it works in all cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13739#issuecomment-1738730760:279,depend,depending,279,https://root.cern,https://github.com/root-project/root/pull/13739#issuecomment-1738730760,1,['depend'],['depending']
Integrability,Commit message amended.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2276#issuecomment-406324488:7,message,message,7,https://root.cern,https://github.com/root-project/root/pull/2276#issuecomment-406324488,1,['message'],['message']
Integrability,"Consequently a more complete instruction would read:; ```; if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate; fi; export JUPYTER_ALLOW_INSECURE_WRITES=true; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242#issuecomment-2292484709:856,Integrat,Integration,856,https://root.cern,https://github.com/root-project/root/issues/16242#issuecomment-2292484709,2,['Integrat'],['Integration']
Integrability,"Consider:; 1. Build A.pcm; 2. Build B.pcm which imports A.pcm; 3. Rebuild A.pcm (without rebuilding B.pcm); 4. Use B.pcm. This patch disables out-of-date errors coming from the fact that we did not rebuild B.pcm. This is nice to have, however, our current problems were due to the fact that we had broken dependencies in the build system (see PR #2687).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2680#issuecomment-424736217:305,depend,dependencies,305,https://root.cern,https://github.com/root-project/root/pull/2680#issuecomment-424736217,1,['depend'],['dependencies']
Integrability,Could the commit message be enhanced to express which files are still embedded? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2411#issuecomment-409616161:17,message,message,17,https://root.cern,https://github.com/root-project/root/pull/2411#issuecomment-409616161,1,['message'],['message']
Integrability,Could the commit message be enhanced with a discussion of why the change is being made and why a vector is sufficient (Note that vec[slot] = ... may or may not be thread safe in the general case because of cache line sharing across indices ... the much slower *(vec[slot]) = ... would be safer),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2708#issuecomment-425172680:17,message,message,17,https://root.cern,https://github.com/root-project/root/pull/2708#issuecomment-425172680,1,['message'],['message']
Integrability,Could you add a link to the CMake bug report ? That way we know when we can remove this message.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5238#issuecomment-605620656:88,message,message,88,https://root.cern,https://github.com/root-project/root/pull/5238#issuecomment-605620656,1,['message'],['message']
Integrability,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6488#issuecomment-700164405:31,message,message,31,https://root.cern,https://github.com/root-project/root/pull/6488#issuecomment-700164405,1,['message'],['message']
Integrability,"Could you elaborate what does it mean that ""use `RRawFile` only for `TFile`'s ... otherwise the native `TFile` (subclass) is wrapped in a `RRawFileTFile`""? This could be easily (mis?)interpreted in a way the behavior for the `TFile` object itself is ambiguous. Is the intention perhaps that for all other `TFile` subclasses than `TDavixFiles` and `TNetXNGFiles` (and `TFile`) itself the `RRawFileTFile` is used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15246#issuecomment-2059109543:125,wrap,wrapped,125,https://root.cern,https://github.com/root-project/root/pull/15246#issuecomment-2059109543,1,['wrap'],['wrapped']
Integrability,"Could you expand a little more the commit message and the PR description. I fail to capture the intent. In general, ROOT_GENERATE_DICTIONARY is very complex and needs to be simplified and refactored, unless this is fixing a real issue I'd be reluctant to make it more complex than it already is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5172#issuecomment-600574122:42,message,message,42,https://root.cern,https://github.com/root-project/root/pull/5172#issuecomment-600574122,2,['message'],['message']
Integrability,Could you fix your GitHub profile match to the one from the commit message?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4213#issuecomment-521673476:67,message,message,67,https://root.cern,https://github.com/root-project/root/pull/4213#issuecomment-521673476,1,['message'],['message']
Integrability,Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1958#issuecomment-385449387:35,message,message,35,https://root.cern,https://github.com/root-project/root/pull/1958#issuecomment-385449387,1,['message'],['message']
Integrability,Could you please manually rebase your changes on top of current `master`? There seems to be a merge conflict.; ```; 19:29:06 CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1030 (message):; 19:29:06 Rebase of gartung-cmssw-root-llvm-fix-type-printing-array-template-args; 19:29:06 branch on top of master failed!; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7336#issuecomment-789125370:234,message,message,234,https://root.cern,https://github.com/root-project/root/pull/7336#issuecomment-789125370,1,['message'],['message']
Integrability,Could you please provide an explanation in the commit message why you need to disable them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4038#issuecomment-508384412:54,message,message,54,https://root.cern,https://github.com/root-project/root/pull/4038#issuecomment-508384412,1,['message'],['message']
Integrability,"Cross validation has been integrated through a different PR. Remaining are the Hyper param opt and variable importance.; I refer to @lmoneta for the future plan there. It is my understanding however that if we integrate them we do it through new PR’s, indicating that this PR can be closed. I will make sure to update the PR after discussion with Lorenzo during next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/858#issuecomment-408062694:26,integrat,integrated,26,https://root.cern,https://github.com/root-project/root/pull/858#issuecomment-408062694,2,['integrat'],"['integrate', 'integrated']"
Integrability,"DEPENDENCIES also links, it's basically the same, except an explicit dependency is added. It was needed because of problems in CMake dependencies on the dictionary sources if I understand it correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2802#issuecomment-430326361:0,DEPEND,DEPENDENCIES,0,https://root.cern,https://github.com/root-project/root/pull/2802#issuecomment-430326361,3,"['DEPEND', 'depend']","['DEPENDENCIES', 'dependencies', 'dependency']"
Integrability,"DS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr&lt;ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;&gt; ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr&lt;ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;&gt; ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\belle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153#issuecomment-1209201215:1405,message,message,1405,https://root.cern,https://github.com/root-project/root/pull/11153#issuecomment-1209201215,1,['message'],['message']
Integrability,"David Kirkby[NON-XML-CHAR-0x1B][0m ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.65215, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.04508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.08508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.11206, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.61614, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=4.19165, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.07341, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327#issuecomment-349216512:1468,message,message,1468,https://root.cern,https://github.com/root-project/root/pull/1327#issuecomment-349216512,1,['message'],['message']
Integrability,"Dear @Josiah1 ,. Thanks for your message. The recently released Mac version brought some changes that we had to adapt to (see this recent [forum post](https://root-forum.cern.ch/t/root-stopped-yesterday-working-on-osx/61693) for example). . Can I ask you to try to compile the release candidate https://github.com/root-project/root/tree/v6-32-06-rc1 and tell us whether this is working on your machine?. Also, could you post the full MacOS version, as well as the XCode version?. Cheers,; Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498#issuecomment-2365251752:33,message,message,33,https://root.cern,https://github.com/root-project/root/issues/16498#issuecomment-2365251752,1,['message'],['message']
Integrability,"Dear @acampove,; Thanks contacting us. We should probably wait for @eguiraud for a final answer, but I'd like to give my two cents about this. > Instances of RDataFrame objects are meant to be treated like trees. I am curious about this first sentence. I have never got this impression, neither reading docs / toying with tutorials or doing more complex analyses with RDF. the first line of the [RDF docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html) says `ROOT's RDataFrame offers a high level interface for analyses of data stored in TTree, CSV's and other data formats. `. Just by the fact that I can read and process other formats than TTree I would say that in general RDF is not meant to be treated like a TTree. Otherwise I would also have to say that RDF is meant to be treated like a CSV file or something similar. > there should be a function that allows us to merge them. If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; ```python; # Opening files and loading pre-existing datasets; df_1=ROOT.RDataFrame('tree', file_path_1); df_2=ROOT.RDataFrame('tree', file_path_2). # creating new columns in the datasets; df_1=df_1.Define('identity', '+1'); df_2=df_2.Define('identity', '+2'). # Merging the datasets in memory; df_3 = df_1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-927091065:509,interface,interface,509,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927091065,1,['interface'],['interface']
Integrability,"Dear @amadio, @bluehood ,; thanks for the complete, smart and constructive set of comments. I think I implemented them all. ; In addition, I reloaded the implementation of the **VecOps**. In a nutshell the changes are:; - Now TVec encapsulate a vector<T, TVecAllocator<T>>. This allows to mirror the interface of vector but also to allow nice goodies like the constructor from an address and a lenght or assignment ops.; - Map free function has been added to do what Python's map does; - Filter was not added but rather the operator[] was overloaded to allow things like **v[ v < 3 ]** like numpy does; - Assignment operators have been added; - Test coverage has been increased. I wonder if this, once TVec replaces TArrayBranch in the TDF implementation, is enough to make life of users like @JavierCVilla .; I added @stwunsch as reviewer given the chat we had face2face and his involvement in analysis and TMVA development.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1613#issuecomment-365441937:300,interface,interface,300,https://root.cern,https://github.com/root-project/root/pull/1613#issuecomment-365441937,1,['interface'],['interface']
Integrability,"Dear @couet thank you very much. Is this something that could be implemented soon in ROOT. If it's a simple change to add the copy CTOR to the API it would avoid us in CMSSW to have to create a custom-made wrapper for TH2Poly.; Many thanks in advance, Pedro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13075#issuecomment-1891586098:206,wrap,wrapper,206,https://root.cern,https://github.com/root-project/root/issues/13075#issuecomment-1891586098,2,['wrap'],['wrapper']
Integrability,"Dear @eguiraud,. I tried to play a bit with it and apparently one of the problem is that `CMAKE_SOURCE_DIR` and `CMAKE_BINARY_DIR` have to be changed to `CMAKE_CURRENT_SOURCE_DIR` and `CMAKE_CURRENT_BINARY_DIR` in some places. I'm able to enter in the configuration step but then it crashes because of `RootMacros.cmake` :. ```cmake; CMake Error at build/_deps/root-src/cmake/modules/RootMacros.cmake:442 (message):; Cannot find header ROOT/TErrorDefaultHandler.hxx to generate dictionary; G__Core for. Did you forget to set the INCLUDE_DIRECTORIES property for; the current directory?; Call Stack (most recent call first):; build/_deps/root-src/core/CMakeLists.txt:237 (ROOT_GENERATE_DICTIONARY); ```; I tried to change them in `RootMacros.cmake` but it is a difficult part. . At least the use of `CMAKE_CURRENT_SOURCE_DIR` and `CMAKE_CURRENT_BINARY_DIR` in the right places should solve a lot of errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8923#issuecomment-907318235:406,message,message,406,https://root.cern,https://github.com/root-project/root/issues/8923#issuecomment-907318235,1,['message'],['message']
Integrability,"Dear @guitargeek ; Thank you very much for detailed information.; Actually I do no serialize `RooNLLVar` explicitely. ; I have (in python) large shelve-like database, where I store the results of the fits from RooFit - namely `RoofitResult` and `RooPlot` objects. Probably they ""pick-up"" `RooNLLVar` objects indirectly..; For my purposes the deserialized `RooFitResult` and `RooPlot` objects look perfectly OK (however I cannot guarantee that *all* methods for deserialized objects have been tested). . Actually now within my project I've provided the dedicated serializers ( via `__reduce__` ) for these objects to bypass annoying warning messages, and from now this issue in not relevant for me anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13280#issuecomment-1644363144:640,message,messages,640,https://root.cern,https://github.com/root-project/root/issues/13280#issuecomment-1644363144,1,['message'],['messages']
Integrability,"Dear @vepadulano . Thanks for your reply. > Dear @acampove,; > Thanks contacting us. We should probably wait for @eguiraud for a final answer, but I'd like to give my two cents about this.; > ; > > Instances of RDataFrame objects are meant to be treated like trees.; > ; > I am curious about this first sentence. I have never got this impression, neither reading docs / toying with tutorials or doing more complex analyses with RDF. the first line of the [RDF docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html) says `ROOT's RDataFrame offers a high level interface for analyses of data stored in TTree, CSV's and other data formats. `. Just by the fact that I can read and process other formats than TTree I would say that in general RDF is not meant to be treated like a TTree. Otherwise I would also have to say that RDF is meant to be treated like a CSV file or something similar. I did not refer to the documentation but to how people would actually use this class. 99% of people do not read CSV files with ROOT and `RDataFrame` will be mostly used to interact in a simple and quick way with trees. > ; > > there should be a function that allows us to merge them; > ; > If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```pytho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-927331768:569,interface,interface,569,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768,2,['interface'],['interface']
Integrability,"Dear Bertrand,. Here is the entire log of the cmake output and the make output. Here I used the C++17 standard. Please note, the command with which I called cmake is specified in the first line of the log file.; [cmake_debug.log](https://github.com/root-project/root/files/10993550/cmake_debug.log); [make_debug.log](https://github.com/root-project/root/files/10993551/make_debug.log). Here are also CMakeError.log and CMakeOutput.log.; [CMakeError.log](https://github.com/root-project/root/files/10993778/CMakeError.log); [CMakeOutput.log](https://github.com/root-project/root/files/10993780/CMakeOutput.log). I've also compiled the release mode with C++14, and it works just fine. Here are the output logs.; [cmake_release.log](https://github.com/root-project/root/files/10993654/cmake_release.log); [make_release.log](https://github.com/root-project/root/files/10993655/make_release.log). After this, I tried to compile the release mode with the C++17 standard, but it fails. Meanwhile, I cannot use C++14 with the debug mode.; Here is the cmake output if I'm trying to configure the project in debug mode with C++14. ```; CMake Error at cmake/modules/RootBuildOptions.cmake:405 (message):; >>> At least C++17 standard required with root7, please enable it using; CMake option: -DCMAKE_CXX_STANDARD=17; Call Stack (most recent call first):; CMakeLists.txt:157 (include); ```. So I suggest that the problem rather is with C++17. With best regards,; Denys.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12492#issuecomment-1472390460:1183,message,message,1183,https://root.cern,https://github.com/root-project/root/issues/12492#issuecomment-1472390460,1,['message'],['message']
Integrability,"Dear Jonas. A huge thank you for your investigation on this, and kind explanation. Almost everything on what you explained is clear to me. But let me give you a tiny point where I don't completely understand. **About the <55 instead of <=55. You are right : I made a mistake there in my minimum example. But the principle of the comment stay. I made the fix in order to ""synchronize"" with the numerical values that you gave in your kind answer (I deduced that you made the fix). -->ok for that. **Case option_normalize_hist=1. Your comment : ""n_times_pdf_continuum->getVal()*bin_width=0.0181818 : here n_times_pdf_continuum is a RooAddPdf, which automatically normalizes itself. You create it from the continuum with 55 bins and bin width one, so I'd expect 1/55 which is indeed 0.0181818""; -->I disagree : my pdf is not just ""pdf_continuum"" : I put *n* times pdf_continuum where n is here the number of bkg : n=2200.; So I would expect that n times pdf should be 2200 * (1/55) = 40. **n_times_pdf_continuum is a RooAddPdf (with one element in the addition) with one parameter of yield, and one parameter of shape, so it is a extended pdf : n_bkg * times a pdf.**. **Case option_normalize_hist=0.; From your log, you changed a bit my code since in my code, I was putting, for the case not normalize :; if (option_normalize_hist); value_pdf=nb_events*pdf->getVal()*bin_width;; else; value_pdf=pdf->getVal()*bin_width;. But I understood your point (and it is clear)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7991#issuecomment-826815525:371,synchroniz,synchronize,371,https://root.cern,https://github.com/root-project/root/issues/7991#issuecomment-826815525,2,['synchroniz'],['synchronize']
Integrability,"Dear Lorenzo,. Thanks for the message! I'd be glad if you could let me know if you'll get; to investigating the correction too. Best wishes,. Ondra. On Fri, Feb 4, 2022 at 6:41 PM Lorenzo Moneta ***@***.***>; wrote:. > Hi,; > You are absolutly correct about the KS 1 sample test implemented in the; > GoFTest class.; > There is an issue with line 937 and it should be fixed now by this PR; > #9819 <https://github.com/root-project/root/pull/9819>; > See this commit (1ee1bba; > <https://github.com/root-project/root/commit/1ee1bba75a39c1bf74af88a08796386e6ea3d69d>; > ); >; > Concerning the question about the corrections on the number of events, the; > 2 sample test in Math uses a different implementation, coming from the; > CERNLIB. There, the correction was not applied.; > I will investigate this further to understand if this correction should be; > applied.; >; > Thank you for reporting this problem and the solution !; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/9636#issuecomment-1030252255>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AXLSCWIFWQXSVT6EKQX4MZDUZQMUZANCNFSM5MM3HGOQ>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9636#issuecomment-1039219502:30,message,message,30,https://root.cern,https://github.com/root-project/root/issues/9636#issuecomment-1039219502,2,"['Message', 'message']","['Message', 'message']"
Integrability,"Dear Philippe. Sorry for late response. The crash depends on the input file. I landed with one file and here is the log file which came from running valgrind. I cannot find out the real reason from this. Could you point out where I should look into this?? Thanks and regards. Sunanda; ________________________________; From: Sunanda Banerjee ***@***.***>; Sent: 28 February 2023 14:10; To: root-project/root ***@***.***>; root-project/root ***@***.***>; Cc: Mention ***@***.***>; Subject: RE: [root-project/root] Getting a crash while reading a Root Tree (Issue #12370). Thanks Philippe - I shall try that; ________________________________; From: Philippe Canal ***@***.***; Sent: 27 February 2023 18:50; To: root-project/root; Cc: Sunanda Banerjee; Mention; Subject: Re: [root-project/root] Getting a crash while reading a Root Tree (Issue #12370). Alternatively you can run valgrind to get more information on this kind of failure:. valgrind --suppressions=$ROOTSYS/etc/valgrind-root.supp --log-file=val.01.log myexecutable myargs. —; Reply to this email directly, view it on GitHub<https://github.com/root-project/root/issues/12370#issuecomment-1446778005>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABGMZOSBSY5NDNIO7K6JZEDWZTSPBANCNFSM6AAAAAAVFHT3OU>.; You are receiving this because you were mentioned.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12370#issuecomment-1465411877:50,depend,depends,50,https://root.cern,https://github.com/root-project/root/issues/12370#issuecomment-1465411877,2,"['Message', 'depend']","['Message', 'depends']"
Integrability,"Dear Vincenzo,. That's great, thank you for all your help!. Cheers,; Daniel. On Tue, 27 Feb 2024 at 13:21, Vincenzo Eduardo Padulano <; ***@***.***> wrote:. > Merged #14713 <https://github.com/root-project/root/pull/14713> into; > master.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/pull/14713#event-11934071904>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/APZZFPHYZAW2ZKTEERUFCI3YVWXTXAVCNFSM6AAAAABDIBYBJSVHI2DSMVQWIX3LMV45UABCJFZXG5LFIV3GK3TUJZXXI2LGNFRWC5DJN5XDWMJRHEZTIMBXGE4TANA>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14713#issuecomment-1966263145:629,Message,Message,629,https://root.cern,https://github.com/root-project/root/pull/14713#issuecomment-1966263145,1,['Message'],['Message']
Integrability,"Deciding how many tasks to submit to a distributed scheduler is a fine art on its own :) From what I understand of your case, I would try to test first with `npartitions ~ n_files * (n_clusters_per_file / 5)` so that each task has at least more than 100 MB of data to process and you don't incur in too many small tasks that bring more overhead than actual gain. In the future it would be nice to have some clever algorithm that figures out a better default number of partitions, we'll see. Not sure about the details of the `HTCondorCluster` interface, I will get back to you if I manage to understand what's missing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9429#issuecomment-992778076:543,interface,interface,543,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992778076,1,['interface'],['interface']
Integrability,"Default.xctoolchain/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/13.0.0/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -I/Users/suter_a/Applications/root/root_exec/include -I/opt/local/include -I/Users/suter_a/Applications/musrfit/src/include -I/Users/suter_a/Applications/musrfit/src/classes PUserFcnBase.h /Users/suter_a/Applications/musrfit/src/include/PUserFcnBaseLinkDef.h; cd /Users/suter_a/Applications/musrfit/build && /opt/local/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/suter_a/Applications/musrfit /Users/suter_a/Applications/musrfit/src/classes /Users/suter_a/Applications/musrfit/build /Users/suter_a/Applications/musrfit/build/src/classes /Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake --color=; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/CMakeDirectoryInformation.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Scanning dependencies of target PUserFcnBase; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/classes/CMakeFiles/PUserFcnBase.dir/build.make src/classes/CMakeFiles/PUserFcnBase.dir/build; ... And all the further root_generate_dictionary work as well. Does this help?. Cheers,; Andreas. PS: Machine I have tested it on: ; Darwin Kernel Version 21.3.0: Wed Jan 5 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_ARM64_T8101 arm64. ________________________________. Paul Scherrer Institut. Dr. An",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1061481610:4253,Depend,DependInfo,4253,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1061481610,1,['Depend'],['DependInfo']
Integrability,Dependency: I don't have a strong opinion or technical argument. I'm a bit afraid of circular dependencies between core and imt.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-748052361:0,Depend,Dependency,0,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-748052361,2,"['Depend', 'depend']","['Dependency', 'dependencies']"
Integrability,Depends on #10850,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11193#issuecomment-1216481310:0,Depend,Depends,0,https://root.cern,https://github.com/root-project/root/pull/11193#issuecomment-1216481310,1,['Depend'],['Depends']
Integrability,Depends on #2375 and #2356,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2346#issuecomment-411397777:0,Depend,Depends,0,https://root.cern,https://github.com/root-project/root/pull/2346#issuecomment-411397777,1,['Depend'],['Depends']
Integrability,Depends on #2452.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2448#issuecomment-411065725:0,Depend,Depends,0,https://root.cern,https://github.com/root-project/root/pull/2448#issuecomment-411065725,1,['Depend'],['Depends']
Integrability,Depends on #2915. Could you rebase against?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2854#issuecomment-435624896:0,Depend,Depends,0,https://root.cern,https://github.com/root-project/root/pull/2854#issuecomment-435624896,1,['Depend'],['Depends']
Integrability,Depends on @dpiparo resurrecting the missing test source files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1984#issuecomment-387350267:0,Depend,Depends,0,https://root.cern,https://github.com/root-project/root/pull/1984#issuecomment-387350267,1,['Depend'],['Depends']
Integrability,Depends on PR #1218 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1257#issuecomment-341034522:0,Depend,Depends,0,https://root.cern,https://github.com/root-project/root/pull/1257#issuecomment-341034522,1,['Depend'],['Depends']
Integrability,Depends on PR #2371.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2378#issuecomment-408362633:0,Depend,Depends,0,https://root.cern,https://github.com/root-project/root/pull/2378#issuecomment-408362633,1,['Depend'],['Depends']
Integrability,Depends on PR #2795 and vgvassilev/clad#97.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2745#issuecomment-429634853:0,Depend,Depends,0,https://root.cern,https://github.com/root-project/root/pull/2745#issuecomment-429634853,1,['Depend'],['Depends']
Integrability,"Depends on PR #3000. @Axel-Naumann, we seem to have a cycle in module 'Hist': Hist -> ROOTHistDraw -> Hist. I am not sure what'd the best way to fix it. Could you fix it?. PS: Original error message:; ```; In file included from input_line_13:85:; /home/vvassilev/workspace/builds/root_runtime_modules/include/ROOT/RHist.hxx:23:10: remark: building module 'ROOTHistDraw' as '/home/vvassilev/workspace/builds/root_runtime_modules/lib/ROOTHistDraw.pcm'; [-Rmodule-build]; #include ""ROOT/RHistDrawable.hxx""; ^; Error: Had to build non-system module ROOTHistDraw implicitly. You first need to; generate the dictionary for ROOTHistDraw or mark the C++ module as a system; module if you provided your own system modulemap file:; ROOTHistDraw [system] { ... }; [ 79%] Building CXX object geom/geom/CMakeFiles/Geom.dir/src/TGeoNode.cxx.o; While building module 'Hist':; While building module 'ROOTHistDraw' imported from /home/vvassilev/workspace/builds/root_runtime_modules/include/ROOT/RHist.hxx:23:; In file included from <module-includes>:1:; /home/vvassilev/workspace/builds/root_runtime_modules/include/ROOT/RHistDrawable.hxx:21:10: fatal error: cyclic dependency in module 'Hist': Hist -> ROOTHistDraw -> Hist; #include ""ROOT/RHistImpl.hxx""; ^; Scanning dependencies of target GenVector; [ 79%] Building CXX object geom/geom/CMakeFiles/Geom.dir/src/TGeoPara.cxx.o; In file included from input_line_13:85:; /home/vvassilev/workspace/builds/root_runtime_modules/include/ROOT/RHist.hxx:23:10: fatal error: could not build module 'ROOTHistDraw'; #include ""ROOT/RHistDrawable.hxx""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2999#issuecomment-439637409:0,Depend,Depends,0,https://root.cern,https://github.com/root-project/root/pull/2999#issuecomment-439637409,4,"['Depend', 'depend', 'message']","['Depends', 'dependencies', 'dependency', 'message']"
Integrability,"Diagnostic.h, line 1545; 768: Assertion failed: (*I)->isCompleCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: (!m_Consumer->getTransaction() || (m_Consumer->getTransaction() == T)) && ""Cannot release different T"", file C:\root-dev\git\master\interpreter\cling\lib\Interpreter\IncrementalParser.cpp, line 538; 768: CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: CurLexerKind != CLK_CachingLexer && ""already in caching lex mode"", file C:\root-dev\git\master\interpreter\llvm-project\clang\lib\Lex\PPCaching.cpp, line 99; 768: Assertion failed: CCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: is(tok::raw_identifier), file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/Lex/Token.h, line 208; 768: Assertion failed: (CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: DiagID - DIAG_UPPER_LIMIT < DiagInfo.size() && ""Invalid diagnostic ID"", file C:\root-dev\git\master\interpreter\llvm-project\clang\lib\Basic\DiagnosticIDs.cpp, line 379; 768: Assertion failed: CurLexerCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: CurLexer && ""Got EOF but no current lexer set!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14200#issuecomment-1903602682:1804,message,message,1804,https://root.cern,https://github.com/root-project/root/pull/14200#issuecomment-1903602682,1,['message'],['message']
Integrability,Do we have perhaps a better understanding of this issue? I understand the dependencies are now fixed. Are the symbols also cured?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553#issuecomment-2396007485:74,depend,dependencies,74,https://root.cern,https://github.com/root-project/root/issues/16553#issuecomment-2396007485,1,['depend'],['dependencies']
Integrability,"Do you actually want to change the behavior of TTree::Draw and TTreeReader so the stopping condition depends on the branches that are being read? That is a lot more work than ""just"" making the behavior of TTreeReader+TTree consistent with TTree::Draw and TTreeReader+TChain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6518#issuecomment-774216574:101,depend,depends,101,https://root.cern,https://github.com/root-project/root/issues/6518#issuecomment-774216574,1,['depend'],['depends']
Integrability,Do you mean 'duplicated' or 'deprecated' in the commit message?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2405#issuecomment-409703223:55,message,message,55,https://root.cern,https://github.com/root-project/root/pull/2405#issuecomment-409703223,1,['message'],['message']
Integrability,Does fgMaxSlots have to be static? I can't figure out the reason apart from wanting to keep the slot size heterogeneous at any point of the program. I would need it to be local for dependency on IMT behaviours to make sense.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1019#issuecomment-331064357:181,depend,dependency,181,https://root.cern,https://github.com/root-project/root/pull/1019#issuecomment-331064357,1,['depend'],['dependency']
Integrability,"Doesn't have setting the build type the same effect, which is what I do right now?; ```; CMAKE_ARGS -G ${CMAKE_GENERATOR}; -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}; ```; I wonder if we can make the code more platform in-depended like this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15508#issuecomment-2112188641:218,depend,depended,218,https://root.cern,https://github.com/root-project/root/pull/15508#issuecomment-2112188641,1,['depend'],['depended']
Integrability,"Don't convert RooHistPdf first to TH1 when exporting; 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication; a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas; 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public.""; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3] Consistently have implicit fallback for HistFactory var",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:1610,interface,interface,1610,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,2,['interface'],['interface']
Integrability,"During our meeting just now we decided that the highest priority issues for me to work on the coming days are:. 1. Documentation; 2. The top-level likelihood builder interface / PDF analysis (together with @wverkerke). If time permits, after that I will try to harmonize the Kahan sum usages and the other remaining issues, but we may need to postpone these to another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-910293173:166,interface,interface,166,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-910293173,1,['interface'],['interface']
Integrability,"During the initial build file generation, CMake populates the CMakeCache.txt file. This is why subsequent cmake invokations fetch the variables from this file and do not display the ""Found ...."" messages. If you want to see these messages when running a new build you could remove the CMakeCache.txt so as to populate the variables again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8084#issuecomment-848526396:195,message,messages,195,https://root.cern,https://github.com/root-project/root/issues/8084#issuecomment-848526396,2,['message'],['messages']
Integrability,"During the upgrade to LLVM 18, we enabled JITLink for AArch64 on Linux, because we had to (there were problems with RuntimeDyld that we could not solve). In order to switch x86 as well, we need a solution for `CLING_DEBUG` and `CLING_PROFILE`. It's not clear to me how this works with JITLink, does it have an equivalent interface to `registerJITEventListener`? Maybe @lhames can comment...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14209#issuecomment-2342696358:321,interface,interface,321,https://root.cern,https://github.com/root-project/root/issues/14209#issuecomment-2342696358,2,['interface'],['interface']
Integrability,ELF header does contain dependency information.; $ objdump -x lib/libMathMore.so | less; ```; Dynamic Section:; PLTGOT 0x0000000000092fe8; PLTRELSZ 0x0000000000005a48; JMPREL 0x000000000002d4a8; PLTREL 0x0000000000000007; RELA 0x0000000000024e98; RELASZ 0x0000000000008610; RELAENT 0x0000000000000018; RELACOUNT 0x000000000000003c; SYMTAB 0x00000000000001c8; SYMENT 0x0000000000000018; STRTAB 0x000000000000ac50; STRSZ 0x0000000000013c98; GNU_HASH 0x000000000001e8e8; HASH 0x00000000000212d0; NEEDED libgsl.so.23; NEEDED libgslcblas.so.0; NEEDED libm.so.6; NEEDED libMathCore.so; NEEDED libImt.so; NEEDED libThread.so; NEEDED libCore.so; NEEDED libstdc++.so.6; NEEDED libgcc_s.so.1; NEEDED libpthread.so.0; NEEDED libc.so.6; SONAME libMathMore.so; ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394476683:24,depend,dependency,24,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394476683,2,['depend'],['dependency']
Integrability,"EPREFIX=1 /usr/bin/python3.5 /mnt/build/workspace/root-pullrequests-build/root/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/core ; - [2021-11-30T07:32:08.128Z] ./include/TestStatistics/LikelihoodJob.h:17:10: fatal error: 'RooFit/MultiProcess/Job.h' file not found . ### Warnings:; - [2021-11-30T07:30:53.680Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:53.680Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982359449:1851,synchroniz,synchronizeParameterSettings,1851,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982359449,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,E_INSTALL_LIBDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/lib -DCMAKE_INSTALL_DOCDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/share/doc/ROOT -DCMAKE_INSTALL_INFODIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/share/info -DCMAKE_INSTALL_MANDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/share/man -DCMAKE_INSTALL_OLDINCLUDEDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/include -DCMAKE_INSTALL_INCLUDEDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/include -DCMAKE_INSTALL_SBINDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/sbin -DCMAKE_INSTALL_BINDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/bin -DCMAKE_INSTALL_NAME_DIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/lib -DCMAKE_POLICY_DEFAULT_CMP0025=NEW -DCMAKE_OSX_SYSROOT= -DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_STRIP=/nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/strip -DCMAKE_RANLIB=/nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/ranlib -DCMAKE_AR=/nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/ar -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_INSTALL_PREFIX=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00 -Drpath=ON -Dbuiltin_llvm=OFF -Dbuiltin_freetype=OFF -Dbuiltin_gtest=OFF -Dbuiltin_nlohmannjson=OFF -Dbuiltin_openui5=OFF -Dalien=OFF -Dbonjour=OFF -Dcastor=OFF -Dchirp=OFF -Dclad=OFF -Ddavix=ON -Ddcache=OFF -Dfail-on-missing=ON -Dfftw3=OFF -Dfitsio=OFF -Dfortran=OFF -Dgnuinstall=ON -Dimt=ON -Dgfal=OFF -Dgviz=OFF -Dhdfs=OFF -Dhttp=ON -Dkrb5=OFF -Dldap=OFF -Dmonalisa=OFF -Dmysql=OFF -Dodbc=OFF -Dopengl=ON -Doracle=OFF -Dpgsql=OFF -Dpythia6=OFF -Dpythia8=OFF -Drfio=OFF -Droot7=OFF -Dsqlite=OFF -Dssl=ON -Dtmva=ON -Dvdt=OFF -Dwebgui=OFF -Dxml=ON -Dxrootd=ON -DC_INCLUDE_DIRS=/nix/store/nasgvbblxi25r6y1s82il4m0m4ghib68-glibc-2.35-224-dev/include ; -- The C compiler identification is GNU 11.3.0; -- The CXX compiler identification ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:3552,wrap,wrapper-,3552,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['wrap'],['wrapper-']
Integrability,"Even simpler reproducer, that doesn't depend on `TObject` at all (sorry for the noise); ```py; import ROOT. ROOT.gInterpreter.Declare(; '''; class A {};; class B: public A {};; class C: public B {};. void myfunc(const B &b){; std::cout << ""B"" << std::endl;; }. void myfunc(const C &c){; std::cout << ""c"" << std::endl;; }. '''). ROOT.myfunc(ROOT.B()); ROOT.myfunc(ROOT.C()); ```. output:; ```; B; B; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8817#issuecomment-896106638:38,depend,depend,38,https://root.cern,https://github.com/root-project/root/issues/8817#issuecomment-896106638,2,['depend'],['depend']
Integrability,"Everybody has python. Not everybody has NumPy. That state gets a name with this PR. I think it makes sense, also in Oksana's approach of ""let's configure ROOT parts, not dependent libraries"". See https://epsft-jenkins.cern.ch/view/ROOT/job/root-incremental-master/6924/LABEL=ROOT-centos7,SPEC=noimt/console; ```; CMake Error at cmake/modules/FindNumPy.cmake:62 (message):; NumPy import failure:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named numpy. Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:9 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:469 (find_package); CMakeLists.txt:103 (include); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2972#issuecomment-439441593:170,depend,dependent,170,https://root.cern,https://github.com/root-project/root/pull/2972#issuecomment-439441593,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"Exactly same routine can be applied for TWebCanvas, but this requires small modifications in TCanvasImp interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4855#issuecomment-578131523:13,rout,routine,13,https://root.cern,https://github.com/root-project/root/pull/4855#issuecomment-578131523,2,"['interface', 'rout']","['interface', 'routine']"
Integrability,Exactly. Talking to Philippe we indeed need to decide how to deal with this case of `std::foo` vs `::foo`. We can delay the decision point by renaming `std::Detail` injected by ROOT (#9093).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-939859280:165,inject,injected,165,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-939859280,1,['inject'],['injected']
Integrability,"Example effect of the new, complete implementation:; ```.cpp; #include ""ROOT/RDataFrame.hxx"". struct DecayAngles {; Double_t phi{0.0};; };. int main(); {; ROOT::RDataFrame d( 10 );; auto dnotype = d.Define( ""foo"", [](){ return DecayAngles(); } );; *dnotype.Count(); // does work; // *dnotype.Filter(""foo.phi > 0"").Count(); // does not work and prints nice error message; return 0;; }; ```; error message; ```; input_line_15:1:56: error: variable has incomplete type '__tdf1::foo_type' (aka '__tdf1::DecayAngles'); namespace __tdf_0{ auto tdf_f = []() {__tdf1::foo_type foo;; ^; input_line_13:1:26: note: forward declaration of '__tdf1::DecayAngles'; namespace __tdf1 { class DecayAngles;/* Did you forget to declare type DecayAngles in the interpreter?*/ using foo_type = DecayAngles; }; ^; libc++abi.dylib: terminating with uncaught exception of type std::runtime_error: Cannot interpret the following expression:; foo.phi > 0. Make sure it is valid C++.; Abort trap: 6; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2558#issuecomment-417694357:362,message,message,362,https://root.cern,https://github.com/root-project/root/pull/2558#issuecomment-417694357,2,['message'],['message']
Integrability,"Example of failure:``` java.lang.IllegalArgumentException: Could not instantiate {delegate={$class=XUnitBuilder, testTimeMargin=3000, thresholdMode=1, thresholds=[{$class=FailedThreshold, failureNewThreshold=0, failureThreshold=0, unstableNewThreshold=0, unstableThreshold=0}, {$class=SkippedThreshold, failureNewThreshold=, failureThreshold=, unstableNewThreshold=, unstableThreshold=}], tools=[{$class=CTestType, deleteOutputFiles=true, failIfNotNew=false, pattern=build/Testing/*/Test.xml, skipNoTestFiles=false, stopProcessingIfError=true}]}} for org.jenkinsci.plugins.workflow.steps.CoreStep: java.lang.UnsupportedOperationException: no known implementation of interface jenkins.tasks.SimpleBuildStep is named XUnitBuilder ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7901#issuecomment-829093239:666,interface,interface,666,https://root.cern,https://github.com/root-project/root/pull/7901#issuecomment-829093239,1,['interface'],['interface']
Integrability,"ExprValueKind, clang::DeclarationNameInfo const&, clang::NestedNameSpecifierLoc, clang::NamedDecl*, clang::SourceLocation, clang::TemplateArgumentListInfo const*) () from /home/linev/build/webgui/lib/libCling.so; #12 0x00007f4aa568b13c in clang::Sema::BuildDeclarationNameExpr(clang::CXXScopeSpec const&, clang::DeclarationNameInfo const&, clang::NamedDecl*, clang::NamedDecl*, clang::TemplateArgumentListInfo const*, bool) () from /home/linev/build/webgui/lib/libCling.so; #13 0x00007f4aa568b7ce in clang::Sema::BuildDeclarationNameExpr(clang::CXXScopeSpec const&, clang::LookupResult&, bool, bool) () from /home/linev/build/webgui/lib/libCling.so; #14 0x00007f4aa568c378 in clang::Sema::BuildQualifiedDeclarationNameExpr(clang::CXXScopeSpec&, clang::DeclarationNameInfo const&, bool, clang::Scope const*, clang::TypeSourceInfo**) () from /home/linev/build/webgui/lib/libCling.so; #15 0x00007f4aa59a162a in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentScopeDeclRefExpr(clang::DependentScopeDeclRefExpr*, bool, clang::TypeSourceInfo**) () from /home/linev/build/webgui/lib/libCling.so; #16 0x00007f4aa59948bc in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformTemplateArgument(clang::TemplateArgumentLoc const&, clang::TemplateArgumentLoc&, bool) () from /home/linev/build/webgui/lib/libCling.so; #17 0x00007f4aa5996dc2 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformTemplateSpecializationType(clang::TypeLocBuilder&, clang::TemplateSpecializationTypeLoc, clang::TemplateName) () from /home/linev/build/webgui/lib/libCling.so; #18 0x00007f4aa5993be9 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformTSIInObjectScope(clang::TypeLoc, clang::QualType, clang::NamedDecl*, clang::CXXScopeSpec&) [clone .isra.0] () from /home/linev/build/webgui/lib/libCling.so; #19 0x00007f4aa5994499 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformNestedNameSp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8494#issuecomment-865084737:2026,Depend,DependentScopeDeclRefExpr,2026,https://root.cern,https://github.com/root-project/root/issues/8494#issuecomment-865084737,1,['Depend'],['DependentScopeDeclRefExpr']
Integrability,"FAILED: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/SOFIE_common.cxx.o ; - [2023-02-22T14:17:35.310Z] /mnt/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:17:35.310Z] /mnt/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:10: error: ‘assert’ was not declared in this scope ; - [2023-02-22T14:17:35.310Z] /mnt/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:466:10: error: ‘assert’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive] ; - [2023-02-22T14:17:35.310Z] FAILED: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel_Base.cxx.o ; - [2023-02-22T14:17:36.241Z] /mnt/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:17:36.241Z] /mnt/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:10: error: ‘assert’ was not declared in this scope ; - [2023-02-22T14:17:36.241Z] /mnt/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:466:10: error: ‘assert’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive] ; - [2023-02-22T14:17:36.241Z] FAILED: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel_GraphIndependent.cxx.o ; - [2023-02-22T14:17:36.803Z] /mnt/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] . And 10 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1440094979:1341,depend,depend,1341,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1440094979,3,['depend'],"['depend', 'dependent']"
Integrability,"FF -Dbuiltin_gtest=OFF -Dbuiltin_nlohmannjson=OFF -Dbuiltin_openui5=OFF -Dalien=OFF -Dbonjour=OFF -Dcastor=OFF -Dchirp=OFF -Dclad=OFF -Ddavix=ON -Ddcache=OFF -Dfail-on-missing=ON -Dfftw3=OFF -Dfitsio=OFF -Dfortran=OFF -Dgnuinstall=ON -Dimt=ON -Dgfal=OFF -Dgviz=OFF -Dhdfs=OFF -Dhttp=ON -Dkrb5=OFF -Dldap=OFF -Dmonalisa=OFF -Dmysql=OFF -Dodbc=OFF -Dopengl=ON -Doracle=OFF -Dpgsql=OFF -Dpythia6=OFF -Dpythia8=OFF -Drfio=OFF -Droot7=OFF -Dsqlite=OFF -Dssl=ON -Dtmva=ON -Dvdt=OFF -Dwebgui=OFF -Dxml=ON -Dxrootd=ON -DC_INCLUDE_DIRS=/nix/store/nasgvbblxi25r6y1s82il4m0m4ghib68-glibc-2.35-224-dev/include ; -- The C compiler identification is GNU 11.3.0; -- The CXX compiler identification is GNU 11.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /nix/store/bslw1kzx445wxp08ykq2vdsgnr516vcq-git-2.39.1/bin/git (found version ""2.39.1"") ; -- Checking internet connectivity; -- Checking internet connectivity - failed: will not automatically download external dependencies; -- Looking for Python; -- Found Python3: /nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python3.10 (found version ""3.10.9"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_INCLUDE_DIRS Python2_LIBRARIES Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed) ; Reason given by package: ; Interpreter: Wrong major version for the interpreter ""/nix/store/sp5x6s8n36gjlwck74x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:4960,wrap,wrapper-,4960,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['wrap'],['wrapper-']
Integrability,"FWIW many of the failures are due to; ```; root [0] std::string_view sv;; root [1] (std::string) sv;; IncrementalExecutor::executeFunction: symbol '_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12__sv_wrapperC1ESt17basic_string_viewIcS2_E' unresolved while linking [cling interface function]!; You are probably missing the definition of std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::__sv_wrapper::__sv_wrapper(std::basic_string_view<char, std::char_traits<char> >); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17_S_to_string_viewESt17basic_string_viewIcS2_E' unresolved while linking [cling interface function]!; You are probably missing the definition of std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_to_string_view(std::basic_string_view<char, std::char_traits<char> >); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ENS4_12__sv_wrapperERKS3_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::__sv_wrapper, std::allocator<char> const&); Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11601#issuecomment-1282548277:279,interface,interface,279,https://root.cern,https://github.com/root-project/root/issues/11601#issuecomment-1282548277,3,['interface'],['interface']
Integrability,"FWIW the line isn't needed because a few lines down, we have; ```cmake; target_include_directories(gtest INTERFACE ${GTEST_INCLUDE_DIR}); target_include_directories(gmock INTERFACE ${GMOCK_INCLUDE_DIR}); ```; (note the singular `GTEST_INCLUDE_DIR`!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13375#issuecomment-1661886125:105,INTERFACE,INTERFACE,105,https://root.cern,https://github.com/root-project/root/pull/13375#issuecomment-1661886125,2,['INTERFACE'],['INTERFACE']
Integrability,FWIW you can resurrect your local incremental builds with `rm -rf AFTERIMAGE-prefix/` and then `cmake .`. The failure is related to our `ExternalProject_Add` that does `cmake -E copy_directory` without properly tracking dependencies.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16129#issuecomment-2255392246:220,depend,dependencies,220,https://root.cern,https://github.com/root-project/root/pull/16129#issuecomment-2255392246,1,['depend'],['dependencies']
Integrability,"FYI, after setting the build type to `Release` and rerunning, only these still fail:; ```; The following tests FAILED:; 	 1 - clingtest-check-cling (Failed); 	 13 - pyunittests-pyroot-dependency-versions (Failed); 	 68 - pyunittests-pyroot-numbadeclare (Not Run); 	 69 - test-import-numba (Failed); 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed); 	282 - test-stressmathcore (Failed); 	307 - test-TFormulaTests (Failed); 	1143 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run); 	1852 - roottest-root-meta-ROOT-5694-execLoadLibs (Failed); ```; and the log of failures is [here](https://github.com/root-project/root/files/7710438/ctest-failed.log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436#issuecomment-993356711:184,depend,dependency-versions,184,https://root.cern,https://github.com/root-project/root/issues/9436#issuecomment-993356711,1,['depend'],['dependency-versions']
Integrability,"FYI,. I tried the route of `ClassDefInline` with poor results. First off, the class now need a default constructor, which means I had to turn the reference data member to a pointer. The diff is here. ```; --- a/gui/browserv7/src/RBrowserData.cxx; +++ b/gui/browserv7/src/RBrowserData.cxx; @@ -26,6 +26,8 @@; #include ""TBufferJSON.h""; #include ""TEnv.h""; ; +#include ""TObject.h""; +; #include <algorithm>; #include <regex>; ; @@ -42,15 +44,15 @@ namespace Experimental {; ; class RBrowserDataCleanup : public TObject {; ; - RBrowserData &fData;; + RBrowserData *fData{nullptr}; //!; ; public:; - RBrowserDataCleanup(RBrowserData &_data) : fData(_data) {}; + RBrowserDataCleanup(RBrowserData *_data) : fData(_data) {}; + RBrowserDataCleanup() {} // Needed by ClassDefInline; ; - void RecursiveRemove(TObject *obj) override; - {; - fData.RemoveFromCache(obj);; - }; + void RecursiveRemove(TObject *obj) override { fData->RemoveFromCache(obj); }; +; + ClassDefInline(RBrowserDataCleanup, 1);; };; }; }; @@ -67,7 +69,7 @@ public:; ; RBrowserData::RBrowserData(); {; - fCleanupHandle = std::make_unique<RBrowserDataCleanup>(*this);; + fCleanupHandle = std::make_unique<RBrowserDataCleanup>(this);; R__LOCKGUARD(gROOTMutex);; gROOT->GetListOfCleanups()->Add(fCleanupHandle.get());; }. ```. And the test gives even more errors then before:. ```; 1548: -- BEGIN OUTDIFF OUTPUT --; 1548: --- /home/vpadulan/Programs/rootproject/roottest/root/core/execStatusBitsCheck.ref	Wed Jun 9 11:08:31 2021; 1548: +++ /home/vpadulan/Programs/rootproject/rootbuild/execstatusbitcheck-fix-v2/roottest/root/core/execStatusBitsCheck.log	Mon Jul 17 18:19:46 2023; 1548: @@ -14,5 +14,29 @@; 1548: Bit 13 declared in TObject as kInvalidObject; 1548: Bit 14 declared in TStreamerElement as kWholeObject; 1548: Bit 21 declared in TStreamerElement as kWarned; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:18,rout,route,18,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,1,['rout'],['route']
Integrability,"FYI: The reason for the slow test execution and many of the timeouts was `ReuseExistingWeakSymbols`, added mostly as an optimization in commit adec92d1e763143dfcd151718418a3c1834824a8. It calls `getSymbolAddress` for a lot of `GlobalValue`s which is apparently much more expensive with LLVM 13 (probably due to locking, discussed above). However, the original commit message also mentions that this actually solves problems on M1, so we'll have to see later on how to re-enable it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1124936547:367,message,message,367,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1124936547,1,['message'],['message']
Integrability,Failure is unrelated (likely missing dependency in cmake/ctest).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2511#issuecomment-415522077:37,depend,dependency,37,https://root.cern,https://github.com/root-project/root/pull/2511#issuecomment-415522077,1,['depend'],['dependency']
Integrability,"Failure on `alma8` looks unrelated to this PR:; ```txt; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_Inference.py"", line 70, in <module>; session = ROOT.TMVA_SOFIE_Higgs_trained_model.Session(); cppyy.gbl.std.runtime_error: Session::Session(string filename = ""Higgs_trained_model.dat"") =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_densebias0 , read tensor_dense3kernel0; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15421#issuecomment-2097064454:536,message,message,536,https://root.cern,https://github.com/root-project/root/pull/15421#issuecomment-2097064454,1,['message'],['message']
Integrability,Failures on Ubuntu2004 are due to use std::regex before loading the PyTorch module. ; See PyTorch issue: https://github.com/pytorch/pytorch/issues/49460#issuecomment-911365091. regex comes from libROOTNtuple (days component) loaded by TMVA dependency on RDataframe. ; Unfortunately cannot disable DAOS when running with `testing=On`. Try now building without RDataframe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13674#issuecomment-1733208800:240,depend,dependency,240,https://root.cern,https://github.com/root-project/root/pull/13674#issuecomment-1733208800,1,['depend'],['dependency']
Integrability,"Failures seem unrelated. @Axel-Naumann, we are only hit by this because of cxxmodules. There are header dependencies (usually Math/Math.h) and the pcm generation requires this. For regular ROOT that's not an issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2506#issuecomment-415555227:104,depend,dependencies,104,https://root.cern,https://github.com/root-project/root/pull/2506#issuecomment-415555227,1,['depend'],['dependencies']
Integrability,"Few more details - all implementation build around `TCanvas::IsDrawn()` functionality.; This flag set every time `c.Draw()` called, but then checked and reset in jupyter via `CaptureDrawnPrimitives` function. Same logic could be implemented for `TCanvas::Update()`.; But next problem - so called `NotebookDrawer` is temporary object in Jupyter . One need to store update handle for each drawn canvas and reuse it if `c.Update()` is called. Theoretically this could be implemented, but needs some extension in C++ interface. ; @vepadulano Do we want this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13631#issuecomment-1714144864:513,interface,interface,513,https://root.cern,https://github.com/root-project/root/issues/13631#issuecomment-1714144864,1,['interface'],['interface']
Integrability,"Fixed (in theory) the warnings, and moved to using newer style build system (will be integrated with #1680, since there's now some duplication). Uses `MINUIT2_MPI` and `MINUIT2_OMP` instead of environment variables.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1689#issuecomment-369942972:85,integrat,integrated,85,https://root.cern,https://github.com/root-project/root/pull/1689#issuecomment-369942972,1,['integrat'],['integrated']
Integrability,Fixed a typo in the commit message ..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5695#issuecomment-633562880:27,message,message,27,https://root.cern,https://github.com/root-project/root/pull/5695#issuecomment-633562880,1,['message'],['message']
Integrability,"Fixed pretty-printing, remaining issues seem related to autoloading:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6VecOps15SmallVectorBaseIjE8grow_podEPvmm' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::VecOps::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long); Maybe you need to load the corresponding shared library?; ```. Not sure what's going on on Windows, will have to investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-815646679:204,interface,interface,204,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-815646679,1,['interface'],['interface']
Integrability,"Fixing this related issue upstream : https://github.com/wlav/CPyCppyy/issues/35 will unblock this PR. Current test failures on this PR are from the string_view converter failing in calls to the RDataFrame constructor:. ```cpp; RDataFrame(std::string_view treename, const std::vector<std::string> &filenames, ; const ColumnNames_t &defaultColumns = {});; ```. Minimal reproducer:; ```py; cppyy.cppdef('''void processMessage(std::string_view A, std::vector<int> messages) {. for (const auto& msg : messages) {; std::cout << ""Message2: "" << msg << std::endl;; }} '''). cppyy.gbl.processMessage(""a"", (x for x in [1, 2, 3])); ```. This fails when:. - A generator expression is used ( `cppyy.gbl.processMessage(""a"", [1, 2, 3])` works); - We add a `string_view` in the beginning of the function signature:. The second patch that we delete in this PR adds a commit which makes this CallContext `noimp` call in the string_view converter:. ```diff; bool CPyCppyy::STLStringViewConverter::SetArg(; PyObject* pyobject, Parameter& para, CallContext* ctxt); {. // normal instance convertion (eg. string_view object passed); if (!PyInt_Check(pyobject) && !PyLong_Check(pyobject)) {; + CallContextRAII<CallContext::kNoImplicit> noimp(ctxt);; if (InstanceConverter::SetArg(pyobject, para, ctxt)) {. ```. if I remove this line and allow it to be implicit then this issue no longer happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16212#issuecomment-2311776416:460,message,messages,460,https://root.cern,https://github.com/root-project/root/pull/16212#issuecomment-2311776416,2,['message'],['messages']
Integrability,"Following #14974, we see no change in the error message today:; ```; lxplus966:~$ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc11-opt/setup.sh ; lxplus966:~$ python -c ""import ROOT""; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-el9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; [snip]; ```. (Some of the builds that you might see in our cdash could suffer from picking up Vc.pcm in the build location but from builds for other platforms...; which results in an error message like; ```; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch; ```; )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964#issuecomment-2014753873:48,message,message,48,https://root.cern,https://github.com/root-project/root/issues/14964#issuecomment-2014753873,2,['message'],['message']
Integrability,"Following the instructions at https://cliutils.gitlab.io/modern-cmake/chapters/packages/ROOT.html I wrote (with the rest of the setup as in the issue description):. ```cmake; add_executable(readwrite_twoints twoints.cpp); target_link_libraries(readwrite_twoints ROOT::RIO); ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h); ```. This gets me:. ```; CMake Error at /home/blue/ROOT/master/_build/RootMacros.cmake:442 (message):; Cannot find header twoints.hpp to generate dictionary twoints_dict for.; Did you forget to set the INCLUDE_DIRECTORIES property for the current; directory?; ```. So, following Guilherme's suggestions above, I added a `target_include_directories` before calling `ROOT_GENERATE_DICTIONARY`:. ```cmake; add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp); target_link_libraries(readwrite_twoints ROOT::RIO); target_include_directories(readwrite_twoints PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp MODULE readwrite_twoints LINKDEF LinkDef.h); ```. which ~~instead gives me~~ works (thanks @amadio ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856717175:461,message,message,461,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856717175,1,['message'],['message']
Integrability,"For Asimage libraries you have now proper support of external PNG library. @jgrosseo did you check for ldd for `root` executable?. libpng from ldd output of root executable is coming as a dependency from X11 libraries: https://github.com/root-project/root/blob/master/rootx/CMakeLists.txt#L24-L26. We are linking `root` (not root.exe) with next X11 libraries: /usr/lib/libSM.so /usr/lib/libICE.so /usr/lib/libX11.so /usr/lib/libXext.so /usr/lib/libXft.so /usr/lib/libXpm.so; ```; oksana@oksana-dellxps: ldd /usr/lib/libXft.so ; linux-vdso.so.1 (0x00007ffecfcf6000); libfontconfig.so.1 => /usr/lib/libfontconfig.so.1 (0x00007f9bffd47000); libfreetype.so.6 => /usr/lib/libfreetype.so.6 (0x00007f9bffc79000); libXrender.so.1 => /usr/lib/libXrender.so.1 (0x00007f9bffc6c000); libX11.so.6 => /usr/lib/libX11.so.6 (0x00007f9bffb2c000); libc.so.6 => /usr/lib/libc.so.6 (0x00007f9bff966000); libexpat.so.1 => /usr/lib/libexpat.so.1 (0x00007f9bff936000); libuuid.so.1 => /usr/lib/libuuid.so.1 (0x00007f9bff92b000); libpthread.so.0 => /usr/lib/libpthread.so.0 (0x00007f9bff909000); libbz2.so.1.0 => /usr/lib/libbz2.so.1.0 (0x00007f9bff8f6000); libpng16.so.16 => /usr/lib/libpng16.so.16 (0x00007f9bff8be000); libz.so.1 => /usr/lib/libz.so.1 (0x00007f9bff8a4000); libharfbuzz.so.0 => /usr/lib/libharfbuzz.so.0 (0x00007f9bff7a0000); libxcb.so.1 => /usr/lib/libxcb.so.1 (0x00007f9bff774000); libdl.so.2 => /usr/lib/libdl.so.2 (0x00007f9bff76f000); /usr/lib64/ld-linux-x86-64.so.2 (0x00007f9bffdf1000); libm.so.6 => /usr/lib/libm.so.6 (0x00007f9bff629000); libglib-2.0.so.0 => /usr/lib/libglib-2.0.so.0 (0x00007f9bff501000); libgraphite2.so.3 => /usr/lib/libgraphite2.so.3 (0x00007f9bff4dc000); libXau.so.6 => /usr/lib/libXau.so.6 (0x00007f9bff4d7000); libXdmcp.so.6 => /usr/lib/libXdmcp.so.6 (0x00007f9bff4cd000); libpcre.so.1 => /usr/lib/libpcre.so.1 (0x00007f9bff45b000). ``` ; Here I am not sure how I can help you, only solution for you is to disable x11.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5717#issuecomment-635184642:188,depend,dependency,188,https://root.cern,https://github.com/root-project/root/pull/5717#issuecomment-635184642,1,['depend'],['dependency']
Integrability,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13917#issuecomment-1777400915:426,depend,dependent,426,https://root.cern,https://github.com/root-project/root/issues/13917#issuecomment-1777400915,1,['depend'],['dependent']
Integrability,"For `DO_WHATEVER_NLOHMANM_3.11.0_NEEDS` just display a message:; ```cmake; try_compile(FWD_DECLARE MYBINDIR forward_declare.cpp); try_compile(FWD_HEADER MYBINDIR forward_header.cpp); if(FWD_DECLARE); message(""Using forward declaration for nlohmann_json""); elseif(FWD_HEADER); message(""Using forward header from nlohmann_json""); else(); set(DO_WHATEVER_NLOHMANM_3.11.0_NEEDS ON); message(FATAL_ERROR ""You are probably running nlohmann_json version 3.11.0 which is deemed unusable by its creator (https://github.com/nlohmann/json/releases/tag/v3.11.0). Please install a working version of nlohmann_json. If you think you're seeing this message in error and you have a different version of nlohmann_json installed, please report it as a bug.""); endif(); ```; but the advantage of this way is that it's version independent and will work when it works, even if the default behaviour changes in the future again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1220602003:55,message,message,55,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1220602003,5,['message'],['message']
Integrability,For `TSystem's Exit and Abort` I would add a throw after the `AbstractMethod` (At first I thought about calling `Fatal` but those 2 routines could be involved in the implementation of `Fatal` causing more trouble).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11443#issuecomment-1267207616:132,rout,routines,132,https://root.cern,https://github.com/root-project/root/pull/11443#issuecomment-1267207616,1,['rout'],['routines']
Integrability,For math operations in ROOT we prefer not to emit messages and leave to the user to handle the returned NaN,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14506#issuecomment-2448471203:50,message,messages,50,https://root.cern,https://github.com/root-project/root/pull/14506#issuecomment-2448471203,1,['message'],['messages']
Integrability,"For me, the title does not change but it does not crash. No error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14032#issuecomment-1801791917:66,message,messages,66,https://root.cern,https://github.com/root-project/root/issues/14032#issuecomment-1801791917,1,['message'],['messages']
Integrability,"For the `IMultiGenFunction` crossinheritance I see that we inject the`NDim()` method into the dispatched code:. ``` unsigned int NDim() const {; PyObject* iself = (PyObject*)_internal_self;; if (!iself || iself == Py_None) {; PyErr_Warn(PyExc_RuntimeWarning, (char*)""Call attempted on deleted python-side proxy"");; return unsigned int{};; }; ```; using this code block:. https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx#L41-L51. Cling fails to compile the initialization in `return unsigned int{};` since it is not valid C++. We should also consider `unsigned int` and other multi keyword types that require a function style cast for value initialization (like `return (unsigned int){}`. If I am not wrong, this should just work for all primitives(as zero initialization) and user-defined types(as default initialization). I was able to get this example from the manual to work with this fix. Based on the issue, I was of the opinion we should land this upstream but I see that this is a high priority issue and @wlav is on vacation. . What do you think @guitargeek @dpiparo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15315#issuecomment-2275171210:59,inject,inject,59,https://root.cern,https://github.com/root-project/root/issues/15315#issuecomment-2275171210,1,['inject'],['inject']
Integrability,"For the moment changing of global debug level is the only solution to suppress warning. One changing RLogger debug level, which is not used for core ROOT components like I/O.; Therefore all other important warnings and error messages will be still there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14300#issuecomment-1889023103:225,message,messages,225,https://root.cern,https://github.com/root-project/root/issues/14300#issuecomment-1889023103,1,['message'],['messages']
Integrability,"For the record, I am able to get things to work by doing:. ```; sed -i.removeme '/deps = gcc/d' build.ninja; ```. on the generated `build.ninja`. I think the issue is to be traced back to some spurious dependency added in `ROOT/interpreter/llvm-project/llvm/cmake/modules/TableGen.cmake`, but I am not quite sure how that happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15064#issuecomment-2022344568:202,depend,dependency,202,https://root.cern,https://github.com/root-project/root/issues/15064#issuecomment-2022344568,1,['depend'],['dependency']
Integrability,"For the record, one such discussion yield the following:. a) Update the merging operation (if not already done) to make sure that the output file is kept open during the length of the process (this is to avoid re-reading the output TTree from the output file) and the TTree is written to the output file only once at the end. b) CMSSW can detect when a 'merge' operation was requested by checking the return value of Fill and the number of entry: if Fill succeed and the TTree has zero entries afterwards then a merge operation was requested (the TTree was reset). c) We need to call a callback (std::function) provided at CMS when a merge operation is completed (i.e all its baskets are on the output file and the output TTree has been updated accordingly). d) When CMSSW noticed that a 'merge' operation has been requested, it will shutdown the CMSSW output module (make it unavailable to other modules). This guarantees that if CMSSW has N output modules, there will be at most N queued merge operations and while the merge are going on only 1 thread is used for it (and the other N-1 can be used for other CMSSW work). e) We need to implement a queuing of the merge operations tasks without relying on the ROOT global write lock. See for example the way something similar is done in CSMSW: https://github.com/cms-sw/cmssw/blob/master/FWCore/Concurrency/interface/SerialTaskQueue.h. f) CMSSW need to call a 'finalization' API to 'close-out' the output file (without this call the output file is useless).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1866#issuecomment-387769514:1357,interface,interface,1357,https://root.cern,https://github.com/root-project/root/pull/1866#issuecomment-387769514,1,['interface'],['interface']
Integrability,"For the record, this issue is stil there as of 2022-11-10 acc8412782 as seen on https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/23 where the message is:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; ```; where as `Rint.pcm` is actually the newer of the 2 files:; ```; (base) neel@neel-ASUS-TUF-Gaming-A15-FA506QM-FA506QM:~/Desktop/Root/build$ ls -lart lib/Rint.pcm lib/MathCore.pcm; -rw-rw-r-- 1 neel neel 11538356 Nov 9 23:43 lib/MathCore.pcm; -rw-rw-r-- 1 neel neel 428436 Nov 9 23:58 lib/Rint.pcm; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7704#issuecomment-1311128901:209,message,message,209,https://root.cern,https://github.com/root-project/root/issues/7704#issuecomment-1311128901,1,['message'],['message']
Integrability,"For what concerns the integration in TDF, the cases to cover are:; 1) tdf.Histo1D(""col""); 2) tdf.Histo1D(model, ""col""); (and weighted versions). For 1), we can transparently enable bit 20 and ""pow2"" binning. Better than the current hard limit from 0 to 64.; For 2) we can enable a new model constructor, which takes name and title only. Bin suggestion is fixed to 64. For the case in which the model is created from an histo, bit 20 can be easily propagated from the histo to the model and back to the new histo based on the model.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1305#issuecomment-344598869:22,integrat,integration,22,https://root.cern,https://github.com/root-project/root/pull/1305#issuecomment-344598869,1,['integrat'],['integration']
Integrability,Force-pushed again just to update the commit message.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10205#issuecomment-1076491031:45,message,message,45,https://root.cern,https://github.com/root-project/root/pull/10205#issuecomment-1076491031,1,['message'],['message']
Integrability,"Forgot to say, this should be only 2 commits: one the dependencies the other the header/linkdef adjustments to be able to semantically track such improvements...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5231#issuecomment-604933117:54,depend,dependencies,54,https://root.cern,https://github.com/root-project/root/pull/5231#issuecomment-604933117,1,['depend'],['dependencies']
Integrability,"Found it! As it turns out, it is a ""simple"" 2 line fix:; https://github.com/stephanlachnit/root/commit/65ae229c6ba458c610f0a41d32b798a132f385e4. We need to set `LLVM_LINK_LLVM_DYLIB=OFF` for clang, this will prefer static libs. The only disadvantage is that links against *all* LLVM libraries, which means additionally dependencies might need to be installed. In particular LLVM 16 is broken due to https://github.com/llvm/llvm-project/issues/62300.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1666954709:319,depend,dependencies,319,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1666954709,2,['depend'],['dependencies']
Integrability,"From in-person discussion with Philippe:; - Change interface at the `TIOFeatures`-level from `TBasket::EIOBits` to `ROOT::EIOFeatures`, which then get translated to the on-disk IO bits.; - Add the corresponding `ROOT::Experimental::EIOFeatures` and `ROOT::Experimental::EIOUnsupportedFeatures` enums.; - The above also allows us to move `TIOFeatures` into the `ROOT` namespace. Instead of storing `UChar_t` directly in the `TTree` / `TBranch` / `TBasket` classes, we can store `TIOFeature`. We would only use `TBasket::EIOBits` in the serialization code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1003#issuecomment-332621552:51,interface,interface,51,https://root.cern,https://github.com/root-project/root/pull/1003#issuecomment-332621552,1,['interface'],['interface']
Integrability,"From the `alma8` build:; ```; Assembler messages:; Fatal error: can't create CMakeFiles/Geom.dir/src/TGeoOpticalSurface.cxx.o: No space left on device; {standard input}: Assembler messages:; {standard input}: Fatal error: can't write 1276 bytes to section .debug_loc of CMakeFiles/Graf.dir/src/TGaxis.cxx.o: 'No space left on device'; {standard input}: Fatal error: can't close CMakeFiles/Graf.dir/src/TGaxis.cxx.o: No space left on device; gmake[2]: *** [graf2d/graf/CMakeFiles/Graf.dir/build.make:244: graf2d/graf/CMakeFiles/Graf.dir/src/TGaxis.cxx.o] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:51872: graf2d/graf/CMakeFiles/Graf.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ```; Interesting that this is still an issue after https://github.com/root-project/root/commit/800f97c0c64d7e3968d00d694e4f40dd8cd0ab3c. Not good :slightly_frowning_face: That has nothing to do with this PR, it's just an important observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15300#issuecomment-2068151207:40,message,messages,40,https://root.cern,https://github.com/root-project/root/pull/15300#issuecomment-2068151207,2,['message'],['messages']
Integrability,"From the cmake log in ROOT it shows:; ```; -- Clang version: 16.0.6; [...]; Compiler: AppleClang15; ```; Not sure which one to trust. Other libraries I am using are showing Clang15. . I bypassed the cmake issue using the `builtin_glew` suggestion. ; [cmake.log](https://github.com/root-project/root/files/14173548/cmake.log). Looking more closely I can see many error message as following. I am not sure about the origin of these lines.; ```; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; ```. Except this, there is no issue anymore. The most recent master doesn't have this white blank issue. ; Thank you for pointing the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14483#issuecomment-1928595346:368,message,message,368,https://root.cern,https://github.com/root-project/root/issues/14483#issuecomment-1928595346,1,['message'],['message']
Integrability,From the test results I learned that we already have a mechanism in ROOT to mark Python non-optional test dependencies:; https://github.com/root-project/root/commit/2917c6e7153c426507227d9fdba1937fca7535aa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15306#issuecomment-2069022427:106,depend,dependencies,106,https://root.cern,https://github.com/root-project/root/pull/15306#issuecomment-2069022427,2,['depend'],['dependencies']
Integrability,Given e.g. the comment by Jonas:. > I will probably have more comments later when working on connecting this to the RooMinimizer. What do we gain from merging this into 6.28? Do we expect users of this new interface already for 6.28?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11755#issuecomment-1357780600:206,interface,interface,206,https://root.cern,https://github.com/root-project/root/pull/11755#issuecomment-1357780600,1,['interface'],['interface']
Integrability,Giving an update on [this comment](https://github.com/root-project/root/issues/14553#issuecomment-1941552355): our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA:; ```; graph_nets; sonnet; ipywidgets (for JsMVA); ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14553#issuecomment-2067707416:208,depend,dependencies,208,https://root.cern,https://github.com/root-project/root/issues/14553#issuecomment-2067707416,1,['depend'],['dependencies']
Integrability,Going to a function doesn't work; At least the tests depend on REFLEX_GENERATE_DICTIONARY leaking `${gensrcdict}`; e.g.: roottest/cmake/modules/RoottestMacros.cmake; ```cmake; REFLEX_GENERATE_DICTIONARY(${dictionary} ${ARG_UNPARSED_ARGUMENTS}; SELECTION ${ARG_SELECTION}; ${reflex_pass_options}). add_library(${targetname_libgen} EXCLUDE_FROM_ALL SHARED ${gensrcdict}); ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-587558815:53,depend,depend,53,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-587558815,1,['depend'],['depend']
Integrability,"Good job, @j-mathe! All the changes of the tutorial look reasonable to me. Small remarks regarding naming conventions:; 1. PRs would usually trigger several machines to build ROOT on them and run all the ROOT tests on them (CI). Since the changes are only on comments, you should start the name of your PR/commit as `[skip-ci]`. This would prevent these machines from building/testing.; 2. Since the changes are very closely related to RDataFrame, it is advisable to specify in the name of the commit `[DF]`. So I would suggest a better name for your commit to be `[skip-ci][DF] Fix typos and grammar mistakes in df002 tutorials`. I changed the name of the PR to that. You can check how to rename a commit [here](https://docs.github.com/en/pull-requests/committing-changes-to-your-project/creating-and-editing-commits/changing-a-commit-message). Similar comment applies for the other tutorial fixes. Please change the name of the PR there (from the web browser), and also on the commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11006#issuecomment-1192525434:836,message,message,836,https://root.cern,https://github.com/root-project/root/pull/11006#issuecomment-1192525434,1,['message'],['message']
Integrability,"Good question, but unfortunately I have to admit I don't really know why. I didn't have that much time to investigate but needed a fix for 6.28 for which I'm already late. The TFoam class is quite fundamental to RooFit, and the memory increase has affected many users. All I had was this hint by valgrind when checked the reproducer in the commit message:; ```; Conditional jump or move depends on uninitialised value(s); at 0x402E09: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); by 0x501B33D: TDirectory::TDirectory() (in /usr/lib64/root/libCore.so.6.26.10); by 0x5816D81: TDirectoryFile::TDirectoryFile() (in /usr/lib64/root/libRIO.so.6.26.10); by 0x5833AF8: TFile::TFile(char const*, char const*, char const*, int) (in /usr/lib64/root/libRIO.so.6.26.10); by 0xE2D86A6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (in /usr/lib64/root/libCling.so.6.26.10); by 0xE2D9A17: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,; allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (in /usr/lib64/root/libCling.so.6.26.10); by 0x4FF098E: TROOT::InitInterpreter() (in /usr/lib64/root/libCore.so.6.26.10); by 0x4FF0C9E: ROOT::Internal::GetROOT2() (in /usr/lib64/root/libCore.so.6.26.10); by 0x510209C: ROOT::TGenericClassInfo::GetClass() (in /usr/lib64/root/libCore.so.6.26.10); by 0x90B67CA: TFoamCell::Class() (in /usr/lib64/root/libFoam.so.6.26.10); by 0x504BE7A: TRef::operator=(TObject*) (in /usr/lib64/root/libCore.so.6.26.10); by 0x90B126F: TFoamCell::Fill(int, TFoamCell*, TFoamCell*, TFoamCell*) (in /usr/lib64/root/libFoam.so.6.26.10); Uninitialised value was created by a stack allocation; at 0xE2D8106: TCling::LoadPCM(std::__cxx11::basic_string<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12061#issuecomment-1397463096:347,message,message,347,https://root.cern,https://github.com/root-project/root/pull/12061#issuecomment-1397463096,4,"['depend', 'message']","['depends', 'message']"
Integrability,"Got also hit by this issue. ; The following change in `/opt/homebrew/Cellar/root/6.30.02/share/root/cmake/ROOTConfig.cmake` (around line 131) seems to have worked for me. ```; if(ROOT_vdt_FOUND AND NOT TARGET VDT::VDT); if(ROOT_builtin_vdt_FOUND); function(find_builtin_vdt); # the function is to create a scope (could use block() but requires CMake>=3.25); set(CMAKE_PREFIX_PATH ${ROOT_INCLUDE_DIRS} ${ROOT_LIBRARY_DIR}); find_dependency(Vdt); endfunction(); find_builtin_vdt(); endif(); endif(); ```. If confirmed, could be integrated into the `ROOTConfig.cmake.in` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113#issuecomment-1907960204:526,integrat,integrated,526,https://root.cern,https://github.com/root-project/root/issues/14113#issuecomment-1907960204,1,['integrat'],['integrated']
Integrability,"Great regarding the 6.24. As for the interface, there are Unuran methods (HINV and NINV) that do not require PDF, only CDF. This is why I proposed a constructor which only sets the `fOwnFunc` and let all 3 xxDF functions be optional. I see there is a ctor accepting TF1 pointers that can be used in this case, but it sets unconditionally the `fOwnFunc`. With that in mind, my proposed ctor has to be:; ```cpp; TUnuranContDist(bool copyFunc);; ```; i.e. without a default value for copyFunc. So for the case when the user wants only CDF and not to copy it in TUnuranContDist, a new ctor or a method to set `fOwnFunc` is needed anyway. For the case where the user wants to set all 3 xxDF functions indeed the ctor is there, my point is just that the user code looks a bit ugly:; ```cpp; TUnuranContDist dist(pdf, &dpdf, false, true);; dist.SetCdf(cdf);; ```; compared to:; ```cpp; TUnuranContDist dist(pdf, dpdf, cdf, false, true);; ```; or:; ```cpp; TUnuranContDist dist(true);; dist.SetPdf(pdf);; dist.SetDpdf(dpdf);; dist.SetCdf(cdf);; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8196#issuecomment-849392582:37,interface,interface,37,https://root.cern,https://github.com/root-project/root/issues/8196#issuecomment-849392582,1,['interface'],['interface']
Integrability,"Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5474#issuecomment-629037999:41,message,message,41,https://root.cern,https://github.com/root-project/root/pull/5474#issuecomment-629037999,2,['message'],['message']
Integrability,"HI Rahul, thanks for the PR! Here is what I would do to get started with the missing bullet points:. 1. added tutorials. A tutorial that showcases the Taylor expansion feature is definitely welcome! I would show the 1D case, where you Taylor expand let's say a 4th degree polynomial at different orders and plot the Taylor expansions together with the original Polynomial. At 4th order, the Taylor expansion should match with the original. 2. added unit test. For sure we need a unit test for these new features. It's always good to start with some closure tests:; * check that a one dimensional RooPolyFunc wrapped in a PDF behaves the same as a RooPolynomial; * check that the Taylor expansion of a 2nd order 1D RooPolyFunc at 2nd order matches the original Polynomial; * same check as in the provious bullet point, but n-dimensional case (2D is enough). 3. analytical integral. Let's deal with this later, I still need to think more about this. We should start with the unit tests anyway. Let me know on Mattermost if you need any help with the unit tests or tutorials! In the meantime I will start reviewing the code in this PR and also make the suggestions necessary to make everything compile without error and warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9184#issuecomment-951757561:608,wrap,wrapped,608,https://root.cern,https://github.com/root-project/root/pull/9184#issuecomment-951757561,1,['wrap'],['wrapped']
Integrability,"Handler::Connect(long) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FCF7B48: XrdCl::Stream::EnableLink(XrdCl::PathID&) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FCF7DEC: XrdCl::Stream::Send(XrdCl::Message*, XrdCl::OutgoingMsgHandler*, bool, long) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD202FC: XrdCl::MessageUtils::SendMessage(XrdCl::URL const&, XrdCl::Message*, XrdCl::ResponseHandler*, XrdCl::MessageSendParams const&, XrdCl::LocalFileHandler*) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD2AC91: XrdCl::FileStateHandler::IssueRequest(XrdCl::URL const&, XrdCl::Message*, XrdCl::ResponseHandler*, XrdCl::MessageSendParams&) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD2E324: XrdCl::FileStateHandler::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned short, unsigned short, XrdCl::ResponseHandler*, unsigned short) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD27325: XrdCl::File::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, XrdCl::OpenFlags::Flags, XrdCl::Access::Mode, XrdCl::ResponseHandler*, unsigned short) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD274BC: XrdCl::File::Open(std::__cxx11::basic_string<char, std::char_t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759513859:1790,Message,Message,1790,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759513859,2,['Message'],"['Message', 'MessageSendParams']"
Integrability,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases; * Current; * std::shared_mutex; * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-742913420:13,depend,dependency,13,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-742913420,1,['depend'],['dependency']
Integrability,"Having the detailed list of includes is the superior solution, for many reasons: dependency tracking, smaller directories searched, IDEs. We don't pay per character in the compiler invocation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170#issuecomment-600571482:81,depend,dependency,81,https://root.cern,https://github.com/root-project/root/pull/5170#issuecomment-600571482,1,['depend'],['dependency']
Integrability,"Having trouble parsing what the actual error in from the error log. The log records failing with ""error MSB6006"" but not much else. Maybe @bellenot can help with some insight?. (This [SO thread](https://stackoverflow.com/questions/13118947/error-msb6006-cmd-exe-exited-with-code-1) indicates that it's maybe related to missing dependencies?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2983#issuecomment-439112535:327,depend,dependencies,327,https://root.cern,https://github.com/root-project/root/pull/2983#issuecomment-439112535,1,['depend'],['dependencies']
Integrability,"Hello @HannaOlvhammar,. the ``` don't work in commit messages (at least the terminal and github don't react to them). I would recommend to remove them to make the commit message more readable. They are good for markdown-enabled things like the discussion on github or mattermost, though. 🙂 ; You're doing great with the commit message BTW. It's very informative. Maybe don't promise to do xxx in the message, though. If you don't manage to do it for some reason, the message will for all eternity promise that you will.; You could e.g. say ""this change will allow for vectorising xxxx""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11171#issuecomment-1211679837:53,message,messages,53,https://root.cern,https://github.com/root-project/root/pull/11171#issuecomment-1211679837,5,['message'],"['message', 'messages']"
Integrability,"Hello @Harshalzzzzzzz !. In this case we need to inspect the model content and when we find two different nodes with the same name we emit a warning or an error message. ; This could be done when calling `pdf.fitTo`, i.e. before creating the RooNLLVar object or during its creation. ; See https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292. For inspecting the computational tree graph, you can look at functions like `RooAbsArg::servers()` or `RooAbsArg::getComponets`. Thank you for your offer to contribute to RooFit. Lorenzo. P.S. If you look for something easier, we have maybe this old issue, easier to fix and it is has some relation to the work you have done on the Pythonization. See https://sft.its.cern.ch/jira/browse/ROOT-2784",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7417#issuecomment-809977135:161,message,message,161,https://root.cern,https://github.com/root-project/root/issues/7417#issuecomment-809977135,1,['message'],['message']
Integrability,"Hello @Harshalzzzzzzz ,; basically what the description says: currently, if you construct a `TFile` directly (i.e. not going through the factory function `TFile::Open`) the constructor errors out if some protocol must be used to access the file (e.g. `root://` or `http://`) -- like in the first example in the description. The reason why this does not work is not very important, the point is that `TFile(""root://..."")` fails and the right thing to do instead is `TFile::Open(""root://..."")`. So if the TFile constructor fails with that ""file ... does not exist"" error, _before_ printing that error we want to check whether the filename contains `""://""` and if it does we want to print a _different_ error message that does not say ""file ... does not exist"" but instead it points users to using ""TFile::Open"" instead (as in the issue description). You can use a debugger or grep the source code for the error message text to see where the relevant logic resides.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10039#issuecomment-1091668804:204,protocol,protocol,204,https://root.cern,https://github.com/root-project/root/issues/10039#issuecomment-1091668804,3,"['message', 'protocol']","['message', 'protocol']"
Integrability,"Hello @amcdouga! Sorry for the late reply. Thanks for noticing the IO for the `RooMomentMorphND` doesn't work. That gave me the idea to just remove this class, because the code is almost an exact duplicate of the [RooMomentMorphFuncND](https://root.cern.ch/doc/master/classRooMomentMorphFuncND.html), only that the base class is `RooAbsReal` instead of `RooAbsPdf`. So if you want to have an object that is a RooAbsPdf and that you can write to a file, just use the RooMomentMorphFuncND wrapped in a [RooWrapperPdf](https://root.cern.ch/doc/master/classRooWrapperPdf.html).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11876#issuecomment-1378834704:487,wrap,wrapped,487,https://root.cern,https://github.com/root-project/root/issues/11876#issuecomment-1378834704,1,['wrap'],['wrapped']
Integrability,"Hello @couet, . thank you for looking into it. SWAN indeed swallows the message informing about the nan values. The following script should run (I forgot to include the numpy import before):; ```; import ROOT; import numpy as np. canvas = ROOT.TCanvas(f""test_canvas"", ""title"", 400, 400); canvas.Draw(); canvas.cd(). num_values = 5; g = ROOT.TGraph(num_values,; np.arange(num_values, dtype='float'),; np.full(num_values, fill_value=np.nan)); g.SetMarkerSize(2); g.SetMarkerStyle(2); g.DrawClone('AP'); ```. Running the script from the command line as you suggested indeed produces the expected error message:; ```; $ python3 nan.py; TCanvas::ResizePad:0: RuntimeWarning: Inf/NaN propagated to the pad. Check drawn objects.; TCanvas::ResizePad:0: RuntimeWarning: test_canvas height changed from 0 to 10; ```. Running the same code in a SWAN cell produces only the following message: ; ```; Welcome to JupyROOT 6.26/08; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12296#issuecomment-1438482858:72,message,message,72,https://root.cern,https://github.com/root-project/root/issues/12296#issuecomment-1438482858,3,['message'],['message']
Integrability,"Hello @guitargeek Sir, while Installing Root to my Ubuntu VM 18.04, during the building of the file ""cmake --build . -- -j3"" the build stops and shows this error every time at the 49% of the build. I have tried to start the process multiple times and even increase space in my Oracle VM but nothing seemed to work. CMake Error at /home/viren/Root CERN/root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-RelWithDebInfo.cmake:16 (message):; Command failed: 2. '/usr/bin/make' 'install'. See also. /home/viren/Root CERN/root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. CMakeFiles/AFTERIMAGE.dir/build.make:73: recipe for target 'AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install' failed; make[2]: *** [AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install] Error 1; CMakeFiles/Makefile2:280: recipe for target 'CMakeFiles/AFTERIMAGE.dir/all' failed; make[1]: *** [CMakeFiles/AFTERIMAGE.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 49%] Built target move_artifacts; [ 49%] Built target clang-tblgen; Makefile:151: recipe for target 'all' failed; make: *** [all] Error 2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8758#issuecomment-974903531:440,message,message,440,https://root.cern,https://github.com/root-project/root/issues/8758#issuecomment-974903531,1,['message'],['message']
Integrability,"Hello @hcmidt, discussed a bit with my colleagues about what we'd need to do in this PR to set a good precedent for the RooFit pythonizations. 1. We should better stick with the `CamelCase` instead casting to of `lower_case` with underscore. True, it's less pythonic, but it would also mean we'd have to duplicate the documentation for pyROOT with the new parameter names. If we keep the same argument names as in C++, the C++ documentation is still useful.; 2. Please extend your test such that it covers also the case where one mixes the C++-style arguments with the keyword arguments, e.g. `fitTo(self.data, Range=""sideband"", ROOT.RooFit.Save=True)`; 3. Rename the `test/rooabspdf` directory you created to `test/roofit`, otherwise it's a bit too granular; 4. Create also a `_roofit` subdirectory directory in the `ROOT/pythonization` directory where you put your `_rooabspdf.py ` file. The underscore at the beginning is to mark that this is not part of the ""public"" interface. I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7314#issuecomment-790082105:971,interface,interface,971,https://root.cern,https://github.com/root-project/root/pull/7314#issuecomment-790082105,1,['interface'],['interface']
Integrability,"Hello @sinnfashen, thank you very much for your PR!. I have rebased it on master, fixed the conflicts and ran your demo in `PTKDTree.C`. Unfortunately, depending on the number of `MAXN`, the code was either crashing, or the parallelization even resulted in a slowdown. As pointed out by @lmoneta and @dpiparo, to merge this it would be necessary to demonstrate a clear speedup in at least some usecases, and even better to show that these usecases also correspond to real-world problems. Since these concerns were not addressed and there was no further reply to the last comment of @lmoneta, I assume that you, @sinnfashen, have moved on from the project and I'll close this PR. Still, if you ever feel like playing with this again, and you can show that the parallelized algorithms performance scales well with the number of threads and gives the correct results, feel free to reopen this PR or open a new one!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2202#issuecomment-1808849990:152,depend,depending,152,https://root.cern,https://github.com/root-project/root/pull/2202#issuecomment-1808849990,2,['depend'],['depending']
Integrability,"Hello Hans, ; Thank you for your proposal. I think is a good improvement, the current situation I agree is a bit messy and what you propose is a good step forward. ; We should see if we do not enable too many messages in printlevel=1, which is often used.; I think also level 3 is used often (for example when fitting histograms in ROOT with the verbose option). In that case we might want to use instead level 2 and keep level 3 only for debugging. . Some work will also be needed to clean-up some of the debug messages. Thanks for opening this issue, ; Best regards. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421#issuecomment-697458482:209,message,messages,209,https://root.cern,https://github.com/root-project/root/issues/6421#issuecomment-697458482,2,['message'],['messages']
Integrability,"Hello Sergey,, Danillo. Thank you for your suggestions (that we took into consideration ), feedback and prompt response. There is a new suggestion on how to solve this issue. Please check:. <https://its.cern.ch/jira/browse/SPI-2532>; its.cern.ch<https://its.cern.ch/jira/browse/SPI-2532>; [X]<https://its.cern.ch/jira/browse/SPI-2532>. We will keep you informed.; Best regards,; Ilias. On 14 Mar 2024, at 09:32, Sergey Linev ***@***.***> wrote:. @cogevito<https://github.com/cogevito>. Can you try to install libbsd-dev on your node?. —; Reply to this email directly, view it on GitHub<https://github.com/root-project/root/issues/14958#issuecomment-1996852848>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADMB4TR5V47G7UK252MEENDYYFODFAVCNFSM6AAAAABEUNYYK6VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSOJWHA2TEOBUHA>.; You are receiving this because you were mentioned.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14958#issuecomment-1996872551:887,Message,Message,887,https://root.cern,https://github.com/root-project/root/issues/14958#issuecomment-1996872551,1,['Message'],['Message']
Integrability,"Hello Sergey,. I'm using version 3.7.3-1 of `nlohmann/json.hpp`. Here is the output from the apt -s install nlohmann-json3-dev command. ```; Reading package lists... Done; Building dependency tree ; Reading state information... Done; nlohmann-json3-dev is already the newest version (3.7.3-1).; 0 upgraded, 0 newly installed, 0 to remove and 36 not upgraded.; ```. Dear Bertrand,. I will definitely disable root7 and try to recompile ROOT. Thank you for this suggestion. With best regards,; Denys.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12492#issuecomment-1473294498:181,depend,dependency,181,https://root.cern,https://github.com/root-project/root/issues/12492#issuecomment-1473294498,1,['depend'],['dependency']
Integrability,"Hello both of you!; Thank you so much for the quick reply!; I went through my text again and didn't notice it repeated itself...! Sorry for that!. Considering the suggestion from @dpiparo , I have checked all the dependencies. Some I had to install, but now they are all in the system. I have tried to go through the cmake again and got the same problems. You suggest me to try from scratch again. I can do this simply by deleting the folders I have created for the installation and redo the process in the page ""build from source""?. I have tried the workaround suggested by @ferdymercury ! Firstly I have tried the snap version and nothing happened. Same errors. Now I have downloaded the pre-compiled version and I can use it, open canvases and browsers with no problem. I will run some macros to compare with the outputs I had previously and check if everything is according to what I had. Eventhough it is already working, I am willing to try and build it from source if that can help you somehow figuring out some kind of challanges you would like to improve in further versions! Please let me know if I can be of any use!. Thank you very much once again! It is always amazing to receive this kind of comprehensible support :))))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479#issuecomment-1916915766:213,depend,dependencies,213,https://root.cern,https://github.com/root-project/root/issues/14479#issuecomment-1916915766,2,['depend'],['dependencies']
Integrability,Hello. Sorry to hear you experienced this issue. A configuration warning seems suspicious; ```; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):; Cannot determine location of C++ headers for runtime.; ```; Is any other ROOT version or any other series of CMake configuration working on your system?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337#issuecomment-1890406125:219,MESSAGE,MESSAGE,219,https://root.cern,https://github.com/root-project/root/issues/14337#issuecomment-1890406125,1,['MESSAGE'],['MESSAGE']
Integrability,Here an example from the failure above how the diagnostics look like:. ```; Full path to requirements.txt: /home/sftnight/build/workspace/root-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'numba>=0.47.0' distribution was not found and is required by the application; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654701951:211,depend,dependencies,211,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654701951,1,['depend'],['dependencies']
Integrability,Here are the failing tests (without the `-fno-threadsafe-statics` flag):; ```; 7 - gtest-core-meta-test-testHashRecursiveRemove (Failed); 104 - gtest-tree-treeplayer-test-treetreeplayertestUnit (Failed); 105 - gtest-tree-treeplayer-test-dataframe-friends (Failed); 106 - gtest-tree-treeplayer-test-dataframe-alias (Failed); 107 - gtest-tree-treeplayer-test-dataframe-cache (Failed); 108 - gtest-tree-treeplayer-test-dataframe-callbacks (Failed); 110 - gtest-tree-treeplayer-test-dataframe-interface (Failed); 112 - gtest-tree-treeplayer-test-dataframe-regression (Failed); 113 - gtest-tree-treeplayer-test-dataframe-simple (Failed); 114 - gtest-tree-treeplayer-test-dataframe-snapshot (Failed); 116 - gtest-tree-treeplayer-test-datasource-more (Failed); 125 - tutorial-dataframe-tdf001_introduction (Failed); 126 - tutorial-dataframe-tdf002_dataModel (Failed); 127 - tutorial-dataframe-tdf003_profiles (Failed); 128 - tutorial-dataframe-tdf004_cutFlowReport (Failed); 129 - tutorial-dataframe-tdf005_fillAnyObject (Failed); 130 - tutorial-dataframe-tdf006_ranges (Failed); 131 - tutorial-dataframe-tdf007_snapshot (Failed); 132 - tutorial-dataframe-tdf008_createDataSetFromScratch (Failed); 133 - tutorial-dataframe-tdf009_FromScratchVSTTree (Failed); 134 - tutorial-dataframe-tdf010_trivialDataSource (Failed); 135 - tutorial-dataframe-tdf011_ROOTDataSource (Failed); 136 - tutorial-dataframe-tdf012_DefinesAndFiltersAsStrings (Failed); ```; With errors like:; ```; 131: Processing C:/Users/bellenot/git/master/tutorials/dataframe/tdf003_profiles.C...; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_header' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of _Init_thread_header; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607#issuecomment-364363584:489,interface,interface,489,https://root.cern,https://github.com/root-project/root/pull/1607#issuecomment-364363584,2,['interface'],['interface']
Integrability,"Here is a relevant [issue](https://gitlab.kitware.com/cmake/cmake/-/issues/17735) where this is discussed more in depth. One of the [comments](https://gitlab.kitware.com/cmake/cmake/-/issues/17735#note_487572) in this issue explains the rationale behind overriding `find_package` quite well. If there is a better solution that can work the way the current solution does (i.e. works also for LLVM without having to change its calls to `find_package(ZLIB)`, for example), we can implement it. However, so far I have not found a another way to do it. Maybe now that the required version of CMake is newer than 3.11, we may be able to improve things by using the [FetchContent](https://cmake.org/cmake/help/latest/module/FetchContent.html) module. It may also be possible to use [CMAKE_DISABLE_FIND_\<PackageName\>](https://cmake.org/cmake/help/v3.10/variable/CMAKE_DISABLE_FIND_PACKAGE_PackageName.html) to skip checking for packages if that doesn't force packages to be considered not found when `<PackageName_FOUND>` is then also set by hand. The reality, though, is that CMake still kinda sucks for managing optionally bundled dependencies like ROOT wants to support. As for the undocumented nature of the feature, it's sad but, like the [CDash test measurements](https://cmake.org/cmake/help/latest/command/ctest_test.html?#additional-test-measurements) that were undocumented for a long time, if you offer it, people will try to use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633#issuecomment-898406007:1127,depend,dependencies,1127,https://root.cern,https://github.com/root-project/root/issues/8633#issuecomment-898406007,2,['depend'],['dependencies']
Integrability,"Here is a target vs. non-target more realistic example:. * [UseFile based](https://github.com/GooFit/zachFitRooFit/blob/master/CMakeLists.txt); * [Target based - after patch](https://github.com/GooFit/zachFitRooFit/blob/newroot/CMakeLists.txt). You'll see that the target based method is now as readable and clean as the non-target based approach, and being target based, scales to more complicated examples and libraries much more gracefully. Also, since the targets already solve dependencies, the user does not need to list `RooFitCore` in the target based version, while missing that in the UseFile version is a symbol missing error when compiling!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-385680755:482,depend,dependencies,482,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-385680755,1,['depend'],['dependencies']
Integrability,"Here is an example comparing the new options ""SAME0"" and ""SAMES0"" (on the right side) to the default one ""SAME"" and ""SAMES"" (on the left) [test1.C.txt](https://github.com/root-project/root/files/2680271/test1.C.txt), the options are printed on the plots. And here is how they look from my locally complied version:; ![c1](https://user-images.githubusercontent.com/17641689/50006820-f6549000-ffe9-11e8-8345-232bce21326e.png). Note that, even the ""default"" options, there is a fix applied to show the correct range in the palette axises.; Without this fix, i.e, in the root-6.14/08, they look this:; ![c2](https://user-images.githubusercontent.com/17641689/50007174-10db3900-ffeb-11e8-8685-61320aea8103.png). I actually forgot to update the help document. Sorry...shall I add it in a new commit, or maybe you prefer to do it to make sure it's well integrated with other parts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3150#issuecomment-447334380:846,integrat,integrated,846,https://root.cern,https://github.com/root-project/root/pull/3150#issuecomment-447334380,1,['integrat'],['integrated']
Integrability,"Here is the current status:; ```; C:\root-dev\build\x64\relwithdebinfo>ctest -VV -C RelWithDebInfo -R gh-14462-gh14462regression; UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl; Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl; Add coverage exclude regular expressions.; UpdateCTestConfiguration from :C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl; Parse Config file:C:/root-dev/build/x64/relwithdebinfo/DartConfiguration.tcl; Test project C:/root-dev/build/x64/relwithdebinfo; Constructing a list of tests; Ignore test: test-tcollex; Ignore test: roottest-cling-parsing-semicolon; Ignore test: roottest-root-rint-TabCom; Ignore test: roottest-root-rint-BackslashNewline; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 2338; Start 2338: gtestC--root-dev-git-roottest-root-tree-readrules-gh-14462-gh14462regression. 2338: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462/RelWithDebInfo/gh14462regression.exe"" ""-DCWD=C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462"" ""-DSYS=C:/root-dev/build/x64/relwithdebinfo"" ""-P"" ""C:/root-dev/build/x64/relwithdebinfo/RootTestDriver.cmake""; 2338: Working Directory: C:/root-dev/build/x64/relwithdebinfo/roottest/root/tree/readrules/gh-14462; 2338: Environment variables:; 2338: ROOT_HIST=0; 2338: Test timeout computed to be: 1500; 2338: Running main() from C:\root-dev\build\x64\relwithdebinfo\googletest-prefix\src\googletest\googletest\src\gtest_main.cc; 2338: [==========] Running 1 test from 1 test suite.; 2338: [----------] Global test environment set-up.; 2338: [----------] 1 test from ReadRules; 2338: [ RUN ] ReadRules.CustomReadRuleWithSpace; 2338: Error in TCling::LoadPCM ROOT PCM C:\root-dev\build\x64\relwithdebin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9354#issuecomment-2370611327:882,depend,dependency,882,https://root.cern,https://github.com/root-project/root/issues/9354#issuecomment-2370611327,2,['depend'],['dependency']
Integrability,"Here's a full log from `valgrind`, maybe @vgvassilev has an idea? [ppc64-valgrind.log](https://github.com/root-project/root/files/6545182/ppc64-valgrind.log) I just verified, there are no errors reported on x86. What caught my eye is:; ```; Conditional jump or move depends on uninitialised value(s); at 0x128E6D58: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:854); ```; and; ```; Conditional jump or move depends on uninitialised value(s); at 0x128E6ECC: clang::Parser::TryAltiVecVectorToken() (Parser.h:865); ```; which are two methods specific to AltiVec / PowerPC, so it's possible that there's a problem related to the platform...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-848589093:266,depend,depends,266,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-848589093,2,['depend'],['depends']
Integrability,"Here's an explanation that at least satisfies me: I added a `module->dump();` to `IncrementalJIT::addModule()` so that I can see what code is handed over to LLVM when just starting `./bin/root -q -l`. My understanding is that this comes from the dicts that are loaded on startup. Looking for `GetPoolSize`, here's the relevant part of the LLVM IR:; ```llvm; ; Function Attrs: noinline uwtable; define i32 @_ZNK4ROOT8Internal9TExecutor11GetPoolSizeEv(%""class.ROOT::Internal::TExecutor""*) #0 align 2 {; ; contains calls to; %seq = call i32 @_ZNK4ROOT19TSequentialExecutor11GetPoolSizeEv(%""class.ROOT::TSequentialExecutor""* %9); %thread = call i32 @_ZNK4ROOT15TThreadExecutor11GetPoolSizeEv(%""class.ROOT::TThreadExecutor""* %13); %process = call i32 @_ZNK4ROOT16TProcessExecutor11GetPoolSizeEv(%""class.ROOT::TProcessExecutor""* %17); }. ; Function Attrs: noinline nounwind uwtable; define linkonce_odr i32 @_ZNK4ROOT19TSequentialExecutor11GetPoolSizeEv(%""class.ROOT::TSequentialExecutor""*) #1 comdat align 2 {; ; ...; }. declare i32 @_ZNK4ROOT15TThreadExecutor11GetPoolSizeEv(%""class.ROOT::TThreadExecutor""*) #2; ```. So the dict contains the definition of `Executor::GetPoolSize()`, which is not `inline`, and references `TThreadExecutor::GetPoolSize()` defined in `libImt.so`, but obviously not in the dict. This symbol remains unresolved during JIT, leading to the error message we're seeing. Notice that `TSequentialExecutor::GetPoolSize()` is `linkonce_odr` due to being `inline`. When adding the `inline` keyword to `TExecutor::GetPoolSize()` (thanks Philippe for the less intrusive proposal), all these functions disappear from the loaded `llvm::Module` because unused `linkonce_odr` are dropped (recursively) before passing to JIT. So in essence I think this is not about symbols not being exported or inlined by the compiler, but what we need is the semantics of `inline` that the function can be dropped from the `llvm::Module`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7033#issuecomment-760022478:1369,message,message,1369,https://root.cern,https://github.com/root-project/root/pull/7033#issuecomment-760022478,1,['message'],['message']
Integrability,"Here's simpler reproducer for https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154832/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/ ; ```; ❯ cat Demo.C; void Demo() {; auto X = ROOT::TSeqI(42);; } ; ```. The error message is:; ```. Processing Demo.C...; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:67:10: error: instantiation of 'ROOT::TSeq<int>' is different in different modules; class TSeq {; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1910:13: error: 'std::__make_signed_selector<int, true, false>::__type' from module 'std.type_traits' is not present in definition of 'std::__make_signed_selector<int, true, false>' provided earlier; using __type; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1901:11: note: definition has no member '__type'; class __make_signed_selector;; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: error: 'std::make_signed<int>' has different definitions in different modules; defined here; struct make_signed; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: note: definition in module 'std.type_traits' is here; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int)'; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/Demo.C:2:12: note: in instantiation of template class 'ROOT::TSeq<int>' requested here; auto X = ROOT::TSeqI(42);; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: note: previous declaration is here; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253760320:266,message,message,266,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320,2,['message'],['message']
Integrability,"Hey Lorenzo!. Certainly, I will start Right now. This PR is considerably more complex and currently includes copy pasted parts from the merged PRs (I had to do it for temporary tests before we had merged them as the convolutional layer depends on them). As a result a simple rebase and conflict fix would be simple, but would also leave a very messy history. What I can do instead is start a new branch from the updated master and carefully choose the new changes with better messages. I should be able to do that within 1-2 days and it will yield a clean history. Unless w are in a big hurry I plan to go with th me second approach but please let me know if you prefer the first one!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2216#issuecomment-402624497:236,depend,depends,236,https://root.cern,https://github.com/root-project/root/pull/2216#issuecomment-402624497,4,"['depend', 'message']","['depends', 'messages']"
Integrability,"Hey, can you return back the line because *_.rdicts are installing somewhere else following two commit messages https://github.com/root-project/root/commit/5cad428dc71929b9f4c202fadfe5934513cd978a and https://github.com/root-project/root/commit/8afa8841936b35167515789f40934d660c6455ab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4751#issuecomment-573055861:103,message,messages,103,https://root.cern,https://github.com/root-project/root/pull/4751#issuecomment-573055861,1,['message'],['messages']
Integrability,"Hi - this is an excellent start but I'd like to offer a few considerations given that not everyone uses root files these days. Specifically, friend trees are not a widely accepted concept outside of TTrees and RNtuple. It is, however, easy to abstract away from this so that this metadata specification is more universal. In coffea, we didn't go all the way to formalizing it in a schema since there are many details but you can see the basic validation we do here:; https://github.com/CoffeaTeam/coffea/blob/master/coffea/processor/executor.py#L1353; We allow forms like:; ```; fileset = { ""dataset"" : [""some"", ""list"", ""of"", ""files""], ...}; # and; fileset = { ""dataset"": { ""files"": [""file1"", ""file2"", ...], ""treename"": ""Events"", ""metadata"": { ""stuff"": ""about stuff""}, ...}, { .... } }; ```; depending on user need.; I think optional and union types are very convenient here since not every user will need or want to specify all components of the full schema on each use (but uniformizing the description when needed is very important). . To repeat from above here is the suggested metadata requirements (with annotations).; """"""; This new standard schema should support a few key features of the definition of a dataset:. * Specify groups of several input files, each with associated metadata; * Decide what term to use instead of ""groups"" (dataset is probably best); * Cover TTree but plan for RNTuple support (metadata should not care about file formats, your program does); * Should support friend trees per group *** (see below); * Should support entry ranges per group (why? this makes little operational sense from the POV of an analyst); * No indexed friend trees (at least for now) *** (also); """"""; This specification of requirements mixes things that are describing the data (metadata) and and how to react to it (something in a program, not part of the schema). I believe a clean factorization along these lines is very important to creating a well-adopted schema if you intend to develop a ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624#issuecomment-1293743624:792,depend,depending,792,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1293743624,2,['depend'],['depending']
Integrability,Hi ; The PR looks good to me. Thank you for this nice contribution !; The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632#issuecomment-708545648:119,integrat,integrator,119,https://root.cern,https://github.com/root-project/root/pull/6632#issuecomment-708545648,1,['integrat'],['integrator']
Integrability,"Hi @AlkaidCheng ,. Thanks for reaching out! I am not sure I understand where the problem stands. You are purposely injecting a different namespace at runtime, so I don't see how the package can act in order to prevent the wrong namespace being used. The error is unfortunately not clear as to which call site is provoking the lookup to `ROOT.Math.Internal`. Judging by your short snippet, I can imagine that one place could be [here](https://github.com/root-project/root/blob/a29e81cb1cd217ca2096a44d01fb273e085b4e8b/bindings/experimental/distrdf/python/DistRDF/HeadNode.py#L457), but as you can see the correct full namespace is being called there. Can you give more context as to what is your use case so I can better understand how to help?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15035#issuecomment-2015329409:115,inject,injecting,115,https://root.cern,https://github.com/root-project/root/issues/15035#issuecomment-2015329409,2,['inject'],['injecting']
Integrability,"Hi @Axel-Naumann ,. >IEEE 754 brings defined behavior to ""degenerate"" (not in the IEEE 754 sense) cases. That is true. But does not help practically. It is better that a program (e.g. with complicated integration) fails with FPE in 30 minutes than ends successfully in a week and delivers a well-defined result '-NaN'. Or, even worse, produces a result that looks fine but is incorrect and then user (e.g. me) will spend some days to understand where the problem is. > as the optimizer might change fp operations. Yes, GCC tries to keep them ""fp-safe"" but that might change in any of the upcoming versions. As far as I understand, very formally clang did nothing wrong there, it is just GCC that tried to be a bit smarter -- in the code I've copied from TColor all the used constants should be in float and not in (standard) double. No FPE in this case. ; So one can blame the code, but because mixing floats and double constants is a common practice I would blame the compiler. . >is there something left to be clarified. Ok. As far as I understood, changing the flags for the release builds is not an option, right?; If so, would a patch that assures all constants in TColor::RGB2HLS are float an acceptable solution? I can do that. Best regards,; Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677#issuecomment-713589532:201,integrat,integration,201,https://root.cern,https://github.com/root-project/root/issues/6677#issuecomment-713589532,1,['integrat'],['integration']
Integrability,"Hi @Axel-Naumann, I let @stwunsch have the last word, but wouldn't something like; ```.cpp; std::string TInterpreter::PrintValue(string_view, void*); ```; the one we are looking for?; Actually the interface above can be ""emulated"" by a function done more or less like this:; ```.cpp; std::string MyPrintValue(string_view clName, void *obj); {; std::string res;; std::sstream printValueInvocation;; printValueInvocation << ""*("" << &res << "") = cling::printValue(( "" << clName << ""*) "" << obj << "");"";; gInterpreter->Calc(printValueInvocation.str.c_str());; return res;; }; ```; i.e. invoking the value printing in the interpreted world to fill a string built in the compiled world which is then returned.; It's then like the value has been printed at the ROOT prompt, but instead its value has been captured and reprinted by Python.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-392606646:197,interface,interface,197,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-392606646,1,['interface'],['interface']
Integrability,"Hi @HannaOlvhammar and @guitargeek,. the things you discussed in the review are great, but I would recommend a few changes in commit messages in addition. Two examples:; `replaced loop -->`; ```; [RF] Modernise a loop in RooXXX; ```. Or:; ```; test; forgot to save parenthesis; ```; *Just an example, I'm not saying that it applies for this commit:*; ```; [RF] Improve type safety using static_range_cast. The previous loop was using C-style casts for all items. Now, static_cast; is employed for all elements. ; ```; or something like that. Make sure that your first sentence is short (about 80 characters) for git's short preview, include an empty line, and then discuss details (if necessary). Have a look into `git rebase -i` to beautify the commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10947#issuecomment-1181672850:133,message,messages,133,https://root.cern,https://github.com/root-project/root/pull/10947#issuecomment-1181672850,1,['message'],['messages']
Integrability,"Hi @Harshalzzzzzzz ,; ROOT has a high-level data analysis interface called [RDataFrame](https://root.cern/doc/master/classROOT_1_1RDataFrame.html), you can take a look at the docs and try reading and running some of the tutorials [here](https://root.cern/doc/master/group__tutorial__dataframe.html). `RDataFrame` returns results wrapped in the [RResultPtr](https://root.cern/doc/master/classROOT_1_1RDF_1_1RResultPtr.html) type, through which we implement lazy execution (data processing is triggered when a user accesses the contents of a `RResultPtr`, _not_ when they request the result). RResultPtr has interface and semantics similar to [std::shared_ptr](https://en.cppreference.com/w/cpp/memory/shared_ptr), but currently it's missing a way to release ownership of its contents. `RResultPtr<T>::Release` is a simple method that would mimic the semantics of `std::shared_ptr::release`: it must return a `T*` and empty the `RResultPtr`. What needs to be done concretely:. - [x] add the `RResultPtr::Release` method in RResultPtr.hxx. It should be implemented in terms of `fObjPtr.release()` and it should also set `fActionPtr` and `fLoopManager` to null; - [x] add tests for the feature in `tree/dataframe/test/dataframe_resptr.cxx`, in particular making sure that `Release` and the ResultPtr's move-constructor have consistent behavior; - [x] add logic to the current method `RResultPtr::GetValue` to throw an exception if it's called on a null `RResultPtr`. Thank you in advance for any contribution, and feel free to ask more questions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7047#issuecomment-771507725:58,interface,interface,58,https://root.cern,https://github.com/root-project/root/issues/7047#issuecomment-771507725,6,"['interface', 'wrap']","['interface', 'wrapped']"
Integrability,"Hi @MrCarroll!; Thanks for considering this. The new distributed RDataFrame python module will support Apache Spark as a backend for distributing applications to a cluster of nodes. Through Spark, it will depend on Java and py4j. But rather than required, these are optional dependencies restricted to the python runtime of that specific part of ROOT. Users that do not whish to use distributed RDataFrame may turn the new build option OFF, furthermore if the dependencies are not installed the option will be switched OFF during the build process automatically (or it will trigger a configuration error only if the option `fail-on-missing` is enabled). That said, I believe you are correct in pointing out the dependencies section of our website. I will make sure to explain these optional dependecies there, along with the release notes and the tutorials that will follow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7406#issuecomment-793505307:205,depend,depend,205,https://root.cern,https://github.com/root-project/root/pull/7406#issuecomment-793505307,5,['depend'],"['depend', 'dependecies', 'dependencies']"
Integrability,"Hi @ShamrockLee , specifying a binning for the histogram is often better than disabling multi-threading (which potentially implies a large performance decrease), but yes that also works :D . The fundamental problem here is the lack of a good multi-thread auto-binning algorithm that does not require synchronization between threads (which we want to avoid at all costs in order to scale well to large amounts of cores and large amounts of histograms produced).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6676#issuecomment-937759611:300,synchroniz,synchronization,300,https://root.cern,https://github.com/root-project/root/issues/6676#issuecomment-937759611,1,['synchroniz'],['synchronization']
Integrability,"Hi @ShamrockLee , thank you for opening this, the request makes absolute sense, but this might be a bit complicated for multi-thread Snapshots, where we need to write to the file from multiple threads and to do so we have to wrap the TFile in a `unique_ptr` and pass it to `TBufferMerger` (which would then close the file when it's done..). Can you elaborate on your usecase a bit more please? Why do you have the file where Snapshot writes already open, and why is it an annoyance to reopen it after Snapshot is done? Are you writing to the TDirectory before you pass it to Snapshot, or do you have it open in read mode?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9225#issuecomment-957961345:225,wrap,wrap,225,https://root.cern,https://github.com/root-project/root/issues/9225#issuecomment-957961345,1,['wrap'],['wrap']
Integrability,"Hi @ShirinGolpayeganiCern ,; RDataFrame should print errors and also exit with an error status for the case you describe, is that not the case for you?. I tried to reproduce the problem but I get a noisy error:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main() {; {; ROOT::RDataFrame(10); .Define(""x"", [] { return 1; }); .Define(""y"", [] { return 1; }); .Snapshot(""t"", ""f1.root"");. ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Snapshot(""t"", ""f2.root"");. ROOT::RDataFrame(10); .Define(""x"", [] { return 1; }); .Define(""y"", [] { return 1; }); .Snapshot(""t"", ""f3.root"");; }. ROOT::EnableImplicitMT();; ROOT::RDataFrame df(""t"", {""f1.root"", ""f2.root"", ""f3.root""});; df.Snapshot(""t"", ""fmerged.root"");; }; ```. yields:. ```; ~/S/w/gh9366 rootcompile repro.cpp && ./repro; g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs); Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called y. You could check with TTree::Print() for available branches.; terminate called after throwing an instance of 'std::runtime_error'; what(): An error was encountered while processing the data. TTreeReader status code is: 6; fish: Job 1, './repro' terminated by signal SIGABRT (Abort); ```. As RDataFrame does not support processing disappearing/appearing branches (in Snapshots or any other method) everything seems to be working as expected here. I'd like to figure out why your colleagues don't see these error messages and the exception being thrown, but I would need help on your side to reproduce the issue. Cheers,; Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9366#issuecomment-1006422425:1458,message,messages,1458,https://root.cern,https://github.com/root-project/root/issues/9366#issuecomment-1006422425,1,['message'],['messages']
Integrability,"Hi @TomasDado , thanks for the report. We started integrating Ubuntu 24.10 (#16611) and confirm that with system packages the compilation is successful, even if some debugging is still needed for a few tests - you should be able to use xrootd and davix from the system.; We'll come up with a solution for clad and the builtins soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16654#issuecomment-2408386071:50,integrat,integrating,50,https://root.cern,https://github.com/root-project/root/issues/16654#issuecomment-2408386071,1,['integrat'],['integrating']
Integrability,"Hi @VanyaBelyaev ,; I ran your reproducer with LCG97apython3(ROOT 6.20/06) and LCG98python3(ROOT 6.22/00).; With the latter it seems that the call to `dill.dumps` is executed but I get a different error with a long stacktrace, I report the main parts:; ```; ...; input_line_38:16:29: error: allocating an object of abstract class type 'TInterpreter'; *ret = new (arena) TInterpreter[nary];; ^; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ...; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: TInterpreter; Error in <TClass::New>: cannot create object of class TInterpreter; Error in <TBufferFile::ReadObject>: could not create object of class TInterpreter; TBufferFile::WriteObjectAny:0: RuntimeWarning: since TROOT has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it. <class cppyy.gbl.TH1D at 0x560bc237aa20>. Error in atexit._run_exitfuncs:; Traceback (most recent call last):; File ""/home/vpadulan/Programs/rootproject/rootinstall/v6-22-00-patches/lib/ROOT/__init__.py"", line 119, in cleanup; backend.gROOT.EndOfProcessCleanups(); ReferenceError: attempt to access a null-pointer; ```. The line `<class cppyy.gbl.TH1D at 0x560bc237aa20>` is there because I added a print to your reproducer just to check that `dill.loads` is executed. Actually this is the simplest command to reproduce the same stacktrace:. ```; python -c ""import ROOT; import dill; print(type(dill.loads(dill.dumps(ROOT.TH1D()))))""; ```. So it's possible that something in the new pyroot (default since 6.22) fixes the `dill` issue but triggers this other error.; @etejedor any thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370#issuecomment-696687077:530,wrap,wrapper,530,https://root.cern,https://github.com/root-project/root/issues/6370#issuecomment-696687077,2,['wrap'],['wrapper']
Integrability,"Hi @VanyaBelyaev!. I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`?. And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this.; Thanks a lot, I hope we can fix this issue quickly!. Cheers,; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474#issuecomment-864056089:375,interface,interface,375,https://root.cern,https://github.com/root-project/root/issues/8474#issuecomment-864056089,1,['interface'],['interface']
Integrability,"Hi @VanyaBelyaev, thanks for posting about this!. As explained in [this PR](https://github.com/root-project/root/pull/11909/files) and later also dicussed in [this forum post](https://root-forum.cern.ch/t/retreiving-the-calculation-strategy-of-a-roonll/55715/2), saving test statistics objects to ROOT files like `RooNLLVar` is now prohibited since ROOT 6.28. It only technically seemed to work without error, but in fact the read-back RooNLLVars are corrupted and give wrong results when you read them back even for simple Gaussian cases, as I showed in the description of the linked PR. This and other reasons lead us to the decision to disallow the IO of `RooNLLVar` and other test statistics classes. From your warnings and error messages, it seems like you're trying to do IO of the RooNLLVar. Is there a way you can avoid this in your workflow? As I said it's not allowed anymore and in older ROOT versions it was not reliable. What people usually do is to save the pdf and the datasets in a RooWorkspace, and maybe a `ModelConfig` to simplify the NLL creation when reading back the data and pdf. Is that not an option for your?. Certainly I was not expecting that the removal of this accidental and buggy IO feature would cause some friction with some users, so I'm happy to help you finding an alternative and better solution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13280#issuecomment-1644053557:734,message,messages,734,https://root.cern,https://github.com/root-project/root/issues/13280#issuecomment-1644053557,2,['message'],['messages']
Integrability,"Hi @aandvalenzuela, unfortunately I am not allowed to run the reproducer:; ```; Singularity> cmsRun /cvmfs/cms-ib.cern.ch/week1/el8_amd64_gcc11/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-08-07-2300/src/Alignment/OfflineValidation/test/inspectData_cfg.py unitTest=True trackCollection=ALCARECOTkAlCosmicsCTF0T; adding the max pT filter; 16-Aug-2023 08:33:46 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root; 16-Aug-2023 08:33:47 CEST Initiating request to open file root://xrootd-cms.infn.it//store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root; ----- Begin Fatal Exception 16-Aug-2023 08:33:48 CEST-----------------------; An exception of category 'FallbackFileOpenError' occurred while; [0] Constructing the EventProcessor; [1] Constructing input source of type PoolSource; [2] Calling RootInputFileSequence::initTheFile(); [3] Calling StorageFactory::open(); [4] Calling XrdFile::open(); Exception Message:; Failed to open the file 'root://xrootd-cms.infn.it//store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root'; Additional Info:; [a] Calling RootInputFileSequence::initTheFile(): fail to open the file with name root://eoscms.cern.ch//eos/cms/store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root; [b] Input file root://xrootd-cms.infn.it//store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root could not be opened.; [c] XrdCl::File::Open(name='root://xrootd-cms.infn.it//store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root', flags=0x10, permission",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429#issuecomment-1680042106:1126,Message,Message,1126,https://root.cern,https://github.com/root-project/root/issues/13429#issuecomment-1680042106,1,['Message'],['Message']
Integrability,"Hi @amadio . This PR breaks the Cuda installation. We don't have Cuda integration builds, so can you please check it or notify me before merging it so I can check it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3446#issuecomment-467839862:70,integrat,integration,70,https://root.cern,https://github.com/root-project/root/pull/3446#issuecomment-467839862,1,['integrat'],['integration']
Integrability,"Hi @amadio! I thought we had addressed this problem by making the unreleased `zeromq` interface only a dependency at ROOT build time, and the libraries are linked statically against this unreleased `zeromq` library. So it should not matter what is installed on the system, as long as the builtins are used for building. What exactly is the problem you have at configuration times in these LCG builds? I can't see the full log. I hope it's just one of your configurations checks that doesn't work in your environment and we can fix that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-981734381:86,interface,interface,86,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981734381,2,"['depend', 'interface']","['dependency', 'interface']"
Integrability,"Hi @amadio, I think I found the problem. We simply need to add dependencies on libVecOps.so. For the dependency of PyROOT on VecOps, we can discuss a solution together with @etejedor. I have an idea on how to solve this relying on the fact that a TVec has the same layout of a vector with a custom allocator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1896#issuecomment-383410777:63,depend,dependencies,63,https://root.cern,https://github.com/root-project/root/pull/1896#issuecomment-383410777,4,['depend'],"['dependencies', 'dependency']"
Integrability,"Hi @amadio, the situation also changed a bit because we deprecated `xproofd`, which still depended on xrootd 4. I think we should just assume now that XRootD will be at least version 5, since version 4 is EOL for two years already and we have no non-deprecated featured depending on XRootD 4. @andresailer, would this fix your issues?; * https://github.com/root-project/root/issues/12631; * https://github.com/root-project/root/issues/11750. @amadio, does that make sense from the XRootD perspective?. @Axel-Naumann, what do you think? This does add some extra step when we want to resurrect the XRootD 4 dependent features, but this would not be easy anyway (if they even work with eos 4 also being EOL)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13752#issuecomment-1790570878:90,depend,depended,90,https://root.cern,https://github.com/root-project/root/pull/13752#issuecomment-1790570878,3,['depend'],"['depended', 'dependent', 'depending']"
Integrability,"Hi @aphecetche , we will try and integrate it if it works. Thanks a lot!; @gen740 maybe you can also give it a try and let us know?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113#issuecomment-1907991061:33,integrat,integrate,33,https://root.cern,https://github.com/root-project/root/issues/14113#issuecomment-1907991061,1,['integrat'],['integrate']
Integrability,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly.; * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4953#issuecomment-583762217:335,depend,depend,335,https://root.cern,https://github.com/root-project/root/pull/4953#issuecomment-583762217,4,['depend'],"['depend', 'depends']"
Integrability,"Hi @bellenot ,. > it might be an issue with Clang itself. That is exactly the point. clang produces wrong math in libraries/executables with anything higher than -O1. That affects at least some routines in ROOT. The code I've posted above is a standalone code, despite it is based on code from ROOT. On the ROOT side one can only change the compilation flags for clang in the official releases. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677#issuecomment-712937528:194,rout,routines,194,https://root.cern,https://github.com/root-project/root/issues/6677#issuecomment-712937528,1,['rout'],['routines']
Integrability,"Hi @bellenot, Hi @Axel-Naumann,. :-(. [ 77%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o; [ 77%] Linking CXX executable src/rootcling_stage1; [ 77%] Built target MetaCling; Scanning dependencies of target Cling; [ 77%] Linking CXX shared library ../../../lib/libCling.so; /usr/bin/ld: cannot find -lcladPlugin; /usr/bin/ld: cannot find -lcladDifferentiator; collect2: error: ld returned 1 exit status; gmake[2]: *** [core/metacling/src/CMakeFiles/Cling.dir/build.make:193: lib/libCling.so] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:26939: core/metacling/src/CMakeFiles/Cling.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; [ 77%] Built target rootcling_stage1; gmake: *** [Makefile:152: all] Error 2. please switch off clad on linker level, too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-871995878:239,depend,dependencies,239,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-871995878,1,['depend'],['dependencies']
Integrability,"Hi @bluehood , this PR was meant to trigger discussion and I appreciate a lot the idea of a `DataDescription` config object. I think the current proposal needs to be abandoned and some brain power needs to be invested into the new interface. I will be back with something more concrete in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3035#issuecomment-441319502:231,interface,interface,231,https://root.cern,https://github.com/root-project/root/pull/3035#issuecomment-441319502,1,['interface'],['interface']
Integrability,"Hi @bluehood ,; In #2201 and in #2591, we discussed what is the appropriate interface for asking Interpreter printing. Possible options were ""Use printValue and declare RuntimePrintValue.h at Cling startup time"" or to ""Use gInterpreter->Evaluate"", and people prefered latter. This Evaluate interface is a bit tedious than calling printValue, but it saves startup time as we don't have to declare one more header. So when you want to print something from Interpreter, it'll be nice if you could use this interface :); ```; auto value = gInterpreter->CreateTemporary();; ￼ if (gInterpreter->Evaluate(<something you want to print>, *value) == 1 /*success*/); ￼ str = value->ToTypeAndValueString().second;; ￼ delete value;; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2644#issuecomment-422838018:76,interface,interface,76,https://root.cern,https://github.com/root-project/root/pull/2644#issuecomment-422838018,3,['interface'],['interface']
Integrability,"Hi @bluehood, ; answers in revrese order.; I am not a fan of adapting to old interfaces accepting pointers and a fan of value semantics but I think that adding a method which correspods to *_ptr::get is a good thing. - It would be cheap to add Reset . But for example, TDF is the only entity that should fill these ptrs. What does Reset actually mean? To what TDF is the pointer linked?; - Comparison with nullptr (and implicit conversion): it would not be too much used, but cheap to add. Do you have a usecase in mind.; - Assignments: I agree.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381094370:77,interface,interfaces,77,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381094370,1,['interface'],['interfaces']
Integrability,"Hi @bluehood,. great. Once we are happy with both implementations we integrate them in the code base. Then we can revamp your reproducer and make it a test (if test_snapshotNfiles is not more or less the same thing).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/828#issuecomment-319747705:69,integrat,integrate,69,https://root.cern,https://github.com/root-project/root/pull/828#issuecomment-319747705,1,['integrat'],['integrate']
Integrability,"Hi @breitwieserCern ,; the functionality now looks good. Could you add a test in roottest about the new functionality?; This one should:; - Generate a dictionary with a selection xml; - Have a macro that loads it and checks that the custom streamer works fine; In order to achieve that, you can have a look to https://github.com/root-project/roottest/blob/master/root/meta/genreflex/CMakeLists.txt . Here you find the instructions about how to run tests: https://root.cern.ch/run-tests. In your case the CMake section could be something like:; ```. ROOTTEST_GENERATE_REFLEX_DICTIONARY(customStreamer customStreamer.h SELECTION customStreamer_selection.xml). ROOTTEST_ADD_TEST(customStreamer; MACRO customStreamer.C; OUTREF customStreamer.ref; DEPENDS ${GENERATE_REFLEX_TEST}); ```; This will generate the dictionary from *customStreamer.h* and *customStreamer_selection.xml*. The macro *customStreamer.C* will be then executed and you can check there that your streamer does what is supposed to do (print something? your call :) ). The output will be compared to customStreamer.ref . You can start from a simplified version of the actual classes you are working with.; Do not hesitate to contact me privately if you need more info!. Cheers,; D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/864#issuecomment-325595999:743,DEPEND,DEPENDS,743,https://root.cern,https://github.com/root-project/root/pull/864#issuecomment-325595999,1,['DEPEND'],['DEPENDS']
Integrability,"Hi @cburgard and @gartrog, thanks a lot for these developments! I have only a few comments inline. Besides that, please do a few things before we can merge (I would like to merge this as soon as possible, tomorrow or on Friday. If you have more you can always do a followup PR):. 1. You moved the `JSONInterface` to a public header now, so it's not a `RooFit::Detail` anymore (I understand now that the user needs the interface to implement custom importers/exporters). But still, it's an interface under heavy development and we need to make that clear to the user that they can't rely too much on the stability of this interface. Therefore, can you please change the namespace to `RooFit::Experimental`?; 2. Please give the PR a meaningful title, and the first commit a good commit message, optimally not only a title but also a body where you explain what you did. When merging, I will squash the commits and only the first commit message will be taken, so please consider that.; 3. Make sure that all C++ sources are formatted with `clang-format` and the python sources with `black --line-length=120`. Let me know when this is done, then we can ask the CI to test once again and then merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9482#issuecomment-1016939443:418,interface,interface,418,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1016939443,10,"['interface', 'message']","['interface', 'message']"
Integrability,"Hi @don4get ,. Yes indeed, having a ROOT deployment on pip would ease the integration with the rest of the Python packaging ecosystem. It is definitely not trivial, but it's on our radar. Cheers,; Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14890#issuecomment-1980834982:74,integrat,integration,74,https://root.cern,https://github.com/root-project/root/issues/14890#issuecomment-1980834982,1,['integrat'],['integration']
Integrability,"Hi @dpiparo , on this topic #1888 adds libVecOps as a dependency of libTreePlayer.; The failures in that PR should have been fixed by commit 62fca2cbef, so I just restarted the tests to check it's now green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1896#issuecomment-383412746:54,depend,dependency,54,https://root.cern,https://github.com/root-project/root/pull/1896#issuecomment-383412746,1,['depend'],['dependency']
Integrability,"Hi @dpiparo ,. 1. I tested MainEvent.cxx with 500~50000 events on my desktop running Ubuntu 14.04. I repeated 10 runs for each test case and ~3% is average performance drop. I did not have a chance to run CMSSW skimming job. I am actually not familiar with CMSSW yet. 2. What you were saying is correct. Since my case only needs one thread to invoke TThreadExecutor, using tbb task_group run interface likely spends too much time on scheduler's receive_and_steal function (from the profiling results).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-330564042:392,interface,interface,392,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-330564042,1,['interface'],['interface']
Integrability,"Hi @dpiparo ,; you are right, `Exec` and `Finalize` could also be no-op. I explicitly specified that `Initialize` and `InitTask` can be no-op in the doc because those two ""feel"" like they should be doing something important, given their name. I thought users would know what they want to put in `Exec` and `Finalize`, but they might be confused by `Initialize` and `InitTask`. I can reword it if you think it's unclear. The only method that doesn't have to be present is `PartialResult`. The others are required, at least for now. In the future we could add some logic to `TActionImpl<T>` that implements `Initialize`, `InitTask`, `Exec` and `Finalize` as no-op if they are not implemented in `T`. It doesn't even look [that ugly](https://godbolt.org/g/RZHkAy). A humble suggestion for the tutorial (thanks!): wrapping THn in a custom TDF action :grin:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1905#issuecomment-383709026:810,wrap,wrapping,810,https://root.cern,https://github.com/root-project/root/pull/1905#issuecomment-383709026,1,['wrap'],['wrapping']
Integrability,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3935#issuecomment-1826753548:242,depend,dependencies,242,https://root.cern,https://github.com/root-project/root/pull/3935#issuecomment-1826753548,1,['depend'],['dependencies']
Integrability,"Hi @egpbos, thanks for the review! You are right, the batch mode stuff should better be tested somewhere else, so I removed some commits from this PR. What is left in this PR is the question about the constrain settings that might not make sense. Let's discuss this in the next RooFit meeting then!. What I ultimately want to achieve is that RooFit prints errors if you have constrained settings that statistically don't make sense, to reduce the potential for user error. That means we can't have ""unphysical"" fits in our tests too, otherwise they would fail eventually from these error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11804#issuecomment-1339003559:588,message,messages,588,https://root.cern,https://github.com/root-project/root/pull/11804#issuecomment-1339003559,1,['message'],['messages']
Integrability,Hi @eguiraud I see similar behavior to [this issue](https://github.com/root-project/root/issues/10216) when using TTreeProcessorMT on xrootd-streamed files when using ROOT 6.22/08. Just wanted to check that this fix will also work for my issue before we try integrating >= 6.28/00 into our workflow. Edit: sorry for bumping such an old thread btw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10217#issuecomment-1370084730:258,integrat,integrating,258,https://root.cern,https://github.com/root-project/root/pull/10217#issuecomment-1370084730,1,['integrat'],['integrating']
Integrability,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result.; Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:; ```; ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'; bool(foo[0]); ^; ROOT_prompt_1:1:13: note: previous definition is here; const char *foo = ""foo"";; ```; In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,; Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8304#issuecomment-865019504:1154,message,message,1154,https://root.cern,https://github.com/root-project/root/issues/8304#issuecomment-865019504,1,['message'],['message']
Integrability,"Hi @ellert , LGTM, could you add the description of the changes you did (copy-paste from the PR description) to the message of the commit so that we do not forget what this was about? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2276#issuecomment-406258378:116,message,message,116,https://root.cern,https://github.com/root-project/root/pull/2276#issuecomment-406258378,1,['message'],['message']
Integrability,"Hi @ellert , thank you for the explanations! I would go ahead with it, but first I would add an explanation to the commit message about the change of scope when running with the `makeimage.py` script, which motivates the changes. The changes to the tutorials could even be in a separate commit that included also the explanation about the list comprehension in Python3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3434#issuecomment-475208696:122,message,message,122,https://root.cern,https://github.com/root-project/root/pull/3434#issuecomment-475208696,1,['message'],['message']
Integrability,"Hi @elusian, thank you so much as always for reporting this!. I haven't solved the problem yet, but just to track my progress here: the underlying problem is that the integrals of a derived PDF (like the `RooRealSumPdf` in your case) somehow have their client-server interface messed up. Here is a reproducer:. ```C++; void repro() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);. RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct parMod(""par_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers, but it doesn't:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. For some reason, the direct value server, which is `par_mod` is **skipped** now, misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it wrong. I need to fix this problem with the value servers registered for integrals on RooRealSumPdfs. Further notes:. * The problem has always been there in RooFit, it's just that the BatchMode uncovered it; * Naturally, the problem is somehow in `getValueAndShapeServers` in [Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578#issuecomment-1281427464:267,interface,interface,267,https://root.cern,https://github.com/root-project/root/issues/11578#issuecomment-1281427464,1,['interface'],['interface']
Integrability,"Hi @etejedor,; > will be up to the DS to decide on the size of the portion of the source file that it reads each time and stores in memory?. TDataFrame is completely agnostic regarding file reading, entry chunking etc. The only thing TDF sees are the batches of entry ranges that `TDataSource::GetEntryRanges` returns -- one task is spawned for each of the range. So basically every decision in this regard is in the hands of `TDataSource`. > does this mean that after each of these reads there will be a synchronization barrier?. Yes. I didn't feel like implementing a one-producer-many-consumers thread-safe queue 😅 but it can always be done later if we want/need it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1219#issuecomment-338629908:505,synchroniz,synchronization,505,https://root.cern,https://github.com/root-project/root/pull/1219#issuecomment-338629908,1,['synchroniz'],['synchronization']
Integrability,"Hi @ferdymercury . If you like, one can integrate this functionality into `RBrowser`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11295#issuecomment-1298187965:40,integrat,integrate,40,https://root.cern,https://github.com/root-project/root/issues/11295#issuecomment-1298187965,1,['integrat'],['integrate']
Integrability,"Hi @greenc-FNAL,. Thanks for this request. I will try to reply inline directly to some of the concerns and try to give some public-friendly outline the bigger picture as I see it. > Generated module files are compiler-specific, which would seem likely to lead to issues with interactions between Cling-generated PCM dictionaries and any C++20 modules used by the code upon which those dictionaries depend. I am not sure if that is the case at least for the next 10 years. I see this can be an issue if we start shipping module files (`bmi`s or equivalent) instead of header files. However, in practice that won't be the case in near future because the compiler vendors cannot agree on a common file format and make it standard. Until then, there will be always some sort of a textual header file which can be processed with our clang-based rootcling and build a pcm file as basis for our dictionaries. . > My request is for the upcoming ROOT with Clang 16 to be able to accommodate the generation and use of PCM dictionaries where dependencies thereof are or use C++20 modules. Clang has at least 5 different ""flavors"" of modules. One of them is the C++20 modules as described by the C++ standard. At the moment you start using C++ 20 you could use the `import`/`export` constructs and you will be able to use that feature for encapsulation purposes. There is not enough project transitions which are bigger than toy examples. One of the challenges is how we discover module dependencies. That is, we need extra tooling to decide how to split the source files into modules. In practice we need to pre-lex all of the content before the build system can start processing project files. The community is discussing scanners (such as clang scan-deps), daemons (the gcc implementation), protocols, etc. There is increasing amount of papers trying to address how we put C++ modules at scale (https://wg21.link/p2656, https://wg21.link/P2409, https://youtu.be/_LGR0U5Opdg?si=AbLazREvyl5PXVFG). Some papers/ta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13536#issuecomment-1693395998:398,depend,depend,398,https://root.cern,https://github.com/root-project/root/issues/13536#issuecomment-1693395998,4,['depend'],"['depend', 'dependencies']"
Integrability,"Hi @guitargeek , thanks a lot for the reply and sorry for the late message. For the first and second point, thanks a lot for the explanation. I may misunderstood the way cppyy works previously, now it seems quite reasonable to me!. For the third one, I prepared a workspace and also attached the code that we use (The dataset named `obsData` contained in the file is an asimov one). We are using a framework named WSMaker and I just picked up the fitting code. It is a bit long and hope it won't bring too much trouble to you. Here is the command we use for fit:; `root -l -b -q '$WORKDIR/FitCrossCheckForLimits.C+(FitToAsimov,1.0,0.0,true,""ws.root"",""output/"",""combined"",""ModelConfig"",""obsData"",false,false)'; `. The file is a bit large so here is the [gdrive link](https://drive.google.com/drive/folders/1BXT1w2-NeXdjs-dbGRdpRYmQ4iuPQfiE?usp=sharing). Thanks a lot in advance for your time!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15479#issuecomment-2110156231:67,message,message,67,https://root.cern,https://github.com/root-project/root/issues/15479#issuecomment-2110156231,1,['message'],['message']
Integrability,"Hi @guitargeek ,; Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). ; I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. ; ```c++; #include <iostream>; #include <fstream>; #include<TRandom.h>. float input_lambda(float width){; 	return -6.347e-07*width*width+0.0015*width+1.835;; }. void exampleND_v2(){; auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);; 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}; 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);; 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}; 	hist_1->Scale(1./hist_1->Integral());; 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);; 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);; auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};; 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){; 		paramVec[j] = Lambda_list[j];; 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();; 	w->import(*morph_ND);; 	w->Print();; 	w->writeToF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11876#issuecomment-1384255590:182,message,message,182,https://root.cern,https://github.com/root-project/root/issues/11876#issuecomment-1384255590,1,['message'],['message']
Integrability,"Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits. I addressed all of your comments, but for one comment I'm not sure if I made the right choice. My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice?. Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7344#issuecomment-791485041:85,message,message,85,https://root.cern,https://github.com/root-project/root/pull/7344#issuecomment-791485041,1,['message'],['message']
Integrability,"Hi @hageboeck, thanks for the review! I have addressed most of your comments and tried to justify whenever I didn't do something, which was mostly because I think it should be done in separate PRs (new tutorial, removing dependecy of RooFitCore tests on RooFit). I think this PR implements now all the functionality requested by @will-cern in https://github.com/root-project/root/issues/8123, so it would be good if you Will could confirm this. In a later PR, I'm then going to implement what was not required to solve the issue but what is still useful for ROOT nonetheless (also mentioned in the PR description):; 1. make it possible to specify the global observables when generating a dataset:; `model.generate(x, 1000, GlobalObservables(g))`; 2. make it possible to also sample global observable values when generating a toy dataset:; `model.generate({x, g}, 1000, GlobalObservables(g))`; 3. Add a tutorial to show all the new functionality related to global observables",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8878#issuecomment-917953348:221,depend,dependecy,221,https://root.cern,https://github.com/root-project/root/pull/8878#issuecomment-917953348,1,['depend'],['dependecy']
Integrability,"Hi @hahnjo , I found some time to look into it and have a question since the build system around the dict generation is a bit complicated: where would be the place to add library dependencies for rootcling_stage1 ?; specifically the problem is:; `; [ 78%] Linking CXX executable src/rootcling_stage1; [ 78%] Built target Cling; ld: error: undefined symbol: procstat_open_sysctl; >>> referenced by rootcling_impl.cxx; >>> ../dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o:(GetExePath()). ld: error: undefined symbol: kinfo_getproc; >>> referenced by rootcling_impl.cxx; >>> ../dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o:(GetExePath()). ld: error: undefined symbol: procstat_getpathname; >>> referenced by rootcling_impl.cxx; >>> ../dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o:(GetExePath()); c++: error: linker command failed with exit code 1 (use -v to see invocation); gmake[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:319: core/rootcling_stage1/src/rootcling_stage1] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:43752: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787#issuecomment-1551552492:179,depend,dependencies,179,https://root.cern,https://github.com/root-project/root/issues/12787#issuecomment-1551552492,1,['depend'],['dependencies']
Integrability,"Hi @hahnjo, thanks for the clarification. Now I understand what you mean. > Sorry if my current take on the matter sounds a bit disappointing. I'd be happy to have a chat about possible ways around the issues, but I probably can't put much of my time on CUDA support in Cling... This is not disappointing. It just means that I need another strategy ;-) It's good to know that it's probably not efficient to backport the code, so I can save time. Besides, the need for the feature has also decreased a bit since we found a workaround for [clad](https://github.com/vgvassilev/clad). This was the main reason why I wanted to implement this feature. Therefore I think will start with reengineering of `nvlink`. It is also needed, I can implement it with with Clang and later integrate it in Cling when it is updated to LLVM 12/13.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8112#issuecomment-842555367:771,integrat,integrate,771,https://root.cern,https://github.com/root-project/root/issues/8112#issuecomment-842555367,1,['integrat'],['integrate']
Integrability,"Hi @hahnjo,. It is new error message, which signals that chrome or firefox browser are missing to run these tests properly. I could add extra checks in the RCanvas::SaveAs method that it do nothing in such case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13097#issuecomment-1611028795:29,message,message,29,https://root.cern,https://github.com/root-project/root/pull/13097#issuecomment-1611028795,1,['message'],['message']
Integrability,"Hi @henryiii, thanks for the contributions. I think that the tcmalloc space after the -L is something we need to fix. However, I'm not quite so sure about adding `ROOT::Flags` and `ROOT::Libraries`. These will be moving targets that may cause more trouble than they fix. We need to fix ROOT to only really pass required flags, not recommended flags. GeantV, for example, cannot compile against ROOT sometimes, because they inherit bad flags (think C++ standard). Also, `ROOT::Libraries` is quite generic and may or may not contain what the user needs, so if dependent projects use that rather than individual targets, they will certainly run into problems. However, for things like using `ROOT::RooFit` as convenience target already including `RooFitCore`, I think we should add the targets. With proper target dependencies, users will probably not need to list all targets, but only the ones used directly. So, if `ROOT::Math` requires `ROOT::Core`, that will be added automatically if you link against `ROOT::Math`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-387355022:558,depend,dependent,558,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-387355022,2,['depend'],"['dependencies', 'dependent']"
Integrability,"Hi @ktf, as discussed yesterday the test failures are related to an issue in our incremental builds where Clad is not rebuilt after changes to the Clang headers. This leads to very weird symptoms because some ""stale"" functions access memory where they shouldn't and so on. I was hit by this problem already twice and it's tracked in https://github.com/root-project/root/issues/7977, so one would suppose that I remember by now but evidently I didn't... Apologies for the confusion and the delay it caused in integrating this. I've now synchronized the changes to https://github.com/root-project/llvm-project/releases/tag/ROOT-llvm16-20240116-01, moving the header to `clang/include/clang/Basic` as mentioned yesterday to keep the ability to build against a vanilla version of LLVM). @vgvassilev I put the commit only into `ROOT-llvm16`, not `cling-llvm16` because I think it's not that relevant for Cling standalone. Let me know if you disagree and I can of course move it. Some measurements of this change on my machine: for a simple `./bin/root.exe -q`, it reduces the maximum RSS from 217MB to 192MB and for `./bin/root.exe -q -e ""std::vector<int> v"" -e ""return 0;""` from 255MB to 230MB :clap:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1893308958:508,integrat,integrating,508,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1893308958,4,"['integrat', 'synchroniz']","['integrating', 'synchronized']"
Integrability,"Hi @linev, here we are. Please let me know about JS. there is no button (from github interface) to PR in root-project/jsroot ; So I just changed files contained in ./js/gpad here. maybe it needs to be rebuilt ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13212#issuecomment-1625664610:85,interface,interface,85,https://root.cern,https://github.com/root-project/root/pull/13212#issuecomment-1625664610,1,['interface'],['interface']
Integrability,"Hi @lmoneta ,. I am very sorry for the long delay. . I have added the mathematical formula of the function in latex format in the documentation as requested (it is quite a long expression fully written out). In terms of ""It would be also nice if you re-write the commits history in one or a couple of commits merging them."". I don't think I have the permissions to be able to do this in this pull request (if I do I cannot see how to do it). We could close this pull request and I can do it on my own branch and then submit another pull request, or I think you have permissions to do it when accepting the merge by selecting ""Squash and merge"". In which case a commit message summarizing everything is:. ""Define BreitWignerRelativistic(Double_t x, Double_t median, Double_t gamma) in TMath.h and then calculate in TMath.cxx, a similar non relativistic function BreitWigner already exists in the same location which was used as a template. A tutorial BreitWigner.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case"". In terms of the test I apologise but I've looked at the example and I don't really understand how to implement it. Given that the BreitWigner function that already exists in TMath does not seem to have a test itself I would prefer to go ahead with potentially adding it later as you suggest. Thanks for your help,; Jack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9926#issuecomment-1145063061:668,message,message,668,https://root.cern,https://github.com/root-project/root/pull/9926#issuecomment-1145063061,1,['message'],['message']
Integrability,"Hi @lmoneta @couet . I checked the [current documentation](https://root.cern.ch/root/htmldoc/guides/users-guide/MathLibraries.html#numerical-integration), and the point `15.8.3.1 Using ROOT::Math::IntegratorMultiDim` actually shows an example of the IntegratorMultiDim and the usage of different algorithms. . There is a typo, probably caused by copypasting: `Here is a code example on how to use the ROOT::Math::IntegratorOneDim class`, actually it is an example of `IntegratorMultiDim`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740#issuecomment-1943742763:141,integrat,integration,141,https://root.cern,https://github.com/root-project/root/issues/7740#issuecomment-1943742763,6,"['Integrat', 'integrat']","['IntegratorMultiDim', 'IntegratorOneDim', 'integration']"
Integrability,"Hi @lmoneta, thanks for the review! You are right, it's not a sustainable solution to duplicate the interfaces if we want to accept `std::string` more generally in RooFit. I have updated the PR with a new intermediate class that can be used for the interfaces. The intermediate class, `RooStringView`, is simply a wrapper around `const char*` that can also be constructed from a `std::string`. Note that this is different from `std::string_view`, which is not null-terminated and therefore needs a copy when turned into a `const char*`, so we couldn't use that in RooFit interfaces without introducing superfluous copies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9747#issuecomment-1024992856:100,interface,interfaces,100,https://root.cern,https://github.com/root-project/root/pull/9747#issuecomment-1024992856,8,"['interface', 'wrap']","['interfaces', 'wrapper']"
Integrability,"Hi @lmoneta, this is just a ping in case you didn't see the other message -- there is obviously no rush, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7087#issuecomment-769735462:66,message,message,66,https://root.cern,https://github.com/root-project/root/pull/7087#issuecomment-769735462,1,['message'],['message']
Integrability,"Hi @lmoneta, yes you are right it's conceptually not ideal that these are static functions of `RooRealSumPdf`. But that's where they are now, and the public interface is still clean because they are all private anyway. I did this PR (and the previous one) only to be able to close the corresponding GitHub issues, and I would like to spend not more time right now in refactoring private code. The right way would probably be to move the static function in another private `.cxx` file, but I think this has no priority now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10851#issuecomment-1170571534:157,interface,interface,157,https://root.cern,https://github.com/root-project/root/pull/10851#issuecomment-1170571534,1,['interface'],['interface']
Integrability,"Hi @mcgordon91!. I think @pcanal is right. It is very likely that you and your colleague didn't correctly synchronize you even selection, and a bit far-fetched that this is a ROOT bug. And since your reproducer is not standalone, we also can't verify if this is an actual ROOT problem or not. I'll therefore close this issue and encourage you to a bit more synchronization work with your colleague :slightly_smiling_face: Feel free to ask questions in the ROOT forum about ROOT/PyROOT usage. The GitHub issue tracker is more for confirmed bugs in ROOT, improvement suggestions, and feature requests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14215#issuecomment-1883019769:106,synchroniz,synchronize,106,https://root.cern,https://github.com/root-project/root/issues/14215#issuecomment-1883019769,2,['synchroniz'],"['synchronization', 'synchronize']"
Integrability,"Hi @minimeu1 ,; a new fresh build, starting from clean directories seems required. First step: did you make sure all the dependencies for kubuntu are installed? https://root.cern/install/dependencies/#ubuntu-and-other-debian-based-distributions",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479#issuecomment-1915461816:121,depend,dependencies,121,https://root.cern,https://github.com/root-project/root/issues/14479#issuecomment-1915461816,2,['depend'],['dependencies']
Integrability,"Hi @oshadura , thanks for the investigation! One thing I do not understand is that both on an old gcc, 4.9/4.8, and on gcc 6, *-Ofast* seems to define *__FAST_MATH__*, at least on lxplus7:; ```; $ cat a.C ; #ifdef __FAST_MATH__; aaaa; #endif; $ g++ -o a -c a.C -O2; $ g++ -o a -c a.C -Ofast; a.C:2:1: error: ‘aaaa’ does not name a type; aaaa; ^~~~; $ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/cvmfs/sft.cern.ch/lcg/external/gcc/6.2.0native/x86_64-centos7/bin/../libexec/gcc/x86_64-pc-linux-gnu/6.2.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../gcc-6.2.0/configure --prefix=/build/pmendez-sftnight/install-620native -with-system-zlib --disable-multilib --enable-languages=all; Thread model: posix; gcc version 6.2.0 (GCC) ; $ source /cvmfs/sft.cern.ch/lcg/external/gcc/4.9.1/x86_64-slc6/setup.sh; $ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/cvmfs/sft.cern.ch/lcg/external/gcc/4.9.1/x86_64-slc6/bin/../libexec/gcc/x86_64-unknown-linux-gnu/4.9.1/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ../gcc-4.9.1/configure --prefix=/build/hegner/gcc/gcc-install --with-mpfr=/afs/cern.ch/sw/lcg/external/mpfr/3.1.2/x86_64-slc6-gcc48-opt --with-gmp=/afs/cern.ch/sw/lcg/external/gmp/5.1.1/x86_64-slc6-gcc48-opt --with-mpc=/afs/cern.ch/sw/lcg/external/mpc/1.0.1/x86_64-slc6-gcc48-opt --enable-libstdcxx-time --enable-lto --with-isl=/build/hegner/gcc/isl/isl-install --with-cloog=/afs/cern.ch/sw/lcg/external/cloog/0.18.0/x86_64-slc6-gcc48-opt --enable-languages=c,c++,fortran,go; Thread model: posix; gcc version 4.9.1 (GCC) ; $ g++ -o a -c a.C -Ofast; a.C:2:1: error: ‘aaaa’ does not name a type; aaaa; ^; $ g++ -o a -c a.C -O2; ```; I see your fix works, I am just trying to understand all the details here since we are looking for the cause of this since a while :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/971#issuecomment-328953619:531,wrap,wrapper,531,https://root.cern,https://github.com/root-project/root/pull/971#issuecomment-328953619,2,['wrap'],['wrapper']
Integrability,"Hi @oshadura, Can you please take a look at the failures for duplicate rules for the LZ4 library?; I think they are relevant (not to these changes, but still relevant for LZ4 integration nonetheless).; In the mean time, I will make the PR build the classic build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1063#issuecomment-332562017:175,integrat,integration,175,https://root.cern,https://github.com/root-project/root/pull/1063#issuecomment-332562017,1,['integrat'],['integration']
Integrability,"Hi @pcanal, happy New Year! Sorry I missed your comment just before the holiday break. I have updated the last commit message to not only include the commit hash in `master`, but also the commit title. Is that okay now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9478#issuecomment-1006440676:118,message,message,118,https://root.cern,https://github.com/root-project/root/pull/9478#issuecomment-1006440676,1,['message'],['message']
Integrability,"Hi @pcanal, our AddressSanitizer build reports a `heap-buffer-overflow`: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roottest.root.tree/stl/roottest_root_tree_stl_make/. I bisected this to commit 2fa93de2a51e248a56418d8c6488b043746d0925; the error message says ""0x60700022d458 is located 8 bytes to the left of 80-byte region"". However, the stack trace points to the loop immediately after the added condition to perform the binary search. Could you take a look, please? What does `TMath::BinarySearch` return in case the element is not found?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12650#issuecomment-1517450219:343,message,message,343,https://root.cern,https://github.com/root-project/root/pull/12650#issuecomment-1517450219,1,['message'],['message']
Integrability,"Hi @pcanal, please find a stacktrace below. It is one single thread recursively locking a mutex.; This is an issue I had before, also after a change in cling.; I rebuilt ROOT from scratch and retested again, I believe it was an artifact of a bad build. Probably some dependencies missing. I'd ask @Axel-Naumann to merge [this PR of mine](https://github.com/Axel-Naumann/root/pull/196) into this branch of his. I'll trigger another round of tests (as soon as possible) just to be sure everything works as intended, then everything is green as far as I'm concerned. Thanks again for the fix!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/972#issuecomment-328848872:267,depend,dependencies,267,https://root.cern,https://github.com/root-project/root/pull/972#issuecomment-328848872,1,['depend'],['dependencies']
Integrability,"Hi @pcanal,. to complement the answer of @bluehood"" TString tokenises, we are using here a simple lexer.; @bluehood : the suggestion of treating names in strings to jit with a procedure similar to the one adopted for entities in files, ""dynamic scopes"", has not been forgotten.; It is not clear to me how to put it in place though. On the other hand, this step goes in the direction of integrating more cling in the handling of ""code strings"". For example, if the strategy explored in this PR demonstrates to be reliable, we could potentially imagine to hook in the lexer used by clang.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3324#issuecomment-458026173:386,integrat,integrating,386,https://root.cern,https://github.com/root-project/root/pull/3324#issuecomment-458026173,2,['integrat'],['integrating']
Integrability,"Hi @rlalik ,. If I'm not mistaken, the reason could be that the graphic format is not supported with the build you have. I also think this is an issue of confusing message and is fixed in the master. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6985#issuecomment-758130452:164,message,message,164,https://root.cern,https://github.com/root-project/root/issues/6985#issuecomment-758130452,1,['message'],['message']
Integrability,"Hi @sawenzel, I'm happy that you found a solution! Indeed, the builtin dependencies of ROOT are not really meant to be used externally, and you did the right thing by adding an external TBB to your environment!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9599#issuecomment-1861405690:71,depend,dependencies,71,https://root.cern,https://github.com/root-project/root/issues/9599#issuecomment-1861405690,1,['depend'],['dependencies']
Integrability,"Hi @sinnfashen , very nice exercise. Since a while ROOT adopts for internal parallelisation the usage of low level interfaces which allow to leverage on the internally spawned TBB pool, for example [TThreadExecutor](https://root.cern.ch/doc/v610/classROOT_1_1TThreadExecutor.html): I don't think the usage of TThread is the way to go. Said that, what is the advantage of the parallelisation? Is there a usecase you were trying to improve?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2202#issuecomment-397642089:115,interface,interfaces,115,https://root.cern,https://github.com/root-project/root/pull/2202#issuecomment-397642089,1,['interface'],['interfaces']
Integrability,"Hi @siscia ,; Could you, please, be more explicit? When extending the VMC interfaces we take care about backward compatibility. Which was the virtual method which caused the problem in your user code?; And also do you build your code against tagged versions of Root and VMC packagages (what is the recommended way), or against development versions (master branches)?; Thank you,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3513#issuecomment-516772892:74,interface,interfaces,74,https://root.cern,https://github.com/root-project/root/pull/3513#issuecomment-516772892,1,['interface'],['interfaces']
Integrability,"Hi @stwunsch , congrats! Very nice - and delivered extremely quickly: it was not obvious. Let's start from the points you mention as ""todos"" - I would order them as follows in terms of priority:; - More tests? Corner-cases missed?; - These tests could also foresee error cases; - More error-handling?; - What about not supported datatypes? Currently implemented for float, double, int, unsigned int, long, unsigned long. This is dependent on the memory adption feature of #1777 for std.vector.; - Infere the final datatype of the numpy array in a clever way (currently double is the default). Implicit type conversion is done by the lambda passed to TDataFrame in the backend.; - Apply clang-format. For the non supported data types, I think we should error out gracefully, but I let @etejedor comment.; For the common type: can we use http://en.cppreference.com/w/cpp/types/common_type ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1856#issuecomment-381247313:429,depend,dependent,429,https://root.cern,https://github.com/root-project/root/pull/1856#issuecomment-381247313,1,['depend'],['dependent']
Integrability,"Hi @subham73, sorry for the late answer! In this case, you should build ROOT with the builtin LZMA library. This can be enabled with the `builtin_lzma` cmake option:. https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L99. The call to cmake would look like `cmake -Dbuiltin_lzma=ON` then. If you get further problems with the dependencies, you can try to just enable the build of all dependencies with the `builtin_all` option. By the way, you should consider also building with the `testing` to build the unit tests as well. I can let you know how to run the RooFit unit tests once you managed to build ROOT then. Let me know how it goes :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8777#issuecomment-1027473882:361,depend,dependencies,361,https://root.cern,https://github.com/root-project/root/issues/8777#issuecomment-1027473882,2,['depend'],['dependencies']
Integrability,"Hi @toicca , thank you for the report!. About `RVecF` in the signature not working while `RVec<float>` does, I think that was reported in https://github.com/root-project/root/issues/11294 and it should be fixed by https://github.com/root-project/root/pull/11553 . That PR is waiting on a review from me, I'll get to it as soon as possible. About `numba` not being able to interpret a Python function that uses `ROOT.RVec`: that's technically a limitation of numba, and [there is some work](https://indico.cern.ch/event/1106990/contributions/4991292/) towards having numba understand PyROOT-wrapped C++, but for now ""PyROOT things"" (or cppyy-wrapped C++, if you want) is not part of the subset of Python that numba can deal with.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12234#issuecomment-1419269830:590,wrap,wrapped,590,https://root.cern,https://github.com/root-project/root/issues/12234#issuecomment-1419269830,2,['wrap'],['wrapped']
Integrability,"Hi @wdconinc and @bellenot! It would be nice if we could fix the issue without the added complexity of an additional flag. Wouter, you're probably using the `fail-on-missing` option to build ROOT, right? The flag to make sure that the features don't get quietly disabled at configuration time. The connectivity check doesn't make sense with `fail-on-missing=ON`, because a missing dependency will cause a configuration failure either way. More on this in the description of the PR that I opened:; * https://github.com/root-project/root/pull/15467. Would that PR fix your issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11603#issuecomment-2102480923:381,depend,dependency,381,https://root.cern,https://github.com/root-project/root/issues/11603#issuecomment-2102480923,1,['depend'],['dependency']
Integrability,"Hi @wwdws1, thanks for the report!. Unfortunately we had to take out the interface between ROOT and `fftw3` out of the released binaries, because it was not license compatible with `fftw3`. Installing `fftw3` doesn't help, because the relevant `TVirtualFFT` plugins won't be there. I have suggested a solution to fix this for the next release:; https://github.com/root-project/root/pull/14174",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14162#issuecomment-1838715040:73,interface,interface,73,https://root.cern,https://github.com/root-project/root/issues/14162#issuecomment-1838715040,1,['interface'],['interface']
Integrability,"Hi @ynikitenko, thanks for the request! There are several reasons for not supporting PyPy. PyROOT, which is building on top of cppyy, is very deeply connected to the CPython implementation of CPyCppyy. Just like the CPython version of cppyy, PyROOT consists of a Python module and a compiled CPython extension (`libROOTPythonization`). And you can't use CPython extensions in PyPy. So to support PyPy, we would have to rewrite [all this code](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/src), and work closely with the cppyy team to make sure it's PyPy implementation also provides the interfaces that PyROOT expects. That would be a *huge* amount of work with no usecase to justify it. And there are so many alternative of fast analysis frameworks that people are trying out right now: RDataFrame, NumPy, numba, awkward arrays, etc. And let's not forget that pypy has it's limitations! It only supports a restricted subset of Python, and it would require large efforts to port PyROOT to this. One final point: the future of PyPy development is not very clear. Right now, they don't support Python 3.11 yet, for example. Builds are only available for [Python 3.9 and Python 3.10](https://www.pypy.org/download_advanced.html). So investing in PyPy compatibility is also risky because of that. Imagine we would spend half a year trying to support it, and then PyPy would not be maintained anymore :(. I'll therefore close this issue as ""not planned"". tldr; the HEP community is gravitation towards other C++ native of jit-based Python packages to speed up analysis, and at this point investing in pypy is not worth it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8110#issuecomment-2148504771:622,interface,interfaces,622,https://root.cern,https://github.com/root-project/root/issues/8110#issuecomment-2148504771,2,['interface'],['interfaces']
Integrability,"Hi @ywkao, following up on my last comment, what would be motivation for the backports? Are you using these older ROOT version in production and this is a crucial fix? Or you're using ROOT on your laptop and if would be easy to update to 6.34 risk-free? How we proceed depends also on that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16773#issuecomment-2457457327:269,depend,depends,269,https://root.cern,https://github.com/root-project/root/pull/16773#issuecomment-2457457327,1,['depend'],['depends']
Integrability,"Hi Attila, to link commits to a JIRA issue, it's enough to just add the issue name somewhere in the commit message. I usually add `Fixes ROOT-NNNN` to the end of the message. That's already enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2829#issuecomment-432203621:107,message,message,107,https://root.cern,https://github.com/root-project/root/pull/2829#issuecomment-432203621,2,['message'],['message']
Integrability,"Hi Attila,. This is a know limitation. The work-around is to wrap the `std::array` by another class (for which you need to declare a dictionary). How urgently would you need the proper implementation?. Cheers,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007#issuecomment-1379522766:61,wrap,wrap,61,https://root.cern,https://github.com/root-project/root/issues/12007#issuecomment-1379522766,1,['wrap'],['wrap']
Integrability,"Hi Axel, thank you for your reply,. > Is R__ASSERT the right tool here?. Well, I suppose you could throw an exception too and that would be fine (maybe it complicates the future standalone C library?). To maintain the current behaviour under `NDEBUG` we would have to inspect all uses of `R__ASSERT`. A quick search says `RNTuple` has 103 right now: ; ```shell; max@max-VirtualBox:~/projects/rootdev/root/tree/ntuple$ rg R__ASSERT | wc -l; 103; ```; (for sure some of these are better implemented using exceptions a la https://github.com/root-project/root/pull/8511). My opinion is that `R__ASSERT` is the right tool when you want to ensure preconditions in a low developer friction way without changing the function interface by throwing exceptions. > Do we have any estimate on how representative this is for ROOT and user code?. I'm not really sure, this was more of a comment on how I use `R__ASSERT` than anything else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8587#issuecomment-872426138:717,interface,interface,717,https://root.cern,https://github.com/root-project/root/pull/8587#issuecomment-872426138,1,['interface'],['interface']
Integrability,"Hi Axel,. The fixes are ready and the documentation in doxygen is ready ; http://files.oproject.org/root/rootdoc/html/group___r.html; users guide in markdown integrate to doxygen ; http://files.oproject.org/root/rootdoc/html/md__home_omazapa_root_bindings_r_doc_users-guide__r_o_o_t_r__users__guide.html. Best regards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/74#issuecomment-127150589:158,integrat,integrate,158,https://root.cern,https://github.com/root-project/root/pull/74#issuecomment-127150589,1,['integrat'],['integrate']
Integrability,"Hi Carsten, looks great so far. Three things, two optional ones:; - I left some comments to modernise the iterators.; - Did I miss something or is RooPower implementing the same as RooPolynomial?; - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person.; - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit.; - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:; https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4015#issuecomment-507164679:362,integrat,integrate,362,https://root.cern,https://github.com/root-project/root/pull/4015#issuecomment-507164679,1,['integrat'],['integrate']
Integrability,"Hi Carsten,. here are some answers:. > general coding style. I like the const-correctness fixes. Can you bundle them in an extra PR, and we merge them before the rest gets merged? This is a code improvement, anyway. The addition of functions such as `GetPreprocess...()` can probably added as well. > packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?. All YML/JSON-related things would best go into something that can be switched on/off based on the availability of YML/JSON. Something like `roofit/YMLFactory`?; > code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?. I didn't really check that. Maybe we do this when there's a bit less noise after splitting off the const-ness fixes and interface changes.; > build system: Is the way I encoded the optional dependency acceptable?. I don't know. @oshadura? @Axel-Naumann ?; > class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. As long as classes and function names say what these things do, you have quite some freedom. Maybe just check whether the surrounding code capitalises functions or not. > Please don't review yet:; > ; > lack of functionality - more things will be added over time; > individual violations of the style guide (e.g. missing spaces or newlines). Sure, NP. > Please specifically suggest where documenation should be added!; > Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also for the implementations of that, or only for the RooFit-side of the code?. It would be good if every function and class had documentation. They are best placed in the implementation like in; https://root.cern.ch/doc/master/RooAbsPdf_8cxx_source.html. Header-only functions can have small ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5151#issuecomment-598765709:864,interface,interface,864,https://root.cern,https://github.com/root-project/root/pull/5151#issuecomment-598765709,4,"['depend', 'interface']","['dependency', 'interface']"
Integrability,"Hi Danilo,; I'm also for the ""one line solution"". As Axel said, we'll make `cling::printValue()` interface available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2644#issuecomment-423149460:97,interface,interface,97,https://root.cern,https://github.com/root-project/root/pull/2644#issuecomment-423149460,1,['interface'],['interface']
Integrability,"Hi Enric, ; Thank you very much! ; Indeed it is a kind of problem; I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`; 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. ; - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6552#issuecomment-709078495:596,inject,inject,596,https://root.cern,https://github.com/root-project/root/issues/6552#issuecomment-709078495,1,['inject'],['inject']
Integrability,"Hi Enrico, great work! I understand it will be up to the DS to decide on the size of the portion of the source file that it reads each time and stores in memory? And then the partial ranges will be computed with that portion size plus the number of slots. We could even make the portion size configurable by the user (to control the memory usage of the DS), which at the same time allows to control the granularity of the computations. My only doubt is: if we allow to read a source little by little, does this mean that after each of these reads (and the corresponding processing of the read entries) there will be a synchronization barrier, after which the next portion will be read and the tasks for that portion will be spawned?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1219#issuecomment-338593393:618,synchroniz,synchronization,618,https://root.cern,https://github.com/root-project/root/pull/1219#issuecomment-338593393,1,['synchroniz'],['synchronization']
Integrability,"Hi Hans, ; Thank you for the update. ; Actually having the info message with all the nested calls is maybe making the line too verbose, especially when calling from ROOT. I am not sure everybody will like this. Here is for example what I am getting:; ```; Minuit2Minimizer: Minimize with max-calls 1000000 convergence for edm < 0.001 strategy 1; Info in <Minuit2>: Minuit2Minimizer::Minimize:MnSeedGenerator: Initial state: FCN = 3616 Edm = 6305.439852 NCalls = 9; Info in <Minuit2>: Minuit2Minimizer::Minimize:ModularFunctionMinimizer:VariableMetricBuilder: Start iterating until Edm is < 2e-06 with call limit = 1000000; Info in <Minuit2>: Minuit2Minimizer::Minimize:ModularFunctionMinimizer:VariableMetricBuilder: 0 - FCN = 3616 Edm = 6305.439852 NCalls = 9; Info in <Minuit2>: Minuit2Minimizer::Minimize:ModularFunctionMinimizer:VariableMetricBuilder: 1 - FCN = 13.13450166 Edm = 0.7502570511 NCalls = 16; Info in <Minuit2>: Minuit2Minimizer::Minimize:ModularFunctionMinimizer:VariableMetricBuilder: 2 - FCN = 12.64308061 Edm = 0.001706300191 NCalls = 22; Info in <Minuit2>: Minuit2Minimizer::Minimize:ModularFunctionMinimizer:VariableMetricBuilder: 3 - FCN = 11.13331108 Edm = 0.4006477323 NCalls = 34; Info in <Minuit2>: Minuit2Minimizer::Minimize:ModularFunctionMinimizer:VariableMetricBuilder: 4 - FCN = 10.43729238 Edm = 1.767931142 NCalls = 41; Info in <Minuit2>: Minuit2Minimizer::Minimize:ModularFunctionMinimizer:VariableMetricBuilder: 5 - FCN = 6.552494076 Edm = 0.03027421909 NCalls = 51. ```. Maybe we should add a compiler option for this, whichcould be enabled for Iminuit ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-732288624:64,message,message,64,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-732288624,1,['message'],['message']
Integrability,"Hi Ivan, thank you, I have some doubts about the changes:. - I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; - the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."". Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10705#issuecomment-1148383295:187,message,message,187,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148383295,2,['message'],['message']
Integrability,"Hi Jonas; thank you for your answer!. I switched to LCG dev3 to test on master and noticed that the fitted parameter value is equal to what it was in 6.26.04+batchmode, so still different from no batchmode or batchmode in 6.24.06; It is also still dependent on label mapping (the likelihood too). Is this expected?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10991#issuecomment-1189350472:248,depend,dependent,248,https://root.cern,https://github.com/root-project/root/issues/10991#issuecomment-1189350472,1,['depend'],['dependent']
Integrability,"Hi Oksana, `[Modulariz.]` looks a bit awkward. I'd remove, as the commit message is clear without it. If you want to keep it, maybe consider not abbreviating. We know you are working on modularization, but someone that doesn't know might be more confused than helped by the tag.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2425#issuecomment-410149743:73,message,message,73,https://root.cern,https://github.com/root-project/root/pull/2425#issuecomment-410149743,2,['message'],['message']
Integrability,"Hi Olivier,. Does CERN have any AlmaLinux servers that you can login to? I see for example nightly builds for EL9, /cvmfs/sft.cern.ch/lcg/views/dev3/latest/*el9*; It looks to me like the problem goes with the machine where one runs ROOT, not with the machine which is used for display, so you may be able to ssh from your laptop to a server to reproduce the problem. Thank you for your reply,; Andrei. ________________________________________; From: Olivier Couet ***@***.***>; Sent: Tuesday, August 15, 2023 2:49 AM; To: root-project/root; Cc: Andrei Gaponenko; Author; Subject: Re: [root-project/root] clip edit in GL viewer is still broken (Issue #13418). I tried again on my Mac with master and I can move it along the 3 axes. I do not have an AlmaLinux machine to test. —; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_issues_13418-23issuecomment-2D1678546562&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=O47fc5vzDTR2V_gla4Ub0Q&m=r7ZxRaIgpeCJw_ue5BfGS1dtdno4mPpIqRvhqmrMmWfcSlc9fTv67sVSdCikkDZU&s=OXQyaxyvkLYVHTLmK02k3UQCsjzsftHmIrnsEg5N3Ek&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AAXVCGWHOEXNDBZN3P62EOLXVMSYJANCNFSM6AAAAAA3I665NU&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=O47fc5vzDTR2V_gla4Ub0Q&m=r7ZxRaIgpeCJw_ue5BfGS1dtdno4mPpIqRvhqmrMmWfcSlc9fTv67sVSdCikkDZU&s=HbmOErQ57tTo8HANo7zUUFprpz03lcgq1YaOrYnVHkg&e=>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13418#issuecomment-1679002466:1524,Message,Message,1524,https://root.cern,https://github.com/root-project/root/issues/13418#issuecomment-1679002466,1,['Message'],['Message']
Integrability,"Hi Olivier,. I had a similar situation with a Fermilab server and requested computing support to install missing libraries. I do not have a CERN account so can't open a ticket for lxplus9, but it makes sense to install the libraries there to make the machine usable with ROOT. Andrei. ________________________________________; From: Olivier Couet ***@***.***>; Sent: Tuesday, August 15, 2023 9:27 AM; To: root-project/root; Cc: Andrei Gaponenko; Author; Subject: Re: [root-project/root] clip edit in GL viewer is still broken (Issue #13418). Gl does not seem properly installed there:. $ glxgears; libGL error: No matching fbConfigs or visuals found; libGL error: failed to load driver: swrast; Error: glXCreateContext failed. —; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_issues_13418-23issuecomment-2D1679025586&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=O47fc5vzDTR2V_gla4Ub0Q&m=pYI_UukDspkvToM08be43rqW1Ini373CaTW7YzYzXvzaAbgFN1hfOxDILOY5LkIt&s=ejeOXHRM6NnnTa4TA470cGD4wj63fFxBITffmOQ02lc&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AAXVCGSO4HWIKORE7ZRV24LXVOBONANCNFSM6AAAAAA3I665NU&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=O47fc5vzDTR2V_gla4Ub0Q&m=pYI_UukDspkvToM08be43rqW1Ini373CaTW7YzYzXvzaAbgFN1hfOxDILOY5LkIt&s=Qa0IvEvjeyrinJUtkFkmyfcNPybfsSDQQI7cpx17nBw&e=>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13418#issuecomment-1679169141:1476,Message,Message,1476,https://root.cern,https://github.com/root-project/root/issues/13418#issuecomment-1679169141,1,['Message'],['Message']
Integrability,"Hi Olivier,; thanks for taking a look at this! Indeed this tutorial depends on pyspark, which is one of our optional runtime dependencies since 6.24, as also described in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt). I can run the tutorial on my machine and it also works on our CI nodes where I installed `pyspark`, so I think it's probably some issue with `\macro_code` and similar magic we use for the tutorials, I'm not very familiar with those",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7802#issuecomment-817826921:68,depend,depends,68,https://root.cern,https://github.com/root-project/root/issues/7802#issuecomment-817826921,2,['depend'],"['dependencies', 'depends']"
Integrability,"Hi Omar, ; Very nice contribution. Thank you !. I was trying to test it, but it fails to compile, when generating the dictionary, because it misses the location of ipopt header file at the dictionary generation. . But, I see the header file IpoptMinimizer.h depends of ipopt headers. Can we remove this dependency and keep only at the source file level, by just using forward declarations ? ; This is done for example in MathMore for GSL. ; This will reduce the compile time dependency. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3249#issuecomment-454810244:258,depend,depends,258,https://root.cern,https://github.com/root-project/root/pull/3249#issuecomment-454810244,3,['depend'],"['dependency', 'depends']"
Integrability,"Hi Otto,; Have you some comments on my last message ?; Cheers,; Olivier",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3552#issuecomment-524862681:44,message,message,44,https://root.cern,https://github.com/root-project/root/pull/3552#issuecomment-524862681,1,['message'],['message']
Integrability,"Hi Patrick, thanks a lot for these excellent developments! I will start the Jenkins tests to see if the CI can build it. To successfully integrate these developments, we should split the changes up into smaller PRs, as discussed in the RooFit weekly meeting. We could, for example, chunk it like this:. 1. First PR with changes to `math` only (`mathcore` and `minuit2`). Please ensure that no commit in this PR doesn't touch both math packages at the same time if not necessary. As far as I understood, the changes to `mathcore` and `minuit2` factorize, and you can make a commit for `mathcore` and then one or more for `minuit2`.; 2. Second PR with the new `roofit` packages `multiprocess` and `roofitZMQ`, again with separate commits for the individual packages. I guess you'd have to exclude the multiprocessing test that depends on roofit at that point, though. In this PR, we can also discuss in more detail how to manage the zero MQ dependency.; 3. Third PR with the rest, integrating the new `multiprocess` and `roofit/ZMQ` packages into RooFit. Feel free to split it up further if you think that's better. Some general things to consider in the new PRs:. * It seems unfeasible to rewrite the commit history in this PR to something that factorizes as proposed above. I guess you need to create new commits from the diff that only affect single packages.; * Please avoid mixing code formatting changes with actual changes in the same commit.; * Even better, avoid code formatting changes altogether. We want to eventually use a well-defined clang-format style (specified in [this file](https://github.com/root-project/root/blob/master/.clang-format)), so changing the formatting in your PRs to something that is not compliant with the clang-format style is not meaningful.; * If your developments introduce new files (in particular the new `roofit` packages), please apply the ROOT clang-format style, so we don't have to touch these files again later just for the sake of reformatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294#issuecomment-854587983:137,integrat,integrate,137,https://root.cern,https://github.com/root-project/root/pull/8294#issuecomment-854587983,4,"['depend', 'integrat']","['dependency', 'depends', 'integrate', 'integrating']"
Integrability,"Hi Patrick, thanks for the explanation, things make more sense for me now! Interesting that you also experimented with making the full RooAbsMinimizer templated. I agree that making the RooAbsMinimizer a templated class is not the best solution, but I still think we can even avoid the templated constructor, making the code more clear and reducing compile time/binary size. You already have this nice `FcnMode` enum class which I think is great because enum class is typesafe while enum is not. Taking this enum, you could have a RooMinimizer constructor with the signature:; ```; RooMinimizer(RooAbsReal &function, FcnMode fcnMode);; ```; Then depending on `fcnMode`, you can create the correct function instance. You would not even have to check for the `logic_error`, because with the enum class is is ensured that the value is either `classic` or `gradient`. You would just need a little helper struct to make the `RooMinimizer::create()` function work, something to translate from the function class to the FcnMode:. ```C++; class RooMinimizer { ; ; ... ; private: ; ; template <typename MinimizerFcn ; struct GetFcnMode { ; static const FcnMode value = FcnMode::classic; ; }; ; ; ... ; ; } ; ; ; template<> ; struct RooMinimizer::GetFcnMode<RooGradMinimizerFcn> { ; static const FcnMode value = FcnMode::gradient; ; }; ; ; ; // static function ; template <typename MinimizerFcn> ; std::unique_ptr<RooMinimizer> RooMinimizer::create(RooAbsReal &function) { ; return std::make_unique<RooMinimizer>(function, GetFcnMode<MinimizerFcn>::value); ; } ; ```. Would this approach also work with your upcoming developments?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-879770741:646,depend,depending,646,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-879770741,2,['depend'],['depending']
Integrability,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```; TF1 f(""f"",""sinn(x)+cos(x)""); ```. we get ; ```; input_line_11:2:65: error: use of undeclared identifier 'sinn'; Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }; ^; Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid !; (TF1 &) Name: f Title: sinn(x)+cos(x); ```. Before we were getting also an extra message as ; ```; Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s); ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2017#issuecomment-391022050:25,message,message,25,https://root.cern,https://github.com/root-project/root/pull/2017#issuecomment-391022050,4,['message'],['message']
Integrability,"Hi Philippe,. I just pushed in another commit, fixing the formatting and changing to have TTree::TClusterIterator::Previous(). I also added a gtest, which was requested by Vassil. . I still haven't changed the interface, because I have no good idea of how to do it. I guess we want to keep GetMaxVirtualSize() < 0 to determine how many clusters to retain, but use something else to trigger the pre-fetching of complete cluster. What would that be? I saw fBits mentioned, but didn't really understand the context. Can you walk me through that?. Thanks, Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796#issuecomment-323832023:210,interface,interface,210,https://root.cern,https://github.com/root-project/root/pull/796#issuecomment-323832023,1,['interface'],['interface']
Integrability,"Hi Philippe,; ; > it might be impossible to avoid synonyms that are semantically distincts ... a good example is two free standings (not attached to any directory) histograms that happens to have the same name in two distinct and independent part of the code (e.g. two CMSSW modules). Good point. I admit that did not really think to this case. > The other major problem is that it unnecessary tie (via that global mutex) all the 'parallel' histogram, this means that the overall scalability is inherently decreased. > Rather than a completely global state, wouldn't it make sense to have a wrapper object (for example TThreadedObject) be the holder of the lock and list for a single set of related histogram.; > This would both reduce contention and guarantees that the histograms are really related. I agree on this and TThreadedObject could be the place where to control this. The drawback is that we would then not have a solution outside TThreadedObject, i.e. we will have to find a way to force the use of TThreadedObject in MT cases. > A 3rd significant problem (but fixeable) is that the operation covered by the ReadWrite lock are not atomic (and/or trivial) and for the look of it could plausibly indirectly request the ROOT global lock and thus can lead to deadlocks (from some other code that hold the ROOT global locks and request the Write part of the ReadWrite lock). Not sure to understand, you mean FindObject?; I will have a closer look. > A 4th deficiency is that once activated for one histogram it seems to apply to all histogram. i.e. as far as can tell if you one parallel histograms and 10,000 single-thread histograms, filling the single-thread histogram still has to go through the multi-thread registration/mechanism. Ok, a solution 'per histogram' would also address this. Thanks for going deep into it,; Gerri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/902#issuecomment-325703398:591,wrap,wrapper,591,https://root.cern,https://github.com/root-project/root/pull/902#issuecomment-325703398,1,['wrap'],['wrapper']
Integrability,"Hi Rod,. What does. ```; LD_PRELOAD=/srv/workDir/96340ef3-75b1-46cf-8910-8a2f76b7068c/$LIB/wrapper.so; ```. do? That would be my first suspect. Since `$LD_LIBRARY_PATH` lists our software directories in the correct order, based on just that XRootD **should** be found under:. ```; [bash][thor]:~ > ls -l /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrd*; lrwxrwxrwx 1 cvmfs cvmfs 19 Sep 10 13:12 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so -> libXrdAppUtils.so.1; lrwxrwxrwx 1 cvmfs cvmfs 23 Sep 10 13:12 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so.1 -> libXrdAppUtils.so.1.0.0; -rwxr-xr-x 1 cvmfs cvmfs 74512 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so.1.0.0; -rwxr-xr-x 1 cvmfs cvmfs 18432 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdBlacklistDecision-4.so; -rwxr-xr-x 1 cvmfs cvmfs 82136 Sep 10 03:21 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdBwm-4.so; -rwxr-xr-x 1 cvmfs cvmfs 13552 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCksCalczcrc32-4.so; lrwxrwxrwx 1 cvmfs cvmfs 17 Sep 10 13:12 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdClient.so -> libXrdClient.so.2; lrwxrwxrwx 1 cvmfs cvmfs 21 Sep 10 13:12 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdClient.so.2 -> libXrdClient.so.2.0.0; -rwxr-xr-x 1 cvmfs cvmfs 663320 Sep 10 03:19 /cvmfs/a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-744308661:91,wrap,wrapper,91,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-744308661,1,['wrap'],['wrapper']
Integrability,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6889#issuecomment-736290535:380,integrat,integration,380,https://root.cern,https://github.com/root-project/root/issues/6889#issuecomment-736290535,2,['integrat'],['integration']
Integrability,"Hi Sir !; Thank you so much for your reply; My Details are as follows; Distributor ID: Ubuntu; Description: Ubuntu 23.04; Release: 23.04; i have downloaded the root file; root_v6.28.06.Linux-ubuntu22-x86_64-gcc11.4(2).tar.gz and now i am trying; to install by Cmake build . process. On Fri, 24 Nov 2023, 12:49 pm Axel Naumann, ***@***.***>; wrote:. > Which version of ROOT, which platform (which Linux distribution, which; > version), how did you configure, what's your compiler?; > Why do you build from source rather than just conda install root or snap; > install root-framework or dnf install root or taking one of the binary; > releases <https://root.cern/releases/release-63000/>?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/14102#issuecomment-1825267807>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/APQNGFXRMQ4DAD5FWHKDUCDYGBGPPAVCNFSM6AAAAAA7YXHLH2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQMRVGI3DOOBQG4>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14102#issuecomment-1825909875:1069,Message,Message,1069,https://root.cern,https://github.com/root-project/root/issues/14102#issuecomment-1825909875,1,['Message'],['Message']
Integrability,"Hi Vassil,. > I think it may be a better approach if we expand the transitive dependencies. Eg. if we have Core<-RIO<-Blah and you specify only RIO, the system should automatically expand Core. The dependencies I am adding in this pull request are not transitive, they are *direct* dependencies created because a library header or source includes a header from the other library. Each commit should have in its message the reason why the dependency is necessary, and I will amend those that don't later. Expanding all dependencies and linking them explicitly probably won't help here, it will just create a lot of unnecessary overlinking. The same is true for optional dependencies, I don't see how expanding all dependencies can help, since the optional dependency is the ""RIO"" from your example, i.e., a direct dependency, even if optional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4299#issuecomment-526039359:78,depend,dependencies,78,https://root.cern,https://github.com/root-project/root/pull/4299#issuecomment-526039359,10,"['depend', 'message']","['dependencies', 'dependency', 'message']"
Integrability,"Hi Vassil,. Could you enhance the commit message with a short explanation of why the fear in the comment are no longer a problem and/or what does D40901 do :) ?. Thanks,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-359567742:41,message,message,41,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-359567742,1,['message'],['message']
Integrability,"Hi Vincenzo,. I mean the ROOT virtual machine which can be mounted on a virtual box. It; is suggested in; https://github.com/root-project/training/tree/master/BasicCourse. Best,; Fatemeh. On Mon, Jan 30, 2023 at 10:24 AM Vincenzo Eduardo Padulano <; ***@***.***> wrote:. > Hi @Fesfandi <https://github.com/Fesfandi> ,; >; > I am not completely sure what you mean by ""ROOT VM"" and I don't think; > there is any release package shipped via cernbox. To install ROOT, please; > follow the installation instructions at https://root.cern/install; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/12158#issuecomment-1408253053>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AUIK6LJT2ZNRYY7QOILGZTLWU6CF7ANCNFSM6AAAAAAUKZAASY>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12158#issuecomment-1408267830:861,Message,Message,861,https://root.cern,https://github.com/root-project/root/issues/12158#issuecomment-1408267830,1,['Message'],['Message']
Integrability,"Hi Xavi, ; Can you remind me please what this PR brings in addition ? ; I see a re-arrange of the functions implementing the fit methods, but in addition what else was changed ? The commits message are short",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2723#issuecomment-602545372:190,message,message,190,https://root.cern,https://github.com/root-project/root/pull/2723#issuecomment-602545372,1,['message'],['message']
Integrability,"Hi Xavier,. I would very much like to be able to use ROOT together with the latest oneAPI beta, if at all possible. Since oneAPI comes (amongst many other things) with TBB, if I want to use ROOT reliably in that environment, it should really use oneAPI's TBB version. (In the past this worked quite well for my tests.). Wanting to hide the public TBB dependency from your interfaces is a good goal. But I would not do it with a forward declaration. Even in case the class would not be hidden behind version specific namespaces. If you do need to use the TBB class in the interface of the class, then tough luck. Then the class can just not hide its dependence on TBB, and that's the end of it. You could however try to design the class such that it would not have to directly reference the `tbb::task_arena` type at all in its interface. Then you could cleanly hide the include of this type into the source file. Long story short: TBB is changing its interface, as we've been warned for a while. If ROOT wants to be able to use multiple versions of TBB at the same time, it must stop relying on explicit names like `tbb::interface7::task_arena`... Cheers,; Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6174#issuecomment-673331218:351,depend,dependency,351,https://root.cern,https://github.com/root-project/root/pull/6174#issuecomment-673331218,6,"['depend', 'interface']","['dependence', 'dependency', 'interface', 'interfaces']"
Integrability,"Hi all! To assess the situation, I tried to build ROOT with CUDNN 9.0 myself, and it is actually a *huge* interface change!. I wouldn't recommend to anyone to do this migration without the help of CI tests, which we don't have for anything CUDA-related. Just for reference, the previous migration to CUDNN 8.0 wasn't done by a core ROOT developer but indeed generously by the Arch package maintainer @kgizdov in 2020:; https://github.com/root-project/root/pull/6058; Of the 3350 lines of code in `tmva/tmva/src/DNN/Architectures/Cudnn`, a significant fraction had to be changed. Therefore, we need to have a discussion: should `cudnn` even be enabled in any build of ROOT?. I have a few more data points, besides the observation that it's only packagers that seem to care about `cudnn=ON`:; * All questions about ""cudnn"" on the forum are about build problems, not actual usage: https://root-forum.cern.ch/search?q=cudnn; * On indico, it also doesn't seem like it's used much: https://indico.cern.ch/search/?q=cudnn&sort=mostrecent; * There is only one presentation about this work (a [summer student talk](https://indico.cern.ch/event/833883/contributions/3494481/attachments/1897066/3136480/SFT_Talk.pdf)). For 3350 lines of code in ROOT where we don't know if they are used, the support burden is very high. IMHO, you, @andresailer and @lahwaacz should consider going for `cudnn=OFF`, and we should only continue to invest in this ROOT component once an actual user complains about its absence either here on GitHub or on the forum. @lmoneta and @dpiparo, what is your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15413#issuecomment-2123646791:106,interface,interface,106,https://root.cern,https://github.com/root-project/root/issues/15413#issuecomment-2123646791,1,['interface'],['interface']
Integrability,"Hi everyone,; the problem arises because `/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/ROOT-env.sh` (or I guess whatever setupATLAS is doing) is not exporting the CMAKE_PREFIX_PATH to all dependencies.; exporting CMAKE_PREFIX_PATH to point to the folder for nlohmann_json fixes this. I.e., this works; ```; export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.23.1/Linux-x86_64/bin/:$PATH; source /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/ROOT-env.sh; export CMAKE_PREFIX_PATH=$JSONMCPP__HOME:$CMAKE_PREFIX_PATH. cat > CMakeLists.txt << EOF; cmake_minimum_required(VERSION 3.20); project(test); find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit). EOF. mkdir -p build; cd build; cmake ..; ```. Cheers,; Andre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10963#issuecomment-1186933339:221,depend,dependencies,221,https://root.cern,https://github.com/root-project/root/issues/10963#issuecomment-1186933339,1,['depend'],['dependencies']
Integrability,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get ; ```; /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name; auto cnv = file->Get<TCanvas>(""c1"");; ^; template ; /test/./load_new.C:6:1: error: Syntax error; auto cnv = file->Get<TCanvas>(""c1"");; ^; FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'; |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>; | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>; | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit; | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'; | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'; | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>; | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root""; | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'; | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'; | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'; | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>; | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit; | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'; | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get; | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'; | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1""; | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'; | | `-CXXDependentScopeMemberExpr 0x5af6326df87",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16560#issuecomment-2402546592:238,depend,dependent,238,https://root.cern,https://github.com/root-project/root/issues/16560#issuecomment-2402546592,1,['depend'],['dependent']
Integrability,"Hi there,. I am wondering what is going on with my bug report. I always need to fix the RootMacro.cmake (see first message) in order to work whenever I update ROOT. Best,; Andreas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1379933531:115,message,message,115,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1379933531,1,['message'],['message']
Integrability,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run?. Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16250#issuecomment-2313078046:45,depend,dependency,45,https://root.cern,https://github.com/root-project/root/issues/16250#issuecomment-2313078046,4,"['depend', 'interface']","['dependency', 'interface']"
Integrability,"Hi! Nothing will happen to the old C++ code. The point of this PR is to have the possibility in C++ to use each command only one time. This is to make it consistent with the pyROOT interface, where the commands will be passed as keyword arguments that can't be repeated. I was just saying that after this PR, we could easily resolve ROOT-2784 by issuing a warning when any command argument is repeated, since now every command that can be repeated has also an aggregate alternative (`Link`, `Import`, and `Slice`). I guess we can even detect if the repeated command is one of these three commands and then suggest the `std::map` alternative in the warning.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8406#issuecomment-860531734:181,interface,interface,181,https://root.cern,https://github.com/root-project/root/pull/8406#issuecomment-860531734,1,['interface'],['interface']
Integrability,"Hi! Since I didn't get feedback yet, I decided to just merge the refactor to check the consistency without the try-catch hack. If you need the public interface after all, fee free to open a new PR about that once this one is merged :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13748#issuecomment-1816424024:150,interface,interface,150,https://root.cern,https://github.com/root-project/root/pull/13748#issuecomment-1816424024,2,['interface'],['interface']
Integrability,"Hi, ; Thank you for applying the changes in the code and to provide a tutorial and a test program. ; I have one more comment:; I still don't like having to pass a double** in the interface (in this case in the constructor). As you see that makes the code not nice (you see that also Travis complained). Since there is no easy solution for this, I would use std::vector<std::vector>> which gives the advantage that you could make it simply directly from a 2D initializer list. Otherwise my second preference is to use a simple double or float pointer and one assumes a proper order of the data. (e.g. raw major). . I would prefer having std::vector<std::vector<double>> for the contained type instead of std::vector<TArrayD>. . Thank you again for your changes and I hope we can merge this PR soon. Sorry for my delay in reviewing it . Lorenzo; Thank you if you can apply the ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-563254077:179,interface,interface,179,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-563254077,2,['interface'],['interface']
Integrability,"Hi, ; Thank you for reporting this bug !; It looks to be a problem in a routine developed by HEP people, but it never came to GSL, it is copied inside Mathmore, ; see https://root.cern/doc/master/complex__quartic_8h_source.html. If I change the code in ROOT::Math::Polynomial::FindRoots to use the generic GSL function, gsl_poly_complex_solve, it ; works fine. This uses an iterative procedure instead of the analytical solution. GSL does not provide a function to solve analytically quartic equations. ; Probably we should change the code in Polynomial and forget about that quartic implementation until somebody fixes it. ; I am not sure if it is used somewhere else (e.g. CLHEP). Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6900#issuecomment-737131560:72,rout,routine,72,https://root.cern,https://github.com/root-project/root/issues/6900#issuecomment-737131560,1,['rout'],['routine']
Integrability,"Hi, ; There is some documentation in the ROOT Users guide, see ; https://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuide.html#numerical-integration. Maybe it is not too visible, and I agree @couet we should probably include in the DOxygen description of the Integration classes. ; We are also missing a tutorial on the INtegratorMultiDim and we should add one before closing this issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740#issuecomment-810332566:148,integrat,integration,148,https://root.cern,https://github.com/root-project/root/issues/7740#issuecomment-810332566,4,"['INtegrat', 'Integrat', 'integrat']","['INtegratorMultiDim', 'Integration', 'integration']"
Integrability,"Hi, ; Yes I have tried and noticed some differences in the output produced when fitting in ROOT. Probably the MInimizer interface used in ROOT needs to be adapted for the new loggiing levels. ; I would prefer doing this and having a fix there ready before merging this one, so I can commit after merging this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-725449092:120,interface,interface,120,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-725449092,1,['interface'],['interface']
Integrability,"Hi, @guitargeek (Jonas)! Great news, I never imagined this would be fixed so soon! I understand that an architectural change will require big work and much testing (depending on how much is already covered).; I don't know whether I shall close it now or when you PR is accepted; feel free to close. Thanks again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8000#issuecomment-827149197:165,depend,depending,165,https://root.cern,https://github.com/root-project/root/issues/8000#issuecomment-827149197,1,['depend'],['depending']
Integrability,"Hi, Attila. We discussed this for a while ourselves, and we designed the classes in the way it was more convenient for ROOT, willing to play the price of adapting to a change of interfaces in tbb when it happens. Of course, we might be wrong and we will review our choices :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6174#issuecomment-673343619:178,interface,interfaces,178,https://root.cern,https://github.com/root-project/root/pull/6174#issuecomment-673343619,1,['interface'],['interfaces']
Integrability,"Hi, Danilo. I missed the inheritance chain comment the first time, although I seriously considered your feedback. My justification for changing the executors in 6.12 is that If we can reduce the damage to user code (e.g. reducing the time a soon to be changed interface is exposed and providing the new one) we should go for it. But I'm not taking a hard stance on this and that's why I opened the PR, to discuss it :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1312#issuecomment-343753485:260,interface,interface,260,https://root.cern,https://github.com/root-project/root/pull/1312#issuecomment-343753485,2,['interface'],['interface']
Integrability,"Hi, I am reopening this as I still need it for my project (dealing with huge amounts of integer waveform data, so TH1I goes into overflow) as suggested by @guitargeek (thanks!). The controversy was about TH1L vs TH1L64, or rather the underlying types: TArrayL vs TArrayL64. Or rather, why do have Long_t vs Long64_t. In my opinion, trying to fix the TArrayL vs TArrayL64 controversy is out of scope for this PR, or too much to ask for my purpose (I am suggesting a new feature, but do not want to be in charge of fixing old designs that were not the right ones). Or, if it should be fixed, it should go into a separate PR by someone else. That being said, I do not think we should wait X years more for that preliminary PR to be merged until this one is done. Also, TH1 is gonna be replaced somehow in templated ROOT7, so I do not think it is worth to invest too much time in fixing old interfaces. So I think providing this new functionality 'as is' wouldn't harm anyone and it would be helpful for (at least) two or three users. What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-1814425550:887,interface,interfaces,887,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-1814425550,1,['interface'],['interfaces']
Integrability,"Hi, I don't understand what temporary gcc's message refers to?. - `GetColumnType` returns a `string` by value that is taken in as a `const string &` by `TypeName2TypeID`, so everything should be fine there; - `TypeName2TypeID` returns a `const type_info &` that is conditionally assigned to a `const auto &` and that should also be ok: the `const type_info &` is produced by expressions such as `typeid(bool)` and that value should have static lifetime. Help?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12085#issuecomment-1401948860:44,message,message,44,https://root.cern,https://github.com/root-project/root/pull/12085#issuecomment-1401948860,1,['message'],['message']
Integrability,"Hi, I had to rebase to change the code format to pass the clang-tools code analysis check (is this new? I didn't have to do this in my previous pull request which had the same formatting as this PR which it is now unhappy with. Also weirdly one of the things it required was in LinkDef.h putting a space before and after ""+"" which isn't consistent with the other lines. Also it required some very weird/bad formatting for calling the function ""plotTwoTGraphs"" in the tutorial added, I think it is trying to reduce the number of characters per line, but it does it in a quite poor way. Also the command that the script ""https://github.com/root-project/root/blob/master/.ci/format_script.sh"" which does this format check says to run to rebase is incorrect. It says to do:. ```; git rebase -i -x ""git-clang-format-7 master && git commit -a --allow-empty --fixup=HEAD"" --strategy-option=theirs origin/master; git rebase --autosquash -i master; ```; But this does not run and complains that master does not exist. It should be; ```; git rebase -i -x ""git-clang-format-8 origin/master && git commit -a --allow-empty --fixup=HEAD"" --strategy-option=theirs origin/master; git rebase --autosquash -i origin/master; ```; [i.e. master-> origin/master]; ). This rebase added some spurious commit messages. When (/if) this pull request is accepted, could you please select ""squash and merge"", it's a lot simpler than me having to rebase and squashing manually in the terminal (which last time I tried I messed up so bad I ended up just having to delete my fork and start over), the title of the PR works as a commit message for the full thing ""Add Relativistic Voigt Function to TMath"". Thanks in advance for any help,; Jack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049#issuecomment-1194998699:1284,message,messages,1284,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1194998699,4,['message'],"['message', 'messages']"
Integrability,"Hi, I think this doesn't need a mention in the release notes because these constructors are only used internally in the `RooChi2Var::create` and apparently no user uses them (their interface was also changed already in 6.26 to use the `Configuration` struct, and there were no complaints).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10566#issuecomment-1130156866:181,interface,interface,181,https://root.cern,https://github.com/root-project/root/pull/10566#issuecomment-1130156866,1,['interface'],['interface']
Integrability,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear; ```; 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'; 104: typename BranchTypes_t = typename Helper::BranchTypes_t>; 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~; 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here; 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;; 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here; 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");; 104: ^; 104: In file included from input_line_10:1:; 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:; 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'; 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));; 104: ~~~~^~~~; 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here; 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");; ```; after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/366#issuecomment-282562121:1791,depend,dependent,1791,https://root.cern,https://github.com/root-project/root/pull/366#issuecomment-282562121,1,['depend'],['dependent']
Integrability,"Hi, I've found this proposal in scope of https://github.com/spack/spack/issues/22616 investigation.; I'd vote for such improvement and can help with it from TBB side. First, I can confirm that TBB 2021 (now it's oneTBB 2021) has CMake build system. Second, oneTBB integration to CMake project may be done in two major ways:; 1. Source integration (`add_subdirectory`) - oneTBB is just built from sources together with user project.; 2. Binary integration (`find_package`) - user project relies on pre-built oneTBB, it is supported through TBBConfig files inside oneTBB packages, for some distributions/versions it will work out-of-the-box, but for others it may require additional CMake variable to be set. [Here ](https://github.com/oneapi-src/oneTBB/blob/master/cmake/README.md#tbbconfig---integration-of-binary-packages)is a short description of binary integration. The (1) way is supported only starting from oneTBB 2021, while the (2) way was [introduced](https://github.com/oneapi-src/oneTBB/tree/tbb_2020/cmake#binary-package-integration) in TBB 2017 U7 and slightly changed in oneTBB 2021. What way is preferable? In theory we can think about some kind of mixed approach.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7063#issuecomment-813264138:264,integrat,integration,264,https://root.cern,https://github.com/root-project/root/issues/7063#issuecomment-813264138,6,['integrat'],"['integration', 'integration-of-binary-packages']"
Integrability,"Hi, Philippe,. Just an update to the issue, ; after having upgraded the OS to Ubuntu 22.04 LTS, Root version 6.30.02. The compilation with ""-Wl, --no-as-needed -lNew"" works fine. . But problems still remain:; run the demo macro of TApplication, Error messages are as following,; ```; Fatal in <operator new>: with std::align_val_t is not implemented yet; aborting; #0 0x00007f7901aea3ea in __GI___wait4 (pid=10250, stat_loc=stat_loc; entry=0x7ffeb2a715a8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f7901aea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffeb2a715a8, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f7901a50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f7902b13034 in TUnixSystem::StackTrace() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #4 0x00007f79029d0702 in DefaultErrorHandler(int, bool, char const*, char const*) () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #5 0x00007f7902a96fe9 in ErrorHandler () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #6 0x00007f7902a97b69 in Fatal(char const*, char const*, ...) () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #7 0x00007f7902d5e6ed in operator new(unsigned long, std::align_val_t) () from /home/koala/ROOT/root_v6.30.02/lib/libNew.so; #8 0x00007f78ff1f5430 in std::pair<llvm::StringMapIterator<llvm::cl::Option*>, bool> llvm::StringMap<llvm::cl::Option*, llvm::MallocAllocator>::try_emplace<llvm::cl::Option*>(llvm::StringRef, llvm::cl::Option*&&) () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #9 0x00007f78ff1f5b3d in (anonymous namespace)::CommandLineParser::addOption(llvm::cl::Option*, llvm::cl::SubCommand*) () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #10 0x00007f78ff1f6805 in llvm::cl::Option::addArgument() () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #11 0x00007f78fb1ba304 in __static_initialization_and_destruction_0(int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1867607489:251,message,messages,251,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1867607489,1,['message'],['messages']
Integrability,"Hi, Thank you @ShamrockLee very much for this contribution!; As a general comment, if this implementation is equivalent, just more efficient than the existing one, then we could just replace it. ; If you think both are useful, we could have two internal (protected) functions for the implementation, but expose them in the same interface eventually adding an option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11949#issuecomment-1361431156:328,interface,interface,328,https://root.cern,https://github.com/root-project/root/pull/11949#issuecomment-1361431156,1,['interface'],['interface']
Integrability,"Hi, hard coding anything related to Athena into ROOT seems weird to me. Maybe the wrapper should take some generic value and then set application specific variables like ROOT_MAX_THREADS?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9805#issuecomment-1030581022:82,wrap,wrapper,82,https://root.cern,https://github.com/root-project/root/issues/9805#issuecomment-1030581022,1,['wrap'],['wrapper']
Integrability,"Hi, if correctness of our code depends on the order of header inclusion we are in for __a lot__ of pain in the future. Could we put something like the following in `RMakeUnique.hxx` instead?. ```c++; #ifdef WIN32; #include <memory> // our supported windows versions always ship with make_unique; #else; // rest of the file; #endif; ```. Also, @dpiparo does this mean that `RMakeUnique.hxx` breaks any build in which `<memory>` already defines `make_unique`? It would be weird we didn't notice, probably I don't understand this failure well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1203#issuecomment-337961364:31,depend,depends,31,https://root.cern,https://github.com/root-project/root/pull/1203#issuecomment-337961364,1,['depend'],['depends']
Integrability,"Hi, it was changed to `unsigned long` because `std::size_t` is platform dependent, as explained by @pcanal here: https://github.com/root-project/root/pull/9374#issuecomment-985770700. So actually it was causing the stream warnings. The issue here can be solved by using `std::numeric_limits<unsigned long>::max()` instead, I will fix that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9468#issuecomment-998006522:72,depend,dependent,72,https://root.cern,https://github.com/root-project/root/issues/9468#issuecomment-998006522,1,['depend'],['dependent']
Integrability,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log; ```#--------------------------------------------------------------------------; cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8); ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------; An exception of category 'FatalRootError' occurred while; [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0; [1] Running path 'dqmoffline_1_step'; [2] Prefetching for module NanoAODDQM/'nanoDQM'; [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'; [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'; [5] Prefetching for module PATMuonRefSelector/'finalMuons'; [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'; [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'; Additional Info:; [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper; Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());; return;; }; else {; (void)(((const reco::TrackBase*)obj)->validFraction());; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------; Anot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16401#issuecomment-2407514028:145,integrat,integration,145,https://root.cern,https://github.com/root-project/root/pull/16401#issuecomment-2407514028,1,['integrat'],['integration']
Integrability,"Hi, not a reviewer either but just offering my two cents to make the PR review more smooth:; - Make sure your PR can actually compile. As @bluehood mentioned, there are many rebasing artifacts throughout the code. Also make sure your code passes clang-format.; - What bugs/issues does this PR actually solve? You mentioned in the previous PR #776 that they ""fixes include additions of new classes as well as genuine bugfixes."", could you elaborate what bugfixes these are? (This would be nice to have in your commit messages); - Some test for whatever you are trying to fix would be great, this PR adds >4600 LOC without one single test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/792#issuecomment-316689045:516,message,messages,516,https://root.cern,https://github.com/root-project/root/pull/792#issuecomment-316689045,1,['message'],['messages']
Integrability,"Hi, some update on this. First, let me try to clear a bit the context. I am not sure why `gc.collect` is being invoked here. Manually invoking the Python garbage collector is not going to give any guarantees on which objects are actually destroyed by the interpreter, it depends on the types and sometimes it's even undefined behaviour, as per the docs https://docs.python.org/3/library/gc.html#gc.collect. Second, even if we had that guarantee, the first and the second loops are doing two wildly different things.; ```; my_data = rvec; ```; Is doing a copy of an `RVec` to another `RVec`, with a thin Python proxy to present it to the user. The copy of an RVec is a well-defined operation in terms of memory management, i.e. it will call the copy-constructor of the `RVec`. Whereas; ```; my_data = numpy.asarray(rvec); ```; Is creating a new numpy array object in memory which is an owning view on the contents of the RVec. The management of the RVec in memory can be clearly seen with this simplified example; ```; process = psutil.Process(). ROOT.gInterpreter.Declare(""""""; auto create_rvec(unsigned int n) {; //return std::array<unsigned int, 3>({n, n, n});; return ROOT::RVec<unsigned int>({n, n, n});; }; """"""); df = ROOT.RDataFrame(100).Define(""my_rvecs"", ""create_rvec(rdfentry_)""); rvecs = df.AsNumpy([""my_rvecs""])[""my_rvecs""]. def get_mem_usage():; return process.memory_info().rss # in kbytes. mem0 = get_mem_usage(); print(mem0). for v2 in rvecs:; n = v2; mem2 = get_mem_usage(); print(mem2); ```. Which doesn't use `gc.collect` but will still show that the memory used is exactly the same at each iteration, no leaks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14981#issuecomment-2006250778:271,depend,depends,271,https://root.cern,https://github.com/root-project/root/issues/14981#issuecomment-2006250778,2,['depend'],['depends']
Integrability,"Hi, thanks for the PR first of all!. Yes, it would be nice to fix that, I see now that the `RooEffGenContext` header and source almost correctly follow the ROOT clang-format style correctly:; https://github.com/root-project/root/blob/master/.clang-format. (well, the header not really, but it also doesn't have that many lines). I think your PR is a good opportunity to correctly format them for good! Could you add an initial commit to this PR where you `clang-format` these files first? You can write in the commit message something like ""this reformatting is done now because the files will be changed in the following commit, and the differences to the ROOT code style were already minor"". And then, on top of the reformatting commit, you could make the commit with your actual new function (and code format again). Does that sound good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12178#issuecomment-1410207241:517,message,message,517,https://root.cern,https://github.com/root-project/root/pull/12178#issuecomment-1410207241,1,['message'],['message']
Integrability,"Hi, thanks for the question!. The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:; https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:; ```C++; void write() {. TParameter<int> x1{""x1"", 5};; std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");; file->WriteObject(&x2, ""x2"");; }; ```; Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:; * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h; * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx; You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16380#issuecomment-2335109569:959,interface,interface,959,https://root.cern,https://github.com/root-project/root/issues/16380#issuecomment-2335109569,2,['interface'],['interface']
Integrability,"Hi, thanks for the reply, indeed, in this case the histograms do have 0 uncertainties. I was just surprised by the 0 probability. I think an error message would help, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13697#issuecomment-1751001556:147,message,message,147,https://root.cern,https://github.com/root-project/root/issues/13697#issuecomment-1751001556,1,['message'],['message']
Integrability,"Hi, thanks for the review!. Yes, sure, that would have also been an option and I was thinking about that when originally implementing `RooDataSet.from_numpy()` last year. The reason why I didn't go for it because then the dataset range is not synchronized anymore with the variable range of the model, which brings you back to the clipping problem: when the NLL iterates over the dataset to evaluate the PDF, the data values will be clipped inside the variable range.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11531#issuecomment-1274638119:243,synchroniz,synchronized,243,https://root.cern,https://github.com/root-project/root/pull/11531#issuecomment-1274638119,1,['synchroniz'],['synchronized']
Integrability,"Hi, the documentation at https://root.cern.ch/doc/v608/classTH3.html#ad6e3388d1f127f018941f932a50a3e2d says:; `The given values (x,y,z) must be between first bin center and last bin center for each coordinate`. Because 0.002 is below the first bin center, you get the error message. I guess you are rather looking for an 'extrapolate' function?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10678#issuecomment-1143413456:274,message,message,274,https://root.cern,https://github.com/root-project/root/issues/10678#issuecomment-1143413456,1,['message'],['message']
Integrability,"Hi, this happens because the overlap checking in TGeo relies on navigation functionality for shapes and TGeoTesselated is just a mesh wrapper that does not provide navigation, so it wrongly used its bounding box functionality. Geometries with tessellations should only be used for conversions/visualization. I am providing a protection as PR for skipping overlap checks if a partner is a tessellation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11784#issuecomment-1328791369:134,wrap,wrapper,134,https://root.cern,https://github.com/root-project/root/issues/11784#issuecomment-1328791369,1,['wrap'],['wrapper']
Integrability,"Hi, this has been discussed a few times and the outcome of the discussion was always that we want a generic `TExecutor` that might run things concurrently or not depending on a policy parameter, but we don't want `TThreadExecutor` to have a sequential mode (it makes the name a misnomer).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6298#issuecomment-686465798:162,depend,depending,162,https://root.cern,https://github.com/root-project/root/pull/6298#issuecomment-686465798,1,['depend'],['depending']
Integrability,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7217#issuecomment-785392761:36,wrap,wrap,36,https://root.cern,https://github.com/root-project/root/issues/7217#issuecomment-785392761,2,['wrap'],['wrap']
Integrability,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error....; I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly?. Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9366#issuecomment-1006425835:21,message,message,21,https://root.cern,https://github.com/root-project/root/issues/9366#issuecomment-1006425835,1,['message'],['message']
Integrability,"Hi,. On Thursday 2015-09-03 10:56, xantares wrote:. > Forgive me but your objections do not seem rock-solid:; > - '""distutils.sysconfig"" is far from robust as claimed' : afaik it; > works very well from 2.6-2.7, 3.1,3.2, 3.3 to 3.4. sure, on Linux. Did you try all main platforms? (And do add at least p2.5,; as that for sure is still in use.). > - ""package as a whole gets split, which risks that one part gets updated; > whereas another doesn't"": how would that be possible for users ? a; > decent package manager should handle that well. A package manager can install wherever it wants and can make its own; adjustment (simply copy over the two files, or put symlinks); this will; affect users building from source. I don't worry about package managers,; only about the latter users. As to 'how': the common case mixing; installations (e.g. from packagers and building from source), versions; (different pythons), system upgrades (that wipe out site-packages), or; simply a user doing 'rm -rf' for only half the installation. Users are; very, very inventive in creating trouble. :P None of that if all of ROOT; is kept in a single directory. So the only upside there seems to be is removing of this teeny-weeny; inconvenience of having to setup PYTHONPATH if you install in /usr/local.; But A) most from-source builders don't do that, they use bin/thisroot.sh,; which sets up PYTHONPATH; and B) installing in /usr/local is not; recommended to begin with, b/c of the same problem with remnants. Debugging a setup problem is very time consuming and frustrating: the; error messages are spurious and only occur on the user's machine to which; I have no access. In sum, I see no upside to speak of, but do see enormous downsides. And; if you really believe otherwise: sign that blood contract. Best regards,. ## Wim. WLavrijsen@lbl.gov -- +1 (510) 486 6411 -- www.lavrijsen.net",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73#issuecomment-137538771:1574,message,messages,1574,https://root.cern,https://github.com/root-project/root/pull/73#issuecomment-137538771,2,"['contract', 'message']","['contract', 'messages']"
Integrability,"Hi,. This PR cannot be merged since the test is failing. Could you please have a look @will-cern ?; ```; Running main() from /googletest-release-1.11.0/googletest/src/gtest_main.cc; [==========] Running 3 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 3 tests from Projections; [ RUN ] Projections.Issue_6658_2D; [ OK ] Projections.Issue_6658_2D (175 ms); [ RUN ] Projections.Issue_6658_3D; [ OK ] Projections.Issue_6658_3D (0 ms); [ RUN ] Projections.Issue_6658_Profile2D; /root/src/core/testsupport/src/TestSupport.cxx:89: Failure; Failed; Received unexpected diagnostic of severity 2000 at 'TROOT::Append' reading 'Replacing existing TH1: x (Potential memory leak).'.; Suppress those using ROOT/TestSupport.hxx; [ FAILED ] Projections.Issue_6658_Profile2D (1 ms); [----------] 3 tests from Projections (176 ms total); ; [----------] Global test environment tear-down; [==========] 3 tests from 1 test suite ran. (176 ms total); [ PASSED ] 2 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] Projections.Issue_6658_Profile2D; ; 1 FAILED TEST; CMake Error at /root/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16194#issuecomment-2285889101:1151,message,message,1151,https://root.cern,https://github.com/root-project/root/pull/16194#issuecomment-2285889101,1,['message'],['message']
Integrability,"Hi,. apologies, I realise that in the post above I wasn't terribly specific about what we needed. A bit more concretely, would it be possible to prepare a new version of ROOT, e.g. 6.28/08 which includes Scott's fix? We will then ask for this to be included in a new LCG104b release. Please could you give us a time estimate for how long this will take to prepare? This will enable us to plan more widely for our transition to AL9/LCG104/gcc13. Thanks a lot and sorry for the previous vague message!. James, John, Nick",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13410#issuecomment-1750752949:491,message,message,491,https://root.cern,https://github.com/root-project/root/issues/13410#issuecomment-1750752949,1,['message'],['message']
Integrability,"Hi,. the LHCb point of view on the issue is that we must be able to know which code we executed, mostly for debugging purposes (understanding why the trigger application took a specific decision counts as debugging for me). When you have an application that can decide which version of a function to run depending on something you cannot control, like the specific CPU on the Grid node or the time of the day, makes the debugging much more tricky (at some point we started storing in each event the binary id and the CPU type used for that event), so we decided that we do not want this kind of automatic dispatching: an application compiled to run on a Nehalem equivalent CPU should run only instructions valid for Nehalem processors, even if the actual CPU can do better. Our approach is that we still have some functions that have different implementations for different instructions sets (basically scalar, sse4.2 and avx2), but we chose at compile time which one to use by adding something like `-mavx2` or `-march=haswell` to the compile flags. And yes, it should be a cmake flag, but you are most welcome to have also the `ARCH=dynamic` option. OTOH you are talking about RooFit and AFAIK we do not use it in trigger, reconstruction or simulation software, but it is only used for the analysis, and there we have less constraints, as it has become common practice to use Conda based installations, so builds and versions decoupled from our production software.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7361#issuecomment-791253985:304,depend,depending,304,https://root.cern,https://github.com/root-project/root/issues/7361#issuecomment-791253985,1,['depend'],['depending']
Integrability,"Hi,; After some more thinking, I believe we have to close this and rethink the all thing.; I found particularly tricky this point raised by Philippe:. > a good example is two free standings (not attached to any directory) histograms that happens to have the same name in two distinct and independent part of the code (e.g. two CMSSW modules). Supporting this case makes basically impossible to have an identifier for the histogram. In this moment I do not see how we can synchronize objects that we cannot somehow tag being together. In PROOF we somehow implicitly assumed that this could not happen (PROOF is not supporting it). > Rather than a completely global state, wouldn't it make sense to have a wrapper object (for example TThreadedObject) be the holder of the lock and list for a single set of related histogram. This looked an appealing idea. However, it means that the member of a TThreadedObject has to know that is part of a TThreadedObject (which is not the case now) or that we should have a specialized TThreadedObject for histograms that does some settings on the histograms to steer the special behavior. And remains the fact that people will be forced to use a TThreadedObject (which may be ok). Perhaps it is also worth to investigate if we can find an improved bin-finding algorithm that gives consistent binnings in the first place that can be merged. That would solve the problem at the roots. Cheers,; Gerri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/902#issuecomment-325917665:471,synchroniz,synchronize,471,https://root.cern,https://github.com/root-project/root/pull/902#issuecomment-325917665,2,"['synchroniz', 'wrap']","['synchronize', 'wrapper']"
Integrability,"Hi,; I see these messages in the xrootd code; https://github.com/xrootd/xrootd; but it is beyond me to find the problem. Maybe it is time to include Andy; etc. Cheers,; Rod. On Mon, 11 Jan 2021 at 17:19, rdschaffer <notifications@github.com> wrote:. > Well looking at the debug logs, all failed jobs die after ""kXR_protocol""; > and before "" and before ""Sending out kXR_login request"". I haven't been; > able to download logs from too many successful jobs. But I have three - two; > reading from RAL and one reading in LAPP. I give a link to the log files; > and the last DEBUG line of the failed jobs and the same line plus the next; > for the successful jobs. So perhaps a question of what is happening in the; > code between these two points?; >; > see you, RD; >; > Successful RAL:; >; >; > https://bigpanda.cern.ch//media/filebrowser/667e8363-d9bb-4ebd-800f-79d3495d1b3a/panda/tarball_PandaJob_4925629005_RAL/payload.stdout; >; > [2020-12-18 14:20:13.919081 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server; > [], protocol version 400); > [2020-12-18 14:20:13.919352 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request,; > username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&; > xrd.info=&xrd.hostname=tatls002-2010227.0-lcg2237.gridpp.rl.ac.uk&xrd.rn=v4.10.0,; > dual-stack: false, private IPv4: true, private IPv6: false; >; > Successful UK WATERLOO:; >; >; > https://bigpanda.cern.ch//media/filebrowser/772fff72-3e22-499f-8a3f-aa8956ea5636/panda/tarball_PandaJob_4926186410_RAL/payload.stdout; >; > [2020-12-19 00:45:02.375203 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server; > [], protocol version 400); > [2020-12-19 00:45:02.375430 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request,; > username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=run",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758074953:17,message,messages,17,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758074953,1,['message'],['messages']
Integrability,"Hi,; I thought the wrapper would be under suspicion at some stage, so disabled; it in; https://bigpanda.cern.ch/job?pandaid=4946999888. == Conditional jump or move depends on uninitialised value(s); ==2512== at 0x4F01099: TStorage::UpdateIsOnHeap(unsigned int const; volatile&, unsigned int volatile&) (in; /srv/workDir/usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/lib/libH4lAnalysisRun2Lib.so); ==2512== by 0x5A78179: TInetAddress::TInetAddress() (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x5B81DD5: TUnixSystem::GetHostByName(char const*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x5ABC6E2: TSystem::IsPathLocal(char const*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x53D12DC: TFile::GetType(char const*, char const*,; TString*) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libRIO.so); ==2512== by 0x53D2847: TFile::Open(char const*, char const*, char; const*, int, int) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libRIO.so); ==2512== by 0x403275: main (in; /srv/workDir/usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/bin/runH4lAnalRun2); ==2512== Uninitialised value was created by a stack allocation; ==2512== at 0x5ABC43E: TSystem::IsPathLocal(char const*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512==; ==2512== Conditional jump or move depends on uninitialised value(s); ==2512== at 0x4F01099: TStorage::UpdateIsOnHeap(unsigned int const; volatile&, unsigned int volatile&) (in; /srv/workDir/usr/HZZAnalRun2Cod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759537229:19,wrap,wrapper,19,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759537229,2,"['depend', 'wrap']","['depends', 'wrapper']"
Integrability,"Hi,; It is easy to bring ping to work!; But that does not necessarily mean that wget works.; Georg; Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:; > ; > ﻿; > There is a ugly workaround to check for network:; > ; > execute_process(; > COMMAND ping www.github.com -n 2 -w 1000; > RESULT_VARIABLE NO_CONNECTION; > ); > And then use NO_CONNECTION like for example:; > ; > if(NO_CONNECTION EQUAL 1); > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""); > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE); > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE); > else(); > ...; > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-865289345:444,message,message,444,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-865289345,1,['message'],['message']
Integrability,"Hi,; It is interesting that this job fails with the same segfault, although it; does not use directio for the inputs; https://bigpanda.cern.ch/job?pandaid=4946328705. It has some hardwired TFile open from RD. [2021-01-12 06:55:54.209757 -0500][Debug ][PostMaster ]; Creating new channel to: this-will-totally-fail:1094 1 stream(s); [2021-01-12 06:55:54.209835 -0500][Debug ][PostMaster ]; [this-will-totally-fail:1094 #0] Stream parameters: Network Stack:; IPAuto, Connection Window: 120, ConnectionRetry: 5, Stream Error; Window: 1800; [2021-01-12 06:55:54.209937 -0500][Debug ][TaskMgr ]; Registering task: ""TickGeneratorTask for: this-will-totally-fail:1094""; to be run at: [2021-01-12 06:56:09 -0500]; [2021-01-12 06:55:54.209976 -0500][Debug ][ExDbgMsg ]; [this-will-totally-fail:1094] MsgHandler created: 0x3171890 (message:; kXR_open (file: , mode: 00, flags: kXR_open_read kXR_async kXR_retstat; ) ).; [2021-01-12 06:55:54.210005 -0500][Dump ][PostMaster ]; [this-will-totally-fail:1094 #0] Sending message kXR_open (file: ,; mode: 00, flags: kXR_open_read kXR_async kXR_retstat ) (0x31933e0); through substream 0 expecting answer at 0; [2021-01-12 06:55:54.210582 -0500][Error ][Utility ] Unable; to resolve this-will-totally-fail:1094: Name or service not known; [2021-01-12 06:55:54.210595 -0500][Error ][PostMaster ]; [this-will-totally-fail:1094 #0] Unable to resolve IP address for the; host; [2021-01-12 06:55:54.210610 -0500][Error ][XRootD ]; [this-will-totally-fail:1094] Unable to send the message kXR_open; (file: , mode: 00, flags: kXR_open_read kXR_async kXR_retstat ):; [FATAL] Invalid address; [2021-01-12 06:55:54.210651 -0500][Debug ][ExDbgMsg ]; [this-will-totally-fail:1094] Destroying MsgHandler: 0x3171890.; Error in <TNetXNGFile::Open>: [FATAL] Invalid address; [2021-01-12 06:55:54.211229 -0500][Debug ][Utility ]; Monitor library name not set. No monitoring. The TFile is expected to fail, but why the segfault?; The jobs ran on native CentOS, so the singularity conta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758618647:822,message,message,822,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758618647,1,['message'],['message']
Integrability,"Hi,; It is overloading some network related commands to provide a record of what; users are remote accessing. It creates; https://bigpanda.cern.ch//media/filebrowser/5e40cf5d-179e-4126-ad56-e0bb0173cbd5/panda/tarball_PandaJob_4911855304_CERN/pandatracerlog.txt. 2020-12-04 18:55:07.949713 : INFO connect:; ::2001:1458:301:62:0:0:1094 cmd: runH4lAnalRun2. where IPv6 always rings alarm bells with me. This would be a; node/site,RSE dependence. Cheers,. Rod. On Mon, 14 Dec 2020 at 10:31, Attila Krasznahorkay <notifications@github.com>; wrote:. > Hi Rod,; >; > What does; >; > LD_PRELOAD=/srv/workDir/96340ef3-75b1-46cf-8910-8a2f76b7068c/$LIB/wrapper.so; >; > do? That would be my first suspect. Since $LD_LIBRARY_PATH lists our; > software directories in the correct order, based on just that XRootD; > *should* be found under:; >; > [bash][thor]:~ > ls -l /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrd*; > lrwxrwxrwx 1 cvmfs cvmfs 19 Sep 10 13:12 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so -> libXrdAppUtils.so.1; > lrwxrwxrwx 1 cvmfs cvmfs 23 Sep 10 13:12 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so.1 -> libXrdAppUtils.so.1.0.0; > -rwxr-xr-x 1 cvmfs cvmfs 74512 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so.1.0.0; > -rwxr-xr-x <http://atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so.1.0.0-rwxr-xr-x> 1 cvmfs cvmfs 18432 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdBlacklistDecision-4.so; > -rwxr-xr-x <http://atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/Inst",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-744315185:431,depend,dependence,431,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-744315185,2,"['depend', 'wrap']","['dependence', 'wrapper']"
Integrability,"Hi,; Letting the valgrind output go to stdout, it looks completely different; /afs/cern.ch/user/w/walkerr/public/RD_valgrid_stdout.log. I`ll try with this; --suppressions=valgrind-root.supp; to see if it reduces it. Cheers,; Rod. On Wed, 13 Jan 2021 at 18:53, Rodney Walker <; rodney.walker@physik.uni-muenchen.de> wrote:. > Hi,; > Sure; > /afs/cern.ch/user/w/walkerr/public/valg.log_nowrapper; > I have no idea what the binary junk is in there. I run it like this; >; > valgrind --log-file=../valg.log --leak-check=full --trace-children=yes; > --track-origins=yes --error-limit=no; > usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/bin/runH4lAnalRun2; > $@; >; > but have no experience of valgrind so open to corrections.; >; > Cheers,; > Rod.; >; >; > On Wed, 13 Jan 2021 at 18:47, Axel Naumann <notifications@github.com>; > wrote:; >; >> Can you share the while valgrind report without wrapper? The error you; >> quote is intentional (and part of the ROOT suppression file).; >>; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub; >> <https://github.com/root-project/root/issues/6948#issuecomment-759611858>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/ABNFVRQSF742BV7R7BKKHV3SZXMDPANCNFSM4U2MLUJA>; >> .; >>; >; >; > --; > Tel. +49 89 289 14152; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759984606:903,wrap,wrapper,903,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759984606,1,['wrap'],['wrapper']
Integrability,"Hi,; My apologies if i shouldn't post in this forum. I have a similar problem, i.e. a bus error on my MacBook Air M2 Sonoma 14.5 (Xcode 15.4 / clang 15.0.0) - root 6.30/06 ; (I've tried the binaries from the 'official' distribution, from homebrew and even recompiling the sources). If I run root from Terminal.app it gives me a bus error with the same ""message"" as TheCodeEater on April 3rd. . root [0] new TBrowser(). *** Break *** bus error; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). But i **don't get** a bus error IF: ; a) I run root as regular user from an xterm ; b) I run ""sudo root"" from the Mac's Terminal.App. Any help is appreciated.; Francesco",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15129#issuecomment-2127806901:353,message,message,353,https://root.cern,https://github.com/root-project/root/issues/15129#issuecomment-2127806901,1,['message'],['message']
Integrability,"Hi,; RD thinks this is the relevant part .... ==2505== at 0x4C2D257: __strncmp_sse42 (vg_replace_strmem.c:649); ==2505== by 0x4E36472: connect (in; /srv/workDir/e8d1c011-6cad-4b4c-b0ad-5b9f65b33eb0/lib64/wrapper.so); ==2505== by 0x3F7B62B8: XrdNetConnect::Connect(int, sockaddr const*,; int, int) (in /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2.0.0; ). /afs/cern.ch/user/w/walkerr/public/valg.log. Cheers,; Rod. On Tue, 12 Jan 2021 at 20:06, Rodney Walker <; rodney.walker@physik.uni-muenchen.de> wrote:. > Hi,; > I can run with valgrind now. https://bigpanda.cern.ch/job?pandaid=4946556588; > ends with; > ==2505== by 0x3FD274BC: XrdCl::File::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, XrdCl::OpenFlags::Flags, XrdCl::Access::Mode, unsigned short) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); >; > but maybe I did not have the right arguments. I tried again with; >; > --trace-children=yes --track-origins=yes --error-limit=no; > Should be; > https://bigpanda.cern.ch/job?pandaid=4946562660; >; > Cheers,; >; > Rod.; >; >; > On Tue, 12 Jan 2021 at 14:49, Attila Krasznahorkay <; > notifications@github.com> wrote:; >; >> In AnalysisBase-21.2.91 we used XRootD 4.8.4.; >>; >> And @#$% me... How did I not remember this earlier?!? Is this not all; >> about; >>; >> https://its.cern.ch/jira/browse/ATLASG-1546; >>; >> [image: Screenshot from 2021-01-12 14-46-12]; >> <https://user-images.githubusercontent.com/30694331/104322255-0438b000-54e5-11eb-897e-8d1ae2a125d4.png>; >>; >> ? I.e. it may not be the XRootD version after all, but the version of; >> ROOT... However, if this *is* the case, then AnalysisBase-21.2.140+; >> should *not* show the issue anymore. 🤔; >>; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759275653:204,wrap,wrapper,204,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759275653,1,['wrap'],['wrapper']
Integrability,"Hi,; Right, I had a typo.; /afs/cern.ch/user/w/walkerr/public/RD_valgrid_stdout.log; /afs/cern.ch/user/w/walkerr/public/RD_valgrid_stdout_supp.log. The latter has an attempt to suppress the root known messages, and has; the slightly promising. [2021-01-14 04:10:07.044153 -0500][Debug ][XRootDTransport ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Sending out kXR_login request,; username: usatlas3, cgi:; ?xrd.cc=us&xrd.tz=-5&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=acas1060.usatlas.bnl.gov&xrd.rn=v4.10.0,; dual-stack: false, private IPv4: false, private IPv6: false; [2021-01-14 04:10:07.046851 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Wrote a message: (0x3cc60ff0), 134; bytes; [2021-01-14 04:10:07.052644 -0500][Dump ][XRootDTransport ] [msg:; 0x3cbf39a0] Expecting 49 bytes of message body; [2021-01-14 04:10:07.053325 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Received message header, size: 8; [2021-01-14 04:10:07.053800 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Received a message of 57 bytes; [2021-01-14 04:10:07.058654 -0500][Debug ][XRootDTransport ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Logged in, session:; 7b7dbbd4cfaff647f020363a59db1b5c; [2021-01-14 04:10:07.059797 -0500][Debug ][XRootDTransport ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Authentication is required:; &P=gsi,v:10400,c:ssl,ca:f5f0dfc2; ==2495== Can't extend stack to 0x414a7fc8 during signal delivery for thread 2:; ==2495== no stack segment; ==2495==; ==2495== Process terminating with default action of signal 11; (SIGSEGV): dumping core; ==2495== Access not within mapped region at address 0x414A7FC8; ==2495== at 0x6703DF7: vfprintf (in /usr/lib64/libc-2.17.so); ==2495== If you believe this happened as a result of a stack; ==2495== overflow in your program's main thread (unlikely but; ==2495== possible), you can try to increase the size of the; ==2495== main thread stack using the --main-stacksize= flag.; ==2495== The main thread stack size used in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760074314:201,message,messages,201,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760074314,4,['message'],"['message', 'messages']"
Integrability,"Hi,; Sure; /afs/cern.ch/user/w/walkerr/public/valg.log_nowrapper; I have no idea what the binary junk is in there. I run it like this. valgrind --log-file=../valg.log --leak-check=full --trace-children=yes; --track-origins=yes --error-limit=no; usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/bin/runH4lAnalRun2; $@. but have no experience of valgrind so open to corrections. Cheers,; Rod. On Wed, 13 Jan 2021 at 18:47, Axel Naumann <notifications@github.com> wrote:. > Can you share the while valgrind report without wrapper? The error you; > quote is intentional (and part of the ROOT suppression file).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-759611858>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRQSF742BV7R7BKKHV3SZXMDPANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759615449:532,wrap,wrapper,532,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759615449,1,['wrap'],['wrapper']
Integrability,"Hi,; first of all thank you for your contribution. I am in no position to actually review the content of the pull request, but it seems you are adding two commits with unclear descriptions that change 37 files and 4000+ lines -- making it a hard PR to review. If you have time and it sounds reasonable to you, it might be desirable to split the PR in commits containing small self-contained logical changes (with a descriptive commit message). Perhaps more importantly, it seems some rebasing artifacts like; ```; +<<<<<<< HEAD; ```; were left in the code. Cheers,; Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/792#issuecomment-316685899:434,message,message,434,https://root.cern,https://github.com/root-project/root/pull/792#issuecomment-316685899,1,['message'],['message']
Integrability,"Hi,; still not working:; It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection; -- The C compiler identification is GNU 8.3.1; -- The CXX compiler identification is GNU 8.3.1; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.27.0""); -- Checking internet connectivity...; -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt; --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt; Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6; Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected.; Unable to establish SSL connection.; ussapc@warlv0010/~$ echo $?; 4. man of wget says:; EXIT STATUS; Wget may return one of several error codes if it encounters problems. 0 No problems occurred.; 1 Generic error code.; 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc...; 3 File I/O error.; 4 Network failure.; 5 SSL verification failure.; 6 Username/password authentication failure.; 7 Protocol errors.; 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-867634208:1582,Protocol,Protocol,1582,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-867634208,1,['Protocol'],['Protocol']
Integrability,"Hi; few comments after digging a bit in the code... . - it looks the problem is not in the RooDataHist itself but it's in the plotOn function. If you check the RooDataHist content, bin content is equal to the original histogram. The problem looks coming from this line [0]: if you comment it then the plot looks good.; - the plotting problem occurs also when you get a PDF from the RooDataHist using RooHistPdf. If you compare the PDF with the original histogram (scaled to have integral equal to one), the fixed size bin histogram looks good while the variable size bin histogram doesn't. In this case I didn't find how to fix the problem (the RooHistPdf code is a lot more complicated than the RooDataHist routine) but checking the behaviour of the PDF (i.e fitting the PDF to the RooDataHist), everything looks ok both for the fixed and variable size histogram. See the attached modified version of the previous code to see the PDF begaviour mentioned above. Best. Attilio. [0] https://github.com/root-project/root/blob/b8b0a8150325be271b45038dd81b751cb8a7a41d/roofit/roofitcore/src/RooHist.cxx#L434. ```using namespace RooFit;. int nEntries = 1000000;. void myTestRooDataHist() {. const int nBin=100;; double xbins[nBin+1];; const float left_Val = 150;; const float rightVal = 1150; ; const float logxmin = TMath::Log10(left_Val);; const float logxmax = TMath::Log10(rightVal);; const double dxLog = (logxmax-logxmin)/nBin;; for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);; f1->SetParameters(1e2,-1e-2);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);; RooRealVar expo(""expo"", ""expo"", -1.0, -0.00001);; RooExponential fitExpoFun(""background"", ""background"", mInv, expo);. TH1D *h1 = new TH1D(""h1"","""",nBin,left_Val,rightVal);; h1->FillRandom(""f1"",nEntries);; RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,h1,1);; TCanvas *cExpo1 = new TCanvas(""cExpo1"","""",600,600);; gPad->SetLogx();; gPad->SetLogy();; auto plot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16028#issuecomment-2277514164:708,rout,routine,708,https://root.cern,https://github.com/root-project/root/issues/16028#issuecomment-2277514164,1,['rout'],['routine']
Integrability,"Histo1D(""x"")->DrawClone(); IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1833762580:561,interface,interface,561,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1833762580,2,['interface'],['interface']
Integrability,"Histo1D(""x"")->DrawClone(); IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:689,interface,interface,689,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,2,['interface'],['interface']
Integrability,"Hi，. This PR should be able to work. Let me know if there is any more test I should do?. Zhe; Get Outlook for iOS<https://aka.ms/o0ukef>; ________________________________; From: Philippe Canal <notifications@github.com>; Sent: Friday, December 15, 2017 11:58:35 PM; To: root-project/root; Cc: Zhe Zhang; Mention; Subject: Re: [root-project/root] Use TTaskGroup interface to unzip baskets in parallel. (#1010). Hi,. What is the current status?. Thanks,; Philippe. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/root-project/root/pull/1010#issuecomment-352041416>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AFNlv-BHdUVdXZimUdINFb9yBtGjbgbpks5tApcrgaJpZM4PbhS5>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-352102770:361,interface,interface,361,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-352102770,1,['interface'],['interface']
Integrability,"Hmm, I already did what I quoted in my last comment.; Now if I did:; git rebase upstream/master; ->; Applying: cppcheck: fix some reports; Applying: fix warnings for catch; julien@debian:~/projects/root$ git push; Username for 'https://github.com': serval2412; Password for 'https://serval2412@github.com': ; To https://github.com/serval2412/root; ! [rejected] master -> master (non-fast-forward); error: failed to push some refs to 'https://github.com/serval2412/root'; hint: Updates were rejected because the tip of your current branch is behind; hint: its remote counterpart. Integrate the remote changes (e.g.; hint: 'git pull ...') before pushing again.; hint: See the 'Note about fast-forwards' in 'git push --help' for details.; What should I do then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1435#issuecomment-361205718:579,Integrat,Integrate,579,https://root.cern,https://github.com/root-project/root/pull/1435#issuecomment-361205718,1,['Integrat'],['Integrate']
Integrability,"Hmm, this is fishy. It was my impression that the PrintMatrix macro actually wasn't used in active code anywhere (maybe only true for master at the time of integration and not for the snapshot at 6.14?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2983#issuecomment-439092676:156,integrat,integration,156,https://root.cern,https://github.com/root-project/root/pull/2983#issuecomment-439092676,1,['integrat'],['integration']
Integrability,"Hmm... Okay, so you use `ROOT_DIR`. I could reproduce the issue with that finally. Though still a bit differently from what you posted just now. ```; [bash][pcadp04]:buildtest > cmake -DROOT_DIR=/mnt/hdd1/krasznaa/projects/root/install/cmake ../findtester/; -- The CXX compiler identification is GNU 11.3.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /mnt/hdd1/krasznaa/projects/root/install/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /mnt/hdd1/krasznaa/projects/root/install/cmake/ROOTConfig.cmake:137 (find_dependency); CMakeLists.txt:5 (find_package). -- Configuring incomplete, errors occurred!; See also ""/mnt/hdd1/krasznaa/projects/root/buildtest/CMakeFiles/CMakeOutput.log"".; [bash][pcadp04]:buildtest >; ```. I.e. One should not use `<Foo>_DIR` normally, as that needs to point at the directory holding the CMake code. While `<Foo>_ROOT` is a much easier-to-use variable. I'll open a PR with the update, but I'm less and less convinced that the issue would be in ROOT at this point, and not in your build setup. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163#issuecomment-1840438213:604,message,message,604,https://root.cern,https://github.com/root-project/root/issues/14163#issuecomment-1840438213,1,['message'],['message']
Integrability,"Hmm... That in principle looks fine... So okay, your test job **is** relevant. Unfortunately I'm running out of ideas. The XRootD build in `AnalysisBaseExternals` does depend on a couple of libraries from the OS. But these should only be things that are part of HEP_OSlibs. So the worker nodes should not really have different versions of them... ```; [bash][lxplus730]:~ > ldd -r /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrd*.so | grep "" /lib"" | sed ""s/\(.*\) (0x.*)/\1/g"" | sort | uniq ; 	libc.so.6 => /lib64/libc.so.6; 	libcom_err.so.2 => /lib64/libcom_err.so.2; 	libcrypt.so.1 => /lib64/libcrypt.so.1; 	libcrypto.so.10 => /lib64/libcrypto.so.10; 	libcurl.so.4 => /lib64/libcurl.so.4; 	libdl.so.2 => /lib64/libdl.so.2; 	libfreebl3.so => /lib64/libfreebl3.so; 	libgssapi_krb5.so.2 => /lib64/libgssapi_krb5.so.2; 	libidn.so.11 => /lib64/libidn.so.11; 	libk5crypto.so.3 => /lib64/libk5crypto.so.3; 	libkeyutils.so.1 => /lib64/libkeyutils.so.1; 	libkrb5.so.3 => /lib64/libkrb5.so.3; 	libkrb5support.so.0 => /lib64/libkrb5support.so.0; 	liblber-2.4.so.2 => /lib64/liblber-2.4.so.2; 	libldap-2.4.so.2 => /lib64/libldap-2.4.so.2; 	libm.so.6 => /lib64/libm.so.6; 	libnspr4.so => /lib64/libnspr4.so; 	libnss3.so => /lib64/libnss3.so; 	libnssutil3.so => /lib64/libnssutil3.so; 	libpcre.so.1 => /lib64/libpcre.so.1; 	libplc4.so => /lib64/libplc4.so; 	libplds4.so => /lib64/libplds4.so; 	libpthread.so.0 => /lib64/libpthread.so.0; 	libresolv.so.2 => /lib64/libresolv.so.2; 	librt.so.1 => /lib64/librt.so.1; 	libsasl2.so.3 => /lib64/libsasl2.so.3; 	libselinux.so.1 => /lib64/libselinux.so.1; 	libsmime3.so => /lib64/libsmime3.so; 	libssh2.so.1 => /lib64/libssh2.so.1; 	libssl.so.10 => /lib64/libssl.so.10; 	libssl3.so => /lib64/libssl3.so; 	libz.so.1 => /lib64/libz.so.1; [bash][lxplus730]:~ >; ```. Could the version of some of these not be ""well defined"" on the grid nodes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746514897:168,depend,depend,168,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746514897,1,['depend'],['depend']
Integrability,"Hmmh, but then I'd need to stream path information with every REveText object, now only the font name is streamed. It is indeed a reasonable thing to check if the font files exist before object's json is sent over to the client --- but creating a font during the streaming traversal would be pushing it a bit. Is it possible to register custom prefixes and callbacks from REveManager (via RWebWindow) so they can be handled when requests come in? Like: http://server/sdf-fonts/. I went through the code a bit (but clearly do not have the full picture) ... one way would be to add THttpServer::fActiveLocations, where instead of replacement string one provides a lambda [](TString& prefix, TString& reminder, THttpRequest& req, THttpServer &srv) so one can then do appropriate lookup in the callback, potentially generating the font, and then calling srv->SendFile() (or sending back the default font, if the desired one can not be found/generated). I think this functionality could be useful for other cases in REve, where semi-static data needs to be provided. The font-generation code in REveText invokes TGL generator through the interpreter now, via gROOT->ProcessLine(), to avoid dependency of REve on RGL. Is this OK to do from a request handler thread or should cross-thread request to the main thread be made (and request told to try again in N seconds)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2176441216:1185,depend,dependency,1185,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2176441216,2,['depend'],['dependency']
Integrability,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4060#issuecomment-510894439:51,interface,interface,51,https://root.cern,https://github.com/root-project/root/pull/4060#issuecomment-510894439,1,['interface'],['interface']
Integrability,"How costly is regenerating lib/modules.idx, and which targets depend on this file (i.e. what gets rebuild just because this file got regenerated)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7125#issuecomment-912938424:62,depend,depend,62,https://root.cern,https://github.com/root-project/root/issues/7125#issuecomment-912938424,1,['depend'],['depend']
Integrability,How did you discover that this was needed? GetCollectionEntryName is a protected/internal routine that is never called will a nullptr. Maybe an assert or something is more appropriate improvement?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6634#issuecomment-709390383:90,rout,routine,90,https://root.cern,https://github.com/root-project/root/pull/6634#issuecomment-709390383,1,['rout'],['routine']
Integrability,"How is it accidental? It was totally on purpose, solving other occurrences of this exact same issue. I suppose, because i have not seen any issue / error message / backtrace, so all I can do is guess and assume :-) Can you please provide some details on the issue you try to fix? Can you please rebase this branch onto master? We do not allow merge commits (unless fast forward).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8717#issuecomment-885080317:154,message,message,154,https://root.cern,https://github.com/root-project/root/pull/8717#issuecomment-885080317,1,['message'],['message']
Integrability,How much will it help ATLAS if I fix this reproducer? What is the actual failure's error message?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12406#issuecomment-1542907415:89,message,message,89,https://root.cern,https://github.com/root-project/root/issues/12406#issuecomment-1542907415,1,['message'],['message']
Integrability,"How would we do that with Define?. Is it not possible to store these indexes in the trees when they are produced? If not, currently you have three possible solutions that I can think of:. - calculate the index from the value of `rdfentry_`, knowing how many entries are in each tree and their ordering inside the TChain; - store some unique identifier in each tree when it's produced (even a timestamp works, and although it's not elegant you don't have to worry about having that same value stored in each event because it will compress almost perfectly, occupying very little extra space on disk). With that unique identifier per tree you can build another tree that serves as a lookup table between id and index. It will have two branches, `id` and `index`, with the first taking the values of the ids of each tree and the second being an index from 0 to nTrees-1. Then you can use `TTree::BuildIndex` and `TChain::AddFriend` to add that lookup table tree as a friend of the original chain and thanks to `BuildIndex` the correct value of `index` will be returned for each event depending on the value of `id` in the original chain. More info at https://root.cern/manual/trees/#indexing-trees; - do a pass on each input tree to calculate whatever other quantities you need to calculate (let's call these trees `aux1`, `aux2` etc.), then make a TChain out of the original trees, another TChain out of the `aux` trees, and then add the second chain as a friend of the first (effectively creating a single large ""virtual"" TTree with everything in it). The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:. ```cpp; df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); ```. where `rdfsampleinfo_.AsString()` will be of the form `<filename>/<treename>`. I exp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-929346153:1364,depend,depending,1364,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-929346153,2,['depend'],['depending']
Integrability,"However, if I run with `ctest --output-on-failure -R roottest-root-dataframe` then tests pass, so I guess some test dependencies may be missing? Certainly looks like I run into the same problem as in #7366.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823925412:116,depend,dependencies,116,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823925412,1,['depend'],['dependencies']
Integrability,"I added the TH1 changes, this leads to a lot of warnings,; I guess this comes from implementations expecting the old interfaces.; Should I keep the old interfaces as well so whatever was implementing them to ""see"" what's expected ? (excuse my ignorance but I haven't been coding consistently for some time to remember this much by heart)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7193#issuecomment-786729943:117,interface,interfaces,117,https://root.cern,https://github.com/root-project/root/pull/7193#issuecomment-786729943,2,['interface'],['interfaces']
Integrability,"I added the error message to the commit log, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9725#issuecomment-1023164434:18,message,message,18,https://root.cern,https://github.com/root-project/root/pull/9725#issuecomment-1023164434,1,['message'],['message']
Integrability,"I addition to the fix for the one-line printing, I would like to get one last commit in, https://github.com/root-project/root/pull/6705/commits/bcd7adeddf2997feb588ec1c61a67e0247cdb92f. I think the warning levels need to be tweaked for some messages (but this can be done in later PRs). I just did this here for VariableMetricBuilder, because these are rather prominent messages. I changed two warnings into info messages, because the reported issue is not so severe that it warrants a warning, and it is something that happens fairly often in my experience. On the other hand, I promoted a warning to an error message. If VariableMetricBuilder cannot run at all because the initial EDM is negative, I would consider this an error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-732211063:241,message,messages,241,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-732211063,4,['message'],"['message', 'messages']"
Integrability,"I agree that it is an unfortunate circumstance to have the test not passing. However, I still urge you to consider the effect on debugability removing strict tests will have. I have wasted a lot of time trying to track down a subtle bug due to loose tests which left me unable to determine where the bug came from. Conversely, setting tests strictly and tracing discrepancies, I found a different bug in the Kahan sum: #11940. Unit tests especially should be as strict as possible. In absence of unit tests (which unfortunately is the case for the parts of RooFit I worked on), strict ""integration"" tests like these are the closest I could get. Note also that it was simply part of my original assignment: to ensure users can trust the new parallelized methods, I built them to be bit-wise exactly equal to the old methods. So, I know from experience how tedious it is to trace down these bit-wise differences to their actual concrete source, but also think that because we are dealing with scientific software, precision, robustness, reliability and interpretability (of components and hence the whole) are important. Of course, performance is an important factor too, but it's just one of the aspects. We want the end-results of experiments to be accurate and explainable, right? I personally at least don't like when I have to sell a ""because of floating point errors"", because I've been bitten by them a few times now. Now, I'm also well aware that the project only has a given amount of resources and I myself am currently more or less out of resources (I can spend only my free time), so my vote probably doesn't count strongly :) If I could be of more practical help in this, I would definitely be happy to, but I also don't have a non-x86 machine, so it's not feasible for me to do much right now. So, feel free to make a call on this as you all best see fit!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1538758017:586,integrat,integration,586,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1538758017,2,['integrat'],['integration']
Integrability,"I agree that the interface is somewhat dangerous but the docs clearly mention its limitations. However, dangerous or not, this is currently broken and should be fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14135#issuecomment-1830160591:17,interface,interface,17,https://root.cern,https://github.com/root-project/root/pull/14135#issuecomment-1830160591,2,['interface'],['interface']
Integrability,"I agree that the test should probably not use `echo` for that but we should probably fix the interface, too. Is `Value::isVoid` not being checked in the `echo` interface? I am not sure I understand how it worked before and how the PR you mentioned broke it..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13282#issuecomment-1642121018:93,interface,interface,93,https://root.cern,https://github.com/root-project/root/pull/13282#issuecomment-1642121018,2,['interface'],['interface']
Integrability,"I agree that there is a problem, and it comes from the fact that you cannot easily depend on Vdt via targets when Vdt is builtin. CMake complains about headers in the interface which are in the build directory in that case, so a lot of workarounds are needed and no workaround works reliably across CMake versions. When I last touched this, we decided to use variables and rely on the fact that vdt headers were installed into the same place as ROOT headers when Vdt was builtin. However, when Vdt and ROOT are installed separately and into different locations, this doesn't work so well indeed. Fixing this is overdue, but we unfortunately have to keep it working for both builtin/external Vdt. I think that the solution proposed by @krasznaa is in the right direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797#issuecomment-1338982945:83,depend,depend,83,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1338982945,2,"['depend', 'interface']","['depend', 'interface']"
Integrability,"I agree with you @guitargeek , TVectorT is a legacy class and I would not change its interface. It is better to add the constructor from the initialiser list directly in the TGraph",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9968#issuecomment-2076933777:85,interface,interface,85,https://root.cern,https://github.com/root-project/root/pull/9968#issuecomment-2076933777,1,['interface'],['interface']
Integrability,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870483338:522,depend,depend,522,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870483338,2,['depend'],['depend']
Integrability,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13926#issuecomment-1777619648:125,depend,dependency,125,https://root.cern,https://github.com/root-project/root/pull/13926#issuecomment-1777619648,2,['depend'],['dependency']
Integrability,"I also thought that Cppyy was handling the construction via the customization of `tp_call` in class proxies, but it turns out there is an `__init__` method injected in class proxies (which is a `CPPOverload`). So in principle it should be possible to inject a pythonisation such as the one Enrico proposed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3424#issuecomment-463226835:156,inject,injected,156,https://root.cern,https://github.com/root-project/root/pull/3424#issuecomment-463226835,2,['inject'],"['inject', 'injected']"
Integrability,"I am a little concerned about the basic idea. If I understood correctly, there is a (unique) global registry where the histogram are identified based on their 'full path name' (beside the fact that GetNameForRanges seems both brittle and currently seems on first reading 'wrong'/'not-as-intended'). I see two major problems, one is that the 'full path name' may never be really unique i.e. it might be impossible to avoid synonyms that are semantically distincts ... a good example is two free standings (not attached to any directory) histograms that happens to have the same name in two distinct and independent part of the code (e.g. two CMSSW modules). The other major problem is that it unnecessary tie (via that global mutex) all the 'parallel' histogram, this means that the overall scalability is inherently decreased. Rather than a completely global state, wouldn't it make sense to have a wrapper object (for example TThreadedObject) be the holder of the lock and list for a single set of related histogram.; This would both reduce contention and guarantees that the histograms are really related. A 3rd significant problem (but fixeable) is that the operation covered by the ReadWrite lock are not atomic (and/or trivial) and for the look of it could plausibly indirectly request the ROOT global lock and thus can lead to deadlocks (from some other code that hold the ROOT global locks and request the Write part of the ReadWrite lock). A 4th deficiency is that once activated for one histogram it *seems* to apply to all histogram. i.e. as far as can tell if you one parallel histograms and 10,000 single-thread histograms, filling the single-thread histogram still has to go through the multi-thread registration/mechanism. And that remind me, that another challenge for the 'unique registry' solution is to understand its scalability where reaching 10 to 100 thousands histograms. Thanks,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/902#issuecomment-325689991:899,wrap,wrapper,899,https://root.cern,https://github.com/root-project/root/pull/902#issuecomment-325689991,1,['wrap'],['wrapper']
Integrability,"I am a little confused on how that affects path length. . The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12561#issuecomment-1489916860:151,depend,depend,151,https://root.cern,https://github.com/root-project/root/pull/12561#issuecomment-1489916860,3,['depend'],"['depend', 'dependee', 'dependency']"
Integrability,"I am all for removing unnecessary code. I did not infer from the description that this was about ""out of date"" file rather than missing files. My concern is that I do not know (and ""was developed to cover some failures in both cms and root. "" is not specific enough to help me here :) ) that we actually have any actual case in routine ROOT or CMSSW testing to cover this case. If you can point me to where it is tested (and/or the problem(s) description that were fix by this). In particular if the test is about a file references by the module becoming newer than the produced module ( unless we specifically added a test for it), I can not see how the automated testing would triggered the (previously?) failing case. TLDR: I do not know that the testing we had done so far prove that the patch is no longer needed (but I of course could be wrong or mis-informed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10633#issuecomment-1151400413:328,rout,routine,328,https://root.cern,https://github.com/root-project/root/pull/10633#issuecomment-1151400413,1,['rout'],['routine']
Integrability,"I am back. Could you elaborate on what you would like to have as a separate function? I did some more cleanup and now it would be basically mean wrapping a couple of lines, forwarding a bunch of stuff, which would look ugly, IMHO. On a separate note, in O2 I wrote [a more complete wrapper](https://github.com/AliceO2Group/AliceO2/blob/96cae760a908ef18d960d925c188c6c101232757/Framework/Foundation/include/Framework/Signpost.h) which basically just forwards things on macOS to the underlying API and invokes a user provided logging function on Linux. Would you be interested in adopting a cleaned up version of it in ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13146#issuecomment-1669195142:145,wrap,wrapping,145,https://root.cern,https://github.com/root-project/root/pull/13146#issuecomment-1669195142,2,['wrap'],"['wrapper', 'wrapping']"
Integrability,"I am just showing you, so you can write documentation. Since none of the ROOT macros have documentation, maybe it's something that can be written for the CMake integration page on the website, maybe?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856205222:160,integrat,integration,160,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856205222,1,['integrat'],['integration']
Integrability,"I am not in favor to introduce yet a new keyword. The `legacy` keyword, seems to me, is the right one. Maybe the message should be improved a bit. Just a matter of taste. Let see... The current message is:. _TSpectrum is a legacy interface: it is not recommended to use it in new code. There will be no bug fixes nor new developments._. The ""key"" word here is: ""not recommended to use it in NEW code"". reading between the lines it means: you can still use this class but it is not recommended to base new development on it. That's exactly what it is. You propose:. _TSpectrum is a legacy interface: you can use it, as there is no one-to-one replacement interface planned/known. There will be no bug fixes nor new developments._. You removed the fact we do not recommend using it in new code, I do not think it is a good idea, and you add the info that there is ""no known replacement""... fine. But this can be said in the body of the doc. No need for the new keyword `unmaintained`. I am afraid a such new keyword will be used only for TSpectrum. That will add complexity for no real gain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11315#issuecomment-1237742081:113,message,message,113,https://root.cern,https://github.com/root-project/root/pull/11315#issuecomment-1237742081,5,"['interface', 'message']","['interface', 'message']"
Integrability,"I am not proposing to change a constructor, but rather add the one I proposed + the missing methods. In general I rather prefer interfaces with references not pointers and limited number of parameters, but if for some reason you do not like the constructor + 2 methods I am proposing, then fine. As for `TF1`, I have an impression, that the math libraries go into the direction of `ROOT::Math::` interfaces, so maybe there is no point in encouraging use of `TF1` for this kind of tasks (i.e. tasks going beyond drawing and `TH1::Fit`), but I understand the consistency argument in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8196#issuecomment-849484632:128,interface,interfaces,128,https://root.cern,https://github.com/root-project/root/issues/8196#issuecomment-849484632,2,['interface'],['interfaces']
Integrability,"I am not sure how we can fix this issue. The cmake `ExternalProject_Add` is meant to operate on projects which are not changed in tree. There seems to be an option: BUILD_ALWAYS <bool> which says "" Enabling this option forces the build step to always be run. This can be the easiest way to robustly ensure that the external project's own build dependencies are evaluated rather than relying on the default success timestamp-based method. This option is not normally needed unless developers are expected to modify something the external project's build depends on in a way that is not detectable via the step target dependencies (e.g. SOURCE_DIR is used without a download method and developers might modify the sources in SOURCE_DIR)."". That would fix this problem but introduce another one -- clad would be rebuilt every time one types `make`. ROOT has good amount of uses of `ExternalProject_Add` and that kind of issue is not only specific to clad. . I think we have several options: a) close the bug and ignore that type of errors (which can waste dev debug time); b) add BUILD_ALWAYS and waste a lot of user/dev time; c) check if it is feasible to somehow track changes in the source code within the regular cmake (which probably has proven hard and people added the BUILD_ALWAYS option).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7977#issuecomment-931950718:344,depend,dependencies,344,https://root.cern,https://github.com/root-project/root/issues/7977#issuecomment-931950718,3,['depend'],"['dependencies', 'depends']"
Integrability,"I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system. It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14747#issuecomment-1985252712:269,depend,dependencies,269,https://root.cern,https://github.com/root-project/root/pull/14747#issuecomment-1985252712,3,"['depend', 'interface']","['dependencies', 'interface']"
Integrability,"I am not sure what is the use-case here but generally building something that has an execution engine and llvm in it as a shared library is a bad idea. This is because the symbols of llvm get incorporated in the binary/library and if that binary loads something like libMessa which contains a copy of llvm becomes a huge mess, unless you provide some sort of symbol versioning. Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. As part of this PR we can probably accept changes in terms of missing dependencies. That is, adding to the list of dependent libraries (such as your change about libclangSerialization).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2125546066:645,depend,dependencies,645,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2125546066,2,['depend'],"['dependencies', 'dependent']"
Integrability,"I am not sure what you mean by 'executing ""hsimple_C.so""' ... . Depending what you means, the information is either in the implementation of TSystem::CompileMacro or the usage of TCling__CompileMacro. Either way, I bet the 'right' answer is not a callback but a variation of what we already do, just with different input. See my previous comment for hints of what to look for. (i.e. ACLiC pass all rootmap files to the rootcling invocation and gets back a list of library to load).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2187#issuecomment-396915330:64,Depend,Depending,64,https://root.cern,https://github.com/root-project/root/pull/2187#issuecomment-396915330,1,['Depend'],['Depending']
Integrability,"I am now testing this, and see the following error:; ```; Scanning dependencies of target G__Core; [ 67%] Generating G__Core.cxx, ../../lib/libCore.rootmap; In file included from input_line_1:1:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/new:40:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/exception:142:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/bits/exception_ptr.h:38:; /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/bits/cxxabi_init_exception.h:38:10: fatal error: 'stddef.h' file not found; #include <stddef.h>; ^~~~~~~~~~; In file included from input_line_4:2:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/stdlib.h:30:; In file included from /home/amadio/build/external-llvm/etc/cling/lib/clang/5.0.1/include/stdlib.h:8:; /usr/include/stdlib.h:31:10: fatal error: 'stddef.h' file not found; #include <stddef.h>; ^~~~~~~~~~; Error: Error loading the default header files.; gmake[2]: *** [core/base/CMakeFiles/G__Core.dir/build.make:435: core/base/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:8972: core/base/CMakeFiles/G__Core.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; [ 67%] Built target Cling; gmake: *** [Makefile:152: all] Error 2; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1632#issuecomment-366987713:67,depend,dependencies,67,https://root.cern,https://github.com/root-project/root/pull/1632#issuecomment-366987713,1,['depend'],['dependencies']
Integrability,"I am sorry, but I do not think we can merge this. The artificial dependency also means that things that don't need to be rebuilt if you modify files will be rebuilt after this change. My machine is not so powerful and I never had problems with this, except for when using ICC and building multiple sources of ROOT at the same time with 4 threads each.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1516#issuecomment-359391487:65,depend,dependency,65,https://root.cern,https://github.com/root-project/root/pull/1516#issuecomment-359391487,1,['depend'],['dependency']
Integrability,"I am trying to install root-v6.26.00 in ubuntu 22. The required packages are unable to be installed. I receive an error:. saras@saras:~$ sudo apt-get install libglew1.5-dev; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; E: Unable to locate package libglew1.5-dev; E: Couldn't find any package by glob 'libglew1.5-dev'; E: Couldn't find any package by regex 'libglew1.5-dev'. Another problem that I am getting is that, when I run ""cmake --build . -- -j8"" after configuring root, following error ocurrs in the middle of the process and the process stops. . CMake Error at /home/saras/product/root/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):; Command failed: 2; '/usr/bin/gmake'; See also; /home/saras/product/root/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11530#issuecomment-1377010734:214,depend,dependency,214,https://root.cern,https://github.com/root-project/root/pull/11530#issuecomment-1377010734,2,"['depend', 'message']","['dependency', 'message']"
Integrability,"I am trying to use a custom libbsd build, but there doesn't seem to be a way to indicate a path to search for this dependency. Would it be possible to add something like that in the CMakeLists?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14958#issuecomment-2057817528:115,depend,dependency,115,https://root.cern,https://github.com/root-project/root/issues/14958#issuecomment-2057817528,1,['depend'],['dependency']
Integrability,"I am uncertain about the missing separation of ""error code"" and ""payload value"" for some value types. E.g. `RStatus<FILE*>` versus `RStatus<std::string>` (where the string is read from a file) seem similar: the value represents the result of a potentially failing operation. But in the latter case the value does not encode failure, while in the former it does (the `FILE*` being `== nullptr`). Maybe that's just me, but maybe that calls for something similar to `llvm::Expected` that then handles the error case internally. Especially for pointers that might be a better interface, forcing a validity check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4683#issuecomment-564973874:572,interface,interface,572,https://root.cern,https://github.com/root-project/root/pull/4683#issuecomment-564973874,1,['interface'],['interface']
Integrability,"I applied clang-format-7, now it should be good. It would be great to merge this quickly, because I have a few other patches prepared that depend on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6917#issuecomment-739258667:139,depend,depend,139,https://root.cern,https://github.com/root-project/root/pull/6917#issuecomment-739258667,1,['depend'],['depend']
Integrability,"I believe PyPy has its own cppyy builtin module and PyROOT works on top of its own fork of cppyy, for which we haven't tested (or so far aimed for) compatibility with PyPy. Regarding the error you see, please check if the ROOT installation you are using has been built for that Python version (2.7). It could also be some environment/installation issue. How did you install ROOT?. On the other hand, to speed up analysis, the recommended interface in ROOT (which you can also use from Python) is RDataFrame:. https://root.cern/doc/master/classROOT_1_1RDataFrame.html. Even when used from Python, pretty much everything happens in C++ (in particular, the event loop is C++). It also has implicit parallelisation on a multicore machine. If there is some Python code that you'd like to use in conjunction with RDataFrame, there is the `Numba.Declare` feature:. https://root.cern.ch/doc/master/pyroot004__NumbaDeclare_8py.html. which will try to JIT with Numba the Python function you decorate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8110#issuecomment-834139469:438,interface,interface,438,https://root.cern,https://github.com/root-project/root/issues/8110#issuecomment-834139469,1,['interface'],['interface']
Integrability,"I believe failures were due to pushing while the build was running. Everything passed before and I only changed the commit message with latest push. In any case, I will monitor the incrementals and revert if any more problems show up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/953#issuecomment-327763248:123,message,message,123,https://root.cern,https://github.com/root-project/root/pull/953#issuecomment-327763248,1,['message'],['message']
Integrability,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467#issuecomment-702240329:19,depend,depend,19,https://root.cern,https://github.com/root-project/root/issues/6467#issuecomment-702240329,1,['depend'],['depend']
Integrability,"I believe the real issue here is about user experience. Suppose I'm a mac user, I only use safari and don't even have chrome installed. I have been using ROOT for 10+ years, I want to see my plot in a canvas. Now the default canvas is the web canvas, so it will go through the only browser it can find on my machine, safari. That breaks functionality w.r.t. how I was using the canvas before. So, that's something we want to fix, right?. In general, I would imagine that at the very least for the three most commonly used browsers i.e. Chrome, Safari, Firefox (Edge even?) we should be able to provide exactly the same functionality to users. Writing in the documentation that they need to install google chrome on their machine in order to have a properly working canvas is not an option in my opinion. Practically, that would imply that ROOT has a dependency on Chrome and I don't think that's what we want",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14051#issuecomment-1813149328:850,depend,dependency,850,https://root.cern,https://github.com/root-project/root/issues/14051#issuecomment-1813149328,2,['depend'],['dependency']
Integrability,"I believe this one can be merged after the builds.; The only pending change would be to move the logic for the array interface configuration to C++, if possible. A source to check is [this](https://stackoverflow.com/questions/10161609/class-property-using-python-c-api).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1871#issuecomment-382352200:117,interface,interface,117,https://root.cern,https://github.com/root-project/root/pull/1871#issuecomment-382352200,1,['interface'],['interface']
Integrability,"I can reproduce this in our software stack (SHiP/snd@snd) as well, where ROOTSYS etc. are all set for dependencies that need ROOT at build and/or run-time (using ALICE's alibuild). ROOT and its `ROOTConfig.cmake` are found without issues, but the new way to deal with VDT breaks anyone trying to user `ROOTConfig.cmake`. In our case, we use the `builtin_vdt` build option when building ROOT from source. This is a clear regression from 6.28.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163#issuecomment-1837223379:102,depend,dependencies,102,https://root.cern,https://github.com/root-project/root/issues/14163#issuecomment-1837223379,2,['depend'],['dependencies']
Integrability,"I can reproduce with Enrico's reproducer, but not with:. ```python; import ROOT; print(ROOT.gSystem.GetIncludePath()). ROOT.gInterpreter.ProcessLine(""""""; auto v = std::vector<int>();; """"""); print(ROOT.gSystem.GetIncludePath()); ```. So it could be related to the use of the TCling interfaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-769651474:281,interface,interfaces,281,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-769651474,1,['interface'],['interfaces']
Integrability,I cannot reproduce this locally (I get other `Conditional jump or move depends on uninitialised value(s)`) and was generally under the impression that this is a frequent false positive of Valgrind *if building with compiler optimizations*. You may try with a full `Debug` build of ROOT (including `LLVM_BUILD_TYPE=Debug`) if you are down to investigating.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16123#issuecomment-2255461773:71,depend,depends,71,https://root.cern,https://github.com/root-project/root/issues/16123#issuecomment-2255461773,1,['depend'],['depends']
Integrability,"I cannot reproduce, even the Create interface changed. @jblomer can this issue be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8581#issuecomment-2117677727:36,interface,interface,36,https://root.cern,https://github.com/root-project/root/issues/8581#issuecomment-2117677727,1,['interface'],['interface']
Integrability,"I changed the test. Before we were also testing the ""line"" number according to the interpreter, which can be platform dependent. Now we are independent from that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15368#issuecomment-2374976966:118,depend,dependent,118,https://root.cern,https://github.com/root-project/root/pull/15368#issuecomment-2374976966,1,['depend'],['dependent']
Integrability,"I checked once again - there are many images now integrated in openui5 libraries, but I do not have chance to select them out.; Therefore I will merge as is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6708#issuecomment-717060405:49,integrat,integrated,49,https://root.cern,https://github.com/root-project/root/pull/6708#issuecomment-717060405,1,['integrat'],['integrated']
Integrability,"I confirm that these changes break `tutorial-multicore-imt101_parTreeProcessing` on Windows, with different error messages:; ```; 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: LexLevel == 0 && ""cannot use lookahead while lexing"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/Lex/Preprocessor.h, line 1874; 768: Assertion CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/Basic/Diagnostic.h, line 1545; 768: Assertion failed: (*I)->isCompleCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: (!m_Consumer->getTransaction() || (m_Consumer->getTransaction() == T)) && ""Cannot release different T"", file C:\root-dev\git\master\interpreter\cling\lib\Interpreter\IncrementalParser.cpp, line 538; 768: CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: CurLexerKind != CLK_CachingLexer && ""already in caching lex mode"", file C:\root-dev\git\master\interpreter\llvm-project\clang\lib\Lex\PPCaching.cpp, line 99; 768: Assertion failed: CCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: is(tok::raw_identifier), file C:\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14200#issuecomment-1903602682:114,message,messages,114,https://root.cern,https://github.com/root-project/root/pull/14200#issuecomment-1903602682,3,['message'],"['message', 'messages']"
Integrability,"I continue to be convinced that #1053 is of little relevance in practice: if there is a signal and we break things even worse then just let the kernel kill that process: we tried our best to be helpful but failed. I believe #1053 (from 2017) is and indication that we don't have the resources to completely handle this case in a allocation-free way. And if we cannot do it completely we can as well just give up on it. While that's certainly a discussion we can continue on #1053 (or over lunch) I am convinced that we should not create logical dependencies here, on something that sits around since 5 years. In my implementation I will try to move the backtrace strings to reduce the memory allocations needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10366#issuecomment-1122815784:545,depend,dependencies,545,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1122815784,1,['depend'],['dependencies']
Integrability,"I created a minimal example for testing purposes. [streamer.zip](https://github.com/root-project/root/files/7885164/streamer.zip). It issues this warning:; `streamer/TGeoArb8.cxx:22: warning: documented symbol 'void TGeoArb8::Streamer' was not declared or defined.`. and the output does not show the function. ![image](https://user-images.githubusercontent.com/10653970/149848810-daba8c17-11b6-459d-aa66-02229cbb1afa.png). If I change in the Doxyfile PREDEFINED to empty, and EXPAND_ONLY_PREDEF = NO, then the warning disappears and the doxygen output looks correct. ![image](https://user-images.githubusercontent.com/10653970/149848761-52c81fd7-5cc1-491f-b59b-8fbb19793f46.png). However, I saw that in the full docu build we get still some other message even when changing that:; ```; /opt/root_src/core/meta/src/TStreamerElement.cxx:1085: warning: no uniquely matching class member found for ; void TStreamerLoop::Streamer(TBuffer &R__b); ```. So not sure either...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9596#issuecomment-1014960537:747,message,message,747,https://root.cern,https://github.com/root-project/root/issues/9596#issuecomment-1014960537,1,['message'],['message']
Integrability,I did a relatively big change with commit [5726d5f](https://github.com/root-project/root/pull/16090/commits/5726d5f15a8640bfee4f87e572ff615a53829774); the commit message describes the details.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090#issuecomment-2252378641:162,message,message,162,https://root.cern,https://github.com/root-project/root/pull/16090#issuecomment-2252378641,1,['message'],['message']
Integrability,"I did a very quick test linking a test `example` target to an install of a `foo` project whose targets have the `cxx_auto_type` compile feature in their interface features (so C++11). When linking to these targets, I found:. 1) Just `target_link_libraries(example foo::foo)`, the `-std=c++11` flag is appended to the compilation flags of the `example` sources.; 2) Adding `target_compile_features(example PUBLIC cxx_std_14)` uses `-std=c++14` in the flags.; 3) Setting `CMAKE_CXX_STANDARD 14` instead of using `target_compile_features` has the same effect. The reverse also applies - linking to a C++14 imported target, but requiring C++11 in the project does result in C++14 flags applied to the compilation of the project (so behaviour is ""newest standard wins"").",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-351737830:153,interface,interface,153,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-351737830,1,['interface'],['interface']
Integrability,"I did tests with gcc 4.8.4 (disabling error message); It works with all my tests.; Seems to be, bogus functionality is not used by TBufferJSON.; I will provide modified version soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1462#issuecomment-351692546:44,message,message,44,https://root.cern,https://github.com/root-project/root/pull/1462#issuecomment-351692546,1,['message'],['message']
Integrability,I didn't even know about the other bug you point out there! But I agree that removing invisible state dependence in the imports would be very desirable. I don't want my code to stop working because someone deletes the orphaned `import ROOT` statement. We actually have linting in ATLAS that would complain about code which is written this way.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14097#issuecomment-1824699590:102,depend,dependence,102,https://root.cern,https://github.com/root-project/root/issues/14097#issuecomment-1824699590,1,['depend'],['dependence']
Integrability,"I didn't find those 3 libraries (had `libCore.so` and `libRIO.so`), installed them by `sudo dnf install root-gui-browserv7-6.28.02-1.fc37.x86_64`, and it's working now.; Command `TBrowser b` returns; ```; root [0] TBrowser b. ROOT comes with a web-based browser, which is now being started. ; Revert to TBrowser by setting ""Browser.Name: TRootBrowser"" in rootrc file or; by starting ""root --web=off""; Web-based TBrowser can be used in batch mode when starting with ""root -b --web=server:8877""; Find more info on https://root.cern/for_developers/root7/#rbrowser; Info in <THttpEngine::Create>: Starting HTTP server on port 9426; (TBrowser &) Name: Browser Title: ROOT Object Browser; root [1] kf.kio.core: Malformed JSON protocol file for protocol: ""trash"" , number of the ExtraNames fields should match the number of ExtraTypes fields; ```. I think it's resolved now. One last question though - is there any way to download the tutorials in bulk, and set `$ROOTSYS` and other possibly lacking things like that? I think installing ROOT by `sudo dnf install root` doesn't do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12721#issuecomment-1532933487:720,protocol,protocol,720,https://root.cern,https://github.com/root-project/root/issues/12721#issuecomment-1532933487,2,['protocol'],['protocol']
Integrability,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10240#issuecomment-1082385261:195,message,message,195,https://root.cern,https://github.com/root-project/root/issues/10240#issuecomment-1082385261,2,['message'],['message']
Integrability,"I do not like this idea.; If one plot `RLine` then one expects just black color.; If one plot 10 lines - just 10 lines with black color.; If all colors will be automatic, then depending on number of primitives, one will get different results.; After recent changes one can do:; ```; line->AttrLine().SetColor(RColor::AutoColor());; ```; Maybe one can just introduce `RColor::kAuto` constant.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7958#issuecomment-838688653:176,depend,depending,176,https://root.cern,https://github.com/root-project/root/issues/7958#issuecomment-838688653,1,['depend'],['depending']
Integrability,I do not quite understand why don’t we put a TCling::printValue routine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2664#issuecomment-423661491:64,rout,routine,64,https://root.cern,https://github.com/root-project/root/pull/2664#issuecomment-423661491,1,['rout'],['routine']
Integrability,I do not think that splitting PR on 6 sub-PRs help and make it easy. ; Especially if you want to have warning message defined in one place. Where?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14189#issuecomment-1845262984:110,message,message,110,https://root.cern,https://github.com/root-project/root/pull/14189#issuecomment-1845262984,1,['message'],['message']
Integrability,I do not want to argue this *ad infinitum*. Adding such a wrapper macro with a different name is a no go for me because it won't prevent people from using plain `add_subdirectory()` which would lead to breakage. This also goes in the opposite direction than we want to go for using modern CMake in ROOT as discussed in the workshop. A better approach that could also work is to modify the `ROOT_STANDARD_LIBRARY_PACKAGE()` macro to do the extra stuff needed for the sub-packages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-424304630:58,wrap,wrapper,58,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-424304630,1,['wrap'],['wrapper']
Integrability,"I don't know if I'm misinterpreting something, but I noticed something very interesting:; For this compilation error, clang gives a note message:; ```; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; ```; Is this enum type `EProperty` really only range from 0 - 63?; clangd told me that the definition of first case `kIsClass` is from ; https://github.com/root-project/root/blob/master/core/meta/inc/TDictionary.h#L64 , ; but if I try the below cases, it told me that *this enum type `EProperty`* from ; https://github.com/root-project/root/blob/master/core/cont/inc/TVirtualCollectionProxy.h#L49 ???. That may said, the compiler got confused about these two types that have same name?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11148#issuecomment-1208301795:137,message,message,137,https://root.cern,https://github.com/root-project/root/pull/11148#issuecomment-1208301795,1,['message'],['message']
Integrability,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; > Could NOT find Vdt (missing: VDT_INCLUDE_DIR); > Call Stack (most recent call first):; > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args); > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency); > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14474#issuecomment-1927627737:199,message,message,199,https://root.cern,https://github.com/root-project/root/pull/14474#issuecomment-1927627737,1,['message'],['message']
Integrability,"I don't know, if I am able to fix it in the array interface.; Where is this array interface actually defined and where is the adoption mechanism implemented?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3528#issuecomment-472345513:50,interface,interface,50,https://root.cern,https://github.com/root-project/root/pull/3528#issuecomment-472345513,2,['interface'],['interface']
Integrability,"I don't think 62b55ed9 is equivalent: what about e.g. the prompt showing `cling$` (that's not a wrapper), or async operations spawned by the wrapper? I don't see that this code needs fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3588#issuecomment-476605004:96,wrap,wrapper,96,https://root.cern,https://github.com/root-project/root/pull/3588#issuecomment-476605004,2,['wrap'],['wrapper']
Integrability,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4029#issuecomment-507949722:79,depend,depend,79,https://root.cern,https://github.com/root-project/root/pull/4029#issuecomment-507949722,1,['depend'],['depend']
Integrability,"I don't think the issue is with `copy_if_different` - I bet you'd see the same behavior if you were to use `copy` instead. My guess is that this is caused by CMake determining that the `DEPENDENCY` is older than the target, thus no need to run the command. What happens if you simply remove the DEPENDENCY, such that `copy_if_different` (which should *not* look at filestamps) is run unconditionally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9804#issuecomment-1029077291:186,DEPEND,DEPENDENCY,186,https://root.cern,https://github.com/root-project/root/pull/9804#issuecomment-1029077291,2,['DEPEND'],['DEPENDENCY']
Integrability,"I don't think we have an explicit test for this patch. We did some archeology. The commit message is rather poor and dates back to 234fd515ed3893629e1e170e5c497688c81281b9. We could only indirectly guess what was trying to do and the best description of the code that was failing and we tried to fix is these 2 failing tests: `clang/test/Modules/module-file-modified.c` and `clang/test/Modules/explicit-build-missing-files.cpp`. Given what fails in these tests and the age of this change I find it highly unlikely that cmssw won't be able to catch such a setup. At that point, I don't think we are much more informed than you and we are hoping that dropping this change is reasonable to move forward. The good thing is that this is an atomic commit which is easy to bisect if something somewhere starts failing...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10633#issuecomment-1151512564:90,message,message,90,https://root.cern,https://github.com/root-project/root/pull/10633#issuecomment-1151512564,1,['message'],['message']
Integrability,"I dont see any stack here, but ""/Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx"".; Is it possible to have root returning some more lines to know which line in my code is causing the issue ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13656#issuecomment-1729599261:90,Interface,InterfaceUtils,90,https://root.cern,https://github.com/root-project/root/issues/13656#issuecomment-1729599261,1,['Interface'],['InterfaceUtils']
Integrability,"I faced another problem.; From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h""; ...; ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent!. https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7440#issuecomment-820603357:114,Integrat,Integrator,114,https://root.cern,https://github.com/root-project/root/issues/7440#issuecomment-820603357,4,['Integrat'],['Integrator']
Integrability,I feel like we are losing capability here. In my point of view we have a layering problem with the no-rtti option which can be resolved by using C-like interfaces in TCling. That’d be probably too much work for not big benefits except for binary sizes. In that respect no one has really complained. Iirc the size on windows was a lot more…. I suspect that when/if we adopt libInterOp that will be solved in a better way..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11147#issuecomment-1774901148:152,interface,interfaces,152,https://root.cern,https://github.com/root-project/root/pull/11147#issuecomment-1774901148,1,['interface'],['interfaces']
Integrability,"I figured out the reason of my apparent 'instability' in results. Rather than a problem with the ROOT build, it was actually a variation in the way I generated/created the library needed to emulated the ATLAS libraries. The original 2 files contains respectively 1 and 2 ATLAS classes derived from the RooAbsPdf and because the objects of that type are added to a compiled list, they must be created properly (otherwise you get type detection errors .. in part because RooAbsPdf is an abstract class). In order to generate this library, I use TFile::MakeProject (which almost works, I have to add an implementation for the abstract functions by hand). Part of the this MakeProject is to generate a LinkDef file. Because the output of MakeProject should not depend on the ROOT version, I generated the libraries with an arbitrary version of ROOT (and did not pay attention which one at the time, but it was different on different machine and upon seeing the weird crash, I may have regenerated the project on the machine I was using at the time). The issue is that a particular commit (e8eb7875c73ea00bedf11c022a055d50ec5f081d, part of the new PR) change whether the dictionary was requested (in the LinkDef file) for the pair that was causing the problem (pair<string,RooArgSet>) ... and having an explicit dictionary for that pair works around the problem introduced by the first wave of pair related changes. . Now that this is clarified, I can confirm that https://github.com/root-project/root/pull/10230 is solving this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1089498573:757,depend,depend,757,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1089498573,1,['depend'],['depend']
Integrability,"I finally figured out what the problem was in 6.26 specifically. In the numeric integration of the PDF, the new BatchMode was used, but it still had some bugs in ROOT 6.26. That's why we didn't see the problem in 6.24. And in ROOT master, we also didn't see it because the problem with the BatchMode got fixed. To fix the problem also in 6.26, I opened a PR where the BatchMode is disabled for the numeric integration of the PDF:; https://github.com/root-project/root/pull/11961",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11760#issuecomment-1366150423:80,integrat,integration,80,https://root.cern,https://github.com/root-project/root/issues/11760#issuecomment-1366150423,2,['integrat'],['integration']
Integrability,"I found a ""fix"" for this issue, commenting these lines allows rootcling to run without the error message:. https://github.com/hahnjo/root/blob/2f4eb60b90ed83bb369325a687bce83f2a773b7a/core/dictgen/src/rootcling_impl.cxx#L3841-L3843. https://github.com/hahnjo/root/blob/2f4eb60b90ed83bb369325a687bce83f2a773b7a/core/dictgen/src/rootcling_impl.cxx#L4200-L4206",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1659010221:97,message,message,97,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1659010221,1,['message'],['message']
Integrability,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:; ```; diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx; index 1fdabcc2fd..c5358d1f21 100644; --- a/core/base/src/TObject.cxx; +++ b/core/base/src/TObject.cxx; @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(); // can guess this is always the case and we can rely on the changes to fBits made; // by ~TObject to detect use-after-delete error (and print a message rather than; // stop the program with a segmentation fault); +#ifndef __SANITIZE_ADDRESS__; if ( *o_fbits != 0x01000000 ) {; // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted); return true;; }; return false;; +#else; + return true;; +#endif; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-2378694443:569,message,message,569,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-2378694443,1,['message'],['message']
Integrability,"I give up, I'll forward declare tbb::interface7::task_arena and ask the TBB developers about the chances for the interface-dependent name to change in the near future",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5582#issuecomment-637365744:113,interface,interface-dependent,113,https://root.cern,https://github.com/root-project/root/pull/5582#issuecomment-637365744,1,['interface'],['interface-dependent']
Integrability,"I guess something wrong happens when one calls std::chrono::floor by basename (i.e. without namespace prefix). The statement above ends up with using of 'using namespace' with consequent calling of the bare floor template (without prefix). Well, let's reproduce it by ourselves:. ```; #include ""Vc/vector.h""; #include <chrono>. void foo() {; std::chrono::nanoseconds dur;; std::chrono::floor<std::chrono::seconds>(dur);; }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp ; $ ; ```; Look, floor for std::chrono::duration works, unlike the example in the original message. Now let's rewrite it a bit:. ```; #include ""Vc/vector.h""; #include <chrono>. void foo() {; using namespace std::chrono;. nanoseconds dur;; floor<seconds>(dur);; }. $ c++ $(root-config --cflags) -std=c++17 -c a.cpp ; In file included from a.cpp:1:; In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:; /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T.""; static_assert(std::is_arithmetic<T>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~; a.cpp:8:20: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here; floor<seconds>(dur);; ^; a.cpp:8:5: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]; floor<seconds>(dur);; ^; 1 error generated.; ```; In fact, floor for time_point is just a tiny wrapper for floor for duration, which calls bare floor, and that's where compilation fails:. ```; #if _LIBCPP_STD_VER > 14; template <class _ToDuration, class _Clock, class _Duration>; typename enable_if; <; __is_duration<_ToDuration>::value,; time_point<_Clock, _ToDuration>; >::type; floor(const time_point<_Clock, _Duration>& __t); {; retu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11934#issuecomment-1357943189:565,message,message,565,https://root.cern,https://github.com/root-project/root/issues/11934#issuecomment-1357943189,1,['message'],['message']
Integrability,"I guess, there is nobody who can implement all these methods for all SQL plugins.; But we need to indicate problem if somebody tries to call GetTimeStamp, which is not implemented.; I will merge your PR and add error messages to TSQLStatement methods afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3961#issuecomment-507171663:217,message,messages,217,https://root.cern,https://github.com/root-project/root/pull/3961#issuecomment-507171663,1,['message'],['messages']
Integrability,"I had a closer look in the code and can give a more detailed answer. > The first time one iterates the first states comes from MnSeed and I think in that case the state is always valid (but not 100% sure). I think you are right. BasicMinimumSeed has only one ctor that allows one to set values and that always sets the fValid to true. There is no interface to change it afterwards. We could also remove the flag, it has no purpose. > Eventually we could add the assert or (better) an Error but not at line 232, but at line 75, when we enter in the top function VariableMetricBuilder::Minimum. Ok, I implemented that.; ; > What we should maybe change is the logic around line 150. A covariance matrix is computed via MnHesse. This is done to check the edm. If the edm is still too large the minimization is continued.; > However, if Hesse fails, (for example in the test above f(x) = -x, because the second-derivatives is zero) there is no real point in continuing the minimization. The correct edm will not make sense and one should stop iterating.; > Maybe we could add a Warning there before line 146, like; > ; > ```; > if (!st.IsValid()) { ; > print.Warn(""Invalid Hessian - exit the minimization"");; > break; ; > }; > ```. Ok, I also implemented that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6762#issuecomment-741736428:347,interface,interface,347,https://root.cern,https://github.com/root-project/root/pull/6762#issuecomment-741736428,1,['interface'],['interface']
Integrability,"I had this problem before when trying multiprocessing in the Fitting. I checked with Axel and, If I recall correctly, it was due to adding MultiProc as a dependency in MathCore. I still kept the patch from then and I updated my roottest PR accordingly: root-project/roottest#106",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1312#issuecomment-344309527:154,depend,dependency,154,https://root.cern,https://github.com/root-project/root/pull/1312#issuecomment-344309527,1,['depend'],['dependency']
Integrability,"I have a couple of Debian/Ubuntu packages which depend (and build-depend) on ROOT; the only clean way to support those is to have a ROOT *package* (or package set) as well. Running `cmake` and `make` by hand succeeds while putting exactly the same instructions into a `debian/rules` file (as `override`s for the default debhelper build steps) results in failure(s). Dropping debhelper, and going back to an old-style `binary` target, might be the last resort, but I'm trying to avoid this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1169632086:48,depend,depend,48,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1169632086,2,['depend'],['depend']
Integrability,"I have a general comment about adding this extra level of parallelism to the branch reading. While it might indeed help in cases where there is only one top-level branch that is split in sub-branches, it could also bring ""too much"" parallelism in some other cases. The performance of the top-level branch parallelism heavily depends on the granularity of the branches. For small branches, the creation of a task does not really pay off. I fear this problem might be exacerbated if we also operate in sub-branches. Moreover, as we offer it now, we won't have any way for the user to select how deep in parallelisation terms they want to go, meaning every time we run GetEntry with IMT on all the parallelism levels will be activated. On the other hand, another thing that hindered performance in the top-level branch parallelism was synchronization. Now there is one synchronization point per entry, which can be problematic if there is load unbalance (that is why we sorted the branches by time). Adding a second level of parallelism means we will have one more synchronization point per top-level branch and we don't know how this can impact performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1468#issuecomment-352709176:325,depend,depends,325,https://root.cern,https://github.com/root-project/root/pull/1468#issuecomment-352709176,4,"['depend', 'synchroniz']","['depends', 'synchronization']"
Integrability,"I have implemented all requested changes by reviewers @amadio, @Axel-Naumann and @guitargeek. Additionally, bugs have been fixed, build system works and CI passes. I rebased the whole thing into three commits corresponding to the actual three additions: ZeroMQ dependency handling (including builtin), `RooFitZMQ` and `RooFit::MultiProcess`. I think this ready to merge, unless you have some final review suggestions. ~Edit: while you do your final reviewing, I will fix the code style, to make that CI check pass as well ;)~ Done. ~Edit 2: need to rebase on master as well...~ Done!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-977929627:261,depend,dependency,261,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-977929627,1,['depend'],['dependency']
Integrability,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5034#issuecomment-589630499:493,message,message,493,https://root.cern,https://github.com/root-project/root/pull/5034#issuecomment-589630499,1,['message'],['message']
Integrability,"I have not done anything with it in at least 10 years, so yeah, you no; longer have to upstream the changes. Thanks!; Sasha. On Mon, Jan 22, 2024 at 8:10 AM ferdymercury ***@***.***>; wrote:. > For me the change is fine. Thanks. Perhaps a question at this point: what; > is the point of offering the option of having a builtin afterimage if we; > know it does not work?; >; > Good question. Maybe @couet <https://github.com/couet> knows why we have; > this option?; >; > I guess that in the past, bugs found by the ROOT team were backported to; > the upstream repo, see e.g.:; >; > https://salsa.debian.org/debian/afterstep/-/blame/69faf352072daddf6e311dea3717734a45c6ac2d/libAfterImage/asimage.c; > (see copyright from Valeriy Onouchin from CERN); > https://root.cern.ch/root/v520/Version520.news.html; >; > But upstream is now completely frozen, at least 4 years; > https://github.com/afterstep/afterstep, right @sashavasko; > <https://github.com/sashavasko> ?.; > So... (unless someone wants to upstream the changes again to that Github; > repo), maybe we could mark the builtin_afterimage option as deprecated now; > and remove it in a later release.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/pull/14396#issuecomment-1904072642>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AABZMAJ4DAFJ64LSLUGLVXDYPZXNXAVCNFSM6AAAAABCCE6WTWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSMBUGA3TENRUGI>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14396#issuecomment-1904701854:1530,Message,Message,1530,https://root.cern,https://github.com/root-project/root/pull/14396#issuecomment-1904701854,1,['Message'],['Message']
Integrability,"I have not yet tried building llvm. Will try later this week. nvc++ has an implementation for std::par which allows seamless execution of both CPUs and NVIDIA GPUs (depending on a compile time flag). This could be a huge win for GPU portability (once other manufactures create the AMD/Intel backends), and allows much simpler user access to GPUs without having to learn CUDA (or hip, dpc++, etc). I was trying to compile some parts of a project with gcc and the bits that use std::par with nvc++, but immediately got some runtime segfaults at startup, so tried to compile the whole thing (including ROOT) with nvc++.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9036#issuecomment-933532217:165,depend,depending,165,https://root.cern,https://github.com/root-project/root/issues/9036#issuecomment-933532217,2,['depend'],['depending']
Integrability,"I have now avoided the interpreter call, which caused some performance regression. Then I did some benchmarking with:; ```bash; perf stat -r 100 -B python -c 'import ROOT; ROOT._finalSetup()'; ```; It takes about 0.45 seconds. But there is no significant difference with or without this PR (seems to depend on what else is running on my system at that moment I guess), sometimes one is faster sometimes the other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15788#issuecomment-2160789690:300,depend,depend,300,https://root.cern,https://github.com/root-project/root/pull/15788#issuecomment-2160789690,1,['depend'],['depend']
Integrability,"I have opened a PR to fix the problem in RooRealIntegral. It's a first step, but it will probably take more time before this gets merge, as the RooRealIntegral is not covered that well by unit tests yet, and I want to first write more tests for the part of the code that I changed. I already have added one test based on your example, but I still need to cover the case where the integrated function has shape clients.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578#issuecomment-1282263018:380,integrat,integrated,380,https://root.cern,https://github.com/root-project/root/issues/11578#issuecomment-1282263018,1,['integrat'],['integrated']
Integrability,"I have other problem building libAfterImage - in error output I see following message; ```; ar: libdeps specified more than once; ```; It caused by argument `l` in `ar clq` command. ; Argument `l` means library linking to static `libAfterImage.a` library, but there is no any library linked.; Seems to be `ar` on my latest OpenSUSE installation is too strict about this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345#issuecomment-789807508:78,message,message,78,https://root.cern,https://github.com/root-project/root/issues/7345#issuecomment-789807508,1,['message'],['message']
Integrability,"I have split the PR into two commits, and extended the commit message for the commit that changes the tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3434#issuecomment-475229873:62,message,message,62,https://root.cern,https://github.com/root-project/root/pull/3434#issuecomment-475229873,1,['message'],['message']
Integrability,"I have the same/similar issue. ROOT 6.28.04 installed from source, macOS 13.4, Xcode 14.3.1, MacBook Pro with Intel i9-9880H. Running TMVA tests in the build directory, I get. ```; $ ctest --output-on-failure -R TMVA-DNN-MethodDL-SGD-Optimization-Cpu; Test project /Users/ole/Develop/BUILD/ROOT/6.28.04b; Start 357: TMVA-DNN-MethodDL-SGD-Optimization-Cpu; 1/1 Test #357: TMVA-DNN-MethodDL-SGD-Optimization-Cpu ...***Failed 0.61 sec; Testing Method DL with SGD Optimizer for CPU backend:; libc++abi: __cxa_guard_acquire detected recursive initialization; CMake Error at /Users/ole/Develop/BUILD/ROOT/root-6.28.04/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 0.74 sec. The following tests FAILED:; 	357 - TMVA-DNN-MethodDL-SGD-Optimization-Cpu (Failed); Errors while running CTest; ```. When running all the TMVA tests:; ```; $ ctest -R ""^TMVA"" -j6; ...; 81% tests passed, 7 tests failed out of 36. Total Test time (real) = 10.47 sec. The following tests FAILED:; 	357 - TMVA-DNN-MethodDL-SGD-Optimization-Cpu (Failed); 	358 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Failed); 	359 - TMVA-DNN-MethodDL-Adagrad-Optimization-Cpu (Failed); 	360 - TMVA-DNN-MethodDL-RMSProp-Optimization-Cpu (Failed); 	361 - TMVA-DNN-MethodDL-Adadelta-Optimization-Cpu (Failed); 	362 - TMVA-DNN-Regression-Cpu (Failed); 	376 - TMVA-DNN-GRU-Backward-Cpu (Failed); Errors while running CTest; ```; All these failing tests abort with ""libc++abi: __cxa_guard_acquire detected recursive initialization"". The TMVA.* tests pass without any issue on a different system: ROOT 6.28.04 installed from source (exact same configuration as the installation with errors mentioned above), macOS 11.7.7, Xcode 13.2.1, Intel i7-10700K. Seems to be related to the newer libc++ on the macOS 13.4/Xcode 14 system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13002#issuecomment-1594949419:652,message,message,652,https://root.cern,https://github.com/root-project/root/issues/13002#issuecomment-1594949419,1,['message'],['message']
Integrability,"I have tried the following in `cmake/modules/SearchInstalledSoftware.cmake`:. ```; #---Check for OpenGL installation-------------------------------------------------------; if(opengl); message(STATUS ""Looking for OpenGL""); if(APPLE); set(CMAKE_FIND_FRAMEWORK FIRST); find_package(OpenGL); set(CMAKE_FIND_FRAMEWORK LAST); else(); find_package(OpenGL); endif(); ```; It seems it finds the right OPgengl GL like that. I am now compiling to see it really fixes the GL graphics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16523#issuecomment-2377075629:185,message,message,185,https://root.cern,https://github.com/root-project/root/issues/16523#issuecomment-2377075629,1,['message'],['message']
Integrability,"I have tried to make with two canvases (two gifs), but problem with ""synchronization"" in browser (gif1 ""start animating"" in different time as gif2, see on this temporary [site](http://alice.saske.sk/rootdoc2/html/classTHistPainter.html#HP30)), must be as one animated gif. I think there are only two possibilities:; * create a new animation with width for example 900; * or set width in source ```\image html hlHisto3.gif ""Highlight mode"" width=900```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1839#issuecomment-383957885:69,synchroniz,synchronization,69,https://root.cern,https://github.com/root-project/root/pull/1839#issuecomment-383957885,1,['synchroniz'],['synchronization']
Integrability,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:; https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7234#issuecomment-1894623389:211,depend,dependencies,211,https://root.cern,https://github.com/root-project/root/pull/7234#issuecomment-1894623389,1,['depend'],['dependencies']
Integrability,"I just added an additional commit that adds functionality around error handling. It catches a corner case that may be relevant to the failing tests (so I hope it will add useful information from the prints in the CI runs), but that I think in any case should be checked for, because it's about a fit that failed but that Minuit reports as successful. See commit message for more info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15797#issuecomment-2166147635:362,message,message,362,https://root.cern,https://github.com/root-project/root/pull/15797#issuecomment-2166147635,1,['message'],['message']
Integrability,"I just checked on my Manjaro with cmake 3.20, and it seems to be working, even though messages are misleading:; ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.4""); -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 10, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for versions 3.9.4 (Main) and 2.7.18; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8097#issuecomment-832873148:86,message,messages,86,https://root.cern,https://github.com/root-project/root/issues/8097#issuecomment-832873148,1,['message'],['messages']
Integrability,"I just did a git pull to get the latest version.; Now I get:; ```; $ make; /Applications/CMake.app/Contents/bin/cmake -S/Users/couet/git/zevis -B/Users/couet/git/zevis-build --check-build-system CMakeFiles/Makefile.cmake 0; /Applications/CMake.app/Contents/bin/cmake -E cmake_progress_start /Users/couet/git/zevis-build/CMakeFiles /Users/couet/git/zevis-build/CMakeFiles/progress.marks; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/Makefile2 all; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/ZevLib.dir/build.make CMakeFiles/ZevLib.dir/depend; [ 1%] Generating G__ZevLib.cxx, libZevLib_rdict.pcm, libZevLib.rootmap; /Applications/CMake.app/Contents/bin/cmake -E env LD_LIBRARY_PATH=/Users/couet/git/couet-root-bin/lib:/Users/couet/git/couet-root-bin/lib /Users/couet/git/couet-root-bin/bin/rootcling -v2 -f G__ZevLib.cxx -s /Users/couet/git/zevis-build/libZevLib.dylib -rml libZevLib.dylib -rmf /Users/couet/git/zevis-build/libZevLib.rootmap -inlineInputHeader -IZevLib/inc -I/Users/couet/git/couet-root-bin/include -I/Users/couet/git/zevis ZevLib/dict/ZevLib_Classes.hh /Users/couet/git/zevis/ZevLib/dict/LinkDef.hh; input_line_12:3:10: fatal error: 'ZFTD.h' file not found; #include ""ZFTD.h""; ^~~~~~~~; Error: /Users/couet/git/couet-root-bin/bin/rootcling: compilation failure (/Users/couet/git/zevis-build/libZevLib99e3c8e971_dictUmbrella.h); make[2]: *** [G__ZevLib.cxx] Error 1; make[1]: *** [CMakeFiles/ZevLib.dir/all] Error 2; make: *** [all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-693238080:586,depend,depend,586,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-693238080,1,['depend'],['depend']
Integrability,"I just noticed a compile error for the RooRealL.cxx test file that I introduced in the modernization commit (the second in this PR). I did an interactive rebase to fix this. Also included the RooMinimizer / MinuitFcnGrad circular dependency fix in that modernization/clean-up commit. To clean up this thread, I'll hide all bot messages starting from that previously buggy commit until now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-915080044:230,depend,dependency,230,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-915080044,2,"['depend', 'message']","['dependency', 'messages']"
Integrability,"I just realized that it's probably safer to use the change tracker because then you are not tracking the dependency on the observables, only the parameters. It should not happen that someone changes the observable value between two likelihood evaluations, but who knows :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10832#issuecomment-1167783258:105,depend,dependency,105,https://root.cern,https://github.com/root-project/root/pull/10832#issuecomment-1167783258,1,['depend'],['dependency']
Integrability,"I left for now the check on the list, actually that list contains now only two items since only `TChain` needs an explicit insertion of pythonizations. According to the behaviour of inheritance of pythonizations, user subclasses of `TTree` will inherit the pythonizations defined by `TTree` as long as they do not redefine the corresponding methods in C++. If that is the case, they can always re-inject such pythonizations if they are interested, similarly to what we do with `TChain`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2799#issuecomment-432211756:397,inject,inject,397,https://root.cern,https://github.com/root-project/root/pull/2799#issuecomment-432211756,1,['inject'],['inject']
Integrability,I meant it was gSystem->Load ing even when gSystem->DynamicPathName fails. Changed commit message,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-396272102:90,message,message,90,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-396272102,1,['message'],['message']
Integrability,"I misspellt the commit message. That was supposed to say ""Vc sqrt error fix""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7909#issuecomment-822667524:23,message,message,23,https://root.cern,https://github.com/root-project/root/pull/7909#issuecomment-822667524,1,['message'],['message']
Integrability,"I modified the error message in the last commit after pushing, so will merge this by hand to not waste resources on another Jenkins run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4096#issuecomment-512261682:21,message,message,21,https://root.cern,https://github.com/root-project/root/pull/4096#issuecomment-512261682,1,['message'],['message']
Integrability,"I personally do not think that the runtime of rootcling is the problem here, but rather the dependency tree. Of course making anything faster is good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432#issuecomment-2074853520:92,depend,dependency,92,https://root.cern,https://github.com/root-project/root/issues/6432#issuecomment-2074853520,1,['depend'],['dependency']
Integrability,I propose to merge now and revert once dependency is vanishes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5439#issuecomment-618428518:39,depend,dependency,39,https://root.cern,https://github.com/root-project/root/pull/5439#issuecomment-618428518,1,['depend'],['dependency']
Integrability,I proposed a PR to restore those two files. > Knowing that there is all these ./src/net/net/ useful classes about remote connections.. why is that TSocket is being deprecated ? [8ef5d04](https://github.com/root-project/root/commit/8ef5d04e0102290cc2457c5a7cc40fc9874fa006) . This is incredibly useful feature.. same for all other basic communication protocol developped in `./net/net/` directory. I let @guitargeek comment on that particular commit.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13387#issuecomment-2223223384:350,protocol,protocol,350,https://root.cern,https://github.com/root-project/root/issues/13387#issuecomment-2223223384,1,['protocol'],['protocol']
Integrability,"I pushed a new version with some further cleanups (unused or unfinished code, reducing common code for priority queue). I also made sure to be as thread-safe as possible (use of `static thread_local` instead of `static` as well as protecting the safety-cache writing with a mutex)... although I mind the cost of doing so. However, please note that the original code itself is not thread-safe since it has state modified by routines called from TGeoNavigator. This will not be addressed here because it has nothing to do with the proposed changes. Until then, one should potentially forbid use of TGeoParallelWorld in combination with multiple TGeoNavigators.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442#issuecomment-2358266984:423,rout,routines,423,https://root.cern,https://github.com/root-project/root/pull/16442#issuecomment-2358266984,1,['rout'],['routines']
Integrability,"I re-tried on (macos,linux) x (.class, .Class) x ("""", ""TTree""). Of all the 8 combinations, only one crashes for me, which is `.Class` on macos:; `Assertion failed: (!T->isDependentType() && ""should not see dependent types here""), function getTypeInfoImpl, file TypeNodes.inc, line 35.`. Perhaps this is possible to fix and memorialised in a nice test. I am adding more brain power to the item to try and find a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10140#issuecomment-1925597970:206,depend,dependent,206,https://root.cern,https://github.com/root-project/root/issues/10140#issuecomment-1925597970,1,['depend'],['dependent']
Integrability,I realize now that this should probably go into `TApplication` - it's part of its public interface. Thus please don't merge...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1444#issuecomment-350638792:89,interface,interface,89,https://root.cern,https://github.com/root-project/root/pull/1444#issuecomment-350638792,1,['interface'],['interface']
Integrability,"I rebase PR doing:; - adjust warning message, putting there full URL, ; - add protection for ""TreeViewer.Name"" rootrc parameter; - provide initializer for TROOT webdisplay flags in header file",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14189#issuecomment-1845330562:37,message,message,37,https://root.cern,https://github.com/root-project/root/pull/14189#issuecomment-1845330562,1,['message'],['message']
Integrability,"I recommend not sourcing `thisroot.sh` multiple times in the same shell. That will mess up your environment. This is not related to install/uninstall. If you install ROOT somewhere with `make install`, just add `<prefix>/bin` to your `$PATH` and `<prefix>/lib` to your `$PYTHONPATH` and you should never need to `source thisroot.sh`. Also, if you install your own multiple versions of ROOT with `make install`, I recommend installing into an empty directory, not `/usr/local` where Homebrew may have installed it. Then you can just `rm -rf` if needed to uninstall. If you install into `/usr/local` with a package manager, just use the package manager to uninstall. Installing with `make install` a custom ROOT that overwrites another installation with a package manager is going to get you into trouble and `make uninstall` will not help much. With the uninstall target, if you change configuration before uninstalling, you may have half-uninstalled ROOT left over (e.g by enabling/disabling `pyroot_experimental` between make install/make uninstall), or may remove important files from other packages depending on what builtins you had enabled when you built ROOT. CMake has this disabled by default for this reason, and I'm reluctant to provide this uninstall target in ROOT for the same reason.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3405#issuecomment-462681306:1102,depend,depending,1102,https://root.cern,https://github.com/root-project/root/pull/3405#issuecomment-462681306,1,['depend'],['depending']
Integrability,I removed the dependence on the symlink PR because there seems to be more to it. That should make this PR lighter.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-656612588:14,depend,dependence,14,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-656612588,1,['depend'],['dependence']
Integrability,"I run `fedora37` image on my machine - all webgui tests work properly. From the log output produce by headless chromimum, I see only one additional message on github actions:; ```; [0816/133157.889292:ERROR:headless_command_handler.cc(357)] Abnormal renderer termination.; ```; But why it happens, that is missing - I have no idea. ; Most probably some configuration of host system (from github) affects docker image and makes problem running chromium. I will try to add `--no-sandbox` argument to the headless chrome, maybe it be better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13466#issuecomment-1682166103:148,message,message,148,https://root.cern,https://github.com/root-project/root/pull/13466#issuecomment-1682166103,1,['message'],['message']
Integrability,"I said this in my original comments, I am not sure that adding a `ROOT::Libraries` target will help much. It goes against modern CMake usage, and now even things like dataframe can be disabled during configuration, so if someone links against `ROOT::Libraries` to get dataframe, it might not be there. ROOT library targets propagate C++ standard, include directories, and link dependencies now, so I think that it's best to use those when linking instead of a generic target that may or may not contain the libraries you need. We still have the old style `${ROOT_LIBRARIES}` that contains what `root-config --libs` contains if one wants to go that route. However, I'm not keen to make it easy for users to potentially overlink/underlink their code by adding the generic target. If you don't mind, I think it's best to close this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-509585352:377,depend,dependencies,377,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-509585352,2,"['depend', 'rout']","['dependencies', 'route']"
Integrability,"I see some activies about this issue. I compiled ROOT from scratch with AppleClang15 on my Macbook Pro M1 Max (2022) and I see this very same error message. Any quick fix or plan to solve this ?; ```; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10556#issuecomment-1931298699:148,message,message,148,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1931298699,1,['message'],['message']
Integrability,"I see that the arrays of input observables get hardcoded into the generated the function. This is not acceptable, because often you have thousands of events, which I tried out too. The `fitTo` time gets slow very quicky when you increase the number of events. I think the effort of generating a function where the observables are passed as input arrays instead would really pay off. You already know how to retrieve the observable values via `RooAbsData::getBatches`. Is it possible to save these arrays in the wrapper and then pass them to the generated function?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11773#issuecomment-1343439599:511,wrap,wrapper,511,https://root.cern,https://github.com/root-project/root/pull/11773#issuecomment-1343439599,1,['wrap'],['wrapper']
Integrability,I see that the ubuntu2004 build works fine without the PCH dependency. ; See output [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165830/consoleFull). There is then something strange on that old platform. Let's disable tmva-sofie there and we ignore this error. ; Please @amadio go ahead merging these changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1404267114:59,depend,dependency,59,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1404267114,1,['depend'],['dependency']
Integrability,"I see the test passes in the CI, so it could be a problem with my environment. ; The hanging test is `TestMPMessenger.StressPubSub`; Here are the last lines of the log:; ```[ RUN ] TestMPMessenger.SigStop; first send message to queue...; PID 493293 sends M2Q 1; sleep for 2 seconds...; PID 493330 receives M2Q 1; received 1 on queue; SIGSTOPping all children...; send another message to queue...; PID 493293 sends M2Q 2; sleep for 2 seconds...; SIGCONT queue and worker 1...; sleep for 2 seconds...; PID 493330 receives M2Q 2; received 2 on queue; PID 493330 sends Q2M 3; SIGCONT worker 2...; PID 493293 receives Q2M 3; Messenger dtor on PID 493293; handled Terminated on PID 493330; handled Terminated on PID 493328; handled Terminated on PID 493329; Messenger dtor on PID 493330; Messenger dtor on PID 493328; Messenger dtor on PID 493329; [ OK ] TestMPMessenger.SigStop (6004 ms); [ RUN ] TestMPMessenger.StressPubSub; Messenger dtor on PID 493525; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-979231373:217,message,message,217,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-979231373,2,['message'],['message']
Integrability,"I see these build failures on `alma9`:; ```; Scanning dependencies of target G__TMVAUtils; Consolidate compiler generated dependencies of target G__TMVAUtils; [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o; [ 98%] Linking CXX executable TestRModelParserPyTorch; /usr/bin/ld: cannot find -lblas; ```; But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15275#issuecomment-2066606878:54,depend,dependencies,54,https://root.cern,https://github.com/root-project/root/pull/15275#issuecomment-2066606878,2,['depend'],['dependencies']
Integrability,"I see, in this case, you can go with the code snippet I pasted above. Since you open the ntuple without your own model, RNTuple needs to generate the model from the on-disk information. The call to `r->GetModel()` calls `RNTupleDescriptor::GenerateModel()`, which in turn uses `RFieldBase::Create()` with the on-disk type string. So you do exercise the type-erased `RRVecField`. More generally, perhaps it _is_ correct to make at least `GenerateValue` and `CaptureValue` non-const (`DestroyValue` could probably be const). An `RFieldValue` emerges from a field, it is linked to it, and it is meant to alter the field's state through reading and writing data. We could possibly add a `const` method like `virtual void *RFieldBase::GenerateType() const;` to just construct the type that is wrapped by the field. (Without such a function, a work-around is to clone the field and generate an `RFieldValue` on the clone.) I'm not sure if it is really necessary. Framework code that uses the type-erased reading API will most likely receive a `void *` pointer from somewhere else. The framework can then use `RNTupleModel::CreateBareEntry()` and `REntry::CaptureValueUnsafe()` to read into that `void *`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10408#issuecomment-1117593717:788,wrap,wrapped,788,https://root.cern,https://github.com/root-project/root/issues/10408#issuecomment-1117593717,1,['wrap'],['wrapped']
Integrability,"I see. I changed the formatting in some cases, but I guess you mean that some messages are not shown which should be shown or something is not shown that was shown before? Let me know how I can help.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-726263874:78,message,messages,78,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-726263874,1,['message'],['messages']
Integrability,"I still get exactly the error described in the summary with `master`:; ```; ----------------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 05 2024, 07:24:23 |; | From heads/ntuple-RPageNullSink@v6-31-01-913-gfdecca9b4d |; | With clang version 16.0.6 (Red Hat 16.0.6-2.module_el8.9.0+3621+df7f7146) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ----------------------------------------------------------------------------. root [0] .rawInput; Using raw input; root [1] std::vector<short> getV() { return {42}; }; root [2] .rawInput; Not using raw input; root [3] getV()[0].foo(); ROOT_prompt_3:1:10: error: member reference base type 'value_type' (aka 'short') is not a structure or union; getV()[0].foo(); ~~~~~~~~~^~~~; root [4] getV()[0]; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&); Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7970#issuecomment-1926373568:1044,interface,interface,1044,https://root.cern,https://github.com/root-project/root/issues/7970#issuecomment-1926373568,1,['interface'],['interface']
Integrability,"I strongly favour a quick integration of this PR but, @pcanal before integrating I think there are other steps besides the suggested doc + tutorials + tests. For example a double check by @amadio about the CMake code to find arrow and arrow itself in our externals and/or inclusion of arrow in the built-ins (needs discussion). ; @ktf, the tutorials for this TDS should go in https://github.com/root-project/root/tree/master/tutorials/dataframe . You can punch in the C++ and Python version of the example you'd like to propose: ROOT will pick them up as tests for the CI and the doc machinery will put them on the web https://root.cern/doc/master/group__tutorial__tdataframe.html accessible also as rendered notebooks and notebooks runable in [SWAN](https://swan.cern.ch).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371738541:26,integrat,integration,26,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371738541,2,['integrat'],"['integrating', 'integration']"
Integrability,"I suppose the proposed can work but require a synchronization step of sort. The thread handling file number n, must wait until the file number [0,n-1] have been open before starting to process entries ; the file opening can be in parallel (somewhat) but still if an arbitrary file inside the chain is much smaller than the other, the thread processing it will have to wait a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12190#issuecomment-1411036768:46,synchroniz,synchronization,46,https://root.cern,https://github.com/root-project/root/issues/12190#issuecomment-1411036768,1,['synchroniz'],['synchronization']
Integrability,"I think I can follow. That would mean that we accept the cost of allocating strings (stack frame, error message) in the RStatus class in case of errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4683#issuecomment-564991984:104,message,message,104,https://root.cern,https://github.com/root-project/root/pull/4683#issuecomment-564991984,1,['message'],['message']
Integrability,"I think Yuka is right, the `cling::printValue()` interface is too tempting to force people to go through `cling::Value::print()`. We currently do that to trigger the inclusion of the ""generic overloads"" header into cling. I proposed to Yuka to move the header inclusion of `cling::valuePrinterInternal::printValueInternal()` into a new function that will be called by `TCling()` (and `printValueInternal()`) to ensure ROOT has that header always included at startup. This will allow ROOT to invoke `cling::printValue()` directly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2644#issuecomment-423098163:49,interface,interface,49,https://root.cern,https://github.com/root-project/root/pull/2644#issuecomment-423098163,1,['interface'],['interface']
Integrability,"I think gcc does the same, I see this when debugging heavily templated code -- sometimes (rarely) `int` appears in error messages in place of a type that could not be determined.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8470#issuecomment-866620948:121,message,messages,121,https://root.cern,https://github.com/root-project/root/issues/8470#issuecomment-866620948,1,['message'],['messages']
Integrability,I think https://github.com/root-project/root/compare/99093d95f7...78228fee3b were the changes which caused this issue. There were no issues with root commit 99093d95f7 but once we integrated 78228fee3b then cmssw unit test started to show slowness,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11637#issuecomment-1292113871:180,integrat,integrated,180,https://root.cern,https://github.com/root-project/root/issues/11637#issuecomment-1292113871,1,['integrat'],['integrated']
Integrability,"I think it is better for you to ask help on the ROOT forum instead of on the issues section on Github. Actually, you have already posted a message on the forum [here](https://root-forum.cern.ch/t/permission-denied/52089/2).; So I think, this issue and [this one](https://github.com/root-project/root/issues/11626) should be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11636#issuecomment-1291593248:139,message,message,139,https://root.cern,https://github.com/root-project/root/issues/11636#issuecomment-1291593248,1,['message'],['message']
Integrability,"I think it is fine to change the test as the new code fit better the intent. However, it also hides a real issue:; ```; root [0] class ABC;; root [1] void func(ABC*) {}; root [2] class ABC { int a; }; root [3] ABC a; (ABC &) @0x10ad87068; root [4] func(&a); IncrementalExecutor::executeFunction: symbol '_ZN11__cling_N514funcEPN11__cling_N523ABCE' unresolved while linking [cling interface function]!; You are probably missing the definition of __cling_N51::func(__cling_N52::ABC*); Maybe you need to load the corresponding shared library?; ```. humm ... On the other hand this code might be actually solved by this PR. Nonetheless. Since the prompt and `ProcessLine` are very similar, it sounds like user could easily (inadvertently) fall in the pattern in the test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9782#issuecomment-1030056862:380,interface,interface,380,https://root.cern,https://github.com/root-project/root/pull/9782#issuecomment-1030056862,1,['interface'],['interface']
Integrability,"I think it may be a better approach if we expand the transitive dependencies. Eg. if we have `Core<-RIO<-Blah` and you specify only `RIO`, the system should automatically expand `Core`. Then we can choose if we want to enforce our cmake to enumerate all dependencies explicitly (because we will be able to issue a proper diagnostic). Expansion of transitive dependencies will free the non-expert users of our macros of enumerating all libraries and their dependencies (which they might not be aware of). And more importantly, it will free our cmake lists of:; ```; set deps(); if (option); set( deps ${deps} libOpt1); endif(option). ...; DEPENDENCIES ${deps}; ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4299#issuecomment-525784496:64,depend,dependencies,64,https://root.cern,https://github.com/root-project/root/pull/4299#issuecomment-525784496,5,"['DEPEND', 'depend']","['DEPENDENCIES', 'dependencies']"
Integrability,"I think it might be hard to come up with a proper heuristic. For example is the threshold ""per dictionary"" (in which case it might be achiveable) or is it an accumulative cost, i.e. per whole set of library (in which case it is impossible) and is it lightly or highly dependent of the fraction of the generated dicitonary entries and/or header that are actually used? . > Users do not use make project . MakeProject is irrelevant here. It is ""only"" just to quickly produce an emulation of the ""Experiment Framework"" type of problem size. The relevant part is (as you noted) the amount of classes needed for I/O. One part that example does not emulate is the (high) number of libraries and dictionary. So *yes* this type of problem is extremely relevant and no it is actually not directly represented in roottest. (and it is unknown which fraction of the roottests are exercising this code path (i.e. not only loading but also using the rootpcms). Also I suppose there are ways to reduce the up-front cost of the rootpcms (for example delaying their loading until needed)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-659011045:268,depend,dependent,268,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-659011045,1,['depend'],['dependent']
Integrability,"I think it would have been better to squash these commits instead of pushing 18 intermediate commits with messages such as ""clarify""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9629#issuecomment-1041176258:106,message,messages,106,https://root.cern,https://github.com/root-project/root/pull/9629#issuecomment-1041176258,1,['message'],['messages']
Integrability,"I think it's a good point not to have too many nobs for turning on and off parallelism. How about we expose the `SetTaskScheduler()` interface from `RNTupleReader` and `RNTupleWriter`. So you'd either use all of IMT, or you explicitly diverge in RNTuple by providing your own task scheduler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8334#issuecomment-856888414:133,interface,interface,133,https://root.cern,https://github.com/root-project/root/pull/8334#issuecomment-856888414,1,['interface'],['interface']
Integrability,"I think that is sufficient efficient evidence albeit there is one more simple test to do, is to introduce a synchronization point every once in a while to insure that the queue is actually filled/used and then later emptied.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1821703597:108,synchroniz,synchronization,108,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1821703597,2,['synchroniz'],['synchronization']
Integrability,"I think that still means that label sizes are not being correctly accounted for, with font precision 43 one should change from e.g. 0.1 label size to some number of pixels like 20, right? In this case, the pre-font-precision size is still there, whatever its value (unless the conversion is entirely implicit, which is... well... I need to use this to harmonize labels across adjacent pads that do not share the same heights/widths, so avoiding attempts to match the fontprecision 42 sizes on those is the purpose of going to precision 43). For the alignment, that was my mistake, I thought it was 10*vAlign + hAlign, and that's wrong, so it's working as expected. I'll see what I can do from python, that's going to involve a fair amount of wrapping and ctypes, it looks like. Also, is that only going to work once the axis has been added to the paint list with Draw()? i.e. return inapplicable/incorrect numbers of labels beforehand?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10279#issuecomment-1084490685:742,wrap,wrapping,742,https://root.cern,https://github.com/root-project/root/issues/10279#issuecomment-1084490685,1,['wrap'],['wrapping']
Integrability,"I think that we need to add a signature of `ROOT::Experimental::RNTupleImporter::Create` that let the user over-ride the default name (what ever it is). For the default behavior I see only 2 sensible behavior:; * Use the user provided name, if none, use the `TChain` name, if not set, use the first `TTree` and leave it at that.; or; * Use the user provided name, if none, use the `TChain` name, if not set, use the first `TTree`. In the later case (i.e. we guessed the name) throw an exception if encountering a different name. Note that the 2nd behavior might actually be the prefer one ... depending on what we do if/when we encounter a `TTree` which a different structure. (I.e. we reject `TTree` with a different structure, we ought to reject the name. If we accept `TTree` with a different structure, we ought to ignore the name). `hadd` for example let some differences slides (like added branches being ignored) and use the first file as the decider of the structure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13088#issuecomment-1611967270:593,depend,depending,593,https://root.cern,https://github.com/root-project/root/issues/13088#issuecomment-1611967270,1,['depend'],['depending']
Integrability,"I think the PR goes into the right direction. Please use just 1 simple event instead of 1000, because we are really testing only if the compression setting gets applied. The `ntuple_zip` unit tests are _not_ really relevant here -- they test the compression routines themselves and not if the correct compression settings were used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5179#issuecomment-620674511:258,rout,routines,258,https://root.cern,https://github.com/root-project/root/pull/5179#issuecomment-620674511,2,['rout'],['routines']
Integrability,"I think this PR is not needed, with #7017. I have tested and I did not get any error. Only this message when starting root:; ```; Module cuda not found.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6999#issuecomment-758479941:96,message,message,96,https://root.cern,https://github.com/root-project/root/pull/6999#issuecomment-758479941,1,['message'],['message']
Integrability,"I think this cannot be merged as is, since using the .cxx files for dependencies creates a race condition with the custom command that writes them out (multiple targets depending on the same custom command). I will try to find another solution to this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4329#issuecomment-527323573:68,depend,dependencies,68,https://root.cern,https://github.com/root-project/root/pull/4329#issuecomment-527323573,2,['depend'],"['dependencies', 'depending']"
Integrability,"I think this is ready for review. My intent is to fix the segfault and provide scaffolding for RNTuple merges in this PR and follow up with the actual implementation PRs. . @pcanal are you comfortable with the error message printed on an attempted merge for non-inheriting objects? . ```text; hadd Target file: ../merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: ../merged.root:/; Fatal in <TFileMerger::MergeRecursive>: Merging objects that don't inherit from TObject is unimplemented (key: ntuple in file ntuple2.root); aborting; grep: warning: GREP_OPTIONS is deprecated; please use an alias or script; #0 0x00007f2dfd7ec07a in __GI___waitpid (pid=20605, stat_loc=stat_loc; entry=0x7fffc72e6c90, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29; #1 0x00007f2dfd764fbb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f2dfe92beb6 in TUnixSystem::StackTrace() () from /home/max/projects/root/new-errors/lib/libCore.so; #3 0x00007f2dfe7fe1aa in DefaultErrorHandler(int, bool, char const*, char const*) () from /home/max/projects/root/new-errors/lib/libCore.so; #4 0x00007f2dfe8b9be8 in ErrorHandler () from /home/max/projects/root/new-errors/lib/libCore.so; #5 0x00007f2dfe810e29 in TObject::Fatal(char const*, char const*, ...) const () from /home/max/projects/root/new-errors/lib/libCore.so; #6 0x00007f2dfeed49e3 in TFileMerger::MergeRecursive(TDirectory*, TList*, int) () from /home/max/projects/root/new-errors/lib/libRIO.so; #7 0x00007f2dfeed2e41 in TFileMerger::PartialMerge(int) () from /home/max/projects/root/new-errors/lib/libRIO.so; #8 0x0000000000406c8d in main::{lambda(TFileMerger&, int, int)#2}::operator()(TFileMerger&, int, int) const [clone .constprop.0] (); #9 0x0000000000404ccd in main (); #10 0x00007f2dfd740830 in __libc_start_main (main=0x403f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6008#issuecomment-662581836:216,message,message,216,https://root.cern,https://github.com/root-project/root/pull/6008#issuecomment-662581836,1,['message'],['message']
Integrability,"I think we can go for the PR to Cppyy and see what is the opinion of Wim on this issue. The tricky point is the dependency we introduce between CPyCppyy and ROOT, although only if a macro is defined.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3455#issuecomment-465633729:112,depend,dependency,112,https://root.cern,https://github.com/root-project/root/pull/3455#issuecomment-465633729,1,['depend'],['dependency']
Integrability,"I think we should close this issue, many / most of the dependencies are correct and `make` being slow when there is nothing to do is exactly the motivation to use Ninja. So not much to improve from the ROOT side of things.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8624#issuecomment-934436116:55,depend,dependencies,55,https://root.cern,https://github.com/root-project/root/issues/8624#issuecomment-934436116,1,['depend'],['dependencies']
Integrability,"I thought (in theory) using fixed width integer would be more reliable because 8 bits are 8 bits for i386, x86-64, ARM, and so on (Ok, assuming we have the same definition of ""bit"" for all of the platforms). > The branch created from a leaflist (your case) do not support schema evolution. To make matter worse the C/C++ typedef (int8_t for example) appeared slightly differently to CINT that they appear to Cling.; > ; > Even the trivial part of the schema evolution that you would need here (maybe), i.e. allow to read 'char' from either 'signed char' or 'unsigned char' depending on the platform or compiler setting (deciding the signness of char) is not implement.; > (technically the typeinfo for 'char', 'signed char' and 'unsigned char' are different).; > ; > So for better or worse you need to use:; > ; > ```; > char i;; > TFile f (file_name.c_str ());; > TTree *t = (TTree*)f.Get (""tree"");; > t->SetBranchAddress (""i"", &i);; > ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7565#issuecomment-801737090:573,depend,depending,573,https://root.cern,https://github.com/root-project/root/issues/7565#issuecomment-801737090,1,['depend'],['depending']
Integrability,"I thought the rationale is spelled out in the original post?. > They are dependant on the OS (DYLD* on macOS, LD_LIBRARY_PATH on Linux, etc); > LD_LIBRARY_PATH/etc modify the system's search path for dynamic libraries, which can result in all sorts of bad things.; >; > We would like to have a dedicated environment variable, that is; > - OS independant.; > - does only affect ROOT. Why would that exclude Windows? Either we ""buy"" the rationale and agree that this is a useful feature (and that would then include Windows) or we think it's not needed, but then it shouldn't be needed on any platform. What am I missing / misunderstanding?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-800435989:73,depend,dependant,73,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-800435989,1,['depend'],['dependant']
Integrability,"I thought this was already working :slightly_smiling_face: But okay, if it's not working I agree we should support this :+1: This will help a lot in making C++ interfaces feel more pythonic without writing explicit pythonization wrappers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16406#issuecomment-2344728956:160,interface,interfaces,160,https://root.cern,https://github.com/root-project/root/issues/16406#issuecomment-2344728956,2,"['interface', 'wrap']","['interfaces', 'wrappers']"
Integrability,I thought we could not freely use stuff from TBB?. EDIT: it's tricky not to introduce a header dependency on TBB when using template classes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8715#issuecomment-884814182:95,depend,dependency,95,https://root.cern,https://github.com/root-project/root/pull/8715#issuecomment-884814182,1,['depend'],['dependency']
Integrability,"I tried out option 3 and it gives pretty good results, using your comparison method as documented in your commit message here https://github.com/root-project/root/commit/466f3f689c578cb53d75ddeeb04472ec4d82e3ed:. ```; value_old value_new diff_abs diff_rel; param; -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00; -0.95 0.9047424331 0.9049857073 0.0002432742 2.69E-04; -0.85 0.9140836603 0.9146805378 0.0005968775 6.53E-04; -0.75 0.9230659064 0.9237960815 0.0007301751 7.91E-04; -0.65 0.9317147727 0.9323668386 0.0006520658 7.00E-04; -0.55 0.9402402768 0.9406592464 0.0004189696 4.46E-04; -0.45 0.9489635592 0.9490771800 0.0001136208 1.20E-04; -0.35 0.9582539443 0.9580809519 -0.0001729925 -1.81E-04; -0.25 0.9684763536 0.9681198120 -0.0003565416 -3.68E-04; -0.15 0.9799490728 0.9795779479 -0.0003711248 -3.79E-04; -0.05 0.9929118716 0.9927339847 -0.0001778869 -1.79E-04; 0.05 1.0075044778 1.0077339847 0.0002295068 2.28E-04; 0.15 1.0237554038 1.0245779479 0.0008225442 8.03E-04; 0.25 1.0415811263 1.0431198120 0.0015386857 1.48E-03; 0.35 1.0607956204 1.0630809519 0.0022853314 2.15E-03; 0.45 1.0811302458 1.0840771800 0.0029469342 2.73E-03; 0.55 1.1022639865 1.1056592464 0.0033952598 3.08E-03; 0.65 1.1238640449 1.1273668386 0.0035027937 3.12E-03; 0.75 1.1456367871 1.1487960815 0.0031592944 2.76E-03; 0.85 1.1673890440 1.1696805378 0.0022914938 1.96E-03; 0.95 1.1890997634 1.1899857073 0.0008859439 7.45E-04; 1.00 1.2000000000 1.2000000000 0.0000000000 0.00E+00; ```. The difference is slightly worse, half an order of magnitude I'd guesstimate, but perhaps this is not such a big deal. The implementation that produced these ""new"" results:. 1. It uses your `interpolate6thDegree`.; 2. On the call site in `flexibleInterp`, I removed the `log`s, the `exp` and I added a `1 +`, which is also done in the old algorithm before returning. Indeed, I saw that when I did not add it, the absolute difference of the first results was exactly `-1`. So, in the end the calling line becomes `return total",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13749#issuecomment-1746603106:113,message,message,113,https://root.cern,https://github.com/root-project/root/issues/13749#issuecomment-1746603106,1,['message'],['message']
Integrability,"I tried to reproduce this issue with the following C++ script:; ```; void nan(){; auto g = new TGraph ();; g->AddPoint(0,TMath::QuietNaN());; g->AddPoint(1,TMath::QuietNaN());; g->AddPoint(2,TMath::QuietNaN());; g->AddPoint(3,TMath::QuietNaN());; g->AddPoint(4,TMath::QuietNaN());; g->Draw(""APL"");; }; ```; Like you it gives me a blank canvas but in parallel, I get the following messages in the terminal output:; ```; root [0] ; Processing nan.C...; Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; Warning in <TCanvas::ResizePad>: Inf/NaN propagated to the pad. Check drawn objects.; Warning in <TCanvas::ResizePad>: c1 height changed from 0 to 10; ``` ; So it is pretty clear that there NaNs in the data. ; The message even invites the user to check the ""drawn objects"". I do not think we can do more than that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12296#issuecomment-1431275163:380,message,messages,380,https://root.cern,https://github.com/root-project/root/issues/12296#issuecomment-1431275163,4,['message'],"['message', 'messages']"
Integrability,"I understand where `PySequence_Check` is coming from (there is e.g. a standard Python `iterator` that will try indexing an object from 0 with integers), but for C++ bound containers (or C++ objects in general), the right question to ask is whether they implement the iterator protocol. E.g. an `std::list` is a sequence and can be iterated over, but not through indexing, as it's not random-access. For `std::map` the same issues exist as for Python, but of course with no special-case exception made in `PySequence_Check` and `std::map<int, T>` is a particular hot mess. Then there's the fact that `operator[](T)` can be redefined in both C++ and Python to mean whatever ... Note that an iterator protocol check would be for `hasattr(obj, '__iter__')` and not `iter(obj)`, as the latter would succeed b/c of that index-based `iterator` mentioned. I'm not really convinced by the `is_sequence()` method proposed, as it would currently fail for this:; ```; import cppyy. cppyy.cppdef(""""""\; struct MyStruct {};; MyStruct* fff = nullptr;; """"""). def is_sequence(obj):; try:; obj[0]; return True; except TypeError as e:; print(e); return False. print(is_sequence(cppyy.gbl.fff)); ```; which prints `True` as all data members are presumed both `*` and `[]`. This should perhaps also be extended to function return types, but returning arrays that way seems to be much less common in practice. Or at least, I've never had that request. Regardless, the problem remains that C++ is simply ambiguous here and I even think it would be fair to assume that `obj[0]` is only every done if `obj` is in fact an array. (Currently not the case, but why not.). Maybe `__getitem__` can be refined to only appear after lookup through `__getattr__`, i.e. to make it fully instance-specific. The result might be confusing as it would still have to be permissive to cover all cases. However, if the check for `__getitem__` is then performed on the class, instead of on the object, it would give you the old behavior back. (I ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2057616934:276,protocol,protocol,276,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2057616934,4,['protocol'],['protocol']
Integrability,"I understand your point from the developer point of view. But from the user point of view:. There have been so many many users asking this question. When so many people ask this question, it means that the message is ambiguous. It's not a one-case. https://root-forum.cern.ch/t/which-package-or-class-supersede-the-tspectrum-for-searching-peaks/51459; https://root-forum.cern.ch/t/if-tspectrum-class-is-legacy-code-another-code-for-tspectrum/50833; https://root-forum.cern.ch/t/question-about-tspectrum-alternatives/48447; https://root-forum.cern.ch/t/question-about-tspectrum-alternatives/48447; https://root-forum.cern.ch/t/alternative-for-tspectrum/49984. Also, saying that it is not recommended is a bit aggressive when there is no replacement for it, which is why in my opinion so many people ask the question. The result is that developers lose most time answering the questions in the forum. If one would say, do not use TTreeReaderArray, use RDataFrame, that would be fine. In any case, I agree with your point of adding more info in the body doc, as you commented here: https://root-forum.cern.ch/t/alternative-for-tspectrum/49984/3?u=ferhue. Still, my opinion is that the wording could be fixed on the first place. If the label were just 'interface will not receive new bug fixes', instead of 'not recommended', it would be less ambiguous and no one would ask further questions in the forum. And as a user, I still use TSpectrum in new developments. There is no alternative to it for my use cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11315#issuecomment-1237786012:206,message,message,206,https://root.cern,https://github.com/root-project/root/pull/11315#issuecomment-1237786012,2,"['interface', 'message']","['interface', 'message']"
Integrability,"I understand, but the dependency must vanish before the next release if I understood Axel and Lorenzo correctly.; @Axel-Naumann @lmoneta ?. So I'm not sure if we introduce it now, it might end up in the next release. How do we make sure that this is taken care of?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5439#issuecomment-618454397:22,depend,dependency,22,https://root.cern,https://github.com/root-project/root/pull/5439#issuecomment-618454397,1,['depend'],['dependency']
Integrability,"I used ""xtrace"", and I got messages printed when I use kAnyModifier, but none without it. ```; _root [1] 000:<:0549: 12: Request(102): ChangeKeyboardControl values={auto-repeat-mode=On(0x01)}; 000:>:0549: Event KeyPress(2) keycode=0x36 time=0x174cf013 root=0x00000185 event=0x07e000e7 child=None(0x00000000) root-x=939 root-y=542 event-x=54 event-y=38 state=Control,Mod2 same-screen=true(0x01); CTRL+C key pressed!; 0x7ffdd1322ea0 0 20; 000:>:0549: Event KeyRelease(3) keycode=0x36 time=0x174cf0b3 root=0x00000185 event=0x07e000e7 child=None(0x00000000) root-x=939 root-y=542 event-x=54 event-y=38 state=Control,Mod2 same-screen=true(0x01); 0x7ffdd1322ea0 1 20_; ```. Now to the funny part. I added the following to the mask:; `kKeyShiftMask | kKeyLockMask | kKeyControlMask | kKeyMod1Mask | kKeyMod2Mask | kKeyMod3Mask | kKeyMod4Mask | kKeyMod5Mask | kButton1Mask | kButton2Mask | kButton3Mask | kButton4Mask | kButton5Mask | kButton6Mask | kButton7Mask`. and it still didn't work. Then I added `| kAnyModifier`, and it worked. Then I removed all of them and replace with just `kKeyControlMask`. And then it worked. So now it works perfectly as it should and lets me even more confused. It seems there is something fishy going on with X11 being let in an undefined state that somehow playing around was enough to 'reset it'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8665#issuecomment-879702063:27,message,messages,27,https://root.cern,https://github.com/root-project/root/issues/8665#issuecomment-879702063,1,['message'],['messages']
Integrability,"I want too, but actually it make the TreeTable one row more than it should, and break the breadcrumbs; I sended a message on Slack to have help from SAP, but i still have no answer; As soon as i have free time, or an answer i will try to find a solution, and apply it back. But i believe that for the user experience, it is better to have the Splitter, more than the two scrollbars, and the nor usable breadcrumbs. This is a temporary fix until we can debug the SplitApp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4591#issuecomment-547359502:114,message,message,114,https://root.cern,https://github.com/root-project/root/pull/4591#issuecomment-547359502,2,['message'],['message']
Integrability,I was running some compilation benchmarks on a haswell machine and it looks like in `-j12` mode we are not scaling well even if llvm is out of our way. I suspect we still have a bridge in the graph around cling/rootcling. I.e. I was expecting better compilation speedup...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1632#issuecomment-365877943:178,bridg,bridge,178,https://root.cern,https://github.com/root-project/root/pull/1632#issuecomment-365877943,1,['bridg'],['bridge']
Integrability,"I went through all comments, closed the ones I fixed and left some further comments for follow up discussion. The fixes I made so far are summarized in the commit message. The obvious big things still are `KahanSum` and adding lots of documentation. I will do these (and the other remaining todo's in the first post above this PR, https://github.com/root-project/root/pull/8700#issue-692681999) after my holidays.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-884989115:163,message,message,163,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-884989115,1,['message'],['message']
Integrability,I will close this PR for now because it doesn't have a high priority. Much more development time will have to be invested to make the analytical integration actually faster than the numerical integration here (maybe with the help of KD-trees.).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8019#issuecomment-831321209:145,integrat,integration,145,https://root.cern,https://github.com/root-project/root/pull/8019#issuecomment-831321209,2,['integrat'],['integration']
Integrability,I will fix that commit message. Thanks for finding that!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096#issuecomment-1428280077:23,message,message,23,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1428280077,1,['message'],['message']
Integrability,"I will look at 6609. For the RPi4, I had a more serious issue with 6.22/03. I could not load TMVA in Python - I got the dreaded failed to pythonize message. I repeated the same prescription above with 6.20/09 and loading TMVA in Python worked fine. Python 3.7.3 (default, Jul 25 2020, 13:03:44); [GCC 8.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> from ROOT import TMVA; Traceback (most recent call last):; File ""/home/pi/root/install/lib/ROOT/_facade.py"", line 272, in TMVA; from libROOTPythonizations import AsRTensor; ImportError: cannot import name 'AsRTensor' from 'libROOTPythonizations3_7' (/home/pi/root/install/lib/libROOTPythonizations3_7.so). During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/pi/root/install/lib/ROOT/_facade.py"", line 275, in TMVA; raise Exception('Failed to pythonize the namespace TMVA'); Exception: Failed to pythonize the namespace TMVA. However, no problems with 6.20/09; Python 3.7.3 (default, Jul 25 2020, 13:03:44); [GCC 8.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> from ROOT import TMVA; >>>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561#issuecomment-718345054:148,message,message,148,https://root.cern,https://github.com/root-project/root/pull/4561#issuecomment-718345054,1,['message'],['message']
Integrability,I will look at it. I prefer to have a self consistent doc. Having it with the doc reduces the dependencies in case the remote website is down.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10067#issuecomment-1061593943:94,depend,dependencies,94,https://root.cern,https://github.com/root-project/root/issues/10067#issuecomment-1061593943,1,['depend'],['dependencies']
Integrability,"I will try to reproduce the issue.; In the meantime, if you want to try something on your side, and if you need a full `Debug` build (i.e. with all external dependencies also built in `Debug` mode), make sure to enable the `winrtdebug` option (`-Dwinrtdebug=ON`) to link everything with the `Debug` runtime libraries, or build everything in `RelWithDebInfo` mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12738#issuecomment-1532893258:157,depend,dependencies,157,https://root.cern,https://github.com/root-project/root/issues/12738#issuecomment-1532893258,1,['depend'],['dependencies']
Integrability,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-863178474:483,message,message,483,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-863178474,1,['message'],['message']
Integrability,"I would again prefer to have a run-time option and I think I have a solution that satisfies everyone. This is implemented in my latest patch https://github.com/root-project/root/pull/6705/commits/365bd46563c025a5341b48e6d199b2aa4be76c4e. I think we need to collect the prefix stack if we want to be able to filter out, for example, messages from MnLineSearch that happen inside MnMigrad, but not those that happen inside MnHesse. That's why I think the prefix stack should stay. It is also fast, since only a couple of pointers are copied around. However, there is no need to show the full stack of prefixes. By default, MnPrint could just show the prefix from the innermost scope. I added the static method `MnPrint::ShowPrefixStack(bool yes)` to toggle showing the full prefix or not. The default is off so that the messages are not too long. I also now implemented filtering of messages based on the value of the prefix stack. When no filters are set, all messages are shown. Once a filter is set, only messages that match the filter are shown. This is done with strings, using `MnPrint::AddFilter` and `MnPrint::ClearFilter` to reset the filters. Filtering works like `grep` on the full prefix, the message is shown if any of the filter strings match. To only see messages from `MnHesse`, one can do:; ```c++; MnPrint::AddFilter(""MnHesse"");; ```; To only see messages from `MnHesse` called from VariableMetrixBuilder, one can do:; ```c++; MnPrint::AddFilter(""VariableMetricBuilder:MnHesse"");; ```; To only match the beginning of the prefix string, use ""^"". For example,; ```c++; MnPrint::AddFilter(""^MnHesse"");; ```; only matches direct execution of MnHesse, but not MnHesse called by MnMigrad. It also works with substrings. To see all messages from any Gradient calculator, one can do:; ```c++; MnPrint::AddFilter(""Gradient"");; ```; to match AnalyticalGradientCalculator, Numerical2PGradientCalculator, and InitialGradientCalculator. Filtering is not implemented in a very efficient way to keep ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-733046580:332,message,messages,332,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-733046580,8,['message'],['messages']
Integrability,"I would also argue that the answer might be different for different level of message. For example, I can see a use (maybe) for the line number for Fatal and Debug message, but I don't see it for ""Info"" message. I.e. some message are directed at the user (Print, Info, Warning .. maybe even Error) and other messare are directed (indirectly) at the developers (Fatal, Debug ... maybe Error). When reading:; ```; Info in ROOT.RDF, void ROOT::Detail::RDF::RLoopManager::Run() [tree/dataframe/src/RLoopManager.cxx:658]: Starting event loop number 0.; ```; I find the (relative path) filename and line number entirely redundant. The information is already contained in the ouput message and function name (just open the file, get to the routine and search for the message). Ambiguous messages (same text for different lines) are rare and it is even rarer that you can't figure it out. [This applies ""less"" to debug message that are more likely to be terser and more repeated]. In term of useful information content (for an Info message directed at the user), the following might be sufficient:; ```; Info in ROOT.RDF, RLoopManager::Run: Starting event loop number 0.; ```; or even ""just""; ```; Info in ROOT.RDF: Starting event loop number 0.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7008#issuecomment-756867365:77,message,message,77,https://root.cern,https://github.com/root-project/root/issues/7008#issuecomment-756867365,10,"['message', 'rout']","['message', 'messages', 'routine']"
Integrability,"I would avoid including the code in ROOT. Wrapper for GSL exists, I would use those if needed, see ; https://www.thesalmons.org/john/random123/releases/latest/docs/index.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14564#issuecomment-1940697880:42,Wrap,Wrapper,42,https://root.cern,https://github.com/root-project/root/issues/14564#issuecomment-1940697880,1,['Wrap'],['Wrapper']
Integrability,"I would like to suggest to drop the ""From Guilherme:"" part from the commit message (I don't like my name in it like that), and add a [`Suggested-by: `](https://git.wiki.kernel.org/index.php/CommitMessageConventions) tag instead, or just drop it entirely, it's just a minor change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3866#issuecomment-496146795:75,message,message,75,https://root.cern,https://github.com/root-project/root/pull/3866#issuecomment-496146795,1,['message'],['message']
Integrability,"I would love to, but you just edited the GitHub comment and not the commit itself. Could you update the message there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5221#issuecomment-604872807:104,message,message,104,https://root.cern,https://github.com/root-project/root/pull/5221#issuecomment-604872807,1,['message'],['message']
Integrability,"I would not know where your impression could come from, @vgvassilev . As we had discussed, and as the commit and PR message say, master is sufficiently different from llvm9 to make a backport unreasonably (for me) involved. Thanks for confirming that this ought to work in master, @hahnjo !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8044#issuecomment-831705558:116,message,message,116,https://root.cern,https://github.com/root-project/root/pull/8044#issuecomment-831705558,1,['message'],['message']
Integrability,"I would propose to change the title to ""[ci] Further speedup mac and linux builds by caching dependencies"". The word ""instead"" can be misleading. Our goal is to have feedback from the CI as soon as possible. Having several nodes, allows to scale horizontally. We are not increasing the number of nodes in the CI because we are lazy, we just need many nodes AND fast CI, e.g. through caches or quicker tests :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14987#issuecomment-2001914193:93,depend,dependencies,93,https://root.cern,https://github.com/root-project/root/issues/14987#issuecomment-2001914193,2,['depend'],['dependencies']
Integrability,"I would suggest instead generalizing this instead of attaching it to a platform X11 or cocoa:; If 'asimage=OFF', then skip this message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15042#issuecomment-2016843986:128,message,message,128,https://root.cern,https://github.com/root-project/root/pull/15042#issuecomment-2016843986,1,['message'],['message']
Integrability,"I wrote that test the first week that I worked in the ROOT team, and I had not much of a clue about RooFit or ROOT :laughing: I don't remember anything in detail. In hindsight, it's probably because these RooFit objects reference each other and something used to depend on the order of destruction. I randomly saw this again today and figured it's probably not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16067#issuecomment-2239387042:263,depend,depend,263,https://root.cern,https://github.com/root-project/root/pull/16067#issuecomment-2239387042,1,['depend'],['depend']
Integrability,"I'd be also in favour of merging this version now and later adapt it to the LLVM upgrade. Once it's in master we'll be able to use it also from CVMFS (depending on where we test, e.g. SWAN, this makes logistics easier).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10685#issuecomment-1148562254:151,depend,depending,151,https://root.cern,https://github.com/root-project/root/pull/10685#issuecomment-1148562254,1,['depend'],['depending']
Integrability,"I'd be very happy to walk you through and hear your ideas! I don't like that we have this dualism of GH workflow steps vs the python script running steps - I'd prefer that any invocation of a binary is from GH steps rather than Python `subprocess`. That's certainly one of the things I see as problematic. For the rest I'm all ears!. Maybe I'll do another presentation at the ROOT meeting where I introduce people to the interface, and then a PPP where I explain the implementation and pick up comments?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13488#issuecomment-1685987956:421,interface,interface,421,https://root.cern,https://github.com/root-project/root/pull/13488#issuecomment-1685987956,1,['interface'],['interface']
Integrability,"I'd like to hear Axel's opinion on the change, as it's user-facing and hard to remove once it's in. Qt is usually seen as a model for how to handle CMake integration (at least Qt5), and they don't have a generic target like this, you have to link against specific Qt components. Granted, ROOT is no Qt, things are a lot more integrated, but I think that if the dependencies for each component come in automatically, there will be less of a need for a target with everything in it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-387766583:154,integrat,integration,154,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-387766583,3,"['depend', 'integrat']","['dependencies', 'integrated', 'integration']"
Integrability,"I'd like to wrap this up. Maybe I am naive but, as pointed out by Rene on [JIRA](https://sft.its.cern.ch/jira/browse/ROOT-2956), isn't this understood? We are trying to increment by one a single precision floating point number and at some point, the gap between 2 subsequent 32bit fp numbers is larger than 1...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-1861799490:12,wrap,wrap,12,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-1861799490,1,['wrap'],['wrap']
Integrability,"I'd prefer keeping this in `Internal` for the time being. We can always make it more public (e.g., move to `Detail`) but it's hard to go the other way round. The outside users, currently, is us. And we implicitly accept that this interface can break anytime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16786#issuecomment-2446454862:230,interface,interface,230,https://root.cern,https://github.com/root-project/root/pull/16786#issuecomment-2446454862,1,['interface'],['interface']
Integrability,I'd rather rename the existing `build/` dir. IIUC it's not part of ROOT's public interface?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8009#issuecomment-828605443:81,interface,interface,81,https://root.cern,https://github.com/root-project/root/pull/8009#issuecomment-828605443,1,['interface'],['interface']
Integrability,I'll close it for now because it depends on https://github.com/root-project/root/pull/7616.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7344#issuecomment-811340365:33,depend,depends,33,https://root.cern,https://github.com/root-project/root/pull/7344#issuecomment-811340365,1,['depend'],['depends']
Integrability,I'll fix the compilation and provide a test for this interface.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11271#issuecomment-1232103123:53,interface,interface,53,https://root.cern,https://github.com/root-project/root/issues/11271#issuecomment-1232103123,1,['interface'],['interface']
Integrability,"I'll send the tests results which have been requested soon, and likely arrange things so that the TBB dependency here is optional. (Probably anyone who cares about threading efficiency is anyways building with implicit multithreading enabled.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-744062720:102,depend,dependency,102,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-744062720,1,['depend'],['dependency']
Integrability,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9271#issuecomment-967115318:527,depend,depend,527,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-967115318,2,['depend'],['depend']
Integrability,"I'm aware of this. This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. I.e. thanks for the the report, problem acknowledged!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432#issuecomment-708253715:55,depend,dependencies,55,https://root.cern,https://github.com/root-project/root/issues/6432#issuecomment-708253715,1,['depend'],['dependencies']
Integrability,"I'm closing this PR, as most of the interface changes that were part of it were landed in https://github.com/root-project/root/pull/13208. For the optimized allocation / deallocation, I think we should be taking a look to `tbb_allocator<T>` instead, which uses TBB's scalable allocator if available or otherwise reverts to `malloc` (see https://oneapi-src.github.io/oneTBB/main/tbb_userguide/Which_Dynamic_Libraries_to_Use.html). That should be a different PR though! I'll leave it into your capable hands, @jblomer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12279#issuecomment-1700944645:36,interface,interface,36,https://root.cern,https://github.com/root-project/root/pull/12279#issuecomment-1700944645,1,['interface'],['interface']
Integrability,"I'm confused, `RSealedPageHelper` already makes it `public`, just via a wrapper function, no? Sure, it's in the `Internal` namespace, but if we want it `public` I don't really see the difference to `Detail::RPageSource`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14403#issuecomment-1912189173:72,wrap,wrapper,72,https://root.cern,https://github.com/root-project/root/pull/14403#issuecomment-1912189173,1,['wrap'],['wrapper']
Integrability,"I'm going to close this draft, since it includes some merge routine sketches we shouldn't merge yet, but the discussions may be useful for future reference. There are a couple PRs that spun off from this one (#5805, #5831) related to `RField` names. The new PR implementing field descriptor iterators (and only those) is #5848.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5768#issuecomment-642325217:60,rout,routine,60,https://root.cern,https://github.com/root-project/root/pull/5768#issuecomment-642325217,1,['rout'],['routine']
Integrability,"I'm making another attempt, just not compiling the fortran wrapper because we don't need it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15508#issuecomment-2112336272:59,wrap,wrapper,59,https://root.cern,https://github.com/root-project/root/pull/15508#issuecomment-2112336272,1,['wrap'],['wrapper']
Integrability,"I'm marking this as critical because I don't know the implications of not specifying module dependencies to `rootcling`. It seems to break some cases for me (even though I don't understand what the length of the build directory name has to do with it...), even though all CI setups seem to work (by chance?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12561#issuecomment-1486553935:92,depend,dependencies,92,https://root.cern,https://github.com/root-project/root/pull/12561#issuecomment-1486553935,1,['depend'],['dependencies']
Integrability,"I'm not 100% sure about this, but #7767 does not seem to be ABI compatible with the current head of `v6-24-00-patches`. Or is it?. Testing an ABI compatible change, while a bit cumbersome, would be doable. But testing a change that's not ABI compatible would require rebuilding pretty much all our code. Including all the parts of LCG that depend on ROOT. That we are just not set up to be able to do. :frowning:. But Scott may have a different view...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657#issuecomment-811286109:340,depend,depend,340,https://root.cern,https://github.com/root-project/root/issues/7657#issuecomment-811286109,1,['depend'],['depend']
Integrability,"I'm not sure if this is the one (stressInterpreter - ctest) @vgvassilev @dpiparo :. Current Master:; ```bash; dvalapar@emmanouil:~/work/root/builddir (master)$ ctest -R tectest -R test-stressinterpreter* --verbose; UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl; Add coverage exclude regular expressions.; UpdateCTestConfiguration from :/home/dvalapar/work/root/builddir/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/builddir/DartConfiguration.tcl; Test project /home/dvalapar/work/root/builddir; Constructing a list of tests; Ignore test: test-stressproof; Ignore test: roottest-cling-parsing-semicolon; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 338; Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/builddir/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/builddir/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/builddir"" ""-P"" ""/home/dvalapar/work/root/builddir/RootTestDriver.cmake""; 338: Environment variables: ; 338: ROOT_HIST=0; 338: Test timeout computed to be: 1500; 338: ****************************************************************************; 338: * Starting stress INTERPRETER *; 338: ****************************************************************************; 338: FuncCall ................................................................ OK; 338: STLDict ................................................................. OK; 338: Reflection .............................................................. OK; 338: NestedStatements ........................................................ OK; 338: ********************************************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1915174574:866,depend,dependency,866,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1915174574,2,['depend'],['dependency']
Integrability,"I'm not sure why the CI is unable to perform the rebase for `ROOT-ubuntu16/nortcxxmod`,. ```; CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1083 (message):; Rebase of matthewfeickert-backport/xrootd-5.4.3 branch on top of; v6-26-00-patches failed!; ```. but everything else seems to be working.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10755#issuecomment-1155522978:193,message,message,193,https://root.cern,https://github.com/root-project/root/pull/10755#issuecomment-1155522978,1,['message'],['message']
Integrability,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1339364132:389,message,message,389,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132,2,['message'],['message']
Integrability,"I'm sorry have continued this discussion for **so long**, but this is the final interface that you can use!!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2698#issuecomment-424875381:80,interface,interface,80,https://root.cern,https://github.com/root-project/root/pull/2698#issuecomment-424875381,1,['interface'],['interface']
Integrability,"I'm sorry to barge in on this PR and if this concern has already been raised, but in a lot of places `R__ASSERT` provides a final guard against UB where the cost of a single if branch will always be negligible, i.e. in compression routines:; https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RNTupleZip.hxx#L98-L100. What about a `R__DEBUG_ASSERT` macro with this behaviour?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8587#issuecomment-872335491:231,rout,routines,231,https://root.cern,https://github.com/root-project/root/pull/8587#issuecomment-872335491,1,['rout'],['routines']
Integrability,"I'm surprised it works with the `extern template` after it has been used :sweat_smile: maybe move the `extern template class RSimpleField<bool>` line before `class RField<bool> final : public RSimpleField<bool>`, just to be sure it stays that way. For the commit message, can you please use my `jonas.hahnfeld@cern.ch` email address? Thanks for adding me :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16284#issuecomment-2304273663:263,message,message,263,https://root.cern,https://github.com/root-project/root/pull/16284#issuecomment-2304273663,1,['message'],['message']
Integrability,"I'm totally +1 for using target-based CMake, and I believe I have fixed the issue of ROOT picking up its own headers here:; https://github.com/root-project/root/pull/8709 (needs rebasing). This fixed it at least for many builtins. There still might be more builtins that have the same problem, but let's go one step at a time. I solved the VDT-related part a bit differently. If I rebased, the diff would approximately read (done manually, sorry for possible indentation errors):; ```diff; DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT extra-headers); set(vdt ON CACHE BOOL ""Enabled because builtin_vdt enabled (${vdt_description})"" FORCE); set_property(GLOBAL APPEND PROPERTY ROOT_BUILTIN_TARGETS VDT); - add_library(VDT::VDT STATIC IMPORTED GLOBAL); - set_target_properties(VDT::VDT; - PROPERTIES; - IMPORTED_LOCATION ""${VDT_LIBRARIES}""; - INTERFACE_INCLUDE_DIRECTORIES ""${VDT_INCLUDE_DIRS}""; + add_library(VDT IMPORTED SHARED); + add_dependencies(VDT BUILTIN_VDT); + set_target_properties(VDT PROPERTIES IMPORTED_LOCATION ""${VDT_LIBRARIES}""); + target_include_directories(VDT INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIR}> $<INSTALL_INTERFACE:include/>); ); endif(); endif(); ```; Whether the target is declared global, static or shared, I'm not sure if it makes a big difference. I'm happy to call it `VDT::VDT`, though. I think the important part was to switch the include directories via generator expressions, and to use **SYSTEM** includes instead of includes in `FindVDT`. #11844 is missing the usage of the `VDT::VDT` target in RooFit and in tmva, but that would come into effect after a rebase of #8709. I guess therefore that we could proceed with merging #11844 if it's green, and then I rebase #8709, so I have to do the rebase work only once. Does that sound reasonable for @amadio, @krasznaa, @bellenot ?. ### Edit ; And to be clear, for `SearchInstalledSoftware` I would leave everything as proposed in Attila's commit but the change to `target_include_directories` with the two ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797#issuecomment-1339660363:1083,INTERFACE,INTERFACE,1083,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339660363,1,['INTERFACE'],['INTERFACE']
Integrability,"I'm with Vassil here: Things are completely broken right now, there is really not much you can describe being fixed here other than *what* is changed, which is very obvious in this case from the diff and should never be in the commit message anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12292#issuecomment-1461784959:234,message,message,234,https://root.cern,https://github.com/root-project/root/pull/12292#issuecomment-1461784959,1,['message'],['message']
Integrability,"I'm working inside CentOS7 container that does not have any OpenSSL installed this prevents linking ""random"" OpenSSL. I did full rebuild - all dependencies including compiler, OpenSSL (downloaded and built tag openssl-3.1.0 from https://github.com/openssl/openssl.git) and ROOT 6.28.02 with aforementioned ""fix"". ROOT did compile and proper OpenSSL library is linked.; ```; > ldd libRHTTP.so; ...; libssl.so.3 => /sw/slc7_x86-64/AliEn-Runtime/v2.19-le-local2/lib/libssl.so.3 (0x00007f0b72d85000); ...; > openssl version; OpenSSL 3.1.0 14 Mar 2023 (Library: OpenSSL 3.1.0 14 Mar 2023); ```; What is interesting, the `libssl.so.3` file with name `libssl.so.3.1` has not been created during OpenSSL build and in [OpenSSL Configure file](https://github.com/openssl/openssl/blob/openssl-3.1.0/Configure) in section apitable there is no mention of new 3.1.0 API. Either the authors have forgotten to add it there or they have decided not to increase API version. In file [VERSION.dat](https://github.com/openssl/openssl/blob/openssl-3.1.0/VERSION.dat) there is proper version 3.1.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12766#issuecomment-1536577420:143,depend,dependencies,143,https://root.cern,https://github.com/root-project/root/issues/12766#issuecomment-1536577420,1,['depend'],['dependencies']
Integrability,"I'm working on a fix. The bug affects the cases when an element is added to a mixture having already that element (defined via the interface taking an element, and not A/Z).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11272#issuecomment-1231788532:131,interface,interface,131,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1231788532,1,['interface'],['interface']
Integrability,"I've added a commit which acquires the `ROOT::gCoreMutex` in the C++ wrapper code. However, the runtime of following code goes up by a factor of 10 :/ But no segfaults (which you get without the lock!) ;). ```python; import ROOT; ROOT.ROOT.EnableImplicitMT(). @ROOT.DeclareCppCallable([""float""], ""float""); def f(x):; return 2.0 * x; print(f.__cpp_wrapper__). df = ROOT.ROOT.RDataFrame(10000000).Define(""x"", ""rdfentry_"").Define(""y"", ""PyROOT::f(x)""); print(df.Mean(""y"").GetValue()); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488#issuecomment-468659798:69,wrap,wrapper,69,https://root.cern,https://github.com/root-project/root/pull/3488#issuecomment-468659798,1,['wrap'],['wrapper']
Integrability,"I've been able reproduce this on my desktop (CentOS7, gcc 8.3) when building ROOT from source. The parameter that makes it fail is `-DCMAKE_CXX_STANDARD=17` (C++ 14 works fine). The reason is: when passing a Python callable as a parameter of a function (e.g. the `TF1` constructor in your example) cppyy automatically generates a C++ wrapper for it. As part of the wrapper generation, cppyy jits Python headers, some of which still use (in Python2) the `register` keyword, which causes an error in C++ 17. For example, when running your reproducer with dev3 these errors appear first:. ```; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3python2/Thu/ROOT/HEAD/x86_64-centos7-gcc8-opt/include/CPyCppyy/API.h:30:; In file included from /cvmfs/sft.cern.ch/lcg/releases/Python/2.7.16-3adfa/x86_64-centos7-gcc8-opt/include/python2.7/Python.h:88:; /cvmfs/sft.cern.ch/lcg/releases/Python/2.7.16-3adfa/x86_64-centos7-gcc8-opt/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]; register PyObject *obj, /* Object */; ^~~~~~~~~; ```. this is what ultimately causes the `TF1` constructor error, since the C++ wrapper for the Python callable can't be generated. The errors above start appearing with 6.24 as a result of the LLVM upgrade. But it's legit that they appear, the Python2 headers are just old and not updated anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152#issuecomment-849596617:334,wrap,wrapper,334,https://root.cern,https://github.com/root-project/root/issues/8152#issuecomment-849596617,3,['wrap'],['wrapper']
Integrability,"I've been trying to reproduce the behaviour in an interactive pbuilder root, with the previous dependencies, but running `cmake` with minimal options, and `make -j 1`.; Embarrassingly, I seem to get over the ""71% (`rootcling`) point"" - although the percentages may be misleading (the following is copied from `script` output, so it contains ANSI sequences):; ```; [ 50%] .[32m.[1mLinking CXX executable ../bin/rootcling.[0m; cd /build/root-cds-6.26.04.sg/.build/main && /usr/bin/cmake -E cmake_link_script CMakeFiles/rootcling.dir/link.txt --verbose=1 ; /usr/bin/c++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic CMakeFiles/rootcling.dir/src/rootcling.cxx.o -o ../bin/rootcling -Wl,-rpath,/build/root-cds-6.26.04.sg/.build/lib: ../lib/libRIO.so ../lib/libCling.so ../lib/libThread.so ../lib/libCore.so -Wl,--unresolved-symbols=ignore-in-object-files; cd /build/root-cds-6.26.04.sg/.build/bin && ln -f rootcling rootcint; cd /build/root-cds-6.26.04.sg/.build/bin && ln -f rootcling genreflex; make[2]: Leaving directory '/build/root-cds-6.26.04.sg/.build'; [ 50%] Built target rootcling; ```; and end up with a completely different error:; ```; [ 85%] Generating G__MathMore.cxx, ../../lib/MathMore.pcm; cd /build/root-cds-6.26.04.sg/.build/math/mathmore && /usr/bin/cmake -E env LD_LIBRARY_PATH=/build/root-cds-6.26.04.sg/.build/lib: ROOTIGNOREPREFIX=1 /build/root-cds-6.26.04.sg/.build/bin/rootcling -rootbuild -v2 -f G__MathMore.cxx -cxxmodule -s /build/root-cds-6.26.04.sg/.build/lib/libMathMore.so -m MathCore.pcm -excludePath /build/root-cds-6.26.04.sg -excludePath /build/root-cds-6.26.04.sg/.build/ginclude -excludePath /build/root-cds-6.26.04.sg/.build/externals -excludePath /build/root-cds-6.26.04.sg/.build/builtins -compilerI/usr/include/c++/11 -compilerI/usr/include/x86_64-linux-gnu/c++/11 -compilerI/usr/include/c++/11/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/11/include -compi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1161349757:95,depend,dependencies,95,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1161349757,1,['depend'],['dependencies']
Integrability,"I've just got the same behaviour.; Fortunately, you pointed to the line. > -- PyROOT will be built for versions 3.10.10 (Main) and 2.7.18. which is important for me, I absolutely must have Python 2 support, because that is our ROOT version on the cluster. But this message is very distracting. Why was this issue closed? Is it ROOT problem or of another program, how do we know that? Was there a bug filed to another program?. I don't know what `Tumbleweed` is, I use Arch Linux and installed Python 2 from AUR and trying to install ROOT from the latest source. I think if ROOT uses this build method, it would be great if it could be somehow fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8097#issuecomment-1529014824:265,message,message,265,https://root.cern,https://github.com/root-project/root/issues/8097#issuecomment-1529014824,1,['message'],['message']
Integrability,"IIUC a NullStmt would mean `if (true) {1;;}`. I'd prefer to keep value printing simple and instead invest where it's relevant: devtoolset, debug symbols, llvm upgrade (to llvm 11!), etc. This is a trade-off we should consciously do, and given that this is the first time I hear a request for value printing within nested blocks I'm not yet convinced that it's worth the effort (and yes, that's an additional counter argument). And I'm not just talking dev time but also long-term maintenance: more code, more clang interfaces used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713611104:515,interface,interfaces,515,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713611104,2,['interface'],['interfaces']
Integrability,"IIUC, ACLiC is kind of interpreting code before generating so files to get the list of libraries that need to be loaded beforehand by passing all rootmap files to rootcling, right? If so, maybe we can do the same with modules by interpreting code beforehand, get a callback from cling and make a list of dependency libraries. We can keep this list and load them just before loading hsimple_C.so?. Anyway, these discussions are addressed (or not addressed) in another PR. I want to revert ""not generating rootmapfiles"" patch for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2187#issuecomment-396919765:304,depend,dependency,304,https://root.cern,https://github.com/root-project/root/pull/2187#issuecomment-396919765,1,['depend'],['dependency']
Integrability,"ILD/root-6.24.00/io/io/src/TKey.cxx:217; #13 0x00007fff84a8ff84 in TFile::Init (this=0x1536420a0, create=<optimized out>) at /builddir/build/BUILD/root-6.24.00/io/io/src/TFile.cxx:613; #14 0x00007fff84a92070 in TFile::TFile (this=0x1536420a0, fname1=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>) at /builddir/build/BUILD/root-6.24.00/io/io/src/TFile.cxx:489; #15 0x00007fff745b06a8 in ?? (); #16 0x00007fff745b0050 in ?? (); #17 0x00007fff7fb4c810 in cling::IncrementalExecutor::executeWrapper (this=0x153618cf0, function=..., returnValue=0x7ffff78b83b0) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376; #18 0x00007fff7fa85a50 in cling::Interpreter::RunFunction (this=0x1536176e0, FD=0x15490a240, res=0x7ffff78b83b0) at /usr/include/c++/10/bits/basic_string.h:907; #19 0x00007fff7fa8f2b4 in cling::Interpreter::EvaluateInternal (this=0x1536176e0, input=..., CO=..., V=0x7ffff78b83b0, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391; #20 0x00007fff7fa8fd74 in cling::Interpreter::echo (this=0x1536176e0, input=""hsimple() /* '.x' tries to invoke a function with the same name as the macro */"", V=0x7ffff78b83b0) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1043; #21 0x00007fff7fbe224c in cling::MetaSema::actOnxCommand (this=0x153fa8a00, file=..., args=..., result=0x7ffff78b83b0) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:145; #22 0x00007fff7fbf2c10 in cling::MetaParser::isXCommand (this=0x153f66eb0, actionResult=; 0x7ffff78b81b0: cling::MetaSema::AR_Success, resultValue=0x7ffff78b83b0) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:319; #23 0x00007fff7fbf50b0 in cling::MetaParser::isCommand (this=0x153f66eb0, actionResult=; 0x7ffff78b81b0: cling::MetaSema::AR_Success, resultValue=0x7ffff78b83b0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-844784432:8351,wrap,wrapPoint,8351,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-844784432,1,['wrap'],['wrapPoint']
Integrability,"IMHO we should fix the invocation of printValue in RDF to use the official cling interface, instead of making cling slower to start up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2591#issuecomment-419002708:81,interface,interface,81,https://root.cern,https://github.com/root-project/root/pull/2591#issuecomment-419002708,1,['interface'],['interface']
Integrability,"IMO it's okay to remove `pyroot_experimental` without deprecation for 6.22: it was experimental until 6.22. It would certainly help users to check whether `pyroot_experimental` is set, and if so, issue an error message. A simple `if(pyroot_experimental) message(FATAL_ERROR ""pyroot_experimental is now called pyroot! Please reconfigure with -Dpyroot=On"")` will do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5772#issuecomment-638212832:211,message,message,211,https://root.cern,https://github.com/root-project/root/pull/5772#issuecomment-638212832,4,['message'],['message']
Integrability,"INS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]!; You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:5132,interface,interface,5132,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,1,['interface'],['interface']
Integrability,INSTALL_DOCDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/share/doc/ROOT -DCMAKE_INSTALL_INFODIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/share/info -DCMAKE_INSTALL_MANDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/share/man -DCMAKE_INSTALL_OLDINCLUDEDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/include -DCMAKE_INSTALL_INCLUDEDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/include -DCMAKE_INSTALL_SBINDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/sbin -DCMAKE_INSTALL_BINDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/bin -DCMAKE_INSTALL_NAME_DIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/lib -DCMAKE_POLICY_DEFAULT_CMP0025=NEW -DCMAKE_OSX_SYSROOT= -DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_STRIP=/nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/strip -DCMAKE_RANLIB=/nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/ranlib -DCMAKE_AR=/nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/ar -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_INSTALL_PREFIX=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00 -Drpath=ON -Dbuiltin_llvm=OFF -Dbuiltin_freetype=OFF -Dbuiltin_gtest=OFF -Dbuiltin_nlohmannjson=OFF -Dbuiltin_openui5=OFF -Dalien=OFF -Dbonjour=OFF -Dcastor=OFF -Dchirp=OFF -Dclad=OFF -Ddavix=ON -Ddcache=OFF -Dfail-on-missing=ON -Dfftw3=OFF -Dfitsio=OFF -Dfortran=OFF -Dgnuinstall=ON -Dimt=ON -Dgfal=OFF -Dgviz=OFF -Dhdfs=OFF -Dhttp=ON -Dkrb5=OFF -Dldap=OFF -Dmonalisa=OFF -Dmysql=OFF -Dodbc=OFF -Dopengl=ON -Doracle=OFF -Dpgsql=OFF -Dpythia6=OFF -Dpythia8=OFF -Drfio=OFF -Droot7=OFF -Dsqlite=OFF -Dssl=ON -Dtmva=ON -Dvdt=OFF -Dwebgui=OFF -Dxml=ON -Dxrootd=ON -DC_INCLUDE_DIRS=/nix/store/nasgvbblxi25r6y1s82il4m0m4ghib68-glibc-2.35-224-dev/include ; -- The C compiler identification is GNU 11.3.0; -- The CXX compiler identification is GNU 11.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - don,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:3637,wrap,wrapper-,3637,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['wrap'],['wrapper-']
Integrability,"Ideally I'd like to follow the GCC diag format to some extent:; ```; <source>:1:1: error: DIAG; ```; and that suggests we should have the source line first. OTOH - the compiler is talking to the user providing the source, i.e. the user's input is that source, and that's what the compiler is referring to. For `RLogger` the situation is different, and the source line is merely the context provided to the developer. So yes, I now agree 100% and never thought of this major difference. Thanks a lot for pointing that out! I suggest:. ```; Info in ROOT.RDF, void ROOT::Detail::RDF::RLoopManager::Run() [tree/dataframe/src/RLoopManager.cxx:658]: Starting event loop number 0.; ```; Is that any better? I'd prefer to put the message last, because the message might be multi-line, and I don't like either of these options:. 1) file in new line:; ```; Info in ROOT.RDF, void ROOT::Detail::RDF::RLoopManager::Run(): Starting event loop number 0.; [tree/dataframe/src/RLoopManager.cxx:658]; Info in ROOT.RDF, void ROOT::Detail::RDF::RLoopManager::Run(): And some more info.; [tree/dataframe/src/RLoopManager.cxx:660]; ```; It's hard to tell where that file belong to - is that *after* the `Info in...` line? Or before?. 2) file attached to last line:; ```; Info in ROOT.RDF, void ROOT::Detail::RDF::RLoopManager::Run(): Starting event loop number 0.; Some value: 17; Other value: 42 [tree/dataframe/src/RLoopManager.cxx:658]; ```; That gets rid of the ordering ambiguity, but makes it kinda weird, because it's messing with the output - is the other value `""42 [tree/dataframe/src/RLoopManager.cxx:658]""` or `42`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7008#issuecomment-756846075:722,message,message,722,https://root.cern,https://github.com/root-project/root/issues/7008#issuecomment-756846075,2,['message'],['message']
Integrability,"If I understood Axel correctly, RooFit is not allowed to depend on mathmore. So if there's a dependency, it's a blocker for the next release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5439#issuecomment-618463351:57,depend,depend,57,https://root.cern,https://github.com/root-project/root/pull/5439#issuecomment-618463351,2,['depend'],"['depend', 'dependency']"
Integrability,"If I'm not mistaken,; ```; v[{0, 0, 1, 1}]; ```; and; ```; RVec<int> s1 = {0, 0, 1, 1};; v[s1];; ```; do two different things (first is fancy indexing, second is selection). I find this very surprising. Also; ```; RVec<unsigned int> idx = {2,1,0,0};; v[idx];; ```; does selection instead of fancy indexing (i.e. `2` is converted to `true`). This is also very surprising. Have I misuderstood?. EDIT:; > Am I right that there's no other option to solve this in C++?. Depends what you mean by ""solve"" :smile: there are various options each with its tradeoffs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2621#issuecomment-421958106:465,Depend,Depends,465,https://root.cern,https://github.com/root-project/root/pull/2621#issuecomment-421958106,1,['Depend'],['Depends']
Integrability,If this is a case - we need to add same dependency in 6.20 branch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5203#issuecomment-603102808:40,depend,dependency,40,https://root.cern,https://github.com/root-project/root/pull/5203#issuecomment-603102808,1,['depend'],['dependency']
Integrability,"If we don't fix this, then maybe we just add a error that building from a directory that contains `*?+` isn't supported. Otherwise users just get really cryptic error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/923#issuecomment-326573127:167,message,messages,167,https://root.cern,https://github.com/root-project/root/pull/923#issuecomment-326573127,1,['message'],['messages']
Integrability,"If you follow the link in my previous post you can check out flamegraphs for master vs patched TTreeReader, and you can see a reduction of the time spent in `SetEntryBase` (from 4% to 2.5%) and `ProxyRead` changing name to `ProxyReadTemplate`. > We also know of a significant overhead for TTreeReaderArray. True, I will be away next week but afterwards I can profile one such usecase. > the flamegraph does not show a factor 2 between TTreeReader and TTree interfaces. You are right, if we trust these measurements to this point -- it's probably something worth checking",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-455185710:457,interface,interfaces,457,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-455185710,1,['interface'],['interfaces']
Integrability,"If you like to have a look into this, I would be happy to guide you. But feel free to tell me if you have to do other stuff, then I'll take over. The array interface is added in `ROOT.py:243`, however no need to change something there. Following the code path, you can look for `AddArrayInterface` in `bindings/pyroot/src/Pythonize.cxx`. Still no need to fix something there ;) Finally, you end up in `STLVectorArrayInterface` and `RVecArrayInterface` in as well in `Pythonize.cxx`. There, the C++ object (a `std::vector` in your case) is read out and the `__array_interface__` dict is added to the Python object, which carries all information needed by numpy to adopt the memory (see [here](https://docs.scipy.org/doc/numpy/reference/arrays.interface.html)). In short: You would need to cover the case of `vector.size() == 0` in `STLVectorArrayInterface` properly. Following code tells me, that the size field is already set properly, but it seems that numpy fails with the `""data"": (0, False)` set in the `__array_interface__`. ```python; >>> import ROOT; >>> x = ROOT.std.vector(""float"")(); >>> x.__array_interface__; {'shape': (0L,), 'version': 3, 'data': (0, False), 'typestr': '<f4'}; ```. So what is the correct thing to do there that `numpy.asarray` returns an empty numpy array?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3528#issuecomment-472348941:156,interface,interface,156,https://root.cern,https://github.com/root-project/root/pull/3528#issuecomment-472348941,4,['interface'],['interface']
Integrability,"If your framework is in Python and not in C++, you can also declare the class to the interpreter when you need it:; ```python; ROOT.gInterpreter.Declare("""""". class RooInt : public TNamed {; public:. RooInt() = default;; RooInt(Int_t value) : _value(value) {}; RooInt(const RooInt& other) : TNamed(other), _value(other._value) {}. // double cast operator; inline operator Int_t() const { return _value ; }; RooInt& operator=(Int_t value) { _value = value ; return *this ; }. protected:. Int_t _value = 0; ///< Payload; ClassDefOverride(RooInt,1) // Container class for Int_t; };. """"""); ```. You can change the interface as you like, as long as you don't change the data members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16380#issuecomment-2335111479:609,interface,interface,609,https://root.cern,https://github.com/root-project/root/issues/16380#issuecomment-2335111479,1,['interface'],['interface']
Integrability,"In CMSSW; - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB; - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call; - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14807#issuecomment-1965316725:743,synchroniz,synchronization,743,https://root.cern,https://github.com/root-project/root/pull/14807#issuecomment-1965316725,2,['synchroniz'],['synchronization']
Integrability,"In either the original test (via `TClingClassInfo`) or the latest example `TClass::GetClass(""B<NS::A<int>>"")`, the code triggers attempts to instantiate a template which fails (due to the type being only forward declared). The later error messages (after the full declaration is loaded) indicates that some of the traits template instance are NOT being re-instantiated based using the complete information (and instead the one based on the incomplete information are used). Technically, we don't know yet whether it is a problem with the transaction unloader or the the transaction decl capture (or possibly even on the failure detection). What we do know is that the desired behavior [in last example](https://github.com/root-project/root/issues/13815#issuecomment-1759250811) is that after the execution of `TClass::GetClass(""B<NS::A<int>>"")` (i.e at the end of line 2), `Cling` should NOT be holding an instantiation of the trait (not sure which)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815#issuecomment-1766925765:239,message,messages,239,https://root.cern,https://github.com/root-project/root/issues/13815#issuecomment-1766925765,1,['message'],['messages']
Integrability,"In my other computer, I get now a difference of 4 pixels using latest ROOT master. So it seems to me that this is not a small rounding error. - Interactive mode: 598x576 pixels; - Batch mode: 596x572 pixels. Could it be just an outdated calibration from many years ago? See this https://github.com/root-project/root/commit/c3de92f4d1ad4372febc81955a877345d4de3a9c. Check out this code below. It seems there is always the same offset on my current computer. Whenever I run in batch mode, I get 4 pixels difference wrt batch mode. My hypothesis is that this could solved if those numbers are adapted, potentially depending on Windows / Mac with an if. It could be even added as a roottest. ```cpp; #include <TCanvas.h>; #include <TROOT.h>; #include <iostream>; void test_pixels() {; for(Int_t w=500;w<=900;w++) {; for(Int_t h=500;h<=600;h++) {; TCanvas *c = new TCanvas(""c1"",""c1"",w,h);; Int_t diffw = w-c->GetWw();; Int_t diffh = h-c->GetWh();; if(!gROOT->IsBatch()) {; if (diffw !=2 || diffh !=24); std::cout << diffw << "" "" << diffh << "" "" << w << "" "" << h << std::endl;; }; else {; if (diffw !=4 || diffh !=28); std::cout << diffw << "" "" << diffh << "" "" << w << "" "" << h << std::endl;; }; delete c;; }; }; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11004#issuecomment-1471869803:611,depend,depending,611,https://root.cern,https://github.com/root-project/root/issues/11004#issuecomment-1471869803,1,['depend'],['depending']
Integrability,In principle I agree with Philippe: the cost of checking out root.git and building only the minuit2 subset is minimal. But we're not going to make a deal breaker out of this: as long as our (esp maintenance) cost of integrating your approach is minimal we should just merge it. Guilherme will guide you through the implementation issues should there be any left.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-370741281:216,integrat,integrating,216,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-370741281,2,['integrat'],['integrating']
Integrability,"In the light of discussions and our latest understanding, the PR title has been changed together with the commit message to more properly reflect the purpose of the changes, which is to make `TString::kNPOS` definition standard-compliant. The fact it may also help in the situation highlighted by the CMS issue is a byproduct of a fix which is anyway needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14261#issuecomment-1861030852:113,message,message,113,https://root.cern,https://github.com/root-project/root/pull/14261#issuecomment-1861030852,1,['message'],['message']
Integrability,"In the meantime I ran into another issue that concerns empty directories. In the files I'm trying to merge, it rarely happens that a directory/tree is empty because no events have been selected (for that specific selection). In such a case `TFileMerger` raises a seg fault (vanilla `hadd` From tags/v6-20-04@v6-20-04); ```; #6 0x00007faa3fd0e43e in TFileMerger::MergeRecursive(TDirectory*, TList*, int) () from /cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/libRIO.so; #7 0x00007faa3fd0d29c in TFileMerger::PartialMerge(int) () from /cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/libRIO.so; #8 0x0000000000405e9a in main (); ```; Trying my local version built with debug symbols and running gdb didn't yield further info. I was a bit puzzled to see this, since I could swear that I successfully merged files with empty directories in the past. And in fact, it works with root `6.18.00` from `/cvmfs/sft.cern.ch/lcg/views/LCG_96/x86_64-centos7-gcc8-opt` (without complaining - maybe there should be a message with default verbosity settings). ; I diff'ed `hadd.cxx` as well as the `TFileMerger` source and header files between master and v6-18-00-patches, but did not see anything that would lead to these seg-faults. Do you have an idea where this could come from?. Since this is only loosely related to the actual PR, it might not be the right place to discuss this. I can post it elsewhere if that would make sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5995#issuecomment-656582698:1048,message,message,1048,https://root.cern,https://github.com/root-project/root/pull/5995#issuecomment-656582698,1,['message'],['message']
Integrability,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9366#issuecomment-1006463581:102,message,message,102,https://root.cern,https://github.com/root-project/root/issues/9366#issuecomment-1006463581,1,['message'],['message']
Integrability,In this case - just merge it. Logically circular dependency is resolved,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3702#issuecomment-483708792:49,depend,dependency,49,https://root.cern,https://github.com/root-project/root/pull/3702#issuecomment-483708792,1,['depend'],['dependency']
Integrability,"In this context, the smart-ptr could stay just within the scope of this routine and pass the raw pointer down to the callees ... which is completely semantically correct since those routine do not take ownership of the buffers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2361#issuecomment-408908921:72,rout,routine,72,https://root.cern,https://github.com/root-project/root/pull/2361#issuecomment-408908921,2,['rout'],['routine']
Integrability,"Indeed testing these downstream packages will likely need Vc, and we cannot know where that is, so that's a case for `ROOT_INCLUDE_PATH`. The second part of this issue is about the error message. @vgvassilev do you agree that; ```; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found; ```; isn't equivalent to ""ROOT cannot find Vc/Vc.h; please provide the include path by adding it to `ROOT_INCLUDE_PATH`""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1031255059:187,message,message,187,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1031255059,1,['message'],['message']
Integrability,Indeed the figures are included in the Primer using [this script](https://github.com/root-project/web/blob/main/_includes/figure_jsroot) based on jsroot. It might be that jsroot interface has changed. Let me ask @linev. Note that all the figures in the Manual also disappeared: https://root.cern/manual/graphs/#drawing-a-graph that's normal are they are included the same way.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10346#issuecomment-1091136901:178,interface,interface,178,https://root.cern,https://github.com/root-project/root/issues/10346#issuecomment-1091136901,1,['interface'],['interface']
Integrability,"Indeed, as @eguiraud has mentioned, this behaviour is not present anymore in ROOT >= 6.22, where ROOT does not parse the command line arguments by default. This is documented here:. https://root.cern/manual/python/#user-interface. (see `IgnoreCommandLineOptions` option).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7161#issuecomment-776082640:220,interface,interface,220,https://root.cern,https://github.com/root-project/root/issues/7161#issuecomment-776082640,1,['interface'],['interface']
Integrability,"Indeed, but for that we would need to change the public interfaces of (at least) `TLatex` and `TMathText`.; So now my question is the following: do we simply fix the compilation warnings/errors on Windows, or do we want to make it working with all possible characters, requiring new interfaces with `char32_t`?. I'll let @couet comment on that (BTW, it doesn't work on Linux or Mac either).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13091#issuecomment-1614327543:56,interface,interfaces,56,https://root.cern,https://github.com/root-project/root/issues/13091#issuecomment-1614327543,4,['interface'],['interfaces']
Integrability,"Indeed, making the library static will make it trickier to handle this case. I will go another route in fixing the described issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4722#issuecomment-571559865:95,rout,route,95,https://root.cern,https://github.com/root-project/root/pull/4722#issuecomment-571559865,1,['rout'],['route']
Integrability,"Indeed, they were not virtual before 23d8612, but they were originally, see e.g. https://github.com/root-project/root/blob/73fd43959e45e0e9e1d2537b93615cb2a58b9c03/roofit/roofitcore/inc/RooDataHist.h#L161. They were changed in 2019 in the following commit: https://github.com/root-project/root/commit/155032e6b4de3e4a50434cfe0b9e9286bc048fa7. The commit message doesn't say why. At this point, the integration with RooFitExtensions may have already broken subtly. `RooExpandedDataHist::get_wgt` was still virtual (_edit: actually doesn't matter that it was virtual, I guess, it was just shadowing_), so from this point it would be shadowing `RooDataHist::get_wgt`: it would no longer be relegated to from inside `RooDataHist` as it would before 155032e, but would only be called from inside RooFitExtensions, leading to two different `get_wgt` calls. I'm not sure how much of a difference this has made in practice in the past three years, as I'm not a user of RooFitExtensions. Maybe @cburgard can say more (or find someone who knows).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11736#issuecomment-1319839498:354,message,message,354,https://root.cern,https://github.com/root-project/root/pull/11736#issuecomment-1319839498,2,"['integrat', 'message']","['integration', 'message']"
Integrability,"Indeed, this should return -1. Note that I am missing something to reproduce the problem. It my question it returns -1 which any error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12326#issuecomment-1431722533:135,message,message,135,https://root.cern,https://github.com/root-project/root/issues/12326#issuecomment-1431722533,1,['message'],['message']
Integrability,"Indeed, this solution only improves the error message to solve the problem of ; 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`); 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there.; As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14592#issuecomment-1929667487:46,message,message,46,https://root.cern,https://github.com/root-project/root/issues/14592#issuecomment-1929667487,1,['message'],['message']
Integrability,"Indeed, we cannot do that; that's I suppose what @jblomer tried to express with. > As long as we don't leak the interface to users. But until we have a usecase for such a queue that cannot live in `src/` I guess we can survive with tbb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8715#issuecomment-887282836:112,interface,interface,112,https://root.cern,https://github.com/root-project/root/pull/8715#issuecomment-887282836,1,['interface'],['interface']
Integrability,Indeed. The message (that provokes the failure) appears because NDEBUG is now undefined in the PR build (as originally intended and fix today by @Axel-Naumann),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5133#issuecomment-598914326:12,message,message,12,https://root.cern,https://github.com/root-project/root/pull/5133#issuecomment-598914326,1,['message'],['message']
Integrability,"Independently from testing by ALICE, I believe this change is correct and I went ahead and synchronized it into a tag in our fork of the LLVM monorepo. @vgvassilev can you review please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15004#issuecomment-2031466432:91,synchroniz,synchronized,91,https://root.cern,https://github.com/root-project/root/pull/15004#issuecomment-2031466432,1,['synchroniz'],['synchronized']
Integrability,"Info about my system:. [shell] uname -a; Linux <nodename> 4.13.4-1-default #1 SMP PREEMPT Wed Sep 27 14:20:45 UTC 2017 (4dec972) x86_64 x86_64 x86_64 GNU/Linux. libX11.so.6.3.0. [shell] g++ -v; ; Using built-in specs. ; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/usr/lib64/gcc/x86_64-suse-linux/7/lto-wrapper; OFFLOAD_TARGET_NAMES=hsa:nvptx-none; Target: x86_64-suse-linux; Configured with: ../configure --prefix=/usr --infodir=/usr/share/info --mandir=/usr/share/man --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-languages=c,c++,objc,fortran,obj-c++,ada,go --enable-offload-targets=hsa,nvptx-none=/usr/nvptx-none, --without-cuda-driver --enable-checking=release --disable-werror --with-gxx-include-dir=/usr/include/c++/7 --enable-ssp --disable-libssp --disable-libvtv --disable-libcc1 --enable-plugin --with-bugurl=http://bugs.opensuse.org/ --with-pkgversion='SUSE Linux' --with-slibdir=/lib64 --with-system-zlib --enable-__cxa_atexit --enable-libstdcxx-allocator=new --disable-libstdcxx-pch --enable-version-specific-runtime-libs --with-gcc-major-version-only --enable-linker-build-id --enable-linux-futex --enable-gnu-indirect-function --program-suffix=-7 --without-system-libunwind --enable-multilib --with-arch-32=x86-64 --with-tune=generic --build=x86_64-suse-linux --host=x86_64-suse-linux; Thread model: posix; gcc version 7.2.1 20170927 [gcc-7-branch revision 253227] (SUSE Linux)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1162#issuecomment-335749330:296,wrap,wrapper,296,https://root.cern,https://github.com/root-project/root/pull/1162#issuecomment-335749330,1,['wrap'],['wrapper']
Integrability,"Interesting that it never worked in the reproducer. It came in on our side at some point certainly. We don't have the logs of the earlier runs unfortunately. Philippe, do you think TFileMerger should fail fully instead of ""just"" printing the message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14963#issuecomment-2018389664:242,message,message,242,https://root.cern,https://github.com/root-project/root/issues/14963#issuecomment-2018389664,1,['message'],['message']
Integrability,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```; Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - numba 0.47.0 is installed but numba>=0.48.0 is required; - The 'notebook>=4.4.1' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-619165872:228,depend,dependencies,228,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-619165872,1,['depend'],['dependencies']
Integrability,Is it good practice to rely on shared-object-level transitive linking in any case?. I think users should either use proper cmake targets that bring in their dependencies (namely `ROOT::ROOTDataFrame` in this case) or list all dependencies explicitly...?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7569#issuecomment-801291653:157,depend,dependencies,157,https://root.cern,https://github.com/root-project/root/pull/7569#issuecomment-801291653,2,['depend'],['dependencies']
Integrability,Is it new problem with 6.22 ? This code (TGLFormat) is not recent and has not been changed recently.; The error messages you get would suggest X11 is not properly installed (or not found by the ROOT; install procedure) on your machine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6368#issuecomment-694088881:112,message,messages,112,https://root.cern,https://github.com/root-project/root/issues/6368#issuecomment-694088881,1,['message'],['messages']
Integrability,"Is it possible to determine the exact version of xrootd client that is being used? Unfortunately, the crash happens before the client logs in so I cannot see it from logs. The server reported protocol version `500` in the xrootd handshake.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746391241:192,protocol,protocol,192,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746391241,1,['protocol'],['protocol']
Integrability,Is support of old rootmaps needed? It is not sufficient to have name-> library mapping in ROOT6 as forward declarations need to be injected in the interpreter in order to trigger the hook we exploit to autoload(parse).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1581#issuecomment-362593369:131,inject,injected,131,https://root.cern,https://github.com/root-project/root/pull/1581#issuecomment-362593369,1,['inject'],['injected']
Integrability,Is the error message coming from the worker? I.e. the RDataFrame object built by the map function does not pick up the friend?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7584#issuecomment-801857538:13,message,message,13,https://root.cern,https://github.com/root-project/root/issues/7584#issuecomment-801857538,1,['message'],['message']
Integrability,"Is there a way for me to look at the failures?. Get Outlook for iOS<https://aka.ms/o0ukef>; ________________________________; From: phsft-bot <notifications@github.com>; Sent: Friday, February 2, 2018 5:55:48 PM; To: root-project/root; Cc: Zhe Zhang; Mention; Subject: Re: [root-project/root] Use TTaskGroup interface to unzip baskets in parallel. (#1010). Build failed on centos7/gcc49.; See console output<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/console>. Failing tests:. * projectroot.roottest.cling.typedef.roottest_cling_typedef_assertFuncArray<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertFuncArray/>; * projectroot.roottest.python.basic.roottest_python_basic_overload<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/>; * projectroot.roottest.python.cling.roottest_python_cling_api<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/>; * projectroot.roottest.python.basic.roottest_python_basic_basic<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/>; * projectroot.roottest.python.basic.roottest_python_basic_operator<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/testReport/projectroot.roottest.python/basic/roottest_python_basic_operator/>; * projectroot.roottest.cling.template.separateDict.roottest_cling_template_separateDict_make<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/testReport/projectroot.roottest.cling.template/separateDict/roottest_cling_template_separateDict_make/>; * projectroot.roottest.python.basic.roottest_python_basic_datatype<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/testReport/projectroot.roottest.python/basic/roottest_pyth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-362756051:308,interface,interface,308,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-362756051,1,['interface'],['interface']
Integrability,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14963#issuecomment-2018350309:123,interface,interface,123,https://root.cern,https://github.com/root-project/root/issues/14963#issuecomment-2018350309,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"It depends if warning appears with clang or not. . With original code clang also got same pragma and disables warning, after your PR ""false positive"" warnings can be reported by clang.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4869#issuecomment-578746202:3,depend,depends,3,https://root.cern,https://github.com/root-project/root/pull/4869#issuecomment-578746202,1,['depend'],['depends']
Integrability,"It depends on the log level of root and i think other factors (i don't see it always). however, i've put it also in the code to make it very explicit that there's a file at the end :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6102#issuecomment-666978185:3,depend,depends,3,https://root.cern,https://github.com/root-project/root/pull/6102#issuecomment-666978185,1,['depend'],['depends']
Integrability,It does not appear to be a SWAN specific issue. The message-swallowing also happens in locally-run Jupyter notebooks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12296#issuecomment-1438629862:52,message,message-swallowing,52,https://root.cern,https://github.com/root-project/root/issues/12296#issuecomment-1438629862,1,['message'],['message-swallowing']
Integrability,"It fails at least since ROOT 6.18; It works well in ROOT 5.34; I did some debugging and it seems the problem is in metacling, the ""params"" argument is lost deep inside the TClingCallFunc routines. It is correct here:. 10 TCling::Execute TCling.cxx 5281 0x7efc7f542288 ; params = """"time"","""","""",(Long64_t)kMaxEntries,(Long64_t)0"". ![image](https://github.com/root-project/root/assets/10653970/58028b65-7f08-442b-9f23-8cc1cf1cf0ab). with gDebug=6:. ```; gDebug = 6;; root [3] TKey Reading 2703 bytes at address 3905912; StreamerInfoAction, class:TTree, name=TNamed, fType[0]=67, TStreamerBase, bufpos=58, arr=0x555a6d864fe0, offset=0 (); StreamerInfoAction, class:TNamed, name=TObject, fType[0]=66, TStreamerBase, bufpos=64, arr=0x555a6d864fe0, offset=0 (); StreamerInfoAction, class:TNamed, name=fName, fType[1]=65, TStreamerString, bufpos=74, arr=0x555a6d864fe0, offset=16 (); StreamerInfoAction, class:TNamed, name=fTitle, fType[2]=65, TStreamerString, bufpos=79, arr=0x555a6d864fe0, offset=40 (); Module 'RIO' already loaded for 'TBufferFile'; Module 'RIO' already loaded for 'TBufferFile'; Info in <TBufferFile::ReadClassBuffer>: For class: TNamed has read 32 bytes; ReadBuffer, class:TTree, name=TAttLine, fType[0]=0, TStreamerBase, bufpos=94, arr=0x555a6d864fe0, offset=64; ReadBuffer, class:TAttLine, name=fLineColor, fType[0]=22, TStreamerBasicType, bufpos=100, arr=0x555a6d865020, offset=8; Info in <TBufferFile::ReadClassBuffer>: For class: TAttLine has read 8 bytes; ReadBuffer, class:TTree, name=TAttFill, fType[0]=0, TStreamerBase, bufpos=106, arr=0x555a6d864fe0, offset=80; ReadBuffer, class:TAttFill, name=fFillColor, fType[0]=22, TStreamerBasicType, bufpos=112, arr=0x555a6d865030, offset=8; Info in <TBufferFile::ReadClassBuffer>: For class: TAttFill has read 6 bytes; ReadBuffer, class:TTree, name=TAttMarker, fType[0]=0, TStreamerBase, bufpos=116, arr=0x555a6d864fe0, offset=96; ReadBuffer, class:TAttMarker, name=fMarkerColor, fType[0]=22, TStreamerBasicType, bufpos=122, arr=0x555a6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15963#issuecomment-2200648481:187,rout,routines,187,https://root.cern,https://github.com/root-project/root/issues/15963#issuecomment-2200648481,1,['rout'],['routines']
Integrability,It has to be looked case by case. Another option is to make Minuit2 not depend on the headers from Math at all. I will take a look just in case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369583293:72,depend,depend,72,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369583293,1,['depend'],['depend']
Integrability,"It is indeed a (unintended) pattern in the remote protocols (class derived from TFile) that the option are not properly passed/stored. For example:; ```; TDavixFile::TDavixFile(const char *url, Option_t *opt, const char *ftitle, Int_t compress) : TFile(url, ""WEB""),; d_ptr(new TDavixFileInternal(fUrl, opt)); {; (void) ftitle;; (void) compress;; Init(kFALSE);; }; ```; where 'opt' is not passed to the `TFile` constructor but only to the internal object. Later the `Init` is (of course) not finding the options. For this case, this could be solved setting `fOption` to opt before calling `Init`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10742#issuecomment-1155780013:50,protocol,protocols,50,https://root.cern,https://github.com/root-project/root/issues/10742#issuecomment-1155780013,1,['protocol'],['protocols']
Integrability,"It is just debug mode, the consequence of a race condition on gDebug would ""only"" be that some message may or may not be printed when intended. So it is likely fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6875#issuecomment-735955797:95,message,message,95,https://root.cern,https://github.com/root-project/root/pull/6875#issuecomment-735955797,1,['message'],['message']
Integrability,It is not ABI compatible per se but for your purpose it is sufficiently so. The code in cling/llvm is only used/access from libCling which should only be accessed through the TIntepre ter interface (i.e. no user code should need to be rebuild).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657#issuecomment-811290392:188,interface,interface,188,https://root.cern,https://github.com/root-project/root/issues/7657#issuecomment-811290392,1,['interface'],['interface']
Integrability,It is not crash as well for me. But if I try to move title using my mouse - I get corrupted drawing (as on screenshot) and; lot of error messages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14032#issuecomment-1801794203:137,message,messages,137,https://root.cern,https://github.com/root-project/root/issues/14032#issuecomment-1801794203,1,['message'],['messages']
Integrability,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:; ```; 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec; Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from ReadRules; [ RUN ] ReadRules.CustomReadRuleWithSpace; C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed; Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'.; Suppress those using ROOT/TestSupport.hxx; [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms); [----------] 1 test from ReadRules (883 ms total); ; [----------] Global test environment tear-down; [==========] 1 test from 1 test suite ran. (883 ms total); [ PASSED ] 0 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] ReadRules.CustomReadRuleWithSpace; ; 1 FAILED TEST; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9354#issuecomment-2046160417:1233,message,message,1233,https://root.cern,https://github.com/root-project/root/issues/9354#issuecomment-2046160417,1,['message'],['message']
Integrability,It looks like the clang tidy errors reported by continuous-integration/travis-ci/pr are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3847#issuecomment-495597401:59,integrat,integration,59,https://root.cern,https://github.com/root-project/root/pull/3847#issuecomment-495597401,1,['integrat'],['integration']
Integrability,"It looks more complicated that what I thought with missing dependencies. I'll need to create a dedicated VM not to mess-up the environment of our build nodes, so it will take a bit of time...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10283#issuecomment-1085527103:59,depend,dependencies,59,https://root.cern,https://github.com/root-project/root/issues/10283#issuecomment-1085527103,1,['depend'],['dependencies']
Integrability,"It looks okay:; ```; $ cat /proc/sys/kernel/threads-max; 7897651; $ cat /proc/sys/kernel/pid_max ; 4194304; $ cat /proc/sys/vm/max_map_count; 262144; ```; ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ ulimit -a; real-time non-blocking time (microseconds, -R) unlimited; core file size (blocks, -c) unlimited; data seg size (kbytes, -d) unlimited; scheduling priority (-e) 0; file size (blocks, -f) unlimited; pending signals (-i) 3948825; max locked memory (kbytes, -l) 8192; max memory size (kbytes, -m) unlimited; open files (-n) 1048576; pipe size (512 bytes, -p) 8; POSIX message queues (bytes, -q) 819200; real-time priority (-r) 0; stack size (kbytes, -s) 8192; cpu time (seconds, -t) unlimited; max user processes (-u) 4194304; virtual memory (kbytes, -v) unlimited; file locks (-x) unlimited; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552#issuecomment-2383251376:580,message,message,580,https://root.cern,https://github.com/root-project/root/issues/16552#issuecomment-2383251376,1,['message'],['message']
Integrability,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3957#issuecomment-501664021:448,depend,depend,448,https://root.cern,https://github.com/root-project/root/pull/3957#issuecomment-501664021,1,['depend'],['depend']
Integrability,"It may make sense to register such include paths as ""private"" and adjust the interface of `gSystem->GetIncludePath` (cc:pcanal). In principle we do not need this injected include path when runtime_cxxmodules are on and we might just drop that part from dictionary generation. There might be some code out there that was relying on this gray area include path. I'd defer that to @Axel-Naumann.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-769975888:77,interface,interface,77,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-769975888,2,"['inject', 'interface']","['injected', 'interface']"
Integrability,It probably depends on which builtins you enable?; I also see this for builtin_XROOTD; ```; gmake[4]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[4]: *** Waiting for unfinished jobs....; gmake[3]: *** [Makefile:146: all] Error 2; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16733#issuecomment-2432536621:12,depend,depends,12,https://root.cern,https://github.com/root-project/root/issues/16733#issuecomment-2432536621,1,['depend'],['depends']
Integrability,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10222#issuecomment-1079823051:456,integrat,integration,456,https://root.cern,https://github.com/root-project/root/issues/10222#issuecomment-1079823051,2,['integrat'],['integration']
Integrability,It seems that Decl->isUsed() was not a good way to decide whether if a decl is interesting or not because; ```; [yuka@yuka-arch module-release]$ root -l -b; root [0] gMinuit; IncrementalExecutor::executeFunction: symbol 'gMinuit' unresolved while linking [cling interface function]!; ```; we couldn't resolve gMinuit with this patch :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2009#issuecomment-391741036:262,interface,interface,262,https://root.cern,https://github.com/root-project/root/pull/2009#issuecomment-391741036,1,['interface'],['interface']
Integrability,"It seems the `UNREACHABLE` is connected to the issue regarding `__builtin_pow`, at least that is the builtin function that Clad's generated code tries to cast into a function pointer. The failure of `roottest-root-io-compression-make` was because I was building without `builtin_zstd` and the compressed size was different than expected. From that point of view, the build fixes are complete. Note that the backport still needs to be synchronized to https://github.com/root-project/llvm-project/ before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15900#issuecomment-2182262756:434,synchroniz,synchronized,434,https://root.cern,https://github.com/root-project/root/pull/15900#issuecomment-2182262756,1,['synchroniz'],['synchronized']
Integrability,"It seems to me one can now do:; ```; root [0] ROOT::IsImplicitMTEnabled(); (bool) false; root [1] TMVA::gConfig().EnableMT(4); root [2] ROOT::IsImplicitMTEnabled(); (bool) false; root [3] TMVA::gConfig().GetThreadExecutor().GetPoolSize(); (unsigned int) 4; ```; It could be expected that TMVA IMT implies ROOT IMT. And; ```; root [0] ROOT::EnableImplicitMT(4); root [1] TMVA::gConfig().GetThreadExecutor().GetPoolSize(); (unsigned int) 1; ```; Here the user may expect that TMVA uses IMT, however an extra `TMVA::gConfig().EnableMT()` is required. Are these two situations desirable? If not, the documentation of `ROOT::EnableImplicitMT` should be updated to indicate that TMVA IMT is controlled through a separate interface (`TMVA::gConfig()`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3585#issuecomment-476266847:715,interface,interface,715,https://root.cern,https://github.com/root-project/root/pull/3585#issuecomment-476266847,1,['interface'],['interface']
Integrability,"It would also be nice to have a bit more consistent interface. Right now pdf and cdf can be passed via references, while dpdf only as a pointer; pdf and dpdf via constructor, while cdf requires method call. Could you add the following:; ```; TUnuranContDist(bool copyFunc=false); SetPdf(const ROOT::Math::IGenFunction& pdf, bool isLogPdf=false); SetDpdf(const ROOT::Math::IGenFunction& dpdf); ```; ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8196#issuecomment-844083817:52,interface,interface,52,https://root.cern,https://github.com/root-project/root/issues/8196#issuecomment-844083817,1,['interface'],['interface']
Integrability,"It would be nice to have it in the master soon. Actually I have yet another request: a multidimensional mode (I think I didn't mention it earlier). For now I had to move to the lower level which is not exactly great. To summarize, I ask for the following new features:. 1. Set dpdf and cdf; 2. Set multidimensional mode `SetMode(const double* mode)`; 3. Support for `_chg_truncated`, i.e. range of sampled numbers, which could be narrower than the domain (this needs first support in `TUnuran`, then in the sampler); 4. Documentation of passing method-specific parameters via the string API or even better an interface making it easier to build the respective string (`SetParameter(const std::string& name, const double val)` and similar methods for other types of parameters)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7332#issuecomment-862384249:609,interface,interface,609,https://root.cern,https://github.com/root-project/root/issues/7332#issuecomment-862384249,1,['interface'],['interface']
Integrability,"It's a bit more involved than that, from what I could understand from debugging: `RooRealIntegral` searches for the clients of the integration variables, and the plot variables have none (clone of the dataset variables?). ; Overriding the projection variables by passing `Project` to the pdf plot solves this, and then it becomes an actual pointer comparison problem as you say.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12646#issuecomment-1519887890:131,integrat,integration,131,https://root.cern,https://github.com/root-project/root/issues/12646#issuecomment-1519887890,1,['integrat'],['integration']
Integrability,"It's a proposal, totally open to discussion. I found myself in need of this piece of code several times and I always thought it would be cool to have it as a single call instead of having to remember those three lines. You can see it a nicer and useful way for writing nCPUs dependent, processor-agnostic code. I would say it's better than replicating the current process of getting the number of CPUs all over the place. This function will be helpful when parallelizing without IMT/tbb, where you may still be in need of knowing the number of threads you can use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1018#issuecomment-330673548:275,depend,dependent,275,https://root.cern,https://github.com/root-project/root/pull/1018#issuecomment-330673548,1,['depend'],['dependent']
Integrability,"It's not a problem right now, just worried about the future. Some adventurous user may some day take the cloned functor and try to call DoEval when the RooAbsMinimizerFcn is already gone. Making sure it still exists could be done with a `weak_ptr`, but then you need to put the thing itself in a `shared_ptr` as well, which may give off a mixed message...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12348#issuecomment-1439871567:345,message,message,345,https://root.cern,https://github.com/root-project/root/pull/12348#issuecomment-1439871567,1,['message'],['message']
Integrability,"It's not great that we have to consider all these redundant overloads. I would suggest getting rid of them first, to keep the interface clean and consistent:; * https://github.com/root-project/root/pull/16443; ; What do you think, @lmoneta?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16437#issuecomment-2353578161:126,interface,interface,126,https://root.cern,https://github.com/root-project/root/pull/16437#issuecomment-2353578161,1,['interface'],['interface']
Integrability,"It's not just the opt pragma - `Declare()` also disables the interpreter extensions, like nullptr check. We'd need a new interpreter interface for this selection of features: yes autoparsing + autoloading, no to the other interpreter extensions. I'm not in love with that solution either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3061#issuecomment-443612738:133,interface,interface,133,https://root.cern,https://github.com/root-project/root/pull/3061#issuecomment-443612738,1,['interface'],['interface']
Integrability,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github; - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7334#issuecomment-789011675:244,integrat,integrated,244,https://root.cern,https://github.com/root-project/root/pull/7334#issuecomment-789011675,2,['integrat'],['integrated']
Integrability,Iterating again with Axel we agreed that the problem with filename/line number adding noise mostly goes away by putting the actual message indented in a new line. E.g. I would find this much much more readable that what we currently have:. ```; [Info][ROOT.RDF][void ROOT::Detail::RDF::RLoopManager::Run()][../tree/dataframe/src/RLoopManager.cxx:705]; The actual message; which can be multi-line; ```. (where the first line could be displayed e.g. in gray if we are printing to a tty to help the reader distinguish context from content),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7008#issuecomment-1061629486:131,message,message,131,https://root.cern,https://github.com/root-project/root/issues/7008#issuecomment-1061629486,2,['message'],['message']
Integrability,"Just a change of commit message, should not change the outcome of the tests",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7041#issuecomment-760749364:24,message,message,24,https://root.cern,https://github.com/root-project/root/pull/7041#issuecomment-760749364,1,['message'],['message']
Integrability,"Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13939#issuecomment-1780158604:266,interface,interfaces,266,https://root.cern,https://github.com/root-project/root/pull/13939#issuecomment-1780158604,1,['interface'],['interfaces']
Integrability,Just fixing a typo in the commit messages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13665#issuecomment-1725180696:33,message,messages,33,https://root.cern,https://github.com/root-project/root/pull/13665#issuecomment-1725180696,1,['message'],['messages']
Integrability,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? ; ```; -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework; -- Looking for GLEW; -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):; Please enable builtin Glew due bug in latest CMake (use cmake option; -Dbuiltin_glew=ON).; Call Stack (most recent call first):; CMakeLists.txt:298 (include); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14483#issuecomment-1919050085:417,message,message,417,https://root.cern,https://github.com/root-project/root/issues/14483#issuecomment-1919050085,1,['message'],['message']
Integrability,"Just for documentation purposes, I am having fun with this at the moment; ```; 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure; 503: Failed ; 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: ; 503: severity: kError ; 503: received: 0 times (required, fullMatch) ; 503: origin: ""Setup()"" ; 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree; player/test/DisappearingBranch1.root'. ; 503: ; 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure; 503: Failed ; 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; 503: severity: kError ; 503: origin: ""Setup()"" ; 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree; player/test/DisappearingBranch1.root'.; ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16377#issuecomment-2334129931:253,message,message,253,https://root.cern,https://github.com/root-project/root/pull/16377#issuecomment-2334129931,5,['message'],['message']
Integrability,"Just for my curiosity because it's not explained in the commit message: You are adding `include_directories(${ROOT_SOURCE_DIR}/tutorials)` in `test/CMakeLists.txt`, I suppose this is to fix https://github.com/root-project/root/pull/13571#issuecomment-1700410866. I was expecting that this happens when PROOF is disabled - where is that directory added before / otherwise?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13571#issuecomment-1713361097:63,message,message,63,https://root.cern,https://github.com/root-project/root/pull/13571#issuecomment-1713361097,1,['message'],['message']
Integrability,"Just for the record, all the Jenkins builds passed, but I just rewrote the commit message so Jenkins is rebuilding it without any changes. Any objections to get this merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/898#issuecomment-325612049:82,message,message,82,https://root.cern,https://github.com/root-project/root/pull/898#issuecomment-325612049,1,['message'],['message']
Integrability,"Just one last thing, can you edit the commit message to be more explicit about what you did? You can mention that the None -> null pointer conversion is no longer implemented in Cppyy, so that we can't pass the result of `Draw` to `AddEntry`. Anyway, `AddEntry` should receive the function object and not None, which is what is implemented now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4072#issuecomment-510413004:45,message,message,45,https://root.cern,https://github.com/root-project/root/pull/4072#issuecomment-510413004,1,['message'],['message']
Integrability,"Just realized that #1353 does the switch to the Keras 2.x interface (partially) in the tutorial. Please merge this first, then I'll rebase this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1629#issuecomment-367266407:58,interface,interface,58,https://root.cern,https://github.com/root-project/root/pull/1629#issuecomment-367266407,1,['interface'],['interface']
Integrability,Just rebased to fix a typo in the commit message,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14588#issuecomment-1927660796:41,message,message,41,https://root.cern,https://github.com/root-project/root/pull/14588#issuecomment-1927660796,1,['message'],['message']
Integrability,"Just tested with latest ROOT (master) and roottest (master) with both VS 2019 and VS 2022:; ```; C:\Users\bellenot\build\x64\release>ctest -VV -C Release -R nullderef; UpdateCTestConfiguration from :C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Parse Config file:C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Add coverage exclude regular expressions.; UpdateCTestConfiguration from :C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Parse Config file:C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Test project C:/Users/bellenot/build/x64/release; Constructing a list of tests; Ignore test: test-tcollex; Ignore test: roottest-cling-parsing-semicolon; Ignore test: roottest-root-rint-TabCom; Ignore test: roottest-root-rint-BackslashNewline; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 972; Start 972: roottest-cling-exception-nullderef-e. 972: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Users/bellenot/build/x64/release/bin/root.exe^-l^-b^-q^--ptrcheck^-e^int*p=nullptr^-e^*p"" ""-DOUT=C:/Users/bellenot/build/x64/release/roottest/cling/exception/nullderef-e.log"" ""-DCWD=C:/Users/bellenot/build/x64/release/roottest/cling/exception"" ""-DRC=1"" ""-DDIFFCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/roottest/scripts/custom_diff.py"" ""-DSYS=C:/Users/bellenot/build/x64/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/x64/release#PYTHONPATH=C:/Users/bellenot/build/x64/release/bin"" ""-P"" ""C:/Users/bellenot/build/x64/release/RootTestDriver.cmake""; 972: Environment variables:; 972: ROOT_HIST=0; 972: Test timeout computed to be: 300; 972: -- TEST COMMAND --; 972: cd C:/Users/bellenot/build/x64/release/roottest/cling/exception; 972: C:/Users/bellenot/build/x64/release/bin/root.exe -l -b -q --ptrcheck -e 'int*p=nullptr' -e '*p'; 972: -- BEGIN TEST OUTPUT --; 972:; 972: (int *) nullptr; 972:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9742#issuecomment-1025965371:915,depend,dependency,915,https://root.cern,https://github.com/root-project/root/issues/9742#issuecomment-1025965371,2,['depend'],['dependency']
Integrability,"Just to add, I think the actual timing gain depends heavily on the use-case and software environment. In the end, for us, this is not even the decisive factor. What is more important is the reduction of noise processes when we do profiling/monitoring and a less heavy burden on process management in the /proc space. Our data taking workflows have O(100) of ""microservices"" that link to ROOT. Just starting up this system created O(1000) calls to ""c++, ... "" to find out some paths. This problem is now essentially gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12613#issuecomment-1496243386:44,depend,depends,44,https://root.cern,https://github.com/root-project/root/pull/12613#issuecomment-1496243386,1,['depend'],['depends']
Integrability,"Just to clarify, the second call is totally fine and the first call is creating a problem for RDF because of https://github.com/root-project/root/issues/10742 . Even then, it seemed weird that calling `EndOfProcessCleanups` twice, and once before the destructor of object at local scope is even called, was ""everything working as intended"". That's why I opened the issue. If Python's or PyROOT's teardown sequence unloads libraries that might be needed by EndOfProcessCleanups then I agree with Vincenzo that maybe the best we can do is run it once before Python's teardown (maybe with a comment that explains the issue, if the scenario in the commit message of https://github.com/root-project/root/commit/7a592f5d62dda6c76f230bfa6fd879e5fa80582a does not really need the early EndOfProcessCleanups call as Vincenzo mentioned).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10753#issuecomment-1155757108:651,message,message,651,https://root.cern,https://github.com/root-project/root/pull/10753#issuecomment-1155757108,1,['message'],['message']
Integrability,"Ks/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 409 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. sftnight@macphsft18 ~ % clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: x86_64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=all; -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/16/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-impl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:5470,contract,contract,5470,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['contract'],['contract']
Integrability,"Ks/MacOSX12.1.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -I/Users/suter_a/Applications/root/root_exec/include -I/opt/local/include -I/Users/suter_a/Applications/musrfit/src/include -I/Users/suter_a/Applications/musrfit/src/classes PUserFcnBase.h /Users/suter_a/Applications/musrfit/src/include/PUserFcnBaseLinkDef.h; cd /Users/suter_a/Applications/musrfit/build && /opt/local/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/suter_a/Applications/musrfit /Users/suter_a/Applications/musrfit/src/classes /Users/suter_a/Applications/musrfit/build /Users/suter_a/Applications/musrfit/build/src/classes /Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake --color=; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/CMakeDirectoryInformation.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Scanning dependencies of target PUserFcnBase; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/classes/CMakeFiles/PUserFcnBase.dir/build.make src/classes/CMakeFiles/PUserFcnBase.dir/build; ... And all the further root_generate_dictionary work as well. Does this help?. Cheers,; Andreas. PS: Machine I have tested it on: ; Darwin Kernel Version 21.3.0: Wed Jan 5 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_ARM64_T8101 arm64. ________________________________. Paul Scherrer Institut. Dr. Andreas Suter; Laboratory for Muon-Spin Spectroscopy; Swiss Muon Source SµS; WLGA/119; Forschungsstrasse 111; CH - 5232 Villigen PSI; Switzerland. Tel.: +41 (0)56 310 4238; ________________________________. > On 7 Mar 2022, at 20:08, Axel Naum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1061481610:4496,depend,depend,4496,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1061481610,1,['depend'],['depend']
Integrability,"L=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17; ```; I got the following warning when building Celeritas' root dictionary (possibly unimportant):; ```; [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap; Disabling gnu++: clang has no __float128 support on this target!; Disabling gnu++: clang has no __float128 support on this target!; ```; and at runtime:; ```; info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root; Disabling gnu++: clang has no __float128 support on this target!; Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found; Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1109820171:3660,rout,routine,3660,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1109820171,1,['rout'],['routine']
Integrability,"LGTM if the bots are green. I'd expect, in long term, to avoid calling the entire routine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/912#issuecomment-326300629:82,rout,routine,82,https://root.cern,https://github.com/root-project/root/pull/912#issuecomment-326300629,1,['rout'],['routine']
Integrability,"LGTM now, but as we've discussed offline, it might be useful to put the RNG adaptor in `TMath` or similar, so that other parts of ROOT may use `TRandom{1,2,3}` where a standard generator is needed, or even add the proper interfaces directly into `TRandom{1,2,3}` so that they can be used directly to replace a standard generator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1628#issuecomment-365628534:221,interface,interfaces,221,https://root.cern,https://github.com/root-project/root/pull/1628#issuecomment-365628534,1,['interface'],['interfaces']
Integrability,"LGTM, I would perhaps change the message of the first commit: ""We enclose the parallel_for and parallel_reduce invocation in a task_arena::isolate because we want to prevent work stealing."" since it is not work stealing in general what we want to prevent (it will still happen), but the interleaving of two first-level tasks in the same thread/slot, by making sure a worker thread will not pick other tasks while waiting for the second-level tasks to finish.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2934#issuecomment-436625130:33,message,message,33,https://root.cern,https://github.com/root-project/root/pull/2934#issuecomment-436625130,1,['message'],['message']
Integrability,"Last push only fixed a typo in the commit message (that I found when opening the PR but forgot to push); cancelled the CI jobs, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15001#issuecomment-2003939094:42,message,message,42,https://root.cern,https://github.com/root-project/root/pull/15001#issuecomment-2003939094,1,['message'],['message']
Integrability,"Latest commit addresses all comments. Examples from the build nodes:; Failure example: [ROOT-performance-centos8-multicore/default](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/109377/console) (pyspark is not installed on this system); ```; 13:04:01 -- Looking for PySpark; 13:04:01 -- Looking for PySpark dependency: Java; 13:04:01 -- Found Java: /usr/bin/java (found suitable version ""1.8.0.275"", minimum required is ""1.8"") found components: Runtime ; 13:04:01 -- Found Java /usr/bin/java; 13:04:01 -- Java version 1.8.0_275; 13:04:01 -- Python package 'pyspark' could not be imported with /usr/bin/python; 13:04:01 Traceback (most recent call last):; 13:04:01 File ""<string>"", line 1, in <module>; 13:04:01 ModuleNotFoundError: No module named 'pyspark'; 13:04:01 ; 13:04:01 CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; 13:04:01 Could NOT find PySpark (missing: PySpark_HOME) (Required is at least; 13:04:01 version ""2.4""); 13:04:01 Call Stack (most recent call first):; 13:04:01 /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE); 13:04:01 cmake/modules/FindPySpark.cmake:55 (find_package_handle_standard_args); 13:04:01 cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package); 13:04:01 cmake/modules/SearchInstalledSoftware.cmake:1876 (find_package); 13:04:01 CMakeLists.txt:219 (include); ```. Success example: [ROOT-fedora30/default](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/109385/consoleFull) ; ```; 13:05:04 -- Looking for PySpark; 13:05:04 -- Looking for PySpark dependency: Java; 13:05:04 -- Found Java: /usr/bin/java (found suitable version ""1.8.0.252"", minimum required is ""1.8"") found components: Runtime ; 13:05:04 -- Found Java /usr/bin/java; 13:05:04 -- Java version 1.8.0_252; 13:05:04 -- Found PySpark: /usr/local/lib/python3.7/site-packages/pyspark (found suitable version ""3.0.1"", minimum required is ""2.4"") ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7371#issuecomment-792725234:334,depend,dependency,334,https://root.cern,https://github.com/root-project/root/pull/7371#issuecomment-792725234,3,"['depend', 'message']","['dependency', 'message']"
Integrability,Latest commit addresses suggestions (shortened build option name) and improves on the logic to find pyspark and its dependencies. This is ready for review now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7371#issuecomment-791928486:116,depend,dependencies,116,https://root.cern,https://github.com/root-project/root/pull/7371#issuecomment-791928486,1,['depend'],['dependencies']
Integrability,"Let me quote my answer from yesterday:. > That commit is about PR builds; in this issue, I'm discussing builds after pushes to branches. So maybe PR builds are now doing better than before, but that's entirely besides the point: A build triggered by a push to a branch should build exactly what was pushed, not some later commit. > AFAICT they still use a `git pull` of the branch name, which may get you different commits depending on when the job is scheduled to start.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14061#issuecomment-1953621192:423,depend,depending,423,https://root.cern,https://github.com/root-project/root/issues/14061#issuecomment-1953621192,1,['depend'],['depending']
Integrability,"Let's see how this goes now that we are back on the old externals... I would prefer avoiding the smart pointers with ROOT 6 interfaces, because I'm sure there are corner cases where it will lead to problems, and I pointed out some of it in previous comments. Other than that, I once this PR is ready for merge, the typos, etc, should be amended into the right commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1073#issuecomment-333487667:124,interface,interfaces,124,https://root.cern,https://github.com/root-project/root/pull/1073#issuecomment-333487667,1,['interface'],['interfaces']
Integrability,"Link with patch is broken. I will close the issue, since users can use it via the GSL interface",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14564#issuecomment-1940728327:86,interface,interface,86,https://root.cern,https://github.com/root-project/root/issues/14564#issuecomment-1940728327,1,['interface'],['interface']
Integrability,"Loading a library that is needed to resolve symbols (as done by this PR) means that libraries linked against that library are loaded as a side-effect, without TCling / TSystem seeing it. TClingTest's `gInterpreter->GetSharedLibDeps(""libTreePlayer"")` thus doesn't report all actual library dependencies but only a subset. This isn't an issue for explicit linking, though (neither for implicit linking, which will load all libraries separately and thus enumerate them), but it's a potential correctness concern and an inconsistency for explicit vs implicit linking / loading.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8017#issuecomment-953811441:289,depend,dependencies,289,https://root.cern,https://github.com/root-project/root/pull/8017#issuecomment-953811441,1,['depend'],['dependencies']
Integrability,Lock is now outside the loop in teh case of the tensor interface to evaluate a model,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16616#issuecomment-2399195352:55,interface,interface,55,https://root.cern,https://github.com/root-project/root/pull/16616#issuecomment-2399195352,1,['interface'],['interface']
Integrability,"Log when running with valgrind:. ```; Conditional jump or move depends on uninitialised value(s); in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746; 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362; 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737; 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660; 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116; 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389; 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471; 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153; 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174; 13: main in /opt/root_src/main/src/rmain.cxx:81; Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s); in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479; 5: TApplication::TApplication(char const*,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:63,depend,depends,63,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['depend'],['depends']
Integrability,"Looking at the error message, it seems `FWCoreFramework` has not been built yet when trying to build `CalibTrackerRecords`. Do you know why that is, has there been another error? This *may* propagate to weird redefinition errors...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765#issuecomment-1326547512:21,message,message,21,https://root.cern,https://github.com/root-project/root/issues/11765#issuecomment-1326547512,1,['message'],['message']
Integrability,"Looking at the history, commit https://github.com/root-project/root/commit/378f961faf3ccc2f3272c27c7f45b38479ad3693#diff-b7e4b08bc7e019d35a141d4c27ebc7e748b5f4580d6f9d840dda0c70cc185cbe is actually wrong, it replaced a public dependency on Vdt with a private (and build-time only) dependency. The last time I touched this file was in commit 7d88a0fc8b0fa604b5fee0174fdac88885cc6f5f, when we had something similar to your option 2 in place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797#issuecomment-1339095394:226,depend,dependency,226,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339095394,2,['depend'],['dependency']
Integrability,"Looking back at my emails, I found that the routine comes from the LHCb RICH code and it was proposed to GSL, but it was never merged there at the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6900#issuecomment-737154393:44,rout,routine,44,https://root.cern,https://github.com/root-project/root/issues/6900#issuecomment-737154393,1,['rout'],['routine']
Integrability,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`); 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6406#issuecomment-696701809:176,depend,dependency,176,https://root.cern,https://github.com/root-project/root/issues/6406#issuecomment-696701809,3,['depend'],"['dependency', 'depends']"
Integrability,"Looks alright, but @Axel-Naumann or @couet need to ack the renaming of files. Why is it necessary to use `DEPENDENCIES` rather than `LIBRARIES`? As far as I know, that just adds an explicit dependency on the dictionary generation in addition to the library linking.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2999#issuecomment-440272694:106,DEPEND,DEPENDENCIES,106,https://root.cern,https://github.com/root-project/root/pull/2999#issuecomment-440272694,2,"['DEPEND', 'depend']","['DEPENDENCIES', 'dependency']"
Integrability,"Lorenzo wanted to move all MathMore stuff into RooFitMore. Did you try to add this dependency only to RooFitMore? If that's not enough, there stuff needs to be moved to RooFitMore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5439#issuecomment-618424398:83,depend,dependency,83,https://root.cern,https://github.com/root-project/root/pull/5439#issuecomment-618424398,1,['depend'],['dependency']
Integrability,Main changes are done - I fully remove RDrawingOpts and simplify class organizations around drawables. I need some more days to make I/O for RCanvas . I introduced RIOShared class for that. It is wrapper for shared_ptr.; There is method with collects all these objects from RCanvas and one could reassign shared_ptr after reading of RCanvas. This is the idea. Half of tutorials already works,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4352#issuecomment-531247017:196,wrap,wrapper,196,https://root.cern,https://github.com/root-project/root/pull/4352#issuecomment-531247017,2,['wrap'],['wrapper']
Integrability,"Many thanks. Jiang Yi ***@***.***> 于 2023年6月5日周一 05:15写道：. > @jalopezg-git <https://github.com/jalopezg-git> Sorry for the late reply.; > I am still trying to fix some corner cases while avoiding too intrusive; > changes. I will update the pull request soon.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/pull/11265#issuecomment-1576431258>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ACN3SSVEF3GLBPRSV2CHAELXJWPUNANCNFSM573UE76Q>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11265#issuecomment-1577084075:572,Message,Message,572,https://root.cern,https://github.com/root-project/root/pull/11265#issuecomment-1577084075,1,['Message'],['Message']
Integrability,"Mathcore has no dependency on libRint, so this is maybe for Vassil to understand what is happening with the modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10271#issuecomment-1083045604:16,depend,dependency,16,https://root.cern,https://github.com/root-project/root/issues/10271#issuecomment-1083045604,1,['depend'],['dependency']
Integrability,Maybe I was not precise - compiler cannot find `snprintf`. It is seen in error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11861#issuecomment-1348105789:79,message,messages,79,https://root.cern,https://github.com/root-project/root/pull/11861#issuecomment-1348105789,1,['message'],['messages']
Integrability,"Maybe a few more notes to make the review easier, because this is a huge patch. * The previous code used macros to log things. I found that the macros are not needed, so I replaced all the macros with method calls to MnPrint::Error, MnPrint::Info, ....; * The old logging made a useful habit of prefixing messages with a string to indicate the origin, e.g. when you logged from MnHesse, messages would be prefixed with ""MnHesse:"". Inside ``MnHesse``, to stay with the example, you might have seen code like this; ```c++; MN_INFO_MSG(""MnHesse: Some foo happened"");; [...]; MN_INFO_MSG(""MnHesse: Some bar happened"");; [...]; int n = 5;; MN_INFO_MSG(""MnHesse: Frobinated"", n, ""glorps"");; ```; Setting the prefix by hand was error prone and repetetive and made the logging code more distractive from the actual code. Especially now, since all the debug messages should also have this prefix, I wanted to automate this. So I turned MnPrint into a class that one can instantiate with a prefix for a given scope.; ```c++; MnPrint print(""MnHesse""); // appears once at the beginning of a long method; [...]; print.Info(""Some foo happened"");; [...]; print.Info(""Some bar happened"");; [...]; int n = 5;; print.Info(""Frobinated"", n, ""glorps"");; ```; The method ``MnPrint::Info`` uses the prefix set in the MnPrint ctor. The ctor of MnPrint also has an optional argument to print with a local print level. If this is not set, the global print level is used. In the long run (not in this patch), we should get rid of the global print level, because global mutable variables are difficult to reason about and in particular do not play nice with multi-threading. This design prepares for that step.; * I generally made sure that the logging messages contain the same information as the previous ones, but I reduced excess whitespace and improved the formatting. Some debug messages added several empty lines to the output, which made the logs hard to read.; * In very few isolated cases I removed redundant messages. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-719713799:305,message,messages,305,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-719713799,3,['message'],['messages']
Integrability,Maybe it can be made more clear but the message comes from [here](https://github.com/root-project/root/blob/bd200315c50ac1520f75f959a852c6d3333f8aa9/core/base/src/TApplication.cxx#L147). I guess this error can occur for many more reasons than a macro called `main.cpp`. So it will not be easy to make it clearer there. Maybe @Axel-Naumann or @pcanal can comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11707#issuecomment-1315426448:40,message,message,40,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315426448,2,['message'],['message']
Integrability,Merged locally without using GitHub's interface.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1809#issuecomment-380144057:38,interface,interface,38,https://root.cern,https://github.com/root-project/root/pull/1809#issuecomment-380144057,1,['interface'],['interface']
Integrability,Merged master into feature branch to integrate new `ntuple_types.cxx` test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5619#issuecomment-634876552:37,integrat,integrate,37,https://root.cern,https://github.com/root-project/root/pull/5619#issuecomment-634876552,1,['integrat'],['integrate']
Integrability,"Merged, thanks! I applied the patch locally, so GitHub's interface got confused. Closing this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/891#issuecomment-325422715:57,interface,interface,57,https://root.cern,https://github.com/root-project/root/pull/891#issuecomment-325422715,1,['interface'],['interface']
Integrability,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1761301310:13,depend,depends,13,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1761301310,1,['depend'],['depends']
Integrability,Message from Windows build is misleading - build was done without any error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10688#issuecomment-1144545822:0,Message,Message,0,https://root.cern,https://github.com/root-project/root/pull/10688#issuecomment-1144545822,1,['Message'],['Message']
Integrability,"Message produced by JSROOT and printed out in the qtweb plugin. It is side effect of canvas rendering in the beginning when HTML elements not yet fully layouted. To disable such debug messages, one should insert following line into `ExampleMain.cpp` line:. ROOT::Experimental::RLogManager::Get().SetVerbosity(ROOT::Experimental::ELogLevel::kFatal);. QApplication myapp(argc, argv2); // Qt application. And also add include of:. #include ""ROOT/RLogger.hxx""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14300#issuecomment-1876985250:0,Message,Message,0,https://root.cern,https://github.com/root-project/root/issues/14300#issuecomment-1876985250,2,"['Message', 'message']","['Message', 'messages']"
Integrability,Messages are not identical - only reference on the issue on `root.cern` website.; `TROOT::PrintWebIssuseWarning()` will have to print different output.; But I will try to add such method in following PR. In `TRootBrowser::ExecPlugin` IsWebGUI is checked. I will add check for gROOT->IsWebDisplay() . `rootbrowse.py` invokes default TBrowser - checks already done in correspondent factory classes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14241#issuecomment-1899923978:0,Message,Messages,0,https://root.cern,https://github.com/root-project/root/pull/14241#issuecomment-1899923978,1,['Message'],['Messages']
Integrability,"Model& model, experimental::__ROOT::basic_string_view<char,char_traits<char> > vName, experimental::__ROOT::basic_string_view<char,char_traits<char> > wName) =>; 887: TypeError: takes at least 3 arguments (2 given); 887: ROOT::RDF::RResultPtr<TH1D> ROOT::RDF::RInterface<ROOT::Detail::RDF::RJittedFilter,void>::Histo1D(experimental::__ROOT::basic_string_view<char,char_traits<char> > vName, experimental::__ROOT::basic_string_view<char,char_traits<char> > wName) =>; 887: TypeError: could not convert argument 1; 887: ROOT::RDF::RResultPtr<TH1D> ROOT::RDF::RInterface<ROOT::Detail::RDF::RJittedFilter,void>::Histo1D(const ROOT::RDF::TH1DModel& model = {"""", """", 128U, 0., 0.}, experimental::__ROOT::basic_string_view<char,char_traits<char> > vName = """") =>; 887: TypeError: could not convert argument 2; 887: Failed to instantiate ""Histo1D(ROOT::RDF::TH1DModel*,std::string)""; 887: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 887: error code: 1; 887:; 887:; 10/16 Test #887: tutorial-dataframe-df014_CSVDataSource-py ................***Failed 5.75 sec; test 888; Start 888: tutorial-dataframe-df016_vecOps-py. 888: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df016_vecOps.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 888: Environment variables:; 888: ROOT_HIST=0; 888: Test timeout computed to be: 1500; 888: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 888: error code: -529697949; 888:; 888:; 11/16 Test #888: tutorial-dataframe-df016_vecOps-py .......................***Failed 4.51 sec; test 889; Start 889: tutorial-dataframe-df017_vecOpsHEP-py. 889: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:10737,message,message,10737,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,Move the commit to PR #5252 to integrate the test with the root cause of the issue,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5256#issuecomment-606630138:31,integrat,integrate,31,https://root.cern,https://github.com/root-project/root/pull/5256#issuecomment-606630138,1,['integrat'],['integrate']
Integrability,"My 2 cents:. 1. It is extremly weird/ a bug that the webgui needs to depend on `TObject`.; 2. `RBrowserDataCleanup` derives from `TObject`, so it *must* have a `ClassDef` as per https://root.cern/manual/io_custom_classes/#the-classdef-macro . I am not sure about what using `ClassDefInline` as suggested by @pcanal would change; 2a. Can `RBrowserDataCleanup` just avoid inheriting from `TObject` completely? ; 3. `RBrowserData` has a dictionary and allows I/O, as it is defined in `LinkDef.h`, so it is only natural that its data members need a dictionary as well. As @hahnjo commented, the particular error coming from a `std::tuple` is due to the fact that the class uses ` std::unique_ptr<RBrowserDataCleanup>`. Bottom line, to me everything looks very clear and I don't understand the comments regarding looking for a deeper reason behind the error. The only thing I don't understand is the dependency from `TObject` itself, but that's beyond the scope of this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1637626198:69,depend,depend,69,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1637626198,4,['depend'],"['depend', 'dependency']"
Integrability,My bad! I didn't check if RVec implements the *full* std::vector interface. 😅,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6170#issuecomment-673447274:65,interface,interface,65,https://root.cern,https://github.com/root-project/root/pull/6170#issuecomment-673447274,1,['interface'],['interface']
Integrability,"My concern, that we breaking interfaces which are made public 5 years ago - through RZip.h. ; If we don't care about potential users - just remove RZip.h completely from public space.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4060#issuecomment-510890003:29,interface,interfaces,29,https://root.cern,https://github.com/root-project/root/pull/4060#issuecomment-510890003,1,['interface'],['interfaces']
Integrability,"My reasoning for removing usage of `std::string_view` is that using `const std::string&` avoids copying memory and only requires C++11, while `std::string_view` requires C++17 or a backport. Moreover, along with the extra requirements of `std::string_view`, when it is passed by value it uses a pointer + length, which means possibly twice the size of just a reference. If we are not using the editing potential of `std::string_view`, or even worse, are just using it to actually make a copy of the data inside, then I see no real advantage in using it relative to just using a reference to `std::string` in the interface that basically does the same job better without adding the extra requirements of a higher C++ standard and/or a backport.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/804#issuecomment-318633601:612,interface,interface,612,https://root.cern,https://github.com/root-project/root/pull/804#issuecomment-318633601,1,['interface'],['interface']
Integrability,"My suggestion to try to fix this issue is the following:. ```diff; --- a/builtins/lz4/CMakeLists.txt; +++ b/builtins/lz4/CMakeLists.txt; @@ -44,7 +44,7 @@ set(LZ4_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR} CACHE INTERNAL """" FORCE); add_library(lz4 STATIC ${LZ4_PUBLIC_HEADERS} ${LZ4_PRIVATE_HEADERS} ${LZ4_SOURCES}); set_target_properties(lz4 PROPERTIES C_VISIBILITY_PRESET hidden POSITION_INDEPENDENT_CODE ON); target_include_directories(lz4 INTERFACE $<BUILD_INTERFACE:${LZ4_INCLUDE_DIR}>); -target_link_libraries(lz4 PRIVATE xxHash::xxHash); +target_include_directories(lz4 PRIVATE $<BUILD_INTERFACE:${xxHash_INCLUDE_DIR}>); ; add_library(LZ4::LZ4 ALIAS lz4); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13739#issuecomment-1740750211:441,INTERFACE,INTERFACE,441,https://root.cern,https://github.com/root-project/root/pull/13739#issuecomment-1740750211,1,['INTERFACE'],['INTERFACE']
Integrability,"My two cents. The root cause of the problem is understood and it is what you mentioned. However, the way this presents to users is that if they run the following code on a large-enough inputs:. ```python; >>> f = ROOT.TFile('DYJetsToLL.root'); >>> t = f.Get('Events'); >>> t.Draw('GenPart_pdgId'); ```. users _silently_ get a completely wrong histogram:. ![image](https://github.com/root-project/root/assets/10999034/1d53b401-cf13-471c-bf6f-908835845b20). instead of the histogram they _should_ get:. ![image](https://github.com/root-project/root/assets/10999034/4bfc1d5d-e7e6-450a-b3c0-783cfccbda3a). Even if you are lucky enough that the histogram is so wrong that you spot the problem immediately, it is then very difficult to go from ""my histogram is wrong"" to ""low floating point precision makes `Fill` effectively a no-op inside `TTree::Draw`"". So difficult that I do not think one can reasonably expect users to diagnose the issue themselves. With that said, new interfaces already moved to TH1D by default instead of TH1F, and TTree::Draw cannot be changed to produce a TH1D for the backward-compat issues Axel listed above, so the only remaining option, AFAICT, is to add a check after every `Fill` or deprecate `TTree::Draw`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-1861816430:970,interface,interfaces,970,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-1861816430,1,['interface'],['interfaces']
Integrability,New warning message (for reference):; ![Screenshot from 2024-02-09 11-19-18](https://github.com/root-project/root/assets/29475282/cb204f9e-b92b-4bdb-ac5b-d5f7dfe87333),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645#issuecomment-1935824057:12,message,message,12,https://root.cern,https://github.com/root-project/root/pull/14645#issuecomment-1935824057,1,['message'],['message']
Integrability,"Nice catch. Thanks. The commit message could be made even better by explaining what was wrong with the previous implementation; for example by mentioning which test was failing and how. This would allow to make sure that future attempt to make a similar change do not suffer the same problems. Cheers,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1728#issuecomment-372414223:31,message,message,31,https://root.cern,https://github.com/root-project/root/pull/1728#issuecomment-372414223,1,['message'],['message']
Integrability,"No ;) I'm judging from the commits associated to this PR. Most likely you have to force push to this branch. Actually, I'm not sure if you change only the commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5221#issuecomment-604883243:162,message,message,162,https://root.cern,https://github.com/root-project/root/pull/5221#issuecomment-604883243,1,['message'],['message']
Integrability,No problem!. Fixed changed to https://github.com/root-project/root/pull/8270 plus another PR that will come after the required interface to `TInterpreter` is added.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152#issuecomment-850385438:127,interface,interface,127,https://root.cern,https://github.com/root-project/root/issues/8152#issuecomment-850385438,1,['interface'],['interface']
Integrability,"No we didn't but I guess that means this is not so important to them. I'll think about it if the interface in this PR can be further improved along the lines of what @pcanal suggested, but I already have an idea on how to do this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16175#issuecomment-2309976601:97,interface,interface,97,https://root.cern,https://github.com/root-project/root/pull/16175#issuecomment-2309976601,1,['interface'],['interface']
Integrability,"No, I still getting same messages. [See here](https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/6189/testReport/projectroot.roottest.root.meta.rootcling-modules/module-dep-order/roottest_root_meta_rootcling_modules_module_dep_order_cxxmodules_implicit_build_error/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5613#issuecomment-631429543:25,message,messages,25,https://root.cern,https://github.com/root-project/root/pull/5613#issuecomment-631429543,1,['message'],['messages']
Integrability,"No, I think since you can change your CMakefile, I would leave it as a; feature request. Bertrand Bellenot ***@***.***> schrieb am Di., 16. Mai 2023,; 09:56:. > Since it's a CMake issue and not really a ROOT one, I guess we can close; > this?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/12744#issuecomment-1549178519>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAJGF4UWYKGI2V3ROOOCLADXGMXKNANCNFSM6AAAAAAXRSRNGY>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12744#issuecomment-1549451083:569,Message,Message,569,https://root.cern,https://github.com/root-project/root/issues/12744#issuecomment-1549451083,1,['Message'],['Message']
Integrability,"No. As i mentioned earlier, this only showed up in a bit of way-obsolete code (wrapping AIDA histograms) which I just removed. So this doesn't affect us at all now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6345#issuecomment-692721209:79,wrap,wrapping,79,https://root.cern,https://github.com/root-project/root/issues/6345#issuecomment-692721209,1,['wrap'],['wrapping']
Integrability,"No. I dont think the problem is understood. In my software I link with another library compiled with the system libraries which have a recent libpng.; At run time ROOT finds the old ones from libpng inside imagemagic. It is not too hard to update the lib png. Do you want me to write what I do?. G. > On Dec 5, 2023, at 2:52 PM, Axel Naumann ***@***.***> wrote:; > ; > ; > @unelg <https://github.com/unelg> just FYI your error message is independent of whether ROOT's png is too old or not: you are mixing library and header of libpng from two different versions, likely in your own build? Please don't :-) If what I say here doesn't make sense please post a reproducer of this error at https://root-forum.cern.ch <https://root-forum.cern.ch/> - thanks!; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/issues/13825#issuecomment-1840834891>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAVOOJIRSHYYX74ALYJ55JLYH4RIZAVCNFSM6AAAAAA5W3TU4SVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQNBQHAZTIOBZGE>.; > You are receiving this because you were mentioned.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13825#issuecomment-1840841385:427,message,message,427,https://root.cern,https://github.com/root-project/root/issues/13825#issuecomment-1840841385,1,['message'],['message']
Integrability,Nope :) It still has some good things in it. Depends on #3896,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3873#issuecomment-498838832:45,Depend,Depends,45,https://root.cern,https://github.com/root-project/root/pull/3873#issuecomment-498838832,1,['Depend'],['Depends']
Integrability,"Nope, I tried, only CTRL+C prints the message ""CTRL+C pressed"". Shift+C does not. `if (event->fState & kKeyControlMask)`. is evaluating to true only if Ctrl+C is pressed. But then it's a mistery why it does not work with GrabKey. Could you point at which function in `TUnixSystem` should I run the debugger to see what happens?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8665#issuecomment-879387281:38,message,message,38,https://root.cern,https://github.com/root-project/root/issues/8665#issuecomment-879387281,1,['message'],['message']
Integrability,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2039#issuecomment-390711669:365,depend,depends,365,https://root.cern,https://github.com/root-project/root/pull/2039#issuecomment-390711669,2,['depend'],['depends']
Integrability,"Not sure if it applies here, but a common ""template trickery"" is to have a type-punned base class that provides enough functionality to cater for the hot paths during the event loop. We already use this in RNTuple, for example with `RFieldBase` that can be conveniently passed around if you only need its interface functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15116#issuecomment-2288491682:305,interface,interface,305,https://root.cern,https://github.com/root-project/root/pull/15116#issuecomment-2288491682,1,['interface'],['interface']
Integrability,"Not sure it will catch this kind of dependency, but yes, we should check the consistency of the build rules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1374#issuecomment-347621468:36,depend,dependency,36,https://root.cern,https://github.com/root-project/root/pull/1374#issuecomment-347621468,1,['depend'],['dependency']
Integrability,Not trivial solution will be fully integrate building of libAfterImage into ROOT cmake.; But this is too much work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16129#issuecomment-2255341012:35,integrat,integrate,35,https://root.cern,https://github.com/root-project/root/pull/16129#issuecomment-2255341012,1,['integrat'],['integrate']
Integrability,"Not yet, I'm in the process of shuffling around the dependencies such that root can still build without tbb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-761119696:52,depend,dependencies,52,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-761119696,1,['depend'],['dependencies']
Integrability,"Note that `XrdClient` is the old client from XRootD 4.x, which is already out of support (and EOS 4.x will also go out of support soon). `XrdClient` was removed from the XRootD repository in the XRootD 5.0 release. I think that this is a good time to review the code, drop obsolete things, require at least XRootD 5.x, use `XRootDConfig.cmake` shipped by XRootD, and drop `FindXROOTD.cmake` from ROOT. If `XRootDConfig.cmake` doesn't have something ROOT needs, please let me know and I will fix it for the next patch or feature release, depending on what it is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631#issuecomment-1740452464:537,depend,depending,537,https://root.cern,https://github.com/root-project/root/issues/12631#issuecomment-1740452464,1,['depend'],['depending']
Integrability,"Note that we observed the same type of crash in some other places as well in ATLAS, which could also be handled by cleaning up the dictionaries of the affected libraries. So the error has an upside as well. (Though a simple error message from ROOT would've been more welcome. :stuck_out_tongue:). (I mainly just wrote this comment to get notifications about this issue's evolution... :wink:)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657#issuecomment-805575762:230,message,message,230,https://root.cern,https://github.com/root-project/root/issues/7657#issuecomment-805575762,2,['message'],['message']
Integrability,"Note, I only slightly edited commit messages, no need to retest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/953#issuecomment-327744491:36,message,messages,36,https://root.cern,https://github.com/root-project/root/pull/953#issuecomment-327744491,1,['message'],['messages']
Integrability,"Note: In the documentation here: https://root.cern.ch/how/integrate-root-my-project-cmake. There's a typo: `ROOT_CC_FLAGS ` is mentioned instead of `ROOT_C_FLAGS`, but there is no CC flags variable. That documentation is not in this repo, so can't fix it here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-385674159:58,integrat,integrate-root-my-project-cmake,58,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-385674159,1,['integrat'],['integrate-root-my-project-cmake']
Integrability,"Note: `THnSparseT<TArrayL>` was removed because its underlying type (`long`)'s size depends on the platforms (32 vs 64 bits).; However, it would have been much to either leave it as is or mark it as deprecated. We need to fix this and make sure older files can be read. In the long term, you should consider moving to the newer `THnSparseT<TArrayL64>` which guarantees the 64 bits on all platforms (we should also make sure that we update our code to that `THnSparseT<TArrayL>` can be read into a `THnSparseT<TArrayL64>` (by adding the relevant renaming rule if need be).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15874#issuecomment-2173954150:84,depend,depends,84,https://root.cern,https://github.com/root-project/root/issues/15874#issuecomment-2173954150,1,['depend'],['depends']
Integrability,"Note: some of the reference files were updated with 'best guesses' and over-shot the correction. ; The only case I found of increase is https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169840/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/; where the actual increase is:; ```; --- a/root/io/treeForeign/testForeignDrawZLIB_builtinzlib.ref; +++ b/root/io/treeForeign/testForeignDrawZLIB_builtinzlib.ref; @@ -4,7 +4,7 @@ Warning in <TClass::Init>: no dictionary for class Wrapper is available; Warning in <TClass::Init>: no dictionary for class MyClass is available; ******************************************************************************; *Tree :T : T *; -*Entries : 2 : Total = 4215 bytes File Size = 1465 *; +*Entries : 2 : Total = 4215 bytes File Size = 1470 *; * : : Tree compression factor = 1.08 *; ******************************************************************************; ```; I am not sure whether it is worth trying to investigate (since it is small, it is the only case and it is the (older?) buitin zlib)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12439#issuecomment-1458508601:544,Wrap,Wrapper,544,https://root.cern,https://github.com/root-project/root/pull/12439#issuecomment-1458508601,1,['Wrap'],['Wrapper']
Integrability,"Now I'm doing another thing, and return again to this issue. I want to make a 3-dimensional fit, but some pdfs depend only on z, so I multiply them by uniform pdfs on x and y. I mean RooUniform for the whole domain of a variable, not what I proposed in https://github.com/root-project/root/issues/7880. So I create a uniform distribution like that. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);; RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);; RooProdPdf uxy_nt(""uxy_nt"", ""uxy_nt"", RooArgList(u_nt_x, u_nt_y));. So I have 5 pdfs for which I need to create a separate uniform distribution on (x, y), which in turn requires creation of new pdfs on x (and on y), which are all uniform and absolutely the same. This leads to 15 new lines of code, which is not that much, but seems redundant (as names and titles of the uniform distribution on all x) and even more error-prone (because of very similar code). Maybe there must be a way to explicitly allow same pdfs, if you know that they are really identical ones with same parameters? Say a new class, RooRefPdf, RooCopyPdf, ... .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8000#issuecomment-830081883:111,depend,depend,111,https://root.cern,https://github.com/root-project/root/issues/8000#issuecomment-830081883,1,['depend'],['depend']
Integrability,Now committed as https://github.com/llvm/llvm-project/commit/6415f424bc2a3bbb4f2fd7bb67863968ac3c19f6; rebased and adapted the commit message.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7757#issuecomment-815489313:134,message,message,134,https://root.cern,https://github.com/root-project/root/pull/7757#issuecomment-815489313,1,['message'],['message']
Integrability,"Now that #5297 is merged, we can activate this, and fix the few tests that actually need diagnostic messages.; @Axel-Naumann @eguiraud ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-639301827:100,message,messages,100,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-639301827,1,['message'],['messages']
Integrability,"Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14410#issuecomment-1915646158:138,message,messages,138,https://root.cern,https://github.com/root-project/root/pull/14410#issuecomment-1915646158,1,['message'],['messages']
Integrability,"OK @MarkusFrankATcernch looks good, LGTM and we can commit separately your macro in the test suite, but let's do this Monday to check how to integrate it properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11060#issuecomment-1199231161:141,integrat,integrate,141,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1199231161,1,['integrat'],['integrate']
Integrability,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy?. If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working?. IMO the right steps are:; 1. get your extension into zmq; 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870477797:337,integrat,integrated,337,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870477797,3,['integrat'],"['integrate', 'integrated', 'integration']"
Integrability,"OK thanks, I understand better now. When you invalidate the contract with the linker, just as when you rely on undefined behavior, the results are not reliable anymore. Even though your code seems to suggest that it's because of ROOT that's *not* the case: the use of some other library, other code, might just as well cause problems. Please remove the two symbols with the same name and your problems will vanish. The fact that ROOT is triggering it doesn't mean that it's causing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8256#issuecomment-851285161:60,contract,contract,60,https://root.cern,https://github.com/root-project/root/issues/8256#issuecomment-851285161,1,['contract'],['contract']
Integrability,OK thanks. So then my current understanding is that we cannot use any distro packages for any of this for the time being: Ubuntu does not have a dedicated zppzmq; Fedora's depends on zeromq version 4.3.4 and thus cannot be used. We need to revisit this as the upcoming zeromq version makes it into distros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9430#issuecomment-993479184:172,depend,depends,172,https://root.cern,https://github.com/root-project/root/issues/9430#issuecomment-993479184,1,['depend'],['depends']
Integrability,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11863#issuecomment-1344487042:204,depend,dependabot,204,https://root.cern,https://github.com/root-project/root/pull/11863#issuecomment-1344487042,4,['depend'],['dependabot']
Integrability,"OK, I'll check what to do on Windows and MacOS (i.e. all non-X platforms since `fontconfig` depends on X)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8357#issuecomment-867706753:92,depend,depends,92,https://root.cern,https://github.com/root-project/root/issues/8357#issuecomment-867706753,1,['depend'],['depends']
Integrability,"OK, merging this and backporting once confirmed that it works with the DD4hep integration",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11272#issuecomment-1232648464:78,integrat,integration,78,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1232648464,1,['integrat'],['integration']
Integrability,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:; ```; With the provided path, there will be 1 file uploaded; Starting artifact upload; For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging; Artifact name is valid!; Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s); Total size of all the files uploaded is 661143 bytes; File upload process has finished. Finalizing the artifact upload; Artifact has been finalized. All files have been successfully uploaded!. The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes; The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded!; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14657#issuecomment-1947882129:14,message,message,14,https://root.cern,https://github.com/root-project/root/pull/14657#issuecomment-1947882129,1,['message'],['message']
Integrability,"OT/TCanvas.hxx:19:; 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives; 14:16:07 #include ""ROOT/TDrawingAttr.hxx""; 14:16:07 ^; 14:16:07 In file included from input_line_13:10:; 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'; 14:16:07 #include <ROOT/TPadPainter.hxx>; 14:16:07 ~~~~~~~~^; 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h); 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so; ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle).; ```; module ""ROOTGraphicsPrimitives"" {; requires cplusplus; module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }; module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }; module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }; module ""ROOT/TDrawingOpts",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2091#issuecomment-392598607:1979,depend,dependency,1979,https://root.cern,https://github.com/root-project/root/pull/2091#issuecomment-392598607,1,['depend'],['dependency']
Integrability,Object using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: constr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-596563785:1567,interface,interface,1567,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-596563785,1,['interface'],['interface']
Integrability,Object.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] . And 2 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-596563785:1818,interface,interface,1818,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-596563785,4,['interface'],['interface']
Integrability,Oh and maybe it would be good to have a shorter commit message with maximum 72 characters,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14440#issuecomment-1911752472:55,message,message,55,https://root.cern,https://github.com/root-project/root/pull/14440#issuecomment-1911752472,1,['message'],['message']
Integrability,"Oh, I was not on my mind that I introduced this new dependecy on `gtest`! I have to discuss with the other ROOT core team members if we really want this. But I think nowadays, `gtest` is available basically everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16612#issuecomment-2396288139:52,depend,dependecy,52,https://root.cern,https://github.com/root-project/root/issues/16612#issuecomment-2396288139,1,['depend'],['dependecy']
Integrability,"Oh, and I think with `MapV()` being so close to `Map()`, we can make `Map()` a wrapper of `MapV()` and expect (hopefully) the compiler to optimize away the dummy `nItems` calculation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8210#issuecomment-844936847:79,wrap,wrapper,79,https://root.cern,https://github.com/root-project/root/pull/8210#issuecomment-844936847,1,['wrap'],['wrapper']
Integrability,"Ok I see now that this PR already addresses some of my comments in #7314 :smile: . Still:; - I would not change the convention for the naming of the test files. Just `classname_testedfunctionality.py`, without the `test_` prefix.; - It could be a good moment to add Doxygen documentation to the Roofit classes. Example for [TTree](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_ttree.py#L11-L131).; - To be discussed the reorganization with just one pythonizor function in `__init__.py`. A priori it is not bad since the modularity is preserved with one separate Python module and class per C++ class to be pythonized, but the way the pythonizations are injected can be a bit limiting (e.g. what happens if you want to add a pythonization in C++, or preserve the original class method you are replacing).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7753#issuecomment-820251767:714,inject,injected,714,https://root.cern,https://github.com/root-project/root/pull/7753#issuecomment-820251767,1,['inject'],['injected']
Integrability,Ok the `#ifdef` is not catching this toolchain. Seems to be Centos7 from a previous message -- are you using the default system compiler or are you getting it from devtoolset?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7115#issuecomment-776693977:84,message,message,84,https://root.cern,https://github.com/root-project/root/issues/7115#issuecomment-776693977,1,['message'],['message']
Integrability,"Ok the issue seems to be the `0` in the `'data'` entry of the dict. . probably this is interpreted as None if it is zero and numpy tries to read the data trough the buffer interface of the object. > If this key is not present (or returns None), then memory sharing will be done through the buffer interface of the object itself. ```python; import numpy; class empty_test:; 	__array_interface__ = \; {'shape': (0L,), ; 'version': 3, ; 'data': (1, False), ; 'typestr': '<f4'}. print(numpy.asarray(empty_test())); ```. so something like. ```c++; if(cobj->empty()){; PyDict_SetItemString(dict, ""data"",; PyTuple_Pack(2, PyLong_FromLong(reinterpret_cast<long>(-1)), Py_False));; }; ```. in the Pythonization.cxx; should fix this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3528#issuecomment-472365934:172,interface,interface,172,https://root.cern,https://github.com/root-project/root/pull/3528#issuecomment-472365934,2,['interface'],['interface']
Integrability,"Ok you can always construct something that fails, but the relevance is still debatable if nobody injects into `std::Detail`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-2372395169:97,inject,injects,97,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-2372395169,1,['inject'],['injects']
Integrability,"Ok, I did the apt install as you suggested (with the admin account) and I now get:; ```; $ qhelpgenerator; Missing input file name. Usage:. qhelpgenerator <file> [options]. -o <output-file> Generates a Qt compressed help; called <output-file> (*.qch) for the; Qt help project <file> (*.qhp).; Generates a Qt help collection; called <output-file> (*.qhc) for the; Qt help collection project <file> (*.qhcp).; If this option is not specified; a default name will be used; (*.qch for *.qhp and *.qhc for *.qhcp).; -c Checks whether all links in HTML files; point to files in this help project.; -s Suppresses status messages.; -v Displays the version of ; qhelpgenerator. ```; So I guess it is installed ... should I relaunch the ref guide build ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1009987639:613,message,messages,613,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1009987639,2,['message'],['messages']
Integrability,"Ok, but there is a double delete, and with a bit of `CLING_DEBUG=1` I think I was able to guess what is going on:. `cmssw/DataFormats/TrackCandidate/interface/TrajectoryStopReasons.h` has the following `static const std::string` array: https://github.com/cms-sw/cmssw/blob/86e051b0c241cba35601a6095391324b1e4bfd7b/DataFormats/TrackCandidate/interface/TrajectoryStopReasons.h#L24-L40; ```c++; namespace StopReasonName {; static const std::string StopReasonName[] = {; ""UNINITIALIZED"", // 0; ""MAX_HITS"", // 1; ""MAX_LOST_HITS"", // 2; ""MAX_CONSECUTIVE_LOST_HITS"", // 3; ""LOST_HIT_FRACTION"", // 4; ""MIN_PT"", // 5; ""CHARGE_SIGNIFICANCE"", // 6; ""LOOPER"", // 7; ""MAX_CCC_LOST_HITS"", // 8; ""NO_SEGMENTS_FOR_VALID_LAYERS"", // 9; ""SEED_EXTENSION"", // 10; ""NOT_STOPPED"" // 11 (be careful, NOT_STOPPED needs to be the last,; // its index differs from the enumeration value); };; };; ```. That header + `static const std::string` array are `#include`d into multiple dictionaries / Cling transactions and eventually double-deleted. Standalone reproducer in pure ROOT:; ```; $ gdb --args root.exe -q -e 'namespace NS { static const std::string Reason[] = { ""stopped"" }; }' -e 'NS::Reason[0]' -e 'NS::Reason[0]'; [...]; (gdb) b cling::IncrementalExecutor::runAndRemoveStaticDestructors; Function ""cling::IncrementalExecutor::runAndRemoveStaticDestructors"" not defined. ; Make breakpoint pending on future shared library load? (y or [n]) y ; Breakpoint 1 (cling::IncrementalExecutor::runAndRemoveStaticDestructors) pending.; (gdb) r; [...]; Breakpoint 1, cling::IncrementalExecutor::runAndRemoveStaticDestructors (this=0x46d3f0, T=0x1c44750); 180 assert(T && ""Must be set"");; (gdb) b free; Breakpoint 2 at 0x7ffff4497e0c: free. (6 locations) ; (gdb) commands ; Type commands for breakpoint(s) 2, one per line. ; End with a line saying just ""end"". ; >printf ""free(%p)\n"", $rdi ; >continue ; >end ; (gdb) c; ```. This now jumps from one `runAndRemoveStaticDestructors` to the next and collects the pointers that are passe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429#issuecomment-1688088967:149,interface,interface,149,https://root.cern,https://github.com/root-project/root/issues/13429#issuecomment-1688088967,2,['interface'],['interface']
Integrability,"Ok, can I at least ask to write it in the commit message :)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14590#issuecomment-1932208194:49,message,message,49,https://root.cern,https://github.com/root-project/root/pull/14590#issuecomment-1932208194,1,['message'],['message']
Integrability,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2252647669:23,depend,depends,23,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2252647669,2,['depend'],['depends']
Integrability,"Ok, that's close. @etejedor or @vepadulano are the experts in any case. ROOT itself does the job regarding error messages in case of NaN.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12296#issuecomment-1438633131:113,message,messages,113,https://root.cern,https://github.com/root-project/root/issues/12296#issuecomment-1438633131,1,['message'],['messages']
Integrability,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16612#issuecomment-2396408609:180,depend,dependency,180,https://root.cern,https://github.com/root-project/root/issues/16612#issuecomment-2396408609,1,['depend'],['dependency']
Integrability,"Ok. Is that possible to remake the std.pcm?; rm /Users/couet/git/couet-root-bin/lib/std.pcm ; make -C /Users/couet/git/couet-root-bin/ . or similar?. There are similar reports of this error message, I haven't found anything that is close enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-693433582:190,message,message,190,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-693433582,1,['message'],['message']
Integrability,"Okay, I just noticed that you wrote you cannot reproduce on lxplus, so I'm not doing something entirely wrong. The two most likely causes are that you have some local `.rootrc` file (try with `root -n`), or that both lxplus and me are missing some optional dependencies that activate some problematic loading. From CMake, I get: `asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_openui5 builtin_vdt builtin_xxhash clad dataframe davix exceptions gdml http imt mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd` Maybe you have some additional packages here?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-899445642:257,depend,dependencies,257,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-899445642,1,['depend'],['dependencies']
Integrability,"Okay, here are the dependencies at the moment (and users for the first few); ```; Fit; ParameterSettings.h (Minuit, Minuit2, RooFit, and MathCore). Math; Error.h (Hist) -> Might not be used in Minuit2?; FitMethodFunction.h (MathCore, MathMore, Minuit2); Functor.h (Lots of uses, including tutorial); GenAlgoOptions.h (MathCore, MathMore); IFunction.h; IFunctionfwd.h; IOptions.h; Minimizer.h; MinimizerOptions.h; Util.h; WrappedFunction.h; WrappedParamFunction.h. Math; GenAlgoOptions.cxx; MinimizerOptions.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369583839:19,depend,dependencies,19,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369583839,3,"['Wrap', 'depend']","['WrappedFunction', 'WrappedParamFunction', 'dependencies']"
Integrability,"On 02/10/17 11:43, Guilherme Amadio wrote:; >; > Let's see how this goes now that we are back on the old externals...; >; > I would prefer avoiding the smart pointers with ROOT 6 interfaces, ; > because I'm sure there are corner cases where it will lead to ; > problems, and I pointed out some of it in previous comments.; >; > Other than that, I once this PR is ready for merge, the typos, etc, ; > should be amended into the right commits.; >; I am not sure I understand in which commit the typo fix will go.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub ; > <https://github.com/root-project/root/pull/1073#issuecomment-333487667>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/AGNuUxFmbbOXWlPg2lV0qNy3rDTPoYFmks5soLArgaJpZM4Pn4OQ>.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1073#issuecomment-333489320:179,interface,interfaces,179,https://root.cern,https://github.com/root-project/root/pull/1073#issuecomment-333489320,1,['interface'],['interfaces']
Integrability,On `file:\\` I hesitate on whether this is a user request to use the posix interface no matter what or whether the performance difference between `posix-eos` and `xrootd-eos` is always so great that we should make the right choice for the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1309008527:75,interface,interface,75,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1309008527,1,['interface'],['interface']
Integrability,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):; ```; {; gROOT->ProcessLine("".L loadcode.C+"");; ...; TTree *t; _file0->GetObject(""t"",t);; }; ```; The use of TTree means that before executing the script libTree is laoded.; During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) .; And in this case the result is:; ```; loadcode_C.so libTree.6.21.01.so libTree.so; ```; which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library?. 2) When should gSystem->Load automatically reload a library, if ever?. @Axel-Naumann @vgvassilev opinions?. PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420#issuecomment-618042721:415,depend,depend,415,https://root.cern,https://github.com/root-project/root/pull/5420#issuecomment-618042721,3,['depend'],['depend']
Integrability,"On top of what we have already and a bit more of pyroot testing, I need to figure out what to do with the signatures. The fact that the size of bins is an integer and not a size_t is a problem for initialiser lists. Now one would do in Python:; ``` py; v = ROOT.std.vector('double')(); for i in [0,1,2,3,4,5]: v.push_back(i); tdf.Histo1D(('myhisto', 'myhisto', int(v.size()), v.data()),""mycol""); ```; that cast is bad. What would be desirable would be:; ``` py; tdf.Histo1D(('myhisto', 'myhisto', v.size(), v.data()),""mycol""); ```; or even; ``` py; tdf.Histo1D(('myhisto', 'myhisto', v),""mycol""); ```; The last but one line involves a change in the interface (which makes it incompatible with the one of TH*) while the last one also a change in PyROOT for implicit conversions to array_view<T>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1294#issuecomment-342848318:649,interface,interface,649,https://root.cern,https://github.com/root-project/root/pull/1294#issuecomment-342848318,1,['interface'],['interface']
Integrability,"One cannot run tutorial without ""davix"" plugin.; But even after I enable it - it crashes with following messages:; ```; terminate called after throwing an instance of 'ROOT::Experimental::RException'; what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!); At:; ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]; ```; May be @jblomer can comment?. Regarding `RCanvas` - there are two instances of them.; Why one need to call `Update/Modify` only for first one?. Again, it is only demonstration of very special functionality, should not be present in this tutorial.; If tutorial does not work, I will have to fix such drawing by other means.; For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6808#issuecomment-745146481:104,message,messages,104,https://root.cern,https://github.com/root-project/root/pull/6808#issuecomment-745146481,1,['message'],['messages']
Integrability,"One challenge (see the related unfinished PR: https://github.com/root-project/root/pull/1053) is that it is always ""risky"" to make memory allocation (or any other 'can fail' operation) within a signal handling routine. I would strongly recommend that the capture the stack-trace be attempted in a separate PR. (And it would be even better if #1053 was first completed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10366#issuecomment-1122806975:210,rout,routine,210,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1122806975,1,['rout'],['routine']
Integrability,One meta point. I am not sure whether a global setting (as opposed to a per tree) setting is the right interface. (As is the setting is inherently non-thread safe and another thread could switch during the creation of a TTree) ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1003#issuecomment-329969189:103,interface,interface,103,https://root.cern,https://github.com/root-project/root/pull/1003#issuecomment-329969189,1,['interface'],['interface']
Integrability,One more thing before merging: ; can you maybe add in the commit message a note that this is just a visual change and it has no effect,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5368#issuecomment-614703276:65,message,message,65,https://root.cern,https://github.com/root-project/root/pull/5368#issuecomment-614703276,1,['message'],['message']
Integrability,"One option is to add a pythonization to your vector class to use the `__getitem__` of `std::vector`. Something like this:; ```python; import cppyy. cppyy.cppdef(r""""""; template <typename TYPE>; struct vec : public std::vector<TYPE> {; vec<TYPE>& operator()(int ){return *this;}; };. using my_tmp = vec<double>;; """"""). def pythonizor(klass, name):; if name.startswith('vec<double>'):; klass.__getitem__ = cppyy.gbl.std.vector('double').__getitem__. cppyy.py.add_pythonization(pythonizor). b = cppyy.gbl.my_tmp(); b.emplace_back(); print(b[0]); ```. It would need to be generalized to that the template parameter is parsed (here I just show the example for double). Note that the pythonizations are injected lazily: only when your class is actually used for the first time, the injection will happen. More info here:; https://cppyy.readthedocs.io/en/latest/pythonizations.html#python-callbacks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7179#issuecomment-778279150:696,inject,injected,696,https://root.cern,https://github.com/root-project/root/issues/7179#issuecomment-778279150,2,['inject'],"['injected', 'injection']"
Integrability,"One thing RDF could do is:; ```; chain->SetBranchStatus(""*"", kFALSE);; for( name : list_of_names_of_used_top_level_used) ; chain->SetBranchStatus(std::string(name ) + ""*"", kTRUE);; ```; This would have the side effect to have all the TTree interface ignore the unused branches (that includes not copying them as part of CloneTree).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7727#issuecomment-821198734:240,interface,interface,240,https://root.cern,https://github.com/root-project/root/issues/7727#issuecomment-821198734,1,['interface'],['interface']
Integrability,"Only remaining open review question: is Minuit still a dependency? https://github.com/root-project/root/pull/8596#discussion_r663897546. Other than that I addressed everything. Let's see whether it compiles :). Note: we still need to merge #8567 and then rebase this PR on that, so don't merge yet please.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-880927548:55,depend,dependency,55,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-880927548,1,['depend'],['dependency']
Integrability,"Originally, I used https://github.com/GooFit/Minuit2 - that uses a python script to re-copy the changed files from the ROOT sources. Being a git repository, it also easily is included as a submodule in the `/extern` folder for GooFit, for example. After meeting and talking with @lmoneta a couple of days ago over a coffee, he outlined the procedure I initially implemented. He showed me the old ""build"" directory, with an old bash script that copied the necessary files out. He wanted me to make a new folder to eventually replace his build folder. The idea is that you could create source distributions that would be packaged and made available as downloads to continue the outdated ones available here: http://project-mathlibs.web.cern.ch/project-mathlibs/minuit/release/download.html. I added this though `make package_source`, and included `make package` for binary distributions as well. The integrated version does look a bit better, though it is a bit more invasive and not nearly as well separated. I do need to copy to `/inc/Math`, etc, since a source distribution needs to be in the source directory. Everything is copied to `INSTALL_PREFIX/include` when it's installed or packaged for a binary distribution. As for use, a git only solution really is not feasible, unfortunately, with any method that does not include git submodules. The current methods for a user are:. * Install beforehand from one of the downloadable packages, either building a source package or installing a binary package. This is the way some people will get it, but not ideal for a modern package that wants to have minimal dependencies.; * Have CMake download and build the package with `ExternalProject` - probably the best solution for now, still not as nice for something like GooFit that already has all dependencies as git submodules.; * Check out all of ROOT as a submodule, then `add_subdirectory(extern/root/math/minuit2)`. Much more disk space usage that needed, but otherwise also a decent solution. Migh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369601161:898,integrat,integrated,898,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369601161,1,['integrat'],['integrated']
Integrability,"Other generic request: it is required to write meaningful commit messages and squash ""non functional"" changes (like remove one empty line and etc.).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5179#issuecomment-601124789:65,message,messages,65,https://root.cern,https://github.com/root-project/root/pull/5179#issuecomment-601124789,1,['message'],['messages']
Integrability,Other todos (potentially convert into issues):. - Document in the RDF doxygen introduction; - Integrate into the `df10*` tutorials,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6380#issuecomment-696097350:94,Integrat,Integrate,94,https://root.cern,https://github.com/root-project/root/pull/6380#issuecomment-696097350,1,['Integrat'],['Integrate']
Integrability,"Ouch - that's terrible (and I remember now having stepped into this pitfall before). It's ""simulating"" `TCollection::AddAt(idx, val)`. We need to choose between breaking backward compatibility and fixing interface expectation :-/ I really don't know what to do here. I'd even argue that we should remove the function altogether, as the cleanest solution. I will close this in favor of removal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7824#issuecomment-817702408:204,interface,interface,204,https://root.cern,https://github.com/root-project/root/pull/7824#issuecomment-817702408,1,['interface'],['interface']
Integrability,Our current understanding is that we lack the following Python packages for the optional runtime dependencies of TMVA; ```; tensorflow ; keras; torch; sklearn; xgboost; sonnet; graph_nets; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14553#issuecomment-1941552355:97,depend,dependencies,97,https://root.cern,https://github.com/root-project/root/issues/14553#issuecomment-1941552355,1,['depend'],['dependencies']
Integrability,"P.S.: The commit message references a geom PR, it should close https://github.com/root-project/root/issues/10984",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13751#issuecomment-1740176300:17,message,message,17,https://root.cern,https://github.com/root-project/root/pull/13751#issuecomment-1740176300,1,['message'],['message']
Integrability,PR #5914 should give us a better message what misses a dependency on Hist...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5800#issuecomment-648259207:33,message,message,33,https://root.cern,https://github.com/root-project/root/pull/5800#issuecomment-648259207,2,"['depend', 'message']","['dependency', 'message']"
Integrability,"PSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; root [2]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:5925,interface,interface,5925,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,2,['interface'],['interface']
Integrability,"Personally I avoid merging parameters, the GNU/getopts standards might allow it, but I personally think it's a source of confusion for new users. Regardless I'll do it, but @lmoneta has mentioned on the forums that he might be making a seperate PR swapping the protocol from HTTP to HTTPS, since this actually seems to be what the redirect is doing to begin with. Incidentally every instance of curl in this PR does seem to be using http. Alternative he proposed `data = TFile.Open('http://root.cern.ch/files/tmva_class_example.root')`. Personally I think the best approach would be to use both, since it ensures the security guarantees of HTTPS whilst also proactively fixing any potential redirects in the future just on the off chance. Would you like me to handle HTTPS in this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7725#issuecomment-809361845:261,protocol,protocol,261,https://root.cern,https://github.com/root-project/root/pull/7725#issuecomment-809361845,1,['protocol'],['protocol']
Integrability,"Personally I wouldn't do this: TSpectrum has no alternative (no, RooFit doesn't do peak finding), we get questions about it on the forum occasionally, and it also doesn't have any external dependencies. To me, this is a good candidate to stay as ""legacy"". We don't remove it and don't disable it, but also don't make an effort to maintain it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16351#issuecomment-2323502062:189,depend,dependencies,189,https://root.cern,https://github.com/root-project/root/pull/16351#issuecomment-2323502062,1,['depend'],['dependencies']
Integrability,Please consider adding a copy/paste of the warning message in the commit log and/or explicit what the warning was about.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16630#issuecomment-2400952330:51,message,message,51,https://root.cern,https://github.com/root-project/root/pull/16630#issuecomment-2400952330,1,['message'],['message']
Integrability,"Please let me know how you want to proceed, in particular:. * One PR / Three PR; * Start integration from bug fix branch / Start integration from master branch; * It would also be nice to bump arrow to 0.11.1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-453117406:89,integrat,integration,89,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-453117406,2,['integrat'],['integration']
Integrability,"Please read my commit messages on this subject, where I explain why I am making the changes to use includes from the source directory. In particular, see commit 084303671a6cc2184ccfa6c1f7153b5415a50792.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170#issuecomment-600595943:22,message,messages,22,https://root.cern,https://github.com/root-project/root/pull/5170#issuecomment-600595943,1,['message'],['messages']
Integrability,"Please, if you can, do the PR. I actually don't understand where it should go, `v6-28-00-patches` branch of ROOT?. I have one more observation. When I don't modify the cmake, then as expected I get during configuration message; ```; Not able to recognize SSL version 3.1.0, disable SSL; ```; and `civetweb` is built with `-DNO_SSL` but `libssl.so.3` still gets linked. As I understand, this is because the `libRHTTP.so` is linked to `libNet.so` which links `libssl.so.3`. This is quite misleading as looking at `ldd libRHTTP.so` one can come to conclusion that it has been built with support of openssl even though this is not the case. I understand that this can't be avoided, it is just an observation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12766#issuecomment-1542123980:219,message,message,219,https://root.cern,https://github.com/root-project/root/issues/12766#issuecomment-1542123980,1,['message'],['message']
Integrability,"Possible reason for the problem, in Cling (also Clang) some headers are included automatically at startup to simplify the operation. In the case of CUDA, the order of the headers is really important because CUDA has to annotate the `stl` functions to be available on CPU and GPU (e.g. `int std::abs(int n)` -> `__device__ __host__ std::abs(int n))`. If the order is not correct, various things can happen (no GPU version available, redefinition errors, error messages that have nothing to do with the actual problem ...). A good starting point for bug hunting is to compare the startup process of vanilla cling and ROOT cling.; * A good starting point for Cling the is the function [`CIFactory::createCIImpl()`](https://github.com/root-project/root/blob/de3514c2a88f653584108d2be64e28f50a2b29da/interpreter/cling/lib/Interpreter/CIFactory.cpp#L1214); * In ROOT, some extra headers are injected (before?) in the [TCling](https://github.com/root-project/root/blob/a56901942dfefa6e7e2e7df397a60c9d1cda31a0/core/metacling/src/TCling.cxx#L1327) class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518#issuecomment-808738232:459,message,messages,459,https://root.cern,https://github.com/root-project/root/issues/7518#issuecomment-808738232,4,"['inject', 'message']","['injected', 'messages']"
Integrability,"Possibly relevant: the last messages are:; ```Console; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for art::detail::are_cv_compatible<const arttest::StringProduct,const arttest::StringProduct*>. Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for arttest::addr; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for arttest::addr; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for arttest::addr; ```; There is in fact no `arttest::addr`. There _is_, however a `SFINAE` pair of function templates:; ```C++; namespace art {; namespace detail {; template <typename TO, typename FROM>; constexpr std::enable_if_t<are_cv_compatible<TO, FROM>::value,; std::add_pointer_t<std::remove_pointer_t<TO>>>; addr(FROM& from);. template <typename TO, typename FROM>; constexpr std::enable_if_t<!are_cv_compatible<TO, FROM>::value &&; are_cv_compatible<FROM, TO>::value,; std::add_pointer_t<std::remove_pointer_t<TO>>>; addr(FROM& from);; }; }; ```; defined in the same header as `art::detail::are_cv_compatible<...>(...)` (https://github.com/art-framework-suite/canvas/blob/c9ac983e2794a4391b1d6038842fec377e6a6884/canvas/Utilities/ensurePointer.h#L32#L48)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583#issuecomment-1015707866:28,message,messages,28,https://root.cern,https://github.com/root-project/root/issues/9583#issuecomment-1015707866,1,['message'],['messages']
Integrability,"Probably compatibility with other ROOT interfaces. But indeed I don't think we need to support this `TComplex` class that much. I have opened a PR to address this issue though, so it can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13730#issuecomment-1738868130:39,interface,interfaces,39,https://root.cern,https://github.com/root-project/root/issues/13730#issuecomment-1738868130,1,['interface'],['interfaces']
Integrability,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16675#issuecomment-2411268091:158,depend,dependency,158,https://root.cern,https://github.com/root-project/root/pull/16675#issuecomment-2411268091,1,['depend'],['dependency']
Integrability,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15321#issuecomment-2082084564:49,message,message,49,https://root.cern,https://github.com/root-project/root/issues/15321#issuecomment-2082084564,2,['message'],"['message', 'messages']"
Integrability,"Problem with changing of public interfaces - the changes themself.; RZip.h was introduced 5 years ago, but R__Zip (and several other) C functins exists for many years.; And some old ROOT-based apps may just import these symbols even without direct include of RZip.h.; See how changes looked when RZip.h was introduced:; https://github.com/root-project/root/commit/54aaba7dd8a877168f80b0dacb08748ea1d8fe28#diff-0e44fcc38860ef8d08ab17825437332e; In my mind it may end up in big problems. ; I do not see here any performance gain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4060#issuecomment-509808702:32,interface,interfaces,32,https://root.cern,https://github.com/root-project/root/pull/4060#issuecomment-509808702,1,['interface'],['interfaces']
Integrability,"Problem with files globing - it takes alll files. ; But depending on compiled ROOT components, some pythonization files should be excluded.; It is already happens with `dataframe` component here.; Some time ago we redo all c++ cmake files to avoid files globing - I guess here we also should avoid it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8509#issuecomment-866732469:56,depend,depending,56,https://root.cern,https://github.com/root-project/root/pull/8509#issuecomment-866732469,1,['depend'],['depending']
Integrability,"RD says it is line 1244 that causes a sigsegv. https://gitlab.cern.ch/HZZ/HZZSoftware/HZZAnalRun2Code/-/blob/changes-for-v25-fJVT/H4lAnalysisRun2/Root/H4lAnalRun2Init.cxx. At least nothing of the ATH_MSG_ERROR in the subsequent lines makes it into; the log. I`m not sure how close I can get to that in my test. Cheers,; Rod. On Wed, 16 Dec 2020 at 16:50, Attila Krasznahorkay <notifications@github.com>; wrote:. > Hmm... That in principle looks fine... So okay, your test job *is*; > relevant.; >; > Unfortunately I'm running out of ideas. The XRootD build in; > AnalysisBaseExternals does depend on a couple of libraries from the OS.; > But these should only be things that are part of HEP_OSlibs. So the worker; > nodes should not really have different versions of them...; >; > [bash][lxplus730]:~ > ldd -r /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrd*.so | grep "" /lib"" | sed ""s/\(.*\) (0x.*)/\1/g"" | sort | uniq; > 	libc.so.6 => /lib64/libc.so.6; > 	libcom_err.so.2 => /lib64/libcom_err.so.2; > 	libcrypt.so.1 => /lib64/libcrypt.so.1; > 	libcrypto.so.10 => /lib64/libcrypto.so.10; > 	libcurl.so.4 => /lib64/libcurl.so.4; > 	libdl.so.2 => /lib64/libdl.so.2; > 	libfreebl3.so => /lib64/libfreebl3.so; > 	libgssapi_krb5.so.2 => /lib64/libgssapi_krb5.so.2; > 	libidn.so.11 => /lib64/libidn.so.11; > 	libk5crypto.so.3 => /lib64/libk5crypto.so.3; > 	libkeyutils.so.1 => /lib64/libkeyutils.so.1; > 	libkrb5.so.3 => /lib64/libkrb5.so.3; > 	libkrb5support.so.0 => /lib64/libkrb5support.so.0; > 	liblber-2.4.so.2 => /lib64/liblber-2.4.so.2; > 	libldap-2.4.so.2 => /lib64/libldap-2.4.so.2; > 	libm.so.6 => /lib64/libm.so.6; > 	libnspr4.so => /lib64/libnspr4.so; > 	libnss3.so => /lib64/libnss3.so; > 	libnssutil3.so => /lib64/libnssutil3.so; > 	libpcre.so.1 => /lib64/libpcre.so.1; > 	libplc4.so => /lib64/libplc4.so; > 	libplds4.so => /lib64/libplds4.so; > 	libpthread.so.0 => /lib64/libpthread.so.0; > 	libresolv.so.2 => /lib64/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746590859:590,depend,depend,590,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746590859,1,['depend'],['depend']
Integrability,"ROOT failed to build for aarch64, the build error is; ```; Processing hsimple.C...; cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }; ninja: build stopped: subcommand failed.; error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build); ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15696#issuecomment-2326544365:426,integrat,integration,426,https://root.cern,https://github.com/root-project/root/pull/15696#issuecomment-2326544365,1,['integrat'],['integration']
Integrability,ROOT master based CMSSW releases also show the same resulsts:; - https://github.com/cms-sw/cmsdist/pull/6778#issuecomment-811474459 without #7752 . There is no hanging at build time but we see runtime crashes (https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-46d8cb/13898/runTheMatrix-results/1001.0_RunMinBias2011A+RunMinBias2011A+TIER0EXP+ALCAEXP+ALCAHARVDSIPIXELCALRUN1+ALCAHARVD1+ALCAHARVD2+ALCAHARVD3+ALCAHARVD4+ALCAHARVD5/step3_RunMinBias2011A+RunMinBias2011A+TIER0EXP+ALCAEXP+ALCAHARVDSIPIXELCALRUN1+ALCAHARVD1+ALCAHARVD2+ALCAHARVD3+ALCAHARVD4+ALCAHARVD5.log); - https://github.com/cms-sw/root/pull/152#issuecomment-811584967 with #7752 . No build or runtime errors but there are comparison differences.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-811655818:268,integrat,integration,268,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-811655818,1,['integrat'],['integration']
Integrability,"ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x5E02D73: std::char_traits<char>::compare(char const*, char const*, unsigned long) (char_traits.h:346); ==270704== by 0x5E0709A: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236); ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356); ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:224100,depend,depends,224100,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53); ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241); ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157); ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501); ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321); ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124); ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326); ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95); ==92602== by 0x4549833: THashTable::Add(TObject*) (THashTable.cxx:96); ==92602== by 0x4558607: TMap::Add(TObject*, TObject*) (TMap.cxx:66); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x1293AD8C: clang::Parser::TryAltiVecToken(clang::DeclSpec&, clang::SourceLocation, char const*&, unsigned int&, bool&) (Parser.h:854); ==92602== by 0x129233FB: clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) (ParseDecl.cpp:3312); ==92602== by 0x1291FDE3: clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) (ParseDecl.cpp:2455); ==92602== by 0x12913B5F: clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) (ParseDecl.cpp:55); ==92602== by 0x116EEC9F: cling::ParseProto::Parse(llvm::SmallVectorImpl<clang::Expr*>&, llvm::StringRef const&, cling::LookupHelper::DiagSetting, clang::Parser&, cling::Interpreter const*, cling::LookupHelper&) (LookupHelper.cpp:1678); ==92602== by 0x116EEB8F: cling::ParseProto::opera",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:10732,depend,depends,10732,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,ROOT::Math::IMultiGenFunctionTempl&lt;double&gt;’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:38:42: error: conflicting declaration ‘typedef using IBaseFunctionMultiDim = class ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt; ROOT::Math::IMultiGenFunction’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:24:7: error: conflicting declaration ‘struct RooMinimizer’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:30:7: error: conflicting declaration ‘struct RooFit::TestStatistics::RooAbsL’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:31:8: error: conflicting declaration ‘struct RooFit::TestStatistics::WrapperCalculationCleanFlags’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:37:46: error: ‘RooAbsL’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:37:53: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:46: error: ‘WrapperCalculationCleanFlags’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:74: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373555060:1447,Wrap,WrapperCalculationCleanFlags,1447,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373555060,1,['Wrap'],['WrapperCalculationCleanFlags']
Integrability,"Reason why it searched - it uses in public interfaces in following libraries:; * `ROOTEve`,; * `RooFitJSONInterface`; * `RooFitMultiProcess`. Without external `nlohmann_json` is not possible to link with these libraries. ; If ROOT build with external `nlohmann_json`, such external `nlohmann_json` must be provided.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1843267314:43,interface,interfaces,43,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1843267314,1,['interface'],['interfaces']
Integrability,Recent force push was just to fix a typo in the first commit message.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8751#issuecomment-982536582:61,message,message,61,https://root.cern,https://github.com/root-project/root/pull/8751#issuecomment-982536582,1,['message'],['message']
Integrability,Related forum post: https://root-forum.cern.ch/t/reading-root-files-with-minimal-dependencies/58899/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6471#issuecomment-2046653559:81,depend,dependencies,81,https://root.cern,https://github.com/root-project/root/issues/6471#issuecomment-2046653559,1,['depend'],['dependencies']
Integrability,"Related to the previous comment. Since people often call `fitTo` many times in a row, are we sure that there is no ""memory leak""? I guess these compiled functions take quite some time in memory if you do a fit 100 times. Can you clean up all the stuff that you declared to the interpreter when the wrapper gets out of scope?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11773#issuecomment-1343420510:298,wrap,wrapper,298,https://root.cern,https://github.com/root-project/root/pull/11773#issuecomment-1343420510,1,['wrap'],['wrapper']
Integrability,"Related to this problems, there was also a question on the forum:; * https://root-forum.cern.ch/t/roofit-numcpu-in-pyroot/57424. Then, there is also the possibility to build ROOT with the `std::unique_ptr` interfaces already:; * https://root.cern/doc/master/release-notes.html#compile-your-code-with-memory-safe-interfaces",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11397#issuecomment-1848591204:206,interface,interfaces,206,https://root.cern,https://github.com/root-project/root/issues/11397#issuecomment-1848591204,2,['interface'],['interfaces']
Integrability,"Removed the fallback to `main()`. The message now reads:; ```; warning: Failed to call `LHCb002(1, (const char**)nullptr)` to execute the macro. Add this function or rename the macro. Falling back to `.L`.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4244#issuecomment-523009077:38,message,message,38,https://root.cern,https://github.com/root-project/root/pull/4244#issuecomment-523009077,1,['message'],['message']
Integrability,"Removed the false comment and moved the `unique_ptr` declaration above `TextInputHolder`, in case `TextInputHolder::~TextInputHolder()` still access it (in the future). However, I am thinking about enhancing CLI completion support of cling. Such as tab completion. Currently cling only prints completion suggestion but does not complete the input buffer for the user when only single unambiguous completion exists. Also the completion does not recognize meta command like `.x`, `.L` so it does not try to complete its arguments (paths). And the path does not expand `~` to home dir.; @Axel-Naumann , do you think it is a good idea for cling to adopt `llvm::LineEditor` ? (https://llvm.org/doxygen/classllvm_1_1LineEditor.html) ; Or building cling's own readline/libedit wrapper? ; `core/textinput/src/textinput/doc/textinput.txt` states that `textinput` is created to avoid depending on readline/libedit in year 2011.; Is it still true today 2022? cling highly depends on llvm now so it should be fine to adopt `llvm::LineEditor` (created in 2013. `textinput` predates it).; I have a prototype cling with the above enhanced completion support based on libedit but I will only create PR if cling (and all root components currently using `textinput` ) are open to such changes and dependency. I can refactor to use `llvm::LineEditor` instead. It is not too hard since the latter is also a libedit wrapper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11274#issuecomment-1232115062:770,wrap,wrapper,770,https://root.cern,https://github.com/root-project/root/pull/11274#issuecomment-1232115062,5,"['depend', 'wrap']","['dependency', 'depending', 'depends', 'wrapper']"
Integrability,Removing the loading the list of function changes the semantic of the return value and indeed as Danilo points we need to understand *how* this routine (Cppyy::GetNumMethods) is used before knowing whether this is the best improvement.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1743#issuecomment-372645644:144,rout,routine,144,https://root.cern,https://github.com/root-project/root/pull/1743#issuecomment-372645644,1,['rout'],['routine']
Integrability,"Removing this patch will produce a problem with this macro:; ```; {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1) {; x1.push_back(E);; sig1.push_back(10*pow(E,-0.1));; sig2.push_back(15*pow(E,-0.15));; }; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; // comment or uncomment the following line to get diffrent plot; // mg->GetXaxis()->CenterTitle(true);; mg->Draw(""AL"");; }; ```; Without this patch you get a different X range depending if you center the X title or not. I guess we should keep the patch and understand why in log scale it crashes (it should be protected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9011#issuecomment-957818254:728,depend,depending,728,https://root.cern,https://github.com/root-project/root/issues/9011#issuecomment-957818254,1,['depend'],['depending']
Integrability,"Result after grepping ""inline"" for all the registered passes (for -O1):; ```; Module passes:; always-inline; inliner-wrapper; inliner-ml-advisor-release; print<inline-advisor>; inliner-wrapper-no-mandatory-first; partial-inliner; scc-oz-module-inliner; module-inline. Module analyses:; inline-advisor. CGSCC passes with params:; inline<only-mandatory>. Function passes:; partially-inline-libcalls; print<inline-cost>; print<inliner-size-estimator>. Function passes with Params:; ee-instrument<post-inline>. Function analyses:; inliner-size-estimator; ```. Corresponding passes:. ```; Module passes:; always-inline - AlwaysInlinerPass // Not disabled; inliner-wrapper - ModuleInlinerWrapperPass; inliner-ml-advisor-release - ModuleInlinerWrapperPass; print<inline-advisor> - InlineAdvisorAnalysisPrinterPass; inliner-wrapper-no-mandatory-first - ModuleInlinerWrapperPass; partial-inliner - PartialInlinerPass; scc-oz-module-inliner - buildInlinerPipeline; module-inline - ModuleInlinerPass; Module analyses:; inline-advisor - InlineAdvisorAnalysis; CGSCC passes with params:; inline<only-mandatory> - InlinerPass; Function passes:; partially-inline-libcalls - PartiallyInlineLibCallsPass ; print<inline-cost> - InlineCostAnnotationPrinterPass; print<inliner-size-estimator> - InlineSizeEstimatorAnalysisPrinterPass; Function passes with Params:; ee-instrument<post-inline> - EntryExitInstrumenterPass // Not disabled; Function analyses:; inliner-size-estimator - InlineSizeEstimatorAnalysis; ```. Passes disabled with the callback:; ```; ModuleInlinerWrapperPass; InlineAdvisorAnalysisPrinterPass; PartialInlinerPass; buildInlinerPipeline; ModuleInlinerPass; InlinerPass; InlineAdvisorAnalysis; PartiallyInlineLibCallsPass; InlineCostAnnotationPrinterPass; InlineSizeEstimatorAnalysisPrinterPass; InlineSizeEstimatorAnalysis; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1906191855:117,wrap,wrapper,117,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1906191855,4,['wrap'],"['wrapper', 'wrapper-no-mandatory-first']"
Integrability,Roottest_cling_functionTemplate_testcint is a pre-existing 'missing' dependency rebuild.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2834#issuecomment-432441664:69,depend,dependency,69,https://root.cern,https://github.com/root-project/root/pull/2834#issuecomment-432441664,2,['depend'],['dependency']
Integrability,"Running doxygen might give you a warning message about qhelpgenerator. It could be the path, see https://stackoverflow.com/a/49751322",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-902818366:41,message,message,41,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-902818366,1,['message'],['message']
Integrability,"SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed.; Aborted (core dumped); ```; Even though Vc.pcm is sitting right next to MathCore.pcm; export ROOT_INCLUDE_PATH does solve this problem (see the other tests in the repeater), but at least to me this behaviour or at least the error message seems questionable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:4412,message,message,4412,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,2,['message'],['message']
Integrability,"Same operating system as @mkrzewic.; Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell; [...]; -- Building Cling as part of ROOT; CMake Error at interpreter/cling/CMakeLists.txt:196 (message):; NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred!; ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell; [...]; -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred!; ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:; ```shell; [ 98%] Linking CXX executable ../../bin/hist2workspace; [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so; [ 98%] Built target hist2workspace; [100%] Built target RooFitHS3; [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so; [100%] Built target RooFitXRooFit; [100%] Built target onepcm; [100%] Generating lib/modules.idx; Abort trap (core dumped); --- lib/modules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865#issuecomment-1779361849:313,message,message,313,https://root.cern,https://github.com/root-project/root/issues/13865#issuecomment-1779361849,2,['message'],['message']
Integrability,"See [godbolt](https://www.godbolt.org/#g:!((g:!((g:!((h:codeEditor,i:(filename:'1',fontScale:14,fontUsePx:'0',j:1,lang:c%2B%2B,selection:(endColumn:1,endLineNumber:10,positionColumn:1,positionLineNumber:10,selectionStartColumn:1,selectionStartLineNumber:10,startColumn:1,startLineNumber:10),source:'template+%3Cclass+...T%3E%0Astruct+P+%7B%7D%3B%0A%0Atemplate+%3Cclass+ONE,+template+%3Cclass+O_%3E+class...+T%3E%0Astruct+U:+T%3CONE%3E...+%7B%0A++++using+u+%3D+P%3Ctypename+T%3CONE%3E::t...%3E%3B%0A%7D%3B%0A%0AU%3Cint%3E+u%3B%0A'),l:'5',n:'0',o:'C%2B%2B+source+%231',t:'0'),(h:compiler,i:(compiler:vcpp_v19_latest_x64,deviceViewOpen:'1',filters:(b:'0',binary:'1',binaryObject:'1',commentOnly:'0',debugCalls:'1',demangle:'0',directives:'0',execute:'1',intel:'0',libraryCode:'0',trim:'1'),flagsViewOpen:'1',fontScale:14,fontUsePx:'0',j:1,lang:c%2B%2B,libs:!(),options:'',overrides:!(),selection:(endColumn:1,endLineNumber:1,positionColumn:1,positionLineNumber:1,selectionStartColumn:1,selectionStartLineNumber:1,startColumn:1,startLineNumber:1),source:1),l:'5',n:'0',o:'+x64+msvc+v19.latest+(Editor+%231)',t:'0')),k:50,l:'4',n:'0',o:'',s:0,t:'0'),(g:!((h:output,i:(compilerName:'x64+msvc+v19.latest',editorid:1,fontScale:14,fontUsePx:'0',j:1,wrap:'1'),l:'5',n:'0',o:'Output+of+x64+msvc+v19.latest+(Compiler+%231)',t:'0')),header:(),k:50,l:'4',n:'0',o:'',s:0,t:'0')),l:'2',n:'0',o:'',t:'0')),version:4)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13015#issuecomment-1591487417:1240,wrap,wrap,1240,https://root.cern,https://github.com/root-project/root/pull/13015#issuecomment-1591487417,1,['wrap'],['wrap']
Integrability,See also https://chris.beams.io/posts/git-commit for the usual conventions around git commit messages. To play nice with `git --oneline` or other ways to visualize git logs it should look something like this:. ```; [DF] Use FromSpec in df106_HiggstoFourLeptons.py tutorial. Now one RDF is used instead of a number of individual ones; and users can see what a dataset specification file looks like; and how to access the metadata information.; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12929#issuecomment-1573963050:93,message,messages,93,https://root.cern,https://github.com/root-project/root/pull/12929#issuecomment-1573963050,1,['message'],['messages']
Integrability,"See the linked PR for a hack to fix the issue. Looking at the issue in a debug build, I could find out that cppyy is the culprit. The issue is that if you import ROOT in another process (and the import happens in a previously pickled function), then cppyy is not there and some random INCREF on the cppyy module segfaults because of accessing a nullptr. It's to be discussed how to fix this properly since the implicit contracts done by pickle are not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6765#issuecomment-730306449:419,contract,contracts,419,https://root.cern,https://github.com/root-project/root/issues/6765#issuecomment-730306449,2,['contract'],['contracts']
Integrability,Seeing how many places this code needed to be copied lets me thing it would be worthwhile to refactor the code to read and write axes in the HistFactory implementation to re-use the readBinnedData functionality from RooWSJSONFactoryTool via some to-be-defined interface. What do you think @guitargeek ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13078#issuecomment-1603097931:260,interface,interface,260,https://root.cern,https://github.com/root-project/root/pull/13078#issuecomment-1603097931,1,['interface'],['interface']
Integrability,"Sergey, semi-related, have been running with valgrind (root supressions on), and this came up:; ```; root [1] ==975849== Thread 8 civetweb-worker:; ==975849== Conditional jump or move depends on uninitialised value(s); ==975849== at 0x4CD6584: R__longest_match (ZDeflate.c:430); ==975849== by 0x4CD6EA8: R__Deflate (ZDeflate.c:677); ==975849== by 0x4CD6084: R__memcompress (Bits.c:329); ==975849== by 0x22699978: THttpCallArg::CompressWithGzip() (THttpCallArg.cxx:420); ==975849== by 0x22693E4F: begin_request_handler(mg_connection*, void*) (TCivetweb.cxx:467); ==975849== by 0x226CCE61: handle_request (civetweb.c:14331); ==975849== by 0x226BCF09: handle_request_stat_log (civetweb.c:6544); ==975849== by 0x226D3421: process_new_connection (civetweb.c:18629); ==975849== by 0x226D4038: worker_thread_run (civetweb.c:19036); ==975849== by 0x226D416F: worker_thread (civetweb.c:19097); ==975849== by 0x535D896: start_thread (pthread_create.c:444); ==975849== by 0x53E48C3: clone (clone.S:100). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2170680580:184,depend,depends,184,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2170680580,1,['depend'],['depends']
Integrability,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4029#issuecomment-507959360:134,depend,dependencies,134,https://root.cern,https://github.com/root-project/root/pull/4029#issuecomment-507959360,1,['depend'],['dependencies']
Integrability,"Since I haven't had a chance to cleanly address the TBB dependency issue, and since the other change is much more important performance-wise, I've split that off into a separate PR here which should be possible to merge quickly: https://github.com/root-project/root/pull/7105",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-768422376:56,depend,dependency,56,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-768422376,1,['depend'],['dependency']
Integrability,"Since we have applied #2611 a Warning is not anymore needed. In case we could add an Info message that Sumw2() is called, if you think this information is important. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2610#issuecomment-461814613:90,message,message,90,https://root.cern,https://github.com/root-project/root/pull/2610#issuecomment-461814613,1,['message'],['message']
Integrability,"So I think it's well defined what we mean by the range of a discrete variable - each value is declared as either being in the range or not in the range. RooFit already supports this for RooCategory, so that's all well and good. I do think it makes sense then to think about the behaviour of fits when such a range is declared. It's actually possible my original jira issue might have been referring to a case where I had a PDF that wasn't a RooSimultaneous but was dependent on a RooCategory and it wasn't handled correctly, I'd have to look back at it and remind myself. But for sure in the case of the RooCategory being the index category of a RooSimultaneous I think it makes total sense for the RooSimultaneous to be 'reduced' to just the channels that are in the range.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8231#issuecomment-1163101737:465,depend,dependent,465,https://root.cern,https://github.com/root-project/root/issues/8231#issuecomment-1163101737,1,['depend'],['dependent']
Integrability,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-618263073:127,depend,dependency,127,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-618263073,2,['depend'],"['dependencies', 'dependency']"
Integrability,"So depending on #6148 #6079 and this all seems to work:; ```; $ env CTEST_OUTPUT_ON_FAILURE=1 ctest -R TMVA; Test project /build/root/src/build-cuda; ...; 100% tests passed, 0 tests failed out of 71. Label Time Summary:; tutorial = 132.26 sec*proc (18 tests). Total Test time (real) = 287.13 sec; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6058#issuecomment-671365564:3,depend,depending,3,https://root.cern,https://github.com/root-project/root/pull/6058#issuecomment-671365564,1,['depend'],['depending']
Integrability,"So far changing to a function and PARENT_SCOPING the gensrdict seems to work. I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?. That `target_sources` call is not what made we want a new switch, though. I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-588141834:517,rout,routine,517,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-588141834,1,['rout'],['routine']
Integrability,So far we had this patch in our local fork but we would prefer to have it integrated into the mainstream repository.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12613#issuecomment-1496144896:74,integrat,integrated,74,https://root.cern,https://github.com/root-project/root/pull/12613#issuecomment-1496144896,1,['integrat'],['integrated']
Integrability,"So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394478073:18,depend,depends,18,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394478073,2,['depend'],"['dependency', 'depends']"
Integrability,So removing the sofie build breaks many dependencies. I'll check with @lmoneta how to fix that correctly once he's back.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13055#issuecomment-1610869466:40,depend,dependencies,40,https://root.cern,https://github.com/root-project/root/issues/13055#issuecomment-1610869466,1,['depend'],['dependencies']
Integrability,"So that's because `std::sqrt` doesn't have an overload for Vc types. The solution is the following:; ```c++; T SomeFunc() {; using std::sqrt;; return sqrt(fX);; }; ```; i.e. keep `sqrt` unqualified such that ADL (argument-dependent lookup, fixing Vc) can happen, but make `std::sqrt` available through the local (!) `using namespace std::` or better yet `using std::sqrt` if that builds everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7909#issuecomment-822573883:222,depend,dependent,222,https://root.cern,https://github.com/root-project/root/pull/7909#issuecomment-822573883,1,['depend'],['dependent']
Integrability,So the error is:; ```; CMake Error at CMakeLists.txt:86 (message):; Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or; installation folder. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492#issuecomment-1919544338:57,message,message,57,https://root.cern,https://github.com/root-project/root/issues/14492#issuecomment-1919544338,1,['message'],['message']
Integrability,"So the upstream change has been merged. How can I ask for a proper backport? I have the impression building PRs to the v6-28-00-patches branch does not always work. Shall I try with master first? However, wouldn't doing that create troubles with the later integration of the LLVM upstream?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1744333339:256,integrat,integration,256,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1744333339,1,['integrat'],['integration']
Integrability,"So this change at least breaks when searching for nested namespaces, close it now...; ```; Processing /data/sftnight/workspace/root-pullrequests-build/root/tutorials/dataframe/df014_CSVDataSource.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-pullrequests-build/root/tutorials/dataframe/df014_CSVDataSource.C:30:20: error: no member named 'RDF' in namespace 'ROOT'; auto df = ROOT::RDF::MakeCsvDataFrame(fileName);; ~~~~~~^; CMake Error at /data/sftnight/workspace/root-pullrequests-build/build/RootTestDriver.cmake:227 (message):; error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10969#issuecomment-1186049678:550,message,message,550,https://root.cern,https://github.com/root-project/root/pull/10969#issuecomment-1186049678,1,['message'],['message']
Integrability,"So with and without this PR, same result with VS 2022 v17.5.4 (x64):; ```; C:\Users\bellenot\build\x64\release>ctest -VV -C Release -R tutorial-v7-ntuple-ntpl007_mtFill; UpdateCTestConfiguration from :C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Parse Config file:C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Add coverage exclude regular expressions.; UpdateCTestConfiguration from :C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Parse Config file:C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Test project C:/Users/bellenot/build/x64/release; Constructing a list of tests; Ignore test: test-tcollex; Ignore test: roottest-cling-parsing-semicolon; Ignore test: roottest-root-rint-TabCom; Ignore test: roottest-root-rint-BackslashNewline; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 910; Start 910: tutorial-v7-ntuple-ntpl007_mtFill. 910: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Users/bellenot/build/x64/release/bin/root.exe^-b^-l^-q^C:/Users/bellenot/git/master/tutorials/v7/ntuple/ntpl007_mtFill.C"" ""-DSYS=C:/Users/bellenot/build/x64/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/x64/release#PYTHONPATH=C:/Users/bellenot/build/x64/release/bin#PYTHIA8=C:/libs/x64/pythia8/8.3.03#PYTHIA8DATA=C:/libs/x64/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/x64/release/RootTestDriver.cmake""; 910: Environment variables:; 910: ROOT_HIST=0; 910: Test timeout computed to be: 1200; 910:; 910: Processing C:/Users/bellenot/git/master/tutorials/v7/ntuple/ntpl007_mtFill.C...; 910: Warning in <[ROOT.NTuple] Warning C:\Users\bellenot\git\master\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOption",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13264#issuecomment-1649597994:917,depend,dependency,917,https://root.cern,https://github.com/root-project/root/pull/13264#issuecomment-1649597994,2,['depend'],['dependency']
Integrability,"So you mean that 'somehow' wrapper.so is fabricating this incorrect string, or it might be coming in from XrdNetConnect::Connect?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759523877:27,wrap,wrapper,27,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759523877,1,['wrap'],['wrapper']
Integrability,"Some debug symbols seem to be missing so we don't have line number information, but this log is already enough to confirm my hypothesis above: 2.9 GB come from std::vector allocations performed by `RDF::FillHelper::Exec<ROOT::VecOps::RVec<float>, 0>`. The simplest workaround is to specify a binning for the histograms. I am not sure whether this is a common enough problem to warrant a fix in RDF if the fix involves thread synchronization or other potential performance pessimizations. Alternatively, if we can come up with a mutex-free algorithm to automatically select binnings that are compatible among threads that might be the best option -- some related discussion on this topic is [here](https://sft.its.cern.ch/jira/browse/ROOT-8883). Moving this to priority ""default"" since there is a workaround. EDIT: another workaround is to run on fewer events, which might be reasonable since this kind of usecase is typically part of an exploratory phase of the analysis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6676#issuecomment-716447711:425,synchroniz,synchronization,425,https://root.cern,https://github.com/root-project/root/issues/6676#issuecomment-716447711,2,['synchroniz'],['synchronization']
Integrability,"Some details on why to use the Executor:; - When ROOT doesn't have IMT enabled, it will fall back to single-thread computation.; - It integrates well into tbb scheduling. If ROOT runs with other tbb things in the same process, one can configure the number of threads that ROOT uses.; - It listens to `ROOT::EnableImplicitMT(N)`. When done, the feature should be announced in release notes and documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7874#issuecomment-819579739:134,integrat,integrates,134,https://root.cern,https://github.com/root-project/root/issues/7874#issuecomment-819579739,1,['integrat'],['integrates']
Integrability,"Some further information from my own observations:. Somehow despite the fact that the model yield is >> the data yield, the reported FCN keeps getting smaller (see the MINUIT output below). This is true even when upper limits are extended to outrageous values. I have further tried eliminating the gaussian constraints on `Lumi` and `alpha_BFD1` as the source of the problem by reconstructing the likelihood using only the `RooRealSumPdf` which should not contain the constraints themselves, only the functions which depend on the observables or which normalize those same functions. The behavior is the same. More MINUIT output (print level 0):; ```; ********** ** 1 **SET PRINT 1 ********** ********** ** 2 **SET NOGRAD ********** PARAMETER DEFINITIONS: NO. NAME VALUE STEP SIZE LIMITS 1 Lumi 1.00000e+00 3.00000e-01 0.00000e+00 3.00000e+00 2 Nmu 5.00000e+04 2.49995e+04 1.00000e+00 1.00000e+06 3 RawRDst 4.03350e-02 1.99999e-02 1.00000e-06 2.00000e-01 4 alpha_BFD1 0.00000e+00 6.00000e-01 -3.00000e+00 3.00000e+00 ********** ** 3 **SET ERR 0.5 ********** ********** ** 4 **SET PRINT 1 ********** ********** ** 5 **SET STR 2 ********** NOW USING STRATEGY 2: MAKE SURE MINIMUM TRUE, ERRORS CORRECT ********** ** 6 **MIGRAD 2000 1 ********** FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 2. CONVERGENCE WHEN EDM .LT. 1.00e-03 MINUIT WARNING IN HESSE ============== Negative diagonal element 3 in Error Matrix MINUIT WARNING IN HESSE ============== 2456.94 added to diagonal of error matrix EIGENVALUES OF SECOND-DERIVATIVE MATRIX: -7.1929e+00 9.6978e-01 1.0000e+00 9.2231e+00 MINUIT WARNING IN HESSE ============== MATRIX FORCED POS-DEF BY ADDING 7.202092 TO DIAGONAL. FCN=-0.464708 FROM HESSE STATUS=NOT POSDEF 31 CALLS 32 TOTAL EDM=6.13113e+08 STRATEGY= 2 ERR MATRIX NOT POS-DEF EXT PARAMETER APPROXIMATE STEP FIRST NO. NAME VALUE ERROR SIZE DERIVATIVE 1 Lumi 1.00000e+00 1.33665e-03 2.14402e-03 -1.26169e+05 2 Nmu 5.00000e+04 1.26146e+03 1.18624e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12729#issuecomment-1527705616:517,depend,depend,517,https://root.cern,https://github.com/root-project/root/issues/12729#issuecomment-1527705616,1,['depend'],['depend']
Integrability,Some time ago we adjust cmake files so that when building ROOT libraries we using headers from source directories and not headers from `$ROOTSYS/include`. This makes dependencies between ROOT components more clear. I just checked $ROOTSYS/include - there are 1476 files. And going this way we will double number of files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16327#issuecomment-2346961309:166,depend,dependencies,166,https://root.cern,https://github.com/root-project/root/issues/16327#issuecomment-2346961309,2,['depend'],['dependencies']
Integrability,Something funny is happening with the payload injected in cling. All but one test pass. I am debugging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3033#issuecomment-441320544:46,inject,injected,46,https://root.cern,https://github.com/root-project/root/pull/3033#issuecomment-441320544,1,['inject'],['injected']
Integrability,"Sorry _last thing_, I promise: can you add a line in the 6.26 release notes about this please? So we don't depend on me remembering :smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7562#issuecomment-820219095:107,depend,depend,107,https://root.cern,https://github.com/root-project/root/pull/7562#issuecomment-820219095,1,['depend'],['depend']
Integrability,"Sorry for my late reply. Thank you very much for your answer. . I think using TArayD is an improvement than using double pointers, but I don't see any reason why not using a more standard std::vector. ; I understand also for the interface your preference for an API similar to the current TGraphAsymmError. Thank you for explaining the meaning of SetDimensionEY, I think the name is not super clear, I would maybe just call it SetEY. ; One comment on the passed array, I think the pointers should be passed as cont , since they will not be modified. . One other comment I have , I will not have a method to Set the error dimension. I think it will be better instead a AddError method that will increment by one the dimension and add all the point errors. This I think it will be more useful",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-558161625:229,interface,interface,229,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-558161625,2,['interface'],['interface']
Integrability,Sorry for the 2nd messages there was a github 'snag' (was not seeing my own message nor your response). I still have to digest your response.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483#issuecomment-414337744:18,message,messages,18,https://root.cern,https://github.com/root-project/root/pull/2483#issuecomment-414337744,2,['message'],"['message', 'messages']"
Integrability,Sorry for the late reply. ; I agree with your changes. I think also the Info message needs to be fixed. I'll do this as well. ; I'll commit this fix also in 6.12,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1183#issuecomment-349972577:77,message,message,77,https://root.cern,https://github.com/root-project/root/pull/1183#issuecomment-349972577,1,['message'],['message']
Integrability,"Sorry for the naive question, but does your example work with 6.24.06?. I have changed .rootrc, and the environment shows. `Gui.Factory: web [Local]`. as expected, but when I run your commands, no http server creation message is displayed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9645#issuecomment-1020354280:218,message,message,218,https://root.cern,https://github.com/root-project/root/issues/9645#issuecomment-1020354280,1,['message'],['message']
Integrability,"Sorry, I forgot about the typo in the commit message :disappointed:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14473#issuecomment-1915259130:45,message,message,45,https://root.cern,https://github.com/root-project/root/pull/14473#issuecomment-1915259130,1,['message'],['message']
Integrability,"Sorry, I'm not sure how to remove merge message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5081#issuecomment-594011446:40,message,message,40,https://root.cern,https://github.com/root-project/root/pull/5081#issuecomment-594011446,1,['message'],['message']
Integrability,"Sorry, overlooked a dependency that needed changing ... should be fixed now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10516#issuecomment-1117027552:20,depend,dependency,20,https://root.cern,https://github.com/root-project/root/pull/10516#issuecomment-1117027552,1,['depend'],['dependency']
Integrability,"Sorta. If (and it look like it here) it succeeded in writing it, it did not in a likely platform dependent manners (i.e. recording the complete set of implementation dependent class hierarchy in the currently used std library). We had a similar problem for `std::unique_ptr` which we solved by the I/O ""ignoring"", per se, the implementation and treating it memory content almost the same as a raw pointer. We could to do something similar for std::atomic but that would circumvent the thread-safety parts; so the real solution needs more thoughts :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9371#issuecomment-985367859:97,depend,dependent,97,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-985367859,2,['depend'],['dependent']
Integrability,"Speaking of `std::pair`, it might not be related but I just now spotted an error message which wasn't present with 6.20 when calling `GetStreamerInfo()` on two of our classes:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert pair<int,array<vector<Belle2::TOPPDFCollection::Gaussian>,512> >::second from type: array<vector<Belle2::TOPPDFCollection::Gaussian>,512> to type: vector<Belle2::TOPPDFCollection::Gaussian>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert pair<int,array<float,512> >::second from type: array<float,512> to type: array<float,512>, skip element; ```; where the members in the class are `std::map<int, array<...>>` (Gaussian is just a struct of 3 floats). Now this could be something different but it does strike me as odd because it also happens for `std::pair`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7960#issuecomment-833273551:81,message,message,81,https://root.cern,https://github.com/root-project/root/issues/7960#issuecomment-833273551,1,['message'],['message']
Integrability,"Speaking with my Gentoo hat here, but for a distro, I think there's mostly no problem (I didn't have to make any changes to the package for ROOT). However, other software will likely see failures if they try to parse the version for whatever reason. But semantic versioning is much more than the format of the version number itself, so I'm wondering if ROOT will now really control which kinds of changes will make it to patch releases such that they don't change any interface in a way that code compiled for ROOT 6.30.00 still works without recompilation with 6.30.XX.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14068#issuecomment-1830057296:468,interface,interface,468,https://root.cern,https://github.com/root-project/root/issues/14068#issuecomment-1830057296,1,['interface'],['interface']
Integrability,Still depending on #1394,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1396#issuecomment-366982658:6,depend,depending,6,https://root.cern,https://github.com/root-project/root/pull/1396#issuecomment-366982658,1,['depend'],['depending']
Integrability,"Still needs a check whether injecting `RTLD_DEFAULT` is needed at all, or whether `ExposeHiddenSharedLibrarySymbols` and calls can be removed completely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6108#issuecomment-667885089:28,inject,injecting,28,https://root.cern,https://github.com/root-project/root/pull/6108#issuecomment-667885089,1,['inject'],['injecting']
Integrability,"Stop, stop, stop!. It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |; | ---- | ---- |; | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen; - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`.; - Update documentation to clarify that by default, the curve will be integrated over all bins.; - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7239#issuecomment-781222004:797,integrat,integrated,797,https://root.cern,https://github.com/root-project/root/issues/7239#issuecomment-781222004,1,['integrat'],['integrated']
Integrability,"Suggest to squash on merge. The commit message could look like:; ```; [RF] Extend RooChebychev to arbitrary orders. Instead of hard-coding the polynomials to 7th order, a more scalable implementation; based on the recursive definition of the polynomials is used.; The computation time grows linearly with the order of the polynomials. FMA is used if supported by the underlying architecture/compiler.; Otherwise, the code falls back to normal floating point arithmetic.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3775#issuecomment-490553124:39,message,message,39,https://root.cern,https://github.com/root-project/root/pull/3775#issuecomment-490553124,1,['message'],['message']
Integrability,Super cool! The real amazing feature here is the automatic wrapping of python functions as C++ functions...and PyROOT automatically lets you go back!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488#issuecomment-468651905:59,wrap,wrapping,59,https://root.cern,https://github.com/root-project/root/pull/3488#issuecomment-468651905,1,['wrap'],['wrapping']
Integrability,"Super helpful, @bluehood ! Two things:. - the code you profiled is using `TTreeReaderValue` which is he case that Philippe was targeting. We *also* know of a significant overhead for `TTreeReaderArray`. - the flamegraph does not show a factor 2 between `TTreeReader` and `TTree` interfaces. This suggests that the `TTreeReader` does strictly more work to get the same result, i.e. does unnecessary `TTree` / `TBranch` operations!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-455183145:279,interface,interfaces,279,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-455183145,1,['interface'],['interfaces']
Integrability,"Super nice! The [report](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/130368/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_testTOffsetGeneration/) says ""Expected messages:"" - but it's not obvious whether ""expected"" as in ""required"" or in ""optional"". Maybe use one of the latter two words to make it obvious?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-974879979:203,message,messages,203,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-974879979,1,['message'],['messages']
Integrability,"Sure, I agree with this, but there may be thousands of unitless rotations/translations in a GDML file, do you expect each one to issue a warning, or to just get the message at the first encounter, telling the user in case of using cm/deg defaults to check all transformations, or use G4 defaults?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11781#issuecomment-1329323251:165,message,message,165,https://root.cern,https://github.com/root-project/root/issues/11781#issuecomment-1329323251,1,['message'],['message']
Integrability,"Sure, I will reword the commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1069#issuecomment-332882619:31,message,message,31,https://root.cern,https://github.com/root-project/root/pull/1069#issuecomment-332882619,1,['message'],['message']
Integrability,"Sure, OTOH, it will be nop because the quoted issue was resolved on our side, too. The issue suggests that we have:; ```; module M1 {; umbrella ""NonExistent"" // expected-error here.; module * { export * }; }. module M2 {; umbrella ""Existent""; module * { export *}; }; ```. We always create a folder GL, so AFAICT we are not hitting this warning. Looks like the PR and the commit message were misnomers :( Fixing...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1348#issuecomment-345745506:379,message,message,379,https://root.cern,https://github.com/root-project/root/pull/1348#issuecomment-345745506,1,['message'],['message']
Integrability,"Sure, feel free to get back to me when you have a proposed fix and I'll see if it works :). I did a test locally on a clean 20.04 VM with the most minimal set of dependencies installed and the problem didn't occur there, so I'd guess it only appears with a particular configuration that I just happen to have being lucky with. If it helps, you can see the exact list of packages [here](https://github.com/MrCarroll/root-snap/blob/6925e2516007943701ce934eb5da03c7cac07fd4/snap/snapcraft.yaml#L30), which are installed on top of an LXC container of Ubuntu 20.04",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7406#issuecomment-793595045:162,depend,dependencies,162,https://root.cern,https://github.com/root-project/root/pull/7406#issuecomment-793595045,1,['depend'],['dependencies']
Integrability,"Sure, makes sense. There were also more messages from other core folders that I hadn't time yet to submit.; Should I submit more separate issues for each core subfolder, or just a single one? Or you would just take a look by running clang-tidy yourself on other core subdirectories?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411#issuecomment-794215305:40,message,messages,40,https://root.cern,https://github.com/root-project/root/issues/7411#issuecomment-794215305,1,['message'],['messages']
Integrability,"Sure. I will look at it. Get Outlook for iOS<https://aka.ms/o0ukef>; ________________________________; From: Philippe Canal <notifications@github.com>; Sent: Saturday, December 16, 2017 4:33:34 AM; To: root-project/root; Cc: Zhe Zhang; Mention; Subject: Re: [root-project/root] Use TTaskGroup interface to unzip baskets in parallel. (#1010). github claims there is now a conflict in TTree. Can you rebase on master and update the branch?. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/root-project/root/pull/1010#issuecomment-352105016>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AFNlv2SlkSXAPbNMZplkfYbezPn-qxX4ks5tAteegaJpZM4PbhS5>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-352105655:293,interface,interface,293,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-352105655,1,['interface'],['interface']
Integrability,T-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - CMake Error at VDT-stamp/VDT-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - CMake Error at TBB-stamp/TBB-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - CMake Error at VC-stamp/VC-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download ; - CMake Error at VECCORE-stamp/VECCORE-download-Release.cmake:16 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4097#issuecomment-512765959:1374,message,message,1374,https://root.cern,https://github.com/root-project/root/pull/4097#issuecomment-512765959,3,['message'],['message']
Integrability,T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:74:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:137:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:155:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:170:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621922856:2108,interface,interfaces,2108,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621922856,1,['interface'],['interfaces']
Integrability,"T::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:56:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:74:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:137:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621886081:1526,interface,interfaces,1526,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621886081,1,['interface'],['interfaces']
Integrability,"TCP_NODELAY, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; ```; is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:; ```c; #if (defined(R__AIX) && !defined(_AIX43)) || \; (defined(R__SUNGCC3) && !defined(__arch64__)); # define USE_SIZE_T; #elif defined(R__GLIBC) || defined(R__FBSD) || \; (defined(R__SUNGCC3) && defined(__arch64__)) || \; defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \; (defined(R__AIX) && defined(_AIX43)) || \; (defined(R__SOLARIS) && defined(_SOCKLEN_T)); # define USE_SOCKLEN_T; #endif; ```; [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:; > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253#issuecomment-963600314:6865,interface,interfaces,6865,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314,4,['interface'],['interfaces']
Integrability,TContextMenuImp.h TControlBarImp.h TDatime.h TDirectory.h TEnv.h TError.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TGuiFactory.h TInetAddress.h TInspectorImp.h TMD5.h TMacro.h TMathBase.h TMemberInspector.h TMessageHandler.h TNamed.h TObjString.h TObject.h TObjectSpy.h TPRegexp.h TParameter.h TPluginManager.h TPoint.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TROOT.h TRedirectOutputGuard.h TRef.h TRefCnt.h TRegexp.h TRemoteObject.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystem.h TSystemDirectory.h TSystemFile.h TTask.h TThreadSlots.h TTime.h TTimeStamp.h TTimer.h TUUID.h TUri.h TUrl.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPS.h TVirtualPad.h TVirtualPadEditor.h TVirtualPadPainter.h TVirtualPerfStats.h TVirtualQConnection.h TVirtualRWMutex.h TVirtualTableInterface.h TVirtualViewer3D.h TVirtualX.h Rtypes.h GuiTypes.h MessageTypes.h KeySymbols.h Buttons.h strlcpy.h snprintf.h TArray.h TArrayC.h TArrayD.h TArrayF.h TArrayI.h TArrayL.h TArrayL64.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ROOT/TSeq.hxx ESTLType.h RStringView.h TClassEdit.h ROOT/RArrayView.hxx ROOT/RMakeUnique.hxx ROOT/RNotFn.hxx ROOT/RStringView.hxx ROOT/TypeTraits.hxx ROOT/rhysd_array_view.hxx TUnixSystem.h TClingRuntime.h root_std_complex.h TBaseClass.h TClass.h TClassGenerator.h TClassMenuItem.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnum.h TEnumConstant.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctionTe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1632#issuecomment-366989771:1997,Message,MessageTypes,1997,https://root.cern,https://github.com/root-project/root/pull/1632#issuecomment-366989771,1,['Message'],['MessageTypes']
Integrability,"TMath.cxx:3186:51: error: ‘x’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3186:63: error: expected primary-expression before ‘mean’ ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3186:78: error: expected primary-expression before ‘gamma’ ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3201:34: error: ‘ROOT::Double_v TMath::Gaus’ redeclared as different kind of symbol ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3201:34: error: ‘Double_v’ is not a member of ‘TMath::ROOT’ ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3201:44: error: ‘x’ was not declared in this scope . And 30 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400583007:1808,depend,depends,1808,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400583007,2,['depend'],['depends']
Integrability,"TMath.cxx:3296:25: error: expected primary-expression before ‘&gt;’ token ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3296:27: error: ‘mask2’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3297:25: error: expected primary-expression before ‘&gt;’ token ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3297:27: error: ‘mask3’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3307:4: error: ‘MaskedAssign’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3307:33: error: expected primary-expression before ‘&gt;’ token . And 62 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401591340:1734,depend,depends,1734,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401591340,2,['depend'],['depends']
Integrability,"TROOT.cxx:465); ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153); ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76); ==92602== by 0x4420F6B: TApplication::GetOptions(int*, char**) (TApplication.cxx:483); ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177); ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147); ==92602== by 0x100011BF: main (rmain.cxx:80); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36); ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47); ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61); ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317); ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114); ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857); ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:5887,depend,depends,5887,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,"Talking again about the proposed interface:; ```c++; auto graph = new TGraph({0, 1, 2}, {1, 2, 3);; ```; I mean it looks nice and is probably useful for unit tests, but is it really helping our users?. If you have data that you want to plot, when do you hardcode it in initializer lists instead of reading it from files or getting it programmatically as the output of your analysis?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7151#issuecomment-2080462521:33,interface,interface,33,https://root.cern,https://github.com/root-project/root/issues/7151#issuecomment-2080462521,1,['interface'],['interface']
Integrability,"Test failed due to failure of uploading test results to cdash, it seems:; ```; 05:58:48 100% tests passed, 0 tests failed out of 1038; ```. Two minutes later:. ```; 06:00:58 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds; 06:00:58 Problems when submitting via HTTP; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-365151906:180,message,message,180,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-365151906,1,['message'],['message']
Integrability,"Testing `./tree/dataframe/test/dataframe_simple --gtest_filter=Seq/RDFSimpleTests.FillWithCustomClassJitted/0`, the result with `git-bisect` is:; ```; 7fa32c7a727b0a24fdbd90304b4f7ab3460b2b94 is the first bad commit; commit 7fa32c7a727b0a24fdbd90304b4f7ab3460b2b94; Author: Enrico Guiraud <enrico.guiraud@cern.ch>; Date: Mon Jan 24 18:42:07 2022 +0100. [DF] Fix jitted actions that depend on systematic variations. For this to work we need RJittedAction to propagate dependencies; on systematic variations to VariationsFor. tree/dataframe/inc/ROOT/RDF/RInterface.hxx | 3 ++-; tree/dataframe/inc/ROOT/RDF/RJittedAction.hxx | 3 ++-; tree/dataframe/src/RJittedAction.cxx | 7 ++++++-; tree/dataframe/test/dataframe_vary.cxx | 12 ++++++++++++; 4 files changed, 22 insertions(+), 3 deletions(-); ```. Indeed, commit 7fa32c7a727b0a24fdbd90304b4f7ab3460b2b94 crashes while the parent a2f0788202cca41393bcb68f58970428fd7e18da works. Edit: I think I have a patch...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10007#issuecomment-1056810851:382,depend,depend,382,https://root.cern,https://github.com/root-project/root/issues/10007#issuecomment-1056810851,2,['depend'],"['depend', 'dependencies']"
Integrability,"Tests has been augmented and refactored to avoid code duplication. There's one issue that I'm not sure how to solve: random access iterators are required to support the forms `it + n` as well as `n + it` (where `n` in our case is of type `std::ptrdiff_t`. The second form requires the definition of a free-standing `operator+`, which I implemented this way:. ```c++; template <typename T>; auto operator+(std::ptrdiff_t n, const typename TTreeReaderArray<T>::iterator &it); -> decltype(it + n); {; return it + n;; }; ```. Problem: in the definition above `T` cannot be deduced from the dependent type `iterator`, so this overload is never considered. Any idea how to work around this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1259#issuecomment-343112197:586,depend,dependent,586,https://root.cern,https://github.com/root-project/root/pull/1259#issuecomment-343112197,1,['depend'],['dependent']
Integrability,"Thank you @eguiraud for the comment, I have added your main points to the commit message. I agree there are still potential performance penalties in DistRDF (although much less so than it used to be) and for now we can remove this dead part of the codebase.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13232#issuecomment-1632022809:81,message,message,81,https://root.cern,https://github.com/root-project/root/pull/13232#issuecomment-1632022809,1,['message'],['message']
Integrability,"Thank you @guitargeek and @wlav for the quick and informative responses. These are totally understandable difficulties, and I'm looking forward to the future!. Unfortunately the usage of templates is quite baked-in for this library, which tries to allow users to write their own C++ classes and input (but also retrieve) them in a data analysis workflow. Ultimately, however, I guess this is not a complete showstopper as I could just resort to ```cppyy.cppdef()``` where things work, and write a manual wrapper Python interface around it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15062#issuecomment-2026813311:504,wrap,wrapper,504,https://root.cern,https://github.com/root-project/root/issues/15062#issuecomment-2026813311,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"Thank you @vepadulano !. I'm happy to do another pass, but I'd rather do so after the tests are added: it takes me around half a day of work to go through a PR this size, I'd like to reduce the amount of passes... :sweat_smile: . (the warnings are real and the test failure is because of an expected error message that needs to be updated in the test -- or the new message needs to match the old one)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12363#issuecomment-1581188983:306,message,message,306,https://root.cern,https://github.com/root-project/root/pull/12363#issuecomment-1581188983,2,['message'],['message']
Integrability,"Thank you for the PR! I want to try it out on my Mac, but I never get to that same error actually, I am greeted by this one much before that (and multiple times); ```; CMake Error in core/clingutils/CMakeLists.txt:; The custom command generating. /Users/vpadulan/Programs/rootproject/rootbuild/gh-14595-minimal/core/clingutils/dummy.cxx. is attached to multiple targets:. vectorDict; listDict; forward_listDict; dequeDict; mapDict; map2Dict; unordered_mapDict; multimapDict; multimap2Dict; unordered_multimapDict; setDict; unordered_setDict; multisetDict; unordered_multisetDict; complexDict; valarrayDict. but none of these is a common dependency of the other(s). This is not; allowed by the Xcode ""new build system"".; ```. Did you not get this error as well? That would be surprising",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14595#issuecomment-1932346175:637,depend,dependency,637,https://root.cern,https://github.com/root-project/root/issues/14595#issuecomment-1932346175,1,['depend'],['dependency']
Integrability,"Thank you for the suggestion, @Dr15Jones . I think that works nicely. I like that we can now exchange the mechanics of the token without changing the interface. We'll use the model ID as a safety check. This PR now include a patch to the RNTupleModel id management.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14531#issuecomment-1933863300:150,interface,interface,150,https://root.cern,https://github.com/root-project/root/pull/14531#issuecomment-1933863300,1,['interface'],['interface']
Integrability,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug?. ```js; js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);; js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14300#issuecomment-1878315618:126,message,messages,126,https://root.cern,https://github.com/root-project/root/issues/14300#issuecomment-1878315618,1,['message'],['messages']
Integrability,"Thank you very much @langenbruch for the tutorial and the PR updates! I will take it from here, integrating the tutorial and maybe writing some tests, and then I'll merge the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14751#issuecomment-1986092078:96,integrat,integrating,96,https://root.cern,https://github.com/root-project/root/pull/14751#issuecomment-1986092078,1,['integrat'],['integrating']
Integrability,"Thank you very much for this, this is obviously much nicer than our horrible solution and highly appreciated. I cannot judge everything since I'm not familiar enough with these details. One thing different to our hack which I don't see here is the name of the file. We set `fName` to a hardcoded constant (empty didn't work) so that we're not dependent on the name of the file on creation. (for example I can create a file with `mkstemp()`, write and then rename and I will get the same checksum as writing directly to the final name). At the very least it would be necessary to be able to construct the file with the same name in different directories and still obtain the checksum but I would prefer if the filename doesn't have any affect on the checksum. . I would be fine if I can set the name after creating the file but it looks to me that the first key with the file metadata is written right in the beginning and a later change might not have the desired effect?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4253#issuecomment-524211456:343,depend,dependent,343,https://root.cern,https://github.com/root-project/root/pull/4253#issuecomment-524211456,1,['depend'],['dependent']
Integrability,"Thank you!; However, I've heard that new ROOT drops support for Python 2.; So I'm not sure whether this is the way I wanted. But still it is good to; compile ROOT with several Python versions, so thanks again for that update. Jonas Rembser ***@***.***> schrieb am Mi., 3. Apr. 2024,; 20:45:. > The problem should be fixed with this PR:; > #14703 <https://github.com/root-project/root/pull/14703>; >; > The version Python that ROOT was compiled with is now not hardcoded in the; > library names anymore, so using ROOT with newer Python that the one a build; > time is totally possible!; >; > @ynikitenko <https://github.com/ynikitenko>, feel free to open a new; > issue should you have similar problems.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/12744#issuecomment-2035339828>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAJGF4WRQUBWZ2PKIGT5XM3Y3RE3VAVCNFSM6AAAAAAXRSRNG2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDAMZVGMZTSOBSHA>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12744#issuecomment-2035395948:1080,Message,Message,1080,https://root.cern,https://github.com/root-project/root/issues/12744#issuecomment-2035395948,1,['Message'],['Message']
Integrability,"Thank you. And one more point.; The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7440#issuecomment-821018950:71,Integrat,Integrator,71,https://root.cern,https://github.com/root-project/root/issues/7440#issuecomment-821018950,2,['Integrat'],['Integrator']
Integrability,"Thank you. So if I understand correctly : ; for n_s times RooHistPdf, it behaves as for the case RooHistPdf for the method : getVal() ; -> OK : it gives a result ""normalized to 1"". But if we decide *not to normalize* the RooDataHist used to create the RooHistPdf,; the RooHistPdf -> getVal() will return a value normalized to the number of events of the RooDataHist : so in this case it gives a *non-normalized result*. This is strange since it is stated : ""The histogram distribution is explicitly normalized by RooHistPdf and can have an arbitrary number of real or discrete dimensions. "". Indeed, with my minimum example where you may put the option option_normalize_hist=0 (with the fix that you kindly found of <=55 bins); we get :; value_pdf total=39.9713; which represents : pdf->getVal()*bin_width. so in this case, we don't need to multiply by the number of events to obtain a prediction !!; The value of the pdf is not inside [0, 1]. So, depending whether the RooDataHist that was used in order to construct the RooHistPdf, was normalized or not normalized, the RooHistPdf->getVal() returns a normalized or a not normalised result,; in contradiction with the sentence that roofit is expected to do it : the sentence : ""The histogram distribution is explicitly normalized by RooHistPdf and can have an arbitrary number of real or discrete dimensions. "" of https://root.cern.ch/doc/master/classRooHistPdf.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7991#issuecomment-826921480:948,depend,depending,948,https://root.cern,https://github.com/root-project/root/issues/7991#issuecomment-826921480,1,['depend'],['depending']
Integrability,"Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense?. But yes *please* contribute! You could start with imlpementing; ```c++; static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",; const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,; Int_t netopt = 0);; ```; internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13958#issuecomment-1782934211:692,interface,interface,692,https://root.cern,https://github.com/root-project/root/issues/13958#issuecomment-1782934211,1,['interface'],['interface']
Integrability,"Thanks @amadio for the extensive input! Let me address it point by point:. First: the current choice for ""built-in only"". The built-in is there for two reasons: 1) as a dependency, obviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable?. Then about the RooFitZ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870411730:169,depend,dependency,169,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870411730,2,['depend'],['dependency']
Integrability,"Thanks @dpiparo and @imaxoi . Suggestion integrated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2865#issuecomment-433935732:41,integrat,integrated,41,https://root.cern,https://github.com/root-project/root/pull/2865#issuecomment-433935732,1,['integrat'],['integrated']
Integrability,"Thanks @saisoma123 for all your wonderful PRs! Could you, in the future:; - set @vgvassilev (our cpt expert) as reviewer?; - assign cpt PRs to @vgvassilev ?; - add to the title of the PR `[skip-ci]` (because ROOT doesn't have tests for cpt there's no need to run ROOT's continuous integration suite); - use a tag in the commit title that signals *where* the change is happening, e.g. `[cling-cpt] Edited verbose output flag` or similar?. Thanks, much appreciated!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10738#issuecomment-1153519304:281,integrat,integration,281,https://root.cern,https://github.com/root-project/root/pull/10738#issuecomment-1153519304,1,['integrat'],['integration']
Integrability,Thanks Jonas! We might have to call some ROOT clean-up routine that is usually called by the ROOT-injected exit handler to make sure TFiles are closed correctly and similar. @pcanal might know if there is a simple way to do that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-764675439:55,rout,routine,55,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-764675439,4,"['inject', 'rout']","['injected', 'routine']"
Integrability,"Thanks Philippe - I shall try that; ________________________________; From: Philippe Canal ***@***.***; Sent: 27 February 2023 18:50; To: root-project/root; Cc: Sunanda Banerjee; Mention; Subject: Re: [root-project/root] Getting a crash while reading a Root Tree (Issue #12370). Alternatively you can run valgrind to get more information on this kind of failure:. valgrind --suppressions=$ROOTSYS/etc/valgrind-root.supp --log-file=val.01.log myexecutable myargs. —; Reply to this email directly, view it on GitHub<https://github.com/root-project/root/issues/12370#issuecomment-1446778005>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABGMZOSBSY5NDNIO7K6JZEDWZTSPBANCNFSM6AAAAAAVFHT3OU>.; You are receiving this because you were mentioned.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12370#issuecomment-1447781427:759,Message,Message,759,https://root.cern,https://github.com/root-project/root/issues/12370#issuecomment-1447781427,1,['Message'],['Message']
Integrability,"Thanks Philippe. After further consideration, i think you're right. I had indeed been concerned about a possible deadlock, but i had thought; that it was probably ok because a similar change was working fine; in production. But (a), i had forgotten about the dlopen lock and (b),; they weren't exactly the same change. As i alluded to above, we didn't; want to have a custom patch to ROOT, so for production we address this; race by wrapping dlopen. But in that case, the core lock is acquired; _before_ the call to dlopen, not after. So, what is to be done?. There is probably only one code path in ATLAS that was giving us problems.; The Gaudi plugin manager was being used to load one of the POOL libraries; that happened to include ROOT dictionary information. I could; acquire the ROOT core lock around this (and one or two other places; where i known that Gaudi components may be loaded after event processing; starts). However, there are many other places where shared libraries; could potentially be loaded. While those probably don't matter...; the original bug here was quite opaque, taking several months; to completely track down. So i'm loathe to leave open any possibility; that it could bite us again. We could add locking within TClassTable. This is perhaps an attractive; way forward, as it should make it much easier to ensure that usages; of TClassTable are correct. A drawback is that is hard to then ensure; that we don't have something else that is also supposed to be protected; by the core mutex. Nevertheless, i could try to prepare a change; to do this if it sounds good. However, that's not the end of the problems. If this analysis is correct, then we _already_ have potential deadlock; problems, as there is nothing to prevent the initialization code of a; shared library (which can be arbitrary used code) from calling into ROOT; in a way that would acquire the core mutex. So code which would look; innocent to the user would have a chance of deadlocking.; I'm not sure ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11263#issuecomment-1231069071:433,wrap,wrapping,433,https://root.cern,https://github.com/root-project/root/pull/11263#issuecomment-1231069071,1,['wrap'],['wrapping']
Integrability,"Thanks a lot @wlav! . > That will give you different answers depending on whether the sequence has 0 or N elements, though. That's correct. Currently, we'll tag a sequence with 0 elements as not a sequence but the idea in this context is that if there are no elements there is nothing interesting to pythonize so we basically skip that object. > But there are plenty more worrisome things in that code. :). :no_mouth: :grinning:. > Can probably also expose it as a `CPyCppyy::Sequence_Check` in the API. I think this would be the best/ most robust approach. Then we can replace the ad-hoc check we currently do w/ that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2061616984:61,depend,depending,61,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2061616984,1,['depend'],['depending']
Integrability,"Thanks a lot for opening the PR, @devajithvs!. I have measured the runtime of all PyROOT tests without and with this PR, and there is no significant difference (see results at the end of this post). Given that the CI is also green, I would suggest you polish up the implementation a little bit and open a PR upstream:; https://github.com/wlav/CPyCppyy. ```txt; Test name Before After; pyunittests-pyroot-root-module 0.57 s 0.57 s; pyunittests-pyroot-pyz-decorator 0.47 s 0.48 s; pyunittests-pyroot-pyz-pretty-printing 0.81 s 0.81 s; test-import-numpy 0.10 s 0.10 s; pyunittests-pyroot-pyz-array-interface 1.06 s 1.05 s; pyunittests-pyroot-pyz-stl-vector 0.79 s 0.77 s; pyunittests-pyroot-pyz-stl-set 0.81 s 0.82 s; pyunittests-pyroot-pyz-tobject-contains 0.49 s 0.49 s; pyunittests-pyroot-pyz-tobject-comparisonops 0.50 s 0.49 s; pyunittests-pyroot-pyz-tclass-dynamiccast 0.49 s 0.48 s; pyunittests-pyroot-pyz-tcontext-contextmanager 0.53 s 0.52 s; pyunittests-pyroot-pyz-tdirectory-attrsyntax 0.52 s 0.52 s; pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get 0.54 s 0.52 s; pyunittests-pyroot-pyz-tfile-attrsyntax-get-writeobject-open 0.63 s 0.62 s; pyunittests-pyroot-pyz-tfile-constructor 0.49 s 0.49 s; pyunittests-pyroot-pyz-tfile-context-manager 0.58 s 0.59 s; pyunittests-pyroot-pyz-ttree-branch-attr 0.80 s 0.80 s; pyunittests-pyroot-pyz-ttree-iterable 0.75 s 0.75 s; pyunittests-pyroot-pyz-ttree-setbranchaddress 0.86 s 0.85 s; pyunittests-pyroot-pyz-ttree-branch 0.79 s 0.78 s; pyunittests-pyroot-pyz-th1-operators 0.56 s 0.56 s; pyunittests-pyroot-pyz-th2 0.50 s 0.50 s; pyunittests-pyroot-pyz-tgraph-getters 0.68 s 0.67 s; pyunittests-pyroot-pyz-tcollection-len 0.50 s 0.50 s; pyunittests-pyroot-pyz-tcollection-listmethods 0.50 s 0.50 s; pyunittests-pyroot-pyz-tcollection-operators 0.50 s 0.50 s; pyunittests-pyroot-pyz-tcollection-iterable 0.49 s 0.50 s; pyunittests-pyroot-pyz-tseqcollection-itemaccess 0.51 s 0.51 s; pyunittests-pyroot-pyz-tseqcollection-listmethods 0.52 s 0.52 s; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16000#issuecomment-2215185086:595,interface,interface,595,https://root.cern,https://github.com/root-project/root/pull/16000#issuecomment-2215185086,1,['interface'],['interface']
Integrability,"Thanks a lot for your comment!. > * sometimes I would have found useful to be able to pass python number anywhere a RooAbsReal is required, although I suspect this may require a pythonization for each pdf. Yes, I would like this too, but it's technically not easy to implement without changing the source for all PDFs. Maybe I will have an idea at some point as I learn more about PyROOT, but for now I have none. > * `RooSimultaneous` map constructor does not accept a python dictionary yet. That's a very good idea!. > * one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace).; However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. That's a pretty good idea too. I guess one can simply create new Python references to each server that are set as an attribute of the server, such that they are always kept alive. But you're right, server redirection would break this, unless there are Pythonizations for that one too.... So I still need to think if this is worth it, also considering that users can also use the RooWorkspace factory interface to create PDFs, which doesn't have this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11421#issuecomment-1257762156:1299,interface,interface,1299,https://root.cern,https://github.com/root-project/root/issues/11421#issuecomment-1257762156,2,['interface'],['interface']
Integrability,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: !; Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9429#issuecomment-993713171:86,interface,interfaces,86,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-993713171,2,['interface'],['interfaces']
Integrability,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know!. I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8370#issuecomment-858748476:998,inject,injected,998,https://root.cern,https://github.com/root-project/root/issues/8370#issuecomment-858748476,1,['inject'],['injected']
Integrability,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message?. On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:; ```; struct std::_Head_base<_Idx, _Head, true>; SIZE: (NA) FILE: tuple LINE: -1; List of member variables: -------------------------------------------------; root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10140#issuecomment-1929000488:102,message,message,102,https://root.cern,https://github.com/root-project/root/issues/10140#issuecomment-1929000488,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"Thanks for comments!; @phsft-bot This is actually depending on #1720, I have to fix this first",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1722#issuecomment-371804642:50,depend,depending,50,https://root.cern,https://github.com/root-project/root/pull/1722#issuecomment-371804642,1,['depend'],['depending']
Integrability,Thanks for integrating the comments. Perhaps the merge commit can be avoided?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2756#issuecomment-428693967:11,integrat,integrating,11,https://root.cern,https://github.com/root-project/root/pull/2756#issuecomment-428693967,1,['integrat'],['integrating']
Integrability,"Thanks for noting this problem. Note that the first new Error message is inaccurate. For example,; ```; gInterpreter->GenerateDictionary(""std::vector<TNamed*>"","""");; ```; works perfectly. And in my opinion the 2nd error message might be too noisy for this kind of error. Either way, my understanding of the problem is simply a missing nullptr checking which was apply to 'just' TCint.cxx at a time we had both TCint and TCintWithCling.cxx:; ```; commit 40ff05f286d494f930c00d81942b845f240a74f9; Author: Axel Naumann <Axel.Naumann@cern.ch>; Date: Thu Jan 19 09:46:31 2012 +0000. Fix Coverity 39060 (deref of 0 ptr); ; ; git-svn-id: http://root.cern.ch/svn/root/trunk@42716 27541ba8-7e3a-0410-8455-c3a389f83636. diff --git a/core/meta/src/TCint.cxx b/core/meta/src/TCint.cxx; index 311e2f2d99..b9babb70e6 100644; --- a/core/meta/src/TCint.cxx; +++ b/core/meta/src/TCint.cxx; @@ -1165,6 +1165,7 @@ Int_t TCint::GenerateDictionary(const char *classes, const char *includes /* = 0; // gInterpreter->GenerateDictionary(""myclass"",""myclass.h;myhelper.h"");; ; if (classes == 0 || classes[0] == 0) return 0;; + if (!includes) includes = """";; ; // Split the input list; std::vector<std::string> listClasses;; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1724#issuecomment-371907648:62,message,message,62,https://root.cern,https://github.com/root-project/root/pull/1724#issuecomment-371907648,4,['message'],['message']
Integrability,"Thanks for opening this issue!. The training part of TMVA is not developed anymore, that's why this issue was not be addressed. Sorry for not giving any feedback and leaving it in limbo state for so long. See also: https://indico.cern.ch/event/1356068/contributions/5709442/attachments/2811744/4907885/ML4EP_Feedback.pdf. Quote from slide 4:; > We want to support experiments inference (C++) for cases that are difficult to; implement or require heavy dependencies.; We don’t want to compete with existing industry tools for training.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7092#issuecomment-2046133207:452,depend,dependencies,452,https://root.cern,https://github.com/root-project/root/issues/7092#issuecomment-2046133207,2,['depend'],['dependencies']
Integrability,"Thanks for providing us with a deadline by when you need this. It's on our radar (I was just discussing this with Scott, without having seen your comment!) and we will make sure to address this soon. I don't know whether we can still address this before 6.30 though; instead we will be able to integrate a fix in the next patch release of 6.28 and 6.30/02. I hope that's okay?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13410#issuecomment-1743413245:294,integrat,integrate,294,https://root.cern,https://github.com/root-project/root/issues/13410#issuecomment-1743413245,1,['integrat'],['integrate']
Integrability,"Thanks for quick reaction!. First, how I installed root - I followed; instructions on https://root.cern/install/,; originally fulfilling all required dependencies; for suse and up to the end. All went smoothly.; At the end I issued the command source ../root_install/bin/thisroot.sh; and strted root. After invoking root; I entered the command new TBroser( it is shown in bug report); and it crashed!; Waiting for you response, V.Kurbatov. On 2020-10-15 10:46, Enric Tejedor wrote:; > Thank you for the report @kurbatov-lang [1] ! Could you please provide; > a reproducer of how you get that crash?; > ; > --; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub [2], or unsubscribe; > [3].; > ; > Links:; > ------; > [1] https://github.com/kurbatov-lang; > [2] ; > https://github.com/root-project/root/issues/6645#issuecomment-708966537; > [3] ; > https://github.com/notifications/unsubscribe-auth/AQQ2QXOW4N6DHNM6LMQUBYDSK2SDTANCNFSM4SRTOZQQ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6645#issuecomment-708987106:150,depend,dependencies,150,https://root.cern,https://github.com/root-project/root/issues/6645#issuecomment-708987106,1,['depend'],['dependencies']
Integrability,"Thanks for reporting this! I'm on it. It's another classic RooFit bug. RooFit should consider all RooAbsArgs with the same name as equivalent, but sometimes it doesn't. Here, cloning the observables, which is done in the plotting, messes up something in the integral creation:. ```C++; #include <RooConstVar.h>; #include <RooDataSet.h>; #include <RooGaussian.h>; #include <RooLinearVar.h>; #include <RooRealVar.h>. void repro(); {; using namespace RooFit;. RooRealVar x{""x"", """", 0, 1};; RooRealVar y{""y"", """", 0, 1};. RooLinearVar x2{""x2"", """", x, RooConst(1), RooConst(0)};; RooLinearVar y2{""y2"", """", y, RooConst(1), RooConst(0)};. // RooGaussian can integrate over x or mu, but not both still, the issue is; // visible regardless; RooGaussian gauss{""g"", """", x2, y2, RooConst(0.2)};. // works fine, numerical integral only for the 2D normalization integral,; // and its over y2 (meaning that the RooLinearVar integral works) but not in; // the y projection if the pdf supported 2D integrals, there would be no; // numerical integrals at all; std::unique_ptr<RooAbsReal> integral{gauss.createIntegral({y}, {x, y})};; integral->Print();. RooRealVar xCopy{x};; RooRealVar yCopy{y};. // numerical integral over y (unwanted); std::unique_ptr<RooAbsReal> integral2{gauss.createIntegral({yCopy}, {xCopy, yCopy})};; integral2->Print();; }; ```. I suppose the fix will be a small change in RooRealIntegral to compare something by name and not by pointer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12646#issuecomment-1519882661:650,integrat,integrate,650,https://root.cern,https://github.com/root-project/root/issues/12646#issuecomment-1519882661,1,['integrat'],['integrate']
Integrability,"Thanks for taking a look Oksana, commit message updated!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5405#issuecomment-617261492:40,message,message,40,https://root.cern,https://github.com/root-project/root/pull/5405#issuecomment-617261492,1,['message'],['message']
Integrability,"Thanks for the PR Simon!. @lmoneta, could you have a look at this?. The bugfix is quite important, more details in the referenced forum post. One thing to be aware of is that it contains a minor change to the interface of the TDataLoader that affects the GSoC students working on the TMVA::DNN.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/779#issuecomment-316057090:209,interface,interface,209,https://root.cern,https://github.com/root-project/root/pull/779#issuecomment-316057090,1,['interface'],['interface']
Integrability,"Thanks for the attention to it. Maybe I was too enthusiastic in the context of displayed objects and interactive root sessions. I'm not an expert, but still learning. Th RDirectory looks interesting. Subroutines leaving global objects lying around still seems funny. It could be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```; // my_subroutines.C; void my_subroutine(unique_ptr<TCanvas> &x) {; x.reset() // TCanvas requires the extra step, see note below.; x.reset(new TCanvas());; // .. do something with it.; }; ```. ```; //make_canvas.C; namespace root_global { ; unique_ptr<TCanvas> c1;; }. void make_canvas() {; // we decide at the top level to use a global here:; my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice; unique_ptr<TCanvas> local_canvas;; my_subroutine(local_canvas);; }; ```; or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```; //display.h. class display {; private:; unique_ptr<TCanvas> c1;; public:; void make_canvas() {; c1.reset(); ; c1.reset(new TCanvas());; }; };; ```; And use it like:; ```; //make_display.C; #include ""display.h"". namespace root_global { ; display my_display;; }. // main routine:; void make_display() { ; // This one will stick around; root_global::my_display.make_canvas();. // This one wont. ; display local_display;; local_display.make_canvas();; }; ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-787621241:336,rout,routine,336,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-787621241,2,['rout'],['routine']
Integrability,Thanks for the catch. Actually I don’t understand why this PR is not integrated. It seems to be a more extensive version of my change. I will update my PR with the d3 name change I missed and discuss with Lorenzo how to best respond to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1520#issuecomment-408066118:69,integrat,integrated,69,https://root.cern,https://github.com/root-project/root/pull/1520#issuecomment-408066118,1,['integrat'],['integrated']
Integrability,Thanks for the comment! The added dependency in RooFitCore was an accident. I will change that back,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11880#issuecomment-1348512409:34,depend,dependency,34,https://root.cern,https://github.com/root-project/root/pull/11880#issuecomment-1348512409,1,['depend'],['dependency']
Integrability,"Thanks for the comment. At this point this issue seems to conflate two things: ; 1. The dependencies of python tests. This should have been addressed by #16555 ; 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553#issuecomment-2384870116:88,depend,dependencies,88,https://root.cern,https://github.com/root-project/root/issues/16553#issuecomment-2384870116,4,['depend'],['dependencies']
Integrability,"Thanks for the comments! I will change things a little bit to address these concerns. What made me weary now is that the compiler doesn't suggest any `override` keywords for the RDF-related member functions in the RooAbsDataHelper. So what I think is that it's probably not even necessary to inherit from `RActionImpl`! Maybe that was just done by the original author for convenience. I think this dependency can actually be avoided without changing and RDF code. ...or maybe not, but I'll check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16606#issuecomment-2394997637:398,depend,dependency,398,https://root.cern,https://github.com/root-project/root/pull/16606#issuecomment-2394997637,1,['depend'],['dependency']
Integrability,"Thanks for the detailed analysis, @eguiraud! I will see what happens when remove the special case to not strip the protocol part. Should be fine, since this goes into `TFile::Open` but better get confirmation from @pcanal as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1297265726:115,protocol,protocol,115,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1297265726,1,['protocol'],['protocol']
Integrability,"Thanks for the great comments @guitargeek! All the ones I didn't comment on I agree with, so will implement those soon. I agree that it has become quite a complex class. It would be nice if things could be refactored at some time. However, part of it is also inevitable, I fear, because `RooMinimizer` has to bridge between two rather different frameworks, that of Minuit2 and RooFit, and now due to all the parallel processing work will have to deal with even more stuff than before. By the way, just as a historical aside: at some point I had turned `RooMinimizer` into a fully templated class, which made it even more horrible to maintain and time consuming to develop (since the header had to be recompiled on every change). I managed to trim the template horror down to just the constructor by introducing `RooAbsMinimizerFcn`. That introduced its own complexity here and there, as we discussed above :) But it was better in the end, I think. Note that the sole reason the template parameter is still necessary in the constructor is that the `MinimizerFcn` needs the proper constructor inside the `RooMinimizer` constructor. I like your suggestion of also using the template class argument instead of the `dynamic_cast` using `std::is_same`, but this is not strictly necessary like using the proper constructor is. By the way, note also that in the upcoming TestStatistics PR, there will be yet another `RooMinimizer` constructor, also with template arguments, but different ones, namely the concrete calculator classes for the likelihood and gradient. Maybe it would be better to discuss this design aspect further in that PR, because then we have the full picture.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-879703750:309,bridg,bridge,309,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-879703750,1,['bridg'],['bridge']
Integrability,"Thanks for the nice example. It works on Ubuntu, too.; (Sorry, my last message was an error on my side, I was passing a nullptr as myButton). Why is SetText() leading to a crash?. Maybe we could add a short comment here in the documentation:; https://root.cern/doc/master/classTGTextButton.html#aa2d8b609e96fb43c0a11b6b9ece52c83. ""If you use a signal-slot connection with inline argument passed as (text) value, use ChangeText instead of SetText"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7195#issuecomment-779120010:71,message,message,71,https://root.cern,https://github.com/root-project/root/issues/7195#issuecomment-779120010,1,['message'],['message']
Integrability,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9429#issuecomment-992593304:300,message,message,300,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304,2,['message'],['message']
Integrability,"Thanks for the review @Axel-Naumann!; > ```; > extern { enum {k; }; };; > struct { enum {k; }; };; > namespace { enum {k; }; }; > inline namespace N { enum {k; }; }; > ```; This change only applies to DeclExtractor; as per the current implementation, `extern ...` and `namespace { ... }` decls are not wrapped (thus, not decl-extracted). However, `struct { enum { ... } } foo` is. In this case, lookup works as usual if the `CXXRecordDecl` is moved out of the wrapper (as it is a `DeclContext` itself).; For completeness, I have added a test case for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9789#issuecomment-1028300025:302,wrap,wrapped,302,https://root.cern,https://github.com/root-project/root/pull/9789#issuecomment-1028300025,2,['wrap'],"['wrapped', 'wrapper']"
Integrability,"Thanks for the review @eguiraud , regarding :. > the _extra_args relay logic could be documented a bit better (I'm not sure MethodTemplateWrapper's init method needs to take extra_args as argument, but MethodTemplateGetter's docs should mention that the extra_args are passed when constructing the wrapper_class instance. I think this is already clear enough in the docs of `__get__` in `MethodTemplateGetter`:; ```; Returns:; instance of MethodTemplateWrapper subclass: contains a handle to; the original implementation of the method template that is; bound to `instance` and, possibly, some extra arguments to be; used when receiving a call.; ```; also `_extra_args` is documented as:; ```; _extra_args (tuple): extra arguments to be used by the wrapper object; when receiving a call.; ```; And the extra args need to be passed when constructing the getter, so they can be passed to the wrapper (the user that is pythonizing a class only deals with the getter).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10341#issuecomment-1094750476:748,wrap,wrapper,748,https://root.cern,https://github.com/root-project/root/pull/10341#issuecomment-1094750476,4,['wrap'],['wrapper']
Integrability,"Thanks for the review! By reusing the buffer, one can evaluate RooHistPdfs and RooHistFuncs without additional memory: first, the output buffer of the HIstPdf is filled with the bin indices, and then you look up the values in the RooHistPdf at these indices. The alternative to cover this usecase would be to use an integer, and then use `reinterpret_cast` in the RooHistPdf/Func. Maybe that is nicer, and actually requires less casting around inside the `binNumbers` implementation. So I think I'll change that, thanks!. By the way, the alternative was `int` instead of `size_t`, because all the rest of the binning interface uses `int`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11151#issuecomment-1209009330:617,interface,interface,617,https://root.cern,https://github.com/root-project/root/pull/11151#issuecomment-1209009330,1,['interface'],['interface']
Integrability,"Thanks for the review!. > Are all RooStats tutorials dependent on XML ? I think some of them, not using the HIstFactory to create the input workspace, could work without XML. Anyway for simplicity is probably better excluding all if XML is not present. No, not all of them. In the past, I think Windows was built without XML, so it was more important to be pedantic with the vetos there to have at least some test coverage of RooStats on Windows. Nowadays, no test configuration has `xml=OFF` anyway. > Thanks for simplifying the rs401d to use the RooGenericPdf. In the past it was too slow to use with CINT the generic PDF, now with Cling should not be a problem. Yes, I measured the timing, and there was no slowdown from using `RooGenericPdf` in this particular case!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14074#issuecomment-1818475645:53,depend,dependent,53,https://root.cern,https://github.com/root-project/root/pull/14074#issuecomment-1818475645,2,['depend'],['dependent']
Integrability,"Thanks for the review!; I have downgraded the deprecation messages, just mentioning the alternative. How do you like it now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14754#issuecomment-1949917116:58,message,messages,58,https://root.cern,https://github.com/root-project/root/pull/14754#issuecomment-1949917116,1,['message'],['messages']
Integrability,"Thanks for the reviews, @hageboeck and @lmoneta!. I'll merge it after https://github.com/root-project/root/pull/8167 so I can use the improved RooArgSet constructor from iterators that Stephan introduced in that PR. I also will update the changes to the RooFit collection classes in this PR to avoid using the `std::span` ROOT backport in the interface, as advised by @hageboeck (see https://github.com/root-project/root/pull/8167#discussion_r646480340).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7907#issuecomment-856230037:343,interface,interface,343,https://root.cern,https://github.com/root-project/root/pull/7907#issuecomment-856230037,1,['interface'],['interface']
Integrability,"Thanks for these changes. I apologise for coming back to them so late. ; I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):; - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing?; - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages?; - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14813#issuecomment-2038169206:612,message,messages,612,https://root.cern,https://github.com/root-project/root/pull/14813#issuecomment-2038169206,2,['message'],['messages']
Integrability,"Thanks for this attempt. There are a few issues remaining and those of course will have to be understood. On top of those, I would like to ask, if possible, to check that there is no lookup triggered by the new name discovering routine: we want to avoid slowdowns+memory allocations due to unwanted accesses to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14676#issuecomment-1943375264:228,rout,routine,228,https://root.cern,https://github.com/root-project/root/pull/14676#issuecomment-1943375264,1,['rout'],['routine']
Integrability,"Thanks for this detailed report! I do not really understand how your ""proposed solution"" is different from what we had before. It looks like you only changed the way the error message is printed. Maybe I missed something...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14592#issuecomment-1929074051:176,message,message,176,https://root.cern,https://github.com/root-project/root/issues/14592#issuecomment-1929074051,1,['message'],['message']
Integrability,"Thanks for you comments @lmoneta.; I'm sorry for my late reply but since nothing happened here for over a month, I stopped watching. The reason I used double pointers for the 2D arrays was to have the most low level datatype possible, have full felxibility and stay consistent with the other TGraph classes which are all using pointers for 1D arrays. Nevertheless I understand your concerns since double pointers for arrays are a rather dirty way of programming. I think it might be a good compromise to use the ROOT array wrapper class TArrayD. Then the two dimensional Arrays could be represented by an 1D array of TArrayD objects. The functions SetPointEY, SetPointEYL and SetPointEYH were implemented by me to keep full consistency with the TGraphAsymmErrors class. They are overloaded with one version taking the point and an array in which case the array cointains all errors of the named point for the different dimensions. My idea was to alter the TGraphAsymmErrors notation as little as possible so TGraphAsymmErrors::SetPointEY(i, el, eh) would translate to TGraphMultiErrors::SetPointEY(i, &el, &ey) in the case of only one error dimension which would be equal to a TGraphAsymmErrors. The idea of the function SetDimensionEY, SetDimensionEYL and SetDimensionEYH is basically the same. They set the errors of all points in the given dimension. My idea was to think of a way to convert from multiple TGraphAsymmErrors objects to one single TGraphMultiErrors object like in this small example:; ```; TGraphAsymmErrors* statisticErrors = ...; TGraphAsymmErrors* systematicErrors = ... TGraphMultiErrors* theGraph = new TGraphMultiErrors(statisticErrors->GetN(), 2, statisticErrors->GetX(), statisticErrors->GetY(), statisticErrors->GetEXlow(), statisticErrors->GetEXhigh());; theGraph->SetDimensionEY(0, statisticErrors->GetEYlow(), statisticErrors->GetEYhigh());; theGraph->SetDimensionEY(1, systematicErrors->GetEYlow(), systematicErrors->GetEYhigh());; ```. But again I see your point since ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-516408489:523,wrap,wrapper,523,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-516408489,1,['wrap'],['wrapper']
Integrability,"Thanks for your PR, @guiguem !. After a discussion within the team we decided not to apply it for the following reasons:; - RooFit is not even enabled by default. If we reconsider that ROOT should really be built with RooFit then we will revisit your PR (or something similar).; - it is fairly trivial to add `RooFit` to CMake's `find_package` https://root.cern.ch/how/integrate-root-my-project-cmake / to add a `-lRooFit` behind `root-config --libs`, so adding this to our build system doesn't appear to be a huge simplification for users. I hope this explanation reduces a bit the frustration that our decision might cause - we do appreciate your suggestion especially as it's a PR!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1002#issuecomment-330508193:369,integrat,integrate-root-my-project-cmake,369,https://root.cern,https://github.com/root-project/root/pull/1002#issuecomment-330508193,2,['integrat'],['integrate-root-my-project-cmake']
Integrability,"Thanks for your comment, Sergey - this is exactly what we were after and why we do it already now for 6.18!. We are not aware of current users of the ODBC interfaces. The post you mentioned seems more of a test balloon - it would be interesting to hear whether it's actually used. We can either ""undeprecate"" it and add tests (!) or remove it - it has been deprecated for one release now. And IIRC even *building* the ODBC part is becoming increasingly tricky with current distros...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3232#issuecomment-452745969:155,interface,interfaces,155,https://root.cern,https://github.com/root-project/root/pull/3232#issuecomment-452745969,1,['interface'],['interfaces']
Integrability,Thanks for your prompt reply @vepadulano.; I changed it to Bool_t because I thought that it was preferred to use types defined in `Rtypes.h` in public interfaces.; Now that I look more in detail at the coding convention recommendations I see that this only applies to data that might be written to disk.; I can revert it; do you prefer that I make another commit on top or should I squash them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13748#issuecomment-1739610736:151,interface,interfaces,151,https://root.cern,https://github.com/root-project/root/pull/13748#issuecomment-1739610736,1,['interface'],['interfaces']
Integrability,"Thanks for your proposal! We won't need `std::shared_ptr<std::vector<Double_t>>` as datatype; `std::vector<Double_t>` would be enough as this allows cheap move operations. Then again, so does `Double_t *`. Did you consider simply implementing a move operator for `TGraph`?. We must avoid all backward incompatible interface changes. I didn't look in detail but the amount of code changes here suggests that this isn't the case for this draft?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9610#issuecomment-1056797487:314,interface,interface,314,https://root.cern,https://github.com/root-project/root/pull/9610#issuecomment-1056797487,2,['interface'],['interface']
Integrability,"Thanks! I don't think the `RooRealAnalytic` is used, or at least it should not be used. And if people use it, they can do the same as I did here, wrapping an integral in a `RooRealBinding`. But a good point anyway, I'll mention it in the release notes!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13334#issuecomment-1660023335:146,wrap,wrapping,146,https://root.cern,https://github.com/root-project/root/pull/13334#issuecomment-1660023335,1,['wrap'],['wrapping']
Integrability,"Thanks! I'll merge and backport this asap, just force-pushed a final time here to fix some typos in the commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12079#issuecomment-1400399292:111,message,message,111,https://root.cern,https://github.com/root-project/root/pull/12079#issuecomment-1400399292,1,['message'],['message']
Integrability,Thanks! Is there a page explaining the dependencies? I tried and I get this error:; `ImportError: No module named nbformat`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-910349680:39,depend,dependencies,39,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-910349680,1,['depend'],['dependencies']
Integrability,"Thanks! You are right, the message is quite cryptic for users... I hope I can improve the situation in the next release, maybe even find the underlying reason for this proxy desync. But for 6.28 I didn't have much time, and I still needed to do something that doesn't throw anymore, and at least now it gives a warning that is useful for us developers to debug the problem. Actually you can kind of thee if RooFit does the right thing because the warning prints out the proxy contents. From the names of the factors of the product, you can guess which one was probably meant to serve the `RooProduct`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12046#issuecomment-1387168423:27,message,message,27,https://root.cern,https://github.com/root-project/root/pull/12046#issuecomment-1387168423,1,['message'],['message']
Integrability,"Thanks! You're right, it's not that necessary, but having this interface more general would have avoided the question on the forum to begin with. And I think every change that would have prevented a question is a good change, to avoid more duplicate questions in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13266#issuecomment-1659938360:63,interface,interface,63,https://root.cern,https://github.com/root-project/root/pull/13266#issuecomment-1659938360,1,['interface'],['interface']
Integrability,"Thanks!; It's not deprecated, but rather part of a legacy interface. No alternative exists at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14765#issuecomment-2032719816:58,interface,interface,58,https://root.cern,https://github.com/root-project/root/issues/14765#issuecomment-2032719816,1,['interface'],['interface']
Integrability,Thanks!; So I guess the easiest solution would be to add nlohmann-json to https://root.cern/install/dependencies/ and we're all set.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1845007333:100,depend,dependencies,100,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1845007333,1,['depend'],['dependencies']
Integrability,"Thanks, @Axel. Just FYI, I plan to update the `README/INSTALL` file due to [ROOT-9488](https://sft.its.cern.ch/jira/browse/ROOT-9488) and [ROOT-9333](https://sft.its.cern.ch/jira/browse/ROOT-9333), that's why I'm pointing the message there. Then we can point https://root.cern/building-root to the updated documentation (or just repeat the same information in the website).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4132#issuecomment-523877678:226,message,message,226,https://root.cern,https://github.com/root-project/root/pull/4132#issuecomment-523877678,1,['message'],['message']
Integrability,"Thanks, @egpbos and @jspaaks ! Validation succeeds now. > suggest to add a GitHub Actions workflow. AFAICT we need this to be integrated with our release workflow. Once that's a GH Action we can also migrate the `CITATION.cff` generation and validation there. I *think* it's fairly hard to break the file given that it's generated by a script; I also dislike the pile of dependencies of `cffconvert` for a simple thing like validation, IMO it's too heavy to add it to the script producing `CITATION.cff`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8626#issuecomment-876311455:126,integrat,integrated,126,https://root.cern,https://github.com/root-project/root/pull/8626#issuecomment-876311455,4,"['depend', 'integrat']","['dependencies', 'integrated']"
Integrability,"Thanks, @eguiraud . I don't see this as a reason to complain if `ROOT_MAX_THREADS` is set to a value higher than what the TBB arena will use in the end - also because it's already fairly involved to figure out what that number will be... If I got you wrong and / or my above statement is incorrect then we will add that error message in a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13057#issuecomment-1611048723:326,message,message,326,https://root.cern,https://github.com/root-project/root/pull/13057#issuecomment-1611048723,1,['message'],['message']
Integrability,"Thanks, @stephanlachnit . I don't understand yet why we cannot make use of the more specific dependency info we have in our CMake build system also for external LLVM? I.e. for builtin LLVM we say which libraries we depend on, and we link only those. Why isn't that also working in the case of an external LLVM?. As an example, in `core/rootcling_stage1/CMakeLists.txt` we have; ```CMake; ROOT_EXECUTABLE(rootcling_stage1 src/rootcling_stage1.cxx; [...]; LIBRARIES ${CLING_LIBRARIES} ${CMAKE_DL_LIBS} ${CMAKE_THREAD_LIBS_INIT} ${ROOT_ATOMIC_LIBS}; NOINSTALL); ```. `CLING_LIBRARIES` comes from `interpreter/CMakeLists.txt`:; ```CMake; set(CLING_LIBRARIES clingInterpreter;clingMetaProcessor;clingUtils CACHE STRING """"); ```. And `clingInterpreter` is defined at `interpreter/cling/lib/Interpreter/CMakeLists.txt` with all its LLVM dependencies:; ```CMake; set(LIBS; clingUtils; [...]; ). set(LLVM_LINK_COMPONENTS; analysis; [...]; ```. I'd hope that this can get used also for builtin LLVM?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1667698745:93,depend,dependency,93,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1667698745,3,['depend'],"['depend', 'dependencies', 'dependency']"
Integrability,"Thanks, @vepadulano, for checking the release notes. Please let me merge, I want to update the commit message adding the link above to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11655#issuecomment-1301004251:102,message,message,102,https://root.cern,https://github.com/root-project/root/pull/11655#issuecomment-1301004251,1,['message'],['message']
Integrability,"Thanks, Bertrand. Just got several error messages in my previous PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5119#issuecomment-596946102:41,message,messages,41,https://root.cern,https://github.com/root-project/root/pull/5119#issuecomment-596946102,1,['message'],['messages']
Integrability,"Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default?. Firefox also has this setting in about:config to disable or enable it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7272#issuecomment-784937198:31,depend,depends,31,https://root.cern,https://github.com/root-project/root/pull/7272#issuecomment-784937198,1,['depend'],['depends']
Integrability,"Thanks. I've had a quick look -- so your approach is to say that the global observables get added to the dataset in the same way you would list your observables, but then you have a way to flag which of the observables are the global ones?. I guess I was imagining instead that the global observables would be truly independent of the observables. So e.g. I would have code like:. ```; RooDataSet ds(""data"",""data"", RooArgSet{a,b,c}, RooFit::GlobalObservables(RooArgSet({x,y,z}));; ds.getGlobals(); // return RooArgSet* to global observables, or null pointer if Dataset has no global observables attached; ds.getGlobals()->setRealValue(""x"",4); // changing the value in the global observables; ```. Do you think that sort of interface will cause problems though?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8123#issuecomment-838595643:723,interface,interface,723,https://root.cern,https://github.com/root-project/root/issues/8123#issuecomment-838595643,1,['interface'],['interface']
Integrability,"That breakpoint indeed never trips, but it's definitely injecting null ptr checks from somewhere:; (see the presence of ```cling_runtime_internal_throwIfInvalidPointer ()``` in the stack trace). And also confirmed that my real use case runs much slower (boost histogram template instantiations from pyroot). ```python; import ROOT; ROOT.gInterpreter.ProcessLine("".O3""). import time. ROOT.gInterpreter.Declare(""""""; template <typename T>; double templateTest() {; double *d = nullptr;; return *d;; }; """"""). print(""sleep""); time.sleep(5); # I stop here manually and insert the breakpoint; print(""instantiating template""). ROOT.templateTest[""double""](); ```. ```; (wmassdevrolling) [bendavid@lxplus8s10 wmassdev]$ python testnullptr.py ; sleep; instantiating template. Thread 2 (Thread 0x7f23282e3640 (LWP 13939) ""python""):; #0 0x00007f2343ecc8ca in __futex_abstimed_wait_common64 () from /usr/lib/libpthread.so.0; #1 0x00007f2343ec6574 in pthread_cond_timedwait. GLIBC_2.3.2 () from /usr/lib/libpthread.so.0; #2 0x00007f23441ba0d3 in ?? () from /usr/lib/libpython3.10.so.1.0; #3 0x00007f23441d85a2 in PyEval_RestoreThread () from /usr/lib/libpython3.10.so.1.0; #4 0x00007f23442f7cfd in ?? () from /usr/lib/libpython3.10.so.1.0; #5 0x00007f23441e8b23 in ?? () from /usr/lib/libpython3.10.so.1.0; #6 0x00007f23441de55f in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #7 0x00007f23441e9538 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #8 0x00007f23441dc328 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #9 0x00007f23441e9538 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #10 0x00007f23441d9ca5 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #11 0x00007f23441e9538 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #12 0x00007f23441d9ca5 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #13 0x00007f23441f4cc5 in ?? () from /usr/lib/libpython3.10.so.1.0; #14 0x00007f23442da4f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1011105337:56,inject,injecting,56,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1011105337,1,['inject'],['injecting']
Integrability,"That depends on how often we'd rebuild `rootcling_stage1` even though there was no need, i.e. we rebuild only due to the artificial order dependency. Do you have an estimate, @ellert ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1516#issuecomment-359757642:5,depend,depends,5,https://root.cern,https://github.com/root-project/root/pull/1516#issuecomment-359757642,2,['depend'],"['dependency', 'depends']"
Integrability,That depends on the implementation. If during the serialization you create a map member-name => value-as-string then it's easy to find dupe member names.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8181#issuecomment-842303270:5,depend,depends,5,https://root.cern,https://github.com/root-project/root/pull/8181#issuecomment-842303270,1,['depend'],['depends']
Integrability,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-790683439:5,depend,depends,5,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-790683439,1,['depend'],['depends']
Integrability,"That doesn't really answer any of my two questions: There are other parties than us using the libc++ modulemap, notably Apple. Why don't they see this problem? And what is special about the two installations alluded to in the commit message, when it's working in the CI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2370376079:233,message,message,233,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2370376079,1,['message'],['message']
Integrability,"That was a miss-click (closing and reopening)! . That update isn't critical, because i use distribution with gcc-9. I just have tried to install root on a newer machine with gcc-11 and that issue came up. I'm using v6.16 since it has qt and qtgsi modules for easy integration in Qt applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9517#issuecomment-1010271846:264,integrat,integration,264,https://root.cern,https://github.com/root-project/root/pull/9517#issuecomment-1010271846,1,['integrat'],['integration']
Integrability,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags; 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests; 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`; 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16612#issuecomment-2396463790:137,depend,dependency,137,https://root.cern,https://github.com/root-project/root/issues/16612#issuecomment-2396463790,4,['depend'],['dependency']
Integrability,"That will solve the build issue which is just a symptom. However, it will not solve the same problem at deployment time. It seems to be equivalent to removing the `root.exe -l -b -q tutorials/hsimple.C` check altogether. Even if we decided to go that route, I am not sure if we have that information in the right places in the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1025636393:251,rout,route,251,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1025636393,1,['rout'],['route']
Integrability,"That would be a good interface. There would always be a practical limit on the number of items that one could view, but suppose we just don't want to specify it (and risk running out of memory in extreme cases). Can `nItems = -1` or `nItems < 0` mean ""send me everything""? The function would still change `nItems` in place to tell the caller how many items are actually in the `const T*` that it returns. Also, who owns the `const T*` memory? Would deleting the `RNTupleView` free that `const T*`?. Might the `const T*` a concatenation of multiple pages, or is this still granular at the page level? If it can be a concatenation of multiple pages, then it would be a different buffer from the one the `RNTupleView` manages internally. If it could be _either a view or a copy_, then the `RNTupleView` must own it because this object would have the most information to keep track of whether its internal buffer-freeing frees the `const T*`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7112#issuecomment-825682200:21,interface,interface,21,https://root.cern,https://github.com/root-project/root/pull/7112#issuecomment-825682200,1,['interface'],['interface']
Integrability,"That's a good question. I did not see a practical use case for this in first place. It seems it has been introduced quite long ago in root-project/root@64e9dbe5c72c0ccc8a942e8cec19fbdfe81200bd However, it did not have any documentation (besides the commit message) and I doubt it was picked up by the users. The rootmaps are not deprecated by the release in the usual meaning of deprecation. From this release onward the rootmap files should be considered a legacy feature. We should limit their use because we have a superior system. I do not think the deprecation is premature. It will give us a better understanding if we need this option. If we do we should have something similar with modules, if we don't it would reduce the complexity of rootcling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4716#issuecomment-570138706:256,message,message,256,https://root.cern,https://github.com/root-project/root/pull/4716#issuecomment-570138706,1,['message'],['message']
Integrability,"That's exactly the right observation! In fact the `ClassDef` and LinkDef entry for `RooMomentMorphND::Grid` is missing, so users could not do IO with it. Therefore, we have the nice opportunity to make the `RooMomentMorphND` consistent with the `RooMomentMorphFuncND` (for which the `Grid2` LinkDef entry exists) without breaking backwards compatibility. And if we see that these classes are just the same besides using a different base class, we can even remove `RooMomentMorphND` and tell users to use `RooMomentMorphFuncND` with the `RooPdfWrapper` adapter, like we do for many other classes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12000#issuecomment-1378797114:552,adapter,adapter,552,https://root.cern,https://github.com/root-project/root/pull/12000#issuecomment-1378797114,1,['adapter'],['adapter']
Integrability,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\; And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6526#issuecomment-702072629:52,message,message,52,https://root.cern,https://github.com/root-project/root/pull/6526#issuecomment-702072629,2,['message'],['message']
Integrability,"That's great! Yes indeed the main purpose of the new test was to check that unknown arguments are kept by default and accessible to you. The case where unknown arguments are not accepted already calls `Terminate()` internally and we check that by looking at what's printed in `stderr`. The other case that needed calling `app.Run` then injecting something like `.q` it's unfeasible right now, but I take your confirmation that everything works well as a green light to close this issue. Thanks again for reporting and all your help, I will also make sure to backport the fixes so that you can benefit from them already in the next patch release :smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1068891196:336,inject,injecting,336,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1068891196,1,['inject'],['injecting']
Integrability,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14819#issuecomment-2018796159:142,depend,dependency,142,https://root.cern,https://github.com/root-project/root/issues/14819#issuecomment-2018796159,1,['depend'],['dependency']
Integrability,"That's what's written here:. ""; GitHub Actions usage is free for public repositories and self-hosted runners. For private repositories, each GitHub account receives a certain amount of free minutes and storage, depending on the product used with the account. By default, your account will have a spending limit of $0, which prevents additional usage of minutes or storage after you reach these limits. If you increase your spending limit above the default of $0, you will be billed for any minutes or storage beyond the limits, also called overages. GitHub charges usage to the account that owns the repository where the workflow is run. Any coupons on your account do not apply to GitHub Actions overages.; "". IIUC, there is no quota for public repos but the wording is very convoluted so maybe there is another interpretation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6720#issuecomment-719450116:211,depend,depending,211,https://root.cern,https://github.com/root-project/root/pull/6720#issuecomment-719450116,1,['depend'],['depending']
Integrability,"The ""continuous-integration/travis-ci/pr"" test worked now. Are the Jenkins tests expected to work?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5159#issuecomment-628618973:16,integrat,integration,16,https://root.cern,https://github.com/root-project/root/pull/5159#issuecomment-628618973,1,['integrat'],['integration']
Integrability,"The CI build error detection logic is not very clever.; I quoted the error the PR is fixing in the git commit message.; The CI build puts the commit message from the PR in the CI build log.; Then scans the log for errors and tags the quoted error in the commit message as a failure...; The log actually says: 100% tests passed, 0 tests failed out of 1120",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8366#issuecomment-856589322:110,message,message,110,https://root.cern,https://github.com/root-project/root/pull/8366#issuecomment-856589322,3,['message'],['message']
Integrability,"The CI warnings and error are not related to the changes in this PR. They seem to be related to the external dependencies TBB, CFITSIO, and GSL.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9157#issuecomment-948684699:109,depend,dependencies,109,https://root.cern,https://github.com/root-project/root/pull/9157#issuecomment-948684699,1,['depend'],['dependencies']
Integrability,"The CMake build is now much more heavily integrated with the folder structure. This has the positive side that less copying is going on, and the downside that it has to fill in the source directory with the items it needs from ROOT (they are ignored and easy to clean with `make purge`, though). Like before, you can build in place or make a redistributable source package. Only added one `.gitignore`. Haven't really touched the ROOT Minuit2 build system, though some fixes would be good there too, but that's a later PR. (Instructions have not been updated to new version yet, and not as well tested yet). I can revert to the old system if that's better. The original reason for using CMake to do the copy also was because that avoided having to write a `.sh` file, and was more portable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369603935:41,integrat,integrated,41,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369603935,1,['integrat'],['integrated']
Integrability,"The GitHub interface strips GPG signatures from the commits. I usually merge on my laptop and push, and that way it's as if I pressed merge, but I can keep the GPG signatures. As for the commit, if you look at the date, you'll see it's from a while ago, when I was working on I/O optimizations. I was just trying to improve readability and test range for with ROOT containers. Yes, it works :-) So, I guess we should be trying to use this more than the usual while loop. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/908#issuecomment-326009755:11,interface,interface,11,https://root.cern,https://github.com/root-project/root/pull/908#issuecomment-326009755,1,['interface'],['interface']
Integrability,The PR depends on #5285 to implement the `Numba` namespace lazily.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5310#issuecomment-610223161:7,depend,depends,7,https://root.cern,https://github.com/root-project/root/pull/5310#issuecomment-610223161,1,['depend'],['depends']
Integrability,The ROOT-ubuntu16/rtcxxmod. failure is due to 'stale' dependencies in the build system (the file has been removed from the repository).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4399#issuecomment-533575316:54,depend,dependencies,54,https://root.cern,https://github.com/root-project/root/pull/4399#issuecomment-533575316,1,['depend'],['dependencies']
Integrability,"The RooCmdArg has 2 slots for arbitrary TObject payloads, and 2 slots for RooArgSet payloads. Which slot is used depends on the position of the argset in the [RooCmdArg constructor](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooCmdArg.cxx#L79), which was changed in this PR to use the 1st TObject slot instead of the RooArgSet slot. Now, using RooCmdConfig::decodeObjOnTheFly works, but that also means we have to use `defineObject` instead of `defineSet` in other places. Alternatively, I could have implemented a new function `RooCmdConfig::decodeSetOnTheFly`, but I didn't think this interface extension was necessary because we already store RooArgSets in the TObject slots on most other occasions (see for example [ProjWData()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooGlobalFunc.cxx#L46)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8299#issuecomment-852229545:113,depend,depends,113,https://root.cern,https://github.com/root-project/root/pull/8299#issuecomment-852229545,2,"['depend', 'interface']","['depends', 'interface']"
Integrability,The TBB dependency in Thread was not intended to leak to user code. Instead the header file ROOT/TReentrantRWLock.hxx needs to become a private header (move from inc/ROOT to src).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8022#issuecomment-828800284:8,depend,dependency,8,https://root.cern,https://github.com/root-project/root/issues/8022#issuecomment-828800284,1,['depend'],['dependency']
Integrability,"The [documentation](https://cmake.org/cmake/help/latest/command/enable_language.html) says:. > Enable a language (CXX/C/Fortran/etc); >; >**enable_language(<lang> [OPTIONAL] )**; >This command enables support for the named language in CMake. This is the same as the; >project command but does not create any of the extra variables that are created by the; >project command. Example languages are CXX, C, Fortran.; >; >This command must be called in file scope, not in a function call. Furthermore, **it must; >be called in the highest directory common to all targets using the named language**; >directly for compiling sources or indirectly through link dependencies. It is simplest to; >enable all needed languages in the top-level directory of a project.; >; >The **OPTIONAL** keyword is a placeholder for future implementation and **does not currently work**. So, should we just add this logic directly into the top `CMakeLists.txt` file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/891#issuecomment-325334622:654,depend,dependencies,654,https://root.cern,https://github.com/root-project/root/pull/891#issuecomment-325334622,2,['depend'],['dependencies']
Integrability,"The `#include <ROOT/TPadPos.hxx> ` seems to be gone, but the `#include <ROOT/TPad.hxx>` is still a wrong dependency it seems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2091#issuecomment-392058496:105,depend,dependency,105,https://root.cern,https://github.com/root-project/root/pull/2091#issuecomment-392058496,1,['depend'],['dependency']
Integrability,The `.ref` file in roottest now depends on the presence of `root7`... I'll see how to inject this knowledge in roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13090#issuecomment-1665296956:32,depend,depends,32,https://root.cern,https://github.com/root-project/root/pull/13090#issuecomment-1665296956,2,"['depend', 'inject']","['depends', 'inject']"
Integrability,"The `CheckGradient()` interface was removed, since it had no effect as you said:; https://github.com/root-project/root/commit/94549da66304cd9a94a256620abb09e5fbd1079d. It's also on our radar that numeric gradients are still used for things like the seeding step. We're working towards making Minuit 2 ""numeric gradient free"" as well. If you think this should be tracked separately, feel free to re-open a new issue about this specific subject! Thanks for your input.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8716#issuecomment-2353661996:22,interface,interface,22,https://root.cern,https://github.com/root-project/root/issues/8716#issuecomment-2353661996,1,['interface'],['interface']
Integrability,The `Require*` tests are testing that we correctly check for error conditions -- that should not depend on ST vs MT (but as you saw it might happen that if we check in each thread we get the error message printed N times),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10715#issuecomment-1152086743:97,depend,depend,97,https://root.cern,https://github.com/root-project/root/pull/10715#issuecomment-1152086743,2,"['depend', 'message']","['depend', 'message']"
Integrability,"The `_chg_truncated` functions, e.g. `unur_hinv_chg_truncated` and `unur_tdr_chg_truncated`, change the range of sampled random variables without expensive reinitialization of the generator. So first one initializes the generator with a pdf with a domain (xmin, xmax) and later changes the range in which numbers are actually sampled from (xmin, xmax) to (xmin1, xmax1) which is a sub-range of (xmin, xmax). For methods which do not support this functionality the only option is to change the domain and reinitialize the generator. My use case is that I have a pdf for which I need to change the sampling range for every sample, because it depends on kinematic limits for the given event, although the pdf does not change. Obviously reinitializing the generator would be very costly for the performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7332#issuecomment-880485959:640,depend,depends,640,https://root.cern,https://github.com/root-project/root/issues/7332#issuecomment-880485959,1,['depend'],['depends']
Integrability,"The `file://` prefix is lost here:. https://github.com/root-project/root/blob/8cc176c9ee7dde3b72501a2b657534bc6bd10418/tree/tree/src/TChain.cxx#L485. (this is in `TChain::AddFile` but `TChain::Add` also ends up here). `basename` is the file name stripped of the `file://` prefix and it is what's used to form the file name that's passed to the `TChainElement` constructor later (which is what stores the information about each sub-tree in the chain). It looks like special-casing `file://` is a deliberate choice, here's where just for `file://` we take the URL without the protocol:. https://github.com/root-project/root/blob/8cc176c9ee7dde3b72501a2b657534bc6bd10418/tree/tree/src/TChain.cxx#L2159",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1297193223:574,protocol,protocol,574,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1297193223,1,['protocol'],['protocol']
Integrability,"The `root-project:v6-24-00-patches` branch has been compared to `v6-23-01-RF-binSampling`, by means of 3 different kind of fits to (ATLAS) analytic models: 'small' and 'large' fits without RooBinSamplingPdf, and one analytic-PDF fit with the RooBinSamplingPdf functionality activated. ; Fit results are identical and (real/cpu) runtimes are not significantly different. In particular, for the small fit we have 0.01 min (real runtime) against both tags. For the large one we have 0.10 min in 6.24 vs. 0.08 min in 6.23. ; For the fit with analytical-PDF integration we observe 5.03 and 6.03 min in 6.24 and 6.23, respectively.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8579#issuecomment-872987646:553,integrat,integration,553,https://root.cern,https://github.com/root-project/root/pull/8579#issuecomment-872987646,1,['integrat'],['integration']
Integrability,"The behaviour seems to be compiler dependent. On my machine (gcc7), it is picked up.; Edit: Interesting, `FillColl(bool&& v, COLL& c)` is not picked up :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3169#issuecomment-446963967:35,depend,dependent,35,https://root.cern,https://github.com/root-project/root/pull/3169#issuecomment-446963967,1,['depend'],['dependent']
Integrability,The benchmark is running and integrated in the dashboard here: https://rootbnch-grafana-test.cern.ch/d/G2qrd2SWk/rdataframe?orgId=1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7651#issuecomment-810068200:29,integrat,integrated,29,https://root.cern,https://github.com/root-project/root/pull/7651#issuecomment-810068200,1,['integrat'],['integrated']
Integrability,"The branch created from a leaflist (your case) do not support schema evolution. To make matter worse the C/C++ typedef (int8_t for example) appeared slightly differently to CINT that they appear to Cling. Even the trivial part of the schema evolution that you would need here (maybe), i.e. allow to read 'char' from either 'signed char' or 'unsigned char' depending on the platform or compiler setting (deciding the signness of char) is not implement.; (technically the typeinfo for 'char', 'signed char' and 'unsigned char' are different). So for better or worse you need to use:; ```; char i;; TFile f (file_name.c_str ());; TTree *t = (TTree*)f.Get (""tree"");; t->SetBranchAddress (""i"", &i);; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7565#issuecomment-801302726:356,depend,depending,356,https://root.cern,https://github.com/root-project/root/issues/7565#issuecomment-801302726,1,['depend'],['depending']
Integrability,"The build on ROOT-fedora30/cxx14 fails for no reason, all test have passed but the build is declared UNSTABLE for some unknown reason. @Axel-Naumann any idea? I've seen this message on other builds in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4835#issuecomment-578726534:174,message,message,174,https://root.cern,https://github.com/root-project/root/pull/4835#issuecomment-578726534,1,['message'],['message']
Integrability,The call to `ROOT.TClass.GetClass(name)` https://github.com/cms-sw/cmssw/blob/master/FWCore/Utilities/scripts/edmCheckClassVersion#L129 failed for class `reco::PFTau` https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/interface/PFTau.h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-809949439:231,interface,interface,231,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-809949439,1,['interface'],['interface']
Integrability,"The case @smuzaffar quoted above is actually CPU-only code (even if it uses Alpaka), so the problem is not specific to CUDA/ROCm. The full build log shows a crash also in DataFormats/Histograms package, that is completely independent from GPUs or Alpaka, and that the dictionary generation succeeds for many CUDA-dependent classes. https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8fe9c7/41033/build-logs/DataFormats/Histograms/log.html; ```; 0.	Program arguments: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-a252d5032aa4f9a2fc7dcaab3fac8b9f/bin/rootcling -reflex -f tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc -inlineInputHeader -failOnWarnings -rmf tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.rootmap -rml libDataFormatsHistograms.so -m DataFormatsCommon_xr_rdict.pcm -m DataFormatsProvenance_xr_rdict.pcm -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=120301 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=\""CMSSW_14_1_ROOT6_X_2024-08-19-2300\"" -DPROJECT_NAME=\""CMSSW\"" -DPROJECT_VERSION=\""CMSSW_14_1_ROOT6_X_2024-08-19-2300\"" -Isrc -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/pcre/8.43-e34796d17981e9b6d174328c69446455/include -isystem/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-7ac88d918a6883d593abc133ee0eb2e9/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/bz2lib/1.0.6-d065ccd79984efc6d4660f410e4c81de/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2329311081:313,depend,dependent,313,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2329311081,2,"['depend', 'integrat']","['dependent', 'integration']"
Integrability,The change is on the cmake hotspot used by virtually everybody. The risk to make an error here is high due to the complexity of the routine. Taking such risk weeks before the release should be very well weighted with the actual gain. It seems to me that the gain is not big enough to justify taking this direction for the release branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4763#issuecomment-574165892:132,rout,routine,132,https://root.cern,https://github.com/root-project/root/pull/4763#issuecomment-574165892,1,['rout'],['routine']
Integrability,"The change looks fine to me, thanks for proposing it. Maybe a doubt, which could be clarified by C++ experts (@silverweed @hahnjo) do you know whether we can prevent *at compile time* with an error/warning the situation where a user defines a default c'tor for classes ultimately inheriting from TObject?; If that's not possible, should we also think about a way to check this at dictionary generation level via the Clang interface, when we have the entire AST at disposal?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16218#issuecomment-2285348825:422,interface,interface,422,https://root.cern,https://github.com/root-project/root/pull/16218#issuecomment-2285348825,1,['interface'],['interface']
Integrability,"The code has been cleaned, the requested changes done and the number of commits reduced and with better messages. This PR is far from being finished, but these latest changes should make following development easier and the addition of new vectorized implementations more clear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/655#issuecomment-325232794:104,message,messages,104,https://root.cern,https://github.com/root-project/root/pull/655#issuecomment-325232794,1,['message'],['messages']
Integrability,"The command executed by root is:; ```; gs -quiet -dSAFER -dNOPLATFONTS -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dUseCIEColor -dCompatibilityLevel=1.4 -dPDFSETTINGS=/printer -dCompatibilityLevel=1.4 -dMaxSubsetPct=100 -dSubsetFonts=true -dEmbedAllFonts=true -sOutputFile=pdf_temp.pdf -f Test.pdf; ```; I tried on an other Mac with a more recent version of `gs` and I see also the error message. I am investigating. ```; root [5] c1->Print(""Test.pdf"",""EmbedFonts"");; Info in <TCanvas::Print>: EmbedFonts file Test.pdf has been created; GPL Ghostscript 9.55.0: . Use of -dUseCIEColor detected!; Since the release of version 9.11 of Ghostscript we recommend you do not set; -dUseCIEColor with the pdfwrite/ps2write device family. **** Error: Encountered 'obj' while expecting 'endobj'.; Treating this as a missing 'endobj', output may be incorrect.; **** Error: Encountered 'obj' while expecting 'endobj'.; Treating this as a missing 'endobj', output may be incorrect.; GPL Ghostscript 9.55.0: . Use of -dUseCIEColor detected!; Since the release of version 9.11 of Ghostscript we recommend you do not set; -dUseCIEColor with the pdfwrite/ps2write device family. root [6] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13560#issuecomment-1697296935:381,message,message,381,https://root.cern,https://github.com/root-project/root/issues/13560#issuecomment-1697296935,1,['message'],['message']
Integrability,The commit message seems pretty clear to me. Can you suggest something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1427114379:11,message,message,11,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1427114379,2,['message'],['message']
Integrability,"The context is; ```; 17:06:38 [10689/11146] Running utility command for SofieCompileModels_ONNX; 17:06:38 error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; 17:06:38 fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; 17:06:38 FAILED: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.util ; ```; This didn't happen before with my changes. It looks like TMVA/Sofie is trying to build a test that needs the PCH before the PCH is created (i.e. that particular test should depend on the PCH being built and it's currently not). That is, the equivalent of. https://github.com/root-project/root/blob/master/tmva/sofie/test/CMakeLists.txt#L96-L103. is missing for `SofieCompileModels_ONNX`. Maybe @lmoneta has seen this problem before?; This test seems to have [other problems](https://mattermost.web.cern.ch/root/pl/ckkqimfxxpbefeq4rrcn3t5dpy) as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1401704523:631,depend,depend,631,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1401704523,1,['depend'],['depend']
Integrability,"The default blas version in RHEL/Alma/Rocky 9 is flexiblas. All system libraries linked to blas uses (or at least should use) it. This includes the numpy version provided by the system:. # rpm -q python3-numpy; python3-numpy-1.20.1-5.el9.x86_64; # rpm -q --requires python3-numpy | grep blas; libflexiblas.so.3()(64bit). So if you are going to interact with system libraries that also use blas, you should use flexiblas. Flexiblas is a wrapper library that make it possible the change the blas implementation used without recompiling by changing the configuration, the default configuration uses openblas. As long as you link root against flexiblas you should be fine. The root package in EPEL 9 does this:. # rpm -q root-tmva; root-tmva-6.30.06-1.el9.x86_64; # rpm -q --requires root-tmva | grep blas; libflexiblas.so.3()(64bit). CMake's FindBLAS module has higher priority for flexiblas than openblas, so you don't have to use any special flags to use it, as long as flexiblas-devel is installed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15309#issuecomment-2097506361:436,wrap,wrapper,436,https://root.cern,https://github.com/root-project/root/issues/15309#issuecomment-2097506361,1,['wrap'],['wrapper']
Integrability,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4029#issuecomment-508014052:4,depend,dependency,4,https://root.cern,https://github.com/root-project/root/pull/4029#issuecomment-508014052,4,['depend'],"['depend', 'dependency']"
Integrability,"The difference between `clang++` and `g++` is that upon calling `dlclose` the dependent library are unloaded (`clang` case) or not unloaded (`g++` case). Because in the `g++` the dependent libraries are not unloaded, they are also not reloaded hence drastically reducing the increase in atexit that are registered.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12863#issuecomment-1563534867:78,depend,dependent,78,https://root.cern,https://github.com/root-project/root/pull/12863#issuecomment-1563534867,2,['depend'],['dependent']
Integrability,The documentation suggests different approach: https://github.com/root-project/root/blob/master/core/newdelete/inc/MemCheck.h#L30. libNew depends on libCore. If you use LD_PRELOAD I am quite sure libCore will be loaded beforehand and it will use the system new/delete operators *most of the time*. If libNew is part of the binary everything should be fine as the binary takes always precedence.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4722#issuecomment-571302271:138,depend,depends,138,https://root.cern,https://github.com/root-project/root/pull/4722#issuecomment-571302271,1,['depend'],['depends']
Integrability,"The error is ""real"":; ```; Warning in <THnSparse::CreateHnAny>: Unknown Type of Histogram; Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments.; const int dim ( s->GetNdimensions() );; ^; ```; Could you have a look at `root -l -b test/stressHistogram.cxx`, please? That seems to fail after your change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-875590903:183,rout,routine,183,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-875590903,1,['rout'],['routine']
Integrability,The error is now:. [centos7-gcc7-Debug] ### Errors:; [centos7-gcc7-Debug] - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to ; [centos7-gcc7-Debug] - Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives958fc13e42_dictUmbrella.h) . The error message seems truncated . ; Some ideas on what the problem is now ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2091#issuecomment-392473662:409,message,message,409,https://root.cern,https://github.com/root-project/root/pull/2091#issuecomment-392473662,1,['message'],['message']
Integrability,"The error message changed, but there is more needed, it seems:. ```console; ❯ cat reproducer.def; Bootstrap: docker; From: fedora:36. %post; dnf -y update; dnf -y install git make cmake gcc-c++ gcc binutils ninja-build patch \; libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel; dnf -y clean all. mkdir /reproducer && cd /reproducer; git clone -b master --depth 1 http://github.com/root-project/root source; git -C source log; patch -d source -p1 <<EoF; diff --git a/interpreter/cling/include/cling/std.modulemap b/interpreter/cling/include/cling/std.modulemap; index 5498b949c5..c82959a440 100644; --- a/interpreter/cling/include/cling/std.modulemap; +++ b/interpreter/cling/include/cling/std.modulemap; @@ -428,4 +428,8 @@ module ""std"" [system] {; export *; header ""bits/stl_tree.h""; }; + module ""bits/utility.h"" {; + export *; + header ""bits/utility.h""; + }; }; EoF; cmake -GNinja -S source -B build -Dxrootd=OFF; cmake --build build; ```. -->. ```; FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm; cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478#issuecomment-1113253160:10,message,message,10,https://root.cern,https://github.com/root-project/root/issues/10478#issuecomment-1113253160,1,['message'],['message']
Integrability,"The error message is inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8048#issuecomment-829528504:10,message,message,10,https://root.cern,https://github.com/root-project/root/issues/8048#issuecomment-829528504,1,['message'],['message']
Integrability,"The error message we get is not very explicit ... at least for me. ; @Axel-Naumann, @vgvassilev do you have an idea to go further with this PR ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2091#issuecomment-392521340:10,message,message,10,https://root.cern,https://github.com/root-project/root/pull/2091#issuecomment-392521340,1,['message'],['message']
Integrability,"The error messages in `treetreeplayertestUnit2` are expected, but should be checked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-642578286:10,message,messages,10,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-642578286,1,['message'],['messages']
Integrability,"The error messages seems harder to produce (however it is legitimate to issue a message, it bug is that the message is reversed). [Now] you need to make an effective modification to the io header:; ```; pcanal@Viroflay:~/root_working/build/pristine-opt/src$ git diff; diff --git a/io/io/inc/TFile.h b/io/io/inc/TFile.h; index d5d6722e70..02d310f1cd 100644; --- a/io/io/inc/TFile.h; +++ b/io/io/inc/TFile.h; @@ -71,7 +71,8 @@ public:; enum ECacheAction { kDisconnect = 0, kDoNotDisconnect = 1 };. protected:; - Double_t fSumBuffer{0}; ///<Sum of buffer sizes of objects written so far; +int fnewmember;; +Double_t fSumBuffer{0}; ///<Sum of buffer sizes of objects written so far; Double_t fSum2Buffer{0}; ///<Sum of squares of buffer sizes of objects written so far; Long64_t fBytesWrite{0}; ///<Number of bytes written to this file; Long64_t fBytesRead{0}; ///<Number of bytes read from this file; ```; and then (of course :) ) provoke an ""intentionally"" inconsistent built by doing a partial build:; ```; ninja RIO; ```; (otherwise ninja/make will correctly rebuild the pcm) and then:; ```; pcanal@Viroflay:~/root_working/build/pristine-opt$ rb RIO && root.exe -b -l -q; [26/26] Linking CXX shared library lib/libRIO.so; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/pristine-opt/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/pristine-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTTMVASofie; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; etc ....; ```. Note that RIO.pcm is already the ""newest"" of the pcm so it can not be the one out of date :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7704#issuecomment-932732690:10,message,messages,10,https://root.cern,https://github.com/root-project/root/issues/7704#issuecomment-932732690,3,['message'],"['message', 'messages']"
Integrability,The errors contains:; ```; 03:51:11 -- Looking for ZSTD; 03:51:11 CMake Error at /usr/share/cmake3/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; 03:51:11 Could NOT find ZSTD (missing: ZSTD_LIBRARIES ZSTD_INCLUDE_DIR); ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-541334976:148,message,message,148,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-541334976,1,['message'],['message']
Integrability,"The example code enables fp exceptions. fp operations are not ""stable"" - high optimization levels can re-order / re-arrange fp operations, causing fp exceptions that wouldn't be there for lower optimization levels. I like to understand why fp exceptions are a topic for you. While ROOT does offer an interface to manipulate the fp exception mask, it does *not* turn on fp exceptions by default. I wonder why they are on for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677#issuecomment-713438085:300,interface,interface,300,https://root.cern,https://github.com/root-project/root/issues/6677#issuecomment-713438085,1,['interface'],['interface']
Integrability,"The explanation here on the PR page sounds reasonable. Could you add this to the commit message?; When I looked only at the commit, I was puzzled why this was necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5902#issuecomment-647544925:88,message,message,88,https://root.cern,https://github.com/root-project/root/pull/5902#issuecomment-647544925,1,['message'],['message']
Integrability,"The failure on Ubuntu 22.04 without C++ modules is likely because `core/metacling` doesn't depend on `Tree` (sorry for not spotting this earlier) - can you just try something like `new int`? If we're lucky, this also explains the Windows failures, which doesn't have modules either and was just failing to compile altogether :crossed_fingers:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645#issuecomment-1985207240:91,depend,depend,91,https://root.cern,https://github.com/root-project/root/pull/14645#issuecomment-1985207240,1,['depend'],['depend']
Integrability,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```; Processing temp.h... ; In file included from input_line_8:1: ; In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: ; In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: ; /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' ; static const CLID CLID_ProtoParticle = 803; ; ^ ; input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here ; #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" ; ^ ; /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple ; times, additional include site here ; #include ""Event/ProtoParticle.h"" ; ^ ; ...; ...SKIPPED LINES; ...; /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' ; class ProtoParticle final : public KeyedObject<int> { ; ^ ; input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here ; #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patche",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2161120817:233,message,message,233,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2161120817,1,['message'],['message']
Integrability,"The filename is referred to here:; ```; tutorials/CMakeLists.txt: tutorial-hist-h1draw; tutorials/CMakeLists.txt: set(pyroot-h1draw-depends tutorial-pyroot-hsimple-py); tutorials/CMakeLists.txt: tutorial-pyroot-h1draw-py; tutorials/demos.C: bar->AddButton(""h1draw"", "".x hist/h1draw.C"", ""Drawing Options for 1D Histograms"");; tutorials/legacy/benchmarks.C: summary->AddText("" hist/h1draw.C"");; tutorials/legacy/benchmarks.C: bexec(dir,""hist/h1draw.C"");; tutorials/legacy/pyroot/benchmarks.py: 'fillrandom.py','fit1.py', 'h1draw.py', 'graph.py',; tutorials/pyroot/demo.py:bar.AddButton( 'h1draw', r'TPython::Exec( ""' + to_run.format('h1draw.py') + '"" );', 'Drawing Options for 1D Histograms' ); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8699#issuecomment-885717161:132,depend,depends,132,https://root.cern,https://github.com/root-project/root/pull/8699#issuecomment-885717161,1,['depend'],['depends']
Integrability,"The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know!. The TThreadTimer can certainly be fixed. Out of curiosity, why do you care about `TThread`? :-) It's generally assumed to be legacy code; we'd recommend using the task-based approach as offered for instance by ROOT's executor or the underlying thread pool.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8297#issuecomment-852816378:204,depend,depends,204,https://root.cern,https://github.com/root-project/root/issues/8297#issuecomment-852816378,1,['depend'],['depends']
Integrability,The fit tutorials errors is; ```; Processing /build/jenkins/workspace/root-pullrequests-build/root/tutorials/fitsio/FITS_tutorial8.C...; Warning in <TFITSHDU::LoadHDU>: error opening FITS file. Details: could not open the named file; libc++abi.dylib: terminating with uncaught exception of type int; CMake Error at /build/jenkins/workspace/root-pullrequests-build/build/RootTestDriver.cmake:238 (message):; error code: Child aborted; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5099#issuecomment-597148699:396,message,message,396,https://root.cern,https://github.com/root-project/root/pull/5099#issuecomment-597148699,1,['message'],['message']
Integrability,"The fix works in my standalone ROOT test. To test the integration with DD4hep and the LHCb detector, the simplest is to add it to the SFT nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11272#issuecomment-1232170822:54,integrat,integration,54,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1232170822,2,['integrat'],['integration']
Integrability,The friend.make problem is likely due to a missing dependency in ctest (root-tree-friend-make depends and root-io-event); The windows failure is due to missing M_PI declaration.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3591#issuecomment-479203327:51,depend,dependency,51,https://root.cern,https://github.com/root-project/root/pull/3591#issuecomment-479203327,6,['depend'],"['dependency', 'depends']"
Integrability,"The functionality of Cache is all there. The only issue remaining is caching a cached TDF (let's call this latter ""A"") without destroying the cache of the cached (meaning ""A""). This is a side effect of the optimisation in place to deliver data with zero-copies to transformations and actions requesting it. As for testing, checking the caching works with IMT on needs to be done. The extra mile would consist in checking statically that T does not have a copy constructor and react. How to react is not completely clear to me yet. There are two ways perhaps to solve this problem: 1. Act on the container, keeping in mind that the containers which form the cache must support random access for MT execution. 2. Act on the contained type, wrapping objects in some way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1056#issuecomment-332682497:738,wrap,wrapping,738,https://root.cern,https://github.com/root-project/root/pull/1056#issuecomment-332682497,2,['wrap'],['wrapping']
Integrability,"The git log might be a little confusing (why fix a rule that is unused anyway?) -- Maybe you meant ""Fix class name spelling in class rule [that was detected by a message indicating that the misspelt version was unused]""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5871#issuecomment-644148818:162,message,message,162,https://root.cern,https://github.com/root-project/root/pull/5871#issuecomment-644148818,1,['message'],['message']
Integrability,"The goal of those scripts in fastcloning is to ensure that the merged files has the expected file and data (for all the use case in the DrawTest family, which includes many of the possible TTree structures). They have been unfortunately disabled since we moved from CINT to Cling as the scripts are relying on CINT's dynamic scope feature that did not fully make it into Cling. The script needs to be adapted accordingly, however it is likely they also do *not* have to be a set specific to this directory (to be verified), in the time of Makefiles it was easier to duplicate that try to deal with the dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3270#issuecomment-460426983:602,depend,dependencies,602,https://root.cern,https://github.com/root-project/root/pull/3270#issuecomment-460426983,1,['depend'],['dependencies']
Integrability,The idea of making the tutorials fail more gracefully than tests sounds good to me. Messages should be more user friendly (@Axel-Naumann already provided a good suggestion for this one). Also agree with the `exit(1)`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5397#issuecomment-616495870:84,Message,Messages,84,https://root.cern,https://github.com/root-project/root/pull/5397#issuecomment-616495870,1,['Message'],['Messages']
Integrability,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8448#issuecomment-865043312:84,depend,dependencies,84,https://root.cern,https://github.com/root-project/root/issues/8448#issuecomment-865043312,1,['depend'],['dependencies']
Integrability,"The incremental, for example: https://epsft-jenkins.cern.ch/job/root-incremental-master/LABEL=ROOT-performance-centos7-multicore,SPEC=default/8204/console; fails with:; ```; CMake Error at interpreter/cling/CMakeLists.txt:178 (message):; NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred!; See also ""/data/sftnight/wsincrmaster/LABEL/ROOT-performance-centos7-multicore/SPEC/default/build/CMakeFiles/CMakeOutput.log"".; See also ""/data/sftnight/wsincrmaster/LABEL/ROOT-performance-centos7-multicore/SPEC/default/build/CMakeFiles/CMakeError.log"".; gmake: *** [cmake_check_build_system] Error 1; Command exited with the value: 2; ```; What is the best solution?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4618#issuecomment-551202916:227,message,message,227,https://root.cern,https://github.com/root-project/root/pull/4618#issuecomment-551202916,1,['message'],['message']
Integrability,"The information (in the PR description) or the commit message implied (for me) this is a backport. Fair enough, we can merge this patch and not track it (in our clang patches). It will then go away after the next upgrade...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8044#issuecomment-831722994:54,message,message,54,https://root.cern,https://github.com/root-project/root/pull/8044#issuecomment-831722994,1,['message'],['message']
Integrability,"The jupyter notebook test fails because of:; ```; [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'.; ```; This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:; ```; JUPYTER_ALLOW_INSECURE_WRITES=true; ```; at the price of seeing this message:; ```; WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'.; ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:; ```; 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242#issuecomment-2292474568:468,message,message,468,https://root.cern,https://github.com/root-project/root/issues/16242#issuecomment-2292474568,1,['message'],['message']
Integrability,"The latest PR integrates the layer as `ROOT.RDF.Experimental.Distributed`. A user can type; ```; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; df = RDataFrame(""mytree"",""myfile.root""); ```; To get an RDataFrame that can run its computation graph distributedly on a Spark cluster. A generic implementation of the injection of python modules into ROOT or its namespaces will be done in another PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-778289815:14,integrat,integrates,14,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-778289815,2,"['inject', 'integrat']","['injection', 'integrates']"
Integrability,"The lgtm alert is for truncating division in case of integer arguments, which is only relevant for Python 2. This is ready for final review. Maybe some comments that might help explain better the logic here and there? With final approval I will also add a commit message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10098#issuecomment-1082246724:263,message,message,263,https://root.cern,https://github.com/root-project/root/pull/10098#issuecomment-1082246724,1,['message'],['message']
Integrability,"The limitation right now is: RooAbsArgs that are in different channels of the RooSimultaneous and depend on data are not allowed to have the same name (by the RooAbsArgs I don't only mean the top-level channel pdf but also anything that is serving that pdf). In your initial example, there was a Gaussian ""g"" in each channel. But I hope to eliminate this limitation by the next patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10991#issuecomment-1189509380:98,depend,depend,98,https://root.cern,https://github.com/root-project/root/issues/10991#issuecomment-1189509380,1,['depend'],['depend']
Integrability,"The mac failure seems infrastructure related:; ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5756#issuecomment-637158026:111,protocol,protocol,111,https://root.cern,https://github.com/root-project/root/pull/5756#issuecomment-637158026,2,"['Protocol', 'protocol']","['Protocol', 'protocol']"
Integrability,"The macos failure is an infrasture issue:; ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7794#issuecomment-814363593:107,protocol,protocol,107,https://root.cern,https://github.com/root-project/root/pull/7794#issuecomment-814363593,1,['protocol'],['protocol']
Integrability,The message is now more verbose.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1127#issuecomment-334167434:4,message,message,4,https://root.cern,https://github.com/root-project/root/pull/1127#issuecomment-334167434,1,['message'],['message']
Integrability,The more I think about it the more I am convinced that giving this special meaning to array_view will bring trouble in the future. Users might define a column of type vector and then try to read it with an array_view with bad conconsequences. I would prefer breaking the interface now than having to do it later to solve weird bugs. I propose we adopt `TArrayBranch´ as a generic c-style-array-in-a-ttree-branch type. It would live in the same namespace as TDF and would serve no other purpose than letting users indicate that the branch they are reading is a fixed or variable size c-style array.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1173#issuecomment-336054136:271,interface,interface,271,https://root.cern,https://github.com/root-project/root/pull/1173#issuecomment-336054136,1,['interface'],['interface']
Integrability,The one failure is unrelated (seems to be a problem with dependency in roottest's cmake.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1534#issuecomment-466483143:57,depend,dependency,57,https://root.cern,https://github.com/root-project/root/pull/1534#issuecomment-466483143,1,['depend'],['dependency']
Integrability,"The one failure on Fedora 39 is unrelated:; ```; Failed; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR. ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 120, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libb2; - libgomp; If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------; Ran 1 test in 1.405s. FAILED (errors=1); CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14098#issuecomment-1836056879:1021,message,message,1021,https://root.cern,https://github.com/root-project/root/pull/14098#issuecomment-1836056879,1,['message'],['message']
Integrability,"The one in TStreamerInfo.cxx are:; ```if (gDebug>0) Info(...)```; so odd beast and/or now a Debug message. The one in TFileMerger are likely actually Warnings rather than Info but either way, the line number is not that informative ... (the debugging that would need to happen is about the ROOT file not the source file). Either way. > ```R__LOG_TERSE_INFO```, that does not show the file and line and function?. I suppose so .. and/or have a terse option/parameter (so that it can be used for all level)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7008#issuecomment-756920899:98,message,message,98,https://root.cern,https://github.com/root-project/root/issues/7008#issuecomment-756920899,1,['message'],['message']
Integrability,"The only relevant change is the one in the last commit, but it depends on the other changes from https://github.com/root-project/root/pull/12972 to work correctly, so it's rebased on top of those for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11552#issuecomment-1581795118:63,depend,depends,63,https://root.cern,https://github.com/root-project/root/pull/11552#issuecomment-1581795118,1,['depend'],['depends']
Integrability,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:; - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on.; - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question.; - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those?. So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7201#issuecomment-805946937:207,contract,contract,207,https://root.cern,https://github.com/root-project/root/issues/7201#issuecomment-805946937,6,"['contract', 'interface']","['contract', 'interface', 'interfaces']"
Integrability,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-701717286:33,interface,interface,33,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-701717286,2,"['interface', 'rout']","['interface', 'routine']"
Integrability,"The platform is Linux (Debian 9).; The full compilation errors for `RDFInterfaceUtils.cxx` is:; ```; root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx: In lambda function:; root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous; return std::string(std::move(ss));; ^; In file included from GCC-8.2.0-linux64/include/c++/8.2.0/string:52,; from root-6.24.00/core/meta/inc/TSchemaHelper.h:17,; from root-6.24.00/core/meta/inc/TGenericClassInfo.h:21,; from root-6.24.00/core/base/inc/Rtypes.h:191,; from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RColumnReaderBase.hxx:14,; from root-6.24.00/tree/dataframe/inc/ROOT/RDF/ColumnReaderUtils.hxx:14,; from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RAction.hxx:14,; from root-6.24.00/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:14,; from root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:11:; GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3562:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’; basic_string(basic_string&& __str); ^~~~~~~~~~~~; GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3545:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’; basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());; ^~~~~~~~~~~~; GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3498:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’; basic_string(const basic_string& __str);; ^~~~~~~~~~~~; root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx: In function ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8477#issuecomment-864130448:854,Interface,InterfaceUtils,854,https://root.cern,https://github.com/root-project/root/pull/8477#issuecomment-864130448,1,['Interface'],['InterfaceUtils']
Integrability,"The point was not to depend on the version if the behaviour changes in the future. Again, it's a finer point; probably, it doesn't matter. Thanks for fixing it so quickly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1220615306:21,depend,depend,21,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1220615306,1,['depend'],['depend']
Integrability,The pr has been integrated w/o waiting any more for the scheduled reviews.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2549#issuecomment-480175656:16,integrat,integrated,16,https://root.cern,https://github.com/root-project/root/pull/2549#issuecomment-480175656,1,['integrat'],['integrated']
Integrability,The previous errors with the VM was due to incorrect setup of the Debian distro (dependency resolution failure related to a messed-up `source.list`). `Thank you for your patience!. All the tests passed after running `./stressGraphics`; ```; Create ./cernstaff.root; (TFile *) nullptr; **********************************************************************; * Starting Graphics - S T R E S S suite *; **********************************************************************; * Starting Basic Graphics - S T R E S S *; **********************************************************************; Test 1: TLine..................................................... OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 2: TMarker................................................... OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 3: TPolyLine................................................. OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 4: Fill patterns............................................. OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1128447944:81,depend,dependency,81,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1128447944,1,['depend'],['dependency']
Integrability,"The problem I see is that we can't specify ""link only here all of Vc"", but we have to specify this when we create the INTERFACE linking options. So every library that directly links against should get it, but I don't think it propagates. Maybe someone can test this manually (or I'll do when I have a few minutes). Will put a DNM until this is known.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1007#issuecomment-331103794:118,INTERFACE,INTERFACE,118,https://root.cern,https://github.com/root-project/root/pull/1007#issuecomment-331103794,1,['INTERFACE'],['INTERFACE']
Integrability,"The proposed root --web does not help, I am getting as before; Authorization required, but no authorization protocol specified; when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:; > home: null; > network: null; > opengl: null; > x11: null; > desktop: null; > desktop-legacy: null; > removable-media: null; > shared-memory:; > private: true; > layout:. you probably have to add ; > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15723#issuecomment-2146760092:108,protocol,protocol,108,https://root.cern,https://github.com/root-project/root/issues/15723#issuecomment-2146760092,1,['protocol'],['protocol']
Integrability,"The purpuse of the change is to fix the issue #16250 without forcing an unneeded implicit dependency of `cocoa` on `asimage`, by disentangling the graf3d OpenGL features (which require OpenGL and `asimage`) and the graf2d Cocoa backend (which requires OpenGL, but no `asimage`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16605#issuecomment-2402065795:90,depend,dependency,90,https://root.cern,https://github.com/root-project/root/pull/16605#issuecomment-2402065795,1,['depend'],['dependency']
Integrability,The push just has wording changes in the commit message.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4758#issuecomment-574575651:48,message,message,48,https://root.cern,https://github.com/root-project/root/pull/4758#issuecomment-574575651,1,['message'],['message']
Integrability,"The reason for this behaviour seems to be that all the Python classes in the reproducer (`B`, `C` and `D`) get a `Dispatcher` wrapper class automatically created (`Dispatcher1`, `Dispatcher2` and `Dispatcher3`, respectively) that inherits from `A`. Since for `B` and `C` `fun1` is overridden in Python, `Dispatcher1` and `Dispatcher2` define a `fun1` implementation that redirects the call to the Python `fun1` of `B` and `C`, respectively. That is not the case of `D`, whose `Dispatcher3` defines no `fun1`. What I described above explains the behaviour reported in this ticket. When calling `d.fun2()`, which in turn calls `fun1`, the latter will be resolved to `A::fun1`, whereas one would expect that it is the `fun1` defined in Python by `B` that is called instead. This issue does not exist in upstream cppyy: `Dispatcher3` inherits from `Dispatcher1` (`B`'s dispatcher) and not from `A` directly, which means that the call to `fun1` from `fun2` will be resolved to `Dispatcher1::fun1`, which will redirect the call to Python (`B`'s `fun1`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6470#issuecomment-713715166:126,wrap,wrapper,126,https://root.cern,https://github.com/root-project/root/issues/6470#issuecomment-713715166,1,['wrap'],['wrapper']
Integrability,"The relevant part:; ```; ==9375== Conditional jump or move depends on uninitialised value(s); ==9375== at 0x44AFDA: CalibMonitor::correctEnergy(double&, long long const&) (in /afs/cern.ch/work/s/sunanda/public/CMSSW_12_4_6/relval/d22gm/CalibMain.exe); ==9375== by 0x4496BB: CalibMonitor::goodTrack(double&, double&, long long const&, bool) (in /afs/cern.ch/work/s/sunanda/public/CMSSW_12_4_6/relval/d22gm/CalibMain.exe); ==9375== by 0x4467E8: CalibMonitor::Loop(long long) (in /afs/cern.ch/work/s/sunanda/public/CMSSW_12_4_6/relval/d22gm/CalibMain.exe); ==9375== by 0x4664CA: main (in /afs/cern.ch/work/s/sunanda/public/CMSSW_12_4_6/relval/d22gm/CalibMain.exe); ==9375== ; ==9375== Invalid read of size 4; ==9375== at 0x44B009: CalibMonitor::correctEnergy(double&, long long const&) (in /afs/cern.ch/work/s/sunanda/public/CMSSW_12_4_6/relval/d22gm/CalibMain.exe); ==9375== by 0x4496BB: CalibMonitor::goodTrack(double&, double&, long long const&, bool) (in /afs/cern.ch/work/s/sunanda/public/CMSSW_12_4_6/relval/d22gm/CalibMain.exe); ==9375== by 0x4467E8: CalibMonitor::Loop(long long) (in /afs/cern.ch/work/s/sunanda/public/CMSSW_12_4_6/relval/d22gm/CalibMain.exe); ==9375== by 0x4664CA: main (in /afs/cern.ch/work/s/sunanda/public/CMSSW_12_4_6/relval/d22gm/CalibMain.exe); ==9375== Address 0x0 is not stack'd, malloc'd or (recently) free'd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12370#issuecomment-1466610213:59,depend,depends,59,https://root.cern,https://github.com/root-project/root/issues/12370#issuecomment-1466610213,1,['depend'],['depends']
Integrability,"The remaining problem is that one has to link with `-lgcc` for gcc < 7 or 8. Is this ok, or should the cpu flag detection go into its own microlibrary?. ### Edit:; Looks like a toolchain bug for gcc 5. Easy workaround is to add `-lgcc_s -lgcc` to the link instructions, because the gcc folks didn't get the dependencies right. (It's automatically linking against those, anyway, but the `-lgcc` has to come last.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6321#issuecomment-688884250:307,depend,dependencies,307,https://root.cern,https://github.com/root-project/root/pull/6321#issuecomment-688884250,1,['depend'],['dependencies']
Integrability,"The second ""bigger"" problem are the `filemerger` tests on macOS AArch64 that compare the expected compressed file size of `hsimple.root`. These turn out to be caused by how LLVM 16 optimizes `pz = px*px + py*py;` in `hsimple.C`, resulting in slightly different floating point results and therefore different compression. I have no really good solution here other than updating the expected reference sizes / their tolerance. An alternative would be to check in a ""known"" `hsimple.root` and not generate it on the fly. What do you think @pcanal ?. edit: I found a better solution by disabling floating point contractions when producing `hsimple.root` for these tests, see https://github.com/root-project/roottest/pull/989.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273#issuecomment-1649423962:607,contract,contractions,607,https://root.cern,https://github.com/root-project/root/pull/13273#issuecomment-1649423962,1,['contract'],['contractions']
Integrability,The solution which was identified at the last IO meeting was to skip all events which could not be read and prompt an error message w/o crashing. All this should be done at the TTreeReader level.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2583#issuecomment-425675655:124,message,message,124,https://root.cern,https://github.com/root-project/root/pull/2583#issuecomment-425675655,1,['message'],['message']
Integrability,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:; ```; ctest -R gtest-tmva-pymva-TestRModelParserPyTorch; Test project /home/pcanal/root_working/build/quick-devel; Start 349: gtest-tmva-pymva-TestRModelParserPyTorch; 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec; ```; and if we immediately re-run we get:; ```; ctest -R gtest-tmva-pymva-TestRModelParserPyTorch; Test project /home/pcanal/root_working/build/quick-devel; Start 349: gtest-tmva-pymva-TestRModelParserPyTorch; 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec; ```; and the error is:; ```; [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16719#issuecomment-2427294206:1018,interface,interface,1018,https://root.cern,https://github.com/root-project/root/issues/16719#issuecomment-2427294206,2,['interface'],['interface']
Integrability,"The support for I/O of interpreted classes is not complete (it is missing at least support for STL collection). Even-though that some classes could be stored, we choose (for now?) to leave the message for all of them (rather than trying to test for the subset that 'works' and have a mixed up message)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9371#issuecomment-997480648:193,message,message,193,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-997480648,2,['message'],['message']
Integrability,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6519#issuecomment-701711449:146,message,message,146,https://root.cern,https://github.com/root-project/root/pull/6519#issuecomment-701711449,1,['message'],['message']
Integrability,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:; 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197); 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image).; 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212#issuecomment-2050606767:122,depend,dependencies,122,https://root.cern,https://github.com/root-project/root/issues/15212#issuecomment-2050606767,2,['depend'],['dependencies']
Integrability,The update for the commit message was not there yet! Oh well,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/803#issuecomment-317826143:26,message,message,26,https://root.cern,https://github.com/root-project/root/pull/803#issuecomment-317826143,1,['message'],['message']
Integrability,"The use of RZip.h - one could create well-formatted "".gz"" file, using ROOT functions.; This is provided in TBufferJSON and in THttpServer classes - there are few lines of code like:. https://github.com/root-project/root/blob/master/io/io/src/TBufferJSON.cxx#L764-L818. Here `R__crc32` and `R__memcompress` functions are used. And they should be provided as before. I agree, that all others very special and ROOT internal. ; As you proposed, we can keep wrappers to support old API, and declare these functions deprecated. Two versions later they can be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4060#issuecomment-510912596:453,wrap,wrappers,453,https://root.cern,https://github.com/root-project/root/pull/4060#issuecomment-510912596,1,['wrap'],['wrappers']
Integrability,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6459#issuecomment-698982326:270,message,message,270,https://root.cern,https://github.com/root-project/root/pull/6459#issuecomment-698982326,1,['message'],['message']
Integrability,The work @dpiparo has done has been merged into this branch:; * trivial data-source implementation: has just one column that contains the entry number; * ROOT data-source implementation: allows reading ROOT files via the data-source interface; * documentation for `TDataSource`; * google tests for both data-sources. Thanks Danilo!!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/983#issuecomment-330487106:233,interface,interface,233,https://root.cern,https://github.com/root-project/root/pull/983#issuecomment-330487106,1,['interface'],['interface']
Integrability,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. ; I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4041#issuecomment-508670401:91,message,messages,91,https://root.cern,https://github.com/root-project/root/pull/4041#issuecomment-508670401,1,['message'],['messages']
Integrability,"There is a hook which allows you to define your logging function, and it then uses it to print a nested output log, where the nesting level depends on how many intervals you have in flight. See the description here: https://github.com/AliceO2Group/AliceO2/pull/11645",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13146#issuecomment-1669590947:140,depend,depends,140,https://root.cern,https://github.com/root-project/root/pull/13146#issuecomment-1669590947,1,['depend'],['depends']
Integrability,"There is a ugly workaround to check for network:; ```; execute_process(; COMMAND ping www.github.com -n 2 -w 1000; RESULT_VARIABLE NO_CONNECTION; ); ```; And then use `NO_CONNECTION` like for example:; ```; if(builtin_tbb); if(NO_CONNECTION EQUAL 1); if(fail-on-missing); message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""); else(); message(STATUS ""No internet connection, disabling 'builtin_tbb' option""); set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE); set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE); endif(); else(); ...; ```; I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-864912549:272,message,message,272,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-864912549,2,['message'],['message']
Integrability,"There is an alternative way to get this using meta path finders. <details><summary>Click to show diff</summary>; <p>. This would need to be polished and checked that it actually follows the `Loader`/`MetaPathFinder` interface correctly but it shows the general idea. If anyone picks this up I'd suggest checking the implementation of `six.moves` to see if there are any edge cases that are missing (especially if Python 2 support is still needed). ```diff; diff --git a/bindings/pyroot/pythonizations/python/ROOT/__init__.py b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; index 113e778cda..21c8aa7454 100644; --- a/bindings/pyroot/pythonizations/python/ROOT/__init__.py; +++ b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; @@ -48,7 +48,65 @@ _is_ipython = hasattr(builtins, '__IPYTHON__'); # Configure ROOT facade module; import sys; from ._facade import ROOTFacade; -sys.modules[__name__] = ROOTFacade(sys.modules[__name__], _is_ipython); +xxx = ROOTFacade(sys.modules[__name__], _is_ipython); +__getattr__ = xxx._getattr; +__setattr__ = xxx._setattr; +; +# Configure meta-path finder for ROOT namespaces; +import importlib.abc; +from importlib.util import spec_from_loader; +; +class RootNamespaceLoader(importlib.abc.Loader):; + def __init__(self):; + self._module_cache = {}; +; + def is_package(self, fullname):; + if fullname in self._module_cache:; + return True; + if not fullname.startswith(""ROOT.""):; + raise ImportError(""This loader only loads ROOT.*""); + module = xxx; + partial_name = ""ROOT""; + for part in fullname.split(""."")[1:]:; + partial_name += f"".{part}""; + module = getattr(module, part, None); + if module is None:; + raise NotImplementedError(f""No module named {partial_name}""); + # HACK: There is a probably a better way to do this; + if ""namespace"" not in str(module):; + raise ImportError(f""{partial_name} is not a namespace (type={type(module)})""); + self._module_cache[fullname] = module; + return True; +; + def create_module(self, spec):; + self.is_p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14097#issuecomment-1824949593:216,interface,interface,216,https://root.cern,https://github.com/root-project/root/issues/14097#issuecomment-1824949593,1,['interface'],['interface']
Integrability,"There is indeed a missing protection/warning message. We currently do not support storing `std::array` as a top level objects. Instead you need to wrap it into a struct. For example, this can be done in your example by adding:; ```; #ifdef __ROOTCLING__; #pragma link C++ class std::vector<std::vector<int>>+;; #pragma link C++ class Binner+;; #endif; ```; to a linkdef file (or your script if you load it via ACLiC). and writing with ; ```; fout->WriteObject(this,""binner""); // i.e. you using don't need to give the class name, the compiler can pass enough information.; ```; and read with:; ```; auto binner = f->Get<Binner>(""binner""); // Not casting needed here, binner will be a `Binner*`; ```. With the updated version of the script I get:; [example.C.txt](https://github.com/root-project/root/files/10025600/example.C.txt). ```; $ root.exe -b -l; root [0] .L example.C+; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/pcanal/Downloads/./example_C.so; root [1] finderBinner(); Creating std::array<std::array<std::vector<std::vector<Int_t>>, LAYER1>, LAYER2> in FinderBinning.root; root [2] loadFinderBinning(); Loading FinderBinning.root; root [3] ; ```. Cheers,. Philippe. PS. Side note the example.C contained:; ```; mBinsS = castedBinsS;; ```; which ended up copying all the data from castedBinsS to mBinsS which was wastefull. See my alternative in the updated script.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11722#issuecomment-1317651615:45,message,message,45,https://root.cern,https://github.com/root-project/root/issues/11722#issuecomment-1317651615,2,"['message', 'wrap']","['message', 'wrap']"
Integrability,"There is problems with the doxygen head:; ```; build % cmake .. ; CMake Error at /Applications/CMake.app/Contents/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find PythonInterp (missing: PYTHON_EXECUTABLE); Call Stack (most recent call first):; /Applications/CMake.app/Contents/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /Applications/CMake.app/Contents/share/cmake-3.22/Modules/FindPythonInterp.cmake:169 (FIND_PACKAGE_HANDLE_STANDARD_ARGS); CMakeLists.txt:112 (find_package). -- Configuring incomplete, errors occurred!; See also ""/Users/couet/git/doxygen/build/CMakeFiles/CMakeOutput.log"".; See also ""/Users/couet/git/doxygen/build/CMakeFiles/CMakeError.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1080460317:180,message,message,180,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1080460317,1,['message'],['message']
Integrability,"There is still the a final optimization proposal here, in the initial post:; > Generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest. But I migrated this to the general ""Ideas for RooFit"" issue (into the initial post of Stephan), so this one can be closed:; https://github.com/root-project/root/issues/6557. Like this, we have a better overview on the possible improvements and ideas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7032#issuecomment-2241552715:281,interface,interface,281,https://root.cern,https://github.com/root-project/root/issues/7032#issuecomment-2241552715,1,['interface'],['interface']
Integrability,There seems to be infrastructure issues :( : ; ```; 07:41:59 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200610-1234/Update.xml; 07:41:59 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds; 07:41:59 Problems when submitting via HTTP; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5603#issuecomment-642024757:198,message,message,198,https://root.cern,https://github.com/root-project/root/pull/5603#issuecomment-642024757,1,['message'],['message']
Integrability,There you go. I wanted to push some more commits to finish the integration with the fitter interfaces but I think that can be done in a following minor PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-322499618:63,integrat,integration,63,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-322499618,2,"['integrat', 'interface']","['integration', 'interfaces']"
Integrability,These need to be corrected (`///<!` instead of `///<`):; ```; tmva//tmva/inc/TMVA/RuleFitAPI.h:193: mutable MsgLogger fLogger; ///< message logger; tmva//tmva/inc/TMVA/Reader.h:161: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/Config.h:145: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/Types.h:181: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/KDEKernel.h:88: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/PDEFoamKernelBase.h:44: mutable MsgLogger* fLogger; //! message logger; tmva//tmva/inc/TMVA/QuickMVAProbEstimator.h:37: mutable MsgLogger* fLogger;; tmva//tmva/inc/TMVA/OptimizeConfigParameters.h:97: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/LDA.h:78: mutable MsgLogger *fLogger; ///< message logging service; tmva//tmva/inc/TMVA/FitterBase.h:88: mutable MsgLogger* fLogger; // message logger; tmva//tmva/inc/TMVA/ModulekNN.h:163: mutable MsgLogger* fLogger; // message logger; tmva//tmva/inc/TMVA/Timer.h:96: mutable MsgLogger* fLogger; ///< the output logger; tmva//tmva/inc/TMVA/RuleFit.h:173: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/Tools.h:227: mutable MsgLogger* fLogger;; tmva//tmva/inc/TMVA/RuleCut.h:97: mutable MsgLogger* fLogger; // message logger; tmva//tmva/inc/TMVA/ExpectedErrorPruneTool.h:77: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/ROCCalc.h:77: mutable MsgLogger* fLogger; //! message logger; tmva//tmva/inc/TMVA/CostComplexityPruneTool.h:86: mutable MsgLogger* fLogger; //! output stream to save logging information; tmva//tmva/inc/TMVA/GeneticAlgorithm.h:101: mutable MsgLogger* fLogger; // message logger; tmva//tmva/inc/TMVA/VarTransformHandler.h:48: mutable MsgLogger* fLogger; //! message logger; tmva//tmva/inc/TMVA/SimulatedAnnealing.h:118: mutable MsgLogger* fLogger; ///< message logger; tmva//tmva/inc/TMVA/GeneticPopulation.h:99: mutable MsgLogger* fLogger; ///< message logger; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792#issuecomment-1925352541:132,message,message,132,https://root.cern,https://github.com/root-project/root/issues/9792#issuecomment-1925352541,18,['message'],['message']
Integrability,"This *must* go through cling, else you don't get pretty printing for `vector<SomethingThatYouKnowHasUserOrROOTProvidedPrinting>` etc, which is where it becomes most interesting!. If needed we can add an interface to `TInterpreter`; let me know what you want its arguments to be!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-392586129:203,interface,interface,203,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-392586129,1,['interface'],['interface']
Integrability,This PR can actually be closed because it's fully covered by the combination of. https://github.com/root-project/root/pull/7105 (merged); https://github.com/root-project/root/pull/7106 (merged); https://github.com/root-project/root/pull/7260 (the other one we're discussing). The performance improvements were added to the PR descriptions but indeed not in the commit messages themselves.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-800509915:368,message,messages,368,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-800509915,1,['message'],['messages']
Integrability,"This PR duplicates one of the commits in PR #1520 (that PR in addition addresses two more issues in JsMVA not related to the d3 change). As written in the description of PR #1520:. > The code has not been updated to reflect changes in jsroot. The code still tries to load d3.v3.min.js from jsroot. In the current version of jsroot the d3 script has been updated to version 4 and the file is now called d3.min.js. The pull request changes the name of the file in the two places where it is referenced, so it should now find the file. However this change is incomplete since the d3 API changes between the versions and some porting is needed. This PR does not introduce any other changes than changing the name of the js file in the two places where it is referenced in the code, just as PR #1520 does. The API of d3 v4 is not fully backward compatible with d3 v3. Did you go through the code and check that nothing else needs to be changed? In jsroot itself there were many other changes to the code to adapt to the changed API when the d3.js file was updated to v4 as seen in the commit:. https://github.com/root-project/jsroot/commit/c156b8956f77d1aef4b70cd8609c4b1f2036f94f#diff-26681b69718507c05077030d69e5ba58. One more comment: In addition to the change that changes the name of the d3.js file, this PR also proposes changes to some error messages in jsroot. These proposed changes should be proposed to jsroot upstream (https://github.com/root-project/jsroot), otherwise they will be overwritten next time root's bundled copy of jsroot is updated by copying files from upstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2353#issuecomment-409446728:1344,message,messages,1344,https://root.cern,https://github.com/root-project/root/pull/2353#issuecomment-409446728,1,['message'],['messages']
Integrability,"This PR has a small conflict with #835 . Depending on which one is merged first, I'll rebase the other fixing the conflict. P.S. I think travis has gone a bit bonkers with clang-format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/834#issuecomment-320659393:41,Depend,Depending,41,https://root.cern,https://github.com/root-project/root/pull/834#issuecomment-320659393,1,['Depend'],['Depending']
Integrability,"This PR has been rebased and simplified to leverage the changes introduced by #11828. Accessing single pages that are remotely caged is now unsupported unless page buffering is enabled as a source option (which is by default the case). More details in the updated PR description. The change precludes storing the cage sizes in metadata or upper-bounding it in `RPageSourceDaos`, though it constrains that the entire page-group is requested and fetched - as the allocated buffer size for a cage depends on the sum of all the compressed sizes stored in the individual locators of requested pages belonging to that cage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11466#issuecomment-1359215581:494,depend,depends,494,https://root.cern,https://github.com/root-project/root/pull/11466#issuecomment-1359215581,2,['depend'],['depends']
Integrability,"This PR is changing the interface, so I don;t want to add as it is in 6.24. We should add just the fix for the segfault in 6.24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8196#issuecomment-862198664:24,interface,interface,24,https://root.cern,https://github.com/root-project/root/issues/8196#issuecomment-862198664,1,['interface'],['interface']
Integrability,"This PR is now based on https://github.com/root-project/root/pull/16162 and https://github.com/root-project/root/pull/16165 . The changes are divided in two commits: those related to TTreeReader alone and those related to RDataFrame. . Tests are missing for the RDF-related changes, will be added depending on the first round of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15641#issuecomment-2323337054:297,depend,depending,297,https://root.cern,https://github.com/root-project/root/pull/15641#issuecomment-2323337054,1,['depend'],['depending']
Integrability,"This PR should be squashed on merge. I think that almost all intermediate commits won't work, so they should not be part of the git history. Some commits introduce changes to generate files in the source directory, then that gets reverted in a later commit, and another adds generated headers that depend on scripts added only in later commits, etc. I created a new label `squash on merge` to indicate which pull requests should be squashed. If all intermediate commits work, then there is no need to squash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2513#issuecomment-415689342:298,depend,depend,298,https://root.cern,https://github.com/root-project/root/pull/2513#issuecomment-415689342,1,['depend'],['depend']
Integrability,"This appears to have broken Windows builds, as signaled by both Jenkins and the new CI... Unfortunately I cannot see a real error message. FYI @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14773#issuecomment-1958878427:130,message,message,130,https://root.cern,https://github.com/root-project/root/pull/14773#issuecomment-1958878427,1,['message'],['message']
Integrability,This change would clarify the contract with our users: @vepadulano would you agree?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14685#issuecomment-1968325367:30,contract,contract,30,https://root.cern,https://github.com/root-project/root/pull/14685#issuecomment-1968325367,1,['contract'],['contract']
Integrability,This depends on https://github.com/root-project/root/issues/6745,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8685#issuecomment-883545813:5,depend,depends,5,https://root.cern,https://github.com/root-project/root/issues/8685#issuecomment-883545813,1,['depend'],['depends']
Integrability,"This idea is to have an optional ROOT variable we can set in the PanDA pilot or the PanDA worker node wrapper environment that allows to limit the number of threads spawned on the worker node by ROOT. We did this in the past e.g. with `ProofLite.Workers` to prevent prooflite processes to grab all available CPU cores on a worker node instead of the actual usual 8 cores on a WLCG multi-core slot. We steer AthenaMP and MT jobs via the environment variables ATHENA_PROC_NUMBER and ATHENA_CORE_NUMBER and set them to the PanDA queue core count. Asking the GDB might be a bit too high level committee, but if needed this could be brought up in some WLCG operations meetings if others would be interested to steer ROOT in a similar way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9805#issuecomment-1030031260:102,wrap,wrapper,102,https://root.cern,https://github.com/root-project/root/issues/9805#issuecomment-1030031260,1,['wrap'],['wrapper']
Integrability,"This is a bugfix, since the `ROOT_ADD_GTEST` macro doesn't work as intended on a ROOT build with `testing=OFF`. In the lines just below the ones I changed, there is code that issues a warning if you use `ROOT_ADD_GTEST` with `testing=OFF`:; > The target ROOT::TestSupport is missing. It looks like the test is declared against a ROOT build that is configured with -Dtesting=OFF. If this test sends warning or error messages, this will go unnoticed. Looks to me like the intention was that `ROOT_ADD_GTEST` can be used without `ROOT::TestSupport` with this caveat, otherwise that should be an error. However, it can't be used in that case without adding an additional linking against `gtest`, which is a major annoyance and was for sure not intended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16279#issuecomment-2301679152:415,message,messages,415,https://root.cern,https://github.com/root-project/root/pull/16279#issuecomment-2301679152,1,['message'],['messages']
Integrability,"This is a smart observation @ferdymercury . From the project's perspective it is hard to think we'll use compilers older than that the ones we use to integrate ROOT 6.32 today, except very special cases that we can treat as such if they appear...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16234#issuecomment-2288708724:150,integrat,integrate,150,https://root.cern,https://github.com/root-project/root/pull/16234#issuecomment-2288708724,1,['integrat'],['integrate']
Integrability,"This is a temporarily created sandbox, created by `pbuilder`, and populated accordingly (with Build-Depends: packages) before running the actual build code - and destroyed immediately afterwards. Thanks for clarifying the meaning of `Rint`, I was confused by the capital R. In the meantime, I was able to re-run `pbuilder` and got the `::sema::` error from the beginning. If it turns out that an interactive session cannot reproduce batch session results (and errors) I really don't know what to do next :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1161642175:100,Depend,Depends,100,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1161642175,1,['Depend'],['Depends']
Integrability,This is addressed with the new interfaces,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8581#issuecomment-2128973774:31,interface,interfaces,31,https://root.cern,https://github.com/root-project/root/issues/8581#issuecomment-2128973774,1,['interface'],['interfaces']
Integrability,This is analogous to this other PR with similar tests:. https://github.com/root-project/root/pull/5361. Both of them depend on https://sft.its.cern.ch/jira/browse/ROOT-10688 being fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7687#issuecomment-825475487:117,depend,depend,117,https://root.cern,https://github.com/root-project/root/pull/7687#issuecomment-825475487,1,['depend'],['depend']
Integrability,This is because they did that ; https://github.com/root-project/root/blob/05c2b9ef3ff35b9023eb7b9e20db412f5f8dd89b/core/foundation/inc/ROOT/span.hxx#L153. IE inject in the std namespace they own span implementation which is just asking for trouble,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13032#issuecomment-1595198646:158,inject,inject,158,https://root.cern,https://github.com/root-project/root/issues/13032#issuecomment-1595198646,1,['inject'],['inject']
Integrability,"This is kind of annoying, both locally and in Jenkins. Is it maybe as simple to solve as; ```diff; diff --git a/root/meta/MakeProject/CMakeLists.txt b/root/meta/MakeProject/CMakeLists.txt; index 308fa288..d090321f 100644; --- a/root/meta/MakeProject/CMakeLists.txt; +++ b/root/meta/MakeProject/CMakeLists.txt; @@ -1,4 +1,4 @@; -ROOTTEST_GENERATE_DICTIONARY(stl_makeproject_test stl_makeproject_test.h LINKDEF stl_makeproject_test_linkdef.h); +ROOTTEST_GENERATE_DICTIONARY(stl_makeproject_test stl_makeproject_test.h LINKDEF stl_makeproject_test_linkdef.h DEPENDS Hist) . if(ROOT_runtime_cxxmodules_FOUND); # FIXME: For C++ modules builds, module.modulemap is generated during configuration time; ```; ?. At least, this makes `ninja stl_makeproject_test` succeed on a freshly configured build for me :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9600#issuecomment-1018559183:555,DEPEND,DEPENDS,555,https://root.cern,https://github.com/root-project/root/issues/9600#issuecomment-1018559183,1,['DEPEND'],['DEPENDS']
Integrability,This is not needed anymore. We have SOFIE interface to RDF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9241#issuecomment-2163919097:42,interface,interface,42,https://root.cern,https://github.com/root-project/root/issues/9241#issuecomment-2163919097,1,['interface'],['interface']
Integrability,"This is significant change on top of original PR. Interface of THttpServer classes changed in several places.; 1. To make clear ownership, `std::shared_ptr<THttpCallArg>` is used to exchange these objects; between application code and THttpServer.; 2. Also use `std::shared_ptr<THttpWSEngine>` for keep clear ownership of helper objects, which are supporting different websockets kinds.; 3. Use std::string to store text or binary data, assigned to THttpCallArg. ; Before special binary storage with malloc/mfree was used. Used for content and post data.; 4. Declare several methods in http classes as deprecated. For each method there is replacement with similar functionality, but other arguments. I used ROOT 6.18 as boundary, but this can be changed; 5. Latest JSROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1785#issuecomment-379734333:50,Interface,Interface,50,https://root.cern,https://github.com/root-project/root/pull/1785#issuecomment-379734333,1,['Interface'],['Interface']
Integrability,"This issue is fixed by migrating to the new-style buffer interface:. ```cpp; if (PyObject_CheckBuffer(pyobject)) {; Py_buffer bufinfo;; memset(&bufinfo, 0, sizeof(Py_buffer));; ```; ; Where we update the check to perform ; ```cpp; if (check && bufinfo.itemsize != size); ```; determine incompatibility between the bit size of declared nd.array dtypes and the subscripted type in `cppyy.gbl.std.vector('type')` in CPyCppyy/src/Utility.cxx. @vepadulano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12230#issuecomment-1940884154:57,interface,interface,57,https://root.cern,https://github.com/root-project/root/issues/12230#issuecomment-1940884154,1,['interface'],['interface']
Integrability,"This issue is very case-dependent.; When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:; `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree; - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```; const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;; host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;; ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```; Int_t fMemAvailable; // available RAM in MB; Int_t fMemCached; // cached RAM in MB; Int_t fMemBuffer; // buffer RAM in MB; Int_t fMemShared; // shared RAM in MB; Int_t fSwapCached; // cached swap in MB; Int_t fSReclaimable // slab that might be reclaimed; ```; Fixed in ; - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7196#issuecomment-1941955488:24,depend,dependent,24,https://root.cern,https://github.com/root-project/root/issues/7196#issuecomment-1941955488,1,['depend'],['dependent']
Integrability,"This last failure is related to Bulk I/O, not my changes:; ```; -- TEST COMMAND -- ; cd /build/jenkins/workspace/root-pullrequests-build/roottest/scripts; /usr/bin/make utils; -- BEGIN TEST OUTPUT --. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; --- Using ROOT from /build/jenkins/workspace/root-pullrequests-build/build; make: *** No rule to make target `/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TBulkBranchRead.hxx', needed by `/build/jenkins/workspace/root-pullrequests-build/roottest/scripts/recordtiming_cc.so'. Stop. -- END TEST ERROR --; CMake Error at /build/jenkins/workspace/root-pullrequests-build/root/cmake/modules/RootTestDriver.cmake:186 (message):; got exit code 2 but expected 0; ```; I think we can safely merge this now. I guess bulk I/O is not there for 6.16. The PR build probably used the master of roottest from my fork, which is outdated, or something similar to that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3763#issuecomment-489659558:683,message,message,683,https://root.cern,https://github.com/root-project/root/pull/3763#issuecomment-489659558,1,['message'],['message']
Integrability,This looks great (delta the code location and the interface question). Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1308986062:50,interface,interface,50,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1308986062,1,['interface'],['interface']
Integrability,This looks like a useful interface. Too bad we can return a TType (or RType) ... [since it does not exist yet :( ],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2393#issuecomment-409236131:25,interface,interface,25,https://root.cern,https://github.com/root-project/root/pull/2393#issuecomment-409236131,1,['interface'],['interface']
Integrability,This means that 2 different part of rootcling disagree on whether TFormula has a Streamer member function. Namely the part that should have written down the implementation of the wrapper found **wrongly** that there was no TFormula::Streamer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411915705:179,wrap,wrapper,179,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411915705,1,['wrap'],['wrapper']
Integrability,This now depends on #12981 for the failures on ubuntu18,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12363#issuecomment-1584649695:9,depend,depends,9,https://root.cern,https://github.com/root-project/root/pull/12363#issuecomment-1584649695,1,['depend'],['depends']
Integrability,"This now shows the error that we know about:; ```; In file included from input_line_3:2:; In file included from /Users/sftnight/ROOT-CI/build/include/Rtypes.h:193:; /Users/sftnight/ROOT-CI/build/include/TGenericClassInfo.h:22:10: remark: building module 'std_vector' as '/Users/sftnight/ROOT-CI/build/lib/std_vector.pcm' [-Rmodule-build]; #include <vector>; ^; Error: Building module 'std_vector' implicitly. If 'std_vector' requires a ; dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'.; Otherwise, specify '-mByproduct std_vector' to disable this diagnostic.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14897#issuecomment-1981259299:470,depend,dependency,470,https://root.cern,https://github.com/root-project/root/pull/14897#issuecomment-1981259299,2,['depend'],"['dependency', 'depends']"
Integrability,This one time unfortunately that is not the case. The written file were incorrectly and could lead to spurious crash. The new file when read in unpatched old version can lead to 'just' spurious error message (that can be suppress with the insertion of custom ROOT error handler).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14793#issuecomment-1998568671:200,message,message,200,https://root.cern,https://github.com/root-project/root/issues/14793#issuecomment-1998568671,1,['message'],['message']
Integrability,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/327#issuecomment-280571695:235,depend,depends,235,https://root.cern,https://github.com/root-project/root/pull/327#issuecomment-280571695,1,['depend'],['depends']
Integrability,"This problem is blocking ATLAS in adopting ROOT 6.28.x in production. . We use an ATLAS specific pyROOT script 'diff-root' that compares AODs branch-by-branch in our CI and integration tests that is not working in ROOT 6.28.x with the symptoms described above. The original error message of this script is:. ```; [..]; Py:diff-root INFO comparing [2932] leaves over entries...; IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPKN4xAOD28CaloClusterBadChannelData_v1ES5_EEbT_S6_T0_' unresolved while linking symbol '__cf_295'!; You are probably missing the definition of bool std::__equal<false>::equal<xAOD::CaloClusterBadChannelData_v1 const*, xAOD::CaloClusterBadChannelData_v1 const*>(xAOD::CaloClusterBadChannelData_v1; const*, xAOD::CaloClusterBadChannelData_v1 const*, xAOD::CaloClusterBadChannelData_v1 const*); Maybe you need to load the corresponding shared library?; cling JIT session error: Failed to materialize symbols: { (main, { _ZSteqISt6vectorIN4xAOD28CaloClusterBadChannelData_v1ESaIS2_EESaIS4_EEbRKS0_IT_T0_ESA_ }) }; IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK20TrigRoiDescriptor_p3S4_EEbT_S5_T0_' unresolved while linking symbol '__cf_452'!; You are probably missing the definition of bool std::__equal<false>::equal<TrigRoiDescriptor_p3 const*, TrigRoiDescriptor_p3 const*>(TrigRoiDescriptor_p3 const*, TrigRoiDescriptor_p3 const*, Trig; RoiDescriptor_p3 const*); Maybe you need to load the corresponding shared library?; cling JIT session error: Failed to materialize symbols: { (main, { _ZN16__cppyy_internal8is_equalI30TrigRoiDescriptorCollection_p3S1_EEbRKT_RKT0_ }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZN16__cppyy_internal8is_equalI30TrigRoiDescriptorCollection_p3S1_EEbRKT_RKT0_ }) }; [..] ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12406#issuecomment-1543771925:173,integrat,integration,173,https://root.cern,https://github.com/root-project/root/issues/12406#issuecomment-1543771925,2,"['integrat', 'message']","['integration', 'message']"
Integrability,"This pull request sets up GitHub code scanning for this repository. Once the scans have completed and the checks have passed, the analysis results for this pull request branch will appear on [this overview](/root-project/root/security/code-scanning?query=pr%3A13007+tool%3ASonarCloud+is%3Aopen). Once you merge this pull request, the 'Security' tab will show more code scanning analysis results (for example, for the default branch). Depending on your configuration and choice of analysis tool, future pull requests will be annotated with code scanning analysis results. For more information about GitHub code scanning, check out [the documentation](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13007#issuecomment-1589877841:434,Depend,Depending,434,https://root.cern,https://github.com/root-project/root/pull/13007#issuecomment-1589877841,1,['Depend'],['Depending']
Integrability,"This seems to be the only other place where the configuration setting is checked:; https://github.com/root-project/root/blob/master/io/io/src/TFile.cxx#L4201-L4209. I think people may be annoyed by the `Info` messages and we'd need some static storage to store if the message has been emitted or not for the current process, so I'm not a fan of adding it (although I have no strong feelings about this either). I will add stripping of `file://` prefix so that the behavior is consistent (always redirect) then. I tried and didn't find an easy way to get `file://` to disable the redirection in the case of `TChain`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1309927766:209,message,messages,209,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1309927766,2,['message'],"['message', 'messages']"
Integrability,This seems to remove real dependencies and breaks modules. See PR #2802.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2800#issuecomment-430285309:26,depend,dependencies,26,https://root.cern,https://github.com/root-project/root/pull/2800#issuecomment-430285309,1,['depend'],['dependencies']
Integrability,"This seems to work now and the changes LGTM in principle. We'll break running with `-O0` until the last commit, but I understand that's to make it easier to revert later on. The message of the first commit should be reflowed to not be one very long line. Otherwise, is this ready @devajithvs ? ping @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1907702045:178,message,message,178,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1907702045,1,['message'],['message']
Integrability,"Those 2 classes may or may not be the only 2 that have this kind of pattern in the wild, so it might be interesting to solve the underlying issue which is likely to be that `BindCppObject` is trying to bind to a type which has no interpreter info. So a fix could be to have either `CPyCppyy::BindCppObject` or `Cppyy::GetActualClass` to check for the presence of interpreter info before attempting to automatically bind to the ""actual class/type"". (In theory this should be done by testing `TClass::HasInterpreterInfo` but in this case it is returning an incorrect information and thus we have to use `TClass::GetClassInfo`). The change in behavior is that after this modification, `PyROOT/Cppyy` would no longer warn if the actual return type is inadvertently missing its interpreter info. However semantically this seems to be the right behavior, for example in our cases we would:; * have no warning; * PyROOT will report the type of the pointer as `TList`; * Usage of the meta routines (`IsA` and co.) would still give accurate information (access to the `TClass` for `TViewPubFunctions`); * Interfaces to the objects are the same as the one available from the equivalent C++ code (I.e. `TList`) (unless the user does an explicit dynamic_cast to the underlying type). * In other cases (for user provided functions and classes) where the interpreter information from the underlying class is missing by mistake (bad/broken configuration of the user code/libraries), the error/warning reporting about the missing interpreter info will be delayed until the user actually want to access the underlying class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16177#issuecomment-2271797820:981,rout,routines,981,https://root.cern,https://github.com/root-project/root/pull/16177#issuecomment-2271797820,2,"['Interface', 'rout']","['Interfaces', 'routines']"
Integrability,"To be clear, it seems to me that the following:. ```C++; diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx; index c69a3a95e3..e80e45d8be 100644; --- a/tree/tree/src/TBranch.cxx; +++ b/tree/tree/src/TBranch.cxx; @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,; /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may; /// still fail, depending on the contents of the individual TBaskets loaded.; Bool_t TBranch::SupportsBulkRead() const {; + return true;; return (fNleaves == 1) &&; (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);; }; @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf); // TODO: eventually support multiple leaves.; if (R__unlikely(fNleaves != 1)) return -1;; TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));; - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}; +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}; ; // Remember which entry we are reading.; fReadEntry = entry;; @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf); Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;; //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);; if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {; - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");; - return -1;; + leaf->ReadBasket(user_buf);; }; user_buf.SetBufferOffset(bufbegin);; ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-701704099:413,depend,depending,413,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-701704099,2,['depend'],['depending']
Integrability,To be investigated before merging:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84694/testReport/projectroot.roottest.python/regression/roottest_python_regression_regression/. On MacOS the test succeeds but we get those `Symbol not found` messages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5643#issuecomment-638019521:268,message,messages,268,https://root.cern,https://github.com/root-project/root/pull/5643#issuecomment-638019521,1,['message'],['messages']
Integrability,To be more precise than just a thumbs up: I also think the on-disk representation should not depend on the allocator.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16754#issuecomment-2441745375:93,depend,depend,93,https://root.cern,https://github.com/root-project/root/issues/16754#issuecomment-2441745375,1,['depend'],['depend']
Integrability,"To clarify, we are talking about the case where a library has a module. Users do not use make project often and roottest claims to cover a good amount of their workflows. As for the dev hours: they are already invested and we know that only under very specific conditions we need rdicts -- it seems that it depends on the amount of header files we parse. If the number is very high, as in Philippe's example, we should load the rdict -- it slows things by 2%...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-650964137:307,depend,depends,307,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-650964137,1,['depend'],['depends']
Integrability,"To reproduce, you just need to build ROOT using a compiler wrapper (i.e. a symlink like `/usr/lib/ccache/bin/g++` as ; your `CMAKE_CXX_COMPILER`, which points to ccache). For example, on my machine, I have:; ```sh; $ ls -l $(which g++); lrwxrwxrwx 1 root root 15 abr 24 06:52 /usr/lib/ccache/bin/g++ -> /usr/bin/ccache; $ g++ --version; g++ (Gentoo 11.3.0 p4) 11.3.0; ```; I suppose just using `PATH` rather then `REALPATH` in the place linked above should fix this, but I don't know if that has other consequences. If you need a place with this setup to test, you can use `titanx`, I can setup an account there for you if you don't have one yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10556#issuecomment-1128835062:59,wrap,wrapper,59,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1128835062,1,['wrap'],['wrapper']
Integrability,"To understand why this is failing, and barring a stand-alone reproducer, I need a build of ROOT with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` that I can ""inject"" into this environment. Do you think you could convince your build setup to provide me with one? Or do I need to hack that in myself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12758#issuecomment-1536252367:164,inject,inject,164,https://root.cern,https://github.com/root-project/root/issues/12758#issuecomment-1536252367,1,['inject'],['inject']
Integrability,"Tokyo:; >; >; > https://bigpanda.cern.ch//media/filebrowser/e051d153-88d6-4010-9bae-adee1dc89c07/panda/tarball_PandaJob_4925837464_TOKYO/payload.stdout; >; > [2020-12-18 18:28:04.321336 +0000][Debug ][XRootDTransport ] [; > lcg-se01.icepp.jp:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 500); >; > Failed BNL:; >; >; > https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout; >; > [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [; > dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: manager; > [], protocol version 500); >; > Fail Romania:; >; >; > https://bigpanda.cern.ch//media/filebrowser/60928171-593f-4422-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout; >; > [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [; > tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 400); >; > Fail canada:; >; >; > https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout; >; > [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [; > lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol successful (type:; > server [], protocol version 400); >; > Failed CERN:; >; >; > https://bigpanda.cern.ch//media/filebrowser/c4b9c33e-f260-46b5-9b07-40d54ddef09b/panda/tarball_PandaJob_4926196336_CERN/payload.stdout; >; > [2020-12-19 01:47:52.683440 +0100][Debug ][XRootDTransport ] [; > eosatlas.cern.ch:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 400); >; > Failed Technion:; >; >; > https://bigpanda.cern.ch//media/filebrowser/a51fb0cb-4f96-4442-b0c2-ea15e6d72bf7/panda/tarball_PandaJob_4926186375_TECHNION/payload.stdout; >; > [2020-12-19 02:37:01.970916 +0200][Debug ][XRootDTransport ] [; > tech-gftp.hep.technion.ac.il:1094 #0.0] kXR_protocol successful (t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758074953:3854,protocol,protocol,3854,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758074953,1,['protocol'],['protocol']
Integrability,Tools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 46 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:127 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546714154:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546714154,2,['message'],['message']
Integrability,"Trying to wrap up here: I do not think we have instructions to build ROOT on top of an external clang, even if the patch version of clang is built with changes we need. At the moment, we do not have at disposal enough effort to work on such a recipe. Therefore, the reply to this inquiry, unfortunately, is that there is no well tested, blessed recipe to build external llvm for ROOT. And that would be enough to close the item, in my opinion. . Of course, @cgleggett , we would warmly invite you to contribute such a recipe, helping you in the process as best as we can.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14250#issuecomment-2038229517:10,wrap,wrap,10,https://root.cern,https://github.com/root-project/root/issues/14250#issuecomment-2038229517,1,['wrap'],['wrap']
Integrability,"Trying to wrap up: I agree that the interactive case is real, and more than one loop is triggered on purpose. Likewise, I tend to think that it's not really possible to distinguish this case from the case when subsequent, unintended, runtime performance degrading loops are triggered (how can we check we are not at the root prompt, python prompt, ipython, jupyter...). Doesn't all this point to closing this issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13440#issuecomment-1967511621:10,wrap,wrap,10,https://root.cern,https://github.com/root-project/root/issues/13440#issuecomment-1967511621,1,['wrap'],['wrap']
Integrability,"Turns out the `arrow` dependency is not installed anywhere, so this code can't be tested for now. To discuss with the RDataFrame developers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15312#issuecomment-2071932846:22,depend,dependency,22,https://root.cern,https://github.com/root-project/root/pull/15312#issuecomment-2071932846,1,['depend'],['dependency']
Integrability,"Two fixes here:; - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable; - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```; -- Found py_keras: /usr/lib/python3.5/site-packages/keras ; -- Failed to find Python module theano: Traceback (most recent call last):; File ""<string>"", line 1, in <module>; ImportError: No module named 'theano'; -- Could NOT find py_theano (missing: PY_THEANO) ; -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/280#issuecomment-253640317:279,message,message,279,https://root.cern,https://github.com/root-project/root/pull/280#issuecomment-253640317,1,['message'],['message']
Integrability,"Two more gradient interfaces have been parallelized and vectorized: `PoissonLikelihood` and `LogLikelihood`. Both of them are tested. The review of these new implementations should be straightforward, as they are very similar to the `Chi2` implementations. Also, the previous errors in the builds should be fixed now, let's see what Jenkins has to say. By the way, I have pushed a commit fixing the clang-format style because I got a huge diff (probably due to the recent changes in .clang-format) when doing `git clang-format`. I thought this would be cleaner and easier to review, but if you want me to squash the changes I can do it (actually I tried to do it, but the `rebase` threw *a lot* of conflicts, so I just did this new commit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-320457479:18,interface,interfaces,18,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-320457479,1,['interface'],['interfaces']
Integrability,"Two of the PRs that this PR was dependent on were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review! @lmoneta @guitargeek. And thanks for the brave first review in the previous cluttered state @hageboeck! Also, apologies ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-877413869:32,depend,dependent,32,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-877413869,1,['depend'],['dependent']
Integrability,URCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Frontend -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Frontend -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/usr/include/libxml2 -Iinterpreter/llvm/src/include -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++11 -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -fno-exceptions -fno-rtti -std=c++11 -MD -MT interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:376: error: ‘conditional_t’ in namespace ‘std’ does not name a template type ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected ‘&gt;’ before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8399#issuecomment-865243666:1337,Interface,InterfaceStubFunctionsConsumer,1337,https://root.cern,https://github.com/root-project/root/pull/8399#issuecomment-865243666,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,"Update: I have moved `NumericalDerivatorMinuit2` from roofitcore into Minuit2 and, of course, renamed it into `Minuit2::NumericalDerivator`. Originally, @lmoneta's NumericalDerivator was in mathcore. However, I think it fits well in Minuit2 as well, since the algorithms exactly try to mimic Minuit2's. Also, I have added some depedencies to Minuit2 parameter transformations that I think make it an even more logical fit in Minuit2 than to have to make mathcore depend on Minuit2. I guess in the end it's an arbitrary choice.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567#issuecomment-875917554:463,depend,depend,463,https://root.cern,https://github.com/root-project/root/pull/8567#issuecomment-875917554,1,['depend'],['depend']
Integrability,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6570#issuecomment-708403160:713,message,message,713,https://root.cern,https://github.com/root-project/root/pull/6570#issuecomment-708403160,2,['message'],['message']
Integrability,Updated the commit message as per comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10318#issuecomment-1096565398:19,message,message,19,https://root.cern,https://github.com/root-project/root/pull/10318#issuecomment-1096565398,1,['message'],['message']
Integrability,Updated/fixed the docstrings and added ROOT-10396 to the commit message as discussed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-805870893:64,message,message,64,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-805870893,1,['message'],['message']
Integrability,"Usages of `testing::internal::CaptureStd(err|out)` in RDataFrame tests:. ```; ~/W/R/root (credit_rquaglia) git grep -n 'CaptureStd\(err\|out\)' -- tree/dataframe/test/; tree/dataframe/test/dataframe_cache.cxx:148: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_nodes.cxx:55: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_nodes.cxx:79: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_report.cxx:22: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_report.cxx:72: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_report.cxx:81: testing::internal::CaptureStdout();; tree/dataframe/test/dataframe_snapshot.cxx:141: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_snapshot.cxx:686: testing::internal::CaptureStderr();; tree/dataframe/test/dataframe_snapshot.cxx:700: testing::internal::CaptureStderr();; ````; For example, https://github.com/root-project/root/blob/master/tree/dataframe/test/dataframe_snapshot.cxx#L141-L143 for checking that no error is printed, or https://github.com/root-project/root/blob/master/tree/dataframe/test/dataframe_snapshot.cxx#L686-L694 to check that an error is printed and the message is what we expect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5297#issuecomment-620060541:1221,message,message,1221,https://root.cern,https://github.com/root-project/root/pull/5297#issuecomment-620060541,1,['message'],['message']
Integrability,"Using the `minuit2_omp` option restricts you to minimizing thread-safe functions, and RooFit models are not thread safe. Also the regular ROOT fitter interface is not thread-safe either, so this option basically breaks your build. It is intended for MInuit2 standalone builds for the specific case where you have an expensive thread-safe function where you want to parallelize the gradient calculation. Adding a warning in the configuration step with CMake hopefully keeps people and package maintainers from using it in the future:; https://github.com/root-project/root/pull/12970",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12940#issuecomment-1581533040:150,interface,interface,150,https://root.cern,https://github.com/root-project/root/issues/12940#issuecomment-1581533040,1,['interface'],['interface']
Integrability,"Using valgrind:; ```; cd /builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/tutorials && LD_LIBRARY_PATH=/builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 valgrind --suppressions=/builddir/build/BUILD/root-6.24.00/etc/valgrind-root.supp --track-origins=yes /builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/bin/root.exe -l -q -b -n -x hsimple.C -e return; ==3856979== Memcheck, a memory error detector; ==3856979== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==3856979== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info; ==3856979== Command: /builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/bin/root.exe -l -q -b -n -x hsimple.C -e return; ```; [ skipping some lines that seem irrelevant... ]; ```; ==3856979== Conditional jump or move depends on uninitialised value(s); ==3856979== at 0x4AD8468: TROOT::FindObject(char const*) const (TROOT.cxx:1267); ==3856979== by 0x186D05AF: ???; ==3856979== by 0x186D004F: ???; ==3856979== by 0x6A5C80F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:376); ==3856979== by 0x6995A4F: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1141); ==3856979== by 0x699F2B3: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1391); ==3856979== by 0x699FD73: cling::Interpreter::echo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*) (Interpreter.cpp:1043); ==3856979== by 0x6AF224B: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:145); ==3856979== by 0x6B02C0F: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:319); ==3856979== by 0x6B050AF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-845027817:851,depend,depends,851,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-845027817,1,['depend'],['depends']
Integrability,"Valgrind's helgrind sees several problems, but it is not to be trusted completely as it does not understand the thread synchronization semantics of TBB tasks. One of the reports that seems relevant is e.g.:. ```; ==144544== Possible data race during read of size 8 at 0x1A752C00 by thread #1; ==144544== Locks held: none; ==144544== at 0x51BD968: TGenCollectionProxy::PopProxy() (TGenCollectionProxy.cxx:1332); ==144544== by 0x63D678C: (anonymous namespace)::TCollectionLessSTLReader::GetSize(ROOT::Detail::TBranchProxy*) (TTreeReaderArray.cxx:130); ==144544== by 0x168CEE: ROOT::Internal::TTreeReaderArrayBase::GetSize() const (TTreeReaderArray.h:35); ==144544== by 0x180901: ROOT::Internal::RDF::RTreeColumnReader<ROOT::VecOps::RVec<double> >::GetImpl(long long) (RTreeColumnReader.hxx:79); ==144544== by 0x178553: ROOT::VecOps::RVec<double>& ROOT::Detail::RDF::RColumnReaderBase::Get<ROOT::VecOps::RVec<double> >(long long) (RColumnReaderBase.hxx:38); ==144544== by 0x167C89: void ROOT::Detail::RDF::RDefine<plot_rc()::{lambda(ROOT::VecOps::RVec<double>&)#1}, ROOT::Detail::RDF::CustomColExtraArgs::None>::UpdateHelper<ROOT::VecOps::RVec<double>, 0ul>(unsigned int, long long, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<double> >, std::integer_sequence<unsigned long, 0ul>, ROOT::Detail::RDF::CustomColExtraArgs::None) (RDefine.hxx:77); ==144544== by 0x16782C: ROOT::Detail::RDF::RDefine<plot_rc()::{lambda(ROOT::VecOps::RVec<double>&)#1}, ROOT::Detail::RDF::CustomColExtraArgs::None>::Update(unsigned int, long long) (RDefine.hxx:138); ==144544== by 0x168A5E: ROOT::Internal::RDF::RDefineReader::GetImpl(long long) (RDefineReader.hxx:41); ==144544== by 0x176D71: ROOT::VecOps::RVec<int>& ROOT::Detail::RDF::RColumnReaderBase::Get<ROOT::VecOps::RVec<int> >(long long) (RColumnReaderBase.hxx:38); ==144544== by 0x17588E: void ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::SumHelper<int>, ROOT::Detail::RDF::RLoopManager, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<int> > >::CallExec<ROOT::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10357#issuecomment-1092744098:119,synchroniz,synchronization,119,https://root.cern,https://github.com/root-project/root/issues/10357#issuecomment-1092744098,1,['synchroniz'],['synchronization']
Integrability,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed.; A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2944#issuecomment-437165806:21,depend,dependency,21,https://root.cern,https://github.com/root-project/root/pull/2944#issuecomment-437165806,2,['depend'],"['dependence', 'dependency']"
Integrability,"Wait, I was too quick. This fix should go into the adoption mechanism through the array interface and not into `RDataFrame.AsNumpy`. The minimal reproducer is the following:. ```python; import ROOT; import numpy; x = ROOT.std.vector(""float"")(); npy = numpy.asnumpy(x); ```. And then, I'm not sure what value the `data` field should take and what is consistent with what numpy does for empty arrays (which do not have any data?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3528#issuecomment-472336932:88,interface,interface,88,https://root.cern,https://github.com/root-project/root/pull/3528#issuecomment-472336932,1,['interface'],['interface']
Integrability,"We *do* want to use the source directory includes when possible. So I don't agree that we should exclude those includes. What we have is already almost as good as we can have. We just need to fix the issue with lack of space between includes, and generate headers in `${CMAKE_CURRENT_BINARY_DIR}` instead of `${CMAKE_BINARY_DIR}/include`. See PRs #4108, #4281, and #4299 for more information on the subject. Note that many of those missing dependencies from #4299 are still not fixed, because it was decided that each person would take care of their parts of the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5172#issuecomment-600593668:440,depend,dependencies,440,https://root.cern,https://github.com/root-project/root/pull/5172#issuecomment-600593668,1,['depend'],['dependencies']
Integrability,"We are still discussing the names. The current proposal is:; ```; using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with; /// that name does not exist, an invalid RFilePtr will be returned.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid; /// `RFilePtr`) if a file with this name already exists.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name; /// already exists, delete it and create a new one. Else simply create a new file.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());; ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14017#issuecomment-1821818413:166,Synchroniz,Synchronizes,166,https://root.cern,https://github.com/root-project/root/pull/14017#issuecomment-1821818413,4,['Synchroniz'],['Synchronizes']
Integrability,"We can add another option to disable completely SOFIE, but it is itself a small library and we could consider in general as part of tmva. The Onyx parser instead needs to be switch is off for cases where we don't want to have the protobuf dependency",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13055#issuecomment-1926446593:239,depend,dependency,239,https://root.cern,https://github.com/root-project/root/issues/13055#issuecomment-1926446593,1,['depend'],['dependency']
Integrability,"We can not access the original ticket. What is the actual hardware that was being accessed? What is mounted as a local -appearing file system or was it being accessed via a remote protocols (i.e the file name were prefixed with root://...). In first approximation, I don't how we could detect your use case? If you were able to set `ulimit` locally to whatever limit fit your need, hadd would automatically adjust.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11276#issuecomment-1239603727:180,protocol,protocols,180,https://root.cern,https://github.com/root-project/root/issues/11276#issuecomment-1239603727,1,['protocol'],['protocols']
Integrability,"We can probably make this an output variable and fix roottest. If you are willing to go that extra mile, you can create a PR against roottest with a branch `reflGenDicFromTarget` (with the same name) and our infrastructure should be able to integrate them together. If not, resetting the `definitions` variable should allow us to make progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-587562141:241,integrat,integrate,241,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-587562141,1,['integrat'],['integrate']
Integrability,"We considered replacing them with https://packages.ubuntu.com/bionic/fonts-liberation. Thanks for pointing out the fedora patch - looks good, actually - too bad that never made it upstream! I'll assign to @bellenot so see which route we should take: replace the files with ""liberation"" or patch ROOT to use fontconfig.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8357#issuecomment-867694334:228,rout,route,228,https://root.cern,https://github.com/root-project/root/issues/8357#issuecomment-867694334,1,['rout'],['route']
Integrability,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/391#issuecomment-284779477:240,integrat,integration,240,https://root.cern,https://github.com/root-project/root/pull/391#issuecomment-284779477,1,['integrat'],['integration']
Integrability,We decided to merge this PR to move forward in debugging a cyclic module dependency. @Teemperor will submit another PR in resolving the `CodegenForModules` issue as we suggested before.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1017#issuecomment-331809593:73,depend,dependency,73,https://root.cern,https://github.com/root-project/root/pull/1017#issuecomment-331809593,1,['depend'],['dependency']
Integrability,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag?. We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8447#issuecomment-879210583:193,wrap,wrapper,193,https://root.cern,https://github.com/root-project/root/issues/8447#issuecomment-879210583,1,['wrap'],['wrapper']
Integrability,"We do have an actual header dependency, that PR just makes it more obvious, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5439#issuecomment-618464545:28,depend,dependency,28,https://root.cern,https://github.com/root-project/root/pull/5439#issuecomment-618464545,1,['depend'],['dependency']
Integrability,"We do not have yet all python requirement in the current `requirements.txt`, still have to figure out all dependencies and the respective minimum version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654644610:106,depend,dependencies,106,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654644610,1,['depend'],['dependencies']
Integrability,"We don't break b/w comp with ROOT7 - we are stopping development lines, replacing features with new versions that provide no backward compatibility (because they are new), but do provide transitioning help. Think `RNTuple`, `TTree` successor: incompatible interfaces, but tools to migrate a `TTree` stored in a ROOT file to a `RNTuple`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8370#issuecomment-859679425:256,interface,interfaces,256,https://root.cern,https://github.com/root-project/root/issues/8370#issuecomment-859679425,1,['interface'],['interfaces']
Integrability,We first need to fix the dependencies that TreePlayer is built before we try to load it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1328#issuecomment-344347407:25,depend,dependencies,25,https://root.cern,https://github.com/root-project/root/pull/1328#issuecomment-344347407,1,['depend'],['dependencies']
Integrability,"We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318#issuecomment-2153455231:75,depend,depend,75,https://root.cern,https://github.com/root-project/root/issues/15318#issuecomment-2153455231,1,['depend'],['depend']
Integrability,We have successfully waited out the issue! ROOT 6.28 already doesn't support 4.8 anymore:; https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9370#issuecomment-1739929700:117,depend,dependencies,117,https://root.cern,https://github.com/root-project/root/issues/9370#issuecomment-1739929700,1,['depend'],['dependencies']
Integrability,We need this to avoid build errors in `yoda` and test root master in CMSSW CXXModules integration builds,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4467#issuecomment-538276379:86,integrat,integration,86,https://root.cern,https://github.com/root-project/root/pull/4467#issuecomment-538276379,1,['integrat'],['integration']
Integrability,"We need to only do this when not in in ACLiC-rootmap mode. This means `TSystem::CompileMacro()` needs to know specifically about `-Wl,--no-undefined`, and only pass it depending on rootmap mode's value. That needs a different approach; closing this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3161#issuecomment-446869055:168,depend,depending,168,https://root.cern,https://github.com/root-project/root/pull/3161#issuecomment-446869055,1,['depend'],['depending']
Integrability,"We need to stop relying on such hacks to deduce the types, because it will never work. If in the next version ICC decides to change the format of PRETTY_FUNCTION again, our code will become broken again. We need to use `typeid(T).name()` and then find a way to consistently demangle the name it returns, instead of trying to parse error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1389#issuecomment-347652046:337,message,messages,337,https://root.cern,https://github.com/root-project/root/pull/1389#issuecomment-347652046,1,['message'],['messages']
Integrability,"We see more or less the same thing in dev4 now: ; Ironically the ""opt"" build gives more of an error message than the debug build; opt: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24134444&build=315763; dbg: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24138113&build=315805",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964#issuecomment-2003453893:100,message,message,100,https://root.cern,https://github.com/root-project/root/issues/14964#issuecomment-2003453893,1,['message'],['message']
Integrability,We should not go through the interface setting CodeGenerationForModule.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1017#issuecomment-331068461:29,interface,interface,29,https://root.cern,https://github.com/root-project/root/pull/1017#issuecomment-331068461,1,['interface'],['interface']
Integrability,"We usually have `Internal` just mean that it is internal to ROOT, i.e. other ROOT classes/namespaces can use it, but we don't advertise/support the usage from outside of ROOT. Why is that different in this case? Should we consider moving this to just a public interface, with docs explaining in which situations this function should be used?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16786#issuecomment-2446266750:260,interface,interface,260,https://root.cern,https://github.com/root-project/root/pull/16786#issuecomment-2446266750,1,['interface'],['interface']
Integrability,"Well I believe you've found a bug, my bad! And thanks for reporting!; Indeed the expected behaviour is that the option should *quietly* turn OFF itself if pyspark can't be found or one of its dependencies (like Java) are not present. At least, this is the expected behaviour when `fail-on-missing` is not enabled, like in your case (it must be explicitly enabled with `-Dfail-on-missing=ON`). The error you see should happen only when `fail-on-missing` is ON. . I'll upload a PR very soon and you can tell me if that fixes the error you see :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7406#issuecomment-793570847:192,depend,dependencies,192,https://root.cern,https://github.com/root-project/root/pull/7406#issuecomment-793570847,1,['depend'],['dependencies']
Integrability,Well also depending on what the user code is going to DO with the TFile object there can be other thread safety issues. (ie multiple threads might end up with pointers to the same TFile object which was being managed by TTreeProcessorMT from a different thread),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10318#issuecomment-1091419639:10,depend,depending,10,https://root.cern,https://github.com/root-project/root/pull/10318#issuecomment-1091419639,1,['depend'],['depending']
Integrability,Well it passed this time but it might just be noise depending on what's going on at the same time...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162#issuecomment-679290564:52,depend,depending,52,https://root.cern,https://github.com/root-project/root/pull/6162#issuecomment-679290564,1,['depend'],['depending']
Integrability,"Well looking at the debug logs, all failed jobs die after ""kXR_protocol"" and before "" and before ""Sending out kXR_login request"". I haven't been able to download logs from too many successful jobs. But I have three - two reading from RAL and one reading in LAPP. I give a link to the log files and the last DEBUG line of the failed jobs and the same line plus the next for the successful jobs. So perhaps a question of what is happening in the code between these two points?. see you, RD. Successful RAL:. https://bigpanda.cern.ch//media/filebrowser/667e8363-d9bb-4ebd-800f-79d3495d1b3a/panda/tarball_PandaJob_4925629005_RAL/payload.stdout. [2020-12-18 14:20:13.919081 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400); [2020-12-18 14:20:13.919352 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2010227.0-lcg2237.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful UK WATERLOO:. https://bigpanda.cern.ch//media/filebrowser/772fff72-3e22-499f-8a3f-aa8956ea5636/panda/tarball_PandaJob_4926186410_RAL/payload.stdout. [2020-12-19 00:45:02.375203 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400); [2020-12-19 00:45:02.375430 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2013477.0-lcg2259.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful IN2P3 LAPP_LAKE. https://bigpanda.cern.ch//media/filebrowser/f9695015-c110-4e2e-9c62-d56eade824f8/panda/tarball_PandaJob_4926136184_IN2P3-LAPP_LAKE/payload.stdout. [2020-12-19 02:08:57.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758062082:779,protocol,protocol,779,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758062082,1,['protocol'],['protocol']
Integrability,"Well the other question is whether we could make this behaviour the default for TTreeProcessorMT or at least for RDataFrame. Depending on the use case, I'm not sure things will work correctly anyways when using a TRef pointing to a TFile which is being read by TTreeProcessorMT. In particular because different clusters from a single file may be processed simultaneously by different threads, it won't be deterministic which particular TFile object is registered in the global TProcessUUID for a given UUID, and any attempt to make use of this is not likely to be thread safe...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10318#issuecomment-1088455084:125,Depend,Depending,125,https://root.cern,https://github.com/root-project/root/pull/10318#issuecomment-1088455084,1,['Depend'],['Depending']
Integrability,"Well this arised particularly by trying to have a conda environment with both `root` and `zfit`. zfit depends on tensorflow and therefore tensorflow would either be installed from conda-forge or from pypi. I'm not really sure I understand your proposed solution. Can I do all that without compiling root myself and while grabbing it from conda? If so, at which point of the installation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970#issuecomment-2208640078:102,depend,depends,102,https://root.cern,https://github.com/root-project/root/issues/15970#issuecomment-2208640078,1,['depend'],['depends']
Integrability,"Well, I can shed some light on how the Xrootd client works (as I'm taking care of that part of xrootd):. - `succesful parsing of kXR_protol` comes from https://github.com/xrootd/xrootd/blob/93871f8241e478a308c8e722fd99aeaa08ff6459/src/XrdCl/XrdClXRootDTransport.cc#L1546-L1552, it means we successfully parsed the server response to `kXR_protocol` and this is the end of `ProcessProtocolResp` routine; - the next step is to generate the initial `kXR_login` request; https://github.com/xrootd/xrootd/blob/stable-4.12.x/src/XrdCl/XrdClXRootDTransport.cc#L441-L454; - if there is a problem in the xrootd client it will be in the `GenerateLogIn` method as by the end of that one the `Sending out kXR_login request ...` log line is printed: https://github.com/xrootd/xrootd/blob/stable-4.12.x/src/XrdCl/XrdClXRootDTransport.cc#L1711-L1716. That said, there's really not much happening in `GenerateLogIn` but I will inspect the code carefully once again ... Do we have the machine name that was hosting the job at CERN?. P. S. Just in case I will ping Andy so he can have a look at, maybe he will come up with some good explanation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758205094:393,rout,routine,393,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758205094,1,['rout'],['routine']
Integrability,"Well, as long as it doesn't break backward compatibility, anything can be done (i.e. internal methods). We **cannot** break user code (public interfaces), even if that means broken code on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13091#issuecomment-1610868081:142,interface,interfaces,142,https://root.cern,https://github.com/root-project/root/issues/13091#issuecomment-1610868081,1,['interface'],['interfaces']
Integrability,"Well, resolving conflicts via github's web interface failed spectacularly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4850#issuecomment-594478750:43,interface,interface,43,https://root.cern,https://github.com/root-project/root/pull/4850#issuecomment-594478750,1,['interface'],['interface']
Integrability,"Well, that argument would apply to 95 % percent of the classes in ROOT then :D Users that are adventurous to use this probably also know about C++ ownership. I personally don't think the added complexity and less clear ownership when using `shared_ptr` + `weak_ptr` is justified in this case. I think `shared_ptr` should only be used when there are really shared resources in the implementation details, not as a general solution to prevent the user from making memory management mistakes. As you say, it gives also mixed messages on how to manage the resources. Would you be okay with leaving it like this for now? We can always revisit this if need be...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12348#issuecomment-1439898961:522,message,messages,522,https://root.cern,https://github.com/root-project/root/pull/12348#issuecomment-1439898961,2,['message'],['messages']
Integrability,"Well, the variable is private and the whole class is in the .cxx because it's an implementation detail. I can of course change it, but IMHO this is better checked if we start discussing how to integrate the `RCombinedDS` and we have an example for that to work correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3428#issuecomment-464018975:193,integrat,integrate,193,https://root.cern,https://github.com/root-project/root/pull/3428#issuecomment-464018975,1,['integrat'],['integrate']
Integrability,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-385710986:112,interface,interface,112,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-385710986,2,['interface'],['interface']
Integrability,What about including [this](https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html#numerical-integration) in the reference guide on [this page](https://root.cern/doc/master/group__Integration.html) ?. @lmoneta what do you think ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740#issuecomment-810160931:108,integrat,integration,108,https://root.cern,https://github.com/root-project/root/issues/7740#issuecomment-810160931,2,['integrat'],['integration']
Integrability,"What about:. _TXXX is a legacy interface, there will be no bug fixes nor new developments, therefore it is not recommended to use it in new long-term production code. But depending on the context using TXXX might still be a valid solution._. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11315#issuecomment-1237793992:31,interface,interface,31,https://root.cern,https://github.com/root-project/root/pull/11315#issuecomment-1237793992,2,"['depend', 'interface']","['depending', 'interface']"
Integrability,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:; * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`.; * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432#issuecomment-2001956688:170,depend,depends,170,https://root.cern,https://github.com/root-project/root/issues/6432#issuecomment-2001956688,2,['depend'],['depends']
Integrability,What does the build error message say? I can't read it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-779824754:26,message,message,26,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-779824754,1,['message'],['message']
Integrability,"What is happening here is that your build pulls in header files from Clang 13.0.1, instead of using those bundled with ROOT:; ```; /opt/clang/13.0.1-gcc84/include/llvm/ADT/StringRef.h:272:14: note: explicit conversion function is not a candidate; explicit operator std::string() const { return str(); }; ^; ```; In https://github.com/root-project/root/blob/c4175cb2fa0daf07ef03f460f2026c8bbc34b6a5/interpreter/llvm/src/include/llvm/ADT/StringRef.h#L246-L248 the conversion operator isn't `explicit` yet and the code works. Do your compiler wrappers maybe also add arguments or set environment variables that change the include path?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10046#issuecomment-1059267391:540,wrap,wrappers,540,https://root.cern,https://github.com/root-project/root/issues/10046#issuecomment-1059267391,1,['wrap'],['wrappers']
Integrability,"What is somewhat confusing here (ROOT master from Saturday) is that one sees `b'mystring'`, but this is not a `bytes` instance.; ```term; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Sat/ROOT/HEAD/x86_64-el9-gcc13-dbg/ROOT-env.sh; python -c ""import cppyy; mystr = cppyy.gbl.std.string('mystring'); print(repr(mystr)); print(isinstance(mystr, bytes))""; ```; Gives; ```; b'mystring'; False; ```; So at least some printout messages in existing code are confusing me. As you, @wlav , write as well, `repr` [usually](https://docs.python.org/3/library/functions.html#repr) returns something that let's one construct the object again. So something like `cppyy.gbl.std.string('mystring')` is maybe more consistent with the actual type of the object? Or the type and address in angle brackets, so maybe `<cppyy.gbl.std string object at 0xf22d8f0>`?; I saw a print out of `b'something'` and happily coded my `isinstance(.., bytes)` and nothing changed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15153#issuecomment-2056378637:430,message,messages,430,https://root.cern,https://github.com/root-project/root/issues/15153#issuecomment-2056378637,1,['message'],['messages']
Integrability,"What version of OpenSSL is being used, is it the builtin one? Have you installed the CERN SSL certificates? (note `ErrParseBuffer: unknown CA: cannot verify server certificate` in the error message). Do you have a user grid certificate setup? Is Kerberos actually installed? Do you have an active Kerberos ticket while running the test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231#issuecomment-1420328372:190,message,message,190,https://root.cern,https://github.com/root-project/root/issues/12231#issuecomment-1420328372,1,['message'],['message']
Integrability,"What would be the downside of renaming ROOT's `find_package` (say to `ROOT_FIND_PACKAGE`) and using that throughout ROOT? Would there be e.g. any side-effects for say package X used by ROOT which depends on package Y, which ROOT has already find, but now package X will find a different one? And what about users configuring against ROOT, what would be the side-effect they see? pulling @amadio in for opinions and expertise!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633#issuecomment-878259600:196,depend,depends,196,https://root.cern,https://github.com/root-project/root/issues/8633#issuecomment-878259600,1,['depend'],['depends']
Integrability,What's the issue that gets fixed by this commit? Can you add the error messages?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12912#issuecomment-1568608064:71,message,messages,71,https://root.cern,https://github.com/root-project/root/pull/12912#issuecomment-1568608064,1,['message'],['messages']
Integrability,When did we visibly (eg through a warning message) deprecate `-c`? We need at least one production release where this was deprecated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4360#issuecomment-529229650:42,message,message,42,https://root.cern,https://github.com/root-project/root/pull/4360#issuecomment-529229650,1,['message'],['message']
Integrability,"When reverting, please enhance the commit message with the reason for the reversions. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3788#issuecomment-491303965:42,message,message,42,https://root.cern,https://github.com/root-project/root/pull/3788#issuecomment-491303965,1,['message'],['message']
Integrability,"When trying to build with `-Dbuiltin_llvm=OFF` on Nixpkgs on NixOS (x86_64-linux),. ```; -- Configuring done; CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:735 (add_dependencies):; The dependency target ""install-clang"" of target ""install-clang++"" does not; exist.; ```. <details>; <summary>Full build log</summary>; <pre wrap=true>; building '/nix/store/8xsj5zq00fkbndl1zzjngmxj3hhi51hd-root-6.28.00.drv'...; unpacking sources; unpacking source archive /nix/store/y5m4pr7c6vgjr34zqdz7wv819ln1mkj0-source; source root is source; patching sources; applying patch /nix/store/qljayx9yxgyx2xnf81b3rzzi99azd5d6-sw_vers.patch; patching file cmake/modules/SetUpMacOS.cmake; Hunk #1 succeeded at 8 with fuzz 1 (offset -20 lines).; Hunk #2 succeeded at 30 (offset -20 lines).; Hunk #3 succeeded at 74 (offset -34 lines).; patching file config/root-config.in; Hunk #1 succeeded at 313 (offset 1 line).; Hunk #2 succeeded at 373 (offset 1 line).; configuring; patching script interpreter paths in build/unix/; build/unix/makedistsrc.sh: interpreter directive changed from ""#! /bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/coreteam.sh: interpreter directive changed from ""#!/bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/compiledata.sh: interpreter directive changed from ""#!/usr/bin/env bash"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/bash""; build/unix/makepchinput.py: interpreter directive changed from ""#! /usr/bin/env python"" to ""/nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python""; build/unix/rootmapcat.py: interpreter directive changed from ""#! /usr/bin/env python"" to ""/nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python""; build/unix/makereleasenotes.sh: interpreter directive changed from ""#! /bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/pandoc-jira.sh: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:243,depend,dependency,243,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,2,"['depend', 'wrap']","['dependency', 'wrap']"
Integrability,"When using this in externals projects, this happens:; ```; The link interface of target ""ROOT::Core"" contains:. PkgConfig::LIBBSD. but the target was not found.; ```; Should be reasonably easy to fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12154#issuecomment-1666908179:68,interface,interface,68,https://root.cern,https://github.com/root-project/root/pull/12154#issuecomment-1666908179,1,['interface'],['interface']
Integrability,Whether an external package is an option depends on significance :-) What does O2 do with this on Linux?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13146#issuecomment-1669585082:41,depend,depends,41,https://root.cern,https://github.com/root-project/root/pull/13146#issuecomment-1669585082,1,['depend'],['depends']
Integrability,Which version of gcc 'starts' having this message?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10500#issuecomment-1114263718:42,message,message,42,https://root.cern,https://github.com/root-project/root/pull/10500#issuecomment-1114263718,1,['message'],['message']
Integrability,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message.; 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests.; 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well.; 5. Commit 5 is again a minor refactoring to reduce some duplicated code.; 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion.; 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format.; 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15797#issuecomment-2183530657:166,message,message,166,https://root.cern,https://github.com/root-project/root/pull/15797#issuecomment-2183530657,2,['message'],['message']
Integrability,"While working on this issue, I noticed that also `RooHistPdf` is also not bug free. Here is what you can do to get strange results with it:; ```C++; // g++ $(root-config --cflags) -o testHistPdf testHistPdf.cc $(root-config --libs) -lRooFitCore -lRooFit -g. #include ""RooRealVar.h""; #include ""RooHistPdf.h""; #include ""RooDataHist.h""; #include ""TH2D.h""; #include ""TF2.h"". using namespace RooFit;. int main(int argc, char const *argv[]) {. RooRealVar x(""x"",""x"",0, 10);; RooRealVar y(""y"",""y"",0.05);; TH2D h2(""h2"",""h2"",20,0,10, 30, 0, 10);; TF2 f2(""f2"",""y < 0.1"");; h2.FillRandom(""f2"",1000);. RooArgSet argSet{x, y};. RooDataHist dh(""dh"",""dh"",argSet,&h2);; RooHistPdf phf(""phf"","""",argSet,dh);; x.setRange(""R1"",0,5);; y.setRange(""R1"",0,10);; auto int1 = phf.createIntegral(argSet,argSet);; std::cout << int1->getVal() << std::endl;; auto int2 = phf.createIntegral(argSet,argSet, ""R1"");; std::cout << int2->getVal() << std::endl;. auto int3 = phf.createIntegral(x,x);; std::cout << int3->getVal() << std::endl;; auto int4 = phf.createIntegral(x,x,""R1"");; std::cout << int4->getVal() << std::endl;. return 0;; }; ```; Obviously the integral of a constant function if you only take half of the x range should be half of the value you get for the full range, even if there is an additional variable in the slice set. However, this is what the program above outputs in ROOT master:; ```; 1; 0.493; 1; 0.164333; ```. The first 3 integrals are correct, but the final one (custom range for x and slice of y) gives the wrong result (0.493 expected). I thought about how the integration should be done correctly for all of the `RooHistPdf`, `RooHistFunc` and `RooParamHistFunc` family. Some updates to the code to fix all the issues can be found in PR https://github.com/root-project/root/pull/7271.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7182#issuecomment-783663166:1560,integrat,integration,1560,https://root.cern,https://github.com/root-project/root/issues/7182#issuecomment-783663166,1,['integrat'],['integration']
Integrability,"Why add a patch file? We can easily check what changes have been made to Cppyy with git.; Removing the preprocessor macro will probably not please Wim, since that turns an optional into a hard dependency on ROOT. Other than that, the changes look OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3455#issuecomment-469676935:193,depend,dependency,193,https://root.cern,https://github.com/root-project/root/pull/3455#issuecomment-469676935,1,['depend'],['dependency']
Integrability,Why don't you join us at https://mattermost.web.cern.ch/root/channels/root-io to discuss - that seems more interactive than this GH issue :-) Let me know if this doesn't work for you and I'll create a new issue where we can discuss this new interface. Thanks for your flexibility!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13958#issuecomment-1783010054:241,interface,interface,241,https://root.cern,https://github.com/root-project/root/issues/13958#issuecomment-1783010054,1,['interface'],['interface']
Integrability,Why for a small tessellated geometry the message appears . Tile degenerated 2: Length of sides of facet are too small. ![Carbonfiber_ring](https://github.com/root-project/root/assets/62834588/136f5857-781f-44c1-a6c5-9ce2398b61e9),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14283#issuecomment-1908537343:41,message,message,41,https://root.cern,https://github.com/root-project/root/issues/14283#issuecomment-1908537343,1,['message'],['message']
Integrability,Why is it not possible to just use the targets for each binary directly? Is there an example where roottest fails due to a dependency problem in a parallel build?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3279#issuecomment-455445517:123,depend,dependency,123,https://root.cern,https://github.com/root-project/root/pull/3279#issuecomment-455445517,1,['depend'],['dependency']
Integrability,Windows is not happy with the new test. I'm not sure how windows handles errors/warnings. Here's how the warning message looks now:; ![image](https://github.com/root-project/root/assets/29475282/2ddaff21-56d4-410e-95ef-852d02ba4d76),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645#issuecomment-1956072860:113,message,message,113,https://root.cern,https://github.com/root-project/root/pull/14645#issuecomment-1956072860,1,['message'],['message']
Integrability,"With the following changes; ```; diff --git a/bindings/pyroot/pythonizations/python/ROOT/__init__.py b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; index 52d23a6fc3..790432eb3d 100644; --- a/bindings/pyroot/pythonizations/python/ROOT/__init__.py; +++ b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; @@ -79,6 +79,7 @@ def cleanup():; # Hard teardown: run part of the gROOT shutdown sequence.; # Running it here ensures that it is done before any ROOT libraries; # are off-loaded, with unspecified order of static object destruction.; + print(""Calling EndOfProcessCleanups from __init__.py""); backend.gROOT.EndOfProcessCleanups(); ; atexit.register(cleanup); diff --git a/core/base/src/TApplication.cxx b/core/base/src/TApplication.cxx; index 8bdaa03f8d..9a02160611 100644; --- a/core/base/src/TApplication.cxx; +++ b/core/base/src/TApplication.cxx; @@ -86,6 +86,7 @@ static void CallEndOfProcessCleanups(); // set gROOT in its end-of-life mode which prevents executing code, like; // autoloading libraries (!) that is pointless ...; if (gROOT) {; + std::cout << ""Calling EndOfProcessCleanups from TApplication\n"";; gROOT->SetBit(kInvalidObject);; gROOT->EndOfProcessCleanups();; }; ```. I get this; ```; $: python -c ""import ROOT""; Calling EndOfProcessCleanups from __init__.py; $: python -c ""import ROOT; ROOT.TH1F""; Calling EndOfProcessCleanups from __init__.py; Calling EndOfProcessCleanups from TApplication; ```. i.e. it looks to me that as long as anything is done in the PyROOT application other than simply importing the module, the second cleanup routine is called at the end of the process (after the Python one). Either one of these should probably not be called",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10743#issuecomment-1154462514:1576,rout,routine,1576,https://root.cern,https://github.com/root-project/root/issues/10743#issuecomment-1154462514,2,['rout'],['routine']
Integrability,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:; ```c; #include <stdio.h>. int main() {; printf(""Hello from JIT\n"");; }; ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR.; > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7419#issuecomment-799389082:1081,message,message,1081,https://root.cern,https://github.com/root-project/root/pull/7419#issuecomment-799389082,2,['message'],['message']
Integrability,"Without some of the over-ridding behavior, there would be no (easy) way to disable optimization.The old behavior was:; ```; +g -> -g (and default compiler optimization); +O -> -O3 (or more exactly the optimization level select at ROOT configuration time); +gO -> -g (and default compiler optimization); + -> -g or -O3 depending on whether ROOT was build in debug mode ... except that this is broken since the move to CMake :( so actually always -O3; ```; The new behavior could be:; ```; +g -> -g (and default compiler optimization); +O -> -O3 (or more exactly the optimization level select at ROOT configuration time); +gO -> -g -O3 ; + -> -g or -O3 depending on whether ROOT was build in debug mode ... except that this is broken since the move to CMake :( so actually always -O3; ```; So this can be fine as we **MUST** have a way to completely disable optimization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7377#issuecomment-791810191:318,depend,depending,318,https://root.cern,https://github.com/root-project/root/issues/7377#issuecomment-791810191,2,['depend'],['depending']
Integrability,Working on the tdatasource in parallel here (https://github.com/dpiparo/tdatasource). The interface designed for it seems to do the job well. Still some issues in reading root files - working on them!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/983#issuecomment-329363683:90,interface,interface,90,https://root.cern,https://github.com/root-project/root/pull/983#issuecomment-329363683,1,['interface'],['interface']
Integrability,"Wouldn't it be easier to just remove the pymva part? I think an explicit library load in a tutorial is a little bit weird, from the users perspective. It does not convey the message of a clean tutorial for a stable feature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5559#issuecomment-625078965:174,message,message,174,https://root.cern,https://github.com/root-project/root/pull/5559#issuecomment-625078965,1,['message'],['message']
Integrability,"Wouldn't mind a more explicit commit message, but looks ok if it fixes the cxxmodules failing tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1682#issuecomment-369269924:37,message,message,37,https://root.cern,https://github.com/root-project/root/pull/1682#issuecomment-369269924,1,['message'],['message']
Integrability,"Wow, love this!. Random unsolicited feedback: ROOT convention for commit messages is to use the imperative mood and start with a capital letter ([we are not alone](https://chris.beams.io/posts/git-commit/)), and it might be useful to split the changes in different commits per repo subdirectories (tree, roofit, hist, math...) in case parts of this need to be reverted later for whatever reason.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-656194773:73,message,messages,73,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-656194773,2,['message'],['messages']
Integrability,"Wow, thanks for proving that this is possible!. I'm not a big fan of adding complexity that's mostly without effect for users: we had only one (1) complaint on this, ever, and that function is heavy stuff where I'm not sure whether all shells that currently support `thisroot.sh` will continue to be happy. Say ksh, zsh, etc... . Maybe an error message if `BASH_...` isn't available would be enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10332#issuecomment-1089164416:345,message,message,345,https://root.cern,https://github.com/root-project/root/pull/10332#issuecomment-1089164416,1,['message'],['message']
Integrability,"Writer.cpp	2023-01-10 11:34:45.644464781 -0600; @@ -105,6 +105,7 @@; #include <algorithm>; #include <cassert>; #include <cstdint>; +#include <cstdio>; #include <cstdlib>; #include <cstring>; #include <ctime>; @@ -2498,6 +2499,8 @@; // did not result in us loading a module file for that submodule. For; // instance, a cross-top-level-module 'conflict' declaration will hit this.; unsigned ID = getLocalOrImportedSubmoduleID(Mod);; + fprintf(stderr, ""Mod=%X\n"", Mod);; + fprintf(stderr, ""Submodule=%s\n"", Mod->Name.c_str());; assert((ID || !Mod) &&; ""asked for module ID for non-local, non-imported module"");; return ID;; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp~	2023-01-06 05:04:43.000000000 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp	2023-01-10 13:21:47.554190854 -0600; @@ -26,6 +26,8 @@; using namespace clang;; using namespace serialization;. +#include <cstdio>; +; //===----------------------------------------------------------------------===//; // Declaration serialization; //===----------------------------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));. // If this declaration injected a name into a context different from its; ```; itself causes issues with dictionary generation. Once removed, compilation succeeds. As for the libunwind issue, I believe https://bugs.llvm.org/show_bug.cgi?id=44074 is illuminative. The LLVM/Clang in use in the Linux Docker container is configured to use `libc++`, `libc++abi`, `compiler-rt` and `libunwind`. It has the fix for the above-mentioned bug; however it appears that the LLVM/Clang 13 incorporated with ROOT at this time does not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1409129986:2061,inject,injected,2061,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1409129986,1,['inject'],['injected']
Integrability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. $ clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/stognini -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -internal-isystem /Library",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:6320,contract,contract,6320,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,2,['contract'],['contract']
Integrability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. + clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/Comm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:6658,contract,contract,6658,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,2,['contract'],['contract']
Integrability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. + clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.module -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:6632,contract,contract,6632,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,2,['contract'],['contract']
Integrability,"X10.14.sdk/usr/include/machine/_types.h:34:2: error: architecture not supported ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_types.h:55:9: error: unknown type name '__int64_t'; did you mean '__int128_t'? ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_types.h:56:9: error: unknown type name '__int32_t'; did you mean '__int128_t'? ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_types.h:57:9: error: unknown type name '__int32_t'; did you mean '__int128_t'? ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_types.h:60:9: error: unknown type name '__uint32_t'; did you mean '__uint128_t'? ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_types.h:61:9: error: unknown type name '__uint32_t'; did you mean '__uint128_t'? . And 230 more. ### Warnings:; - CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:277 (MESSAGE): ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnings] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/cdefs.h:81:2: warning: ""Unsupported compiler detected"" [-W#warnin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4201#issuecomment-521161432:1503,MESSAGE,MESSAGE,1503,https://root.cern,https://github.com/root-project/root/pull/4201#issuecomment-521161432,1,['MESSAGE'],['MESSAGE']
Integrability,"Yay, thanks for your help Sergey!. I put `TGLSdfFontMaker` in RGL as it requires off-screen GL context to render the SDF font texture. RGL already depends on libASImage ... TGLViewer::SaveAs() calls it directly to store screenshots into png/jpg files. Alja and I have checked it on mac and it works ok. There was an interesting side-story where libRGL got linked against /usr/X11R6/lib/libGL.so (presumably from an old install of XQuartz and libX11 stuff from homebrew -- it worked after we wiped both of those) instead of Apple's OpenGL framework. . I still want to test this on Windows, then I'll rebase and force-push so there's a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2252641668:147,depend,depends,147,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2252641668,1,['depend'],['depends']
Integrability,"Yeah, it'll be nice to have something like gInterpreter->Print(const char*) which already returns a string. It'll be a wrapper function of Evaluate and ToTypeAndValueString in TCling. What do you think @Axel-Naumann and @vgvassilev ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2644#issuecomment-422843414:119,wrap,wrapper,119,https://root.cern,https://github.com/root-project/root/pull/2644#issuecomment-422843414,1,['wrap'],['wrapper']
Integrability,"Yeah, they probably do some quirky simd stuff in there :). I realized yesterday that the stuff for creation of sdf textures always puts them in $ROOTSYS/ui5/eve7/ ... which will not be writable for experiment-wide / cvmfs installs. Would it be possible to do something like this:; 1. if $ROOTSYS/ is not writable, write to ./fonts/;; 2. forward requests for files in $ROOTSYS/ui5/eve7/ to some REveManager function that can then check where these fonts are actually available and route the GET to the proper local file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2172404599:480,rout,route,480,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2172404599,1,['rout'],['route']
Integrability,"Yes @vgvassilev, it is. The three tests that failed are also failing in our integration builds. See https://github.com/cms-sw/cmssw/pull/41964 (`DataFormatsScouting` are actually obsolete tests) and https://github.com/cms-sw/cmssw/issues/42206",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13181#issuecomment-1624870413:76,integrat,integration,76,https://root.cern,https://github.com/root-project/root/pull/13181#issuecomment-1624870413,1,['integrat'],['integration']
Integrability,"Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message.; > ; > ```; > Processing temp.h... ; > In file included from input_line_8:1: ; > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: ; > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' ; > static const CLID CLID_ProtoParticle = 803; ; > ^ ; > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here ; > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" ; > ^ ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple ; > times, additional include site here ; > #include ""Event/ProtoParticle.h"" ; > ^ ; > ...; > ...SKIPPED LINES; > ...; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' ; > class ProtoParticle final : public KeyedObject<int> { ; > ^ ; > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2161206521:310,message,message,310,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2161206521,1,['message'],['message']
Integrability,Yes but to suppress the canvas geometry warning I need to set at least `ROOT::Experimental::RLogManager::Get().SetVerbosity(ROOT::Experimental::ELogLevel::kError);` so everyother warning issued is also suppressed not only the `Hide canvas while geometry too small`. ; That's why I was rasing the question if the warning level for the `Hide canvas while geometry too small` message is optimal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14300#issuecomment-1878999055:373,message,message,373,https://root.cern,https://github.com/root-project/root/issues/14300#issuecomment-1878999055,1,['message'],['message']
Integrability,"Yes it preserve the case if I add the line ; ```; 	set(DOXYGEN_CASE_SENSE_NAMES YES) # default value is system dependent, so need to set this !. ```; in `CMakeLists.txt` but now I have a other weird error:; ```; Processing libs.C+(""BinomialNeymanInterval"",)... Processing libs.C+(""FeldmanCousinsBinomialInterval"",)... Processing libs.C+(""DifferentDimension"",)... Processing libs.C+(""DifferentAxisLimits"",)... Processing libs.C+(""DifferentBinLimits"",)...; Processing libs.C+(""DifferentNumberOfBins"",)... Processing libs.C+(""BinomialProbHelper"",)... Processing libs.C+(""DifferentLabels"",)...; input_line_11:2:28: error: expected expression; input_line_11:2:28: error: expected expression; libs(""DifferentDimension"",) libs(""DifferentBinLimits"",). ^ ^. input_line_11:2:29: error: expected expression; libs(""DifferentAxisLimits"",); ^; input_line_11:2:40: error: expected expression; libs(""FeldmanCousinsBinomialInterval"",); input_line_11 ^:; 2:25: error: expected expression; libs(""DifferentLabels"",); ^; input_line_11:2:31: error: expected expression; libs(""DifferentNumberOfBins"",); ^; ```; It seems the 2nd parameter in calling libs.C is meeting. Let me download again the full PR from scars. I may have done some unwanted mods.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1081535976:111,depend,dependent,111,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081535976,1,['depend'],['dependent']
Integrability,"Yes yes I see the point for the first toy, but for the others I just didn't understand it. Anyhow I'm convinced that there is a problem, and just to record my progress for today, here is a standalone reproducer that doesn't depend on Marcs workspace:. ```c++; #include <RooGenContext.h>; #include <RooRealVar.h>; #include <RooExponential.h>; #include <RooUniform.h>; #include <RooMsgService.h>. #include <TFile.h>; #include <TSystem.h>. #include <iostream>. void repro(); {; using namespace RooFit;. ProcInfo_t procinfo;; const float toMB = 1.f / 1024.f;. RooRealVar x{""x"", ""x"", 0.1, 5.1};; RooRealVar c{""c"", ""c"", -1.8, -5, 5};. RooExponential expo{""expo"", ""expo"", x, c};; RooAbsPdf *pdf = &expo;. // With the uniform distribution, there is no leak!; // RooUniform uni{""uni"", ""uni"", x};; // RooAbsPdf * pdf = &uni;. std::size_t nToys = 5000;. for (std::size_t index_toy = 1; index_toy <= nToys; index_toy++) {. if (index_toy % 500 == 0) {; gSystem->GetProcInfo(&procinfo);; std::cout << index_toy << "": "" << procinfo.fMemResident * toMB << "" "" << procinfo.fMemVirtual * toMB; << std::endl;; }. if (index_toy == nToys) {; RooMsgService::instance().addStream(DEBUG, Topic(Generation));; }. RooGenContext{*pdf, x};; }; }; ```. The output:. ```; 500: 209.504 345.379; 1000: 209.762 345.77; 1500: 209.762 345.77; 2000: 210.535 346.551; 2500: 210.535 346.551; 3000: 210.535 346.551; 3500: 210.535 346.551; 4000: 212.082 348.117; 4500: 212.082 348.117; 5000: 212.082 348.117; [#3] INFO:Generation -- RooGenContext::ctor() setting up event generator context for p.d.f. expo for generation of observable(s) (x); [#3] DEBUG:Generation -- RooGenContext::ctor() observables (x) are safe for internal generator (if supported by p.d.f); [#3] DEBUG:Generation -- RooGenContext::ctor() Model indicates that it can internally generate observables () with configuration identifier 0; [#3] INFO:Generation -- RooGenContext::ctor() Context will generate variables (x) with accept/reject sampling; [#3] INFO:Generation -- ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8984#issuecomment-1396133152:224,depend,depend,224,https://root.cern,https://github.com/root-project/root/issues/8984#issuecomment-1396133152,1,['depend'],['depend']
Integrability,"Yes, I agree. I need to check layout settings that labels are not truncated and not wrapped.; Will be done with next PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11548#issuecomment-1276185930:84,wrap,wrapped,84,https://root.cern,https://github.com/root-project/root/pull/11548#issuecomment-1276185930,1,['wrap'],['wrapped']
Integrability,"Yes, I made the package after this bug was created. Not sure what causes trouble in WSL, could be just some dependency missing, but better have someone confirm this. Could also be due to changes in how pcms are searched, I'm not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901#issuecomment-1353151648:108,depend,dependency,108,https://root.cern,https://github.com/root-project/root/issues/11901#issuecomment-1353151648,1,['depend'],['dependency']
Integrability,"Yes, better than the ""That should fix a recent nightly failure with gcc11"" that Philippe commented on, thanks for improving it!. Compared to just including the actual diagnostic (something Philippe and I generally try to do these days, something that has proven super helpful several times), your current log:; ```; That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context.; ```. does not call out; - that it's during dictionary generation; - that the modulemap requires the module feature 'cplusplus20' (your log seems to suggest that the error surfaces when compiled in C++20 mode, while this error shows up when compiling in C++14 or 17); - that the issue is also with GCC12 headers (your message seems to suggest that it's only with GCC11 headers); - the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`. In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?). But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1429251757:753,message,message,753,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1429251757,2,['message'],['message']
Integrability,"Yes, it addresses the failures uncovered by the added messages ... However there is still a category of case (ellided node in the hierarchy of branches) that trigger the message (because the branch those proxy might correspond to really does not exist).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3770#issuecomment-489635960:54,message,messages,54,https://root.cern,https://github.com/root-project/root/pull/3770#issuecomment-489635960,2,['message'],"['message', 'messages']"
Integrability,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Instead we should either; * fail to configure if BLAS is missing; or ; * disable the components that require BLAS when configuring whe BLAS is missing; or; * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16720#issuecomment-2425048725:295,interface,interface,295,https://root.cern,https://github.com/root-project/root/issues/16720#issuecomment-2425048725,4,['interface'],['interface']
Integrability,"Yes, it is just cosmetics and does not help in dependency of `ExternalProject_Add(AFTERIMAGE ...)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16130#issuecomment-2255402823:47,depend,dependency,47,https://root.cern,https://github.com/root-project/root/pull/16130#issuecomment-2255402823,1,['depend'],['dependency']
Integrability,"Yes, that should be fine. These backports don't add new features in the user interface, but extend the support of existing features like the GPU backend to additional RooFit classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12733#issuecomment-1568136195:77,interface,interface,77,https://root.cern,https://github.com/root-project/root/pull/12733#issuecomment-1568136195,1,['interface'],['interface']
Integrability,"Yes, the error messages are now emitted directly in cmakes `find_package()` as we require the components explicitly.; For example:; ```txt; CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:233 (message):; Could NOT find X11 (missing: Xext); Call Stack (most recent call first):; /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:603 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake/Modules/FindX11.cmake:676 (find_package_handle_standard_args); CMakeLists.txt:5 (find_package); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16008#issuecomment-2220252508:15,message,messages,15,https://root.cern,https://github.com/root-project/root/pull/16008#issuecomment-2220252508,2,['message'],"['message', 'messages']"
Integrability,"Yes, this happened because I was trying to compile on an officially unsupported system. The function `GetExePath()` is not implemented and returns an empty string. It the new commit, an error message is printed in `SetRootSys()` in case of unknown executable path, and the missing implementation of `GetExePath()` is added. The program `rootcling_stage1` now determines its `ROOTSYS` (build directory) successfully as confirmed by printing `rootsys` in `GetIncludeDir()`, although it then still fails reporting circular dependencies in the headers, but it is a separate issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10776#issuecomment-1158620926:192,message,message,192,https://root.cern,https://github.com/root-project/root/pull/10776#issuecomment-1158620926,2,"['depend', 'message']","['dependencies', 'message']"
Integrability,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14553#issuecomment-1945596698:25,depend,dependencies,25,https://root.cern,https://github.com/root-project/root/issues/14553#issuecomment-1945596698,1,['depend'],['dependencies']
Integrability,"Yes, this worked in the old PyROOT. As far as I understand, this worked because there was no `Dispatcher` wrapper class in between the Python class and the C++ base class. Therefore, the proxied C++ object was a base class object, not a `Dispatcher` object, and the invocation of the base class `MyMethod` on that object worked with a code equivalent to the one in my C++ reproducer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6637#issuecomment-713472152:106,wrap,wrapper,106,https://root.cern,https://github.com/root-project/root/issues/6637#issuecomment-713472152,1,['wrap'],['wrapper']
Integrability,"Yes, those 2 interface are accessible/similar in python.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9339#issuecomment-981144492:13,interface,interface,13,https://root.cern,https://github.com/root-project/root/issues/9339#issuecomment-981144492,1,['interface'],['interface']
Integrability,"Yes, you are right. PR https://github.com/root-project/root/pull/12798 also addressing library dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12766#issuecomment-1542179753:95,depend,dependency,95,https://root.cern,https://github.com/root-project/root/issues/12766#issuecomment-1542179753,1,['depend'],['dependency']
Integrability,"Yes, you understood this right. Do you think this is a problem? It is not a new behavior in the context of ROOT math: for example the [GradFunctor](https://root.cern.ch/doc/master/classROOT_1_1Math_1_1GradFunctor.html#af7c06950b37bea8844b81f53b0bf41df) does the same, only that it takes the object by pointer and not by reference. In practice `RooAbsMinimizer`, always lives as long as the RooMinimizer that wraps the `ROOT::Math::Minimizer`, so I don't think this is a problem. Or is there something that I forgot to consider?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12348#issuecomment-1439814166:408,wrap,wraps,408,https://root.cern,https://github.com/root-project/root/pull/12348#issuecomment-1439814166,1,['wrap'],['wraps']
Integrability,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes.; ```; $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR; CMAKE_INCLUDE_CURRENT_DIR; -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds; ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``; to the include path for each directory. These additional include; directories do not propagate down to subdirectories. This is useful; mainly for out-of-source builds, where files generated into the build; tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856752467:37,depend,dependency,37,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856752467,2,"['depend', 'inject']","['dependency', 'injected']"
Integrability,"You are correct about the validity of the C++ code.; However, ROOT accepts the code without complaint.; That actually is the issue. As for the ROOT version, analysis of the STAR data at Brookhaven National Lab is mature and sort of locked into this older ROOT version. Surely EIC will update to a better code base and provide an integrated development environment. Alas, progress is slow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12840#issuecomment-1555278707:329,integrat,integrated,329,https://root.cern,https://github.com/root-project/root/issues/12840#issuecomment-1555278707,1,['integrat'],['integrated']
Integrability,"You are right! I was not taking care about the new interface being backwards compatible, because these constructors are considered as RooFit internal. But of course it doesn't hurt to make them backwards compatible either :). I opened a PR to do that: https://github.com/root-project/root/pull/8986",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8976#issuecomment-918461257:51,interface,interface,51,https://root.cern,https://github.com/root-project/root/issues/8976#issuecomment-918461257,1,['interface'],['interface']
Integrability,"You can attribute things without putting the name on the first line. I don't like my name being put like that, so please don't do it again. Let me write the commit, or put my name after the second line of the commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3866#issuecomment-496153933:216,message,message,216,https://root.cern,https://github.com/root-project/root/pull/3866#issuecomment-496153933,1,['message'],['message']
Integrability,"You can reproduce it on a free online Ubuntu 20 browser-box:. - Go to https://www.onworks.net/os-distributions/ubuntu-based; - Select Ubuntu 20, Start; - Open a WebBrowser within it, google ""cern ROOT install"".; - Copy the line of the ""required dependencies""; - Open a Terminal; - sudo apt update; - Paste the line of the required dependencies to install missing packages; - Go back to web browser; - Copy link to download binary release; - Back to terminal, paste it there; - tar -xzvf ...; - source root/bin/thisroot.sh; - Back to browser, search ""cern root github"", go to Issues; - Download the reproducer of this issue; - unzip; - root -l test_zoom.cpp; - Then zoom. I did the process and it's the case the artifact is there on such a fresh independent install.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1026925002:245,depend,dependencies,245,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026925002,2,['depend'],['dependencies']
Integrability,"You can set different debugging levels for `RLogManager`. See enum in `ROOT/RLogger.hxx`:. ```; enum class ELogLevel : unsigned char {; kUnset,; kFatal, ///< An error which causes further processing to be unreliable; kError, ///< An error; kWarning, ///< Warnings about likely unexpected behavior; kInfo, ///< Informational messages; used for instance for tracing; kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug.; };; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14300#issuecomment-1878429143:324,message,messages,324,https://root.cern,https://github.com/root-project/root/issues/14300#issuecomment-1878429143,1,['message'],['messages']
Integrability,You can try `root --web=server:7788`. . Then try to create canvas - message should appear with URL which can be copied in the web browser. Do not use `-a` flag - it still requires normal X11.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15723#issuecomment-2146767398:68,message,message,68,https://root.cern,https://github.com/root-project/root/issues/15723#issuecomment-2146767398,1,['message'],['message']
Integrability,"You need to load the library that implement those classes (`TRootLHEFEvent`, `TRootWeight`, etc..). However, a lot of operations (eg. using `TTree::Draw` or `RDataFrame`) might still work on this file. So depending on what you need to do with the data in the file those warning may be important or not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9123#issuecomment-944452685:205,depend,depending,205,https://root.cern,https://github.com/root-project/root/issues/9123#issuecomment-944452685,1,['depend'],['depending']
Integrability,"You option 1 is more or less what we used to do, and it doesn't work when Vdt is builtin, because `INTERFACE_INCLUDE_DIRECTORIES` will be inside the build directory. Your option 2 will likely not work with static external Vdt because of `${CMAKE_STATIC_LIBRARY_PREFIX}vdt${CMAKE_SHARED_LIBRARY_SUFFIX}` used in the install interface. I agree with you, however, if your option one can be made to work correctly when Vdt is external/builtin and the several versions of CMake we support, then that would be my preferred option too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797#issuecomment-1339063610:323,interface,interface,323,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339063610,1,['interface'],['interface']
Integrability,"You probably guessed it already - but the issue is that derived classes use `TFile`'s public constructors, too, and so while the purpose of derived classes is to handle remote protocols, `TFile`'s constructors will nonetheless be called with such a ""filename"". Yes - that's not super well designed (we should have had a common base class, and TFile should be an incarnation of those, not be the common base itself), but we cannot change that at this point. As this is in the ctor you cannot even check ""am I really a `TFile` or a derived class?` because the object's vtable isn't populated enough yet, and thus a runtime-type-info ""who are you?"" will just say ""`TFile`!"" even for derived classes. We would have to introduce protected ctors instead, and change all derived classes to use those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11063#issuecomment-1198440268:176,protocol,protocols,176,https://root.cern,https://github.com/root-project/root/pull/11063#issuecomment-1198440268,1,['protocol'],['protocols']
Integrability,You probably want to collect all transitive dependencies like the way we do here:. https://github.com/root-project/root/blob/2a6bdc7029881ff2d2a90e65ebbcb3017e50a613/interpreter/CMakeLists.txt#L535-L566. Everything that starts with `libLLVM` or `libclang` can be filtered out in the `--exclude-libs` flags..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14778#issuecomment-1974886663:44,depend,dependencies,44,https://root.cern,https://github.com/root-project/root/issues/14778#issuecomment-1974886663,1,['depend'],['dependencies']
Integrability,"You said here a clever thing, indeed, the issue could be that in the unpickling ROOT is not properly imported and therefore we have a nullptr for `TROOT`. A good starting point could be figuring out the contracts of pickle how (or whether) the modules are imported if objects are unpickled. I think there could be similar issues with Python modules using native code and that way we could get an idea what is going on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6765#issuecomment-723846133:203,contract,contracts,203,https://root.cern,https://github.com/root-project/root/issues/6765#issuecomment-723846133,1,['contract'],['contracts']
Integrability,"You think it's good to go like this? It does not have yet all dependencies, e.g., the ones for TMVA experimental are missing. Though we should could have with this a first run through the nightlies and fix failures in our infrastructure (missing packages, version mismatches, ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654852533:62,depend,dependencies,62,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654852533,1,['depend'],['dependencies']
Integrability,"[RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12630#issuecomment-1498932509:1837,interface,interface,1837,https://root.cern,https://github.com/root-project/root/pull/12630#issuecomment-1498932509,1,['interface'],['interface']
Integrability,[core/foundation/inc/ROOT/span.hxx](https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx) should never be used in the same build as the official span. It is literally meants to be a bridge from older C++ standard (where it is not available) to the newer standard (where it is available). . Which standard did you build ROOT with? Which standard did you build your code with?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042#issuecomment-1595244329:212,bridg,bridge,212,https://root.cern,https://github.com/root-project/root/issues/13042#issuecomment-1595244329,1,['bridg'],['bridge']
Integrability,"\14.23.28105\include\xutility(132,48): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXInstrInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2021-05-04T11:23:49.988Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/TrailingObjects.h(224,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCXX.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2021-05-04T11:23:49.988Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree(715,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\InterfaceStubFunctionsConsumer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-05-04T11:23:49.988Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility(122,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGAtomic.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2021-05-04T11:23:49.989Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector(1706,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\Precompi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8036#issuecomment-831868860:2627,Interface,InterfaceStubFunctionsConsumer,2627,https://root.cern,https://github.com/root-project/root/pull/8036#issuecomment-831868860,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,"\utils\TableGen\obj.llvm-tblgen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(60,45): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LLVMDebugInfoMSF.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(70,46): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LLVMDebugInfoMSF.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(77,49): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LLVMDebugInfoMSF.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(60,45): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\utils\TableGen\AsmWriterEmitter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.vcxproj] . And 773 more. ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:36 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:130 (message):",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547096756:4313,message,message,4313,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547096756,3,['message'],['message']
Integrability,"] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:137:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:155:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:170:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:183:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621890214:3204,interface,interfaces,3204,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621890214,3,['interface'],['interfaces']
Integrability,"_data_name` optional; b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs; f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting; 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication; a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF] Exclude RooHistError from IO; [RF] Remove `add(row, weight, weightErr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12620#issuecomment-1497698813:2396,depend,dependency,2396,https://root.cern,https://github.com/root-project/root/pull/12620#issuecomment-1497698813,1,['depend'],['dependency']
Integrability,_data_name` optional; b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs; f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting; 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication; a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12618#issuecomment-1497317057:1501,depend,dependency,1501,https://root.cern,https://github.com/root-project/root/pull/12618#issuecomment-1497317057,2,['depend'],['dependency']
Integrability,"_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633; 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637; 17: call_init.part.0 in ./elf/./elf/dl-init.c:70; 18: call_init in ./elf/./elf/dl-init.c:33; 19: _dl_init in ./elf/./elf/dl-init.c:117; 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182; 21: dl_open_worker in ./elf/./elf/dl-open.c:808; 22: dl_open_worker in ./elf/./elf/dl-open.c:771; 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 24: _dl_open in ./elf/./elf/dl-open.c:883; 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56; 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227; Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s); in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73; 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51; 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90; 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025; 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111; 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214; 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722; 10: TCling::LoadPCM(std::__cxx11::basic_string<char, st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:23558,depend,depends,23558,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['depend'],['depends']
Integrability,"_nightly_pipeline/instal; l/dev3/oracle/19.11.0.0.0/x86_64-centos7-gcc9-dbg/lib/libclntsh.so;/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/oracle/19.11.0.0.0/x86_64-centos7-gcc9-dbg/lib/libnnz19.so; -- Looking for SQLite; -- Found Sqlite: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/sqlite/3320300/x86_64-centos7-gcc9-dbg/include; -- Looking for FFTW3; -- Found fftw3 includes at /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/fftw3/3.3.8/x86_64-centos7-gcc9-dbg/include; -- Found fftw3 library at /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/fftw3/3.3.8/x86_64-centos7-gcc9-dbg/lib/libfftw3.so; -- Looking for CFITSIO; -- Found CFITSIO: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/cfitsio/3.48/x86_64-centos7-gcc9-dbg/lib/libcfitsio.so (found version ""3.48""); -- Looking for XROOTD; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- libXrdClient not found: use built-in; -- include_dirs: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/include/xrootd;/build/jenkins/workspace/lcg_nightly_pipeline; /build/projects/ROOT-HEAD/src/ROOT/HEAD/proof/xrdinc; -- libraries: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/lib64/libXrdUtils.so;/build/jenkins/workspace/lcg_nightly_pipel; ine/install/dev3/xrootd/5.3.1/x86_64-centos7-gcc9-dbg/lib64/libXrdCl.so; -- Found GFAL: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Grid/gfal/1.13.0-0/x86_64-centos7-gcc9-dbg/include/.; -- Found DCAP: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Grid/dcap/2.47.7-1/x86_64-centos7-gcc9-dbg/include; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.7.6; -- Looking for TBB; -- Found TBB: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/tbb/2020_U2/x86_64-centos7-gcc9-dbg (found suitable version ""2020.2"", minimum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:10253,wrap,wrapper,10253,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,1,['wrap'],['wrapper']
Integrability,"_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x4845FC0: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307); ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:15769,depend,depends,15769,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,`${includedirs}` has more entries. ; It extract includes from `DEPENDENCIES` plus initial values in lines 372..379,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5172#issuecomment-600517523:63,DEPEND,DEPENDENCIES,63,https://root.cern,https://github.com/root-project/root/pull/5172#issuecomment-600517523,1,['DEPEND'],['DEPENDENCIES']
Integrability,"`-Dtmva-sofie=Off` switch off the sofie parser library that depends on protobuf. There is no reason to remove the sofie library, that is a small one, so this is enabled always by default. If you really want to switch off sofie, you can do this by doing `-Dtmva=Off`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13055#issuecomment-1612676338:60,depend,depends,60,https://root.cern,https://github.com/root-project/root/issues/13055#issuecomment-1612676338,1,['depend'],['depends']
Integrability,"`/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -D__ACLIC__ ""/Users/chenxu/tmp/./aa1.cpp"" `; no errors. I found these two files; 1. `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h`; 2. `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`; are difference.; so the error message should be caused by `/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h`; and my code should use the first one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418#issuecomment-860955112:513,message,message,513,https://root.cern,https://github.com/root-project/root/issues/8418#issuecomment-860955112,1,['message'],['message']
Integrability,"`; root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};; root [1] foo.GetName(); ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'?; foo.GetName(); ^; ->; root [2] foo->GetName(); (const char *) ""foo.root""; ```. while the example here doesn't:; ```; root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'?; ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ^; ->; root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(); IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&); Maybe you need to load the corresponding shared library?; root [2] ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-2082071082:984,interface,interface,984,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-2082071082,3,['interface'],['interface']
Integrability,"`DistancetoPrimitive` is the base method to be overridden by visual primitives attached to the pad. In `geom` we attach several different objects. Among these, shapes implement this function directly, while for volumes there is some traversal logic in the geometry painter, dispatching eventually to the shapes methods. Composite Boolean shapes are special and need an extra internal specialized dispatching for union, intersection, and subtraction. The intention was to do this dispatching by avoiding the TObject interface (Boolean nodes are never added directly to the pad), and this is why the upper case `T`. However, due to the complexity, these functions are not implemented, so now they are not even connected to `TGeoCompositeShape::DistancetoPrimitive`. . Sorry for this long explanation, this is only to say there is nothing to worry about, the functions are placeholders to remember that this functionality could be added at some point. I would close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16087#issuecomment-2255333723:515,interface,interface,515,https://root.cern,https://github.com/root-project/root/issues/16087#issuecomment-2255333723,1,['interface'],['interface']
Integrability,"`Error` doesn't abort, it just prints an error message. Please communicate the error through a return value, e.g. by returning `nan`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2723#issuecomment-504644265:47,message,message,47,https://root.cern,https://github.com/root-project/root/pull/2723#issuecomment-504644265,1,['message'],['message']
Integrability,"`RMergeableValue<T>` contains the following:; ```cpp; template <typename T>; class RMergeableValue : public RMergeableValueBase {; // ...; protected:; T fValue;; // ...; const T &GetValue() const { return fValue; }; };; ```; `T` is the type of the `fValue` data member. For `RMergeableVariations<T>`, the data member `fValues` is a `std::vector<std::unique_ptr<RMergeableValue<T>>>` (due to the way we need to retrieve the various mergeables of the variations in the call chain). So it seemed quite natural to me to have a ; ```cpp; const std::vector<std::unique_ptr<RMergeableValue<T>>> &GetValue() const { return fValues; }; ```; method in this class to me (albeit I failed to mark the method itself `const`). Having a ; ```cpp; const T &GetValue(const std::string &variation) const;; ```; method is also possible. I originally thought to leave the concrete types already downcasted in the `RMergeableVariations<T>`, but I can try this route too. I'll see how it plays with the Python side",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9942#issuecomment-1062333385:938,rout,route,938,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1062333385,1,['rout'],['route']
Integrability,"`TROOT.cxx` is indeed a very fundamental file to change; it changes `libCore` which in turn causes rootcling to be possibly changed, which in turn means all dictionaries need to be regenerated, which in turn means all libraries will be relinked. So that's expected, and I am not aware of a good solution for this dependency graph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8624#issuecomment-878992877:313,depend,dependency,313,https://root.cern,https://github.com/root-project/root/issues/8624#issuecomment-878992877,1,['depend'],['dependency']
Integrability,"```; #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, ; input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false); at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840; ```. That's practically the same area as https://github.com/root-project/root/pull/14287 For some reason cppyy does not go via the offset interface...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10724#issuecomment-1925622781:404,interface,interface,404,https://root.cern,https://github.com/root-project/root/issues/10724#issuecomment-1925622781,1,['interface'],['interface']
Integrability,"```; +Warningin<TClassTable::Add>:classROOT::Detail::TTypedIter<TBaseClass>alreadyinTClassTable; +Warningin<TClassTable::Add>:classROOT::Detail::TTypedIter<TEnumConstant>alreadyinTClassTable; ```; The template ROOT::Detail::TTypedIter uses ClassDefInline and the registration of the class (i.e. the call to TClassTable::Add) is triggered by via a function static variable initialization. What these messages indicates (and we see that on Windows also) is that the ""function static variable"" are initialized multiple time. Setting a breakpoint on TClassTable::Add with the condition ```cname[0] == 'R' && cname[6] == 'D' && cname[24]=='<' && cname[32] == 'E'``` will tell you exactly when/why this happens (on Windows, multiple library have identical copies of the functions and they are not ""de-duplicated"" by the linker (i.e. both copies are brought in independently).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-702219136:399,message,messages,399,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-702219136,1,['message'],['messages']
Integrability,```; 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml; 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6388#issuecomment-696635738:149,message,message,149,https://root.cern,https://github.com/root-project/root/pull/6388#issuecomment-696635738,1,['message'],['message']
Integrability,```; 17:28:07 FAILED: DAVIX-prefix/src/DAVIX-stamp/DAVIX-configure ; 17:28:07 cd /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/build/DAVIX-prefix/src/DAVIX-build && /Applications/CMake.app/Contents/bin/cmake -P /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/build/DAVIX-prefix/src/DAVIX-stamp/DAVIX-configure-Debug.cmake && /Applications/CMake.app/Contents/bin/cmake -E touch /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/build/DAVIX-prefix/src/DAVIX-stamp/DAVIX-configure; 17:28:07 CMake Error at /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/build/DAVIX-prefix/src/DAVIX-stamp/DAVIX-configure-Debug.cmake:16 (message):; 17:28:07 Command failed: 1; 17:28:07 ; 17:28:07 '/Applications/CMake.app/Contents/bin/cmake' '-DCMAKE_INSTALL_PREFIX=/Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/build/DAVIX-prefix' '-DCMAKE_BUILD_TYPE=Debug' '-DBOOST_EXTERNAL=OFF' '-DSTATIC_LIBRARY=ON' '-DSHARED_LIBRARY=OFF' '-DENABLE_TOOLS=OFF' '-DCMAKE_C_COMPILER=/Library/Developer/CommandLineTools/usr/bin/cc' '-DCMAKE_CXX_COMPILER=/Library/Developer/CommandLineTools/usr/bin/c++' '-DCMAKE_C_FLAGS= -m64 -pipe -fsigned-char -fno-common -Qunused-arguments -pthread -Wno-format -Wno-implicit-function-declaration' '-DCMAKE_CXX_FLAGS= -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -Wshadow -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -std=c++11 -stdlib=libc++ -Wno-unused-const-variable' '-DCMAKE_OSX_SYSROOT=' '-DCMAKE_OSX_DEPLOYMENT_TARGET=' '-DLIB_SUFFIX=' '-C/Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/build/DAVIX-prefix/tmp/DAVIX-cache-Debug.cmake' '-GNinja' '/Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/build/DAVIX-prefix/src/DAVIX'; 17:28:07 ; 17:28:07 See also; 17:28:07 ; 17:28:07 /Volumes/HD2/build/jenkins/work,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1535#issuecomment-375008476:670,message,message,670,https://root.cern,https://github.com/root-project/root/pull/1535#issuecomment-375008476,1,['message'],['message']
Integrability,"```; [yuka@yuka-arch module-release]$ bin/root.exe -l -b ; root [0] ; [1]+ Stopped bin/root.exe -l -b; [yuka@yuka-arch module-release]$ lsof -p 4476| grep so | wc -l; 23. [yuka@yuka-arch module-release]$ bin/root.exe -l -b ; root [0] gMinuit; (TMinuit *) nullptr; root [1] ; [2]+ Stopped bin/root.exe -l -b; [yuka@yuka-arch module-release]$ lsof -p 4511| grep so | wc -l; 33; ```. So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:; ```; root.exe 4511 yuka mem REG 259,2 1943160 2899057 /home/yuka/module-release/lib/libMatrix.so; root.exe 4511 yuka mem REG 259,2 4695200 2899245 /home/yuka/module-release/lib/libHist.so; root.exe 4511 yuka mem REG 259,2 1631928 2899567 /home/yuka/module-release/lib/libGraf.so; ```. So we're handling dependency problem without rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394480864:462,depend,depending,462,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394480864,2,['depend'],"['dependency', 'depending']"
Integrability,"```; frame #3: 0x00007ffff7c51f80 libCore.so`TString::FormImp(this=0x0000555556b62da0, fmt=""%s"", ap=0x00007fffffffb0d0) at TString.cxx:2278:17; frame #4: 0x00007ffff7c521c1 libCore.so`TString::Format(fmt=""%s"") at TString.cxx:2341:15; frame #5: 0x00007ffff790f09b; frame #6: 0x00007fffee7207d4 libCling.so`cling::Interpreter::RunFunction(this=0x00005555555fe470, FD=0x0000555556aec418, res=0x00007fffffffb6e0) at Interpreter.cpp:1162:34; frame #7: 0x00007fffee72145d libCling.so`cling::Interpreter::EvaluateInternal(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", CO=CompilationOptions @ 0x00007fffffffb328, V=0x00007fffffffb6e0, (null)=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1414:40; frame #8: 0x00007fffee71f095 libCling.so`cling::Interpreter::process(this=0x00005555555fe470, input=""#line 1 \""ROOT_prompt_1\""\nTString::Format(\""%s\"", treename)"", V=0x00007fffffffb6e0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:840:25; ```; It seems that is the actual implementation of `TString::Format()` that is crashing. Given that the prototype is basically `TString TString::Format(const char *fmt, ...)`, it will happily swallow anything and crash later for arguments expecting a pointer that will be dereferenced. Thus, a compiled binary should exhibit the same behavior. Not sure on how to address this, though... Perhaps, extending cling nullptr deref checking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10184#issuecomment-1073877190:703,wrap,wrapPoint,703,https://root.cern,https://github.com/root-project/root/issues/10184#issuecomment-1073877190,1,['wrap'],['wrapPoint']
Integrability,"```; root -l 'openTree.C(0)' -b -q; Processing openTree.C(0)...; 7.31217e-322ºC. root -l 'openTree.C(1)' -b -q; Processing openTree.C(1)...; 20.2826ºC; ```. This is the expected result. `TBranch::SetAddress` is a lower level interface and has less ability to check for incorrect setup. Without `SetMakeClass`, if the branch is within an object (i.e. the case here), the input of `SetAddress` is expected to be the start of the object (and thus the offset of the data member is added to the provided address). The explicit purpose of `SetMakeClass` is to disable this addition of the offset. . Note that `TTree::SetBranchAddress` will detect this case and automatically call `SetMakeClass` for the branch:; ```; t4->SetBranchAddress(""fTemperature"", &temp);; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14583#issuecomment-2048287133:225,interface,interface,225,https://root.cern,https://github.com/root-project/root/issues/14583#issuecomment-2048287133,1,['interface'],['interface']
Integrability,"`civetweb` refers to [RFC6455, section 5.2](https://datatracker.ietf.org/doc/html/rfc6455#section-5.2) for values which can be provided in `code`. And yes - not all of them handled in the `TCivetWeb.cxx`. Although I cannot reproduce `fin = 1` `opcode = 8` combination when closing `WebSocket` instance on the client side, seems to be it can happen while `civetweb` does not handle such combination as well. I will add handling for such situation. For the moment we ignore text/binary nature of received messages and put everything into `std::string`.; Up to now in ROOT we do not have applications where binary data should be send from the clients.; Probably one can extend ROOT interface and provide such information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9207#issuecomment-954493430:503,message,messages,503,https://root.cern,https://github.com/root-project/root/issues/9207#issuecomment-954493430,2,"['interface', 'message']","['interface', 'messages']"
Integrability,"`clingtest` exports many more symbols from `libCling`, for testing purposes (see the code in `interpreter/CMakeLists.txt`). This means our (patched) LLVM and Clang will interfere with other LLVM installations used by dependent libraries. IIRC this can make tests fail!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6957#issuecomment-2076571672:217,depend,dependent,217,https://root.cern,https://github.com/root-project/root/issues/6957#issuecomment-2076571672,1,['depend'],['dependent']
Integrability,`json_fwd.hpp` exists since a while and included in many early distributions. ; My OpenSUSE has `nlohmann/json.hpp` version 3.10.5 with such forward declaration. Problem is ROOT builds where `nlohmann/json.hpp` can be found only with extra settings for shell variables.; In such cases none of its includes can be used in public ROOT interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11205#issuecomment-1219275457:333,interface,interfaces,333,https://root.cern,https://github.com/root-project/root/pull/11205#issuecomment-1219275457,1,['interface'],['interfaces']
Integrability,"a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:1534,depend,depends,1534,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,14,['depend'],['depends']
Integrability,"a/x86_64-centos7-gcc8-opt/lib/libNetxNG.so); ==2512== by 0x3F34DECB: TNetXNGFile::TNetXNGFile(char const*, char; const*, char const*, int, int, bool) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libNetxNG.so); ==2512== by 0x401E6642: ???; ==2512== by 0x31A15B61: TClingCallFunc::exec(void*, void*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCling.so); ==2512== by 0x31A16059:; TClingCallFunc::exec_with_valref_return(void*, cling::Value*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCling.so); ==2512== by 0x31A185F1: TClingCallFunc::ExecInt(void*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCling.so); ==2512== by 0x5B50814: TMethodCall::Execute(void*, long&) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== Uninitialised value was created by a stack allocation; ==2512== at 0x5A7E91F: TMessageHandler::Notify() (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512==. Let me know if I can enhance this test to help, e.g. valgrind arguments. Cheers,. Rod. On Wed, 13 Jan 2021 at 16:30, rdschaffer <notifications@github.com> wrote:. > So you mean that 'somehow' wrapper.so is fabricating this incorrect; > string, or it might be coming in from XrdNetConnect::Connect?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-759523877>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRW7YUZQ3N64JAUMA7TSZW4AJANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759537229:4619,wrap,wrapper,4619,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759537229,1,['wrap'],['wrapper']
Integrability,"a\Local\Temp\_CL_123467e9db': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2023-06-01T09:09:56.335Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/DeclCXX.h(2323,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_111426ffex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\ChainedIncludesSource.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2023-06-01T09:09:56.335Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/APInt.h(890,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_a0ca035fsy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\InterfaceStubs.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2023-06-01T09:09:56.335Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(272,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_99efdc38sy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCUDANV.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2023-06-01T09:09:56.335Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\LayoutOverrideSource.cpp : fatal error C1085: Cannot write compiler generated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12911#issuecomment-1571671148:1601,Interface,InterfaceStubs,1601,https://root.cern,https://github.com/root-project/root/pull/12911#issuecomment-1571671148,1,['Interface'],['InterfaceStubs']
Integrability,ace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/build/externals//mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/gpad/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -I/mnt/build/workspace/root-pullrequests-build/build/ginclude -writeEmptyRootPCM ROOT/RCsvDS.hxx ROOT/RDataFrame.hxx ROOT/RDataSource.hxx ROOT/RDFHelpers.hxx ROOT/RLazyDS.hxx ROOT/RResultPtr.hxx ROOT/RRootDS.hxx ROOT/RSnapshotOptions.hxx ROOT/RTrivialDS.hxx ROOT/RDF/ActionHelpers.hxx ROOT/RDF/ActionMergers.hxx ROOT/RDF/GraphNode.hxx ROOT/RDF/GraphUtils.hxx ROOT/RDF/HistoModels.hxx ROOT/RDF/InterfaceUtils.hxx ROOT/RDF/NodesUtils.hxx ROOT/RDF/RActionBase.hxx ROOT/RDF/RAction.hxx ROOT/RDF/RBookedCustomColumns.hxx ROOT/RDF/RColumnValue.hxx ROOT/RDF/RCustomColumnBase.hxx ROOT/RDF/RCustomColumn.hxx ROOT/RDF/RCutFlowReport.hxx ROOT/RDF/RDisplay.hxx ROOT/RDF/RFilterBase.hxx ROOT/RDF/RFilter.hxx ROOT/RDF/RInterface.hxx ROOT/RDF/RJittedAction.hxx ROOT/RDF/RJittedCustomColumn.hxx ROOT/RDF/RJittedFilter.hxx ROOT/RDF/RLazyDSImpl.hxx ROOT/RDF/RLoopManager.hxx ROOT/RDF/RMergeableValue.hxx ROOT/RDF/RNodeBase.hxx ROOT/RDF/RRangeBase.hxx ROOT/RDF/RRange.hxx ROOT/RDF/RSlotStack.hxx ROOT/RDF/Utils.hxx ROOT/RDF/PyROOTHelpers.hxx ROOT/RSqliteDS.hxx /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/LinkDef.h ; - [2020-05-06T10:55:15.943Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDF/ActionHelpers.hxx:46:10: fatal error: 'optional' file not found,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5552#issuecomment-624579673:6509,Interface,InterfaceUtils,6509,https://root.cern,https://github.com/root-project/root/pull/5552#issuecomment-624579673,1,['Interface'],['InterfaceUtils']
Integrability,ace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-866798208:5560,Integrat,IntegratorMultiDim,5560,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-866798208,1,['Integrat'],['IntegratorMultiDim']
Integrability,ah can you use `[DF]` instead of `[RDF]` in the commit message please? :smile: (yes we have been inconsistent in the past but `[DF]` is the prevalent spelling),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6362#issuecomment-693274113:55,message,message,55,https://root.cern,https://github.com/root-project/root/pull/6362#issuecomment-693274113,1,['message'],['message']
Integrability,"aits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]!; You are probably missing the definiti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:2764,interface,interface,2764,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,1,['interface'],['interface']
Integrability,"al read is modeled as an error. This would require `ROOT::ReadFromNetwork()` to force the ""immediate exception"" state to a certain value and reset it later - which is error prone and awkward; it shows that we use a global state that needs local knowledge. If ""immediate exception"" is false and `ROOT::ReadFromNetwork()` captures the error and returns it, same for all subsequent frames but `ROOT::RNTupleIterator::operator++()` (which cannot return a `RStatus`), then only `ROOT::RNTupleIterator::operator++()` will throw. This would shorten the stack trace shown by a potential crash to; ```; ROOT::RNTupleIterator::operator++(); UserCode::modelBackground(); ```; - we would not know the stack trace that actually triggered the exception. We would likely have some info captured in the error message (e.g. ""ROOT::ReadFromNetwork() failed to call linux_read_from_network()""), but we'd miss the connection, i.e. `ROOT::RNetFile::Read()`. One way of handling that is by injecting state:; ```; RStatus ROOT::RNetFile::Read() {; RStatus res(ROOT::ReadFromNetwork());; ...; return R__STATUS_PASSTHROUGH(res); // registers res to have passed through ""ROOT::RNetFile::Read()"" by emplacing a frame string *if* in error state.; ```; That's similar to [`llvm::PrettyStackTraceEntry`](https://llvm.org/doxygen/classllvm_1_1PrettyStackTraceEntry.html), see usage [here](https://github.com/llvm/llvm-project/blob/df494f7512b0ecebdf3d7be97695a1b6278c0336/clang/lib/CodeGen/BackendUtil.cpp#L909). FYI, there has been a multi-hundred email discussion on exactly this topic on the C++ committee mailing list, with pretty much two camps: allow error code handling (with potential exceptions) versus just always throw in case of errors, and if that's slow, go fix the compiler / runtime library implementations (but ABI break). **TL;DR**:; I agree that exceptions instead of error codes allow for nicer code. I don't think that we can have that nice code when we introduce `RStatus`, because the developer of that code m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4683#issuecomment-564972730:1598,inject,injecting,1598,https://root.cern,https://github.com/root-project/root/pull/4683#issuecomment-564972730,1,['inject'],['injecting']
Integrability,"al&gt;::Dropout(TMVA::DNN::TCpuMatrix&lt;AReal&gt;&, AFloat) [with AReal = double]::&lt;lambda(UInt_t)&gt;; INTEGER = int]’, declared using local type ‘TMVA::DNN::TCpu&lt;AReal&gt;::Dropout(TMVA::DNN::TCpuMatrix&lt;AReal&gt;&, AFloat) [with AReal = double]::&lt;lambda(UInt_t)&gt;’, is used but never defined [-fpermissive] ; - include/ROOT/TThreadExecutor.hxx:124:9: error: ‘void ROOT::TThreadExecutor::Foreach(F, ROOT::TSeq&lt;INTEGER&gt;) [with F = TMVA::DNN::TCpu&lt;AReal&gt;::Dropout(TMVA::DNN::TCpuMatrix&lt;AReal&gt;&, AFloat) [with AReal = float]::&lt;lambda(UInt_t)&gt;; INTEGER = int]’, declared using local type ‘TMVA::DNN::TCpu&lt;AReal&gt;::Dropout(TMVA::DNN::TCpuMatrix&lt;AReal&gt;&, AFloat) [with AReal = float]::&lt;lambda(UInt_t)&gt;’, is used but never defined [-fpermissive] . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-409979112:1709,depend,depends,1709,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-409979112,4,['depend'],['depends']
Integrability,all comments integrated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2572#issuecomment-423508068:13,integrat,integrated,13,https://root.cern,https://github.com/root-project/root/pull/2572#issuecomment-423508068,1,['integrat'],['integrated']
Integrability,"allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:582); ==270704== by 0x272164AD: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:890); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66CAF87: _S_copy (basic_string.h:356); ==270704== by 0x66CAF87: _S_copy_chars (basic_string.h:401); ==270704== by 0x66CAF87: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:225); ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109); ==270704== by 0x61E27D9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:47711,depend,depends,47711,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"alright, I made it, thanks! :sweat_smile: . I find it counterintuitive to not specify the dictionary as a dependency of the executable, but at the same time having to add the include directories that the _dictionary_ needs as the include directories for the executable. If that's the best possible, then this issue is a ""won't fix"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856742133:106,depend,dependency,106,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856742133,1,['depend'],['dependency']
Integrability,als/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/builtins -I/usr/include/freetype2 -I/usr/include/x86_64-linux-gnu/freetype2 -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/minuit/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/foam/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/smatrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/roofit/batchcompute/inc -Iroofit/roofitcore/test -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/test/unit_testing_support -isystem googletest-prefix/src/googletest/googletest/include -isystem googletest-prefix/src/googletest/googlemock/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fno-math-errno -std=c++11 -MD -MT roofit/roofitcore/test/CMakeFiles/testRooDataHist.dir/testRooDataHist.cxx.o -MF roofit/roofitcore/test/CMakeFiles/testRooDataHist.dir/testRooDataHist.cxx.o.d -o roofit/roofitcore/test/CMakeFiles/testRooDataHist.dir/testRooDataHist.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataHist.cxx ; - [2021-02-25T16:35:37.279Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataHist.cxx:456:108: error: ‘integrate’ function uses ‘auto’ type specifier without trailing return type ; - [2021-02-25T16:35:37.279Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataHist.cxx:461:85: error: ‘integrate’ function uses ‘auto’ type specifier without trailing return type,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7271#issuecomment-786034936:3289,integrat,integrate,3289,https://root.cern,https://github.com/root-project/root/pull/7271#issuecomment-786034936,2,['integrat'],['integrate']
Integrability,"although there was no message here in the github PR, one can see from https://epsft-jenkins.cern.ch/view/ROOT/job/root-pullrequests-build/ that the fix built successfully on mac1011/native as well as the other platforms. merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2174#issuecomment-395968316:22,message,message,22,https://root.cern,https://github.com/root-project/root/pull/2174#issuecomment-395968316,1,['message'],['message']
Integrability,"alue) {; 884: ^; 884: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 884: error code: -529697949; 884:; 884:; 7/16 Test #884: tutorial-dataframe-df008_createDataSetFromScratch-py .....***Failed Error regular expression found in output. Regex=[: error:] 6.23 sec; test 885; Start 885: tutorial-dataframe-df010_trivialDataSource-py. 885: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df010_trivialDataSource.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 885: Environment variables:; 885: ROOT_HIST=0; 885: Test timeout computed to be: 1500; 885: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 885: error code: -529697949; 885:; 885:; 8/16 Test #885: tutorial-dataframe-df010_trivialDataSource-py ............***Failed 4.46 sec; test 886; Start 886: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py. 886: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df012_DefinesAndFiltersAsStrings.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 886: Environment variables:; 886: ROOT_HIST=0; 886: Test timeout computed to be: 1500; 886: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 886: error code: -529697949; 886:; 886:; 9/16 Test #886: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py ...***Failed 4.43 sec; test 887; Start 887: tutorial-dataframe-df014_CSVDataSource-py. 887: Test command: ""C:\Program",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:7004,message,message,7004,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,"am Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Users/bellenot/build/x64/release/bin/root.exe^-l^-b^-q^--ptrcheck^-e^int*p=nullptr^-e^*p"" ""-DOUT=C:/Users/bellenot/build/x64/release/roottest/cling/exception/nullderef-e.log"" ""-DCWD=C:/Users/bellenot/build/x64/release/roottest/cling/exception"" ""-DRC=1"" ""-DDIFFCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/roottest/scripts/custom_diff.py"" ""-DSYS=C:/Users/bellenot/build/x64/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/x64/release#PYTHONPATH=C:/Users/bellenot/build/x64/release/bin"" ""-P"" ""C:/Users/bellenot/build/x64/release/RootTestDriver.cmake""; 972: Environment variables:; 972: ROOT_HIST=0; 972: Test timeout computed to be: 300; 972: -- TEST COMMAND --; 972: cd C:/Users/bellenot/build/x64/release/roottest/cling/exception; 972: C:/Users/bellenot/build/x64/release/bin/root.exe -l -b -q --ptrcheck -e 'int*p=nullptr' -e '*p'; 972: -- BEGIN TEST OUTPUT --; 972:; 972: (int *) nullptr; 972:; 972: -- END TEST OUTPUT --; 972: -- BEGIN TEST ERROR --; 972: Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; 972: Execution of your code was aborted.; 972: ROOT_cli_1:1:2: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; 972: *p; 972: ^; 972:; 972: -- END TEST ERROR --; 1/1 Test #972: roottest-cling-exception-nullderef-e ... Passed 0.44 sec. The following tests passed:; roottest-cling-exception-nullderef-e. 100% tests passed, 0 tests failed out of 1. Label Time Summary:; cling = 0.44 sec*proc (1 test); regression = 0.44 sec*proc (1 test); roottest = 0.44 sec*proc (1 test). Total Test time (real) = 2.93 sec; ```; And BTW, no need to report the test failures, we are aware of some tests filing with some versions of Visual Studio and architecture (e.g. with VS 2022 x64). And since we run al the tests in our CI, we see immediately if something fails. Note that we are aware of some failing tests, some due to incompatibilities between VS a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9742#issuecomment-1025965371:2157,rout,routine,2157,https://root.cern,https://github.com/root-project/root/issues/9742#issuecomment-1025965371,1,['rout'],['routine']
Integrability,"amerFunc_t //Streamer function for a class; (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<MinimTransformVariable>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<const_iterator>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::reverse_iterator<iterator>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > vector<ROOT::Math::MinimTransformVariable>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IntegrationOneDim::Type ROOT::Math::IntegratorOneDim::Type //for the enumerations defining the types ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::IBaseFunctionOneDim> ROOT::Math::IntegratorOneDim::auto_ptr<IGenFunction> //for the enumerations defining the types ; (compiled) 0:0 0 public: int snprintf(char* string,size_t length,const char* format ...);; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:8422,Integrat,IntegrationOneDim,8422,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,3,['Integrat'],"['IntegrationOneDim', 'IntegratorOneDim']"
Integrability,"annot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-01-26T19:15:54.928Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-767769935:2185,message,messages,2185,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-767769935,1,['message'],['messages']
Integrability,"annot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-01-27T20:55:05.573Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-768575448:2185,message,messages,2185,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-768575448,1,['message'],['messages']
Integrability,"annot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-03T18:32:22.804Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-772781466:2185,message,messages,2185,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-772781466,1,['message'],['messages']
Integrability,"annot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-04T18:11:39.761Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-773543254:2185,message,messages,2185,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-773543254,1,['message'],['messages']
Integrability,"annot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-05T11:10:55.739Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-773997337:2185,message,messages,2185,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-773997337,1,['message'],['messages']
Integrability,"annot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-05T16:35:12.117Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-774182513:2185,message,messages,2185,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-774182513,1,['message'],['messages']
Integrability,"appen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:5498,rout,routine,5498,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,4,['rout'],['routine']
Integrability,"as far as I can tell. The github interface is being ""unresponsive"". I pushed new commits but they are not showing up yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6036#issuecomment-658865121:33,interface,interface,33,https://root.cern,https://github.com/root-project/root/pull/6036#issuecomment-658865121,1,['interface'],['interface']
Integrability,"as> &x) {; x.reset() // TCanvas requires the extra step, see note below.; x.reset(new TCanvas());; // .. do something with it.; }; ```. ```; //make_canvas.C; namespace root_global { ; unique_ptr<TCanvas> c1;; }. void make_canvas() {; // we decide at the top level to use a global here:; my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice; unique_ptr<TCanvas> local_canvas;; my_subroutine(local_canvas);; }; ```; or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```; //display.h. class display {; private:; unique_ptr<TCanvas> c1;; public:; void make_canvas() {; c1.reset(); ; c1.reset(new TCanvas());; }; };; ```; And use it like:; ```; //make_display.C; #include ""display.h"". namespace root_global { ; display my_display;; }. // main routine:; void make_display() { ; // This one will stick around; root_global::my_display.make_canvas();. // This one wont. ; display local_display;; local_display.make_canvas();; }; ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-787621241:1475,rout,routine,1475,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-787621241,2,['rout'],['routine']
Integrability,"asic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594); ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:162359,depend,depends,162359,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"askArena.hxx"". RTaskArena::RTaskArena(); : fTaskArena( new ROpaqueTaskArena() ) {}; [bash][Legolas]:build > more ../ROpaqueTaskArena/test.cxx . // Local include(s).; #include ""RTaskArena.hxx"". int main() {. RTaskArena arena;; return 0;; }; [bash][Legolas]:build > cmake ../ROpaqueTaskArena/; -- The CXX compiler identification is GNU 9.3.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Configuring done; -- Generating done; -- Build files have been written to: /home/krasznaa/development/ropaquetaskarena/build; [bash][Legolas]:build > make; Scanning dependencies of target TaskArenaLib; [ 25%] Building CXX object CMakeFiles/TaskArenaLib.dir/RTaskArena.cxx.o; [ 50%] Linking CXX shared library libTaskArenaLib.so; [ 50%] Built target TaskArenaLib; Scanning dependencies of target TaskArenaTest; [ 75%] Building CXX object CMakeFiles/TaskArenaTest.dir/test.cxx.o; In file included from /usr/include/c++/9/memory:80,; from /home/krasznaa/development/ropaquetaskarena/ROpaqueTaskArena/RTaskArena.hxx:5,; from /home/krasznaa/development/ropaquetaskarena/ROpaqueTaskArena/test.cxx:3:; /usr/include/c++/9/bits/unique_ptr.h: In instantiation of ‘void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = ROpaqueTaskArena]’:; /usr/include/c++/9/bits/unique_ptr.h:292:17: required from ‘std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = ROpaqueTaskArena; _Dp = std::default_delete<ROpaqueTaskArena>]’; /home/krasznaa/development/ropaquetaskarena/ROpaqueTaskArena/RTaskArena.hxx:10:7: required from here; /usr/include/c++/9/bits/unique_ptr.h:79:16: error: invalid application of ‘sizeof’ to incomplete type ‘ROpaqueTaskArena’; 79 | static_assert(sizeof(_Tp)>0,; | ^~~~~~~~~~~; make[2]: *** [CMakeFiles/TaskArenaTest.dir/build.make:63: CMakeFiles/TaskArenaTest.dir/test.cxx.o] Er",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7062#issuecomment-762847080:3035,depend,dependencies,3035,https://root.cern,https://github.com/root-project/root/pull/7062#issuecomment-762847080,1,['depend'],['dependencies']
Integrability,"ass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXRecordDecl*, clang::SourceLocation&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;const clang::CXXMethodDecl*, const clang::CXXMethodDecl*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] . And 68 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43222/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_processExecutorH1Test/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2752#issuecomment-427067410:3531,depend,depends,3531,https://root.cern,https://github.com/root-project/root/pull/2752#issuecomment-427067410,1,['depend'],['depends']
Integrability,"ass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXRecordDecl*, clang::SourceLocation&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;const clang::CXXMethodDecl*, const clang::CXXMethodDecl*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] . And 68 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43774/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_processExecutorH1Test/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2777#issuecomment-428696915:3531,depend,depends,3531,https://root.cern,https://github.com/root-project/root/pull/2777#issuecomment-428696915,1,['depend'],['depends']
Integrability,"assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:648:20: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] . And 222 more. ### Failing tests:; - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_Names](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36330/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_Names/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2457#issuecomment-411365371:3531,depend,depends,3531,https://root.cern,https://github.com/root-project/root/pull/2457#issuecomment-411365371,1,['depend'],['depends']
Integrability,"ast top-level expression's value is printed if missing trailing semicolon) should be kept for consistency and simplicity reasons.; > ; > Let's hear some other opinions here, e.g. @SimeonEhrig @jalopezg-uc3m @pcanal ?. I do realize my post was terse. Here is more text as the discussion went in another direction. Since early days, as you already mentioned, the rule seems to be ""the last expression without a trailing semicolon should print"". If that is the rule, then it clearly does not handle short-hand operators. Namely, `if (x) expr`. That rule does not extend to your examples `do 1 while(true)` as `while` is not really an user-defined expression. `if (x) { expr }` does not fall there either as it is in a compound statement. It is pretty clear where we stop. The construct `if(x) expr`, as shown in the example, enables an interactive programming pattern wrt error handling where in case of an error we can just ask cling to print details. > I'd prefer to keep value printing simple. The implementation of what I propose requires 2-3 lines [here](https://github.com/vgvassilev/cling/blob/856f8e92f82f9037b3dbb27ae7f94add2ed6121f/lib/Utils/AST.cpp#L141-L152). And actually makes the value printing rule more comprehensible. It took me some time to realize what's wrong and I implemented it, so I'd say it would be less comprehensible to other people. > and instead invest where it's relevant: devtoolset, debug symbols, llvm upgrade (to llvm 11!), etc. This is a trade-off we should consciously do, and given that this is the first time I hear a request for value printing within nested blocks . We have had that in the past. I do not think having not user requests should be an argument against this bug. > I'm not yet convinced that it's worth the effort (and yes, that's an additional counter argument). And I'm not just talking dev time but also long-term maintenance: more code, more clang interfaces used. The implementation does not require clang interfaces and it is couple of lines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713756223:2100,interface,interfaces,2100,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713756223,4,['interface'],['interfaces']
Integrability,"at uses LLVM.; > ; > Unfortunately, those should be carefully attended because of ROOT. I would feel more comfortable if my stack knows which libraries depend on LLVM to avoid pain debugging ROOT.; > ; Well, the problem is that this is no so easy to control. LLVM can come in from a dependency chain via many libraries like OpenCL / Vulkan / arrow. And I am afraid this will become more complicated in the future. Instead of messing with each of them, I thought it might be better to fix the issue in a single place on the ROOT side. > I am not a huge fan of the `RTLD_DEEPBIND` approach because it is not portable and it essentially overrides the dynamic linker behavior yet one more time. I am not sure how this would translate to Windows for example.; > ; I agree, me neither. If we can find a better and cleaner way, I am absolutely in favor of that. > IIUC, `RTLD_DEEPBIND` alters the search order of the dynamic linker and using -fPIC intends to deduplicate. That seems as bad as preloading a set of llvm dependent libraries, IMO. Do we need `libgandiva.so` to be compiled with -fPIC or just the executables which 'use' ROOT?; > ; All shared libraries must be compiled with -fPIC by definition, so libgandiva is already compiler with -fPIC. The change would only be for exectuables, which usually do not have -fPIC by default. But then actually other libraries have similar requirements, e.g. Qt5 (with -reduce-relocation flag, which is the default) requires all executables to link against Qt to be compiled with -fPIC. But again, if there is a better way, I am also in favor of avoiding -fPIC-. > This check is to protect the subsequent `dlsyms` in TCling to resolve symbols from the wrong place. We can fix the check and play with the JIT resolution logic by playing with the search order here:; > ; > https://github.com/root-project/root/blob/39630b7530771be3e4643048361886dcfb057f07/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp#L299-L302; > ; > The challenge is to come up with a c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564020905:1479,depend,dependent,1479,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564020905,1,['depend'],['dependent']
Integrability,atchHelpers::ArrayWrapper::operator []' cannot result in a constant expression [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\BatchHelpers.h(108): error C2143: syntax error: missing ';' before 'const' [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\BatchHelpers.h(108): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\BatchHelpers.h(84): error C2440: 'initializing': cannot convert from 'const double *' to 'const int' [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\BatchHelpers.h(84): error C2439: 'BatchHelpers::BracketAdapterWithMask::_pointer': member could not be initialized [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\BatchHelpers.h(90): error C2446: ':': no conversion from 'const double *' to 'const int' [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\BatchHelpers.h(98): error C2109: subscript requires array or pointer type [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\RooArgusBG.cxx(99): error C2146: syntax error: missing ')' before identifier 'output' [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] . And 244 more. ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-527581483:2687,message,message,2687,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-527581483,1,['message'],['message']
Integrability,"ategory.h RooTable.h RooTFoamBinding.h RooThresholdCategory.h RooTObjWrap.h RooTrace.h RooTreeData.h RooTreeDataStore.h RooTruthModel.h RooUniformBinning.h RooUnitTest.h RooVectorDataStore.h RooWorkspace.h RooWorkspaceHandle.h RooXYChi2Var.h RooHelpers.h RooSpan.h BatchData.h RooVDTHeaders.h /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/LinkDef.h ; - /mnt/build/workspace/root-pullrequests-build/build/include/RooVDTHeaders.h:40:15: error: no member named 'exp' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/RooVDTHeaders.h:44:15: error: no member named 'exp' in namespace 'std' ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libRooFitCoreb2d9d7abc8_dictUmbrella.h) . ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:39:47: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:40:61: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:43:64: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:44:78: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-527491490:8774,message,message,8774,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-527491490,1,['message'],['message']
Integrability,athcore/CMakeFiles/MathCore.dir/src/BrentRootFinder.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/ChebyshevPol.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DataRange.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Delaunay2D.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DistSampler.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DistSamplerOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Factory.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitConfig.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitData.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitResult.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitUtil.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Fitter.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GaussIntegrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GaussLegendreIntegrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GenAlgoOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GoFTest.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Integrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/IntegratorOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MersenneTwisterEngine.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MinimTransformFunction.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MinimizerOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MinimizerVariableTransformation.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MixMaxEngineImpl17.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MixMaxEngineImpl240.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MixMaxEngineImpl256.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/ParameterSettings.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/PdfFuncMathCore.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/ProbFuncMathCore.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/QuantFuncMathCore.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/RandomFunctions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/RanluxppEngineImpl.cxx.o math/mathcore/CMakeFiles/MathCore.dir/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10617#issuecomment-1141092598:1915,Integrat,Integrator,1915,https://root.cern,https://github.com/root-project/root/pull/10617#issuecomment-1141092598,1,['Integrat'],['Integrator']
Integrability,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx; > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7186#issuecomment-801496369:2987,wrap,wrapper,2987,https://root.cern,https://github.com/root-project/root/pull/7186#issuecomment-801496369,2,['wrap'],['wrapper']
Integrability,"ativity) and I also took the liberty and modified `root://eospublic.cern.ch//eos/root-eos/xrootd.test` so it is in line with `http://root.cern.ch/files/davix.test`. ```; ctest -I 164,165; Test project /home/simonm/git/root-my/buildtmp; Start 164: gtest-net-davix-test-RRawFileDavix; 1/2 Test #164: gtest-net-davix-test-RRawFileDavix ..... Passed 0.20 sec; Start 165: gtest-net-netxng-test-RRawFileNetXNG; 2/2 Test #165: gtest-net-netxng-test-RRawFileNetXNG ... Passed 0.05 sec; ```. However running the full test suite yielded some failures:. ```; 99% tests passed, 18 tests failed out of 2101. Label Time Summary:; cling = 69.10 sec; longtest = 1541.18 sec; matrix = 0.22 sec; multithreaded = 206.29 sec; python_runtime_deps = 27.45 sec; regression = 68.69 sec; roottest = 69.32 sec; tutorial = 1559.92 sec. Total Test time (real) = 5594.32 sec. The following tests FAILED:; 	 3 - pyunittests-pyroot-dependency-versions (Failed); 	 56 - pyunittests-pyroot-numbadeclare (Failed); 	 57 - test-import-numba (Failed); 	918 - tutorial-dataframe-df026_AsNumpyArrays-py (Failed); 	920 - test-import-pandas (Failed); 	961 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Failed); 	962 - test-import-numba (Failed); 	1219 - roottest-python-JupyROOT-cppcompleter_doctest (Failed); 	1220 - roottest-python-JupyROOT-handlers_doctest (Failed); 	1221 - roottest-python-JupyROOT-utils_doctest (Failed); 	1222 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1223 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1224 - roottest-python-JupyROOT-thread_local_notebook (Failed); 	1225 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 	1226 - roottest-python-JupyROOT-tpython_notebook (Failed); 	1227 - roottest-python-JupyROOT-Cpp_IMT_Canvas_notebook (Failed); 	1444 - roottest-root-html-runMakeIndex (Failed); 	1627 - roottest-root-meta-execTypedefList-auto (Failed); ```. I don't think it's related to the PR but to be on the safe side I'm reporting it. P. S.; Again, sorry for the delay!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9012#issuecomment-948823698:983,depend,dependency-versions,983,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-948823698,1,['depend'],['dependency-versions']
Integrability,ault.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/136979/console).; ### Warnings:; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:84:56: warning: declaration of ‘file’ shadows a member of ‘Rcpp::file_io_error’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:86:66: warning: declaration of ‘file’ shadows a member of ‘Rcpp::file_io_error’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:88:80: warning: declaration of ‘file’ shadows a member of ‘Rcpp::file_io_error’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:100:57: warning: declaration of ‘file’ shadows a member of ‘Rcpp::file_not_found’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:106:54: warning: declaration of ‘file’ shadows a member of ‘Rcpp::file_exists’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:191:57: warning: declaration of ‘message’ shadows a member of ‘Rcpp::no_such_slot’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:191:57: warning: declaration of ‘message’ shadows a member of ‘Rcpp::not_a_closure’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:191:57: warning: declaration of ‘message’ shadows a member of ‘Rcpp::S4_creation_error’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:191:57: warning: declaration of ‘message’ shadows a member of ‘Rcpp::reference_creation_error’ [-Wshadow] ; - [2022-02-09T13:10:11.713Z] /usr/lib64/R/library/Rcpp/include/Rcpp/exceptions.h:191:57: warning: declaration of ‘message’ shadows a member of ‘Rcpp::no_such_binding’ [-Wshadow] . And 24 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9819#issuecomment-1033772304:1251,message,message,1251,https://root.cern,https://github.com/root-project/root/pull/9819#issuecomment-1033772304,5,['message'],['message']
Integrability,"ay. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, there also needs to be a cleanupHelper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696817778:1182,depend,dependent,1182,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696817778,2,['depend'],['dependent']
Integrability,"bal. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile grammar and in the end I'd rather worry about adding top-level ""keep"" statements than top level ""deletes"". In the C++ global version of example 2, to get the serial loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:4430,depend,depending,4430,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,2,['depend'],['depending']
Integrability,ber function ‘double BatchHelpers::BracketAdapterWithMask::operator[](std::size_t) const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:91:20: error: enclosing class of constexpr non-static member function ‘bool BatchHelpers::BracketAdapterWithMask::isBatch() const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:87:22: error: enclosing class of constexpr non-static member function ‘double BatchHelpers::BracketAdapterWithMask::operator[](std::size_t) const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:91:20: error: enclosing class of constexpr non-static member function ‘bool BatchHelpers::BracketAdapterWithMask::isBatch() const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:87:22: error: enclosing class of constexpr non-static member function ‘double BatchHelpers::BracketAdapterWithMask::operator[](std::size_t) const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:91:20: error: enclosing class of constexpr non-static member function ‘bool BatchHelpers::BracketAdapterWithMask::isBatch() const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:87:22: error: enclosing class of constexpr non-static member function ‘double BatchHelpers::BracketAdapterWithMask::operator[](std::size_t) const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:91:20: error: enclosing class of constexpr non-static member function ‘bool BatchHelpers::BracketAdapterWithMask::isBatch() const’ is not a literal type . ### Warnings:; - CMake Warning at /data/sftnight/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-526573854:2811,message,message,2811,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-526573854,1,['message'],['message']
Integrability,"bj) override; - {; - fData.RemoveFromCache(obj);; - }; + void RecursiveRemove(TObject *obj) override { fData->RemoveFromCache(obj); }; +; + ClassDefInline(RBrowserDataCleanup, 1);; };; }; }; @@ -67,7 +69,7 @@ public:; ; RBrowserData::RBrowserData(); {; - fCleanupHandle = std::make_unique<RBrowserDataCleanup>(*this);; + fCleanupHandle = std::make_unique<RBrowserDataCleanup>(this);; R__LOCKGUARD(gROOTMutex);; gROOT->GetListOfCleanups()->Add(fCleanupHandle.get());; }. ```. And the test gives even more errors then before:. ```; 1548: -- BEGIN OUTDIFF OUTPUT --; 1548: --- /home/vpadulan/Programs/rootproject/roottest/root/core/execStatusBitsCheck.ref	Wed Jun 9 11:08:31 2021; 1548: +++ /home/vpadulan/Programs/rootproject/rootbuild/execstatusbitcheck-fix-v2/roottest/root/core/execStatusBitsCheck.log	Mon Jul 17 18:19:46 2023; 1548: @@ -14,5 +14,29 @@; 1548: Bit 13 declared in TObject as kInvalidObject; 1548: Bit 14 declared in TStreamerElement as kWholeObject; 1548: Bit 21 declared in TStreamerElement as kWarned; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter infor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:2000,rout,routine,2000,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,1,['rout'],['routine']
Integrability,bj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/datamodelevolution/roottest_root_io_datamodelevolution_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844253147:1444,interface,interface,1444,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844253147,2,['interface'],['interface']
Integrability,bleTableEmitter.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.dir\Release\SearchableTableEmitter.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.vcxproj] ; - [2020-05-12T16:06:25.569Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\utils\TableGen\PseudoLoweringEmitter.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.dir\Release\PseudoLoweringEmitter.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.vcxproj] ; - [2020-05-12T16:06:48.489Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/OPENUI5-prefix/src/OPENUI5-stamp/extract-OPENUI5.cmake:33 (message): ; - [2020-05-12T16:06:52.651Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-build-Release.cmake:49 (message): ; - [2020-05-12T16:06:57.225Z] CMake Error at CFITSIO-stamp/CFITSIO-download-Release.cmake:49 (message): ; - [2020-05-12T16:07:02.220Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/builtins/pcre/PCRE-prefix/src/PCRE-stamp/PCRE-configure-Release.cmake:49 (message): ; - [2020-05-12T16:07:02.512Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/googletest-prefix/src/googletest-stamp/googletest-configure-Release.cmake:49 (message): ; - [2020-05-12T16:07:02.807Z] obj.clang-tblgen.dir\Release\obj.clang-tblgen.lib : fatal error LNK1108: cannot write file at 0x10000 [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj] ; - [2020-05-12T16:07:04.575Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5603#issuecomment-627439886:2208,message,message,2208,https://root.cern,https://github.com/root-project/root/pull/5603#issuecomment-627439886,1,['message'],['message']
Integrability,build/146494/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot.roottest.root.tree/addresses/roottest_root_tree_addresses_make/); - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146494/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143595098:2758,interface,interface,2758,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143595098,2,['interface'],['interface']
Integrability,"build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'; 14:16:07 #include <ROOT/TPadPainter.hxx>; 14:16:07 ~~~~~~~~^; 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h); 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so; ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle).; ```; module ""ROOTGraphicsPrimitives"" {; requires cplusplus; module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }; module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }; module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }; module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }; module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }; module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }; module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }; module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }; module ""ROOT/TStyle.hxx"" { hea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2091#issuecomment-392598607:2335,depend,depend,2335,https://root.cern,https://github.com/root-project/root/pull/2091#issuecomment-392598607,1,['depend'],['depend']
Integrability,but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TGridJob.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TList.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TQObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TFile.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TFTP.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TFileStager.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TNamed.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBits.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TInetAddress.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module MessageTypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TVirtualAuth.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TDatime.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TTimeStamp.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TVirtualMutex.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSocket.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TMemFile.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TMessage.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDire,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:7111,Message,MessageTypes,7111,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Message'],['MessageTypes']
Integrability,"but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TDatime.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TNamed.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSocket.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TNamed.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBits.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TInetAddress.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module MessageTypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TVirtualAuth.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSecContext.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TTimeStamp.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TVirtualMutex.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSocket.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module root_std_complex.h resolved but not visible![5559/8175] Generating G__Smatrix32.cxx, ../../lib/libSmatrix_G__Smatrix32_rdict.pcm, ../../lib/libSmatrix32.rootmap ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iosfwd resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:9932,Message,MessageTypes,9932,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Message'],['MessageTypes']
Integrability,"but that scripts worked before, they were not shell dependant. That's weird",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1077394454:52,depend,dependant,52,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1077394454,1,['depend'],['dependant']
Integrability,"bviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable?. Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870411730:1126,depend,dependency,1126,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870411730,2,['depend'],['dependency']
Integrability,"c/RD_valgrid_stdout.log; /afs/cern.ch/user/w/walkerr/public/RD_valgrid_stdout_supp.log. The latter has an attempt to suppress the root known messages, and has; the slightly promising. [2021-01-14 04:10:07.044153 -0500][Debug ][XRootDTransport ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Sending out kXR_login request,; username: usatlas3, cgi:; ?xrd.cc=us&xrd.tz=-5&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=acas1060.usatlas.bnl.gov&xrd.rn=v4.10.0,; dual-stack: false, private IPv4: false, private IPv6: false; [2021-01-14 04:10:07.046851 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Wrote a message: (0x3cc60ff0), 134; bytes; [2021-01-14 04:10:07.052644 -0500][Dump ][XRootDTransport ] [msg:; 0x3cbf39a0] Expecting 49 bytes of message body; [2021-01-14 04:10:07.053325 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Received message header, size: 8; [2021-01-14 04:10:07.053800 -0500][Dump ][AsyncSock ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Received a message of 57 bytes; [2021-01-14 04:10:07.058654 -0500][Debug ][XRootDTransport ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Logged in, session:; 7b7dbbd4cfaff647f020363a59db1b5c; [2021-01-14 04:10:07.059797 -0500][Debug ][XRootDTransport ]; [dcgftp.usatlas.bnl.gov:1096 #0.0] Authentication is required:; &P=gsi,v:10400,c:ssl,ca:f5f0dfc2; ==2495== Can't extend stack to 0x414a7fc8 during signal delivery for thread 2:; ==2495== no stack segment; ==2495==; ==2495== Process terminating with default action of signal 11; (SIGSEGV): dumping core; ==2495== Access not within mapped region at address 0x414A7FC8; ==2495== at 0x6703DF7: vfprintf (in /usr/lib64/libc-2.17.so); ==2495== If you believe this happened as a result of a stack; ==2495== overflow in your program's main thread (unlikely but; ==2495== possible), you can try to increase the size of the; ==2495== main thread stack using the --main-stacksize= flag.; ==2495== The main thread stack size used in this run was 16777216.; ==2495==; ==2495== Process termina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760074314:1046,message,message,1046,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760074314,1,['message'],['message']
Integrability,"c/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:253; #65 cling::IncrementalExecutor::runStaticInitializersOnce (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:251; #66 0x00007fffeea63d43 in cling::Interpreter::executeTransaction (this=<optimized out>, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1714; #67 0x00007fffeea6da53 in cling::IncrementalParser::commitTransaction (this=0x4f6670, PRT=..., ClearDiagClient=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:675; #68 0x00007fffeea6e410 in cling::IncrementalParser::Compile (this=0x4f6670, input=..., Opts=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:846; #69 0x00007fffeea62615 in cling::Interpreter::EvaluateInternal (this=0x4f17a0, input=..., CO=..., V=0x7fffffffcc70, wrapPoint=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379; #70 0x00007fffee95d98f in TCling::Calc (this=0x4f0e00, line=0x1c224b0 ""ROOT::Internal::RDF::JitFilterHelper(R_rdf::lambda0, new const char*[1]{\""a\""}, 1, \""\"", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x21269a0), reinterpret_cast<std::shared_ptr<ROO""..., error=0x7fffffffcd0c) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:3556; #71 0x00007ffff7fc97b3 in ROOT::Internal::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_0::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (; codeSlice=""ROOT::Internal::RDF::JitFilterHelper(R_rdf::lambda0, new const char*[1]{\""a\""}, 1, \""\"", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x21269a0), reinterpret_cast<std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1097659822:16510,wrap,wrapPoint,16510,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1097659822,1,['wrap'],['wrapPoint']
Integrability,c5-root-6.28.00/share/locale -DCMAKE_INSTALL_LIBEXECDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/libexec -DCMAKE_INSTALL_LIBDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/lib -DCMAKE_INSTALL_DOCDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/share/doc/ROOT -DCMAKE_INSTALL_INFODIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/share/info -DCMAKE_INSTALL_MANDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/share/man -DCMAKE_INSTALL_OLDINCLUDEDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/include -DCMAKE_INSTALL_INCLUDEDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/include -DCMAKE_INSTALL_SBINDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/sbin -DCMAKE_INSTALL_BINDIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/bin -DCMAKE_INSTALL_NAME_DIR=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00/lib -DCMAKE_POLICY_DEFAULT_CMP0025=NEW -DCMAKE_OSX_SYSROOT= -DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_STRIP=/nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/strip -DCMAKE_RANLIB=/nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/ranlib -DCMAKE_AR=/nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/ar -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_INSTALL_PREFIX=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00 -Drpath=ON -Dbuiltin_llvm=OFF -Dbuiltin_freetype=OFF -Dbuiltin_gtest=OFF -Dbuiltin_nlohmannjson=OFF -Dbuiltin_openui5=OFF -Dalien=OFF -Dbonjour=OFF -Dcastor=OFF -Dchirp=OFF -Dclad=OFF -Ddavix=ON -Ddcache=OFF -Dfail-on-missing=ON -Dfftw3=OFF -Dfitsio=OFF -Dfortran=OFF -Dgnuinstall=ON -Dimt=ON -Dgfal=OFF -Dgviz=OFF -Dhdfs=OFF -Dhttp=ON -Dkrb5=OFF -Dldap=OFF -Dmonalisa=OFF -Dmysql=OFF -Dodbc=OFF -Dopengl=ON -Doracle=OFF -Dpgsql=OFF -Dpythia6=OFF -Dpythia8=OFF -Drfio=OFF -Droot7=OFF -Dsqlite=OFF -Dssl=ON -Dtmva=ON -Dvdt=OFF -Dwebgui=OFF -Dxml=ON -Dxrootd=ON -DC_INCLUDE_DIRS=/nix/store/nasgvbblxi25r6y1s8,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:3464,wrap,wrapper-,3464,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['wrap'],['wrapper-']
Integrability,"cation flows into a member access and is used to access a property of a field assignment by name. This may allow a malicious user to access methods (e.g. toString) as opposed to regular properties of objects and cause a crash, remote code execution or more serious problems. This is known as a Prototype Pollution vulnerability. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/js/scripts/JSRoot.core.js#L1123"">JSRoot.core.js:1123</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b4/root-project/root/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/pr/_/%2Fjs%2Fscripts%2FJSRoot.core.js/javascript%2Fdc_interfile_project%2FPrototypePollution/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; <tr>; <td width=""77%"">Unsanitized input from the document location flows into eval, where it is executed as JavaScript code. This may result in a Code Injection vulnerability. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/js/scripts/JSRoot.core.js#L1313"">JSRoot.core.js:1313</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b4/root-project/root/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/pr/_/%2Fjs%2Fscripts%2FJSRoot.core.js/javascript%2Fdc_interfile_project%2FCodeInjection/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; <tr>; <td width=""77%"">Use binary mode in open (current mode is w) to avoid encoding-related issues for written file, on Windows or with Python 3. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/interpreter/llvm/src/utils/benchmark/mingw.py#L122"">mingw.py:122</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6254#issuecomment-898501733:1604,Inject,Injection,1604,https://root.cern,https://github.com/root-project/root/pull/6254#issuecomment-898501733,1,['Inject'],['Injection']
Integrability,ce/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/usr/include/libxml2 -Iinterpreter/llvm/src/include -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++11 -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -fno-exceptions -fno-rtti -std=c++11 -MD -MT interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:376: error: ‘conditional_t’ in namespace ‘std’ does not name a template type ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected ‘&gt;’ before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected ‘(’ before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected primary-expression b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8399#issuecomment-865243666:1578,Interface,InterfaceStubFunctionsConsumer,1578,https://root.cern,https://github.com/root-project/root/pull/8399#issuecomment-865243666,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,"cessful IN2P3 LAPP_LAKE; >; >; > https://bigpanda.cern.ch//media/filebrowser/f9695015-c110-4e2e-9c62-d56eade824f8/panda/tarball_PandaJob_4926136184_IN2P3-LAPP_LAKE/payload.stdout; >; > [2020-12-19 02:08:57.250908 +0100][Debug ][XRootDTransport ] [; > lapp-se01.in2p3.fr:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 500); > [2020-12-19 02:08:57.251553 +0100][Debug ][XRootDTransport ] [; > lapp-se01.in2p3.fr:1094 #0.0] Sending out kXR_login request, username:; > atlaspil, cgi: ?xrd.cc=fr&xrd.tz=1&xrd.appname=runH4lAnalRun2&xrd.info; > =&xrd.hostname=lapp-wn168.in2p3.fr&xrd.rn=v4.10.0, dual-stack: false,; > private IPv4: false, private IPv6: false; >; > Failed Tokyo:; >; >; > https://bigpanda.cern.ch//media/filebrowser/e051d153-88d6-4010-9bae-adee1dc89c07/panda/tarball_PandaJob_4925837464_TOKYO/payload.stdout; >; > [2020-12-18 18:28:04.321336 +0000][Debug ][XRootDTransport ] [; > lcg-se01.icepp.jp:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 500); >; > Failed BNL:; >; >; > https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout; >; > [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [; > dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: manager; > [], protocol version 500); >; > Fail Romania:; >; >; > https://bigpanda.cern.ch//media/filebrowser/60928171-593f-4422-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout; >; > [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [; > tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 400); >; > Fail canada:; >; >; > https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout; >; > [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [; > lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol su",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758074953:3162,protocol,protocol,3162,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758074953,1,['protocol'],['protocol']
Integrability,"ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5516-ROOT-fedora31-noimt&date=2020-04-30).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79742/console).; ### Warnings:; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:38:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:56:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:74:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:17:12.054Z] /build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621886081:1135,interface,interfaces,1135,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621886081,1,['interface'],['interfaces']
Integrability,ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105431/console).; ### Errors:; - [2021-01-25T16:12:27.965Z] FAILED: cint/cint/CMakeFiles/Cint.dir/src/loadfile.cxx.o ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:23:3: error: invalid preprocessing directive #R__HAS_MATHMORE ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:26:3: error: invalid preprocessing directive #R__HAS_CLING ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:27:3: error: invalid preprocessing directive #R__HAS_COCOA ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:28:3: error: invalid preprocessing directive #R__HAS_VC ; - [2021-01-25T16:12:28.456Z] include/RConfigure.h:31:3: error: invalid preprocessing directive #R__USE_LIBCXX ; - [2021-01-25T16:14:03.950Z] FAILED: DAVIX-prefix/src/DAVIX-stamp/DAVIX-download ; - [2021-01-25T16:14:03.950Z] CMake Error at DAVIX-stamp/DAVIX-download-Release.cmake:49 (message): . ### Warnings:; - [2021-01-25T16:12:20.995Z] CMake Warning at math/vc/cmake/OptimizeForArchitecture.cmake:112 (message): ; - [2021-01-25T16:12:29.028Z] cc1plus: warning: ‘-Wabi’ won’t warn about anything [-Wabi] ; - [2021-01-25T16:12:29.028Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:73:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256’ {aka ‘__vector(8) float’} [-Wignored-attributes] ; - [2021-01-25T16:12:29.028Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:74:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256i’ {aka ‘__vector(4) long long int’} [-Wignored-attributes] ; - [2021-01-25T16:12:29.028Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:75:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256d’ {aka ‘__vector(4) double’} [-Wignored-attributes] ; - [2021-01-25T1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7089#issuecomment-766928504:1070,message,message,1070,https://root.cern,https://github.com/root-project/root/pull/7089#issuecomment-766928504,1,['message'],['message']
Integrability,chain/usr/include/c++/v1/__tree:1819:22: warning: the specified comparator type does not provide a const call operator [-Wuser-defined-warnings] . ### Failing tests:; - [projectroot.roottest.cling.bytecode.roottest_cling_bytecode_runarrayhist_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.cling/bytecode/roottest_cling_bytecode_runarrayhist_WILL_FAIL/); - [projectroot.roottest.root.hist.roottest_root_hist_mergeTH2Poly](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root/hist/roottest_root_hist_mergeTH2Poly/); - [projectroot.test.test_stressfit_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot/test/test_stressfit_interpreted/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execBrowseNonAccessibleType](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execBrowseNonAccessibleType/); - [projectroot.roottest.root.multicore.roottest_root_multicore_exectstformula](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_exectstformula/); - [projectroot.roottest.root.multicore.roottest_root_multicore_TThreadedObjectAutoMemManagement](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_TThreadedObjectAutoMemManagement/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1911#issuecomment-384237158:1635,interface,interface,1635,https://root.cern,https://github.com/root-project/root/pull/1911#issuecomment-384237158,1,['interface'],['interface']
Integrability,"clang-format wants me to do things that I don't want to do:. ```diff; diff --git a/tree/tree/inc/TVirtualIndex.h b/tree/tree/inc/TVirtualIndex.h; index c4753fac14..7f38cb2ca0 100644; --- a/tree/tree/inc/TVirtualIndex.h; +++ b/tree/tree/inc/TVirtualIndex.h; @@ -45,7 +45,7 @@ public:; virtual Long64_t GetN() const = 0;; virtual TTree *GetTree() const {return fTree;}; virtual void UpdateFormulaLeaves(const TTree *parent) = 0;; - virtual void SetTree(TTree *T) = 0;; + virtual void SetTree(TTree *T) = 0;. ClassDefOverride(TVirtualIndex,1); //Abstract interface for Tree Index; };; diff --git a/tree/treeplayer/inc/TChainIndex.h b/tree/treeplayer/inc/TChainIndex.h; index 83bfba1f30..7eca7b529f 100644; --- a/tree/treeplayer/inc/TChainIndex.h; +++ b/tree/treeplayer/inc/TChainIndex.h; @@ -88,7 +88,7 @@ public:; virtual Long64_t GetN() const {return fEntries.size();}; virtual Bool_t IsValidFor(const TTree *parent);; virtual void UpdateFormulaLeaves(const TTree *parent);; - virtual void SetTree(TTree *T);; + virtual void SetTree(TTree *T);. ClassDef(TChainIndex,1) //A Tree Index with majorname and minorname.; };; diff --git a/tree/treeplayer/inc/TTreeIndex.h b/tree/treeplayer/inc/TTreeIndex.h; index d56ad5c3ac..218f21403a 100644; --- a/tree/treeplayer/inc/TTreeIndex.h; +++ b/tree/treeplayer/inc/TTreeIndex.h; @@ -68,7 +68,7 @@ public:; virtual Bool_t IsValidFor(const TTree *parent);; virtual void Print(Option_t *option="""") const;; virtual void UpdateFormulaLeaves(const TTree *parent);; - virtual void SetTree(TTree *T);; + virtual void SetTree(TTree *T);. ClassDef(TTreeIndex,2); //A Tree Index with majorname and minorname.; };; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12269#issuecomment-1431462065:552,interface,interface,552,https://root.cern,https://github.com/root-project/root/pull/12269#issuecomment-1431462065,1,['interface'],['interface']
Integrability,"cleHandler;; #pragma link C++ class dd4hep::sim::Geant4UIManager;; #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here; //namespace detail {}; //#pragma link C++ namespace detail;. #endif. // CLHEP stuff; #include <CLHEP/Random/Random.h>; #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;; #pragma link C++ class CLHEP::HepRandom;; #pragma link C++ class CLHEP::HepRandomEngine;; #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB; #define DD4HEP_USE_TBB 1; #endif; #ifndef BOOST_SPIRIT_USE_PHOENIX_V3; #define BOOST_SPIRIT_USE_PHOENIX_V3 1; #endif; #ifndef DD4HEP_USE_XERCESC; #define DD4HEP_USE_XERCESC 1; #endif; #ifndef G4LIB_BUILD_DLL; #define G4LIB_BUILD_DLL 1; #endif; #ifndef PTL_BUILD_DLL; #define PTL_BUILD_DLL 1; #endif; #ifndef G4VIS_USE_RAYTRACERX; #define G4VIS_USE_RAYTRACERX 1; #endif; #ifndef G4VIS_USE_TOOLSSG_QT_GLES; #define G4VIS_USE_TOOLSSG_QT_GLES 1; #endif; #ifndef G4VIS_USE_TOOLSSG_QT_ZB; #define G4VIS_USE_TOOLSSG_QT_ZB 1; #endif; #ifndef G4VIS_USE_TOOLSSG_X11_GLES; #define G4VIS_USE_TOOLSSG_X11_GLES 1; #endif; #ifndef G4VIS_USE_TOOLSSG_XT_GLES; #define G4VIS_USE_TOOLSSG_XT_GLES 1; #endif; #ifndef G4VIS_USE_TOOLSSG_XT_ZB; #define G4VIS_USE_TO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:19061,rout,routine,19061,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,1,['rout'],['routine']
Integrability,"clude RooHistError from IO; [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; [RF] Code-format `testRooDataHist.cxx`; [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`; [RF] Modernize `RooVectorDataStore::RealFullVector` class; [RF] Enable AD code-gen test for RooFit.; [RF] Suggest alternative to RooDataSet c'tor that takes weight name; [RF] Add unit test for splitting RooDataSets with weight errors; [RF] Add weight errors and not weight squared when filling split data; [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`; [RF] Less manual memory management in RooAbsArg and RooProdGenContext; [RF] Code modernization of RooAbsReal; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF] New mechanism to implicitly convert numbers to RooRealVar&; [RF] Remove RooFormula code for gcc <= 4.8; [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; [RF] More use of `snapshot()` overload with output parameter; [RF] Bring back `RooStats::FeldmanCousins::SetData()`; [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12620#issuecomment-1497698813:4879,wrap,wrapper,4879,https://root.cern,https://github.com/root-project/root/pull/12620#issuecomment-1497698813,1,['wrap'],['wrapper']
Integrability,"clude\vector(659,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\CompilerInvocation.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-04-07T10:00:10.394Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility(546,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Analysis\ValueTracking.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Analysis\LLVMAnalysis.vcxproj] ; - [2021-04-07T10:00:10.394Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/Lex/MacroInfo.h(433,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\InterfaceStubFunctionsConsumer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-04-07T10:00:10.394Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility(208,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SimplifyCFG.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2021-04-07T10:00:15.528Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\bitset(208,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXReplaceImageHandles.cp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7795#issuecomment-814787481:2592,Interface,InterfaceStubFunctionsConsumer,2592,https://root.cern,https://github.com/root-project/root/pull/7795#issuecomment-814787481,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,"cmake""; 888: Environment variables:; 888: ROOT_HIST=0; 888: Test timeout computed to be: 1500; 888: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 888: error code: -529697949; 888:; 888:; 11/16 Test #888: tutorial-dataframe-df016_vecOps-py .......................***Failed 4.51 sec; test 889; Start 889: tutorial-dataframe-df017_vecOpsHEP-py. 889: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df017_vecOpsHEP.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 889: Environment variables:; 889: ROOT_HIST=0; 889: Test timeout computed to be: 1500; 889: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 889: error code: -529697949; 889:; 889:; 12/16 Test #889: tutorial-dataframe-df017_vecOpsHEP-py ....................***Failed 5.05 sec; test 890; Start 890: tutorial-dataframe-df019_Cache-py. 890: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df019_Cache.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 890: Environment variables:; 890: ROOT_HIST=0; 890: Test timeout computed to be: 1500; 890: Error in <TChain::LoadTree>: Cannot find tree with name ÉB D═ in file C:\Users\sftnight\build\release\tutorials\hsimple.root; 890: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 890: error code: -529697949; 890:; 890:; 13/16 Test #890: tutorial-dataframe-df019_Cache-py ........................***Failed Error reg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:12280,message,message,12280,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,"code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12630#issuecomment-1498932509:1262,integrat,integration,1262,https://root.cern,https://github.com/root-project/root/pull/12630#issuecomment-1498932509,2,"['integrat', 'interface']","['integration', 'interface']"
Integrability,components; #pragma link C++ class dd4hep::sim::Geant4DataDump;; #pragma link C++ class dd4hep::sim::Geant4Random;; #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;; #pragma link C++ class dd4hep::sim::Geant4UIManager;; #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here; //namespace detail {}; //#pragma link C++ namespace detail;. #endif. // CLHEP stuff; #include <CLHEP/Random/Random.h>; #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;; #pragma link C++ class CLHEP::HepRandom;; #pragma link C++ class CLHEP::HepRandomEngine;; #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:54617,rout,routine,54617,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,1,['rout'],['routine']
Integrability,"components; #pragma link C++ class dd4hep::sim::Geant4DataDump;; #pragma link C++ class dd4hep::sim::Geant4Random;; #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;; #pragma link C++ class dd4hep::sim::Geant4UIManager;; #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here; //namespace detail {}; //#pragma link C++ namespace detail;. #endif. // CLHEP stuff; #include <CLHEP/Random/Random.h>; #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;; #pragma link C++ class CLHEP::HepRandom;; #pragma link C++ class CLHEP::HepRandomEngine;; #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB; #define DD4HEP_USE_TBB 1; #endif; #ifndef BOOST_SPIRIT_USE_PHOENIX_V3; #define BOOST_SPIRIT_USE_PHOENIX_V3 1; #endif; #ifndef DD4HEP_USE_XERCESC; #define DD4HEP_USE_XERCESC 1; #endif; #ifndef G4LIB_BUILD_DLL; #define G4LIB_BUILD_DLL 1; #endif; #ifndef PTL_BUILD_DLL; #define PTL_BUILD_DLL 1; #endif; #ifndef G4VIS_USE_RAYTRACERX; #define G4VIS_USE_RAYTRACERX 1; #endif; #ifndef G4VIS_USE_TOOLSSG_QT_GLES; #define G4VIS_USE_TOOLSSG_QT_GLES 1; #endif; #ifndef G4VIS_USE_TOOLSSG_QT_ZB; #define G4VIS_USE_TOOLSSG_QT_ZB 1; #endif; #ifndef G4VIS_USE_TOOLSSG_X11_GLES; #define G4VIS_US",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:18898,rout,routine,18898,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,1,['rout'],['routine']
Integrability,"copy the changed files from the ROOT sources. Being a git repository, it also easily is included as a submodule in the `/extern` folder for GooFit, for example. After meeting and talking with @lmoneta a couple of days ago over a coffee, he outlined the procedure I initially implemented. He showed me the old ""build"" directory, with an old bash script that copied the necessary files out. He wanted me to make a new folder to eventually replace his build folder. The idea is that you could create source distributions that would be packaged and made available as downloads to continue the outdated ones available here: http://project-mathlibs.web.cern.ch/project-mathlibs/minuit/release/download.html. I added this though `make package_source`, and included `make package` for binary distributions as well. The integrated version does look a bit better, though it is a bit more invasive and not nearly as well separated. I do need to copy to `/inc/Math`, etc, since a source distribution needs to be in the source directory. Everything is copied to `INSTALL_PREFIX/include` when it's installed or packaged for a binary distribution. As for use, a git only solution really is not feasible, unfortunately, with any method that does not include git submodules. The current methods for a user are:. * Install beforehand from one of the downloadable packages, either building a source package or installing a binary package. This is the way some people will get it, but not ideal for a modern package that wants to have minimal dependencies.; * Have CMake download and build the package with `ExternalProject` - probably the best solution for now, still not as nice for something like GooFit that already has all dependencies as git submodules.; * Check out all of ROOT as a submodule, then `add_subdirectory(extern/root/math/minuit2)`. Much more disk space usage that needed, but otherwise also a decent solution. Might even be best. All three methods should be supported by this standalone build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369601161:1610,depend,dependencies,1610,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369601161,2,['depend'],['dependencies']
Integrability,cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 46 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:887 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1272:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-545300649:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-545300649,1,['message'],['message']
Integrability,cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 38 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:887 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1272:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-545186399:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-545186399,1,['message'],['message']
Integrability,cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 38 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546606703:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546606703,1,['message'],['message']
Integrability,cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 46 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546694603:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546694603,1,['message'],['message']
Integrability,cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 62 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546705079:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546705079,1,['message'],['message']
Integrability,cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 78 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:887 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1272:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-545436942:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-545436942,1,['message'],['message']
Integrability,cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 78 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546613502:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546613502,1,['message'],['message']
Integrability,ction_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.directory.roottest_root_io_directory_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.io/directory/roottest_root_io_directory_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/). And 22 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1348#issuecomment-345679975:2680,interface,interface,2680,https://root.cern,https://github.com/root-project/root/pull/1348#issuecomment-345679975,1,['interface'],['interface']
Integrability,"cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>""; ==652727== Memcheck, a memory error detector; ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.; ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info; ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>; ==652727== ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |; | From heads/master@tags/v6-30-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s); ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== by 0xA9E4F46: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2166043260:1201,depend,depends,1201,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2166043260,1,['depend'],['depends']
Integrability,"d [-Wbidirectional=] ; - [2021-11-30T07:31:27.486Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:31:27.486Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:32:09.170Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:32:09.170Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368250:2052,synchroniz,synchronizeParameterSettings,2052,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368250,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"d-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-30T07:31:37.755Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:31:37.755Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:31:37.755Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/TestStatistics/testLikelihoodGradientJob.cpp:467:53: warning: declaration of ‘likelihood’ shadows a member of ‘LikelihoodSimBinnedConstrainedTest_ConstrainedAndOffset_Test’ [-Wshadow] . And 1 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982359449:3908,synchroniz,synchronizeParameterSettings,3908,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982359449,2,['synchroniz'],['synchronizeParameterSettings']
Integrability,"d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 1184 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52311/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_aclicDataMemberSelection/); - [projectroot.roottest.root.meta.evolution.version5.roottest_root_meta_evolution_version5_execNestedColl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52311/testReport/projectroot.roottest.root.meta.evolution/version5/roottest_root_meta_evolution_version5_execNestedColl/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2983#issuecomment-457425291:2426,depend,depends,2426,https://root.cern,https://github.com/root-project/root/pull/2983#issuecomment-457425291,1,['depend'],['depends']
Integrability,d/roofit/roofitcore/G__RooFitCore.cxx /mnt/build/workspace/root-pullrequests-build/build/lib/libRooFitCore_rdict.pcm /mnt/build/workspace/root-pullrequests-build/build/lib/libRooFitCore.rootmap ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:32:13: error: typedef redefinition with different types ('IMultiGenFunctionTempl&lt;double&gt;' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:38:42: error: typedef redefinition with different types ('ROOT::Math::IBaseFunctionMultiDim' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:154:37: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:174:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:180:43: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:193:40: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:215:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:219:43: error: only virtual member functions can be marked 'override' . ### Warnings:; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDataSource.hxx:213:11: warning: unknown attribute 'REMOVE_THIS_NOW,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373548076:1453,Wrap,WrappedFunction,1453,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373548076,1,['Wrap'],['WrappedFunction']
Integrability,"d/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3299:25: error: expected primary-expression before ‘&gt;’ token ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3299:27: error: ‘mask2’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3300:25: error: expected primary-expression before ‘&gt;’ token ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3300:27: error: ‘mask3’ was not declared in this scope . And 64 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-ini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400713921:1988,depend,depends,1988,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400713921,2,['depend'],['depends']
Integrability,"d: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzE4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzM4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; collect2: error: ld returned 1 exit status; math/genvector/CMakeFiles/GenVector.dir/build.make:363: recipe for target 'lib/libGenVector.so' failed; make[2]: *** [lib/libGenVector.so] Error 1; CMakeFiles/Makefile2:41978: recipe for target 'math/genvector/CMakeFiles/GenVector.dir/all' failed; make[1]: *** [math/genvector/CMakeFiles/GenVector.dir/all] Error 2; Makefile:165: recipe for target 'all' failed; ```. </details>. > So, so far, my best guess (because I don't understand 'what' it really does) is that [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) has the side effect of destroying/replacing the partial desugaring.; > ; > I would have expected the change to be much closer to part that generate the (partial) output for this kind of type/value and/or to be an extension in the partial desugaring routines.; > ; > (As a side note, I have a vague memory that we already solved a similar problem in the past but can not find (yet?) the solution (if any) in the repository). I do not see how that is affecting the desugaring but I have not debugged this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1136423157:25396,rout,routines,25396,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157,2,['rout'],['routines']
Integrability,"d_library(VDT::VDT UNKNOWN IMPORTED GLOBAL); + set_target_properties(VDT::VDT; + PROPERTIES; + IMPORTED_LOCATION ""${VDT_LIBRARIES}""; + INTERFACE_INCLUDE_DIRECTORIES ""${VDT_INCLUDE_DIRS}""; + ); endif(); endif(); ```. - At this point you could simplify the build configuration to:. ```diff; diff --git a/math/vecops/CMakeLists.txt b/math/vecops/CMakeLists.txt; index 09fde3eb40..e15b5ea186 100644; --- a/math/vecops/CMakeLists.txt; +++ b/math/vecops/CMakeLists.txt; @@ -8,10 +8,6 @@; # CMakeLists.txt file for building ROOT math/vecops package; ############################################################################; ; -if(builtin_vdt); - link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY}); -endif(); -; ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; HEADERS; ROOT/RVec.hxx; @@ -24,13 +20,7 @@ ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; ); ; if(builtin_vdt OR vdt); - target_include_directories(ROOTVecOps PRIVATE ${VDT_INCLUDE_DIRS} INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>); -endif(); -; -if(builtin_vdt); - target_link_libraries(ROOTVecOps PRIVATE ${VDT_LIBRARIES}); -elseif(vdt); - target_link_libraries(ROOTVecOps PUBLIC ${VDT_LIBRARIES}); + target_link_libraries(ROOTVecOps PUBLIC VDT::VDT); endif(); ; if(MSVC); ```. - Finally, you would have to ensure that `find_package(ROOT)` would look for VDT if it needs to. Like:. ```diff; diff --git a/cmake/scripts/ROOTConfig.cmake.in b/cmake/scripts/ROOTConfig.cmake.in; index 54f1a17140..054954ac8c 100644; --- a/cmake/scripts/ROOTConfig.cmake.in; +++ b/cmake/scripts/ROOTConfig.cmake.in; @@ -97,6 +97,9 @@ if(ROOT_minuit2_omp_FOUND); find_dependency(OpenMP); find_dependency(Threads); endif(); +if(@vdt@ OR @builtin_vdt@); + find_dependency(Vdt); +endif(); ; #----------------------------------------------------------------------------; # Now set them to ROOT_LIBRARIES; ```. Though on this latter part I wasn't sure how you prefer to pass configuration options from the build to the generated `ROOTConfig.cmake` file. :thinking:. 2. Just u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797#issuecomment-1339057027:1699,INTERFACE,INTERFACE,1699,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339057027,1,['INTERFACE'],['INTERFACE']
Integrability,dation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/macosx/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/winnt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/mnt/build/workspace/root-pullrequests-build/root/builtins/xxhash -I/mnt/build/workspace/root-pullrequests-build/root/builtins/lz4 -I/mnt/build/workspace/root-pullrequests-build/root/builtins/zlib -writeEmptyRootPCM -DSYSTEM_TYPE_unix ROOT/StringConv.hxx ROOT/TExecutor.hxx ROOT/TSequentialExecutor.hxx Buttons.h Bytes.h Byteswap.h Gtypes.h GuiTypes.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TApplicationImp.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBrowser.h TBrowserImp.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TCanvasImp.h TColorGradient.h TColor.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TDatime.h TDirectory.h TEnv.h TError.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TGuiFactory.h TInetAddress.h TInspectorImp.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjectSpy.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4120#issuecomment-515038284:3003,Message,MessageTypes,3003,https://root.cern,https://github.com/root-project/root/pull/4120#issuecomment-515038284,3,['Message'],['MessageTypes']
Integrability,"dden [-Woverloaded-virtual] ; - [2021-11-30T07:30:53.680Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiPro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982359449:2560,synchroniz,synchronizeParameterSettings,2560,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982359449,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"dden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-30T07:31:37.755Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:31:37.755Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982359449:3269,synchroniz,synchronizeParameterSettings,3269,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982359449,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,de -compilerI/usr/lib/clang/14.0.5/include -compilerI/usr/include -I/home/mkrzewic/src/root_build/include -I/home/mkrzewic/src/root_build/ginclude -I/home/mkrzewic/src/root_src/core/base/inc -I/home/mkrzewic/src/root_src/core/foundation/inc -I/home/mkrzewic/src/root_src/core/cont/inc -I/home/mkrzewic/src/root_src/core/gui/inc -I/home/mkrzewic/src/root_src/core/meta/inc -I/home/mkrzewic/src/root_src/core/clib/inc -I/home/mkrzewic/src/root_src/core/rint/inc -I/home/mkrzewic/src/root_src/core/zip/inc -I/home/mkrzewic/src/root_src/core/thread/inc -I/home/mkrzewic/src/root_src/core/textinput/inc -I/home/mkrzewic/src/root_src/core/clingutils/inc -I/home/mkrzewic/src/root_src/core/base/v7/inc -I/home/mkrzewic/src/root_src/core/foundation/v7/inc -I/home/mkrzewic/src/root_src/core/unix/inc -I/usr/local/include -I/home/mkrzewic/src/root_src/builtins/xxhash -I/usr/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1537529063:2984,Message,MessageTypes,2984,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1537529063,1,['Message'],['MessageTypes']
Integrability,"dear @guitargeek . It seems that my project has one more problem with new cppyy.; While I am trying to prepare ""easy"" reproducer, I need to ask you some advice/recipe.; The issue is with ""python""-RooAbsPdf. I need to have a RooAbdPdf class with the major; method implemented in python. Previously I have such solution, but with new cppyy; I've got two problems - first, and the drawing phase, there are error messages ; that servers are not redirected. ButI have ""correct"" fit results and the plot. ; And, the main problem is that at the end of the script the program stalls -; likely in ROOT finalization. ; It is not easy to make short, simple & easy reproducer, but I'll try to do it asap.; But, might be it is a known issue? ; What is the ""correct/recommended"" way for implementation of such ""hybrid"" pythonic RooAbdPdf?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15085#issuecomment-2029462023:409,message,messages,409,https://root.cern,https://github.com/root-project/root/issues/15085#issuecomment-2029462023,2,['message'],['messages']
Integrability,dedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: con,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-596563785:1313,interface,interface,1313,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-596563785,1,['interface'],['interface']
Integrability,"dentify libraries that could be loaded to provide the requested symbols, and record their paths but do not load them yet. Instead you should record a map of libraries to the symbols they provide. E.g. [ ( ""liba.so"", [ ""foo"", ""bar"" ] ), ( ""libb.so"", [ ""baz"" ] ) ]. For each library/symbol-set pair you can install a custom MaterializationUnit using JITDylib::define.; Step 2: In the custom MaterializationUnit's materialize function you'll walk the map from before, do the library load, and then resolve the symbols. Since step 2 happens outside the session lock the idea is that it should prevent the kind of deadlock that you're seeing. Unfortunately if you can reference JIT'd code from static initializers in precompiled code then there's still a chance for similar failures. Consider a precompiled ""libx.so"" containing a global ""x"" and a static constructor that calls a JIT'd function ""f"" which uses the ""x"" from ""libx.so"" (a circular reference). I believe this will result in starvation or deadlock (depending on the number of threads involved). The failure path looks like this:. 1. A lookup for ""x"" enters the generator, which discovers that ""libx.so"" provides ""x"" and creates a MaterializationUnit, MU, to load ""libx.so"" and resolve ""x"".; 2.1 Outside the lock, MU dlopens ""libx.so""... ; 2.2. dlopen runs the initializers for ""libx.so"" which triggers a lookup in the JIT for ""f"".; 2.2.1. The lookup for ""f"" finds and runs the materializer for ""f"".; 2.2.2. The materializer for ""f"" reaches JITLink, which tries to resolve symbol ""x"". There is no work to trigger (we started materializing it already in (2.1)), so the link is suspended pending resolution of ""x"". Critically, the dlopen cannot complete until the link completes.; 2.2. MU would dlsym ""x"", but it's blocked waiting on the dlopen to finish. And we're deadlocked again. The root cause of the problem is that ld.so and the JIT don't communicate immediately about symbol resolutions. What we really wanted was for the dlopen to registe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1104564382:1649,depend,depending,1649,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1104564382,1,['depend'],['depending']
Integrability,"dir/src/VariableSelectionRule.cxx.o ../../dictgen/CMakeFiles/Dictgen.dir/src/XMLReader.cxx.o CMakeFiles/MetaCling.dir/rootclingTCling.cxx.o CMakeFiles/MetaCling.dir/ClingRAII.cxx.o CMakeFiles/MetaCling.dir/TCling.cxx.o CMakeFiles/MetaCling.dir/TClingBaseClassInfo.cxx.o CMakeFiles/MetaCling.dir/TClingCallbacks.cxx.o CMakeFiles/MetaCling.dir/TClingCallFunc.cxx.o CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o CMakeFiles/MetaCling.dir/TClingDataMemberInfo.cxx.o CMakeFiles/MetaCling.dir/TClingDeclInfo.cxx.o CMakeFiles/MetaCling.dir/TClingDiagnostics.cxx.o CMakeFiles/MetaCling.dir/TClingMemberIter.cxx.o CMakeFiles/MetaCling.dir/TClingMethodArgInfo.cxx.o CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o CMakeFiles/MetaCling.dir/TClingValue.cxx.o -Wl,-rpath,:::::::::::::::::::::::: -Wl,--unresolved-symbols=ignore-in-object-files ; ```; 2. When linking the executable a built time - dependent on `--no-undefined` in the CMAKE_EXE_LINKER_FLAGS; 3. At runtime at startup, when the runtime linker uses LD_BIND_NOW (man ld.so) - either set via env variable, or by default with `-Wl,-z,now`; 4. At runtime when the symbol is used the first time (without LD_BIND_NOW). > Unfortunately I cannot reproduce this on my end. It's correct that only a few files are compiled with `-fno-rtti`, all others including `TCling.cxx` interface with the rest of ROOT and must be built with RTTI. They should never contain code that references RTTI of LLVM classes, and while it's possible that we overlooked something I don't quite understand why we can only observe the problem in very limited environments... See above for what has been overlooked. `TCling.cxx` calls the `ScopeInfo` dtor, and thus references its vtable. Are you using Clang or GCC for compiling? Which version?. Have you verified `-Wl,--no-undefined` is actually used when linking `rootcling`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1207946705:3153,depend,dependent,3153,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1207946705,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"dk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 Apr 30 18:16 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 Sep 16 20:47 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 Aug 21 11:15 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 Sep 16 20:47 MacOSX15.sdk -> MacOSX15.0.sdk. $ clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/stognini -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:1545,contract,contract,1545,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,2,['contract'],['contract']
Integrability,"dk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 Sep 25 18:33 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 Sep 25 18:29 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 Sep 25 18:31 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 Sep 25 18:29 MacOSX15.sdk -> MacOSX15.0.sdk; + clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.module -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Applications/Xcode.app/Contents/Developer/Pla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:1813,contract,contract,1813,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,2,['contract'],['contract']
Integrability,"doing more complex analyses with RDF. the first line of the [RDF docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html) says `ROOT's RDataFrame offers a high level interface for analyses of data stored in TTree, CSV's and other data formats. `. Just by the fact that I can read and process other formats than TTree I would say that in general RDF is not meant to be treated like a TTree. Otherwise I would also have to say that RDF is meant to be treated like a CSV file or something similar. I did not refer to the documentation but to how people would actually use this class. 99% of people do not read CSV files with ROOT and `RDataFrame` will be mostly used to interact in a simple and quick way with trees. > ; > > there should be a function that allows us to merge them; > ; > If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing datasets; > df_1=ROOT.RDataFrame('tree', file_path_1); > df_2=ROOT.RDataFrame('tree', file_path_2); > ; > # creating new columns in the datasets; > df_1=df_1.Define('identity', '+1'); > df_2=df_2.Define('identity', '+2'); > ; > # Merging the datasets in memory; > df_3 = df_1.Merge(df_2); > # Opening a new file and save the merged dataset into the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-927331768:1375,interface,interface,1375,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768,2,['interface'],['interface']
Integrability,doing the merge resolution through the git interface did not workout well :( ... . @bellenot Can you rebase this branch? Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3335#issuecomment-461148969:43,interface,interface,43,https://root.cern,https://github.com/root-project/root/pull/3335#issuecomment-461148969,1,['interface'],['interface']
Integrability,"dule 'ROOTGpadv7' as '/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/ROOTGpadv7.pcm' [-Rmodule-build]; 14:16:07 #include <ROOT/TPadPainter.hxx>; 14:16:07 ^; 14:16:07 Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to; 14:16:07 generate the dictionary for ROOTGpadv7 or mark the C++ module as a system; 14:16:07 module if you provided your own system modulemap file:; 14:16:07 ROOTGpadv7 [system] { ... }; 14:16:07 While building module 'ROOTGraphicsPrimitives':; 14:16:07 While building module 'ROOTGpadv7' imported from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:; 14:16:07 In file included from <module-includes>:1:; 14:16:07 In file included from /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TCanvas.hxx:19:; 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives; 14:16:07 #include ""ROOT/TDrawingAttr.hxx""; 14:16:07 ^; 14:16:07 In file included from input_line_13:10:; 14:16:07 /mnt/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/TLine.hxx:23:10: fatal error: could not build module 'ROOTGpadv7'; 14:16:07 #include <ROOT/TPadPainter.hxx>; 14:16:07 ~~~~~~~~^; 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h); 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so; ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2091#issuecomment-392598607:1114,depend,dependency,1114,https://root.cern,https://github.com/root-project/root/pull/2091#issuecomment-392598607,1,['depend'],['dependency']
Integrability,"e (found version ""0.4"") ; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/hdd1/krasznaa/projects/root/buildtest; [bash][pcadp04]:buildtest >; ```. Wile previously it failed. ```; [bash][pcadp04]:buildtest > cmake -DROOT_DIR=/mnt/hdd1/krasznaa/projects/root/install/cmake ../findtester/; -- The CXX compiler identification is GNU 11.3.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; CMake Warning (dev) at /usr/share/cmake/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Policy CMP0074 is not set: find_package uses <PackageName>_ROOT variables.; Run ""cmake --help-policy CMP0074"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning. CMake variable Vdt_ROOT is set to:. /mnt/hdd1/krasznaa/projects/root/install/cmake/.. For compatibility, CMake is ignoring the variable.; Call Stack (most recent call first):; /mnt/hdd1/krasznaa/projects/root/install/cmake/ROOTConfig.cmake:140 (find_dependency); CMakeLists.txt:5 (find_package); This warning is for project developers. Use -Wno-dev to suppress it. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /mnt/hdd1/krasznaa/projects/root/install/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /mnt/hdd1/krasznaa/projects/root/install/cmake/ROOTConfig.cmake:140 (find_dependency); CMakeLists.txt:5 (find_package). -- Configuring incomplete, errors occurred!; See also ""/mnt/hdd1/krasznaa/projects/root/buildtest/CMakeFiles/CMakeOutput.log"".; [bash][pcadp04]:buildtest >; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14178#issuecomment-1840829056:2054,message,message,2054,https://root.cern,https://github.com/root-project/root/pull/14178#issuecomment-1840829056,1,['message'],['message']
Integrability,e -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -writeEmptyRootPCM Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFunc.h Math/PdfFuncMathCore.h Math/ProbFunc.h Math/ProbFuncMathCore.h Math/QuantFunc.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/io,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4346#issuecomment-528976735:3479,Integrat,IntegratorOptions,3479,https://root.cern,https://github.com/root-project/root/pull/4346#issuecomment-528976735,5,['Integrat'],['IntegratorOptions']
Integrability,"e ; -- Looking for gl2ps; -- Found gl2ps: /nix/store/lvm73632hn805cfwnrfqvy3zqcbn0z6k-gl2ps-1.4.2/lib/libgl2ps.so ; -- Looking for LibXml2; -- Found LibXml2: /nix/store/6pcf2hzn0d4kjddj8v2rzkpr99wwnfx9-libxml2-2.10.3/lib/libxml2.so (found version ""2.10.3"") ; -- Found OpenSSL: /nix/store/gw4hdapx2kipvjlwm8r4vg356abbi9xd-openssl-3.0.7/lib/libcrypto.so (found version ""3.0.7"") ; -- Looking for XROOTD; -- Found untagged Xrootd version: assuming very recent (setting -DROOTXRDVERS=1000000000); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- libXrdClient not found: use built-in; -- include_dirs: /nix/store/7g904n4vqsj77r8rmyxbrx0iza8sa4bw-xrootd-5.5.1-dev/include/xrootd;/build/source/proof/xrdinc; -- libraries: /nix/store/8ajjky60vk5dbrgciyppc8sw3dkrwb60-xrootd-5.5.1/lib/libXrdUtils.so;/nix/store/8ajjky60vk5dbrgciyppc8sw3dkrwb60-xrootd-5.5.1/lib/libXrdCl.so; -- Found FTGL: /nix/store/n8xnr87zp15xf74y52cprqy5ppk20wpp-ftgl-2.4.0/include ; -- Found PkgConfig: /nix/store/v73ppkjk196bwsjm6yy9yv80bdq7q68v-pkg-config-wrapper-0.29.2/bin/pkg-config (found version ""0.29.2"") ; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.8.3; -- Looking for TBB; -- Found TBB: /nix/store/2d2lhp3b4fwva16v4hnxswwc99z0k3ab-tbb-2020.3 (found suitable version ""2020.3"", minimum required is ""2018"") ; -- Performing Test tbb_exception_result; -- Performing Test tbb_exception_result - Success; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /nix/store/ar32z43050rasr218cqpg2lpk18axhrq-openblas-0.3.21/lib/libopenblas.so ; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Found LLVM_CONFIG as /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/bin/llvm-config; -- External llvm built in Release mod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:13158,wrap,wrapper-,13158,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['wrap'],['wrapper-']
Integrability,"e class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events; (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM.; (C++ compiled) struct CpuInfo_t //CPU load information.; (C++ compiled) struct MemInfo_t //Memory utilization information.; (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases; (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching.; (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens.; (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators; (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes; (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class; (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor; (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument; (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:3437,Wrap,Wrapper,3437,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,1,['Wrap'],['Wrapper']
Integrability,e compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.dir\Release\SearchableTableEmitter.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.vcxproj] ; - [2020-05-12T16:06:25.569Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\utils\TableGen\PseudoLoweringEmitter.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.dir\Release\PseudoLoweringEmitter.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\utils\TableGen\obj.llvm-tblgen.vcxproj] ; - [2020-05-12T16:06:48.489Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/OPENUI5-prefix/src/OPENUI5-stamp/extract-OPENUI5.cmake:33 (message): ; - [2020-05-12T16:06:52.651Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-build-Release.cmake:49 (message): ; - [2020-05-12T16:06:57.225Z] CMake Error at CFITSIO-stamp/CFITSIO-download-Release.cmake:49 (message): ; - [2020-05-12T16:07:02.220Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/builtins/pcre/PCRE-prefix/src/PCRE-stamp/PCRE-configure-Release.cmake:49 (message): ; - [2020-05-12T16:07:02.512Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/googletest-prefix/src/googletest-stamp/googletest-configure-Release.cmake:49 (message): ; - [2020-05-12T16:07:02.807Z] obj.clang-tblgen.dir\Release\obj.clang-tblgen.lib : fatal error LNK1108: cannot write file at 0x10000 [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj] ; - [2020-05-12T16:07:04.575Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5603#issuecomment-627439886:2381,message,message,2381,https://root.cern,https://github.com/root-project/root/pull/5603#issuecomment-627439886,5,['message'],['message']
Integrability,"e grid. We do need to postprocess these ntuples anyway, so the idea is to slip in a small function to add this index. ; > ; > * calculate the index from the value of `rdfentry_`, knowing how many entries are in each tree and their ordering inside the TChain. It is dangerous and requires adding too many lines of code. > * store some unique identifier in each tree when it's produced (even a timestamp works, and although it's not elegant you don't have to worry about having that same value stored in each event because it will compress almost perfectly, occupying very little extra space on disk). With that unique identifier per tree you can build another tree that serves as a lookup table between id and index. It will have two branches, `id` and `index`, with the first taking the values of the ids of each tree and the second being an index from 0 to nTrees-1. Then you can use `TTree::BuildIndex` and `TChain::AddFriend` to add that lookup table tree as a friend of the original chain and thanks to `BuildIndex` the correct value of `index` will be returned for each event depending on the value of `id` in the original chain. More info at https://root.cern/manual/trees/#indexing-trees. We would have to run again all the jobs in the grid to store a unique ID. However the name of the file identifies it, so we deduce the index with the filename. The rest of the solution is close to what I did below.; ; > * do a pass on each input tree to calculate whatever other quantities you need to calculate (let's call these trees `aux1`, `aux2` etc.), then make a TChain out of the original trees, another TChain out of the `aux` trees, and then add the second chain as a friend of the first (effectively creating a single large ""virtual"" TTree with everything in it). OK, that is closer to what we need, I managed to get the code below to add these indexes in a slightly different way from what you said (or maybe the same if I misunderstood you), i.e. using chains and friend trees:. ```python; im",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-932494638:1807,depend,depending,1807,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638,2,['depend'],['depending']
Integrability,"e issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a ; ```python; print(client.scheduler_info()); ```; call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to this kind of effect, so in the linked PR I made the check a bit stronger s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9429#issuecomment-992489655:1003,interface,interface,1003,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992489655,1,['interface'],['interface']
Integrability,e output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/63576/console).; ### Errors:; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - CMake Error at VDT-stamp/VDT-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - CMake Error at TBB-stamp/TBB-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - CMake Error at VC-stamp/VC-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/work,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4097#issuecomment-512765959:944,message,message,944,https://root.cern,https://github.com/root-project/root/pull/4097#issuecomment-512765959,1,['message'],['message']
Integrability,"e possible, have full felxibility and stay consistent with the other TGraph classes which are all using pointers for 1D arrays. Nevertheless I understand your concerns since double pointers for arrays are a rather dirty way of programming. I think it might be a good compromise to use the ROOT array wrapper class TArrayD. Then the two dimensional Arrays could be represented by an 1D array of TArrayD objects. The functions SetPointEY, SetPointEYL and SetPointEYH were implemented by me to keep full consistency with the TGraphAsymmErrors class. They are overloaded with one version taking the point and an array in which case the array cointains all errors of the named point for the different dimensions. My idea was to alter the TGraphAsymmErrors notation as little as possible so TGraphAsymmErrors::SetPointEY(i, el, eh) would translate to TGraphMultiErrors::SetPointEY(i, &el, &ey) in the case of only one error dimension which would be equal to a TGraphAsymmErrors. The idea of the function SetDimensionEY, SetDimensionEYL and SetDimensionEYH is basically the same. They set the errors of all points in the given dimension. My idea was to think of a way to convert from multiple TGraphAsymmErrors objects to one single TGraphMultiErrors object like in this small example:; ```; TGraphAsymmErrors* statisticErrors = ...; TGraphAsymmErrors* systematicErrors = ... TGraphMultiErrors* theGraph = new TGraphMultiErrors(statisticErrors->GetN(), 2, statisticErrors->GetX(), statisticErrors->GetY(), statisticErrors->GetEXlow(), statisticErrors->GetEXhigh());; theGraph->SetDimensionEY(0, statisticErrors->GetEYlow(), statisticErrors->GetEYhigh());; theGraph->SetDimensionEY(1, systematicErrors->GetEYlow(), systematicErrors->GetEYhigh());; ```. But again I see your point since there is no check whether the passed array has a sufficient size. Maybe here it would also be a good solution to use the wrapper class TArrayD instead since it provides the neccessary information and is rather lightweight.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-516408489:2122,wrap,wrapper,2122,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-516408489,1,['wrap'],['wrapper']
Integrability,"e same, while ""on demand"" goes to 41. This also results in a 60MB jump in memory:. ```bash; → ROOTDEBUG=7 root.exe -l -b -q ~/public/AO2D.root 2>&1 | grep Preloading | wc -l; 120. → ROOTDEBUG=7 root.exe -l -b -q ~/public/AO2D.root 2>&1 | grep 'on demand' | cut -d' ' -f 2 | sort | uniq | wc -l; 41. → /usr/bin/time -v root.exe -l -b -q ~/public/AO2D.root. Attaching file /afs/cern.ch/user/e/eulisse/public/AO2D.root as _file0...; (TFile *) 0x3910f20; Command exited with non-zero status 255; Command being timed: ""root.exe -l -b -q /afs/cern.ch/user/e/eulisse/public/AO2D.root""; User time (seconds): 0.42; System time (seconds): 0.30; Percent of CPU this job got: 72%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:01.01; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 207928; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 76766; Voluntary context switches: 9921; Involuntary context switches: 28; Swaps: 0; File system inputs: 0; File system outputs: 0; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 255; ```. The difference indeed seems to come from loading SOFIE and PyMVA on demand (why?). ```bash; → diff -Naur =(ROOTDEBUG=7 root.exe -l -b -q ~/public/AO2D.root 2>&1 | grep Preloading) =(ROOTDEBUG=7 root.exe -l -b -q 2>&1 | grep Preloading); --- /tmp/zsh3krahi 2023-06-28 09:47:35.214307973 +0200; +++ /tmp/zshDEGUqN 2023-06-28 09:47:35.843315522 +0200; @@ -117,4 +117,3 @@; Info in <TCling::__LoadModule>: Preloading module MultiProc.; Info in <TCling::__LoadModule>: Preloading module Imt.; Info in <TCling::__LoadModule>: Preloading module MathCore.; -Info in <TCling::__LoadModule>: Preloading module Tree.; ```. ```bash; → diff -Naur =(ROOTDEBUG=7 root.exe -l -b -q ~/public/AO2D.root 2>&1 | grep 'on demand' | cut -d'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1611006906:3301,message,messages,3301,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1611006906,2,['message'],['messages']
Integrability,e specified comparator type does not provide a const call operator [-Wuser-defined-warnings] ; - /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__tree:1819:22: warning: the specified comparator type does not provide a const call operator [-Wuser-defined-warnings] . ### Failing tests:; - [projectroot.roottest.cling.bytecode.roottest_cling_bytecode_runarrayhist_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.cling/bytecode/roottest_cling_bytecode_runarrayhist_WILL_FAIL/); - [projectroot.roottest.root.hist.roottest_root_hist_mergeTH2Poly](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root/hist/roottest_root_hist_mergeTH2Poly/); - [projectroot.test.test_stressfit_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot/test/test_stressfit_interpreted/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execBrowseNonAccessibleType](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execBrowseNonAccessibleType/); - [projectroot.roottest.root.multicore.roottest_root_multicore_exectstformula](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_exectstformula/); - [projectroot.roottest.root.multicore.roottest_root_multicore_TThreadedObjectAutoMemManagement](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23101/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_TThreadedObjectAutoMemManagement/); - [projectroot.roottest.root.tree.reader.rootte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1911#issuecomment-384237158:1488,interface,interface,1488,https://root.cern,https://github.com/root-project/root/pull/1911#issuecomment-384237158,1,['interface'],['interface']
Integrability,"e to a negative value causing that many clusters of baskets kept in memory Just some indentation changes.; pick c25ea30332 Make some clang format changes; pick dae3241bee Fix whitespace; pick baa80f53a4 Fix memory leak; pick a8324c92ee Undo TBranch version change, thanks Philippe.; ```. Then, you can change the commits you want to fuse from `pick` to `fixup`, which will combine them with the previous commit, like this:. ```; pick ede15457be Adding new option to set MaxVirtualSize to a negative value causing one cluster of baskets kept in memory; fixup 3035c73a31 Adding new option to set MaxVirtualSize to a negative value causing that many clusters of baskets kept in memory; fixup 275d909504 Adding new option to set MaxVirtualSize to a negative value causing that many clusters of baskets kept in memory Just some indentation changes.; fixup c25ea30332 Make some clang format changes; fixup dae3241bee Fix whitespace; fixup baa80f53a4 Fix memory leak; fixup a8324c92ee Undo TBranch version change, thanks Philippe.; ```. Then you save and quit, and git will rebase for you, leaving you with a single commit:. ```; commit 304f38e812556a7d8c4dcaaf5a71fca4d3ba9bf2; Author: Peter van Gemmeren <gemmeren@anl.gov>; Date: Tue Jul 18 17:47:58 2017 -0500. Adding new option to set MaxVirtualSize to a negative value causing one cluster of baskets kept in memory; ```. Since the message is quite long, I also did `git commit --amend`, which lets you edit your message and save it. At the end, I have this:. ```; commit 891b51caa6089e13997e2d2e0aa25f869970e878; Author: Peter van Gemmeren <gemmeren@anl.gov>; Date: Tue Jul 18 17:47:58 2017 -0500. [TBranch] Add new option to help in keeping baskets in memory; ; Set MaxVirtualSize to a negative value causing one cluster of baskets; kept in memory.; ```. The final commit has all the changes combined, and a nice short message and separate long explanation. Let me know if you have any problems reproducing, otherwise I can do this at the end. Cheers,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796#issuecomment-317761739:2023,message,message,2023,https://root.cern,https://github.com/root-project/root/pull/796#issuecomment-317761739,3,['message'],['message']
Integrability,"e.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/13.0.0/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -I/Users/suter_a/Applications/root/root_exec/include -I/opt/local/include -I/Users/suter_a/Applications/musrfit/src/include -I/Users/suter_a/Applications/musrfit/src/classes PUserFcnBase.h /Users/suter_a/Applications/musrfit/src/include/PUserFcnBaseLinkDef.h; cd /Users/suter_a/Applications/musrfit/build && /opt/local/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/suter_a/Applications/musrfit /Users/suter_a/Applications/musrfit/src/classes /Users/suter_a/Applications/musrfit/build /Users/suter_a/Applications/musrfit/build/src/classes /Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake --color=; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/CMakeDirectoryInformation.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Scanning dependencies of target PUserFcnBase; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/classes/CMakeFiles/PUserFcnBase.dir/build.make src/classes/CMakeFiles/PUserFcnBase.dir/build; ... And all the further root_generate_dictionary work as well. Does this help?. Cheers,; Andreas. PS: Machine I have tested it on: ; Darwin Kernel Version 21.3.0: Wed Jan 5 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_ARM64_T8101 arm64. ________________________________. Paul Scherrer Institut. Dr. Andreas Suter; Laboratory for Muon-Spin Spectroscopy; Swiss M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1061481610:4280,Depend,Dependee,4280,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1061481610,1,['Depend'],['Dependee']
Integrability,e/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.036Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.297Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.557Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.817Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:28.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.858Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:30.685Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 55 more. ### Failing tests:; - [projectroot.roottest.root.d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803932665:1386,Interface,InterfaceUtils,1386,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803932665,1,['Interface'],['InterfaceUtils']
Integrability,e/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.297Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.557Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.817Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:28.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.858Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:30.685Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 55 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803932665:1589,Interface,InterfaceUtils,1589,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803932665,1,['Interface'],['InterfaceUtils']
Integrability,e/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.557Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.817Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:28.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.858Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:30.685Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 55 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803932665:1792,Interface,InterfaceUtils,1792,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803932665,1,['Interface'],['InterfaceUtils']
Integrability,e/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:26.817Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:28.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.858Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:30.685Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 55 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803932665:1995,Interface,InterfaceUtils,1995,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803932665,1,['Interface'],['InterfaceUtils']
Integrability,e/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:28.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.591Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:29.858Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:08:30.685Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 55 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.ce,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803932665:2198,Interface,InterfaceUtils,2198,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803932665,1,['Interface'],['InterfaceUtils']
Integrability,e/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -I/usr/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/gpad/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc ROOT/RCsvDS.hxx ROOT/RDataFrame.hxx ROOT/RDataSource.hxx ROOT/RDFHelpers.hxx ROOT/RLazyDS.hxx ROOT/RResultHandle.hxx ROOT/RResultPtr.hxx ROOT/RRootDS.hxx ROOT/RSnapshotOptions.hxx ROOT/RTrivialDS.hxx ROOT/RDF/ActionHelpers.hxx ROOT/RDF/ColumnReaderUtils.hxx ROOT/RDF/GraphNode.hxx ROOT/RDF/GraphUtils.hxx ROOT/RDF/HistoModels.hxx ROOT/RDF/InterfaceUtils.hxx ROOT/RDF/RActionBase.hxx ROOT/RDF/RAction.hxx ROOT/RDF/RActionImpl.hxx ROOT/RDF/RColumnRegister.hxx ROOT/RDF/RNewSampleNotifier.hxx ROOT/RDF/RSampleInfo.hxx ROOT/RDF/RDefineBase.hxx ROOT/RDF/RDefine.hxx ROOT/RDF/RDefineReader.hxx ROOT/RDF/RDSColumnReader.hxx ROOT/RDF/RColumnReaderBase.hxx ROOT/RDF/RCutFlowReport.hxx ROOT/RDF/RDisplay.hxx ROOT/RDF/RFilterBase.hxx ROOT/RDF/RFilter.hxx ROOT/RDF/RInterface.hxx ROOT/RDF/RJittedAction.hxx ROOT/RDF/RJittedDefine.hxx ROOT/RDF/RJittedFilter.hxx ROOT/RDF/RJittedVariation.hxx ROOT/RDF/RLazyDSImpl.hxx ROOT/RDF/RLoopManager.hxx ROOT/RDF/RMergeableValue.hxx ROOT/RDF/RNodeBase.hxx ROOT/RDF/RRangeBase.hxx ROOT/RDF/RRange.hxx ROOT/RDF/RResultMap.hxx ROOT/RDF/RSlotStack.hxx ROOT/RDF/RTreeColumnReader.hxx ROOT/RDF/RVariation.hxx ROOT/RDF/RVariationBase.hxx ROOT/RDF/RVariationReader.hxx ROOT/RDF/RVariationsDescription.hxx ROOT/RDF/RVariedAction.hxx ROOT/RDF/Utils.hxx ROOT/RDF/PyROOTHelpers.hxx ROOT/RDF/RDFDescription.hxx ROOT/RSqliteDS.h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675#issuecomment-1145981138:4301,Interface,InterfaceUtils,4301,https://root.cern,https://github.com/root-project/root/pull/8675#issuecomment-1145981138,1,['Interface'],['InterfaceUtils']
Integrability,e/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -I/usr/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/gpad/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc ROOT/RCsvDS.hxx ROOT/RDataFrame.hxx ROOT/RDataSource.hxx ROOT/RDFHelpers.hxx ROOT/RLazyDS.hxx ROOT/RResultPtr.hxx ROOT/RResultHandle.hxx ROOT/RRootDS.hxx ROOT/RSnapshotOptions.hxx ROOT/RTrivialDS.hxx ROOT/RDF/ActionHelpers.hxx ROOT/RDF/ColumnReaderUtils.hxx ROOT/RDF/GraphNode.hxx ROOT/RDF/GraphUtils.hxx ROOT/RDF/HistoModels.hxx ROOT/RDF/InterfaceUtils.hxx ROOT/RDF/RActionBase.hxx ROOT/RDF/RAction.hxx ROOT/RDF/RBookedDefines.hxx ROOT/RDF/RNewSampleNotifier.hxx ROOT/RDF/RSampleInfo.hxx ROOT/RDF/RDefineBase.hxx ROOT/RDF/RDefine.hxx ROOT/RDF/RDefineReader.hxx ROOT/RDF/RDSColumnReader.hxx ROOT/RDF/RColumnReaderBase.hxx ROOT/RDF/RCutFlowReport.hxx ROOT/RDF/RDisplay.hxx ROOT/RDF/RFilterBase.hxx ROOT/RDF/RFilter.hxx ROOT/RDF/RInterface.hxx ROOT/RDF/RJittedAction.hxx ROOT/RDF/RJittedDefine.hxx ROOT/RDF/RJittedFilter.hxx ROOT/RDF/RLazyDSImpl.hxx ROOT/RDF/RLoopManager.hxx ROOT/RDF/RMergeableValue.hxx ROOT/RDF/RNodeBase.hxx ROOT/RDF/RRangeBase.hxx ROOT/RDF/RRange.hxx ROOT/RDF/RSlotStack.hxx ROOT/RDF/RTreeColumnReader.hxx ROOT/RDF/Utils.hxx ROOT/RDF/PyROOTHelpers.hxx ROOT/RSqliteDS.hxx /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/LinkDef.h ; - [2021-10-21T07:53:28.459Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDF/RInterface.hxx:108:29: error: friend declaration of 'TriggerRun' does no,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9153#issuecomment-948352677:3792,Interface,InterfaceUtils,3792,https://root.cern,https://github.com/root-project/root/pull/9153#issuecomment-948352677,1,['Interface'],['InterfaceUtils']
Integrability,"e/src/TMath.cxx:3298:25: error: expected primary-expression before ‘&gt;’ token ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3298:27: error: ‘mask1’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3299:25: error: expected primary-expression before ‘&gt;’ token ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3299:27: error: ‘mask2’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3300:25: error: expected primary-expression before ‘&gt;’ token ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3300:27: error: ‘mask3’ was not declared in this scope . And 64 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400713921:1758,depend,depends,1758,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400713921,2,['depend'],['depends']
Integrability,"e/src/TSystem.cxx:746; 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362; 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737; 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660; 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116; 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389; 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471; 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153; 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174; 13: main in /opt/root_src/main/src/rmain.cxx:81; Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s); in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479; 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177; 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174; 7: main in /opt/root_src/main/src/rmain.cxx:81; Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s); in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirect",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:1478,depend,depends,1478,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['depend'],['depends']
Integrability,"e>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator==<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1833762580:2218,interface,interface,2218,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1833762580,1,['interface'],['interface']
Integrability,"eError: could not convert argument 2; 887: Failed to instantiate ""Histo1D(ROOT::RDF::TH1DModel*,std::string)""; 887: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 887: error code: 1; 887:; 887:; 10/16 Test #887: tutorial-dataframe-df014_CSVDataSource-py ................***Failed 5.75 sec; test 888; Start 888: tutorial-dataframe-df016_vecOps-py. 888: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df016_vecOps.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 888: Environment variables:; 888: ROOT_HIST=0; 888: Test timeout computed to be: 1500; 888: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 888: error code: -529697949; 888:; 888:; 11/16 Test #888: tutorial-dataframe-df016_vecOps-py .......................***Failed 4.51 sec; test 889; Start 889: tutorial-dataframe-df017_vecOpsHEP-py. 889: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df017_vecOpsHEP.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 889: Environment variables:; 889: ROOT_HIST=0; 889: Test timeout computed to be: 1500; 889: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 889: error code: -529697949; 889:; 889:; 12/16 Test #889: tutorial-dataframe-df017_vecOpsHEP-py ....................***Failed 5.05 sec; test 890; Start 890: tutorial-dataframe-df019_Cache-py. 890: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:11501,message,message,11501,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,eIT_E4typeEOS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]!; You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]!; You ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:3710,interface,interface,3710,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,1,['interface'],['interface']
Integrability,"eInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions const&, cling::Transaction**) const (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== by 0x7766985: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== by 0x78491A6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== Address 0xffffffffffffffe8 is not stack'd, malloc'd or (recently) free'd; ==652727== . *** Break *** segmentation violation; ```; (note that I ran it directly on `root.exe`, otherwise `valgrind` will only see the ""wrapper"" `root` executable that forks into `root.exe`). With `CLING_DEBUG=1`, we can at least get a proper stack trace of where it's crashing:; ```; $ CLING_DEBUG=1 root.exe ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |; | From heads/master@tags/v6-30-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <LoKi/ParticleCuts.h>. *** Break *** segmentation violation. ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007ff1c12d89fa in wait4 () from /lib64/libc.so.6; #1 0x00007ff1c124b243 in do_syst",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2166043260:6605,wrap,wrapper,6605,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2166043260,1,['wrap'],['wrapper']
Integrability,"eTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/stognini -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.0.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:8468,protocol,protocols,8468,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,2,['protocol'],['protocols']
Integrability,"e_5:2:20: error: use of undeclared identifier 'any_undeclared_variable_here'; auto h1 = new int(any_undeclared_variable_here);; ^; ```; ```; [cling]$ if(true) {auto h1 = new int(any_undeclared_variable_here);}; input_line_4:2:30: error: use of undeclared identifier 'any_undeclared_variable_here'; if(true) {auto h1 = new int(any_undeclared_variable_here);}; ^; ```. In root, the first example gives a syntax error instead (which is already wrong). This is because `ROOT` tries to resolve `any_undeclared_variable_here` at runtime:; ```; root [0] auto h1 = new int(any_undeclared_variable_here);; ROOT_prompt_0:1:1: error: Syntax error; auto h1 = new int(any_undeclared_variable_here);; ^; FunctionDecl 0x55555714b7c8 <input_line_8:1:1, ROOT_prompt_0:3:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'; |-ParmVarDecl 0x55555714b710 <col:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x555557161e30 <col:42, ROOT_prompt_0:3:1>; | |-DeclStmt 0x555557161e10 <line:1:1, col:48>; | | `-VarDecl 0x55555714b918 <col:1, col:47> col:6 h1 'int *':'int *' cinit; | | `-CXXNewExpr 0x555557161ce8 <col:11, col:47> 'int *' Function 0x55555714bb40 'operator new' 'void *(std::size_t)'; | | `-ParenListExpr 0x55555714bad0 <col:18, col:47> 'NULL TYPE'; | | `-DeclRefExpr 0x55555714ba90 <col:19> '<dependent type>' lvalue Var 0x55555714b988 'any_undeclared_variable_here' '<dependent type>'; | `-NullStmt 0x555557161e28 <line:2:1>; `-AnnotateAttr 0x55555714b9f0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; <<<NULL>>>; root [1] ; ```. And we get a segfault when added inside an if clause: ; ```; root [1] if(true) {auto h1 = new int(any_undeclared_variable_here);}; root.exe: /home/dvalapar/work/root/dev.bug-fixes/interpreter/llvm-project/clang/include/clang/AST/Type.h:752: const clang::ExtQualsTypeCommonBase* clang::QualType::getCommonPtr() const: Assertion `!isNull() && ""Cannot retrieve a NULL type pointer""' failed. Program received signal SIGABRT, Aborted.; __pthread_kill_i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13252#issuecomment-2082487744:1423,depend,dependent,1423,https://root.cern,https://github.com/root-project/root/issues/13252#issuecomment-2082487744,2,['depend'],['dependent']
Integrability,"ec/include -I/opt/local/include -I/Users/suter_a/Applications/musrfit/src/include -I/Users/suter_a/Applications/musrfit/src/classes PUserFcnBase.h /Users/suter_a/Applications/musrfit/src/include/PUserFcnBaseLinkDef.h; cd /Users/suter_a/Applications/musrfit/build && /opt/local/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/suter_a/Applications/musrfit /Users/suter_a/Applications/musrfit/src/classes /Users/suter_a/Applications/musrfit/build /Users/suter_a/Applications/musrfit/build/src/classes /Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake --color=; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/CMakeDirectoryInformation.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Scanning dependencies of target PUserFcnBase; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/classes/CMakeFiles/PUserFcnBase.dir/build.make src/classes/CMakeFiles/PUserFcnBase.dir/build; ... And all the further root_generate_dictionary work as well. Does this help?. Cheers,; Andreas. PS: Machine I have tested it on: ; Darwin Kernel Version 21.3.0: Wed Jan 5 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_ARM64_T8101 arm64. ________________________________. Paul Scherrer Institut. Dr. Andreas Suter; Laboratory for Muon-Spin Spectroscopy; Swiss Muon Source SµS; WLGA/119; Forschungsstrasse 111; CH - 5232 Villigen PSI; Switzerland. Tel.: +41 (0)56 310 4238; ________________________________. > On 7 Mar 2022, at 20:08, Axel Naumann ***@***.***> wrote:; > ; > ; > Can you share how you determined that DYLD_LIBRARY_PATH works?; > ; > —; > Reply to this email directly, view it on GitHub <https://github",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1061481610:4637,depend,depender,4637,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1061481610,1,['depend'],['depender']
Integrability,"eckTimer (this=0x555557414fe0, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132; #17 0x00007ffff6fa6105 in TUnixSystem::DispatchTimers (this=0x5555557f57c0, mode=true) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2956; #18 0x00007ffff6fa1018 in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1096; #19 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406; #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356; #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604; #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112; (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex; $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}; (gdb) . ```. Valgrind:; ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:; ```; Thread 1 ""runGUI"" received signal SIGINT, Interrupt.; futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183; 183	../sysdeps/nptl/futex-internal.h: No such file or directory.; (gdb) info threads; Id Target Id Frame ; * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183; 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183; (gdb) thread apply all bt. Threa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-878288640:15210,Protocol,Protocol,15210,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-878288640,1,['Protocol'],['Protocol']
Integrability,"ect description of standard mixing in GCC documents, but it seems that they do not point out that changing standards will lead to changes in ABI compatibility (If so, it means that the backward compatibility of the C++ standard is violated, which seems serious). I tend to think that this compatibility is guaranteed, but it does require more evidence. > I also don't understand how `cxx20::span` would solve anything: we want users to be able to use the stdlib `span` with ROOT, if their stdlib provides it. In fact, if the user uses the same standard as ROOT, the current situation is very good. I propose to change the name on the premise that users are allowed to link to ROOT with different standards. Typically, if the user is using a higher standard, the `std::span` in the std library will be exposed and conflict with the ROOT version `std::(inline)__ROOT::span`. In order to resolve the conflict, we have to take the second place: if we use `cxx20::span` and provide an interface to convert from/to standard `std::span`, then even if there are differences in standards, the two sides will not interfere with each other. If users have `std::span`, they can use it; If not, they should not get an implementation from ROOT in the std namespace (which affects their subsequent upgrade to a higher version of the C++ standard). All in all, it provides an implementation independent of std when the true `std::span` is not available, and prevents name conflict when mixing the standard.; Of course, if want ROOT to use `std::span` of the standard library when feasible (e.g. complie with C++20), we can just use `cxx20::span` as the alias of `std::span`. However, after then the user cannot be allowed to go back to a standard lower than C++20, otherwise `span` will missing in the header file, and the ROOT internal implementation of `span` should not be use as the fallback - if so, there may be a compatibility problem, caused by the so-called ODR violation. > To come back to my question: shou",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311#issuecomment-1254659106:1875,interface,interface,1875,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1254659106,1,['interface'],['interface']
Integrability,"ect/root/io/io/src/TBufferMerger.cxx:117; #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>); at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51; #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>); at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52; #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0); at /usr/include/c++/10/bits/unique_ptr.h:85; #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182; #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (; this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456; #7 0x00000000004876c9 in ROOT::Internal::RDF::SnapshotHelperMT<int>::Finalize (this=0x16ecda0); at /home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/include/ROOT/RDF/ActionHelpers.hxx:1530; ```; And gdb tells us we're not dealing with a TMemFile anymore:; ```; (gdb) p this; $1 = (TFileMerger * const) 0x44b0108; (gdb) p this->fOutputFile; $2 = (TFile *) 0x4d63230; (gdb) p this->fOutputFile->InheritsFrom(""TMemFile""); $3 = false; ```; > Independently, before we close this, we need to understand why TTree::ChangeFile was triggered in the first place for a TMemFile (as the default size is .. 100GB). The original issue that triggered this investigation is in PyRDF (linked a few messages above). Unfortunately we don't have a full reproducer from the user, we just know that they were using IMT, although at some point in the discussion they tried with sequential execution and still got segfault. The fixes in this PR may be worth nonetheless though",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6570#issuecomment-705515934:2653,message,messages,2653,https://root.cern,https://github.com/root-project/root/pull/6570#issuecomment-705515934,1,['message'],['messages']
Integrability,"ector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-30T07:27:04.442Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:27:04.442Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:27:04.442Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/TestStatistics/testLikelihoodGradientJob.cpp:467:53: warning: declaration of ‘likelihood’ shadows a member of ‘LikelihoodSimBinnedConstrainedTest_ConstrainedAndOffset_Test’ [-Wshadow] . ### Failing tests:; - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testLikelihoodGradientJob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131195/testReport/projectroot.roofit.roofitcore/test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368821:2968,synchroniz,synchronizeParameterSettings,2968,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368821,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"ector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x5E07061: __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6236); ==270704== by 0x63262E2: std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (stl_function.h:356); ==270704== by 0x271AAC41: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:217559,depend,depends,217559,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"ed -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling dataframe davix exceptions gdml gnuinstall http imt mathmore mlp minuit2 opengl pyroot roofit rpath runtime_cxxmodules shared ssl tmva tmva-cpu tmva-pymva spectrum x11 xml xrootd; -- Configuring done; CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:735 (add_dependencies):; The dependency target ""install-clang"" of target ""install-clang++"" does not; exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:736 (add_dependencies):; The dependency target ""install-clang-stripped"" of target; ""install-clang++-stripped"" does not exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:735 (add_dependencies):; The dependency target ""install-clang"" of target ""install-clang-cl"" does not; exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:18030,depend,dependency,18030,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['depend'],['dependency']
Integrability,"ediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_5d1f4f63db': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\InstCombine\LLVMInstCombine.vcxproj] ; - [2020-08-13T09:00:00.377Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(300,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_b65dea1ddb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Bitcode\Reader\BitReader.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Bitcode\Reader\LLVMBitReader.vcxproj] ; - [2020-08-13T09:00:00.377Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolVisitorCallbacks.h(33): message : see declaration of 'llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolSerializer.cpp)C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(2752,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_aa614ad0ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\TypeIndexDiscovery.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - [2020-08-13T09:00:00.766Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(1037,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_6b123fbbex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6170#issuecomment-673358392:2856,message,message,2856,https://root.cern,https://github.com/root-project/root/pull/6170#issuecomment-673358392,1,['message'],['message']
Integrability,"elease/RootTestDriver.cmake:237 (message):; 891: error code: -529697949; 891:; 891:; 14/16 Test #891: tutorial-dataframe-df021_createTGraph-py .................***Failed Error regular expression found in output. Regex=[: error:] 4.85 sec; test 892; Start 892: tutorial-dataframe-df024_Display-py. 892: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df024_Display.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 892: Environment variables:; 892: ROOT_HIST=0; 892: Test timeout computed to be: 1500; 892: IncrementalExecutor::executeFunction: symbol '?printValue@cling@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PB_K@Z' unresolved while linking [cling interface function]!; 892: You are probably missing the definition of class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cling::printValue(unsigned __int64 const *); 892: Maybe you need to load the corresponding shared library?; 892: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 892: error code: -529697949; 892:; 892:; 15/16 Test #892: tutorial-dataframe-df024_Display-py ......................***Failed 9.91 sec; test 893; Start 893: tutorial-dataframe-df031_Stats-py. 893: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df031_Stats.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 893: Environment variables:; 893: ROOT_HIST=0; 893: Test timeout computed to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:15181,interface,interface,15181,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['interface'],['interface']
Integrability,"eloper/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/stognini -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.0.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Applications/Xcode.app/Contents/Deve",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:3886,protocol,protocols,3886,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,2,['protocol'],['protocols']
Integrability,"em externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable?. Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droof",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870411730:1691,depend,dependency,1691,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870411730,2,['depend'],['dependency']
Integrability,"enceIT_E4typeEOS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunctio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1833762580:1504,interface,interface,1504,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1833762580,1,['interface'],['interface']
Integrability,"enkins/job/root-pullrequests-build/169137/console).; ### Errors:; - [2023-02-22T14:26:32.477Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.477Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:10: error: ‘assert’ was not declared in this scope ; - [2023-02-22T14:26:32.477Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:466:10: error: ‘assert’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.989Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1440118758:1166,depend,depend,1166,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1440118758,1,['depend'],['depend']
Integrability,"eproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; reproducer(f);; f->Close();; return 0;; }; ```. Depending on how many times I invoke reproducer(f) I get different live allocations. For the example above:. ```; Flat profile (cumulative >= 1%). % total Total Calls Function; 100.0 1'441'603'989 32'730 <spontaneous> [1]; 100.0 1'441'593'885 32'636 _start [2]; 100.0 1'441'593'885 32'636 __libc_start_main [3]; 100.0 1'441'593'885 32'636 main [4]; 97.2 1'400'951'423 7'936 reproducer(TFile*) [5]; 97.0 1'397'652'408 2'508 ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) [6]; 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&) [7]; 97.0 1'397'652'408 2'508 TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) [8]; 97.0 1'397'652'408 2'508 TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) [9]; 97.0 1'397'652'408 2'508 TBranch::GetBasketImpl(int, TBuffer*) [10]; 96.9 1'397'435'904 480 TBasket::ReadBasketBuffers(long long, int, TFile*) [11]; 96.9 1'397'435'904 480 TBufferFile::ReadArray(int*&) [12]; 2.8 40'642'462 24'700 TFile::Open(char const*, char con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11853#issuecomment-1341770769:4404,Depend,Depending,4404,https://root.cern,https://github.com/root-project/root/issues/11853#issuecomment-1341770769,1,['Depend'],['Depending']
Integrability,"equests-build/root/roofit/roofitcore/src/RooProdPdf.cxx:1069:22: error: cannot convert ‘std::vector&lt;std::unique_ptr&lt;RooArgSet&gt; &gt;*’ to ‘pRooLinkedList’ {aka ‘RooLinkedList*’} in assignment ; - /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooProdPdf.cxx:1157:36: error: ‘class std::vector&lt;std::unique_ptr&lt;RooArgSet&gt; &gt;’ has no member named ‘fwdIterator’; did you mean ‘iterator’? ; - /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooProdPdf.cxx:1839:24: error: cannot convert ‘std::vector&lt;std::unique_ptr&lt;RooArgSet&gt; &gt;*’ to ‘RooLinkedList*’ in assignment ; - /usr/include/c++/8/ext/new_allocator.h:136:4: error: no matching function for call to ‘std::unique_ptr&lt;RooArgSet&gt;::unique_ptr(RooAbsCollection*)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3509#issuecomment-470484693:1693,depend,depends,1693,https://root.cern,https://github.com/root-project/root/pull/3509#issuecomment-470484693,1,['depend'],['depends']
Integrability,equests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111619/console).; ### Warnings:; - [2021-03-22T09:19:17.164Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:17.423Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:17.423Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:17.681Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.248Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.248Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.766Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:19.025Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:20.220Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:52.151Z] include/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parame,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803916135:1143,Interface,InterfaceUtils,1143,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803916135,1,['Interface'],['InterfaceUtils']
Integrability,"er&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C7E89: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:143); ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307); ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMetho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:12195,depend,depends,12195,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"er&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C7E91: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:143); ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307); ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMetho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:13982,depend,depends,13982,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"error message under permissive-:; `F:\gitP\root-project\root\hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types `. If the issue is not a ROOT bug, could you please help provide a workarounds aiming at the error above? Thanks a lot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9607#issuecomment-1016281431:6,message,message,6,https://root.cern,https://github.com/root-project/root/issues/9607#issuecomment-1016281431,1,['message'],['message']
Integrability,"ertion CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/Basic/Diagnostic.h, line 1545; 768: Assertion failed: (*I)->isCompleCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: (!m_Consumer->getTransaction() || (m_Consumer->getTransaction() == T)) && ""Cannot release different T"", file C:\root-dev\git\master\interpreter\cling\lib\Interpreter\IncrementalParser.cpp, line 538; 768: CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: CurLexerKind != CLK_CachingLexer && ""already in caching lex mode"", file C:\root-dev\git\master\interpreter\llvm-project\clang\lib\Lex\PPCaching.cpp, line 99; 768: Assertion failed: CCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: is(tok::raw_identifier), file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/Lex/Token.h, line 208; 768: Assertion failed: (CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: DiagID - DIAG_UPPER_LIMIT < DiagInfo.size() && ""Invalid diagnosti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14200#issuecomment-1903602682:1390,message,message,1390,https://root.cern,https://github.com/root-project/root/pull/14200#issuecomment-1903602682,1,['message'],['message']
Integrability,es not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 46 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:33 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:127 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547060479:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547060479,6,['message'],['message']
Integrability,es not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 78 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:33 (message): ; - CMake Warning at bindings/pyroot_experimental/PyROOT/ROOT/CMakeLists.txt:127 (message): ; - /build/jenkins/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1276:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-546715013:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-546715013,6,['message'],['message']
Integrability,es.cern.ch/root-jenkins/job/root-pullrequests-build/103401/console).; ### Errors:; - [2020-12-07T13:11:17.708Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - [2020-12-07T13:11:17.708Z] CMake Error at VDT-stamp/VDT-download-Release.cmake:49 (message): ; - [2020-12-07T13:11:17.708Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - [2020-12-07T13:11:17.708Z] CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:49 (message): ; - [2020-12-07T13:11:22.990Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download ; - [2020-12-07T13:11:22.990Z] CMake Error at VECCORE-stamp/VECCORE-download-Release.cmake:49 (message): ; - [2020-12-07T13:11:22.990Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - [2020-12-07T13:11:22.990Z] CMake Error at VC-stamp/VC-download-Release.cmake:49 (message): ; - [2020-12-07T13:11:22.991Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6922#issuecomment-739909438:1152,message,message,1152,https://root.cern,https://github.com/root-project/root/pull/6922#issuecomment-739909438,1,['message'],['message']
Integrability,"ess `c_str()` conversions in RooFitHS3; [RF][HS3] New `wsEmplace()` method for creating objects in workspace; [RF][HS3] New `wsImport()` function to avoid repeating command args; [RF] Less manual memory management in RooAbsArg and RooProdGenContext; [RF] Code modernization of RooAbsReal; [RF][HS3] Renaming some distributions to conform with HS3 standard; [RF][HS3] Use HistFunc variables instead of underlying hist variables; [RF] Added protection against invalid variable names in createHistogram; [RF][HS3] Correct error messages when IO keys are missing; [RF][HS3] Code improvements in HS3 HistFactory; [RF][HS3] Small HS3 closure fixes; [RF][HS3] Import HistFactory constraints directly upon creation; [RF][HS3] Cleanup of generic functions to avoid using arguments; [RF][HS3] Don't import embedded data directly to RooWorkspace; [RF] Avoid false warnings in RooAbsReal::createHistogram(); [RF][HS3] Reduce verbosity of unit tests; [RF][HS3] Less usage of TString; [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets; [RF][HS3] Remove unused functions from JSONFactories_HistFactory; [RF][HS3] Export `staterror` correctly for HistFactory; [RF][HS3] Major restructuring of HistFactory in HS3 - part 2; [RF][HS3] Major refactoring of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS3] Moved `DependencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation; [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation; [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`; [RF] Add intiial minimizer interface for RooFuncWrapper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:6568,Depend,DependencyMissingError,6568,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,6,"['Depend', 'interface']","['DependencyMissingError', 'interface']"
Integrability,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144980019:2262,interface,interface,2262,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019,4,['interface'],['interface']
Integrability,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145207749:2262,interface,interface,2262,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749,4,['interface'],['interface']
Integrability,est_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.directory.roottest_root_io_directory_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root.io/directory/roottest_root_io_directory_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12123/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/). And 37 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1337#issuecomment-345216771:2741,interface,interface,2741,https://root.cern,https://github.com/root-project/root/pull/1337#issuecomment-345216771,2,['interface'],['interface']
Integrability,est_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.directory.roottest_root_io_directory_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root.io/directory/roottest_root_io_directory_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12133/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/). And 37 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1337#issuecomment-345228090:2741,interface,interface,2741,https://root.cern,https://github.com/root-project/root/pull/1337#issuecomment-345228090,2,['interface'],['interface']
Integrability,ests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -writeEmptyRootPCM Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFunc.h Math/PdfFuncMathCore.h Math/ProbFunc.h Math/ProbFuncMathCore.h Math/QuantFunc.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - FAILED: cd /mnt/build/workspace/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4346#issuecomment-528976735:3453,Integrat,IntegratorMultiDim,3453,https://root.cern,https://github.com/root-project/root/pull/4346#issuecomment-528976735,5,['Integrat'],['IntegratorMultiDim']
Integrability,"etFromScratch.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 884: Environment variables:; 884: ROOT_HIST=0; 884: Test timeout computed to be: 1500; 884: input_line_40:2:211: warning: missing terminating '""' character [-Winvalid-pp-token]; 884: *reinterpret_cast<ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager>>*>(0x62d78c) = reinterpret_cast<ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase>*>(0x62d7a8)->Snapshot<double>("" [R<U+0013>,<CA>b; 884: ^; 884: input_line_40:2:211: error: expected expression; 884: <<< cling interactive line includer >>>:1:1: error: expected '}'; 884: input_line_40:1:43: note: to match this '{'; 884: void __cling_Un1Qu315(void* vpClingValue) {; 884: ^; 884: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 884: error code: -529697949; 884:; 884:; 7/16 Test #884: tutorial-dataframe-df008_createDataSetFromScratch-py .....***Failed Error regular expression found in output. Regex=[: error:] 6.23 sec; test 885; Start 885: tutorial-dataframe-df010_trivialDataSource-py. 885: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df010_trivialDataSource.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 885: Environment variables:; 885: ROOT_HIST=0; 885: Test timeout computed to be: 1500; 885: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 885: error code: -529697949; 885:; 885:; 8/16 Test #885: tutorial-dataframe-df010_trivialDataSource-py ............***Failed 4.46 sec; test 886; Start 886: tutorial-dataframe-df012_DefinesAndF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:6151,message,message,6151,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,"ethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66CAF7E: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:217); ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109); ==270704== by 0x190163FE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:28561,depend,depends,28561,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"even as an implementation detail perhaps of a higher level more usable ; interface. I fully get the need to have a working win alpha for may, ; support all efforts to arrive there  and have 2 worries:; - The amount of ifdefs; - The (non) sturdiness of string manipulations. On 08.02.2018 11:33, Bertrand Bellenot wrote:; >; > Well, right, we could use gSystem->UnixPathname()...; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub ; > <https://github.com/root-project/root/pull/1609#issuecomment-364070384>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/AHfJPvBOt1y6pFQxmNRkG5_698E9UAFRks5tSs2NgaJpZM4R-HWn>.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1609#issuecomment-364071818:73,interface,interface,73,https://root.cern,https://github.com/root-project/root/pull/1609#issuecomment-364071818,2,['interface'],['interface']
Integrability,"exception, another exception occurred:. Traceback (most recent call last):; File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 619, in main; process(); File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/worker.py"", line 611, in process; serializer.dump_stream(out_iter, outfile); File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/serializers.py"", line 259, in dump_stream; vs = list(itertools.islice(iterator, batch)); File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 995, in func; except StopIteration:; File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/rdd.py"", line 1152, in aggregatePartition; acc = seqOp(acc, obj); File ""/home/vpadulan/.local/lib/python3.10/site-packages/pyspark/python/lib/pyspark.zip/pyspark/util.py"", line 74, in wrapper; return f(*args, **kwargs); File ""/home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/DistRDF/Backends/Spark/Backend.py"", line -1, in spark_mapper; File ""/home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/DistRDF/Backends/Base.py"", line 116, in distrdf_mapper; raise RuntimeError(f""C++ exception thrown:\n\t{type(e).__name__}: {e.what()}""); RuntimeError: C++ exception thrown:; 	runtime_error: Graph was applied to a mix of scalar values and collections. This is not supported. 	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:555); 	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:713); 	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:695); 	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:508); 	at org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37); 	at scala.collection.Iterator.foreach(Iterator.scala:943); 	at scala.collection.I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11050#issuecomment-1196878051:2305,wrap,wrapper,2305,https://root.cern,https://github.com/root-project/root/issues/11050#issuecomment-1196878051,1,['wrap'],['wrapper']
Integrability,"executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr));",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:5554,interface,interface,5554,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,1,['interface'],['interface']
Integrability,"externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin23.6.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frame",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:8896,protocol,protocols,8896,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,2,['protocol'],['protocols']
Integrability,"externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin23.6.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Applications/Xcode.app/Contents/Developer/Plat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:4224,protocol,protocols,4224,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,2,['protocol'],['protocols']
Integrability,f_integration_spark_test_friend_trees](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_friend_trees/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_histo_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_histo_write/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_include_headers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_include_headers/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_inv_mass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_inv_mass/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_reducer_merge](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_reducer_merge/); - [projectroot.bindings.experimental.distrdf.tests.unit.backend.pyunittests_distrdf_unit_backend_test_spark](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.unit/backend/pyunittests_distrdf_unit_backend_test_spark/); - [projectroot.bindings.experimental.distrdf.tests.unit.backend.pyunitt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-774112839:1340,integrat,integration,1340,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-774112839,1,['integrat'],['integration']
Integrability,"for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-rele",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1250106081:1986,depend,depends,1986,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1250106081,1,['depend'],['depends']
Integrability,"g /Volumes/MacintoshHD2/ec/build/workspace/root-nightly-master-cxx14root7/BUILDTYPE/Release/COMPILER/native/LABEL/mac1012/root/tutorials/roofit/rf611_RooMCMarkovChainexample.C... [NON-XML-CHAR-0x1B][1mRooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby[NON-XML-CHAR-0x1B][0m ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.65215, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.04508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.08508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.11206, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.61614, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=4.19165, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327#issuecomment-349216512:1218,message,message,1218,https://root.cern,https://github.com/root-project/root/pull/1327#issuecomment-349216512,1,['message'],['message']
Integrability,"g the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this ; example2: ; ```cpp; {; // my_subroutines.C; unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {; x.reset(); ; x.reset(new TH1F());; // .. do something with it.; }; ```; except for maybe quick temporary scripts. So we have about 2.5 issues. ; 1) The global command,; 2) the interface and ownership model, and; 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:3269,interface,interface,3269,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,2,['interface'],['interface']
Integrability,"g/Interpreter/DynamicLookupRuntimeUniverse.h etc/cling/Interpreter/DynamicLookupLifetimeHandler.h etc/cling/Interpreter/Exception.h etc/cling/Interpreter/RuntimePrintValue.h etc/cling/Interpreter/RuntimeUniverse.h etc/cling/Interpreter/RuntimeOptions.h etc/cling/Interpreter/Value.h etc/cling/Interpreter/Visibility.h && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3.5 /mnt/build/workspace/root-pullrequests-build/root/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/core ; - [2021-11-30T07:32:08.128Z] ./include/TestStatistics/LikelihoodJob.h:17:10: fatal error: 'RooFit/MultiProcess/Job.h' file not found . ### Warnings:; - [2021-11-30T07:30:53.680Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:53.680Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::Like",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982359449:1510,synchroniz,synchronizeParameterSettings,1510,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982359449,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"g::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) (LookupHelper.cpp:1583); ==92602== by 0x116E7F07: cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const (LookupHelper.cpp:1869); ==92602== by 0x115744B7: TClingClassInfo::GetMethod(char const*, char const*, bool, long*, ROOT::EFunctionMatchMode, TClingClassInfo::EInheritanceMode) const (TClingClassInfo.cxx:374); ==92602== by 0x1135DEF3: TCling::GetFunctionWithPrototype(ClassInfo_t*, char const*, char const*, bool, ROOT::EFunctionMatchMode) (TCling.cxx:5063); ==92602== by 0x45CF59F: TClass::GetClassMethodWithPrototype(char const*, char const*, bool, ROOT::EFunctionMatchMode) (TClass.cxx:4530); ==92602== by 0x45D671F: TClass::Property() const (TClass.cxx:6080); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x40E1BA3: TCollection::TCollection() (TCollection.h:152); ==92602== by 0x40E1F83: TSeqCollection::TSeqCollection() (TSeqCollection.h:33); ==92602== by 0x40E209B: TList::TList() (TList.h:78); ==92602== by 0x454FD17: TList::Delete(char const*) (TList.cxx:477); ==92602== by 0x45479A7: THashList::Delete(char const*) (THashList.cxx:215); ==92602== by 0x5FE6163: TDirectoryFile::Close(char const*) (TDirectoryFile.cxx:572); ==92602== by 0x600997B: TFile::Close(char const*) (TFile.cxx:928); ==92602== by 0x60670B3: TMemFile::~TMemFile() (TMemFile.cxx:240); ==92602== by 0x1134EF7F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857); ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:18610,depend,depends,18610,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,"g\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-11T16:52:05.553Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(161,22): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\MicrosoftCXXABI.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-11T16:52:05.553Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector(467,88): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\Mangle.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-11T16:52:05.553Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/Expr.h(2773,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ExternalASTSource.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-11T16:52:05.553Z] c1xx : fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2022-04-11T16:52:06.004Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/APFloat.h(1100,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\DependencyFile.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] . And 313 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10380#issuecomment-1095298541:3947,Depend,DependencyFile,3947,https://root.cern,https://github.com/root-project/root/pull/10380#issuecomment-1095298541,1,['Depend'],['DependencyFile']
Integrability,"gcc8-opt/bin/runH4lAnalRun2); ==2512== Uninitialised value was created by a stack allocation; ==2512== at 0x5ABC43E: TSystem::IsPathLocal(char const*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512==; ==2512== Conditional jump or move depends on uninitialised value(s); ==2512== at 0x4F01099: TStorage::UpdateIsOnHeap(unsigned int const; volatile&, unsigned int volatile&) (in; /srv/workDir/usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/lib/libH4lAnalysisRun2Lib.so); ==2512== by 0x5A7E9BA: TMessageHandler::Notify() (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x5A7E2B0: TMessageHandler::HandleMessage(int, TObject; const*) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x5A42360: TROOT::Message(int, TObject const*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x5A812D4: TObject::Error(char const*, char const*,; ...) const (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x3F34D156: TNetXNGFile::TNetXNGFile(char const*, char; const*, char const*, char const*, int, int, bool) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libNetxNG.so); ==2512== by 0x3F34DECB: TNetXNGFile::TNetXNGFile(char const*, char; const*, char const*, int, int, bool) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libNetxNG.so); ==2512== by 0x401E6642: ???; ==2512== by 0x31A15B61: TClingCallFunc::exec(void*, void*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759537229:2494,Message,Message,2494,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759537229,1,['Message'],['Message']
Integrability,"ge_cast and static_range_cast #8769 (comment)](https://github.com/root-project/root/pull/8769#issuecomment-891036930): I didn't generalize TRangeDynCast and TRangeStaticCast. They are tied to TCollection and fulfill a different purpose because of that. They are also part of `ROOT::Internal`, while my new functions are supposed to be also used by the RooFit users. I would suggest we leave them as they are, but if you think the new `static_range_cast` and `dynamic_range_cast` are useful for everyone we can move the new file if you want. But where?. I was already expecting that it would be difficult to adapt those, but there will be ways to adapt them. I think it would be *better* if there's one good solution for all, but you have to decide how much time you want to invest. > 2. [[RF] New RangeCast file with dynamic_range_cast and static_range_cast #8769 (comment)](https://github.com/root-project/root/pull/8769#discussion_r680892053): I didn't add the `assert(dynamic_cast)` to the `static_range_cast` because the performance penalty it introduces in debug mode is not probably not expected by non-RooFit developers. There's not many loops out there in the world that will depend on this. If somebody uses it, they might be glad to have the extra safety. About the performance:; - When you run from the interpreter, you don't care about the performance of your loop as much.; - When you compile, you probably know what `NDEBUG` is.; - When you ACLIC-compile, I would have hoped that you get an automatic `NDEBUG` in release builds of ROOT, or when you `+O` a file. You don't, unfortunately. My preferred solution would have been to fix that and use the asserts, but it's your project now. > 3. [[RF] New RangeCast file with dynamic_range_cast and static_range_cast #8769 (comment)](https://github.com/root-project/root/pull/8769#issuecomment-890998817): I stuck with the detection of `dynamic_cast` vs. `static_cast` at compile time to also support non-polymorphic types.; > . Sounds good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8769#issuecomment-891155267:1399,depend,depend,1399,https://root.cern,https://github.com/root-project/root/pull/8769#issuecomment-891155267,1,['depend'],['depend']
Integrability,great PR! Do we want to have unit tests and integration tests too?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1764#issuecomment-374247543:44,integrat,integration,44,https://root.cern,https://github.com/root-project/root/pull/1764#issuecomment-374247543,1,['integrat'],['integration']
Integrability,"gs&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-30T07:31:37.755Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982359449:2928,synchroniz,synchronizeParameterSettings,2928,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982359449,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"gs:; - [2021-11-29T20:38:45.207Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:38:45.207Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual voi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982003312:1763,synchroniz,synchronizeParameterSettings,1763,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982003312,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"gs:; - [2021-11-30T07:26:24.689Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:24.689Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual voi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368821:1229,synchroniz,synchronizeParameterSettings,1229,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368821,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"gument(clang::TemplateArgumentLoc const&, clang::TemplateArgumentLoc&, bool) () from /home/linev/build/webgui/lib/libCling.so; #17 0x00007f4aa5996dc2 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformTemplateSpecializationType(clang::TypeLocBuilder&, clang::TemplateSpecializationTypeLoc, clang::TemplateName) () from /home/linev/build/webgui/lib/libCling.so; #18 0x00007f4aa5993be9 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformTSIInObjectScope(clang::TypeLoc, clang::QualType, clang::NamedDecl*, clang::CXXScopeSpec&) [clone .isra.0] () from /home/linev/build/webgui/lib/libCling.so; #19 0x00007f4aa5994499 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformNestedNameSpecifierLoc(clang::NestedNameSpecifierLoc, clang::QualType, clang::NamedDecl*) () from /home/linev/build/webgui/lib/libCling.so; #20 0x00007f4aa5998edf in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformDependentNameType(clang::TypeLocBuilder&, clang::DependentNameTypeLoc, bool) () from /home/linev/build/webgui/lib/libCling.so; #21 0x00007f4aa598ea8c in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType(clang::TypeLocBuilder&, clang::TypeLoc) () from /home/linev/build/webgui/lib/libCling.so; #22 0x00007f4aa5990757 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformPointerType(clang::TypeLocBuilder&, clang::PointerTypeLoc) () from /home/linev/build/webgui/lib/libCling.so; #23 0x00007f4aa598ee52 in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType(clang::TypeLocBuilder&, clang::TypeLoc) () from /home/linev/build/webgui/lib/libCling.so; #24 0x00007f4aa5991a8e in clang::TreeTransform<(anonymous namespace)::TemplateInstantiator>::TransformType(clang::TypeSourceInfo*) () from /home/linev/build/webgui/lib/libCling.so; #25 0x00007f4aa5992c97 in clang::Sema::SubstType(clang::QualType, clang::MultiLevelTemplateArgum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8494#issuecomment-865084737:3288,Depend,DependentNameTypeLoc,3288,https://root.cern,https://github.com/root-project/root/issues/8494#issuecomment-865084737,1,['Depend'],['DependentNameTypeLoc']
Integrability,"h const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug3/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug3/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; /home/b/bendavid/pyrootdebug3/test.h:18:10: error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; return helper();; ^~~~~~; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; Failed to instantiate ""call_helper(Helper<vector<double> >*)""; Failed to instantiate ""call_helper(Helper<vector<double> >)""; call attempt 1; /home/b/bendavid/pyrootdebug3/test.h:18:10: error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; return helper();; ^~~~~~; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; Failed to instantiate ""call_helper(Helper<vector<double> >*)""; Failed to instantiate ""call_helper(Helper<vector<double> >)""; ```. So the relevant error message ```error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long')``` only appears in the first attempt (and is only printed because I've set gDebug=6 here)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449#issuecomment-1460106107:2318,message,message,2318,https://root.cern,https://github.com/root-project/root/pull/12449#issuecomment-1460106107,1,['message'],['message']
Integrability,"h name in file df002_dataModel_py.root; 879: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 879: error code: -529697949; 879:; 879:; 2/16 Test #879: tutorial-dataframe-df002_dataModel-py ....................***Failed Error regular expression found in output. Regex=[Error in] 8.04 sec; test 880; Start 880: tutorial-dataframe-df003_profiles-py. 880: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df003_profiles.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 880: Environment variables:; 880: ROOT_HIST=0; 880: Test timeout computed to be: 1500; 880: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 880: error code: -529697949; 880:; 880:; 3/16 Test #880: tutorial-dataframe-df003_profiles-py .....................***Failed 4.47 sec; test 881; Start 881: tutorial-dataframe-df004_cutFlowReport-py. 881: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df004_cutFlowReport.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 881: Environment variables:; 881: ROOT_HIST=0; 881: Test timeout computed to be: 1500; 881: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 881: error code: -529697949; 881:; 881:; 4/16 Test #881: tutorial-dataframe-df004_cutFlowReport-py ................***Failed 4.53 sec; test 882; Start 882: tutorial-dataframe-df006_ranges-py. 882: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" """,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:2443,message,message,2443,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,"h' file not found . ### Warnings:; - [2021-11-30T07:30:53.680Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:53.680Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:30:59.393Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::Like",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982359449:2219,synchroniz,synchronizeParameterSettings,2219,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982359449,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"hadows a member of ‘llvm::APSInt’ [-Wshadow] ; - [2020-09-26T22:08:26.754Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:42:7: warning: declaration of ‘end_iterator’ shadows a member of ‘llvm::iterator_range&lt;IteratorT&gt;’ [-Wshadow] ; - [2020-09-26T22:08:26.754Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:42:7: warning: declaration of ‘begin_iterator’ shadows a member of ‘llvm::iterator_range&lt;IteratorT&gt;’ [-Wshadow] ; - [2020-09-26T22:08:26.754Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:95:7: warning: declaration of ‘Size’ shadows a member of ‘llvm::SmallVectorTemplateCommon&lt;T, &lt;template-parameter-1-2&gt; &gt;’ [-Wshadow] ; - [2020-09-26T22:08:26.755Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator.h:88:32: warning: declaration of ‘I’ shadows a member of ‘llvm::iterator_facade_base&lt;DerivedT, IteratorCategoryT, T, DifferenceTypeT, PointerT, ReferenceT&gt;::ReferenceProxy’ [-Wshadow] ; - [2020-09-26T22:08:26.755Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator.h:354:7: warning: declaration of ‘DR’ shadows a member of ‘llvm::WrappedPairNodeDataIterator&lt;ItType, NodeRef, DataRef&gt;’ [-Wshadow] ; - [2020-09-26T22:08:26.755Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:138:7: warning: declaration of ‘callable’ shadows a member of ‘llvm::function_ref&lt;Ret(Params ...)&gt;’ [-Wshadow] ; - [2020-09-26T22:08:26.755Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:226:5: warning: declaration of ‘F’ shadows a member of ‘llvm::mapped_iterator&lt;ItTy, FuncTy, FuncReturnTy&gt;’ [-Wshadow] . And 68632 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699554823:2419,Wrap,WrappedPairNodeDataIterator,2419,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699554823,1,['Wrap'],['WrappedPairNodeDataIterator']
Integrability,"handling system events; (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM.; (C++ compiled) struct CpuInfo_t //CPU load information.; (C++ compiled) struct MemInfo_t //Memory utilization information.; (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases; (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching.; (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens.; (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators; (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes; (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class; (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor; (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument; (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off; (C++ compiled) class TVirtualPadPainter //Painter interface for pad.; (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter; (C++ compiled) class TVirtualGLManip //Interface for GL manipulator; (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager; (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering; (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components; (C++ compiled) class TAttBBox //Helper for management of bounding-box information; (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:3648,interface,interface,3648,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,9,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"hen just using ```TInterpreter::Declare```:. test.h; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug3/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug3/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; /home/b/bendavid/pyrootdebug3/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; /home/b/bendavid/pyrootdebug3/test.h:18:10: error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; return helper();; ^~~~~~; input_line_55:1:22: note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);; ^; ret False; ```. So again the error message is different/more obscure on the second attempt at explicit template instantiation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449#issuecomment-1464946488:1987,message,message,1987,https://root.cern,https://github.com/root-project/root/pull/12449#issuecomment-1464946488,1,['message'],['message']
Integrability,"hi, cleaned up obsolete jenkins messages, will start a new build and start reviewing today",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2322#issuecomment-407321656:32,message,messages,32,https://root.cern,https://github.com/root-project/root/pull/2322#issuecomment-407321656,1,['message'],['messages']
Integrability,"historically typeinfo's operator== has been unstable. For example in case we tested (a while back :) ), the compiler was producing distinct typeinfo for the same type for each library and operator== was fooled :( .. It possible that this has been fixed by newer C++ standard, the commit message would need to explicitly refer to the new boundary conditions (when was is it ""fixed"" and by what means ... i.e. are we sure it is fixed for all the platform we support). See also `9922208313e4c09de89fb2c553970f01939d91a1` which made the switch to string comp ""to take into account differences arising when one of the two typeinfos come from a jitted context.""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7776#issuecomment-812040515:287,message,message,287,https://root.cern,https://github.com/root-project/root/pull/7776#issuecomment-812040515,1,['message'],['message']
Integrability,hon_stl_stl/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_dataframe_nodes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_dataframe_nodes/); - [projectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6812/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 9 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1050#issuecomment-331873715:2125,interface,interface,2125,https://root.cern,https://github.com/root-project/root/pull/1050#issuecomment-331873715,2,['interface'],['interface']
Integrability,hon_stl_stl/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_dataframe_nodes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_dataframe_nodes/); - [projectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8249/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/). And 8 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1050#issuecomment-334548661:1894,interface,interface,1894,https://root.cern,https://github.com/root-project/root/pull/1050#issuecomment-334548661,2,['interface'],['interface']
Integrability,"https://github.com/cms-sw/cmssw/blob/master/CUDADataFormats/CaloCommon/interface/Common.h; > ; > ; > Thanks! Last bit, hopefully: where is calo::common::AddSize defined?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or unsubscribe.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-770806834:71,interface,interface,71,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-770806834,1,['interface'],['interface']
Integrability,"https://github.com/root-project/root/issues/8828#issuecomment-902721993 still fails the same way as two years ago. It's not as much of a problem anymore since ROOT's backports don't inject into `std::Detail` anymore, but the problem is still there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-1861339162:182,inject,inject,182,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-1861339162,1,['inject'],['inject']
Integrability,https://github.com/root-project/root/pull/7033/files#diff-db4685eef4f677b824081ed3667b66c57d14b163edaef2b5d545b2a708ec1e15R217-R226; ```c++; #ifdef R__USE_IMT; std::unique_ptr<ROOT::TThreadExecutor> fThreadExecutor;; #else; #define fThreadExecutor fSequentialExecutor; #endif; #ifndef R__WIN32; std::unique_ptr<ROOT::TProcessExecutor> fProcessExecutor;; #else; #define fProcessExecutor fSequentialExecutor; #endif; ```. This is very non-intuitive because it only works for code that follows this declaration. Additionally I would guess these `define`s spill over to user code with potentially very confusing problems and error messages...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7033#issuecomment-759494622:627,message,messages,627,https://root.cern,https://github.com/root-project/root/pull/7033#issuecomment-759494622,2,['message'],['messages']
Integrability,"hxx:23:10: fatal error: could not build module 'ROOTGpadv7'; 14:16:07 #include <ROOT/TPadPainter.hxx>; 14:16:07 ~~~~~~~~^; 14:16:07 Error: /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/jenkins/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitivesd47c8c6918_dictUmbrella.h); 14:16:07 [7257/9834] Linking CXX shared library lib/libMatrix.so; ```. @couet, this error shows two problems. First is that we *must* build a dictionary before we use a header file. We are likely missing a build dependency on `ROOTGpadv7`. I believe you are trying to fix the second problem. Namely, `TLine.hxx` includes `TPadPainter.hxx` which includes `TDisplayItem.hxx` and you end up with the cycle `ROOTGraphicsPrimitives -> ROOTGpadv7 -> ROOTGraphicsPrimitives`. It seems that `ROOTGraphicsPrimitives` is a foundational module. Its header `TLine.hxx` should not depend on headers in `ROOTGpadv7`. @Teemperor is right, `TLine.hxx` should not depend on `TPadPainter.hxx`. You can break that loop by introducing a forward declarations of `TPadPainter.hxx` entities where necessary if definitions are not required. This is how the current master's modulemap looks like (maybe this helps to see the cycle).; ```; module ""ROOTGraphicsPrimitives"" {; requires cplusplus; module ""ROOT/TColor.hxx"" { header ""ROOT/TColor.hxx"" export * }; module ""ROOT/TDisplayItem.hxx"" { header ""ROOT/TDisplayItem.hxx"" export * }; module ""ROOT/TDrawingAttr.hxx"" { header ""ROOT/TDrawingAttr.hxx"" export * }; module ""ROOT/TDrawingOptsBase.hxx"" { header ""ROOT/TDrawingOptsBase.hxx"" export * }; module ""ROOT/TLine.hxx"" { header ""ROOT/TLine.hxx"" export * }; module ""ROOT/TMarker.hxx"" { header ""ROOT/TMarker.hxx"" export * }; module ""ROOT/TPalette.hxx"" { header ""ROOT/TPalette.hxx"" export * }; module ""ROOT/TStringEnumAttr.hxx"" { header ""ROOT/TStringEnumAttr.hxx"" export * }; module ""ROOT/TStyle.hxx"" { header ""ROOT/TStyle.hxx"" export * }; module ""ROOT/TText.hxx"" { header ""ROOT/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2091#issuecomment-392598607:2414,depend,depend,2414,https://root.cern,https://github.com/root-project/root/pull/2091#issuecomment-392598607,1,['depend'],['depend']
Integrability,"i will check later tonight. i think it might be trivial. Ciao,; Giulio. On Wed, Aug 23 2023 at 3:05 PM, Axel Naumann ***@***.***>; wrote:. > @ktf <https://github.com/ktf> do you think you could have a look at this?; > Can we do without including a header from testing/?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/13516#issuecomment-1689929484>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAACSMEGK6DEOKF546VM27TXWX5ZDANCNFSM6AAAAAA33LZWIQ>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13516#issuecomment-1690343495:591,Message,Message,591,https://root.cern,https://github.com/root-project/root/issues/13516#issuecomment-1690343495,1,['Message'],['Message']
Integrability,"iC:0: RuntimeWarning: Output will be written to /tmp/vvasilev/vvasilev; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/vvasilev/vvasilev//afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. 	Command being timed: ""python3 -c import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'kO')""; 	User time (seconds): 10.03; 	System time (seconds): 9.36; 	Percent of CPU this job got: 57%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.48; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 289028; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 77334; 	Minor (reclaiming a frame) page faults: 410138; 	Voluntary context switches: 145350; 	Involuntary context switches: 131; 	Swaps: 0; 	File system inputs: 15192744; 	File system outputs: 936; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; bash-4.2$ rm /tmp/vvasilev/vvasilev/afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp*; bash-4.2$ /usr/bin/time -v python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp')"" ; ACLiC:0: RuntimeWarning: /afs/cern.ch/user/t/tnanut/public/Stephan is not writable!; ACLiC:0: RuntimeWarning: Output will be written to /tmp/vvasilev/vvasilev; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/vvasilev/vvasilev//afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roof",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7774#issuecomment-931958356:5071,message,messages,5071,https://root.cern,https://github.com/root-project/root/issues/7774#issuecomment-931958356,2,['message'],['messages']
Integrability,ib64/libc.so.6 (0x00007fe2b13ae000); libGraf3d.so.6.24 (0x00007fe2b12f9000); libGpad.so.6.24 (0x00007fe2b121b000); libGraf.so.6.24 (0x00007fe2b10b4000); libMultiProc.so.6.24 (0x00007fe2b10a5000); libNet.so.6.24 (0x00007fe2b0fc0000); /lib64/ld-linux-x86-64.so.2 (0x00007fe2b370e000); libbrotlienc.so.1 => /usr/lib64/libbrotlienc.so.1 (0x00007fe2b0f1c000); libbrotlidec.so.1 => /usr/lib64/libbrotlidec.so.1 (0x00007fe2b0f0e000); libutf8proc.so.2 => /usr/lib64/libutf8proc.so.2 (0x00007fe2b0eb9000); libdl.so.2 => /lib64/libdl.so.2 (0x00007fe2b0eb3000); liblz4.so.1 => /usr/lib64/liblz4.so.1 (0x00007fe2b0e80000); libz.so.1 => /lib64/libz.so.1 (0x00007fe2b0e5e000); libicui18n.so.69 => /usr/lib64/libicui18n.so.69 (0x00007fe2b0aff000); libicuuc.so.69 => /usr/lib64/libicuuc.so.69 (0x00007fe2b08da000); libThread.so.6.24 (0x00007fe2b0881000); libMatrix.so.6.24 (0x00007fe2b06f9000); libtbb_debug.so.2 => /usr/lib64/libtbb_debug.so.2 (0x00007fe2b06a4000); libpcre.so.1 => /lib64/libpcre.so.1 (0x00007fe2b061f000); liblzma.so.5 => /lib64/liblzma.so.5 (0x00007fe2b05f1000); libxxhash.so.0 => /usr/lib64/libxxhash.so.0 (0x00007fe2b05e4000); libzstd.so.1 => /usr/lib64/libzstd.so.1 (0x00007fe2b04bd000); libfreetype.so.6 => /usr/lib64/libfreetype.so.6 (0x00007fe2b03ca000); libssl.so.1.1 => /usr/lib64/libssl.so.1.1 (0x00007fe2b032e000); libcrypto.so.1.1 => /usr/lib64/libcrypto.so.1.1 (0x00007fe2b0033000); libbrotlicommon.so.1 => /usr/lib64/libbrotlicommon.so.1 (0x00007fe2b000f000); libicudata.so.69 => /usr/lib64/libicudata.so.69 (0x00007fe2ae4b4000); librt.so.1 => /lib64/librt.so.1 (0x00007fe2ae4a8000); libbz2.so.1 => /lib64/libbz2.so.1 (0x00007fe2ae48c000); libpng16.so.16 => /usr/lib64/libpng16.so.16 (0x00007fe2ae443000); ```. But then our software pulls in gandiva:; ```; [O2/latest] ~/alice/sw/gentoo2_x86-64/O2/latest/bin $> ldd o2-sim-serial; [...]; libgandiva.so.100 => /usr/lib64/libgandiva.so.100 (0x00007f5ae0b3d000); ```. Not sure this is the only dependency chain that leads to the llvm11.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180#issuecomment-843137896:4497,depend,dependency,4497,https://root.cern,https://github.com/root-project/root/issues/8180#issuecomment-843137896,1,['depend'],['dependency']
Integrability,"igned int; typename Architecture::Scalar_t = double]::&lt;lambda(Scalar_t)&gt;’, is used but never defined [-fpermissive] . ### Warnings:; - include/Vc/scalar/vector.h:288:9: warning: declaration of ‘reference’ shadows a previous local [-Wshadow] ; - include/Vc/sse/vector.h:318:9: warning: declaration of ‘reference’ shadows a previous local [-Wshadow] ; - include/Vc/common/simdarray.h:450:5: warning: declaration of ‘reference’ shadows a previous local [-Wshadow] ; - include/Vc/common/simdarray.h:1377:5: warning: declaration of ‘reference’ shadows a previous local [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2980#issuecomment-439015981:2229,depend,depends,2229,https://root.cern,https://github.com/root-project/root/pull/2980#issuecomment-439015981,1,['depend'],['depends']
Integrability,ild/146029/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_ROOT_8197](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_ROOT_8197/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_drawing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.root/meta/roottest_root_meta_drawing/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146029/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1137072883:2368,interface,interface,2368,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137072883,2,['interface'],['interface']
Integrability,ild/146050/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_ROOT_8197](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_ROOT_8197/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_drawing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.root/meta/roottest_root_meta_drawing/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146050/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1137155659:2368,interface,interface,2368,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137155659,2,['interface'],['interface']
Integrability,ild/146100/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_ROOT_8197](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_ROOT_8197/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_drawing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.root/meta/roottest_root_meta_drawing/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146100/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1138875776:2368,interface,interface,2368,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1138875776,2,['interface'],['interface']
Integrability,ild/workspace/root-pullrequests-build/build/graf2d/primitives && /usr/local/bin/cmake -E env LD_LIBRARY_PATH=/mnt/build/workspace/root-pullrequests-build/build/lib: ROOTIGNOREPREFIX=1 /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling -rootbuild -v2 -f G__ROOTGraphicsPrimitives.cxx -cxxmodule -s /mnt/build/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives.so -m libCore_rdict.pcm -m libRIO_rdict.pcm -excludePath /mnt/build/workspace/root-pullrequests-build/root -excludePath /mnt/build/workspace/root-pullrequests-build/build -rml libROOTGraphicsPrimitives.so -rmf /mnt/build/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives.rootmap -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/etc/cling/ -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/io/io/res -writeEmptyRootPCM ROOT/RBox.hxx ROOT/RColor.hxx ROOT/RDisplayItem.hxx ROOT/RDrawingAttr.hxx ROOT/RDrawingOptsBase.hxx ROOT/RLine.hxx ROOT/RMarker.hxx ROOT/RPadExtent.hxx ROOT/RPadLength.hxx ROOT/RPadPos.hxx ROOT/RPalette.hxx ROOT/RStringEnumAttr.hxx ROOT/RStyle.hxx ROOT/RText.hxx /mnt/build/workspace/root-pullrequests-build/root/graf2d/primitives/inc/LinkDef.h ; - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -&gt; ROOTGpadv7 -&gt; ROOTGraphicsPrimitives ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RBox.hxx:23:10: fatal error: could not build module 'ROOTGpadv7' ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives3d57938004_dictUmbrella.h),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3468#issuecomment-467425096:1717,depend,dependency,1717,https://root.cern,https://github.com/root-project/root/pull/3468#issuecomment-467425096,1,['depend'],['dependency']
Integrability,"ild/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:923:11: error: invalid use of incomplete type ‘class TFile’ ; - /mnt/build/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:924:18: error: incomplete type ‘TFile’ used in nested name specifier ; - /mnt/build/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:927:34: error: invalid use of incomplete type ‘class TFile’ ; - /mnt/build/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:928:34: error: invalid use of incomplete type ‘class TFile’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2619#issuecomment-421309703:1421,depend,depends,1421,https://root.cern,https://github.com/root-project/root/pull/2619#issuecomment-421309703,1,['depend'],['depends']
Integrability,"ile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'; | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'; | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>; | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root""; | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'; | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'; | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'; | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>; | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit; | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'; | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get; | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'; | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1""; | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'; | | `-CXXDependentScopeMemberExpr 0x5af6326df878 <col:1, col:6> '<dependent type>' lvalue ->Draw; | | `-DeclRefExpr 0x5af6326df838 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'; | |-CallExpr 0x5af6326e1a40 <line:10:1, col:31> '<dependent type>'; | | |-CXXDependentScopeMemberExpr 0x5af6326df900 <col:1, col:6> '<dependent type>' lvalue ->SaveAs; | | | `-DeclRefExpr 0x5af6326df8e0 <col:1> 'auto' lvalue Var 0x5af6326de508 'cnv' 'auto'; | | `-StringLiteral 0x5af6326e1a18 <col:13> 'const char[17]' lvalue ""loaded_c_new.png""; | `-NullStmt 0x5af6326e1a68 <line:13:1>; |-AnnotateAttr 0x5af6326de5e0 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; `-AnnotateAttr 0x5af6326de730 <<invalid sloc>> Implicit R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; <<<NULL>>>; ```. p.s. just for completeness I made a little mistake in the example above, I load the object in th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16560#issuecomment-2402546592:1581,depend,dependent,1581,https://root.cern,https://github.com/root-project/root/issues/16560#issuecomment-2402546592,8,['depend'],['dependent']
Integrability,"iled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility.; (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNamed //Abstract interface for fitting; TMVA::VariableDecorrTransform ; TMVA::VariableGaussTransform ; TMVA::VariableIdentityTransform ; TMVA::VariableNormalizeTransform ; TMVA::VariablePCATransform ; TMVA::VariableRearrangeTransform ; TMVA::VariableTransformBase ; TSpectrum2Transform ; TSpectrumTransform ; ROOT::Math::Transform3D ; TGeoUniformMagField ; class ROOT::Math::SinVariableTransformation ; class ROOT::Math::SqrtLowVariableTransformation ; class ROOT::Math::SqrtUpVariableTransformation ; class auto_ptr<ROOT::Math::MinimizerVariableTransformation> ; class vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> > ; class reverse_iterator<vector<ROOT::Math::MinimTransformVariable,allocator<ROOT::Math::MinimTransformVariable> >::iterator> ; (compiled) typedef void *ClassStreamerFunc_t //Streamer function for a class; (compiled) typedef void *MemberStreamerFunc_t //Streamer function for a data member; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef auto_ptr<ROOT::Math::MinimizerVariableTransformation> ROOT::Math::MinimTransformVariable::auto_ptr<MinimizerVariableTransformation>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IGradientFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseGradFunc; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef ROOT::Math::IBaseFunctionMultiDim ROOT::Math::MinimTransformFunction::BaseFunc; /opt/root/root_v5.34.34/lib/libMathCore.so -1 typedef",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:6007,interface,interface,6007,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,2,['interface'],['interface']
Integrability,"imizer.h Math/GSLMinimizer1D.h Math/GSLMultiRootFinder.h Math/GSLNLSMinimizer.h Math/GSLQuasiRandom.h Math/GSLRandom.h Math/GSLRandomFunctions.h Math/GSLRndmEngines.h Math/GSLRootFinder.h Math/GSLRootFinderDeriv.h Math/GSLSimAnMinimizer.h Math/InterpolationTypes.h Math/Interpolator.h Math/KelvinFunctions.h Math/MCParameters.h Math/PdfFuncMathMore.h Math/Polynomial.h Math/ParamFunction.h Math/QuasiRandom.h Math/RootFinderAlgorithms.h Math/SpecFuncMathMore.h Math/Vavilov.h Math/VavilovAccurate.h Math/VavilovAccurateCdf.h Math/VavilovAccuratePdf.h Math/VavilovAccurateQuantile.h Math/VavilovFast.h /build/root-cds-6.26.04.sg/math/mathmore/inc/Math/LinkDef.h; <<< cling interactive line includer >>>: fatal error: module file '/build/root-cds-6.26.04.sg/.build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/build/root-cds-6.26.04.sg/.build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:142: math/mathmore/G__MathMore.cxx] Error 1; make[2]: Leaving directory '/build/root-cds-6.26.04.sg/.build'; make[1]: *** [CMakeFiles/Makefile2:26590: math/mathmore/CMakeFiles/G__MathMore.dir/all] Error 2; ```; Something still seems to be wrong with `cling`? What is that `Rint` file, is it related to R (which isn't enabled)?; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix exceptions fftw3 fitsio gdml gfal gnuinstall http imt mathmore mlp minuit2 mysql opengl pgsql pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd; ```. I'm already running out of ideas but will retry with the full dependency set and `cmake` options line, keeping `-j 1`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1161349757:5400,depend,dependency,5400,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1161349757,1,['depend'],['dependency']
Integrability,"in /usr/home/erik/devel/resources/root/build; 1 error. make: stopped in /usr/home/erik/devel/resources/root/build; ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell; -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4; Processor 8 core 0 MHz (amd64); Build type RelWithDebInfo; Install path /usr/local; Compiler Clang 14.0.5; Compiler flags:; C -pipe -Wall -W -pthread -O2 -g -DNDEBUG; C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd; ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell; cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b; ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865#issuecomment-1779361849:3737,message,message,3737,https://root.cern,https://github.com/root-project/root/issues/13865#issuecomment-1779361849,1,['message'],['message']
Integrability,"inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf3d/g3d/inc -I/mnt/build/workspace/root-pullrequests-build/root/test/unit_testing_support -isystem googletest-prefix/src/googletest/googletest/include -isystem googletest-prefix/src/googletest/googlemock/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -std=c++11 -MD -MT tree/dataframe/test/CMakeFiles/dataframe_vecops.dir/dataframe_vecops.cxx.o -MF tree/dataframe/test/CMakeFiles/dataframe_vecops.dir/dataframe_vecops.cxx.o.d -o tree/dataframe/test/CMakeFiles/dataframe_vecops.dir/dataframe_vecops.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_vecops.cxx ; - [2021-05-04T14:51:49.461Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RTreeColumnReader.hxx:100:42: error: dependent-name ‘ROOT::VecOps::RVec&lt;T&gt;::pointer’ is parsed as a non-type, but instantiation yields a type ; - [2021-05-04T14:51:49.461Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RTreeColumnReader.hxx:100:42: error: dependent-name ‘ROOT::VecOps::RVec&lt;T&gt;::pointer’ is parsed as a non-type, but instantiation yields a type ; - [2021-05-04T14:51:52.248Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-832003505:3069,depend,dependent-name,3069,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-832003505,1,['depend'],['dependent-name']
Integrability,"include(s).; #include <memory>. // Forward declaration(s).; class ROpaqueTaskArena;. class RTaskArena {; public:; /// Default constructor; RTaskArena();. private:; /// Task arena object; std::unique_ptr<ROpaqueTaskArena> fTaskArena;; };. #endif // TEST_RTASKARENA_HXX; [bash][Legolas]:build > more ../ROpaqueTaskArena/RTaskArena.cxx. // Local include(s).; #include ""RTaskArena.hxx""; #include ""ROpaqueTaskArena.hxx"". RTaskArena::RTaskArena(); : fTaskArena( new ROpaqueTaskArena() ) {}; [bash][Legolas]:build > more ../ROpaqueTaskArena/test.cxx . // Local include(s).; #include ""RTaskArena.hxx"". int main() {. RTaskArena arena;; return 0;; }; [bash][Legolas]:build > cmake ../ROpaqueTaskArena/; -- The CXX compiler identification is GNU 9.3.0; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Configuring done; -- Generating done; -- Build files have been written to: /home/krasznaa/development/ropaquetaskarena/build; [bash][Legolas]:build > make; Scanning dependencies of target TaskArenaLib; [ 25%] Building CXX object CMakeFiles/TaskArenaLib.dir/RTaskArena.cxx.o; [ 50%] Linking CXX shared library libTaskArenaLib.so; [ 50%] Built target TaskArenaLib; Scanning dependencies of target TaskArenaTest; [ 75%] Building CXX object CMakeFiles/TaskArenaTest.dir/test.cxx.o; In file included from /usr/include/c++/9/memory:80,; from /home/krasznaa/development/ropaquetaskarena/ROpaqueTaskArena/RTaskArena.hxx:5,; from /home/krasznaa/development/ropaquetaskarena/ROpaqueTaskArena/test.cxx:3:; /usr/include/c++/9/bits/unique_ptr.h: In instantiation of ‘void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = ROpaqueTaskArena]’:; /usr/include/c++/9/bits/unique_ptr.h:292:17: required from ‘std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = ROpaqueTaskArena; _Dp = std::default_d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7062#issuecomment-762847080:2828,depend,dependencies,2828,https://root.cern,https://github.com/root-project/root/pull/7062#issuecomment-762847080,1,['depend'],['dependencies']
Integrability,include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:171): will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:171): will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:171): will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:171): will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:171): will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-596563227:1309,interface,interface,1309,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-596563227,3,['interface'],['interface']
Integrability,"indeed. I am not sure why this choice was made though. Anyway, we even already have ```TClassEdit::DemangleTypeIdName(const std::type_info& ti, int& errorCode)``` that hides the platform dependence ... it might need to be moved though to be accessible from Rtypes.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1389#issuecomment-347666945:187,depend,dependence,187,https://root.cern,https://github.com/root-project/root/pull/1389#issuecomment-347666945,1,['depend'],['dependence']
Integrability,ing interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-12T06:56:09.498Z] ghprbPullLongDescription=This addresses test failures like:\r\n```\r\n 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417#issuecomment-860019280:2781,message,message,2781,https://root.cern,https://github.com/root-project/root/pull/8417#issuecomment-860019280,1,['message'],['message']
Integrability,"ing of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS3] Moved `DependencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation; [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation; [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF] New mechanism to implicitly convert numbers to RooRealVar&; [RF] Remove RooFormula code for gcc <= 4.8; [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; [RF] More use of `snapshot()` overload with output parameter; [RF] Bring back `RooStats::FeldmanCousins::SetData()`; [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12618#issuecomment-1497317057:7761,wrap,wrapper,7761,https://root.cern,https://github.com/root-project/root/pull/12618#issuecomment-1497317057,2,['wrap'],['wrapper']
Integrability,ing tests:; - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_friend_trees](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_friend_trees/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_inv_mass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_inv_mass/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_reducer_merge](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_reducer_merge/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_include_headers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_include_headers/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_histo_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_histo_write/); - [projectroot.bindings.experimental.distrdf.tests.unit.backend.pyunittests_distrdf_unit_backend_test_spark](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.unit/backend/pyunittests_distrdf_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-774106349:1204,integrat,integration,1204,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-774106349,1,['integrat'],['integration']
Integrability,"ingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module root_std_complex.h resolved but not visible![5558/8175] Generating G__Net.cxx, ../../lib/libNet_rdict.pcm, ../../lib/libNet.rootmap, ../../lib/Net.pcm ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module Rtypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module Rtypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module RRemoteProtocol.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TApplication.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TMD5.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TUrl.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBufferFile.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module MessageTypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBits.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSysEvtHandler.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TApplication.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSysEvtHandler.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TUrl.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSystem.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module MessageTypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TNamed.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:4213,Message,MessageTypes,4213,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Message'],['MessageTypes']
Integrability,"inished name='Task-245' coro=<SpecCluster._correct_state_internal() done, defined at /home/vpadulan/.local/lib/python3.10/site-packages/distributed/deploy/spec.py:330> exception=RuntimeError('cannot schedule new futures after shutdown')>); Traceback (most recent call last):; File ""/home/vpadulan/.local/lib/python3.10/site-packages/tornado/ioloop.py"", line 741, in _run_callback; ret = callback(); File ""/home/vpadulan/.local/lib/python3.10/site-packages/tornado/ioloop.py"", line 765, in _discard_future_result; future.result(); RuntimeError: cannot schedule new futures after shutdown; ```. Initially I thought these errors were just a by-product of the errors coming from `TInterpreter` that were leaving the dask worker in a bad state and thus breaking the scheduler too. But then, I updated to `distributed==2022.8.1` and they were not present. So I went on and I used `git bisect` starting from `2022.8.0` going onwards. . I was able to identify the following scenarios, depending on a combination of the status of ROOT and the version of dask `distributed` module:. * ROOT current master, with `distributed==2022.8.0`: errors like shown shown above, both those coming from `TInterepreter::Calc` from RDF and those coming from dask about `cannot schedule new futures after shutdown` that I mentioned in this comment.; * ROOT current master, with `distributed==2022.8.1`: **No more errors about futures after shutdown**. The errors from `TInterpreter::Calc` remain; * ROOT master+fix, with `distributed==2022.8.0`: **No more errors from `TInterpreter::Calc`**, but still errors from dask about `cannot schedule new futures after shutdown` **and also the segfaults with Python-only stacktrace** that I wrote in a previous comment; * ROOT master+fix, with `distributed==2022.8.1`: **No errors at all!**. So it seems that a mix of adding the fix suggested by Philippe (a `R_LOCKGUARD` in `TClingClassInfo::IsEnum`) plus updating to `distributed==2022.8.1` fixes all our problems. ## More details ab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515#issuecomment-1272186236:1710,depend,depending,1710,https://root.cern,https://github.com/root-project/root/issues/11515#issuecomment-1272186236,1,['depend'],['depending']
Integrability,"ion=..., depList=..., funcNormSet=0x7ffeb72417c0, config=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooRealIntegral.cxx:420; #24 0x00007f7898db07ed in RooAbsReal::createIntObj (this=0x1034f300, iset2=..., nset2=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:667; #25 0x00007f7898db003c in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=0x7ffeb72417c0, cfg=0x0, rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:594; #26 0x00007f7898dcc628 in RooAbsReal::createIntegral (this=0x1034f300, iset=..., nset=..., rangeName=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/inc/RooAbsReal.h:216; #27 0x00007f7898db22a1 in RooAbsReal::createPlotProjection (this=0xf4c2880, dependentVars=..., projectedVars=0x7ffeb72423a0, cloneSet=; 0x7ffeb7242318: 0xe968710, rangeName=0x0, condObs=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:981; #28 0x00007f7898db8d55 in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, o=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:2099; #29 0x00007f7898db755b in RooAbsReal::plotOn (this=0xf4c2880, frame=0x103e51a0, argList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsReal.cxx:1928; #30 0x00007f7898da2890 in RooAbsPdf::plotOn (this=0xf4c2880, frame=0x103e51a0, cmdList=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooAbsPdf.cxx:3149; #31 0x00007f7898db57a5 in RooAbsReal::plotOn (this=0xf4c2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474#issuecomment-864393181:6809,depend,dependentVars,6809,https://root.cern,https://github.com/root-project/root/issues/8474#issuecomment-864393181,1,['depend'],['dependentVars']
Integrability,"ir<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308); ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558); ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623); ==92602== by 0x1BCD199B: (anonymous namespace)::DictInit::DictInit() (G__Net.cxx:3631); ==92602== by 0x1BCD1DD7: __static_initialization_and_destruction_0(int, int) (G__Net.cxx:3633); ==92602== by 0x1BCD1E27: _GLOBAL__sub_I_G__Net.cxx (G__Net.cxx:3637); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x45DD42B: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() (TCheckHashRecursiveRemoveConsistency.h:53); ==92602== by 0x45DE53F: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) (TCheckHashRecursiveRemoveConsistency.h:241); ==92602== by 0x45D6AB3: TClass::SetRuntimeProperties() (TClass.cxx:6157); ==92602== by 0x45DC8A3: TClass::HasConsistentHashMember() (TClass.h:501); ==92602== by 0x45DB3BB: ROOT::Internal::HasConsistentHashMember(TClass&) (TClass.cxx:7321); ==92602== by 0x455B6B7: TPair::CheckTObjectHashConsistency() const (TMap.h:124); ==92602== by 0x454CB07: TObject::CheckedHash() (TObject.h:326); ==92602== by 0x454CC2B: THashTable::GetCheckedHashValue(TObject*) const (THashTable.h:95); ==92602== by 0x4549833: THashTable::Add(TObject*) (T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:9552,depend,depends,9552,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,isibility=hidden -Wno-shadow -fno-strict-aliasing -Wno-unused-parameter -Wwrite-strings -Wno-long-long -Wno-missing-field-initializers -DLLVM_BUILD_GLOBAL_ISEL -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -MD -MT core/foundation/CMakeFiles/Foundation_Stage1.dir/src/TClassEdit.cxx.o -MF core/foundation/CMakeFiles/Foundation_Stage1.dir/src/TClassEdit.cxx.o.d -o core/foundation/CMakeFiles/Foundation_Stage1.dir/src/TClassEdit.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/TClassEdit.cxx ; - [2020-12-01T16:40:31.719Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/TClassEdit.cxx:513:37: error: ‘offset’ was not declared in this scope ; - [2020-12-01T16:40:31.719Z] FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -Iginclude -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT core/foundation/CMakeFiles/Foundation.dir/src/TClassEdit.cxx.o -MF core/foundation/CMakeFiles/Foundation.dir/src/TClassEdit.cxx.o.d -o core/foundation/CMakeFiles/Foundation.dir/src/TClassEdit.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/TClassEdit.cxx ; - [2020-12-01T16:40:31.719Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/TClassEdit.cxx:513:37: error: ‘offset’ was not declared in this scope ; - [2020-12-01T16:43:54.915Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - [2020-12-01T16:43:54.915Z] CMake Error at VC-stamp/VC-download-Release.cmake:49 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6895#issuecomment-736673041:2578,message,message,2578,https://root.cern,https://github.com/root-project/root/pull/6895#issuecomment-736673041,1,['message'],['message']
Integrability,"ister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:189270,depend,depends,189270,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"ister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:193464,depend,depends,193464,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"it depends on the timescales/cost of the change, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1662#issuecomment-367848075:3,depend,depends,3,https://root.cern,https://github.com/root-project/root/pull/1662#issuecomment-367848075,1,['depend'],['depends']
Integrability,"it's official request, we want to integrate TBB 2021.1.1 and the ROOT tag for cmssw master is 6.22.06",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6933#issuecomment-762161425:34,integrat,integrate,34,https://root.cern,https://github.com/root-project/root/issues/6933#issuecomment-762161425,1,['integrat'],['integrate']
Integrability,"it-roofitcore-test-testSumW2Error (Failed); 	294 - gtest-roofit-roofitcore-test-testLikelihoodGradientJob (Failed); 	295 - gtest-roofit-roofitcore-test-testLikelihoodJob (Failed); 	298 - gtest-roofit-roostats-test-testSPlot (Failed). Here is an example failure:; ```; 331/1268 Test #292: gtest-roofit-roofitcore-test-testSumW2Error ...............................***Failed 0.58 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 2 tests from SumW2Error; [ RUN ] SumW2Error.BatchMode; /builddir/build/BUILD/root-6.30.02/core/testsupport/src/TestSupport.cxx:77: Failure; Failed; Received unexpected diagnostic of severity 2000 at 'RooNaNPacker' reading 'Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern'.; Suppress those using ROOT/TestSupport.hxx; [ FAILED ] SumW2Error.BatchMode (408 ms); [ RUN ] SumW2Error.ExtendedFit; [ OK ] SumW2Error.ExtendedFit (112 ms); [----------] 2 tests from SumW2Error (521 ms total); [----------] Global test environment tear-down; [==========] 2 tests from 1 test suite ran. (521 ms total); [ PASSED ] 1 test.; [ FAILED ] 1 test, listed below:; [ FAILED ] SumW2Error.BatchMode; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.30.02/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```; Normally, when root issues a warning it is not fatal, and program execution continues. However, this is a test, and the ROOT::TestSupport installs a custum error handler that captures warnings and rethrow them as GTest failures. So it this contaext a warning is expected to generate a failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10303#issuecomment-1837156931:2946,message,message,2946,https://root.cern,https://github.com/root-project/root/pull/10303#issuecomment-1837156931,1,['message'],['message']
Integrability,it/TestStatistics/LikelihoodGradientWrapper.h:30:7: error: conflicting declaration ‘struct RooFit::TestStatistics::RooAbsL’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:31:8: error: conflicting declaration ‘struct RooFit::TestStatistics::WrapperCalculationCleanFlags’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:37:46: error: ‘RooAbsL’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:37:53: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:46: error: ‘WrapperCalculationCleanFlags’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:74: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:44:11: error: ‘LikelihoodGradientMode’ has not been declared . And 2038 more. ### Warnings:; - [2023-01-06T12:13:58.100Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:3:32: warning: declaration of ‘G__RooFitCoreInit290’ shadows a global declaration [-Wshadow] ; - [2023-01-06T12:13:58.935Z] /data/sftnight/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx:19968:46: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - [2023-01-06T12:13:58.935Z] /data/sftnight/workspace/root-pullrequests-build/build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373555060:2063,Wrap,WrapperCalculationCleanFlags,2063,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373555060,1,['Wrap'],['WrapperCalculationCleanFlags']
Integrability,"ith RTLD_DEEPBIND. (By design, RTLD_DEEPBIND links to libstdc++ first before checking the global namespace, so it does not see the copy-relocated symbol.). I am not a huge fan of the `RTLD_DEEPBIND` approach because it is not portable and it essentially overrides the dynamic linker behavior yet one more time. I am not sure how this would translate to Windows for example. > ; > ; > The problem can be avoided if executables are compiled with -fPIC as well.; > I just tried locally to compile the failing ROOT ctests with -fPIC and this fixed the segmentation faults.; > The question is whether this is a proper solution, since it would require to compile all executables with -fPIC. On the other hand, I don't know how to fix this in another way. Perhaps this could be enabled via a special CMake option for ROOT, which enables RTLD_DEEPBIND for libCling and -fPIC for all executables. IIUC, `RTLD_DEEPBIND` alters the search order of the dynamic linker and using -fPIC intends to deduplicate. That seems as bad as preloading a set of llvm dependent libraries, IMO. Do we need `libgandiva.so` to be compiled with -fPIC or just the executables which 'use' ROOT?. > @vgvassilev : I do not see how I could control this.; > https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L2037 states that InitInterpreter() should be called after main(). Therefore, as we link to libgandiva, which links to llvm libs, the system LLVM symbols will always be in the global namespace by design. They are loaded before main(), while InitInterpreter() loads libCling only after main(). This check is to protect the subsequent `dlsyms` in TCling to resolve symbols from the wrong place. We can fix the check and play with the JIT resolution logic by playing with the search order here: https://github.com/root-project/root/blob/39630b7530771be3e4643048361886dcfb057f07/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp#L299-L302. The challenge is to come up with a consistent symbol resolution :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564015399:2215,depend,dependent,2215,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564015399,1,['depend'],['dependent']
Integrability,ix/src/VDT-stamp/VDT-download ; - [2021-08-26T14:15:12.643Z] CMake Error at VDT-stamp/VDT-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:24.829Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src/DAVIX-stamp/DAVIX-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src/DAVIX-stamp/DAVIX-download ; - [2021-08-26T14:15:24.829Z] CMake Error at DAVIX-stamp/DAVIX-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:37.013Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - [2021-08-26T14:15:37.013Z] CMake Error at TBB-stamp/TBB-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:37.013Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - [2021-08-26T14:15:37.013Z] CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:37.013Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - [2021-08-26T14:15:37.013Z] CMake Error at VC-stamp/VC-download-Release.cmake:49 (message): . And 2 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8903#issuecomment-906453026:1633,message,message,1633,https://root.cern,https://github.com/root-project/root/pull/8903#issuecomment-906453026,3,['message'],['message']
Integrability,"ize.cxx:1105 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&) Pre-release format version: RC 1; [ OK ] RNTuple.RandomAccess (113 ms); [ RUN ] RNTuple.LargeFile; Warning in [ROOT.NTuple] Warning /builddir/build/BUILD/root-6.26.02/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&) The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in [ROOT.NTuple] Warning /builddir/build/BUILD/root-6.26.02/tree/ntuple/v7/src/RNTupleSerialize.cxx:1105 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&) Pre-release format version: RC 1; /builddir/build/BUILD/root-6.26.02/test/unit_testing_support/ROOTUnitTestSupport.cxx:75: Failure; Failed; Received unexpected diagnostic of severity 2000 at 'RIoUring' reading 'io_uring is unexpectedly not available because:; batch 0: read failed for ReadEvent[1], error: Invalid argument'.; Suppress those using ROOTUnitTestSupport.h; /builddir/build/BUILD/root-6.26.02/test/unit_testing_support/ROOTUnitTestSupport.cxx:75: Failure; Failed; Received unexpected diagnostic of severity 2000 at 'RRawFileUnix' reading 'io_uring setup failed, falling back to blocking I/O in ReadV'.; Suppress those using ROOTUnitTestSupport.h; [ FAILED ] RNTuple.LargeFile (20982 ms); [----------] 3 tests from RNTuple (29599 ms total); [----------] Global test environment tear-down; [==========] 3 tests from 1 test suite ran. (29599 ms total); [ PASSED ] 2 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.LargeFile; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.26.02/cmake/modules/RootTestDriver.cmake:227 (message):; error code: 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10303#issuecomment-1100792435:3812,message,message,3812,https://root.cern,https://github.com/root-project/root/pull/10303#issuecomment-1100792435,1,['message'],['message']
Integrability,"ject_Repr (obj);; if (!repr) return nullptr;; const char* s = PyROOT_PyUnicode_AsString (repr);; if (*s == '<') ++s;; if (strncmp (s, ""ROOT."", 5) == 0); s += 5;; if (strncmp (s, ""cppyy.gbl."", 10) == 0); s += 10;; const char* p = strstr (s, "" object "");; if (!p) return nullptr;; std::string name;; name.reserve (p-s + 10);; while (s < p) {; if (*s == '.'); name += ""::"";; else; name += *s;; ++s;; }; TClass* cls = TClass::GetClass (name.c_str());; Py_DECREF (repr);; return cls;; }; ```. We can identify at least three distinct problems here. 1. First, this code is stupid. It's trying to get the TClass for a pyroot; object. It does this by calling repr on the object (which could result; in something very large) and then trying to extract the class name; and looking it up with TClass. In fact, it looks like this hasn't; actually been working for a while now, because the format of the repr; string changed --- and now doesn't include the 'object' string.; If i change this to instead use Py_TYPE(obj)->tp_name, then everything; works (and much faster too!). 2. I originally added this code here, but from the comments, it was copied; from the pyroot of the time. The reason why we're doing this in this; roundabout way to begin with is because the TPython interface doesn't; supply any way to get the TClass from a pyroot object. If it would; add a call for that, than this could be streamlined. 3. Finally, there seems to have been a regression with finding the repr; string for a pyroot object between 6.26.10 and dev4. If i have a loop; just calling repr for a vector<float> instance, it runs very slowly; and eventually starts printing memory errors from cling. But with 6.26.10,; it runs much faster and does not start crashing. It sounds sort of like; code is now being repeatedly jitted each time with dev4, but i have; not tried to verify that. Anyway, this change gets at least the unit tests working. Will try to get; that merged soon, and will try to report the repr issue separately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12406#issuecomment-1547118274:1449,interface,interface,1449,https://root.cern,https://github.com/root-project/root/issues/12406#issuecomment-1547118274,1,['interface'],['interface']
Integrability,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1849,interface,interface,1849,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479,2,['interface'],['interface']
Integrability,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1849,interface,interface,1849,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598,2,['interface'],['interface']
Integrability,"k&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful IN2P3 LAPP_LAKE. https://bigpanda.cern.ch//media/filebrowser/f9695015-c110-4e2e-9c62-d56eade824f8/panda/tarball_PandaJob_4926136184_IN2P3-LAPP_LAKE/payload.stdout. [2020-12-19 02:08:57.250908 +0100][Debug ][XRootDTransport ] [lapp-se01.in2p3.fr:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 500); [2020-12-19 02:08:57.251553 +0100][Debug ][XRootDTransport ] [lapp-se01.in2p3.fr:1094 #0.0] Sending out kXR_login request, username: atlaspil, cgi: ?xrd.cc=fr&xrd.tz=1&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=lapp-wn168.in2p3.fr&xrd.rn=v4.10.0, dual-stack: false, private IPv4: false, private IPv6: false. Failed Tokyo:. https://bigpanda.cern.ch//media/filebrowser/e051d153-88d6-4010-9bae-adee1dc89c07/panda/tarball_PandaJob_4925837464_TOKYO/payload.stdout. [2020-12-18 18:28:04.321336 +0000][Debug ][XRootDTransport ] [lcg-se01.icepp.jp:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 500). Failed BNL:. https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout. [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: manager [], protocol version 500). Fail Romania:. https://bigpanda.cern.ch//media/filebrowser/60928171-593f-4422-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout. [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 400). Fail canada:. https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout. [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400). F",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758062082:2739,protocol,protocol,2739,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758062082,1,['protocol'],['protocol']
Integrability,"ke Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:735 (add_dependencies):; The dependency target ""install-clang"" of target ""install-clang-cl"" does not; exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:736 (add_dependencies):; The dependency target ""install-clang-stripped"" of target; ""install-clang-cl-stripped"" does not exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). -- Generating done; CMake Generate step failed. Build files cannot be regenerated correctly.; error: builder for '/nix/store/8xsj5zq00fkbndl1zzjngmxj3hhi51hd-root-6.28.00.drv' failed with exit code 1;; last 10 log lines:; > The dependency target ""install-clang-stripped"" of target; > ""install-clang-cl-stripped"" does not exist.; > Call Stack (most recent call first):; > /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); > interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); > interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink); >; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly.; For full logs, run 'nix log /nix/store/8xsj5zq00fkbndl1zzjngmxj3hhi51hd-root-6.28.00.drv'.; </pre>; </details>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:19807,depend,dependency,19807,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['depend'],['dependency']
Integrability,"king leftover after the analysis (see any file ending with `_patch` and compare it with the same file ending with `_master`). Now that the main source of memory usage is gone, I have noticed a much smaller contribute that still seems to make the memory increase in the flamegraphs. And it seems to have something to do with the increased number of files, at least on the surface. Let's take the following two files to compare:; * test_agc_9sample_1file_10task_patch.html; * test_agc_9sample_10file_10task_patch.html. They are running exactly the same script, with all 9 RDF samples. In the first case we have 1 file per sample, in the second case 10 files per sample. The memray flamegraph report a total of 253.5 MB used for the first case and 260.9 MB used for the first case (7.4 MB delta). There are two main parts of the graph: the one deriving from the `clone` of the Dask process, where the actual analysis code is run, and the one deriving from the `_start` function where most of the Python code around the analysis is (things like `import`ing packages or the Dask worker-scheduler communication). The difference between the two graphs in the `clone` part is of 0.6 MB, the difference between the two `_start` parts is 6.7 MB, so I focus on that from now on. This 6.7 MB difference is in turn split between a 0.1 MB difference deriving from `_PyObject_VectorcallTState` and 6.6 MB difference deriving from. Finally, the vast majority of these 6.6 MB comes from:; * The metrics gathered by profiling (i.e. memray itself); * Dask communication protocol. [Screencast from 2024-07-26 10-47-18.webm](https://github.com/user-attachments/assets/3a21ea3e-c130-42af-b50b-bb324b06eaaa). TL;DR: After this patch the leftover memory increase may be attributed mostly to Dask or memray itself. To confirm this, I have executed the full AGC benchmark on the SWAN platform with 64 workers of the CERN condor pools for 10 times in a row. At the end of the 10th run all the workers have a total RSS of < 1GB.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094#issuecomment-2252273470:1801,protocol,protocol,1801,https://root.cern,https://github.com/root-project/root/pull/16094#issuecomment-2252273470,2,['protocol'],['protocol']
Integrability,"kspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:381:56: error: unknown type name 'RSnapshotOptions' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:440:4: error: no template named 'RResultPtr' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:442:56: error: unknown type name 'RSnapshotOptions' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:459:4: error: no template named 'RResultPtr' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:461:56: error: unknown type name 'RSnapshotOptions' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:660:4: error: no template named 'RResultPtr' . And 10 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2232#issuecomment-399775824:1653,depend,depends,1653,https://root.cern,https://github.com/root-project/root/pull/2232#issuecomment-399775824,2,['depend'],['depends']
Integrability,"l obstacles, the main one being that we don't have a single, coherent code path for all data sources. Crucially, `TTree` is handled differently from any other data format (i.e. it doesn't use the `RDataSource` mechanism). This practically means that I cannot create a lazy `RDataSource` to handle them all. But in first approximation this could have been solved with one extra branching; 2. It is not straightforward to know where exactly to trigger the inferring of the data source. Practically, this is needed at the very latest in `RLoopManager::Run`, i.e. right before the start of the event loop. But it can also be needed before that, namely whenever a node of the computation graph is created it might need to know about the column names it uses, so the dataset schema must be gathered thus the data source type must be inferred. Admittedly, this is also another fixable problem with a better documentation or cleaner code to explain exactly at what point of any RDataFrame application the loop manager would need the dataset schema in place; 3. Probably the greatest obstacle posed by this idea is that it indeed fixes one backwards-incompatible change, but introduces another one. RDataFrame allows some operations to run without triggering the computation graph, actually without even needing to populate the computation graph at all. Specifically, `Describe` produces a string description of some metadata of the dataset wrapped by the RDataFrame, e.g. the name of the TTree and the file it is stored in. This info doesn't need file opening (at least with `TChain`). The lazy data source would effectively change the behaviour of `Describe` as it would hide the type of the data source even if in principle it could be known (supposing the same workflow with TChain as before). Bottom line, it was worth to investigate this idea as it also gave more insights on some of the not-immediately-evident parts of the machinery. Given the insights listed above, I decide to merge the PR as it is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13090#issuecomment-1889018672:1663,wrap,wrapped,1663,https://root.cern,https://github.com/root-project/root/pull/13090#issuecomment-1889018672,1,['wrap'],['wrapped']
Integrability,"l] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-29T20:41:10.036Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982003312:2492,synchroniz,synchronizeParameterSettings,2492,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982003312,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"l] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-30T07:27:04.442Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368821:1958,synchroniz,synchronizeParameterSettings,1958,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368821,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"lang\include\clang/Basic/Diagnostic.h(1300,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_1e28f4dfex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Sema\SemaAttr.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Sema\clangSema.vcxproj] ; - [2020-05-13T13:52:45.076Z] C:\build\workspace\root-pullrequests-build\root\interpreter\cling\lib\Utils\SourceNormalization.cpp(129,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_2c597c5eex': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\cling\lib\Utils\obj.clingUtils.vcxproj] ; - [2020-05-13T13:52:45.462Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-Release.cmake:49 (message): ; - [2020-05-13T13:52:45.462Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/APValue.h(135,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_28a5e50aex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Sema\AttributeList.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Sema\clangSema.vcxproj] ; - [2020-05-13T13:52:45.462Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/Basic/Module.h(442,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_bae1546bdb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Sema\AnalysisBasedWarnings.cpp) [C:\build\workspace\root-pullrequests-build\b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5568#issuecomment-628001950:3781,message,message,3781,https://root.cern,https://github.com/root-project/root/pull/5568#issuecomment-628001950,1,['message'],['message']
Integrability,"latile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x40F38AB: TObjString::TObjString(char const*) (TObjString.h:34); ==92602== by 0x4633F1B: ROOT::TSchemaRule::ProcessList(TObjArray*, TString const&) (TSchemaRule.cxx:966); ==92602== by 0x4631D7B: ROOT::TSchemaRule::SetTarget(TString const&) (TSchemaRule.cxx:506); ==92602== by 0x463093B: ROOT::TSchemaRule::SetFromRule(char const*) (TSchemaRule.cxx:354); ==92602== by 0x45C275B: TClass::AddRule(char const*) (TClass.cxx:1880); ==92602== by 0x45C2303: (anonymous namespace)::ReadRulesContent(_IO_FILE*) (TClass.cxx:1758); ==92602== by 0x45C255B: TClass::ReadRules() (TClass.cxx:1817); ==92602== by 0x1134DAEF: TCling::Initialize() (TCling.cxx:1663); ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102); ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x44FFCCF: TUrl::TUrl(char const*, bool) (TUrl.cxx:76); ==92602== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760); ==92602== by 0x46846E7: TUnixSystem::OpenDirectory(char const*) (TUnixSystem.cxx:1350); ==92602== by 0x113612CF: TCling::LoadLibraryMap(char const*) (TCling.cxx:5680); ==92602== by 0x1134DAFF: TCling::Initialize() (TCling.cxx:1665); ==92602== by 0x440BF2F: TROOT::InitInterpreter() (TROOT.cxx:2102); ==92602== by 0x4402C7B: ROOT::Internal::GetROOT2() (TROOT.cxx:383); ==92602== by 0x440331B: ROOT::GetROOT() (TROOT.cxx:465); ==92602== by 0x441EDD7: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:153); ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147); ==92602== ; ==92602== Conditional jump o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:4156,depend,depends,4156,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['depend'],['depends']
Integrability,ld/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-866798208:5586,Integrat,IntegratorOptions,5586,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-866798208,1,['Integrat'],['IntegratorOptions']
Integrability,"ld/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.18; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.24; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 220812; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 27019; 	Voluntary context switches: 211; 	Involuntary context switches: 7; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1251821611:2799,message,messages,2799,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611,4,['message'],['messages']
Integrability,les.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Clearly mark `RooFit::CloneData()` as deprecated; [RF] Again code-format RooMinimizer; [RF] Avoid overhead of tracking evaluation error msgs when not needed; [RF] Implement safe way to set eval error logging in RooMinimizer; [RF] Use proper infinity checks in RooFit HS3; [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code; [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable; [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Inline infinity constant and checks in `RooNumber`; [RF] Code-format RooNumber.h and RooNumber.cxx; [RF] Fill weight errors when importing RooDataHists to RooDataSet; [RF] Make it possible to directly import RooDataHist to RooDataSet; [RF] Reduce code duplication in RooDataSet constructor; [RF] Always create weight var in RooDataSet when importing weighted data; [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist; [RF] Support also importing `RooDataHists` into RooDataSets; [RF] Avoid some code duplication in `RooDataSet` with importing slices; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF] New mechanism to implicitly convert numbers to RooRealVar&; [RF] Remove RooFormula code for gcc <= 4.8; [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; [RF] More use of `snapshot()` overload with output parameter; [RF] Bring back `RooStats::FeldmanCousins::SetData()`; [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:9665,wrap,wrapper,9665,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,2,['wrap'],['wrapper']
Integrability,"let me argue just once in favour of RVec::Sort. many (all?) operations available with RVec can be done with STL, and Take can be done with RVec v2({v1[0], v1[2]}), but we can be nicer than that, nicer than begin/end. most of the time, RVec is syntactic sugar -- why do we offer RVec::Map instead of std::transform, RVec::Filter instead of std::remove_if, but not Sort, which we already know will be used virtually in every RDF analysis?. regarding TakeLargest/Smallest: depending on how you sort (typically ascending), one could think of Take(v, -2) and Take(v, 2) respectively. just proposing :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2329#issuecomment-406303447:470,depend,depending,470,https://root.cern,https://github.com/root-project/root/pull/2329#issuecomment-406303447,1,['depend'],['depending']
Integrability,"lias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:140); ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151); ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:73938,depend,depends,73938,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"lization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;const clang::CXXMethodDecl*, const clang::CXXMethodDecl*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:296:13: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;clang::CXXMethodDecl*, const clang::FunctionProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2654#issuecomment-424382043:1781,depend,depends,1781,https://root.cern,https://github.com/root-project/root/pull/2654#issuecomment-424382043,2,['depend'],['depends']
Integrability,"ll(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x4A8CB53: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x4A8855A: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C93BC: _M_check_length (basic_string.h:330); ==270704== by 0x66C93BC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:452); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:3872,depend,depends,3872,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"llrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/129238/console).; ### Warnings:; - [2021-11-04T18:40:03.077Z] ghprbPullLongDescription=This pull-request suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc (see below).\r\n\r\nA TClingCallFunc wrapper function might look as the excerpt below, where the function denoted by `func` may have been annotated as `[[nodiscard]]`. Note that if `ret == nullptr` the result of the call is unused.\r\n```c++\r\nextern \""C\"" void __cf_0(void* obj, int nargs, void** args, void* ret) {\r\n if (ret) {\r\n new (ret) (return_type) ((class_name*)obj)-&gt;func(args...);\r\n }\r\n else {\r\n ((class_name*)obj)-&gt;func(args...);\r\n }\r\n}\r\n```\r\n\r\nIn turn, this triggers warnings when used by cppyy/PyROOT, e.g.\r\n```python\r\n&gt;&gt;&gt; import ROOT\r\n&gt;&gt;&gt; v = ROOT.std.vector(int)()\r\n&gt;&gt;&gt; v.empty()\r\ninput_line_34:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute\r\n [-Wunused-result]\r\n ((const vector&lt;int&gt;*)obj)-&gt;empty();\r\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nTrue\r\n&gt;&gt;&gt;\r\n```\r\n\r\n## Changes or fixes:\r\n- Given the above situation, this commit supresses `-Wunused-result` diagnostics only for TClingCallFunc wrapper functions.\r\n\r\n## Checklist:\r\n- [X] tested changes locally\r\n\r\nThis PR fixes #8622. . ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_samplecallback](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/129238/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_samplecallback/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execSharedPtr_WILL_FAIL](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/129238/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execSharedPtr_WILL_FAIL/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9244#issuecomment-961392946:1418,wrap,wrapper,1418,https://root.cern,https://github.com/root-project/root/pull/9244#issuecomment-961392946,1,['wrap'],['wrapper']
Integrability,"llvm/ADT/PointerIntPair.h(190,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\DeclCXX.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2021-04-22T10:04:46.921Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector(1537,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\FrontendActions.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-04-22T10:04:46.921Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility(133,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\InterfaceStubFunctionsConsumer.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-04-22T10:04:46.921Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(94,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseDeclCXX.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2021-04-22T10:04:46.921Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits(442,42): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\Scalarizer.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4465#issuecomment-824710868:3159,Interface,InterfaceStubFunctionsConsumer,3159,https://root.cern,https://github.com/root-project/root/pull/4465#issuecomment-824710868,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,"loaded-virtual] ; - [2021-11-30T07:31:27.486Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:32:08.900Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:32:09.170Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:32:09.170Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] . And 4 more. ### Failing tests:; - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testLikelihoodGradientJob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368250:2397,synchroniz,synchronizeParameterSettings,2397,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368250,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,lrequests-build/125078/console).; ### Errors:; - [2021-08-26T14:15:12.643Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - [2021-08-26T14:15:12.643Z] CMake Error at VDT-stamp/VDT-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:24.829Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src/DAVIX-stamp/DAVIX-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src/DAVIX-stamp/DAVIX-download ; - [2021-08-26T14:15:24.829Z] CMake Error at DAVIX-stamp/DAVIX-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:37.013Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - [2021-08-26T14:15:37.013Z] CMake Error at TBB-stamp/TBB-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:37.013Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - [2021-08-26T14:15:37.013Z] CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:49 (message): ; - [2021-08-26T14:15:37.013Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8903#issuecomment-906453026:1188,message,message,1188,https://root.cern,https://github.com/root-project/root/pull/8903#issuecomment-906453026,1,['message'],['message']
Integrability,"lrequests-build/build/lib/libCling.so; #37 0x00007fdefa2379f9 in clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.5247] [clone .constprop.5251] () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #38 0x00007fdefa19c893 in clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #39 0x00007fdefa16e16c in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #40 0x00007fdefa58db63 in clang::ASTReader::PassInterestingDeclToConsumer(clang::Decl*) () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #41 0x00007fdefa5da4dc in clang::ASTReader::PassInterestingDeclsToConsumer() () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #42 0x00007fdefa5b063e in clang::ASTReader::FinishedDeserializing() [clone .part.1962] [clone .constprop.2010] () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #43 0x00007fdefb4c7fe1 in clang::MultiplexExternalSemaSource::FinishedDeserializing() () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #44 0x00007fdefba6e261 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage() const () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #45 0x00007fdefba6e2cf in clang::DeclContext::decls_begin() const () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #46 0x00007fdefa0bbce9 in TClingClassInfo::TClingClassInfo(cling::Interpreter*, bool) () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; #47 0x00007fdefa07a53a in TCling::GetDataMember(ClassInfo_t*, char const*) const () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCling.so; ```. We trigger excessive deserialization due to the eager iterations over the decl contexts. This PR likely depends on #1416.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-359575131:7108,depend,depends,7108,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-359575131,1,['depend'],['depends']
Integrability,"ls using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3] Consistently have implicit fallback for HistFactory variables; [RF][HS3] Don't import datasets that are parts of a combined dataset; [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`; [RF][HS3] Generate input file for testHS3HistFactory on the fly; [RF][HS3] Improvements to the HS3 HistFactory implementation; [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; [RF][HS3] Some refactoring for less lines of code; [RF][HS3] Ordering fixes; [RF][HS3] Achieved closure for ATLAS ttW workspace; [RF][HS3] Sorting distributions; [RF][HS3] Bugfixes for histfactory workspaces; [RF][HS3] Small renamings; [RF][HS3] Improved attribute handling, caught some typecast-errors; [RF][HS3] Bugfix for FlexibleInterpVar; [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF][HS3] Re-retrieve element after exporting dependants; [RF][HS3] Don't write `histfactory_dist` axes redundantly; [RF] Exclude RooHistError from IO; [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; [RF] Code-format `testRooDataHist.cxx`; [RF][HS3] Change analysis and likelihoods fields to match HS3 standard; [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`; [RF] Modernize `RooVectorDataStore::RealF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:3398,integrat,integration,3398,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,12,"['depend', 'integrat', 'interface']","['dependants', 'integration', 'interface']"
Integrability,"ls/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: (!m_Consumer->getTransaction() || (m_Consumer->getTransaction() == T)) && ""Cannot release different T"", file C:\root-dev\git\master\interpreter\cling\lib\Interpreter\IncrementalParser.cpp, line 538; 768: CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: CurLexerKind != CLK_CachingLexer && ""already in caching lex mode"", file C:\root-dev\git\master\interpreter\llvm-project\clang\lib\Lex\PPCaching.cpp, line 99; 768: Assertion failed: CCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: is(tok::raw_identifier), file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/Lex/Token.h, line 208; 768: Assertion failed: (CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: DiagID - DIAG_UPPER_LIMIT < DiagInfo.size() && ""Invalid diagnostic ID"", file C:\root-dev\git\master\interpreter\llvm-project\clang\lib\Basic\DiagnosticIDs.cpp, line 379; 768: Assertion failed: CurLexerCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: CurLexer && ""Got EOF but no current lexer set!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\lib\Lex\PPLexerChange.cpp, line 531; 768: ACMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14200#issuecomment-1903602682:2181,message,message,2181,https://root.cern,https://github.com/root-project/root/pull/14200#issuecomment-1903602682,3,['message'],['message']
Integrability,ls_v._Init_thread_epoch' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of __emutls_v._Init_thread_epoch; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_abort' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of _Init_thread_abort; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_abort' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_abort; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_header' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_header; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of __emutls_get_address; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_footer' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_footer; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_v._Init_thread_epoch' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of __emutls_v._Init_thread_epoch; 131: Maybe you need to load the corresponding shared library?; 131: CMake Error at,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607#issuecomment-364363584:3452,interface,interface,3452,https://root.cern,https://github.com/root-project/root/pull/1607#issuecomment-364363584,8,['interface'],['interface']
Integrability,"lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:200:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:235:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:270:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:306:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-409646068:1262,depend,depends,1262,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-409646068,4,['depend'],['depends']
Integrability,"ltercount=1&field1=buildname/string&compare1=65&value1=PR-5516-ROOT-fedora30-cxx14&date=2020-04-30).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79741/console).; ### Warnings:; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:38:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:56:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:74:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:67: warning: ‘ROOT::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621890214:1176,interface,interfaces,1176,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621890214,1,['interface'],['interfaces']
Integrability,"ltin_gl2ps option; -- Looking for LibXml2; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.7""); -- Found OpenSSL: /usr/lib64/libcrypto.so (found version ""1.1.1k""); -- Looking for MySQL; -- Could NOT find MySQL (missing: MYSQL_INCLUDE_DIR MYSQL_LIBRARIES); -- MySQL not found. Switching off mysql option; -- Looking for PostgreSQL; -- Could NOT find PostgreSQL (missing: PostgreSQL_LIBRARY PostgreSQL_INCLUDE_DIR); -- PostgreSQL not found. Switching off pgsql option; -- Looking for SQLite; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.4.2""); -- Found Sqlite: /usr/include; -- Looking for CFITSIO; -- Could NOT find CFITSIO (missing: CFITSIO_LIBRARY CFITSIO_INCLUDE_DIR); -- CFITSIO not found. You can enable the option 'builtin_cfitsio' to build the library internally'; -- For the time being switching off 'fitsio' option; -- Looking for XROOTD; -- Found Xrootd version num: 5.6.3 (setting -DROOTXRDVERS=500060003); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- libXrdClient not found: use built-in; -- include_dirs: /usr/include/xrootd;/afs/cern.ch/user/b/bellenot/temp/root/proof/xrdinc; -- libraries: /usr/lib64/libXrdUtils.so;/usr/lib64/libXrdCl.so; -- Could NOT find FTGL (missing: FTGL_INCLUDE_DIR FTGL_LIBRARY); -- ftgl library not found. Set variable FTGL_ROOT_DIR to point to your installation; -- For the time being switching ON 'builtin_ftgl' option; -- Checking for module 'davix>=0.6.4'; -- Package 'davix', required by 'virtual:world', not found; -- Looking for uuid_generate_random in uuid; -- Looking for uuid_generate_random in uuid - found; -- Found libuuid: /usr/include; -- Davix not found, switching ON 'builtin_davix' option.; -- Looking for clock_gettime; -- Looking for clock_gettime - found; -- Looking for TBB; -- Found TBB: /usr (found suitable version ""2018.0"", minimum required is ""2018""); -- Performing Test tbb_exception_result; -- Performing Test tbb_exception_result - Success; -- Looking for VDT; -- Could NOT find Vdt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159#issuecomment-1838972446:6521,wrap,wrapper,6521,https://root.cern,https://github.com/root-project/root/issues/14159#issuecomment-1838972446,1,['wrap'],['wrapper']
Integrability,lvm/src/tools/clang/include -I/usr/include/libxml2 -Iinterpreter/llvm/src/include -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++11 -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -fno-exceptions -fno-rtti -std=c++11 -MD -MT interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:376: error: ‘conditional_t’ in namespace ‘std’ does not name a template type ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected ‘&gt;’ before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected ‘(’ before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected primary-expression before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8399#issuecomment-865243666:1714,Interface,InterfaceStubFunctionsConsumer,1714,https://root.cern,https://github.com/root-project/root/pull/8399#issuecomment-865243666,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,massimiliano: very nice. Maybe the commit messages can be improved in order to be more meaningful and in English?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3835#issuecomment-494001286:42,message,messages,42,https://root.cern,https://github.com/root-project/root/pull/3835#issuecomment-494001286,1,['message'],['messages']
Integrability,mathcore/CMakeFiles/MathCore.dir/src/ChebyshevPol.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DataRange.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Delaunay2D.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DistSampler.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DistSamplerOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Factory.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitConfig.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitData.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitResult.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitUtil.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Fitter.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GaussIntegrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GaussLegendreIntegrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GenAlgoOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GoFTest.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Integrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/IntegratorOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MersenneTwisterEngine.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MinimTransformFunction.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MinimizerOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MinimizerVariableTransformation.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MixMaxEngineImpl17.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MixMaxEngineImpl240.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/MixMaxEngineImpl256.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/ParameterSettings.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/PdfFuncMathCore.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/ProbFuncMathCore.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/QuantFuncMathCore.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/RandomFunctions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/RanluxppEngineImpl.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/RichardsonDerivator.cxx.o math/mathcore/CMakeFiles/MathCor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10617#issuecomment-1141092598:1974,Integrat,IntegratorOptions,1974,https://root.cern,https://github.com/root-project/root/pull/10617#issuecomment-1141092598,1,['Integrat'],['IntegratorOptions']
Integrability,maybe related: https://stackoverflow.com/questions/69571809/why-does-the-variable-bash-argv-have-a-different-value-in-a-function-depending,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10298#issuecomment-1087601339:129,depend,depending,129,https://root.cern,https://github.com/root-project/root/issues/10298#issuecomment-1087601339,1,['depend'],['depending']
Integrability,me/test/datasource_root.cxx:94:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:137:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:155:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:170:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.383Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:183:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621922856:2810,interface,interfaces,2810,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621922856,3,['interface'],['interfaces']
Integrability,"ment for that?; >; > 3. I will change the search order to search for first the one; > that are not marked RTLD_GLOBAL.; >; > So any other client that wants to open thing's with RTLD_LOCAL will ; > then expose what they thought were private symbols to the JIT as a whole?; >; > One of the issues is that it is not clear to me is what exactly is; > your use case and this is why there are misunderstandings.; >; > I also don't understand why there are mis-understandings, but have ; > explained the use case a few times now and *3* will explicitly break ; > that as well as provide bizarre default behavior:; >; > libc++.so, libA.so; > libA.so defines an overload for global operator new/delete; >; > |DynamicLibrary::getPermanentLibrary(NULL) // Other code; > DynamicLibrary::getPermanentLibrary(""libA.so"") |; >; > In your scheme the JIT can pull operator new/delete from libA.so,; > and worse is that whether it pulls operator new/delete from; > libA.so is dependent on whether operator new/delete has been; > resolved in *// Other code* before libA.so has been loaded.; >; > The example can be expanded to RTTI information, exceptions, and a ; > host of other problems.; >; No, this would not break the case you mentioned. The case that will ; have a special behavior is if you called ; `DynamicLibrary::addPermanentLibrary(handle)`. So you should be safe there.; >; > And even worse than that is that in your scheme there is no way of ; > hiding symbols from the global scope, in fact it promotes everything ; > that the user reasonably expected to be private (via RTLD_LOCAL) to ; > take dominance over anything else.; >; I understand that and I am totally fine for fixing this the right way ; after the llvm release.; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub ; > <https://github.com/root-project/root/pull/744#issuecomment-313799028>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/AGNuU_J817GPmY",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313802370:2940,depend,dependent,2940,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313802370,1,['depend'],['dependent']
Integrability,missing the definition of __emutls_v._Init_thread_epoch; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_abort' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of _Init_thread_abort; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_abort' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_abort; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_header' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_header; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of __emutls_get_address; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_footer' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_footer; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_v._Init_thread_epoch' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of __emutls_v._Init_thread_epoch; 131: Maybe you need to load the corresponding shared library?; 131: CMake Error at C:/Users/bellenot/git/master/cmake/modules/RootTestDriver.cmake:232 (message):; 131: error code: -529697949; 131:; 131:; 1/1 Test #131: tutorial-dataframe-tdf003_profiles ...***Failed 3.13 sec; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607#issuecomment-364363584:4495,interface,interface,4495,https://root.cern,https://github.com/root-project/root/pull/1607#issuecomment-364363584,4,"['interface', 'message']","['interface', 'message']"
Integrability,"mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 1184 more. ### Failing tests:; - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52667/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_utils_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52667/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_utils_doctest/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3347#issuecomment-459054611:2426,depend,depends,2426,https://root.cern,https://github.com/root-project/root/pull/3347#issuecomment-459054611,1,['depend'],['depends']
Integrability,"module.modulemap:1:1: error: unknown type name 'module' ; - ./etc/cling/module.modulemap:3:3: error: use of undeclared identifier 'module' ; - ./etc/cling/module.modulemap:11:2: error: expected ';' after top level declarator ; - ./include/TMathBase.h:337:6: error: use of undeclared identifier 'TMath' ; - ./include/TString.h:110:18: error: no type named 'string_view' in namespace 'std' ; - ./include/TString.h:144:38: error: no member named 'TypeTraits' in namespace 'ROOT' ; - ./include/TString.h:144:66: error: 'T' does not refer to a value ; - ./include/TString.h:144:70: error: friends can only be classes or functions ; - ./include/TString.h:144:76: error: friends can only be classes or functions ; - ./include/TString.h:144:83: error: expected ';' at end of declaration list . And 9 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2530#issuecomment-416270073:1124,depend,depends,1124,https://root.cern,https://github.com/root-project/root/pull/2530#issuecomment-416270073,2,['depend'],['depends']
Integrability,"monalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17; ```. When I build Celeritas (debug, shared, *no* other libraries except for ROOT) I see at build time:; ```; [22/161] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap; Disabling gnu++: clang has no __float128 support on this target!; Disabling gnu++: clang has no __float128 support on this target!; ```; and at runtime:; ```; info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root; Disabling gnu++: clang has no __float128 support on this target!; Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found; Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine.; {and a thousand more messages like the last one}; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1109804151:3681,rout,routine,3681,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1109804151,2,"['message', 'rout']","['messages', 'routine']"
Integrability,"mostly looks good for cmssw. Only one unit test failed with error [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-ce122a/37051/unitTests/src/DQMServices/Demo/test/TestDQMServicesDemo/testing.log; ```; ++ /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py alltypes.root -r 1 --summary; Traceback (most recent call last):; File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-25-2300/src/DQMServices/Demo/test/dqmiodumpentries.py"", line 54, in <module>; value = metree.Value; File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 266, in _TTree__getattr__; proxy = bind_branch_to_proxy(self, name, branch); File ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.31.01-29afad78d0e3ad51f539f0164a6c7494/lib/ROOT/_pythonization/_ttree.py"", line 212, in bind_branch_to_proxy; return cppyy.bind_object(branch.GetAddress()[0], branch.GetClassName()); TypeError: 'nullptr_t' object is not subscriptable; + '[' '0: 1, 0.0: 1, 1: 11, 100: 33, 200: 11, 5: 16, 5.0: 5' = '' ']'. ---> test TestDQMServicesDemo had ERRORS; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14441#issuecomment-1912182438:133,integrat,integration,133,https://root.cern,https://github.com/root-project/root/pull/14441#issuecomment-1912182438,1,['integrat'],['integration']
Integrability,"n == 1`. This fixes `SimBinnedConstrainedTest.SubEventSections` on `mac13arm`, but makes it fail on x86 (didn't investigate why). It also makes `SimBinnedConstrainedTest.EventSections` fail (both on `mac13arm` and x86) - this test looks even worse in terms of floating point arithmetic, since it expects summing up two partitions individually and then adding the result being bitwise identical to summing up the whole range at once. From what I can see, this is only working by chance right now. > Or is the problem that the FMA operation on the different parts of the sum (the likelihood is calculated over multiple event ranges in the test that is failing, which are summed afterwards) has higher rounding errors on non-x86 so that in the end the result indeed differs?. See above; the additional problem is that the (optimizing) compiler will insert FMA operations if it sees fit (and is allowed to do so). So depending on how the code and the arithmetic operations are formulated, you may get different results depending on platform, software versions, optimization level, hardware, etc. > Or, even more problematically, could such FMA operations also cause similar rounding errors on x86 so that EXPECT_EQ indeed becomes impossible (and I just got lucky with the current parameters on x86)?. On x86, you are saved by the fact that, as far as I can tell, FMA instructions only come from some SIMD extension that the compiler cannot use unconditionally. This is different on AArch64 (and apparently also PPC64LE) where it appears it is in the base ISA and always available. But yes, if in the future FMA is always available on x86 or you compile (parts of) the code with vector instructions (`RooBatchCompute`, hint hint), you can potentially run into the same problem. For another point regarding ""lucky"", see above that adding the `extendedTerm` to the last partition already makes one other test fail... In conclusion, I urge you to reconsider expecting bit-wise identical results. I think I've",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1545342170:1979,depend,depending,1979,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1545342170,2,['depend'],['depending']
Integrability,"n error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.04508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.08508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.11206, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.61614, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=4.19165, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.07341, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=3.42638, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=2.6117, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation er",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327#issuecomment-349216512:1968,message,message,1968,https://root.cern,https://github.com/root-project/root/pull/1327#issuecomment-349216512,1,['message'],['message']
Integrability,"n error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.65215, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.04508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.08508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.11206, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.61614, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=4.19165, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.07341, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=3.42638, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327#issuecomment-349216512:1718,message,message,1718,https://root.cern,https://github.com/root-project/root/pull/1327#issuecomment-349216512,1,['message'],['message']
Integrability,"n prefer to have a run-time option and I think I have a solution that satisfies everyone. This is implemented in my latest patch https://github.com/root-project/root/pull/6705/commits/365bd46563c025a5341b48e6d199b2aa4be76c4e. I think we need to collect the prefix stack if we want to be able to filter out, for example, messages from MnLineSearch that happen inside MnMigrad, but not those that happen inside MnHesse. That's why I think the prefix stack should stay. It is also fast, since only a couple of pointers are copied around. However, there is no need to show the full stack of prefixes. By default, MnPrint could just show the prefix from the innermost scope. I added the static method `MnPrint::ShowPrefixStack(bool yes)` to toggle showing the full prefix or not. The default is off so that the messages are not too long. I also now implemented filtering of messages based on the value of the prefix stack. When no filters are set, all messages are shown. Once a filter is set, only messages that match the filter are shown. This is done with strings, using `MnPrint::AddFilter` and `MnPrint::ClearFilter` to reset the filters. Filtering works like `grep` on the full prefix, the message is shown if any of the filter strings match. To only see messages from `MnHesse`, one can do:; ```c++; MnPrint::AddFilter(""MnHesse"");; ```; To only see messages from `MnHesse` called from VariableMetrixBuilder, one can do:; ```c++; MnPrint::AddFilter(""VariableMetricBuilder:MnHesse"");; ```; To only match the beginning of the prefix string, use ""^"". For example,; ```c++; MnPrint::AddFilter(""^MnHesse"");; ```; only matches direct execution of MnHesse, but not MnHesse called by MnMigrad. It also works with substrings. To see all messages from any Gradient calculator, one can do:; ```c++; MnPrint::AddFilter(""Gradient"");; ```; to match AnalyticalGradientCalculator, Numerical2PGradientCalculator, and InitialGradientCalculator. Filtering is not implemented in a very efficient way to keep the code sim",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-733046580:1006,message,messages,1006,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-733046580,2,['message'],['messages']
Integrability,"n the 2nd run). The issue here (well there https://github.com/root-project/root/issues/10743) does not seems to be the 2nd running of EndOfProcessCleanups but rather that there is a bad interaction between the 'early' running of the cleanups and that something in RDataFrame is not properly informed that something is delete early. The early cleanups is necessary because of the following issue. * The python code (directly or indirectly) can load libraries (Ls); * The python code (directly or indirectly) can open TFile (Fs) and can elect to never delete them; * The python code (directly or indirectly) can attach objects based on the Libraries on to the TFile. Then the order of execution at tear down will be. (1) tear down python; (2) unload the loaded libraries (Ls); (3) execute the atexit registered by TROOT, ; (4) this includes EndOfProcessCleanups; (5) this includes flushing and closing the TFiles. During (5) the object attached the TFile (usually just histogram and `TTree` but can also be object from the user libraries. However if the libraries for the user objects are already unloaded, their code (including a Streamer function or even their dictionary) are gone and this result in crash at best or worse in data loss. In order to prevent that we introduced (in https://github.com/root-project/root/commit/7a592f5d62dda6c76f230bfa6fd879e5fa80582a and friends), running the `EndOfProcessCleanups` of cleanups as soon as possible (i.e. as soon as we can detect the process is starting to tear down). (i.e. make it part of (1)). More likely that not this means than rather than removing early this call to `EndOfProcessCleanups`, the solution is to inform `RDataFrame` of those early deletion (depending whether the things that are deleted that are annoying `RDataFrame`, they may or may not be having the trouble described above, so another solution might be to insure that the things that bother `RDataFrame` are not included in the list of things deleted by `EndOfProcessCleanups`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10753#issuecomment-1155610874:1835,depend,depending,1835,https://root.cern,https://github.com/root-project/root/pull/10753#issuecomment-1155610874,1,['depend'],['depending']
Integrability,n.ch/job/root-pullrequests-build/80548/console).; ### Warnings:; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: con,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-596563785:1062,interface,interface,1062,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-596563785,1,['interface'],['interface']
Integrability,"n/usr/lib/clang/13.0.0/include -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include -compilerI/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -I/Users/suter_a/Applications/root/root_exec/include -I/opt/local/include -I/Users/suter_a/Applications/musrfit/src/include -I/Users/suter_a/Applications/musrfit/src/classes PUserFcnBase.h /Users/suter_a/Applications/musrfit/src/include/PUserFcnBaseLinkDef.h; cd /Users/suter_a/Applications/musrfit/build && /opt/local/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/suter_a/Applications/musrfit /Users/suter_a/Applications/musrfit/src/classes /Users/suter_a/Applications/musrfit/build /Users/suter_a/Applications/musrfit/build/src/classes /Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake --color=; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/DependInfo.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Dependee ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/CMakeDirectoryInformation.cmake"" is newer than depender ""/Users/suter_a/Applications/musrfit/build/src/classes/CMakeFiles/PUserFcnBase.dir/depend.internal"".; Scanning dependencies of target PUserFcnBase; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f src/classes/CMakeFiles/PUserFcnBase.dir/build.make src/classes/CMakeFiles/PUserFcnBase.dir/build; ... And all the further root_generate_dictionary work as well. Does this help?. Cheers,; Andreas. PS: Machine I have tested it on: ; Darwin Kernel Version 21.3.0: Wed Jan 5 21:37:58 PST 2022; root:xnu-8019.80.24~20/RELEASE_ARM64_T8101 arm64. ________________________________. Paul Scherrer Institut. Dr. Andreas Suter; Laboratory for Muon-Spin Spectroscopy; Swiss Muon Source SµS; WLGA/119; Forschungsstrasse 111; CH - 5232 V",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1061481610:4372,Depend,DependInfo,4372,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1061481610,1,['Depend'],['DependInfo']
Integrability,"nZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from; > ; > ```; > | | |-MoveConstructor; > ```; > ; > to; > ; > ```; > | | |-MoveConstructor exists non_trivial user_declared; > ```; > ; > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow?. I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the explicit intent is to `delete` the copy constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426#issuecomment-1918556597:2892,wrap,wrapper,2892,https://root.cern,https://github.com/root-project/root/pull/14426#issuecomment-1918556597,2,['wrap'],['wrapper']
Integrability,"naconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/Users/michael/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" -o ""/Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. I make my conda environment using; ```yaml; channels:; - conda-forge; dependencies:; - ipython; - pandas=1.2.0; - particle=0.14.0; - root=6.22.6; - root_pandas=0.7.0; ```. Sidenote: I submitted #6172, which #7258 seeks to improve, but, as you note, it was never released. Hence my difficulty.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249#issuecomment-782161773:7369,depend,dependencies,7369,https://root.cern,https://github.com/root-project/root/issues/7249#issuecomment-782161773,1,['depend'],['dependencies']
Integrability,"named 'RResultPtr' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:442:56: error: unknown type name 'RSnapshotOptions' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:459:4: error: no template named 'RResultPtr' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:461:56: error: unknown type name 'RSnapshotOptions' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDFInterface.hxx:660:4: error: no template named 'RResultPtr' . And 10 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-ini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2232#issuecomment-399775824:1883,depend,depends,1883,https://root.cern,https://github.com/root-project/root/pull/2232#issuecomment-399775824,2,['depend'],['depends']
Integrability,nc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-23T12:37:06.205Z] /mn,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-866798208:5542,Integrat,Integrator,5542,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-866798208,1,['Integrat'],['Integrator']
Integrability,nclude -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-25T09:12:01.464Z] /mn,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8220#issuecomment-868356611:3409,Integrat,Integrator,3409,https://root.cern,https://github.com/root-project/root/pull/8220#issuecomment-868356611,1,['Integrat'],['Integrator']
Integrability,"ncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1833762580:2711,interface,interface,2711,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1833762580,2,['interface'],['interface']
Integrability,nctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:38:42: error: typedef redefinition with different types ('ROOT::Math::IBaseFunctionMultiDim' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:154:37: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:174:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:180:43: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:193:40: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:215:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:219:43: error: only virtual member functions can be marked 'override' . ### Warnings:; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RDataSource.hxx:213:11: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-06T12:06:15.590Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373548076:1978,Wrap,WrappedFunction,1978,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373548076,2,['Wrap'],['WrappedFunction']
Integrability,nd -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Frontend -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/usr/include/libxml2 -Iinterpreter/llvm/src/include -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++11 -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -fno-exceptions -fno-rtti -std=c++11 -MD -MT interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Frontend/CMakeFiles/obj.clangFrontend.dir/InterfaceStubFunctionsConsumer.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:376: error: ‘conditional_t’ in namespace ‘std’ does not name a template type ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected ‘&gt;’ before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:396:389: error: expected ‘(’ before ‘&lt;’ token ; - [2021-06-21T18:14:20.265Z] /mnt/build/workspace/root-pullrequests-build/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8399#issuecomment-865243666:1457,Interface,InterfaceStubFunctionsConsumer,1457,https://root.cern,https://github.com/root-project/root/pull/8399#issuecomment-865243666,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,"nditional jump or move depends on uninitialised value(s); in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479; 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177; 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174; 7: main in /opt/root_src/main/src/rmain.cxx:81; Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s); in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36; 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53; 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61; 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331; 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114; 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852; 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:2416,depend,depends,2416,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['depend'],['depends']
Integrability,"next 10 years. I see this can be an issue if we start shipping module files (`bmi`s or equivalent) instead of header files. However, in practice that won't be the case in near future because the compiler vendors cannot agree on a common file format and make it standard. Until then, there will be always some sort of a textual header file which can be processed with our clang-based rootcling and build a pcm file as basis for our dictionaries. . > My request is for the upcoming ROOT with Clang 16 to be able to accommodate the generation and use of PCM dictionaries where dependencies thereof are or use C++20 modules. Clang has at least 5 different ""flavors"" of modules. One of them is the C++20 modules as described by the C++ standard. At the moment you start using C++ 20 you could use the `import`/`export` constructs and you will be able to use that feature for encapsulation purposes. There is not enough project transitions which are bigger than toy examples. One of the challenges is how we discover module dependencies. That is, we need extra tooling to decide how to split the source files into modules. In practice we need to pre-lex all of the content before the build system can start processing project files. The community is discussing scanners (such as clang scan-deps), daemons (the gcc implementation), protocols, etc. There is increasing amount of papers trying to address how we put C++ modules at scale (https://wg21.link/p2656, https://wg21.link/P2409, https://youtu.be/_LGR0U5Opdg?si=AbLazREvyl5PXVFG). Some papers/talks are more radical claiming that we cannot even roll out modules (as written in the standard) at such scale. . For modules to be useful and work reliably we know that we need to apply modularization bottom up. That means that before modularizing cmssw/art we need everything below starting from libc and libxml to become modular. That's something we observed during our modularization efforts in cmssw (see https://github.com/cms-sw/cmssw/issues/15248). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13536#issuecomment-1693395998:1475,depend,dependencies,1475,https://root.cern,https://github.com/root-project/root/issues/13536#issuecomment-1693395998,2,['depend'],['dependencies']
Integrability,"next time such breaking changes before asking for a llvm review and land patches in these particularly sensitive areas. I explicitly added you to the list of reviewers for the original patch, there is little more I can do than that. And more coordination is exactly what I am trying to do now. If we cannot reach a conclusion may I at least be added to review whatever your solution looks like?. > 1. I plan to remove the NDEBUG assert. Already done in D33529. > 2. Make the std::vector<void*> a std::vector<llvm::PointerIntPair<void*, 1, bool>>. How can you guarantee that the platform will deliver a pointer with proper alignment for that?. > 3. I will change the search order to search for first the one that are not marked RTLD_GLOBAL. So any other client that wants to open thing's with RTLD_LOCAL will then expose what they thought were private symbols to the JIT as a whole?. > One of the issues is that it is not clear to me is what exactly is your use case and this is why there are misunderstandings. I also don't understand why there are mis-understandings, but have explained the use case a few times now and **3** will explicitly break that as well as provide bizarre default behavior:. > libc++.so, libA.so; > libA.so defines an overload for global operator new/delete; > ; > ```; > DynamicLibrary::getPermanentLibrary(NULL); > // Other code; > DynamicLibrary::getPermanentLibrary(""libA.so""); > ```; > In your scheme the JIT can pull operator new/delete from libA.so, and worse is that whether it pulls operator new/delete from libA.so is dependent on whether operator new/delete has been resolved in **// Other code** before libA.so has been loaded.; > . The example can be expanded to RTTI information, exceptions, and a host of other problems.; And even worse than that is that in your scheme there is no way of hiding symbols from the global scope, in fact it promotes everything that the user reasonably expected to be private (via RTLD_LOCAL) to take dominance over anything else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313799028:2526,depend,dependent,2526,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313799028,1,['depend'],['dependent']
Integrability,"ng) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149); ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728); ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C86E2: _S_copy (basic_string.h:356); ==270704== by 0x66C86E2: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (basic_string.h:739); ==270704== by 0x27216540: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:92713,depend,depends,92713,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"ng::printValue(unsigned __int64 const *); 892: Maybe you need to load the corresponding shared library?; 892: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 892: error code: -529697949; 892:; 892:; 15/16 Test #892: tutorial-dataframe-df024_Display-py ......................***Failed 9.91 sec; test 893; Start 893: tutorial-dataframe-df031_Stats-py. 893: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df031_Stats.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 893: Environment variables:; 893: ROOT_HIST=0; 893: Test timeout computed to be: 1500; 893: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 893: error code: -529697949; 893:; 893:; 16/16 Test #893: tutorial-dataframe-df031_Stats-py ........................***Failed 4.47 sec. 0% tests passed, 16 tests failed out of 16. Label Time Summary:; tutorial = 85.86 sec*proc (16 tests). Total Test time (real) = 94.38 sec. The following tests FAILED:; 878 - tutorial-dataframe-df001_introduction-py (Failed); 879 - tutorial-dataframe-df002_dataModel-py (Failed); 880 - tutorial-dataframe-df003_profiles-py (Failed); 881 - tutorial-dataframe-df004_cutFlowReport-py (Failed); 882 - tutorial-dataframe-df006_ranges-py (Failed); 883 - tutorial-dataframe-df007_snapshot-py (Failed); 884 - tutorial-dataframe-df008_createDataSetFromScratch-py (Failed); 885 - tutorial-dataframe-df010_trivialDataSource-py (Failed); 886 - tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py (Failed); 887 - tutorial-dataframe-df014_CSVDataSource-py (Failed); 888 - tutorial-dataframe-df016_vecOps-py (Failed); 889 - tutorial-dataframe-df017_vecOpsHEP-py (Failed); 890 - tutorial-dataframe-df019_Cache-py (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:16304,message,message,16304,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,nk C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;; #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components; #pragma link C++ class dd4hep::sim::Geant4DataDump;; #pragma link C++ class dd4hep::sim::Geant4Random;; #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;; #pragma link C++ class dd4hep::sim::Geant4UIManager;; #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here; //namespace detail {}; //#pragma link C++ namespace detail;. #endif. // CLHEP stuff; #include <CLHEP/Random/Random.h>; #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;; #pragma link C++ class CLHEP::HepRandom;; #pragma link C++ class CLHEP::HepRandomEngine;; #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Gea,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:54454,rout,routine,54454,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,1,['rout'],['routine']
Integrability,"nk C++ class dd4hep::sim::Geant4PhaseAction;. #pragma link C++ class dd4hep::Callback;; #pragma link C++ class dd4hep::Callback::mfunc_t;. // Other (specialized) components; #pragma link C++ class dd4hep::sim::Geant4DataDump;; #pragma link C++ class dd4hep::sim::Geant4Random;; #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;; #pragma link C++ class dd4hep::sim::Geant4UIManager;; #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here; //namespace detail {}; //#pragma link C++ namespace detail;. #endif. // CLHEP stuff; #include <CLHEP/Random/Random.h>; #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;; #pragma link C++ class CLHEP::HepRandom;; #pragma link C++ class CLHEP::HepRandomEngine;; #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::KernelHandle is available even though it has a TClass initialization routine.; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::Geant4Kernel with content:. #line 1 ""G__DDG4 dictionary payload"". #ifndef DD4HEP_USE_TBB; #define DD4HEP_USE_TBB 1; #endif; #ifndef BOOST_SPIRIT_USE_PHOENIX_V3; #define BOOST_SPIRIT_USE_PHOENIX_V3 1; #endif; #ifndef DD4HEP_USE_XERCESC; #define DD4HEP_USE_XERCESC 1; #endif; #ifndef G4LIB_BUILD_DLL; #define G4LIB_BUILD_DLL 1; #endif; #ifndef PTL_BUILD_DLL; #define PTL_BUILD_DLL 1; #endif; #ifndef G4VIS_USE_RAYTRACERX; #define G4VIS_USE_RAYTRACERX 1; #endif; #ifndef G4VIS_USE_TOOLSSG_QT_GLES; #define G4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:18735,rout,routine,18735,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,1,['rout'],['routine']
Integrability,nking [cling interface function]!; You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]!; You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:4231,interface,interface,4231,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,1,['interface'],['interface']
Integrability,"no @pcanal , looks like all of the failed one are reading data from EOS. There are few unit tests which failed with different error message e.g. [a] . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-efd635/14020/unitTests/failed.html; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-efd635/14020/unitTests/src/TopQuarkAnalysis/TopHitFit/test/runtestTqafTopHitFit/testing.log; ```; 06-Apr-2021 18:34:49 CEST Closed file root://eoscms.cern.ch//eos/cms/store/user/cmsbuild/store/relval/CMSSW_9_2_2/RelValProdTTbar_13/AODSIM/91X_mcRun2_asymptotic_v3-v1/10000/EEB99F74-DA4D-E711-A41C-0025905A48F2.root; ----- Begin Fatal Exception 06-Apr-2021 18:34:50 CEST-----------------------; An exception of category 'StdException' occurred while; [0] Calling EventProcessor::runToCompletion (which does almost everything after beginJob and before endJob); Exception Message:; A std::exception was thrown.; vector::_M_fill_insert; ----- End Fatal Exception -------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-814425870:132,message,message,132,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-814425870,4,"['Message', 'integrat', 'message']","['Message', 'integration', 'message']"
Integrability,no this is correct. This is one of the errors we get ( https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-941446/14005/addOnTests/pat1/cmsRun__data_cmsbld_jenkins_workspace_ib-run-pr-addon_CMSSW_11_3_ROOT6_X_2021-04-05-2300_src_PhysicsTools_PatAlgos_test_IntegrationTest_cfg.py.log ) . . If you are interested in error https://github.com/root-project/root/issues/7718#issuecomment-814425870 then I can provide the reproducer for that too,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-815180258:113,integrat,integration,113,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-815180258,1,['integrat'],['integration']
Integrability,"nonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:735); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149); ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728); ==270704== by 0x5E1004F: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:101); ==270704== by 0x5E1F938: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:607); ==270704== by 0x49E0C2E: _PyObject_Call (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49DD066: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x5DF38F7: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2602); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C3391: ??? (in /usr/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:2518,depend,depends,2518,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"now with that config it tries to compile two files from the prev commit which are including tbb/tbb_config.h; -> fails with file not found:; ```; -c /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.0\; 1/root-6.25.01/core/imt/src/TThreadExecutor.cxx ; /build/mrodozov/root/build_root_master/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/core/imt/src/TThreadExecutor.cxx:3:10: fatal error: tbb/tbb_config.h: No such file or\; directory ; 3 | #include ""tbb/tbb_config.h"" ; ```; maybe wrap them in a macro version check or something (not sure if TBB defines version through macroses)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8239#issuecomment-848726115:518,wrap,wrap,518,https://root.cern,https://github.com/root-project/root/pull/8239#issuecomment-848726115,1,['wrap'],['wrap']
Integrability,ns.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11548/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/). And 40 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1318#issuecomment-344218491:3261,interface,interface,3261,https://root.cern,https://github.com/root-project/root/pull/1318#issuecomment-344218491,2,['interface'],['interface']
Integrability,ns.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11550/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/). And 39 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1318#issuecomment-344198870:3256,interface,interface,3256,https://root.cern,https://github.com/root-project/root/pull/1318#issuecomment-344198870,2,['interface'],['interface']
Integrability,ns.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11620/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/). And 40 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1322#issuecomment-344242226:3282,interface,interface,3282,https://root.cern,https://github.com/root-project/root/pull/1322#issuecomment-344242226,2,['interface'],['interface']
Integrability,ns.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11622/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/). And 40 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1322#issuecomment-344243813:3256,interface,interface,3256,https://root.cern,https://github.com/root-project/root/pull/1322#issuecomment-344243813,2,['interface'],['interface']
Integrability,"nsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x278D9835: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565); ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >) (predefined_ops.h:270); ==270704== by 0x27198DBB: __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::__find_if<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:155076,depend,depends,155076,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"nst&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149); ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728); ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x671C320: _S_copy (basic_string.h:356); ==270704== by 0x671C320: _S_copy_chars (basic_string.h:406); ==270704== by 0x671C320: _M_construct<char const*> (basic_string.tcc:225); ==270704== by 0x671C320: _M_construct_aux<char const*> (basic_string.h:255); ==270704== by 0x671C320: _M_construct<char const*> (basic_string.h:274); ==270704== by 0x671C320: basic_string (basic_string.h:521); ==270704== by 0x671C320: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::__sv_wrapper, std::allocator<char> const&) (basic_string.h:154); ==270704== by 0x6B50558: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::basic_string_view<char, std::char_traits<char> >, void>(std::basic_string_view<char, std::char_traits<char> > const&, std::allocator<char> const&) (basic_string.h:664); ==270704== by 0x27",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:63174,depend,depends,63174,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,ntalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-12T06:56:09.498Z] ghprbPullLongDescription=This addresses test failures like:\r\n```\r\n 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417#issuecomment-860019280:1481,message,message,1481,https://root.cern,https://github.com/root-project/root/pull/8417#issuecomment-860019280,1,['message'],['message']
Integrability,"nternal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56); ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:201886,depend,depends,201886,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
