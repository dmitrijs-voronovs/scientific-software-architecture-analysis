quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Security,"rited from TGeoBoolNode; enum  EGeoBoolType { kGeoUnion; , kGeoIntersection; , kGeoSubtraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBoolNode; void AssignPoints (Int_t npoints, Double_t *points);  Set fPoints array. ;  ; Bool_t MakeBranch (const char *expr, Bool_t left);  Mutex for thread data access. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBoolNode; TGeoShape * fLeft {nullptr};  ; TGeoMatrix * fLeftMat {nullptr};  ; std::mutex fMutex;  Size for the navigation data array. ;  ; Int_t fNpoints {0};  ; Double_t * fPoints {nullptr};  number of points on the mesh ;  ; TGeoShape * fRight {nullptr};  ; TGeoMatrix * fRightMat {nullptr};  ; std::vector< ThreadData_t * > fThreadData;  array of mesh points ;  ; Int_t fThreadSize {0};  Navigation data per thread. ;  . #include <TGeoBoolNode.h>. Inheritance diagram for TGeoIntersection:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoIntersection() [1/3]. TGeoIntersection::TGeoIntersection ; (; )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoIntersection.html:13147,access,access,13147,doc/master/classTGeoIntersection.html,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html,1,['access'],['access']
Security,"rited from TGeoBoolNode; enum  EGeoBoolType { kGeoUnion; , kGeoIntersection; , kGeoSubtraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBoolNode; void AssignPoints (Int_t npoints, Double_t *points);  Set fPoints array. ;  ; Bool_t MakeBranch (const char *expr, Bool_t left);  Mutex for thread data access. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBoolNode; TGeoShape * fLeft {nullptr};  ; TGeoMatrix * fLeftMat {nullptr};  ; std::mutex fMutex;  Size for the navigation data array. ;  ; Int_t fNpoints {0};  ; Double_t * fPoints {nullptr};  number of points on the mesh ;  ; TGeoShape * fRight {nullptr};  ; TGeoMatrix * fRightMat {nullptr};  ; std::vector< ThreadData_t * > fThreadData;  array of mesh points ;  ; Int_t fThreadSize {0};  Navigation data per thread. ;  . #include <TGeoBoolNode.h>. Inheritance diagram for TGeoSubtraction:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoSubtraction() [1/3]. TGeoSubtraction::TGeoSubtraction ; (; ). De",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoSubtraction.html:13138,access,access,13138,doc/master/classTGeoSubtraction.html,https://root.cern,https://root.cern/doc/master/classTGeoSubtraction.html,1,['access'],['access']
Security,"rited from TGeoBoolNode; enum  EGeoBoolType { kGeoUnion; , kGeoIntersection; , kGeoSubtraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBoolNode; void AssignPoints (Int_t npoints, Double_t *points);  Set fPoints array. ;  ; Bool_t MakeBranch (const char *expr, Bool_t left);  Mutex for thread data access. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBoolNode; TGeoShape * fLeft {nullptr};  ; TGeoMatrix * fLeftMat {nullptr};  ; std::mutex fMutex;  Size for the navigation data array. ;  ; Int_t fNpoints {0};  ; Double_t * fPoints {nullptr};  number of points on the mesh ;  ; TGeoShape * fRight {nullptr};  ; TGeoMatrix * fRightMat {nullptr};  ; std::vector< ThreadData_t * > fThreadData;  array of mesh points ;  ; Int_t fThreadSize {0};  Navigation data per thread. ;  . #include <TGeoBoolNode.h>. Inheritance diagram for TGeoUnion:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoUnion() [1/3]. TGeoUnion::TGeoUnion ; (; ). Default constructor. ; Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoUnion.html:13089,access,access,13089,doc/master/classTGeoUnion.html,https://root.cern,https://root.cern/doc/master/classTGeoUnion.html,1,['access'],['access']
Security,"rix to unity. ;  ; void UnitTrans ();  Reset matrix to unity. ;  ; Double_t Unscale ();  Remove scaling, make all base vectors of unit length. ;  ; void Unscale (Double_t &sx, Double_t &sy, Double_t &sz);  Remove scaling, make all base vectors of unit length. ;  ; void ZeroTrans (Double_t w=1.0);  Reset matrix to zero, only the perspective scaling is set to w (1 by default). ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveTrans.html:7282,Hash,Hash,7282,doc/master/classROOT_1_1Experimental_1_1REveTrans.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveTrans.html,4,['Hash'],['Hash']
Security,rixTColumn<float> Template of General Matrix Column Access class; TMatrixTColumn_const<double> Template of General Matrix Column Access class; TMatrixTColumn_const<float> Template of General Matrix Column Access class; TMatrixTCramerInv ; TMatrixTDiag<double> Template of General Matrix Diagonal Access class; TMatrixTDiag<float> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<double> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<float> Template of General Matrix Diagonal Access class; TMatrixTFlat<double> Template of General Matrix Flat Representation class; TMatrixTFlat<float> Template of General Matrix Flat Representation class; TMatrixTFlat_const<double> Template of General Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<f,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:100952,Access,Access,100952,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,6,['Access'],['Access']
Security,rked/selected ;  ; Bool_t fIsMarking;  true if in marking mode ;  ; Bool_t fIsSaved;  true is content is saved ;  ; TGLongPosition fMarkedEnd;  end position of marked text ;  ; Bool_t fMarkedFromX;  true if text is marked from x ;  ; Bool_t fMarkedFromY;  true if text is marker from y ;  ; TGLongPosition fMarkedStart;  start position of marked text ;  ; Int_t fMaxAscent;  maximum ascent in font ;  ; Int_t fMaxDescent;  maximum descent in font ;  ; Int_t fMaxWidth;  maximum width of character in font ;  ; TGGC fNormGC;  graphics context for drawing text ;  ; Bool_t fReadOnly;  text cannot be edited ;  ; TViewTimer * fScrollTimer;  scrollbar timer ;  ; TGGC fSelbackGC;  graphics context for drawing marked background ;  ; TGGC fSelGC;  graphics context for drawing marked text ;  ; TGText * fText;  text buffer ;  ;  Protected Attributes inherited from TGView; TGViewFrame * fCanvas;  frame containing the text ;  ; Atom_t fClipboard;  clipboard property ;  ; TGRectangle fExposedRegion;  exposed area ;  ; TGHScrollBar * fHsb;  horizontal scrollbar ;  ; TGLongPosition fMousePos;  position of mouse ;  ; Int_t fScrolling;  scrolling direction ;  ; TGLongPosition fScrollVal;  scroll value ;  ; TGDimension fVirtualSize;  the current virtual window size ;  ; TGLongPosition fVisible;  position of visible region ;  ; TGVScrollBar * fVsb;  vertical scrollbar ;  ; TGGC fWhiteGC;  graphics context used for scrolling generates GraphicsExposure events ;  ; UInt_t fXMargin;  x margin ;  ; UInt_t fYMargin;  y margin ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDND,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEdit.html:42489,expose,exposed,42489,doc/master/classTGTextEdit.html,https://root.cern,https://root.cern/doc/master/classTGTextEdit.html,3,['expose'],['exposed']
Security,"rlap(const TGLBoundingBox& box) const; const TGLPlane&TGLCamera::FrustumPlane(TGLCamera::EFrustumPlane plane) const; const TGLMatrix&TGLCamera::GetCamBase() const; const TGLMatrix&TGLCamera::GetCamTrans() const; Double_t*TGLCamera::GetCenterVec(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Bool_tTGLCamera::GetExternalCenter(); Double_tTGLCamera::GetFarClip() const; Double_t*TGLCamera::GetFixDefCenterVec(); Double_tGetFOV() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Double_tTGLCamera::GetNearClip() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGLCamera::GetTheta() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Float_tTGLCamera::GetVAxisMinAngle(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; voidTGLCamera::IncTimeStamp(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGLCamera::IsCacheDirty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGLCamera::IsOrthographic() const; virtual Bool_tIsPerspective() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tTGLCamera::OfInterest(const TGLBoundingBox& box, Bool_t ignoreSize) const; st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLPerspectiveCamera.html:3569,Hash,Hash,3569,root/html534/TGLPerspectiveCamera.html,https://root.cern,https://root.cern/root/html534/TGLPerspectiveCamera.html,1,['Hash'],['Hash']
Security,"rlap(const TGLBoundingBox& box) const; const TGLPlane&TGLCamera::FrustumPlane(TGLCamera::EFrustumPlane plane) const; const TGLMatrix&TGLCamera::GetCamBase() const; const TGLMatrix&TGLCamera::GetCamTrans() const; Double_t*TGLCamera::GetCenterVec(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Bool_tTGLCamera::GetExternalCenter(); Double_tTGLCamera::GetFarClip() const; Double_t*TGLCamera::GetFixDefCenterVec(); Double_tGetFOV() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Double_tTGLCamera::GetNearClip() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGLCamera::GetTheta() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Float_tTGLCamera::GetVAxisMinAngle(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; voidTGLCamera::IncTimeStamp(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGLCamera::IsCacheDirty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGLCamera::IsOrthographic() const; virtual Bool_tIsPerspective() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tTGLCamera::OfInterest(const TGLBoundingBox& box, Bool_t ignoreSize) const; vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLPerspectiveCamera.html:3475,Hash,Hash,3475,root/html602/TGLPerspectiveCamera.html,https://root.cern,https://root.cern/root/html602/TGLPerspectiveCamera.html,2,['Hash'],['Hash']
Security,"rmation.; 16189 * In order to make wolfSSL work, it is split in two files.; 16190 * One file that contains key and certificate used by the server and; 16191 * an optional chain file for the ssl stack.; 16192 */; 16193 if (chain) {; 16194 if (SSL_CTX_use_certificate_chain_file(dom_ctx->ssl_ctx, chain) == 0) {; 16195 mg_cry_ctx_internal(phys_ctx,; 16196 ""%s: cannot use certificate chain file %s: %s"",; 16197 __func__,; 16198 chain,; 16199 ssl_error());; 16200 return 0;; 16201 }; 16202 }; 16203 return 1;; 16204}; 16205 ; 16206 ; 16207#if defined(OPENSSL_API_1_1); 16208static unsigned long; 16209ssl_get_protocol(int version_id); 16210{; 16211 long unsigned ret = (long unsigned)SSL_OP_ALL;; 16212 if (version_id > 0); 16213 ret |= SSL_OP_NO_SSLv2;; 16214 if (version_id > 1); 16215 ret |= SSL_OP_NO_SSLv3;; 16216 if (version_id > 2); 16217 ret |= SSL_OP_NO_TLSv1;; 16218 if (version_id > 3); 16219 ret |= SSL_OP_NO_TLSv1_1;; 16220 if (version_id > 4); 16221 ret |= SSL_OP_NO_TLSv1_2;; 16222#if defined(SSL_OP_NO_TLSv1_3); 16223 if (version_id > 5); 16224 ret |= SSL_OP_NO_TLSv1_3;; 16225#endif; 16226 return ret;; 16227}; 16228#else; 16229static long; 16230ssl_get_protocol(int version_id); 16231{; 16232 unsigned long ret = (unsigned long)SSL_OP_ALL;; 16233 if (version_id > 0); 16234 ret |= SSL_OP_NO_SSLv2;; 16235 if (version_id > 1); 16236 ret |= SSL_OP_NO_SSLv3;; 16237 if (version_id > 2); 16238 ret |= SSL_OP_NO_TLSv1;; 16239 if (version_id > 3); 16240 ret |= SSL_OP_NO_TLSv1_1;; 16241 if (version_id > 4); 16242 ret |= SSL_OP_NO_TLSv1_2;; 16243#if defined(SSL_OP_NO_TLSv1_3); 16244 if (version_id > 5); 16245 ret |= SSL_OP_NO_TLSv1_3;; 16246#endif; 16247 return (long)ret;; 16248}; 16249#endif /* OPENSSL_API_1_1 */; 16250 ; 16251 ; 16252/* SSL callback documentation:; 16253 * https://www.openssl.org/docs/man1.1.0/ssl/SSL_set_info_callback.html; 16254 * https://wiki.openssl.org/index.php/Manual:SSL_CTX_set_info_callback(3); 16255 * https://linux.die.net/man/3/ssl_set_info_callback */; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:478401,certificate,certificate,478401,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['certificate'],['certificate']
Security,"rmation.; 16190 * In order to make wolfSSL work, it is split in two files.; 16191 * One file that contains key and certificate used by the server and; 16192 * an optional chain file for the ssl stack.; 16193 */; 16194 if (chain) {; 16195 if (SSL_CTX_use_certificate_chain_file(dom_ctx->ssl_ctx, chain) == 0) {; 16196 mg_cry_ctx_internal(phys_ctx,; 16197 ""%s: cannot use certificate chain file %s: %s"",; 16198 __func__,; 16199 chain,; 16200 ssl_error());; 16201 return 0;; 16202 }; 16203 }; 16204 return 1;; 16205}; 16206 ; 16207 ; 16208#if defined(OPENSSL_API_1_1); 16209static unsigned long; 16210ssl_get_protocol(int version_id); 16211{; 16212 long unsigned ret = (long unsigned)SSL_OP_ALL;; 16213 if (version_id > 0); 16214 ret |= SSL_OP_NO_SSLv2;; 16215 if (version_id > 1); 16216 ret |= SSL_OP_NO_SSLv3;; 16217 if (version_id > 2); 16218 ret |= SSL_OP_NO_TLSv1;; 16219 if (version_id > 3); 16220 ret |= SSL_OP_NO_TLSv1_1;; 16221 if (version_id > 4); 16222 ret |= SSL_OP_NO_TLSv1_2;; 16223#if defined(SSL_OP_NO_TLSv1_3); 16224 if (version_id > 5); 16225 ret |= SSL_OP_NO_TLSv1_3;; 16226#endif; 16227 return ret;; 16228}; 16229#else; 16230static long; 16231ssl_get_protocol(int version_id); 16232{; 16233 unsigned long ret = (unsigned long)SSL_OP_ALL;; 16234 if (version_id > 0); 16235 ret |= SSL_OP_NO_SSLv2;; 16236 if (version_id > 1); 16237 ret |= SSL_OP_NO_SSLv3;; 16238 if (version_id > 2); 16239 ret |= SSL_OP_NO_TLSv1;; 16240 if (version_id > 3); 16241 ret |= SSL_OP_NO_TLSv1_1;; 16242 if (version_id > 4); 16243 ret |= SSL_OP_NO_TLSv1_2;; 16244#if defined(SSL_OP_NO_TLSv1_3); 16245 if (version_id > 5); 16246 ret |= SSL_OP_NO_TLSv1_3;; 16247#endif; 16248 return (long)ret;; 16249}; 16250#endif /* OPENSSL_API_1_1 */; 16251 ; 16252 ; 16253/* SSL callback documentation:; 16254 * https://www.openssl.org/docs/man1.1.0/ssl/SSL_set_info_callback.html; 16255 * https://wiki.openssl.org/index.php/Manual:SSL_CTX_set_info_callback(3); 16256 * https://linux.die.net/man/3/ssl_set_info_callback */; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:478434,certificate,certificate,478434,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['certificate'],['certificate']
Security,"rmission(const char* file, Int_t mode) const; Change permissions of a remote file. Anonymous users may not; chnage permissions. Returns 0 in case of success and -1 in case; of failure. Int_t Close(); Close ftp connection. Returns 0 in case of success and -1 in case of; failure. Bool_t OpenDirectory(const char* name, Bool_t print = kFALSE); Open a directory via rootd.; Returns kTRUE in case of success.; Returns kFALSE in case of error. void FreeDirectory(Bool_t print = kFALSE); Free a remotely open directory via rootd. const char * GetDirEntry(Bool_t print = kFALSE); Get directory entry via rootd.; Returns 0 in case no more entries or in case of error. Int_t GetPathInfo(const char* path, FileStat_t& buf, Bool_t print = kFALSE); Get info about a file. Info is returned in the form of a FileStat_t; structure (see TSystem.h).; The function returns 0 in case of success and 1 if the file could; not be stat'ed. Bool_t AccessPathName(const char* path, EAccessMode mode = kFileExists, Bool_t print = kFALSE); Returns kFALSE if one can access a file using the specified access mode.; Mode is the same as for the Unix access(2) function.; Attention, bizarre convention of return value!!. TFTP(); { }. TFTP(const TFTP& ). void operator=(const TFTP& ). void SetMode(Int_t mode); { fMode = mode; }. Int_t GetBlockSize() const; { return fBlockSize; }. void SetRestartAt(Long64_t at); { fRestartAt = at; }. Long64_t GetRestartAt() const; { return fRestartAt; }. Int_t GetMode() const; { return fMode; }. Bool_t IsOpen() const; { return fSocket ? kTRUE : kFALSE; }. void Binary(); { SetMode(kBinary); }. void Ascii(); { SetMode(kAscii); }. TSocket * GetSocket() const; { return fSocket; }. void put(const char* file, const char* remoteName = 0); standard ftp equivalents... { PutFile(file, remoteName); }. void get(const char* file, const char* localName = 0); { GetFile(file, localName); }. void cd(const char* dir) const; { ChangeDirectory(dir); }. void mkdir(const char* dir) const; { MakeDirectory(dir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFTP.html:12340,Access,AccessPathName,12340,root/html528/TFTP.html,https://root.cern,https://root.cern/root/html528/TFTP.html,18,"['Access', 'access']","['AccessPathName', 'access']"
Security,"rms when the flag OpenGL.CanvasPreferGL is set to 1 in $ROOTSYS/etc/system.rootrc, or on Mac with the Cocoa backend. On the file output it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript.; Alternatively, you can call at the top of your script gSytle->SetCanvasPreferGL();. Or if you prefer to activate GL for a single canvas c, then use c->SetSupportGL(true);. Line Width; The line width is expressed in pixel units. The line width of any class inheriting from TAttLine can be changed using the method SetLineWidth and retrieved using the method GetLineWidth. The following picture shows the line widths from 1 to 10 pixels. Line Style; Line styles are identified via integer numbers. The line style of any class inheriting from TAttLine can be changed using the method SetLineStyle and retrieved using the method GetLineStyle.; The first 10 line styles are predefined as shown on the following picture:. Some line styles can be accessed via the following enum:; kSolid = 1; kDashed = 2; kDotted = 3; kDashDotted = 4; kDashed@ kDashedDefinition TAttLine.h:48; kSolid@ kSolidDefinition TAttLine.h:48; kDashDotted@ kDashDottedDefinition TAttLine.h:48; kDotted@ kDottedDefinition TAttLine.h:48; Additional line styles can be defined using TStyle::SetLineStyleString. For example the line style number 11 can be defined as follow: gStyle->SetLineStyleString(11,""400 200"");; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TStyle::SetLineStyleStringvoid SetLineStyleString(Int_t i, const char *text)Set line style string using the PostScript convention.Definition TStyle.cxx:1483; Existing line styles (1 to 10) can be redefined using the same method. ; Definition at line 18 of file TAttLine.h. Public Member Functions;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttLine.html:2206,access,accessed,2206,doc/master/classTAttLine.html,https://root.cern,https://root.cern/doc/master/classTAttLine.html,1,['access'],['accessed']
Security,"rn *this; }. void GetCoordinates(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar& a, ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar& b, ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar& c) const. get internal data into 3 Scalar numbers. { fCoordinates.GetCoordinates(a, b, c); }. void GetCoordinates(Scalar[] dest) const. get internal data into a C-style array of 3 Scalar numbers. { fCoordinates.GetCoordinates(dest); }. bool operator==(const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>& rhs) const; ------------------- Equality -----------------. Exact equality. bool operator!=(const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>& rhs) const. Scalar X() const; ------ Individual element access, in various coordinate systems ------. Cartesian X, converting if necessary from internal coordinate system. { return fCoordinates.X(); }. Scalar Y() const. Cartesian Y, converting if necessary from internal coordinate system. { return fCoordinates.Y(); }. Scalar Z() const. Cartesian Z, converting if necessary from internal coordinate system. { return fCoordinates.Z(); }. Scalar R() const. Polar R, converting if necessary from internal coordinate system. { return fCoordinates.R(); }. Scalar Theta() const. Polar theta, converting if necessary from internal coordinate system. { return fCoordinates.Theta(); }. Scalar Phi() const. Polar phi, converting if necessary from internal coordinate system. { return fCoordinates.Phi(); }. Scalar Eta() const. Polar eta, converting if necessary from internal coordinate system. { return fCoordinates.Eta(); }. Scalar Rho() const. Cylindrical transverse component rho. { return fCoordinates.Rho(); }. Scalar Mag2() const; ----- Other fundamental pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1Cartesian3D_Double32_t__-p1GlobalCoordinateSystemTag_.html:13045,access,access,13045,root/html602/ROOT__Math__DisplacementVector3D_-p1Cartesian3D_Double32_t__-p1GlobalCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1Cartesian3D_Double32_t__-p1GlobalCoordinateSystemTag_.html,2,['access'],['access']
Security,"rn 0 on success, -1 on failure. TFileCollection * GetDataSet(const char* group, const char* user, const char* dsName, UInt_t option = 0, TMD5** checksum = 0). Returns the dataset <dsName> of user <user> in group <group> .; If checksum is non-zero, it will contain the pointer to a TMD5 sum object; with the checksum of the file, has to be deleted by the user.; If option has the bi kReadShort set, the shortobject is read, that does not; contain the list of files. This is much faster. Int_t CheckLocalCache(const char* group, const char* user, const char* dsName = ""ls"", UInt_t option = 0); Check if the local cache information for group, user, dsName is up-to-date; If not, make the relevant updates; Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. Int_t ClearCache(const char* uri = 0); Clear cached information matching uri. Int_t ShowCache(const char* uri = 0); Show cached information matching uri. Int_t WriteDataSet(const char* group, const char* user, const char* dsName, TFileCollection* dataset, UInt_t option = 0, TMD5* checksum = 0). Writes indicated dataset.; If option has the bit kFileMustExist set, the file must still exist,; otherwise the new dataset is not written (returns 3 in this case).; If checksum is non-zero the files current checksum is checked against it,; if it does not match the file is not written (the function returns 2 in this; case, if the file has disappeared it is also not written (i.e. checksum; implies the bit kFileMustExist set in option).; Returns != 0 for success, 0 for error. Int_t ChecksumDataSet(const char* path, const char* md5path, TString& checksum); Calculate the checksum of the indicated dataset at 'path' and save it to the; appropriate file 'md5path'. The MD5 string is returned in 'md5sum'.; Return 0 on success, -1 on error. Bool_t RemoveDataSet(const char* group, const char* user, const char* dsName); Removes the indicated dataset. Bool_t ExistsDataSet(const char* group, const char* user, const char* dsName);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManagerFile.html:16700,checksum,checksum,16700,root/html528/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html528/TDataSetManagerFile.html,6,['checksum'],['checksum']
Security,"rn request result for specified objid from normal classtable. ;  ; TSQLResult * GetNormalClassDataAll (Long64_t minobjid, Long64_t maxobjid, TSQLClassInfo *sqlinfo);  Return data for several objects from the range from normal class table. ;  ; InfoListRet GetStreamerInfoListImpl (bool) final;  Read back streamer infos from database List of streamer infos is always stored with key:id 0, which is not shown in normal keys list. ;  ; Bool_t HasTable (const char *name);  Test if table name exists. ;  ; void IncrementModifyCounter ();  Update value of modify counter in config table Modify counter used to indicate that something was changed in database. ;  ; void InitSqlDatabase (Bool_t create);  initialize sql database and correspondent structures identical to TFile::Init() function ;  ; Int_t IsLongStringCode (Long64_t objid, const char *value);  Checks if this is long string code returns 0, if not or string id. ;  ; Bool_t IsReadAccess ();  dummy, in future should check about read access to database ;  ; Bool_t IsTablesExists ();  Checks if main keys table is existing. ;  ; Bool_t IsWriteAccess ();  Checkis, if lock is free in configuration tables. ;  ; Bool_t ProduceClassSelectQuery (TVirtualStreamerInfo *info, TSQLClassInfo *sqlinfo, TString &columns, TString &tables, Int_t &tablecnt);  used by MakeClassSelectQuery method to add columns from table of class, specified by TVirtualStreamerInfo structure ;  ; Bool_t ReadConfigurations ();  read table configurations as special table ;  ; TObject * ReadSpecialObject (Long64_t keyid, TObject *obj=nullptr);  Read data of special kind of objects. ;  ; void ReadSQLClassInfos ();  Read all class infos from IdsTable. ;  ; TSQLClassInfo * RequestSQLClassInfo (const char *clname, Int_t version);  Search in database tables for specified class and return TSQLClassInfo object. ;  ; TSQLClassInfo * RequestSQLClassInfo (const TClass *cl);  Search in database tables for specified class and return TSQLClassInfo object. ;  ; void SaveToData",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLFile.html:44124,access,access,44124,doc/master/classTSQLFile.html,https://root.cern,https://root.cern/doc/master/classTSQLFile.html,1,['access'],['access']
Security,"rn the set of overloads for this name, collecting all available ones.; Can construct and insert new TFunction-s. TList* GetListForObject(const TObject* obj) const; Return the set of overloads for function obj, collecting all available ones.; Can construct and insert new TFunction-s. TFunction * Find(TListOfFunctions::DeclId_t id) const; Return the TMethod or TFunction describing the function corresponding; to the Decl 'id'. Return NULL if not found. TFunction * Get(TListOfFunctions::DeclId_t id); Return (after creating it if necessary) the TMethod or TFunction; describing the function corresponding to the Decl 'id'. void UnmapObject(TObject* obj); Remove a pair<id, object> from the map of functions and their ids. void RecursiveRemove(TObject* obj); Remove object from this collection and recursively remove the object; from all other objects (and collections).; This function overrides TCollection::RecursiveRemove that calls; the Remove function. THashList::Remove cannot be called because; it uses the hash value of the hash table. This hash value; is not available anymore when RecursiveRemove is called from; the TObject destructor. TObject* Remove(TObject* obj); Remove object from the list. TObject* Remove(TObjLink* lnk); Remove object via its objlink from the list. void Load(); Load all the functions known to the intepreter for the scope 'fClass'; into this collection. void Unload(); Mark 'all func' as being unloaded.; After the unload, the function can no longer be found directly,; until the decl can be found again in the interpreter (in which; the func object will be reused. void Unload(TFunction* func); Mark 'func' as being unloaded.; After the unload, the function can no longer be found directly,; until the decl can be found again in the interpreter (in which; the func object will be reused. TObject* FindObject(const TObject* obj) const. TIterator* MakeIterator(Bool_t dir = kIterForward) const. TObject* At(Int_t idx) const. TObject* After(const TObject* obj) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TListOfFunctions.html:14538,hash,hash,14538,root/html604/TListOfFunctions.html,https://root.cern,https://root.cern/root/html604/TListOfFunctions.html,2,['hash'],['hash']
Security,"rn the set of the schema rules if any. ; If create is true, create an empty set ; Definition at line 1941 of file TClass.cxx. ◆ GetSharedLibs(). const char * TClass::GetSharedLibs ; (; ). Get the list of shared libraries containing the code for class cls. ; The first library in the list is the one containing the class, the others are the libraries the first one depends on. Returns 0 in case the library is not found. ; Definition at line 3623 of file TClass.cxx. ◆ GetShowMembersWrapper(). ShowMembersFunc_t TClass::GetShowMembersWrapper ; (; ); const. inline . Definition at line 487 of file TClass.h. ◆ GetState(). EState TClass::GetState ; (; ); const. inline . Definition at line 488 of file TClass.h. ◆ GetStreamer(). TClassStreamer * TClass::GetStreamer ; (; ); const. Return the Streamer Class allowing streaming (if any). ; Definition at line 2914 of file TClass.cxx. ◆ GetStreamerFunc(). ClassStreamerFunc_t TClass::GetStreamerFunc ; (; ); const. Get a wrapper/accessor function around this class custom streamer (member function). ; Definition at line 2939 of file TClass.cxx. ◆ GetStreamerInfo(). TVirtualStreamerInfo * TClass::GetStreamerInfo ; (; Int_t ; version = 0, . Bool_t ; isTransient = kFALSE . ); const. returns a pointer to the TVirtualStreamerInfo object for version If the object does not exist, it is created ; Note: There are two special version numbers: - 0: Use the class version from the currently loaded class library.; - -1: Assume no class library loaded (emulated class).; Warning: If we create a new streamer info, whether or not the build optimizes is controlled externally to us by a global variable! Don't call us unless you have set that variable properly with TStreamer::Optimize()! ; Definition at line 4599 of file TClass.cxx. ◆ GetStreamerInfoAbstractEmulated(). TVirtualStreamerInfo * TClass::GetStreamerInfoAbstractEmulated ; (; Int_t ; version = 0); const. For the case where the requestor class is emulated and this class is abstract, returns a pointer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:91198,access,accessor,91198,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,1,['access'],['accessor']
Security,"rn the set of the schema rules if any. ; If create is true, create an empty set ; Definition at line 2008 of file TClass.cxx. ◆ GetSharedLibs(). const char * TClass::GetSharedLibs ; (; ). Get the list of shared libraries containing the code for class cls. ; The first library in the list is the one containing the class, the others are the libraries the first one depends on. Returns 0 in case the library is not found. ; Definition at line 3690 of file TClass.cxx. ◆ GetShowMembersWrapper(). ShowMembersFunc_t TClass::GetShowMembersWrapper ; (; ); const. inline . Definition at line 487 of file TClass.h. ◆ GetState(). EState TClass::GetState ; (; ); const. inline . Definition at line 488 of file TClass.h. ◆ GetStreamer(). TClassStreamer * TClass::GetStreamer ; (; ); const. Return the Streamer Class allowing streaming (if any). ; Definition at line 2981 of file TClass.cxx. ◆ GetStreamerFunc(). ClassStreamerFunc_t TClass::GetStreamerFunc ; (; ); const. Get a wrapper/accessor function around this class custom streamer (member function). ; Definition at line 3006 of file TClass.cxx. ◆ GetStreamerInfo(). TVirtualStreamerInfo * TClass::GetStreamerInfo ; (; Int_t ; version = 0, . Bool_t ; isTransient = kFALSE . ); const. returns a pointer to the TVirtualStreamerInfo object for version If the object does not exist, it is created ; Note: There are two special version numbers: - 0: Use the class version from the currently loaded class library.; - -1: Assume no class library loaded (emulated class).; Warning: If we create a new streamer info, whether or not the build optimizes is controlled externally to us by a global variable! Don't call us unless you have set that variable properly with TStreamer::Optimize()! ; Definition at line 4666 of file TClass.cxx. ◆ GetStreamerInfoAbstractEmulated(). TVirtualStreamerInfo * TClass::GetStreamerInfoAbstractEmulated ; (; Int_t ; version = 0); const. For the case where the requestor class is emulated and this class is abstract, returns a pointer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:91199,access,accessor,91199,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['access'],['accessor']
Security,"rn true;; 101 }; 102 if (lhs.fReader->GetTree()->GetEntriesFast() == 0 && lhs.fEntry == 0 && !IsValid()) {; 103 return true;; 104 }; 105 return fEntry == lhs.fEntry;; 106 }; 107 ; 108 /// Compare two iterators for inequality.; 109 bool operator!=(const Iterator_t& lhs) const {; 110 return !(*this == lhs);; 111 }; 112 ; 113 /// Increment the iterator (postfix i++).; 114 Iterator_t operator++(int) {; 115 Iterator_t ret = *this;; 116 this->operator++();; 117 return ret;; 118 }; 119 ; 120 /// Increment the iterator (prefix ++i).; 121 Iterator_t& operator++() {; 122 if (IsValid()) {; 123 ++fEntry;; 124 // Force validity check of new fEntry.; 125 this->operator*();; 126 // Don't set the old entry: op* will if needed, and; 127 // in most cases it just adds a lot of spinning back; 128 // and forth: in most cases the sequence is ++i; *i.; 129 }; 130 return *this;; 131 }; 132 ; 133 /// Set the entry number in the reader and return it.; 134 const Long64_t& operator*() {; 135 if (IsValid()) {; 136 // If we cannot access that entry, mark the iterator invalid.; 137 if (fReader->SetEntry(fEntry) != kEntryValid) {; 138 fEntry = -1;; 139 }; 140 }; 141 // There really is no data in this iterator; return the number.; 142 return fEntry;; 143 }; 144 ; 145 const Long64_t& operator*() const {; 146 return **const_cast<Iterator_t*>(this);; 147 }; 148 };; 149 ; 150 typedef Iterator_t iterator;; 151 ; 152 enum EEntryStatus {; 153 kEntryValid = 0, ///< data read okay; 154 kEntryNotLoaded, ///< no entry has been loaded yet; 155 kEntryNoTree, ///< the tree does not exist; 156 kEntryNotFound, ///< the tree entry number does not exist; 157 kEntryChainSetupError, ///< problem in accessing a chain element, e.g. file without the tree; 158 kEntryChainFileError, ///< problem in opening a chain's file; 159 kEntryDictionaryError, ///< problem reading dictionary info from tree; 160 kEntryBeyondEnd, ///< last entry loop has reached its end; 161 kEntryBadReader, ///< One of the readers was not successfully ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeReader_8h_source.html:4653,access,access,4653,doc/master/TTreeReader_8h_source.html,https://root.cern,https://root.cern/doc/master/TTreeReader_8h_source.html,1,['access'],['access']
Security,"rn what. $ root -l; // Execute a string of python code.; root [0] TPython::Exec( ""print \'Hello World!\'"" );; Hello World!. // Create a TBrowser on the python side, and transfer it back and forth.; // Note the required explicit (void*) cast!; root [1] TBrowser* b = (void*)TPython::Eval( ""ROOT.TBrowser()"" );; root [2] TPython::Bind( b, ""b"" );; root [3] b == (void*) TPython::Eval( ""b"" ); (int)1. // Builtin variables can cross-over by using implicit casts.; root [4] int i = TPython::Eval( ""1 + 1"" );; root [5] i; (int)2. // Load a python module with a class definition, and use it.; root [6] TPython::LoadMacro( ""MyPyClass.py"" );; creating class MyPyClass ...; root [7] MyPyClass m;; in MyPyClass.__init__; root [8] char* s = m.gime( ""aap"" );; root [9] s; (char* 0x41ee7754)""aap"". It is possible to switch between interpreters by calling ""TPython::Prompt()""; on the CINT side, while returning with ^D (EOF). State is preserved between; successive switches. The API part provides (direct) C++ access to the bindings functionality of; PyROOT. It allows verifying that you deal with a PyROOT python object in the; first place (ObjectProxy_Check for ObjectProxy and any derived types, as well; as ObjectProxy_CheckExact for ObjectProxy's only); and it allows conversions; of void* to an ObjectProxy and vice versa. Function Members (Methods); public:. TPython(); TPython(const TPython&); virtual~TPython(); static Bool_tBind(TObject* object, const char* label); static TClass*Class(); static const TPyReturnEval(const char* expr); static Bool_tExec(const char* cmd); static voidExecScript(const char* name, int argc = 0, const char** argv = 0); virtual TClass*IsA() const; static voidLoadMacro(const char* name); static void*ObjectProxy_AsVoidPtr(PyObject* pyobject); static Bool_tObjectProxy_Check(PyObject* pyobject); static Bool_tObjectProxy_CheckExact(PyObject* pyobject); static PyObject*ObjectProxy_FromVoidPtr(void* addr, const char* classname); TPython&operator=(const TPython&); static voidPro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPython.html:1816,access,access,1816,root/html528/TPython.html,https://root.cern,https://root.cern/root/html528/TPython.html,1,['access'],['access']
Security,"rn-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. Bool_tfAutomaticuse user given prune strength or automatically determined one using a validation sample ; Double_tfDeltaPruneStrengthstep size in pruning, is adjusted according to experience of previous trees ; Double_tfErrorFractionntuple var: misclassification error fraction ; vector<Event*>fEventSamplethe training events; UInt_tfMaxDepthmax depth; Int_tfMinNodeEventsmin number of events in node; Float_tfMinNodeSizemin percentage of training events in node; TStringfMinNodeSizeSstring containing min percentage of training events in node; Int_tfNCutsgrid used in cut applied in node splitting; Double_tfNodePurityLimitpurity limit for sig/bkg nodes; Bool_tfPruneBeforeBoostaincient variable, only needed for ""CompatibilityOptions"" ; TMVA::DecisionTree::EPruneMethodfPruneMethodmethod used for prunig ; TStringfPruneMethodSprune method option String; Double_tfPruneStrengtha parameter to set the ""amount"" of pruning..needs to be adjusted; Bool_tfRandomisedTreeschoose a random subset of possible cut variables at each node during training; TMVA::SeparationBase*fSepTypethe separation used in node splitting; TStringfSepTypeSthe separation (option string) used in node splitting; TMVA::DecisionTree*fTreethe decision tree; Int_tfUseNvarsthe number of variables used in the randomised tree splitting; Bool_tfUsePoissonNvarsfUseNvars is used as a poisson mean, and the actual value of useNvars is at each step drawn form that distribution; Bool_tfUseYesNoLea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodDT.html:19328,validat,validation,19328,root/html534/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodDT.html,1,['validat'],['validation']
Security,"rn-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. Bool_tfAutomaticuse user given prune strength or automatically determined one using a validation sample; Double_tfDeltaPruneStrengthstep size in pruning, is adjusted according to experience of previous trees; Double_tfErrorFractionntuple var: misclassification error fraction; vector<TMVA::Event*>fEventSamplethe training events; UInt_tfMaxDepthmax depth; Int_tfMinNodeEventsmin number of events in node; Float_tfMinNodeSizemin percentage of training events in node; TStringfMinNodeSizeSstring containing min percentage of training events in node; Int_tfNCutsgrid used in cut applied in node splitting; Double_tfNodePurityLimitpurity limit for sig/bkg nodes; Bool_tfPruneBeforeBoostaincient variable, only needed for ""CompatibilityOptions""; TMVA::DecisionTree::EPruneMethodfPruneMethodmethod used for prunig; TStringfPruneMethodSprune method option String; Double_tfPruneStrengtha parameter to set the ""amount"" of pruning..needs to be adjusted; Bool_tfRandomisedTreeschoose a random subset of possible cut variables at each node during training; TMVA::SeparationBase*fSepTypethe separation used in node splitting; TStringfSepTypeSthe separation (option string) used in node splitting; TMVA::DecisionTree*fTreethe decision tree; Int_tfUseNvarsthe number of variables used in the randomised tree splitting; Bool_tfUsePoissonNvarsfUseNvars is used as a poisson mean, and the actual value of useNvars is at each step drawn form that distribution; Bool_tfUseYesNoLea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodDT.html:20488,validat,validation,20488,root/html602/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodDT.html,2,['validat'],['validation']
Security,"rnFinder::GetDivAxis(); Int_tTGeoPatternFinder::GetDivIndex(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tTGeoPatternFinder::GetEnd() const; virtual const char*TObject::GetIconName() const; virtual TGeoMatrix*TGeoPatternFinder::GetMatrix(); virtual const char*TObject::GetName() const; Int_tTGeoPatternFinder::GetNdiv() const; Int_tTGeoPatternFinder::GetNext() const; TGeoNode*TGeoPatternFinder::GetNodeOffset(Int_t idiv); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGeoPatternFinder::GetStart() const; Double_tTGeoPatternFinder::GetStep() const; TGeoPatternFinder::ThreadData_t&TGeoPatternFinder::GetThreadData() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*TGeoPatternFinder::GetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGeoPatternFinder::IsOnBoundary(const Double_t*) const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoPatternFinder::IsReflected() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGeoPatternFinder::IsSpacedOut() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual TGeoPatternFinder*MakeCopy(Bool_t); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator dele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternHoneycomb.html:4045,Hash,Hash,4045,root/html532/TGeoPatternHoneycomb.html,https://root.cern,https://root.cern/root/html532/TGeoPatternHoneycomb.html,2,['Hash'],['Hash']
Security,"rnFinder::GetDivAxis(); Int_tTGeoPatternFinder::GetDivIndex(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tTGeoPatternFinder::GetEnd() const; virtual const char*TObject::GetIconName() const; virtual TGeoMatrix*TGeoPatternFinder::GetMatrix(); virtual const char*TObject::GetName() const; Int_tTGeoPatternFinder::GetNdiv() const; Int_tTGeoPatternFinder::GetNext() const; TGeoNode*TGeoPatternFinder::GetNodeOffset(Int_t idiv); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGeoPatternFinder::GetStart() const; Double_tTGeoPatternFinder::GetStep() const; TGeoPatternFinder::ThreadData_t&TGeoPatternFinder::GetThreadData() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*TGeoPatternFinder::GetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGeoPatternFinder::IsOnBoundary(const Double_t*) const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoPatternFinder::IsReflected() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGeoPatternFinder::IsSpacedOut() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual TGeoPatternFinder*MakeCopy(Bool_t); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternHoneycomb.html:4026,Hash,Hash,4026,root/html602/TGeoPatternHoneycomb.html,https://root.cern,https://root.cern/root/html602/TGeoPatternHoneycomb.html,2,['Hash'],['Hash']
Security,"rnal parameters (after minimization). ~MnUserParameterState(); {}. MnUserParameterState(const MnUserParameterState& state); {}. MnUserParameterState& operator=(const ROOT::Minuit2::MnUserParameterState& state). const MnGlobalCorrelationCoeff& GlobalCC() const; {return fGlobalCC;}. MnUserCovariance Hessian() const; hessian (inverse of covariance matrix). const std::vector<double>& IntParameters() const; Minuit internal representation. {return fIntParameters;}. const MnUserCovariance& IntCovariance() const; {return fIntCovariance;}. const MnUserTransformation& Trafo() const; transformation internal <-> external. {return fParameters.Trafo();}. bool IsValid() const; {return fValid;}. bool HasCovariance() const; {return fCovarianceValid;}. bool HasGlobalCC() const; {return fGCCValid;}. double Fval() const; {return fFVal;}. double Edm() const; {return fEDM;}. unsigned int NFcn() const; {return fNFcn;}. const std::vector<ROOT::Minuit2::MinuitParameter>& MinuitParameters() const; facade: forward interface of MnUserParameters and MnUserTransformation ; access to parameters (row-wise). std::vector<double> Params() const; access to parameters and errors in column-wise representation. std::vector<double> Errors() const. void Add(const string& name, double val, double err); add free Parameter. void Add(const string& name, double val, double err, double , double ); add limited Parameter. void Add(const string& , double ); add const Parameter. void Fix(unsigned int ); interaction via external number of Parameter. void Release(unsigned int ). void SetValue(unsigned int , double ). void SetError(unsigned int , double ). void SetLimits(unsigned int , double , double ). void SetUpperLimit(unsigned int , double ). void SetLowerLimit(unsigned int , double ). void RemoveLimits(unsigned int ). double Value(unsigned int ) const. double Error(unsigned int ) const. void Fix(const string& ); interaction via Name of Parameter. void Release(const string& ). void SetValue(const string& , double )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Minuit2__MnUserParameterState.html:5719,access,access,5719,root/html530/ROOT__Minuit2__MnUserParameterState.html,https://root.cern,https://root.cern/root/html530/ROOT__Minuit2__MnUserParameterState.html,1,['access'],['access']
Security,"rned. ; Definition at line 202 of file TGPicture.cxx. ◆ GetPicture() [4/4]. const TGPicture * TGPicturePool::GetPicture ; (; const char * ; name, . UInt_t ; new_width, . UInt_t ; new_height . ). Get picture with specified size from pool (picture will be scaled if necessary). ; Picture must be freed using TGPicturePool::FreePicture(). If picture is not found 0 is returned. ; Definition at line 138 of file TGPicture.cxx. ◆ IsA(). TClass * TGPicturePool::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 113 of file TGPicture.h. ◆ operator=(). TGPicturePool & TGPicturePool::operator= ; (; const TGPicturePool & ; pp). protected . assignment operator ; Definition at line 67 of file TGPicture.cxx. ◆ Print(). void TGPicturePool::Print ; (; Option_t * ; option = """"); const. overridevirtual . List all pictures in the pool. ; Reimplemented from TObject.; Definition at line 307 of file TGPicture.cxx. ◆ Streamer(). void TGPicturePool::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGPicturePool::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 113 of file TGPicture.h. Member Data Documentation. ◆ fClient. const TGClient* TGPicturePool::fClient. protected . client for which we keep icon pool ; Definition at line 92 of file TGPicture.h. ◆ fPath. TString TGPicturePool::fPath. protected . icon search path ; Definition at line 93 of file TGPicture.h. ◆ fPicList. THashTable* TGPicturePool::fPicList. protected . hash table containing the icons ; Definition at line 94 of file TGPicture.h. Libraries for TGPicturePool:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGPicture.h; gui/gui/src/TGPicture.cxx. TGPicturePool. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGPicturePool.html:14943,hash,hash,14943,doc/master/classTGPicturePool.html,https://root.cern,https://root.cern/doc/master/classTGPicturePool.html,1,['hash'],['hash']
Security,"rnion operator* (const RotationY &ry) const;  ; Quaternion operator* (const RotationZ &rz) const;  ; Quaternion operator* (const RotationZYX &r) const;  ; template<class R > ; Quaternion & operator*= (const R &r);  Post-Multiply (on right) by another rotation : T = T*R. ;  ; template<class OtherRotation > ; Quaternion & operator= (OtherRotation const &r);  Assign from another supported rotation type (see gv_detail::convert ) ;  ; bool operator== (const Quaternion &rhs) const;  Equality/inequality operators. ;  ; void Rectify ();  Re-adjust components to eliminate small deviations from |Q| = 1 orthonormality. ;  ; template<class IT > ; void SetComponents (IT begin, IT end);  Set the four components given an iterator to the start of the desired data, and another to the end (4 past start). ;  ; void SetComponents (Scalar u, Scalar i, Scalar j, Scalar k);  Set the components based on four Scalars. ;  ; Scalar U () const;  Access to the four quaternion components: U() is the coefficient of the identity Pauli matrix, I(), J() and K() are the coefficients of sigma_x, sigma_y, sigma_z. ;  . Private Attributes; Scalar fI;  ; Scalar fJ;  ; Scalar fK;  ; Scalar fU;  . #include <Math/GenVector/Quaternion.h>; Member Typedef Documentation. ◆ Scalar. typedef double ROOT::Math::Quaternion::Scalar. Definition at line 53 of file Quaternion.h. ◆ XYZVector. typedef DisplacementVector3D<Cartesian3D<double>, DefaultCoordinateSystemTag > ROOT::Math::Quaternion::XYZVector. Rotation operation on a cartesian vector. ; Definition at line 177 of file Quaternion.h. Constructor & Destructor Documentation. ◆ Quaternion() [1/4]. ROOT::Math::Quaternion::Quaternion ; (; ). inline . Default constructor (identity rotation) ; Definition at line 60 of file Quaternion.h. ◆ Quaternion() [2/4]. template<class IT > . ROOT::Math::Quaternion::Quaternion ; (; IT ; begin, . IT ; end . ). inline . Construct given a pair of pointers or iterators defining the beginning and end of an array of four Scalars. ; Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Quaternion.html:4514,Access,Access,4514,doc/master/classROOT_1_1Math_1_1Quaternion.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Quaternion.html,1,['Access'],['Access']
Security,"rns 0 in case gc is not found. ;  ; TGGC * FindGC (GContext_t gc);  Find graphics context based on its GContext_t handle. ;  ; void FreeGC (const TGGC *gc);  Delete graphics context if it is not used anymore. ;  ; void FreeGC (GContext_t gc);  Delete graphics context if it is not used anymore. ;  ; TGGC * GetGC (GContext_t gct);  returns graphics context based on its GContext_t handle. ;  ; TGGC * GetGC (GCValues_t *values, Bool_t rw=kFALSE);  Get the best matching graphics context depending on values. ;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  List all graphics contexts in the pool. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGGCPool.html:1599,Hash,Hash,1599,doc/master/classTGGCPool.html,https://root.cern,https://root.cern/doc/master/classTGGCPool.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"rns 0 in case of success and 1 if the file could; not be stat'ed. int GetFsInfo(const char* path, Long_t* id, Long_t* bsize, Long_t* blocks, Long_t* bfree); Get info about a file system: fs type, block size, number of blocks,; number of free blocks. const char * TempDirectory() const; Return a user configured or systemwide directory to create; temporary files in. FILE * TempFileName(TString& base, const char* dir = 0); Create a secure temporary file by appending a unique; 6 letter string to base. The file will be created in; a standard (system) directory or in the directory; provided in dir. The full filename is returned in base; and a filepointer is returned for safely writing to the file; (this avoids certain security problems). Returns 0 in case; of error. int Chmod(const char* file, UInt_t mode); Set the file permission bits. Returns -1 in case or error, 0 otherwise. int Umask(Int_t mask); Set the process file creation mode mask. int Utime(const char* file, Long_t modtime, Long_t actime); Set the a files modification and access times. If actime = 0 it will be; set to the modtime. Returns 0 on success and -1 in case of error. const char * FindFile(const char* search, TString& file, EAccessMode mode = kFileExists); Find location of file in a search path. Return value points to TString for; compatibility with Which(const char *, const char *, EAccessMode).; Returns 0 in case file is not found. char * Which(const char* search, const char* file, EAccessMode mode = kFileExists); Find location of file in a search path. User must delete returned string.; Returns 0 in case file is not found. Int_t GetUid(const char* user = 0); Returns the user's id. If user = 0, returns current user's id. Int_t GetEffectiveUid(); Returns the effective user id. The effective id corresponds to the; set id bit on the file being executed. Int_t GetGid(const char* group = 0); Returns the group's id. If group = 0, returns current user's group. Int_t GetEffectiveGid(); Returns the effective grou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSystem.html:29176,access,access,29176,root/html528/TSystem.html,https://root.cern,https://root.cern/root/html528/TSystem.html,6,['access'],['access']
Security,"rns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 50 of file TDrawFeedback.h. ◆ Hash(). ULong_t TDrawFeedback::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TDrawFeedback::HashULong_t Hash() const overrideReturn hash value for this object.Definition TDrawFeedback.h:51; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 51 of file TDrawFeedback.h. ◆ IsA(). TClass * TDrawFeedback::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 54 of file TDrawFeedback.h. ◆ SetOption(). void TDrawFeedback::SetOption ; (; Option_t * ; option). inline . Definition at line 52 of file TDrawFeedback.h. ◆ Streamer(). void TDrawFeedback::Stre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDrawFeedback.html:17329,Hash,Hash,17329,doc/master/classTDrawFeedback.html,https://root.cern,https://root.cern/doc/master/classTDrawFeedback.html,1,['Hash'],['Hash']
Security,"rnsName of the file containing the class declaration ; Definition at line 105 of file TS3WebFile.h. ◆ GetAccessKey(). const TString & TS3WebFile::GetAccessKey ; (; ); const. inline . Definition at line 96 of file TS3WebFile.h. ◆ GetBucket(). const TString & TS3WebFile::GetBucket ; (; ); const. inline . Definition at line 98 of file TS3WebFile.h. ◆ GetCredentialsFromEnv(). Bool_t TS3WebFile::GetCredentialsFromEnv ; (; const char * ; accessKeyEnv, . const char * ; secretKeyEnv, . const char * ; tokenEnv, . TString & ; outAccessKey, . TString & ; outSecretKey, . TString & ; outToken . ). private . Sets the access and secret keys from the environmental variables, if they are both set. ; Sets the security session token if it is given. ; Definition at line 366 of file TS3WebFile.cxx. ◆ GetHead(). Int_t TS3WebFile::GetHead ; (; ). overrideprotectedvirtual . Overwrites TWebFile::GetHead() for retrieving the HTTP headers of this file. ; Uses TS3HTTPRequest to generate an HTTP HEAD request which includes the authorization header expected by the S3 server. ; Reimplemented from TWebFile.; Definition at line 287 of file TS3WebFile.cxx. ◆ GetObjectKey(). const TString & TS3WebFile::GetObjectKey ; (; ); const. inline . Definition at line 99 of file TS3WebFile.h. ◆ GetSecretKey(). const TString & TS3WebFile::GetSecretKey ; (; ); const. inline . Definition at line 97 of file TS3WebFile.h. ◆ GetUrl(). const TUrl & TS3WebFile::GetUrl ; (; ); const. inline . Definition at line 100 of file TS3WebFile.h. ◆ IsA(). TClass * TS3WebFile::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TFile.; Definition at line 105 of file TS3WebFile.h. ◆ ParseOptions(). Bool_t TS3WebFile::ParseOptions ; (; Option_t * ; options, . TString & ; accessKey, . TString & ; secretKey, . TString & ; token . ). private . Extracts the S3 authentication key pair (access key and secret key) from the options. ; The authentication credentials can be specified in the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTS3WebFile.html:53076,authoriz,authorization,53076,doc/master/classTS3WebFile.html,https://root.cern,https://root.cern/doc/master/classTS3WebFile.html,1,['authoriz'],['authorization']
Security,"ro 'mac'. Do not reload the macro. void LoadMacro(const char* mac); Makes sure that macro 'mac' is loaded, but do not reload it. void ColorFromIdx(Color_t ci, UChar_t* col, Bool_t alpha = kTRUE); Fill col with RGBA values corresponding to index ci. If alpha; is true, set alpha component of col to 255.; ROOT's indexed color palette does not support transparency. void ColorFromIdx(Color_t ci, UChar_t* col, Char_t transparency); Fill col with RGBA values corresponding to index ci and transparency.; ROOT's indexed color palette does not support transparency. void ColorFromIdx(Float_t f1, Color_t c1, Float_t f2, Color_t c2, UChar_t* col, Bool_t alpha = kTRUE); Fill col with weighted RGBA values corresponding to; color-indices c1 and c2. If alpha is true, set alpha component; of col to 255. Color_t* FindColorVar(TObject* obj, const char* varname); Find address of Color_t data-member with name varname in object; obj. This is used to access color information for TGListTreeItem; coloration from visualization macros that wrap TObjects into; TEveElementObjectPtr instances. void SetColorBrightness(Float_t value, Bool_t full_redraw = kFALSE); Tweak all ROOT colors to become brighter (if value > 0) or; darker (value < 0). Reasonable values for the value argument are; from -2.5 to 2.5 (error will be printed otherwise).; If value is zero, the original colors are restored. You should call TEveManager::FullRedraw3D() afterwards or set; the argument full_redraw to true (default is false). Bool_t IsU1IntervalContainedByMinMax(Float_t minM, Float_t maxM, Float_t minQ, Float_t maxQ); Return true if interval Q is contained within interval M for U1 variables.; It is assumed that all values are within the [-2pi, 2pi] interval and; minM <= maxM & minQ <= maxQ. Bool_t IsU1IntervalOverlappingByMinMax(Float_t minM, Float_t maxM, Float_t minQ, Float_t maxQ); Return true if interval Q is overlapping within interval M for U1 variables.; It is assumed that all values are within the [-2pi, 2pi] inter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveUtil.html:3363,access,access,3363,root/html528/TEveUtil.html,https://root.cern,https://root.cern/root/html528/TEveUtil.html,4,['access'],['access']
Security,"rocessAfterFit(Int_t ); Method called after fit has been performed. RooFitResult* refit(RooAbsData* inGenSample = 0); Interface methods to RooMCStudy objects,; which are only functional after module has been attached to a RooMCStudy object. RooAbsData* genSample(); Return generate sample. RooAbsPdf* genModel(); Return generator pdf. RooAbsGenContext* genContext(); Accessor for generator context, generator parameters,	prototype data and projected dependents. RooArgSet* genInitParams(); Return initial value of generator model parameters. RooArgSet* genParams(); Return current value of generator model parameters. const RooDataSet* genProtoData(); Return generator prototype data provided by user. RooArgSet* projDeps(); Return projected observables. RooArgSet* dependents(); Accessors for fit observables, fit model, current and initial fit parameters and NLL value. RooArgSet* allDependents(); Returna all observables. RooAbsPdf* fitModel(); Return fit model. RooArgSet* fitInitParams(); Return initial value of parameters of fit model. RooArgSet* fitParams(); Return current value of parameters of fit model. RooRealVar* nllVar(); Return pointer to RooRealVar holding minimized -log(L) value. const char* fitOptions(); Accessors for fit options, generator annd MCstudy configuration flags. RooLinkedList* fitOptList(); Return list of fit options provided by user. Bool_t extendedGen(); If true extended mode generation is requested. Bool_t binGenData(); If true binning of data between generating and fitting is requested. Double_t numExpGen(); Return expected number of events from generator model. Bool_t randProto(); If true randomization of prototype data order is requested. Bool_t verboseGen(); If true verbose message in the generation step is requested. » Last changed: Mon Dec 7 13:45:40 2009 » Last generated: 2009-12-07 13:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsMCStudyModule.html:9618,Access,Accessors,9618,root/html526/RooAbsMCStudyModule.html,https://root.cern,https://root.cern/root/html526/RooAbsMCStudyModule.html,1,['Access'],['Accessors']
Security,"rocessAfterFit(Int_t ); Method called after fit has been performed. RooFitResult* refit(RooAbsData* inGenSample = 0); Interface methods to RooMCStudy objects,; which are only functional after module has been attached to a RooMCStudy object. RooAbsData* genSample(); Return generate sample. RooAbsPdf* genModel(); Return generator pdf. RooAbsGenContext* genContext(); Accessor for generator context, generator parameters,	prototype data and projected dependents. RooArgSet* genInitParams(); Return initial value of generator model parameters. RooArgSet* genParams(); Return current value of generator model parameters. const RooDataSet* genProtoData(); Return generator prototype data provided by user. RooArgSet* projDeps(); Return projected observables. RooArgSet* dependents(); Accessors for fit observables, fit model, current and initial fit parameters and NLL value. RooArgSet* allDependents(); Returna all observables. RooAbsPdf* fitModel(); Return fit model. RooArgSet* fitInitParams(); Return initial value of parameters of fit model. RooArgSet* fitParams(); Return current value of parameters of fit model. RooRealVar* nllVar(); Return pointer to RooRealVar holding minimized -log(L) value. const char* fitOptions(); Accessors for fit options, generator annd MCstudy configuration flags. RooLinkedList* fitOptList(); Return list of fit options provided by user. Bool_t extendedGen(); If true extended mode generation is requested. Bool_t binGenData(); If true binning of data between generating and fitting is requested. Double_t numExpGen(); Return expected number of events from generator model. Bool_t randProto(); If true randomization of prototype data order is requested. Bool_t verboseGen(); If true verbose message in the generation step is requested. » Last changed: Mon Jul 4 15:21:24 2011 » Last generated: 2011-07-04 15:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsMCStudyModule.html:9673,Access,Accessors,9673,root/html530/RooAbsMCStudyModule.html,https://root.cern,https://root.cern/root/html530/RooAbsMCStudyModule.html,1,['Access'],['Accessors']
Security,"rocessAfterFit(Int_t ); Method called after fit has been performed. RooFitResult* refit(RooAbsData* inGenSample = 0); Interface methods to RooMCStudy objects,; which are only functional after module has been attached to a RooMCStudy object. RooAbsData* genSample(); Return generate sample. RooAbsPdf* genModel(); Return generator pdf. RooAbsGenContext* genContext(); Accessor for generator context, generator parameters,	prototype data and projected dependents. RooArgSet* genInitParams(); Return initial value of generator model parameters. RooArgSet* genParams(); Return current value of generator model parameters. const RooDataSet* genProtoData(); Return generator prototype data provided by user. RooArgSet* projDeps(); Return projected observables. RooArgSet* dependents(); Accessors for fit observables, fit model, current and initial fit parameters and NLL value. RooArgSet* allDependents(); Returna all observables. RooAbsPdf* fitModel(); Return fit model. RooArgSet* fitInitParams(); Return initial value of parameters of fit model. RooArgSet* fitParams(); Return current value of parameters of fit model. RooRealVar* nllVar(); Return pointer to RooRealVar holding minimized -log(L) value. const char* fitOptions(); Accessors for fit options, generator annd MCstudy configuration flags. RooLinkedList* fitOptList(); Return list of fit options provided by user. Bool_t extendedGen(); If true extended mode generation is requested. Bool_t binGenData(); If true binning of data between generating and fitting is requested. Double_t numExpGen(); Return expected number of events from generator model. Bool_t randProto(); If true randomization of prototype data order is requested. Bool_t verboseGen(); If true verbose message in the generation step is requested. » Last changed: Thu Nov 3 20:06:44 2011 » Last generated: 2011-11-03 20:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsMCStudyModule.html:9673,Access,Accessors,9673,root/html532/RooAbsMCStudyModule.html,https://root.cern,https://root.cern/root/html532/RooAbsMCStudyModule.html,1,['Access'],['Accessors']
Security,"rocessAfterFit(Int_t ); Method called after fit has been performed. RooFitResult* refit(RooAbsData* inGenSample = 0); Interface methods to RooMCStudy objects,; which are only functional after module has been attached to a RooMCStudy object. RooAbsData* genSample(); Return generate sample. RooAbsPdf* genModel(); Return generator pdf. RooAbsGenContext* genContext(); Accessor for generator context, generator parameters,	prototype data and projected dependents. RooArgSet* genInitParams(); Return initial value of generator model parameters. RooArgSet* genParams(); Return current value of generator model parameters. const RooDataSet* genProtoData(); Return generator prototype data provided by user. RooArgSet* projDeps(); Return projected observables. RooArgSet* dependents(); Accessors for fit observables, fit model, current and initial fit parameters and NLL value. RooArgSet* allDependents(); Returna all observables. RooAbsPdf* fitModel(); Return fit model. RooArgSet* fitInitParams(); Return initial value of parameters of fit model. RooArgSet* fitParams(); Return current value of parameters of fit model. RooRealVar* nllVar(); Return pointer to RooRealVar holding minimized -log(L) value. const char* fitOptions(); Accessors for fit options, generator annd MCstudy configuration flags. RooLinkedList* fitOptList(); Return list of fit options provided by user. Bool_t extendedGen(); If true extended mode generation is requested. Bool_t binGenData(); If true binning of data between generating and fitting is requested. Double_t numExpGen(); Return expected number of events from generator model. Bool_t randProto(); If true randomization of prototype data order is requested. Bool_t verboseGen(); If true verbose message in the generation step is requested. » Last changed: Tue Jun 2 15:27:10 2015 » Last generated: 2015-06-02 15:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooAbsMCStudyModule.html:10153,Access,Accessors,10153,root/html604/RooAbsMCStudyModule.html,https://root.cern,https://root.cern/root/html604/RooAbsMCStudyModule.html,1,['Access'],['Accessors']
Security,"roduce the 3x3 matrix; // ( 1 2 3 ); // ( 4 5 6 ); // ( 7 8 9 ); Example to fill a symmetric matrix from an std::vector:; std::vector<double> v(6);; for (int i = 0; i<6; ++i) v[i] = double(i+1);; SMatrixSym3 s(v.begin(),v.end()) // this will produce the; // symmetric matrix; // ( 1 2 4 ); // ( 2 3 5 ); // ( 4 5 6 ); //create a general matrix from a symmetric matrix (the opposite; // will not compile); SMatrix33 m2 = s;; 13.13.2.2 Accessing and Setting Methods; The matrix elements can be set using the operator()(irow,icol), where irow and icol are the row and column indexes or by using the iterator interface. Notice that the indexes start from zero and not from one as in FORTRAN. Furthermore, all the matrix elements can be set also by using the SetElements function passing a generic iterator. The elements can be accessed by the same methods as well as by using the function ROOT::Math::SMatrix::apply. The apply(i) has exactly the same behavior for general and symmetric matrices; in contrast to the iterator access methods which behave differently (it follows the data order).; SMatrix33 m;; m(0,0) = 1; // set the element in first row and first column; *(m.begin()+1) = 2; // set the second element (0,1); double d[9]={1,2,3,4,5,6,7,8,9};; m.SetElements(d,d+9); // set the d[] values in m; double x = m(2,1); // return the element in 3; x = m.apply(7); // return the 8-th element (row=2,col=1); x = *(m.begin()+7); // return the 8-th element (row=2,col=1); // symmetric matrices; //(note the difference in behavior between apply and the iterators); x = *(m.begin()+4) // return the element (row=2,col=1); x = m.apply(7); // returns again the (row=2,col=1) element; There are methods to place and/or retrieve ROOT::Math::SVector objects as rows or columns in (from) a matrix. In addition one can put (get) a sub-matrix as another ROOT::Math::SMatrix object in a matrix. If the size of the sub-vector or sub-matrix is larger than the matrix size a static assert (a compilation error) is pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:757861,access,access,757861,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['access'],['access']
Security,"rofileLL(const char* name, const char* title, RooAbsReal& nll, const RooArgSet& observables); Constructor of profile likelihood given input likelihood nll w.r.t; the given set of variables. The input log likelihood is minimized w.r.t; to all other variables of the likelihood at each evaluation and the; value of the global log likelihood minimum is always subtracted. RooProfileLL(const RooProfileLL& other, const char* name = 0); Copy constructor. ~RooProfileLL(); Destructor. const RooArgSet& bestFitParams() const. const RooArgSet& bestFitObs() const. RooAbsReal* createProfile(const RooArgSet& paramsOfInterest); Optimized implementation of createProfile for profile likelihoods.; Return profile of original function in terms of stated parameters; of interest rather than profiling recursively. Double_t evaluate() const; Evaluate profile likelihood by minimizing likelihood w.r.t. all; parameters that are not considered observables of this profile; likelihood object. void validateAbsMin() const; Check that parameters and likelihood value for 'best fit' are still valid. If not,; because the best fit has never been calculated, or because constant parameters have; changed value or parameters have changed const/float status, the minimum is recalculated. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ). TObject* clone(const char* newname) const; { return new RooProfileLL(*this,newname); }. void setAlwaysStartFromMin(Bool_t flag); { _startFromMin = flag ; }. Bool_t alwaysStartFromMin() const; { return _startFromMin ; }. RooMinuit* minuit(); { return _minuit ; }. RooAbsReal& nll(); { return const_cast<RooAbsReal&>(_nll.arg()) ; }. void clearAbsMin(); { _absMinValid = kFALSE ; }. Int_t numEval() const; { return _neval ; }. » Last changed: Mon Jul 4 15:23:44 2011 » Last generated: 2011-07-04 15:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooProfileLL.html:35417,validat,validateAbsMin,35417,root/html530/RooProfileLL.html,https://root.cern,https://root.cern/root/html530/RooProfileLL.html,1,['validat'],['validateAbsMin']
Security,"rofileLL(const char* name, const char* title, RooAbsReal& nll, const RooArgSet& observables); Constructor of profile likelihood given input likelihood nll w.r.t; the given set of variables. The input log likelihood is minimized w.r.t; to all other variables of the likelihood at each evaluation and the; value of the global log likelihood minimum is always subtracted. RooProfileLL(const RooProfileLL& other, const char* name = 0); Copy constructor. ~RooProfileLL(); Destructor. const RooArgSet& bestFitParams() const. const RooArgSet& bestFitObs() const. RooAbsReal* createProfile(const RooArgSet& paramsOfInterest); Optimized implementation of createProfile for profile likelihoods.; Return profile of original function in terms of stated parameters; of interest rather than profiling recursively. Double_t evaluate() const; Evaluate profile likelihood by minimizing likelihood w.r.t. all; parameters that are not considered observables of this profile; likelihood object. void validateAbsMin() const; Check that parameters and likelihood value for 'best fit' are still valid. If not,; because the best fit has never been calculated, or because constant parameters have; changed value or parameters have changed const/float status, the minimum is recalculated. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ). TObject* clone(const char* newname) const; { return new RooProfileLL(*this,newname); }. void setAlwaysStartFromMin(Bool_t flag); { _startFromMin = flag ; }. Bool_t alwaysStartFromMin() const; { return _startFromMin ; }. RooMinuit* minuit(); { return _minuit ; }. RooAbsReal& nll(); { return const_cast<RooAbsReal&>(_nll.arg()) ; }. void clearAbsMin(); { _absMinValid = kFALSE ; }. Int_t numEval() const; { return _neval ; }. » Last changed: Thu Nov 3 20:09:01 2011 » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooProfileLL.html:35796,validat,validateAbsMin,35796,root/html532/RooProfileLL.html,https://root.cern,https://root.cern/root/html532/RooProfileLL.html,1,['validat'],['validateAbsMin']
Security,"rols precision, set fixed number of digits; AutoPrecision(int n) -- Controls precision. Number of shown digits is calculated from error; + n specified additional digits (1 is sensible default); VerbatimName(Bool_t flag) -- Put variable name in a \verb+ + clause. Example use: list.printLatex(Columns(2), Format(""NEU"",AutoPrecision(1),VerbatimName()) ) ;. void printLatex(ostream& ofs, Int_t ncol, const char* option = ""NEYU"", Int_t sigDigit = 1, const RooLinkedList& siblingLists = RooLinkedList(), const RooCmdArg* formatCmd = 0) const; Internal implementation function of printLatex. Bool_t allInRange(const char* rangeSpec) const; Return true if all contained object report to have their; value inside the specified range. void makeStructureTag(). void makeTypedStructureTag(). TObject* clone(const char* newname) const. TObject* create(const char* newname) const. TObject* Clone(const char* newname = 0) const. void setHashTableSize(Int_t i); Hash table control. Int_t getHashTableSize() const; Return size of internal hash table. Bool_t contains(const RooAbsArg& var) const; Returns true if object with same name as var is contained in this collection. Bool_t containsInstance(const RooAbsArg& var) const; Returns true if var is contained in this collection. TIterator* createIterator(Bool_t dir = kIterForward) const; export subset of THashList interface. Int_t getSize() const; Return the number of elements in the collection. RooAbsArg * first() const; Return the first element in this collection. void Print(Option_t* options = 0) const; Printing interface (human readable). void setName(const char* name); Set name of collection. const char* GetName() const; Return namer of collection. Bool_t isOwning() const; Does collection own contents?. void releaseOwnership(); { _ownCont = kFALSE ; }. void takeOwnership(); { _ownCont = kTRUE ; }. void sort(Bool_t ascend = kTRUE); { _list.Sort(ascend) ; }. TNamed* structureTag(); { if (_structureTag==0) makeStructureTag() ; return _structureTag ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsCollection.html:19967,hash,hash,19967,root/html532/RooAbsCollection.html,https://root.cern,https://root.cern/root/html532/RooAbsCollection.html,1,['hash'],['hash']
Security,"rols precision, set fixed number of digits; AutoPrecision(int n) -- Controls precision. Number of shown digits is calculated from error; + n specified additional digits (1 is sensible default); VerbatimName(Bool_t flag) -- Put variable name in a \verb+ + clause. Example use: list.printLatex(Columns(2), Format(""NEU"",AutoPrecision(1),VerbatimName()) ) ;. void printLatex(ostream& ofs, Int_t ncol, const char* option = ""NEYU"", Int_t sigDigit = 1, const RooLinkedList& siblingLists = RooLinkedList(), const RooCmdArg* formatCmd = 0) const; Internal implementation function of printLatex. Bool_t allInRange(const char* rangeSpec) const; Return true if all contained object report to have their; value inside the specified range. void makeStructureTag(). void makeTypedStructureTag(). TObject* clone(const char* newname) const. TObject* create(const char* newname) const. TObject* Clone(const char* newname = 0) const. void setHashTableSize(Int_t i); Hash table control. Int_t getHashTableSize() const; Return size of internal hash table. Bool_t contains(const RooAbsArg& var) const; Returns true if object with same name as var is contained in this collection. Bool_t containsInstance(const RooAbsArg& var) const; Returns true if var is contained in this collection. TIterator* createIterator(Bool_t dir = kIterForward) const; export subset of THashList interface. RooFIter fwdIterator() const; { return RooFIter(&_list); }. Int_t getSize() const; Return the number of elements in the collection. RooAbsArg * first() const; Return the first element in this collection. void Print(Option_t* options = 0) const; Printing interface (human readable). void setName(const char* name); Set name of collection. const char* GetName() const; Return namer of collection. Bool_t isOwning() const; Does collection own contents?. void releaseOwnership(); { _ownCont = kFALSE ; }. void takeOwnership(); { _ownCont = kTRUE ; }. void sort(Bool_t ascend = kTRUE); { _list.Sort(ascend) ; }. TNamed* structureTag(); { if (_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsCollection.html:19956,hash,hash,19956,root/html534/RooAbsCollection.html,https://root.cern,https://root.cern/root/html534/RooAbsCollection.html,3,['hash'],['hash']
Security,"rom TObject.; It passes through inheritance tree and calls TBrowser::Add; in appropriate cases. Static function. Int_t Browse(void* obj, TBrowser* b) const; Browse objects of of the class described by this TClass object. void Browse(TBrowser* b); This method is called by a browser to get the class information. void BuildRealData(void* pointer = 0, Bool_t isTransient = kFALSE); Build a full list of persistent data members.; Scans the list of all data members in the class itself and also; in all base classes. For each persistent data member, inserts a; TRealData object in the list fRealData. If pointer is not 0, uses the object at pointer; otherwise creates a temporary object of this class. void BuildEmulatedRealData(const char* name, Long_t offset, TClass* cl); Build the list of real data for an emulated class. void CalculateStreamerOffset() const; Calculate the offset between an object of this class to; its base class TObject. The pointer can be adjusted by; that offset to access any virtual method of TObject like; Streamer() and ShowMembers(). Bool_t CallShowMembers(void* obj, TMemberInspector& insp, Int_t isATObject = -1) const; Call ShowMembers() on the obj of this class type, passing insp and parent.; isATObject is -1 if unknown, 0 if it is not a TObject, and 1 if it is a TObject.; The function returns whether it was able to call ShowMembers(). void InterpretedShowMembers(void* obj, TMemberInspector& insp); Do a ShowMembers() traversal of all members and base classes' members; using the reflection information from the interpreter. Works also for; ionterpreted objects. Bool_t CanSplit() const; Return true if the data member of this TClass can be saved separately. TObject * Clone(const char* newname = """") const; Create a Clone of this TClass object using a different name but using the same 'dictionary'.; This effectively creates a hard alias for the class name. void CopyCollectionProxy(const TVirtualCollectionProxy& ); Copy the argument. void Draw(Option_t* option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TClass.html:22384,access,access,22384,root/html528/TClass.html,https://root.cern,https://root.cern/root/html528/TClass.html,4,['access'],['access']
Security,"rom TObject.; It passes through inheritance tree and calls TBrowser::Add; in appropriate cases. Static function. Int_t Browse(void* obj, TBrowser* b) const; Browse objects of of the class described by this TClass object. void Browse(TBrowser* b); This method is called by a browser to get the class information. void BuildRealData(void* pointer = 0, Bool_t isTransient = kFALSE); Build a full list of persistent data members.; Scans the list of all data members in the class itself and also; in all base classes. For each persistent data member, inserts a; TRealData object in the list fRealData. If pointer is not 0, uses the object at pointer; otherwise creates a temporary object of this class. void BuildEmulatedRealData(const char* name, Long_t offset, TClass* cl); Build the list of real data for an emulated class. void CalculateStreamerOffset() const; Calculate the offset between an object of this class to; its base class TObject. The pointer can be adjusted by; that offset to access any virtual method of TObject like; Streamer() and ShowMembers(). Bool_t CallShowMembers(void* obj, TMemberInspector& insp, char* parent, Int_t isATObject = -1) const; Call ShowMembers() on the obj of this class type, passing insp and parent.; isATObject is -1 if unknown, 0 if it is not a TObject, and 1 if it is a TObject.; The function returns whether it was able to call ShowMembers(). Bool_t CanSplit() const; Return true if the data member of this TClass can be saved separately. TObject * Clone(const char* newname = """") const; Create a Clone of this TClass object using a different name but using the same 'dictionary'.; This effectively creates a hard alias for the class name. void CopyCollectionProxy(const TVirtualCollectionProxy& ); Copy the argument. void Draw(Option_t* option = """"); Draw detailed class inheritance structure.; If a class B inherits from a class A, the description of B is drawn; on the right side of the description of A.; Member functions overridden by B are shown in cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClass.html:19362,access,access,19362,root/html526/TClass.html,https://root.cern,https://root.cern/root/html526/TClass.html,1,['access'],['access']
Security,"rom sub-string. Check validity of i. char& operator()(Ssiz_t i); Return character at pos i from sub-string. No check on i. TSubString& operator=(const TString& s); Assign string to sub-string. TSubString& operator=(const char* s); Assign char* to sub-string. void ToLower(); Convert sub-string to lower-case. void ToUpper(); Convert sub-string to upper-case. void SubStringError(Ssiz_t , Ssiz_t , Ssiz_t ) const; Output error message. void AssertElement(Ssiz_t i) const; Check to make sure a sub-string index is in range. const char * Data() const; Return a pointer to the beginning of the substring. Note that the; terminating null is in the same place as for the original; TString, so this method is not appropriate for converting the; TSubString to a string. To do that, construct a TString from the; TSubString. For example:. root [0] TString s(""hello world""); root [1] TSubString sub=s(0, 5); root [2] sub.Data(); (const char* 0x857c8b8)""hello world""; root [3] TString substr(sub); root [4] substr; (class TString)""hello"". char operator[](Ssiz_t i) const; Access to elements of sub-string with bounds checking. { AssertElement(i); return fStr.GetPointer()[fBegin+i]; }. char operator()(Ssiz_t i) const; { return fStr.GetPointer()[fBegin+i]; }. TSubString & operator=(const TSubString& s); { fStr = s.fStr; fBegin = s.fBegin; fExtent = s.fExtent; return *this; }. TSubString(const TString& s, Ssiz_t start, Ssiz_t len); NB: the only constructor is private. Ssiz_t Length() const; { return fExtent; }. Ssiz_t Start() const; { return fBegin; }. Bool_t IsNull() const; For detecting null substrings. { return fBegin == kNPOS; }. int operator!() const; { return fBegin == kNPOS; }. » Author: Fons Rademakers 04/08/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 15:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSubString.html:3079,Access,Access,3079,root/html602/TSubString.html,https://root.cern,https://root.cern/root/html602/TSubString.html,1,['Access'],['Access']
Security,"rom sub-string. Check validity of i. char& operator()(Ssiz_t i); Return character at pos i from sub-string. No check on i. TSubString& operator=(const TString& s); Assign string to sub-string. TSubString& operator=(const char* s); Assign char* to sub-string. void ToLower(); Convert sub-string to lower-case. void ToUpper(); Convert sub-string to upper-case. void SubStringError(Ssiz_t , Ssiz_t , Ssiz_t ) const; Output error message. void AssertElement(Ssiz_t i) const; Check to make sure a sub-string index is in range. const char * Data() const; Return a pointer to the beginning of the substring. Note that the; terminating null is in the same place as for the original; TString, so this method is not appropriate for converting the; TSubString to a string. To do that, construct a TString from the; TSubString. For example:. root [0] TString s(""hello world""); root [1] TSubString sub=s(0, 5); root [2] sub.Data(); (const char* 0x857c8b8)""hello world""; root [3] TString substr(sub); root [4] substr; (class TString)""hello"". char operator[](Ssiz_t i) const; Access to elements of sub-string with bounds checking. { AssertElement(i); return fStr.GetPointer()[fBegin+i]; }. char operator()(Ssiz_t i) const; { return fStr.GetPointer()[fBegin+i]; }. TSubString & operator=(const TSubString& s); { fStr = s.fStr; fBegin = s.fBegin; fExtent = s.fExtent; return *this; }. TSubString(const TString& s, Ssiz_t start, Ssiz_t len); NB: the only constructor is private. Ssiz_t Length() const; { return fExtent; }. Ssiz_t Start() const; { return fBegin; }. Bool_t IsNull() const; For detecting null substrings. { return fBegin == kNPOS; }. int operator!() const; { return fBegin == kNPOS; }. » Author: Fons Rademakers 04/08/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:49; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TSubString.html:3160,Access,Access,3160,root/html604/TSubString.html,https://root.cern,https://root.cern/root/html604/TSubString.html,1,['Access'],['Access']
Security,"rom the SQL server for an object.; TSQLObjectDataPool XML object keeper class ; TSQLObjectInfo Info (classname, version) about object in database ; TSQLResult SQL query result; TSQLRow One row of an SQL query result; TSQLServer Connection to SQL server; TSQLStatement SQL statement; TSQLStructure Table/structure description used internally by YBufferSQL.; TSQLTableData Collection of columns data for single SQL table; TSQLTableInfo Summury information about SQL table; TSVDUnfold Data unfolding using Singular Value Decomposition (hep-ph/9509307) ; TSVG SVG driver; TSecContext Class providing host specific authentication information; TSecContextCleanup Update the remote authentication table; TSelector A utility class for tree and object processing; TSelectorCint A utility class for tree and object processing (interpreted version); TSelectorDraw A specialized TSelector for TTree::Draw; TSelectorEntries A specialized TSelector for TTree::GetEntries(selection); TSelectorList Special TList used in the TSelector; TSelectorScalar Mergable scalar; TSemaphore Counting semaphore class; TSeqCollection Sequenceable collection ABC; TServerSocket This class implements server sockets; TSessionDescription Session description; TSessionFrame Session frame; TSessionInputFrame Input frame; TSessionLogView PROOF progress dialog; TSessionOutputFrame Output frame; TSessionQueryFrame Query frame; TSessionServerFrame Server frame; TSessionViewer Session Viewer; TShape Basic shape; TSignalHandler Signal event handler; TSlave PROOF slave server; TSlaveInfo basic info on workers; TSlaveLite PROOF lite worker server; TSlider A user interface slider.; TSliderBox The moving box of a TSlider; TSocket This class implements client sockets; TSortedList A sorted list; TSpectrum Peak Finder, background estimator, Deconvolution; TSpectrum2 Peak Finder, background estimator, Deconvolution for 2-D histograms; TSpectrum2Fit Spectrum2 Fitter using algorithm without matrix inversion and conjugate gradient metho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ClassIndex.html:123400,authenticat,authentication,123400,root/html530/ClassIndex.html,https://root.cern,https://root.cern/root/html530/ClassIndex.html,2,['authenticat'],['authentication']
Security,"rom, void *to);  ; typedef ROOT::Detail::TCollectionProxyInfo::Environ< char[64]> Env_t;  ; typedef ROOT::Detail::TCollectionProxyInfo::EnvironBase EnvironBase_t;  ; typedef void *(* Feedfunc_t) (void *from, void *to, size_t size);  ; typedef std::vector< EnvironBase_t * > Proxies_t;  ; typedef void(* Sizing_t) (void *obj, size_t size);  ; typedef std::vector< TStaging * > Staged_t;  Collection of pre-allocated staged array for associative containers. ;  ;  Protected Member Functions inherited from TGenCollectionProxy; void CheckFunctions () const;  Check existence of function pointers. ;  ; TGenCollectionProxy * Initialize (Bool_t silent) const;  Proxy initializer. ;  ; virtual TGenCollectionProxy * InitializeEx (Bool_t silent);  Proxy initializer. ;  ;  Protected Attributes inherited from TGenCollectionProxy; Method fClear;  Method cache for container accessors: clear container. ;  ; Collectfunc_t fCollect;  Method to collect objects from container. ;  ; ArrIterfunc_t fConstruct;  Container accessors: block construct. ;  ; std::map< std::string, TObjArray * > * fConversionReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) derived from another class. ;  ; Method0 fCreateEnv;  Method to allocate an Environment holder. ;  ; Sizing_t fDestruct;  Container accessors: block destruct. ;  ; EnvironBase_t * fEnv;  Address of the currently proxied object. ;  ; Feedfunc_t fFeed;  Container accessors: block feed. ;  ; Method fFirst;  Container accessors: generic iteration: first. ;  ; CopyIterator_t fFunctionCopyIterator;  ; CreateIterators_t fFunctionCreateIterators;  ; DeleteIterator_t fFunctionDeleteIterator;  ; DeleteTwoIterators_t fFunctionDeleteTwoIterators;  ; Next_t fFunctionNextIterator;  ; Value * fKey;  Descriptor of the key_type. ;  ; std::string fName;  Name of the class being proxied. ;  ; Method fNext;  Container accessors: generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenBitsetProxy.html:9558,access,accessors,9558,doc/master/classTGenBitsetProxy.html,https://root.cern,https://root.cern/doc/master/classTGenBitsetProxy.html,6,['access'],['accessors']
Security,"romCache"", ""the header of the cache and/or ""; 4003 ""remote file are not readable - forcing an update"");; 4004 need2copy = kTRUE;; 4005 }; 4006 ; 4007 delete remotfile;; 4008 delete cachefile;; 4009 }; 4010 } else {; 4011 need2copy = kTRUE;; 4012 }; 4013 ; 4014 // try to fetch the file (disable now the forced caching); 4015 Bool_t forcedcache = fgCacheFileForce;; 4016 fgCacheFileForce = kFALSE;; 4017 if (need2copy) {; 4018 const auto cachefilepathtmp = cachefilepath + std::to_string(gSystem->GetPid()) + "".tmp"";; 4019 if (!TFile::Cp(name, cachefilepathtmp)) {; 4020 ::Warning(""TFile::OpenFromCache"",; 4021 ""you want to read through a cache, but I ""; 4022 ""cannot make a cache copy of %s - CACHEREAD disabled"",; 4023 cachefilepathbasedir.Data());; 4024 fgCacheFileForce = forcedcache;; 4025 return nullptr;; 4026 }; 4027 if (gSystem->AccessPathName(cachefilepath)) // then file _does not_ exist (weird convention); 4028 gSystem->Rename(cachefilepathtmp, cachefilepath);; 4029 else // another process or thread already wrote a file with the same name while we were copying it; 4030 gSystem->Unlink(cachefilepathtmp);; 4031 }; 4032 fgCacheFileForce = forcedcache;; 4033 ::Info(""TFile::OpenFromCache"", ""using local cache copy of %s [%s]"", name, cachefilepath.Data());; 4034 // finally we have the file and can open it locally; 4035 fileurl.SetProtocol(""file"");; 4036 fileurl.SetFile(cachefilepath);; 4037 ; 4038 TString tagfile;; 4039 tagfile = cachefilepath;; 4040 tagfile += "".ROOT.cachefile"";; 4041 // we symlink this file as a ROOT cached file; 4042 gSystem->Symlink(gSystem->BaseName(cachefilepath), tagfile);; 4043 return TFile::Open(fileurl.GetUrl(), ""READ"", ftitle, compress, netopt);; 4044 }; 4045 }; 4046 }; 4047 ; 4048 // Failed; 4049 return f;; 4050}; 4051 ; 4052////////////////////////////////////////////////////////////////////////////////; 4053/// Create / open a file; 4054///; 4055/// The type of the file can be either a; 4056/// TFile, TNetFile, TWebFile or any TFile derived cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:146208,Access,AccessPathName,146208,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['Access'],['AccessPathName']
Security,"ron;  Small helper to save proxy environment in the event of recursive calls. More...;  ; struct  EnvironBase;  ; class  Insert;  Small helper to encapsulate all necessary data accesses for containers like set, multiset etc. More...;  ; class  Iterators;  Small helper to implement the function to create,access and destroy iterators. More...;  ; struct  Iterators< Cont_t, true >;  ; struct  Iterators< std::vector< T >, false >;  ; class  IteratorValue;  Small helper to encapsulate whether to return the value pointed to by the iterator or its address. More...;  ; struct  IteratorValue< Cont_t, value_ptr * >;  ; class  MapInsert;  Small helper to encapsulate all necessary data accesses for containers like set, multiset etc. More...;  ; struct  PairHolder;  ; class  Pushback;  Small helper to encapsulate all necessary data accesses for containers like vector, list, deque. More...;  ; struct  Pushback< Internal::TStdBitsetHelper< Bitset_t > >;  ; struct  Pushback< std::vector< Bool_t, A > >;  ; class  Pushfront;  Small helper to encapsulate all necessary data accesses for containers like forward_list. More...;  ; struct  SfinaeHelper;  ; class  Type;  Small helper to encapsulate basic data accesses for all STL continers. More...;  ; struct  Type< Internal::TStdBitsetHelper< Bitset_t > >;  ; struct  Type< std::vector< Bool_t, A > >;  . Public Member Functions;  TCollectionProxyInfo (const std::type_info &info, size_t iter_size, size_t value_diff, int value_offset, void *(*size_func)(void *), void(*resize_func)(void *, size_t), void *(*clear_func)(void *), void *(*first_func)(void *), void *(*next_func)(void *), void *(*construct_func)(void *, size_t), void(*destruct_func)(void *, size_t), void *(*feed_func)(void *, void *, size_t), void *(*collect_func)(void *, void *), void *(*create_env)(), void(*getIterators)(void *collection, void **begin_arena, void **end_arena, TVirtualCollectionProxy *proxy)=nullptr, void *(*copyIterator)(void *dest, const void *source)=nullptr, voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1TCollectionProxyInfo.html:1574,access,accesses,1574,doc/master/classROOT_1_1Detail_1_1TCollectionProxyInfo.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1TCollectionProxyInfo.html,1,['access'],['accesses']
Security,"ronSmall helper to save proxy environment in the event of recursive calls ;  CEnvironBase;  CInsertSmall helper to encapsulate all necessary data accesses for containers like set, multiset etc ;  CIteratorsSmall helper to implement the function to create,access and destroy iterators ;  CIterators< Cont_t, true >;  CIterators< std::vector< T >, false >;  CIteratorValueSmall helper to encapsulate whether to return the value pointed to by the iterator or its address ;  CIteratorValue< Cont_t, value_ptr * >;  CMapInsertSmall helper to encapsulate all necessary data accesses for containers like set, multiset etc ;  CPairHolder;  CPushbackSmall helper to encapsulate all necessary data accesses for containers like vector, list, deque ;  CPushback< Internal::TStdBitsetHelper< Bitset_t > >;  CPushback< std::vector< Bool_t, A > >;  CPushfrontSmall helper to encapsulate all necessary data accesses for containers like forward_list ;  CSfinaeHelper;  CTypeSmall helper to encapsulate basic data accesses for all STL continers ;  ►CType< Internal::TStdBitsetHelper< Bitset_t > >;  ►CIterators;  CPtrSize_t;  ►CType< std::vector< Bool_t, A > >;  CIterators;  CTFutureImpl;  CTRangeStaticCastTRangeStaticCast is an adaptater class that allows the typed iteration through a TCollection ;  ►CTSchemaRuleSet;  CTMatches;  ►CTStatusBitsChecker;  CRegistry;  CTTypedIterTTypedIter is a typed version of TIter ;  ►NExecutorUtilsThis namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce ;  CReduceObjectsMerge collection of TObjects ;  ►NExperimental;  ►NDetail;  CRArgsMenuItem;  CRCheckedMenuItem;  CRHistBinIterIterates over the bins of a RHist or RHistImpl ;  CRHistBinPtrPoints to a histogram bin (or actually a RHistBinRef) ;  CRHistBinRefRepresents a bin reference ;  CRHistBinStatConst view on a bin's statistical data ;  CRHistDataA RHistImplBase's data, provides accessors to all its statistics ;  CRHistImpl;  CRHistImplBaseInterface class f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/annotated.html:17315,access,accesses,17315,doc/v616/annotated.html,https://root.cern,https://root.cern/doc/v616/annotated.html,2,['access'],['accesses']
Security,"roofMonSender.h. Public Member Functions;  TDSetPlet (const char *name, TDSet *ds=0);  ;  ~TDSetPlet () override;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMonSender_1_1TDSetPlet.html:1282,Hash,Hash,1282,doc/master/classTProofMonSender_1_1TDSetPlet.html,https://root.cern,https://root.cern/doc/master/classTProofMonSender_1_1TDSetPlet.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"ror (regression) or cross entropy (binary classification).]; : WeightInitialization: ""XAVIER"" [Weight initialization strategy]; : Architecture: ""CPU"" [Which architecture to perform the training on.]; : TrainingStrategy: ""LearningRate=1e-3,Momentum=0.9,Repetitions=1,ConvergenceSteps=5,BatchSize=100,TestRepetitions=1,MaxEpochs=10,WeightDecay=1e-4,Regularization=None,Optimizer=ADAM,DropConfig=0.0+0.0+0.0+0.0"" [Defines the training strategies.]; : - Default:; : VerbosityLevel: ""Default"" [Verbosity level]; : CreateMVAPdfs: ""False"" [Create PDFs for classifier outputs (signal and background)]; : IgnoreNegWeightsInTraining: ""False"" [Events with negative weights are ignored in the training (but are included for testing and performance evaluation)]; : BatchLayout: ""0|0|0"" [The Layout of the batch]; : RandomSeed: ""0"" [Random seed used for weight initialization and batch shuffling]; : ValidationSize: ""20%"" [Part of the training data to use for validation. Specify as 0.2 or 20% to use a fifth of the data set as validation set. Specify as 100 to use exactly 100 events. (Default: 20%)]; : Will now use the CPU architecture with BLAS and IMT support !; Model: ""sequential""; _________________________________________________________________; Layer (type) Output Shape Param # ; =================================================================; reshape (Reshape) (None, 16, 16, 1) 0 ; ; conv2d (Conv2D) (None, 16, 16, 10) 100 ; ; batch_normalization (Batch (None, 16, 16, 10) 40 ; Normalization) ; ; conv2d_1 (Conv2D) (None, 16, 16, 10) 910 ; ; max_pooling2d (MaxPooling2 (None, 15, 15, 10) 0 ; D) ; ; flatten (Flatten) (None, 2250) 0 ; ; dense (Dense) (None, 256) 576256 ; ; dense_1 (Dense) (None, 2) 514 ; ; =================================================================; Total params: 577820 (2.20 MB); Trainable params: 577800 (2.20 MB); Non-trainable params: 20 (80.00 Byte); _________________________________________________________________; Factory : Booking method: ␛[1mPyKeras␛[0m; : ; : ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:7497,validat,validation,7497,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['validat'],['validation']
Security,"ror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDataMember*GetDataMember() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; static voidGetName(TString& output, TDataMember* dm); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TMemberStreamer*GetStreamer() const; Long_tGetThisOffset() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsObject() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRealData.html:2764,Hash,Hash,2764,root/html534/TRealData.html,https://root.cern,https://root.cern/root/html534/TRealData.html,1,['Hash'],['Hash']
Security,"ror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDataMember*GetDataMember() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; static voidGetName(TString& output, TDataMember* dm); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TMemberStreamer*GetStreamer() const; Long_tGetThisOffset() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsObject() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRealData.html:2706,Hash,Hash,2706,root/html602/TRealData.html,https://root.cern,https://root.cern/root/html602/TRealData.html,2,['Hash'],['Hash']
Security,"ror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TObjString*TMacro::GetLineWith(const char* text) const; TList*TMacro::GetListOfLines() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Bool_tTMacro::Load() constMENU ; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveMacro.html:2512,Hash,Hash,2512,root/html602/TEveMacro.html,https://root.cern,https://root.cern/root/html602/TEveMacro.html,2,['Hash'],['Hash']
Security,"ror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TObjString*TMacro::GetLineWith(const char* text) const; TList*TMacro::GetListOfLines() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveMacro.html:2583,Hash,Hash,2583,root/html528/TEveMacro.html,https://root.cern,https://root.cern/root/html528/TEveMacro.html,1,['Hash'],['Hash']
Security,"ror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TObjString*TMacro::GetLineWith(const char* text) const; TList*TMacro::GetListOfLines() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveMacro.html:2583,Hash,Hash,2583,root/html530/TEveMacro.html,https://root.cern,https://root.cern/root/html530/TEveMacro.html,3,['Hash'],['Hash']
Security,"ror(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const int&GetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TParameter_int_.html:2401,Hash,Hash,2401,root/html528/TParameter_int_.html,https://root.cern,https://root.cern/root/html528/TParameter_int_.html,1,['Hash'],['Hash']
Security,"ror(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const int&GetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t*) const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* in); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TParameter_int_.html:2468,Hash,Hash,2468,root/html530/TParameter_int_.html,https://root.cern,https://root.cern/root/html530/TParameter_int_.html,1,['Hash'],['Hash']
Security,"ror(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EConfigureNotifyType { kCNMove; kCNResize; kCNMoveResize; kCNFilter; };; enum ERootAtoms { kWM_DELETE_WINDOW; kROOT_MESSAGE; };; enum TRecEvent::ERecEventType { kCmdEvent; kGuiEvent; kExtraEvent; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. UInt_tfCodeKey or button code; Int_tfCountIf non-zero, at least this many more exposes; Int_tfFormatNext fields only used by kClientMessageEvent; Handle_tfHandleGeneral resource handle (used for atoms or windows); UInt_tfHeightHeight of exposed area; Window_tfMaskedIf non-zero, event recorded in HandleMaskEvent(); Bool_tfSendEventTrue if event came from SendEvent; UInt_tfStateKey or button mask; Time_tfTimeTime event occured in ms; EGEventTypefTypeType of event (see EGEventType); Long_tfUser[5]5 longs can be used by client message events; UInt_tfWidthWidth of exposed area; Window_tfWindowWindow ID which reported event is relative to; Int_tfXPointer x coordinate in event window; Int_tfXRootx coordinate relative to root; Int_tfYPointer y coordinate in event window; Int_tfYRooty coordinate relative to root. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReplayEvent(Bool_t showMouseCursor = kTRUE); Replays stored GUI event. Event_t * CreateEvent(TRecGuiEvent* ge); Converts TRecGuiEvent type to Event_t type. ERecEventType GetType() const; Returns what kind of event it stores. TRecorder & operator=(const TRecGuiEvent& ). » Author: Katerina Opocenska 11/09/2008 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-05 16:41; This page has been automatically generated. For comments o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRecGuiEvent.html:7972,expose,exposes,7972,root/html534/TRecGuiEvent.html,https://root.cern,https://root.cern/root/html534/TRecGuiEvent.html,3,['expose'],"['exposed', 'exposes']"
Security,"ror(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EConfigureNotifyType { kCNMove; kCNResize; kCNMoveResize; kCNFilter; };; enum ERootAtoms { kWM_DELETE_WINDOW; kROOT_MESSAGE; };; enum TRecEvent::ERecEventType { kCmdEvent; kGuiEvent; kExtraEvent; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. UInt_tfCodeKey or button code; Int_tfCountIf non-zero, at least this many more exposes; Int_tfFormatNext fields only used by kClientMessageEvent; Handle_tfHandleGeneral resource handle (used for atoms or windows); UInt_tfHeightHeight of exposed area; Window_tfMaskedIf non-zero, event recorded in HandleMaskEvent(); Bool_tfSendEventTrue if event came from SendEvent; UInt_tfStateKey or button mask; Time_tfTimeTime event occured in ms; EGEventTypefTypeType of event (see EGEventType); Long_tfUser[5]5 longs can be used by client message events; UInt_tfWidthWidth of exposed area; Window_tfWindowWindow ID which reported event is relative to; Int_tfXPointer x coordinate in event window; Int_tfXRootx coordinate relative to root; Int_tfYPointer y coordinate in event window; Int_tfYRooty coordinate relative to root. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReplayEvent(Bool_t showMouseCursor = kTRUE); Replays stored GUI event. Event_t * CreateEvent(TRecGuiEvent* ge); Converts TRecGuiEvent type to Event_t type. ERecEventType GetType() const; Returns what kind of event it stores. » Author: Katerina Opocenska 11/09/2008 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TRecorder.h 35206 2010-09-08 14:01:27Z bellenot $ » Last generated: 2010-09-23 20:20; This page has been automatically generated. For comme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRecGuiEvent.html:7884,expose,exposes,7884,root/html528/TRecGuiEvent.html,https://root.cern,https://root.cern/root/html528/TRecGuiEvent.html,3,['expose'],"['exposed', 'exposes']"
Security,"ror(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EConfigureNotifyType { kCNMove; kCNResize; kCNMoveResize; kCNFilter; };; enum ERootAtoms { kWM_DELETE_WINDOW; kROOT_MESSAGE; };; enum TRecEvent::ERecEventType { kCmdEvent; kGuiEvent; kExtraEvent; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. UInt_tfCodeKey or button code; Int_tfCountIf non-zero, at least this many more exposes; Int_tfFormatNext fields only used by kClientMessageEvent; Handle_tfHandleGeneral resource handle (used for atoms or windows); UInt_tfHeightHeight of exposed area; Window_tfMaskedIf non-zero, event recorded in HandleMaskEvent(); Bool_tfSendEventTrue if event came from SendEvent; UInt_tfStateKey or button mask; Time_tfTimeTime event occured in ms; EGEventTypefTypeType of event (see EGEventType); Long_tfUser[5]5 longs can be used by client message events; UInt_tfWidthWidth of exposed area; Window_tfWindowWindow ID which reported event is relative to; Int_tfXPointer x coordinate in event window; Int_tfXRootx coordinate relative to root; Int_tfYPointer y coordinate in event window; Int_tfYRooty coordinate relative to root. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReplayEvent(Bool_t showMouseCursor = kTRUE); Replays stored GUI event. Event_t * CreateEvent(TRecGuiEvent* ge); Converts TRecGuiEvent type to Event_t type. ERecEventType GetType() const; Returns what kind of event it stores. » Author: Katerina Opocenska 11/09/2008 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TRecorder.h 35206 2010-09-08 14:01:27Z bellenot $ » Last generated: 2011-07-04 15:36; This page has been automatically generated. For comme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TRecGuiEvent.html:7953,expose,exposes,7953,root/html530/TRecGuiEvent.html,https://root.cern,https://root.cern/root/html530/TRecGuiEvent.html,3,['expose'],"['exposed', 'exposes']"
Security,"ror(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EConfigureNotifyType { kCNMove; kCNResize; kCNMoveResize; kCNFilter; };; enum ERootAtoms { kWM_DELETE_WINDOW; kROOT_MESSAGE; };; enum TRecEvent::ERecEventType { kCmdEvent; kGuiEvent; kExtraEvent; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. UInt_tfCodeKey or button code; Int_tfCountIf non-zero, at least this many more exposes; Int_tfFormatNext fields only used by kClientMessageEvent; Handle_tfHandleGeneral resource handle (used for atoms or windows); UInt_tfHeightHeight of exposed area; Window_tfMaskedIf non-zero, event recorded in HandleMaskEvent(); Bool_tfSendEventTrue if event came from SendEvent; UInt_tfStateKey or button mask; Time_tfTimeTime event occured in ms; EGEventTypefTypeType of event (see EGEventType); Long_tfUser[5]5 longs can be used by client message events; UInt_tfWidthWidth of exposed area; Window_tfWindowWindow ID which reported event is relative to; Int_tfXPointer x coordinate in event window; Int_tfXRootx coordinate relative to root; Int_tfYPointer y coordinate in event window; Int_tfYRooty coordinate relative to root. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReplayEvent(Bool_t showMouseCursor = kTRUE); Replays stored GUI event. Event_t * CreateEvent(TRecGuiEvent* ge); Converts TRecGuiEvent type to Event_t type. ERecEventType GetType() const; Returns what kind of event it stores. » Author: Katerina Opocenska 11/09/2008 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TRecorder.h 35206 2010-09-08 14:01:27Z bellenot $ » Last generated: 2011-11-03 20:22; This page has been automatically generated. For comme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRecGuiEvent.html:7953,expose,exposes,7953,root/html532/TRecGuiEvent.html,https://root.cern,https://root.cern/root/html532/TRecGuiEvent.html,3,['expose'],"['exposed', 'exposes']"
Security,"rors); = ""U"" Use a User specified fitting algorithm (via SetFCN); = ""Q"" Quiet mode (minimum printing); = ""V"" Verbose mode (default is between Q and V); = ""E"" Perform better Errors estimation using Minos technique; = ""B"" User defined parameter settings are used for predefined functions; like ""gaus"", ""expo"", ""poln"", ""landau"".; Use this option when you want to fix one or more parameters for these functions.; = ""M"" More. Improve fit results.; It uses the IMPROVE command of TMinuit (see TMinuit::mnimpr).; This algorithm attempts to improve the found local minimum by searching for a; better one.; = ""R"" Use the Range specified in the function range; = ""N"" Do not store the graphics function, do not draw; = ""0"" Do not plot the result of the fit. By default the fitted function; is drawn unless the option""N"" above is specified.; = ""+"" Add this new fitted function to the list of fitted functions; (by default, any previous function is deleted); = ""C"" In case of linear fitting, don't calculate the chisquare; (saves time); = ""F"" If fitting a polN, switch to minuit fitter; = ""S"" The result of the fit is returned in the TFitResultPtr; (see below Access to the Fit Result). When the fit is drawn (by default), the parameter goption may be used; to specify a list of graphics options. See TH1::Draw for a complete; list of these options. In order to use the Range option, one must first create a function; with the expression to be fitted. For example, if your histogram; has a defined range between -4 and 4 and you want to fit a gaussian; only in the interval 1 to 3, you can do:; TF1 *f1 = new TF1(""f1"", ""gaus"", 1, 3);; histo->Fit(""f1"", ""R"");. Setting initial conditions. Parameters must be initialized before invoking the Fit function.; The setting of the parameter initial values is automatic for the; predefined functions : poln, expo, gaus, landau. One can however disable; this automatic computation by specifying the option ""B"".; Note that if a predefined function is defined with an argument,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH1.html:79093,Access,Access,79093,root/html604/TH1.html,https://root.cern,https://root.cern/root/html604/TH1.html,1,['Access'],['Access']
Security,"ross validation where the splitting into k folds is computed deterministically. This ensures that the a given event will always end up in the same fold.; In addition all resulting classifiers are saved and can be applied to new data using MethodCrossValidation. One requirement for this to work is a splitting function that is evaluated for each event to determine into what fold it goes (for training/evaluation) or to what classifier (for application). Split Expression; Cross evaluation uses a deterministic split to partition the data into folds called the split expression. The expression can be any valid TFormula as long as all parts used are defined.; For each event the split expression is evaluated to a number and the event is put in the fold corresponding to that number.; It is recommended to always use int([NumFolds]) at the end of the expression.; The split expression has access to all spectators and variables defined in the dataloader. Additionally, the number of folds in the split can be accessed with NumFolds (or numFolds). Example; ""int(fabs([eventID]))%int([NumFolds])"". Project : TMVA - a ROOT-integrated toolkit for multivariate data analysis; Package : TMVA; Root Macro: TMVACrossValidation. ; DataSetInfo : [datasetcv] : Added class ""Signal""; : Add Tree of type Signal with 1000 events; DataSetInfo : [datasetcv] : Added class ""Background""; : Add Tree of type Background with 1000 events; <HEADER> Factory : You are running ROOT Version: 6.33.01, Oct 10, 2023; : ; : _/_/_/_/_/ _| _| _| _| _|_| ; : _/ _|_| _|_| _| _| _| _| ; : _/ _| _| _| _| _| _|_|_|_| ; : _/ _| _| _| _| _| _| ; : _/ _| _| _| _| _| ; : ; : ___________TMVA Version 4.2.1, Feb 5, 2015; : ; : Rebuilding Dataset datasetcv; : Building event vectors for type 2 Signal; : Dataset[datasetcv] : create input formulas for tree ; : Building event vectors for type 2 Background; : Dataset[datasetcv] : create input formulas for tree ; <HEADER> DataSetFactory : [datasetcv] : Number of events in input trees; : ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidation_8C.html:1830,access,accessed,1830,doc/master/TMVACrossValidation_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidation_8C.html,1,['access'],['accessed']
Security,"ross validation where the splitting into k folds is computed deterministically. This ensures that the a given event will always end up in the same fold.; In addition all resulting classifiers are saved and can be applied to new data using MethodCrossValidation. One requirement for this to work is a splitting function that is evaluated for each event to determine into what fold it goes (for training/evaluation) or to what classifier (for application). Split Expression; Cross evaluation uses a deterministic split to partition the data into folds called the split expression. The expression can be any valid TFormula as long as all parts used are defined.; For each event the split expression is evaluated to a number and the event is put in the fold corresponding to that number.; It is recommended to always use int([NumFolds]) at the end of the expression.; The split expression has access to all spectators and variables defined in the dataloader. Additionally, the number of folds in the split can be accessed with NumFolds (or numFolds). Example; ""int(fabs([eventID]))%int([NumFolds])"". Project : TMVA - a ROOT-integrated toolkit for multivariate data analysis; Package : TMVA; Root Macro: TMVACrossValidationRegression. ; DataSetInfo : [datasetcvreg] : Added class ""Regression""; : Add Tree TreeR of type Regression with 10000 events; --- TMVACrossValidationRegression: Using input file: ./files/tmva_reg_example.root; : Dataset[datasetcvreg] : Class index : 0 name : Regression; <HEADER> Factory : You are running ROOT Version: 6.33.01, Oct 10, 2023; : ; : _/_/_/_/_/ _| _| _| _| _|_| ; : _/ _|_| _|_| _| _| _| _| ; : _/ _| _| _| _| _| _|_|_|_| ; : _/ _| _| _| _| _| _| ; : _/ _| _| _| _| _| ; : ; : ___________TMVA Version 4.2.1, Feb 5, 2015; : ; : Rebuilding Dataset datasetcvreg; : Building event vectors for type 2 Regression; : Dataset[datasetcvreg] : create input formulas for tree TreeR; <HEADER> DataSetFactory : [datasetcvreg] : Number of events in input trees; : ; : Number of tra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html:1856,access,accessed,1856,doc/master/TMVACrossValidationRegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html,1,['access'],['accessed']
Security,"rotected . Definition at line 44 of file BasicFCN.h. Constructor & Destructor Documentation. ◆ BasicFCN(). template<class DerivFunType , class ModelFunType , class DataType > . ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::BasicFCN ; (; const std::shared_ptr< DataType > & ; data, . const std::shared_ptr< IModelFunction > & ; func . ). inlineprotected . Constructor from data set and model function. ; Definition at line 55 of file BasicFCN.h. ◆ ~BasicFCN(). template<class DerivFunType , class ModelFunType , class DataType > . virtual ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::~BasicFCN ; (; ). inlineprotectedvirtual . Destructor (no operations) ; Definition at line 66 of file BasicFCN.h. Member Function Documentation. ◆ Data(). template<class DerivFunType , class ModelFunType , class DataType > . virtual const DataType & ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::Data ; (; ); const. inlinevirtual . access to const reference to the data ; Definition at line 72 of file BasicFCN.h. ◆ DataPtr(). template<class DerivFunType , class ModelFunType , class DataType > . std::shared_ptr< DataType > ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::DataPtr ; (; ); const. inline . access to data pointer ; Definition at line 75 of file BasicFCN.h. ◆ HasHessian(). template<class DerivFunType , class ModelFunType , class DataType > . virtual bool ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::HasHessian ; (; ); const. inlinevirtual . flag to indicate if can compute Hessian ; Reimplemented from ROOT::Math::BasicFitMethodFunction< DerivFunType >.; Definition at line 84 of file BasicFCN.h. ◆ ModelFunction(). template<class DerivFunType , class ModelFunType , class DataType > . virtual const IModelFunction & ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::ModelFunction ; (; ); const. inlinevirtual . access to const reference to the model function ; Definition at line 78 of file BasicFCN.h. ◆ ModelFun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1BasicFCN.html:6293,access,access,6293,doc/master/classROOT_1_1Fit_1_1BasicFCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1BasicFCN.html,1,['access'],['access']
Security,"rotected methods.; 3844 ; 3845const TList *TClass::GetListOfAllPublicMethods(Bool_t load /* = kTRUE */); 3846{; 3847 R__LOCKGUARD(gInterpreterMutex);; 3848 ; 3849 if (!fAllPubMethod) fAllPubMethod = new TViewPubFunctions(this);; 3850 if (load) {; 3851 if (gDebug>0) Info(""GetListOfAllPublicMethods"",""Header Parsing - Asking for all the methods of class %s: this can involve parsing."",GetName());; 3852 fAllPubMethod->Load();; 3853 }; 3854 return fAllPubMethod;; 3855}; 3856 ; 3857////////////////////////////////////////////////////////////////////////////////; 3858/// Returns a list of all public data members of this class and its base; 3859/// classes. Refers to a subset of the data members in GetListOfDatamembers(); 3860/// so don't do GetListOfAllPublicDataMembers()->Delete().; 3861 ; 3862TList *TClass::GetListOfAllPublicDataMembers(Bool_t load /* = kTRUE */); 3863{; 3864 R__LOCKGUARD(gInterpreterMutex);; 3865 ; 3866 if (!fAllPubData) fAllPubData = new TViewPubDataMembers(this);; 3867 if (load) fAllPubData->Load();; 3868 return fAllPubData;; 3869}; 3870 ; 3871////////////////////////////////////////////////////////////////////////////////; 3872/// Returns list of methods accessible by context menu.; 3873 ; 3874void TClass::GetMenuItems(TList *list); 3875{; 3876 if (!HasInterpreterInfo()) return;; 3877 ; 3878 // get the base class; 3879 TIter nextBase(GetListOfBases(), kIterBackward);; 3880 TBaseClass *baseClass;; 3881 while ((baseClass = (TBaseClass *) nextBase())) {; 3882 TClass *base = baseClass->GetClassPointer();; 3883 if (base) base->GetMenuItems(list);; 3884 }; 3885 ; 3886 // remove methods redefined in this class with no menu; 3887 TMethod *method, *m;; 3888 TIter next(GetListOfMethods(), kIterBackward);; 3889 while ((method = (TMethod*)next())) {; 3890 m = (TMethod*)list->FindObject(method->GetName());; 3891 if (method->IsMenuItem() != kMenuNoMenu) {; 3892 if (!m); 3893 list->AddFirst(method);; 3894 } else {; 3895 if (m && m->GetNargs() == method->GetNargs());",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:146731,access,accessible,146731,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['access'],['accessible']
Security,"rotected methods.; 3911 ; 3912const TList *TClass::GetListOfAllPublicMethods(Bool_t load /* = kTRUE */); 3913{; 3914 R__LOCKGUARD(gInterpreterMutex);; 3915 ; 3916 if (!fAllPubMethod) fAllPubMethod = new TViewPubFunctions(this);; 3917 if (load) {; 3918 if (gDebug>0) Info(""GetListOfAllPublicMethods"",""Header Parsing - Asking for all the methods of class %s: this can involve parsing."",GetName());; 3919 fAllPubMethod->Load();; 3920 }; 3921 return fAllPubMethod;; 3922}; 3923 ; 3924////////////////////////////////////////////////////////////////////////////////; 3925/// Returns a list of all public data members of this class and its base; 3926/// classes. Refers to a subset of the data members in GetListOfDatamembers(); 3927/// so don't do GetListOfAllPublicDataMembers()->Delete().; 3928 ; 3929TList *TClass::GetListOfAllPublicDataMembers(Bool_t load /* = kTRUE */); 3930{; 3931 R__LOCKGUARD(gInterpreterMutex);; 3932 ; 3933 if (!fAllPubData) fAllPubData = new TViewPubDataMembers(this);; 3934 if (load) fAllPubData->Load();; 3935 return fAllPubData;; 3936}; 3937 ; 3938////////////////////////////////////////////////////////////////////////////////; 3939/// Returns list of methods accessible by context menu.; 3940 ; 3941void TClass::GetMenuItems(TList *list); 3942{; 3943 if (!HasInterpreterInfo()) return;; 3944 ; 3945 // get the base class; 3946 TIter nextBase(GetListOfBases(), kIterBackward);; 3947 TBaseClass *baseClass;; 3948 while ((baseClass = (TBaseClass *) nextBase())) {; 3949 TClass *base = baseClass->GetClassPointer();; 3950 if (base) base->GetMenuItems(list);; 3951 }; 3952 ; 3953 // remove methods redefined in this class with no menu; 3954 TMethod *method, *m;; 3955 TIter next(GetListOfMethods(), kIterBackward);; 3956 while ((method = (TMethod*)next())) {; 3957 m = (TMethod*)list->FindObject(method->GetName());; 3958 if (method->IsMenuItem() != kMenuNoMenu) {; 3959 if (!m); 3960 list->AddFirst(method);; 3961 } else {; 3962 if (m && m->GetNargs() == method->GetNargs());",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:149482,access,accessible,149482,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['access'],['accessible']
Security,"rotected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooDataHist_dh; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooParamHistFunc.html:32712,validat,validate,32712,root/html534/RooParamHistFunc.html,https://root.cern,https://root.cern/root/html534/RooParamHistFunc.html,2,"['access', 'validat']","['access', 'validate']"
Security,"rototype(const char* method, const char* proto); virtual const char*TNamed::GetName() const; Int_tGetNdata(); ROOT::NewFunc_tGetNew() const; ROOT::NewArrFunc_tGetNewArray() const; Int_tGetNmethods(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TRealData*GetRealData(const char* name) const; TVirtualRefProxy*GetReferenceProxy() const; const ROOT::TSchemaRuleSet*GetSchemaRules() const; ROOT::TSchemaRuleSet*GetSchemaRules(Bool_t create = kFALSE); const char*GetSharedLibs(); ShowMembersFunc_tGetShowMembersWrapper() const; TClassStreamer*GetStreamer() const; TVirtualStreamerInfo*GetStreamerInfo(Int_t version = 0) const; TObjArray*GetStreamerInfos() const; virtual const char*TNamed::GetTitle() const; const type_info*GetTypeInfo() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasDefaultConstructor() const; virtual ULong_tTNamed::Hash() const; voidIgnoreTObjectStreamer(Bool_t ignore = kTRUE); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tInheritsFrom(const char* cl) const; virtual Bool_tInheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static TClass::ENewTypeIsCallingNew(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tIsFolder(void* obj) const; Bool_tIsForeign() const; Bool_tIsLoaded() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsStartingWithTObject() const; Bool_tIsTObject() const; Bool_tTObject::IsZombie() const; static TClass*Load(TBuffer& b); virtual voidls(Option_t* opt = """") const; voidMakeCustomMenuList(); voidTObject::MayNotUse(const char* method) const; voidMove(void* arenaFrom, void* arenaTo) const; void*New(TClass::ENewType defConstructor = kClassNew) const; void*New(void* aren",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClass.html:6902,Hash,Hash,6902,root/html526/TClass.html,https://root.cern,https://root.cern/root/html526/TClass.html,1,['Hash'],['Hash']
Security,"routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TPad::HashULong_t Hash() const overrideReturn hash value for this object.Definition TPad.h:267; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 267 of file TPad.h. ◆ HasViewer3D(). Bool_t TPad::HasViewer3D ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 401 of file TPad.h. ◆ HideToolTip(). void TPad::HideToolTip ; (; Int_t ; event). protectedvirtual . Hide tool tip depending on the event type. ; Typically tool tips are hidden when event is not a kMouseEnter and not a kMouseMotion event. ; Definition at line 2847 of file TPad.cxx. ◆ HighLight(). void TPad::HighLight ; (; Color_t ; color = kRed, . Bool_t ; set = kTRUE . ). overridevirtual . Highlight pad. ; do not highlight when printing on Postscript ; Implements TVirtualPad.; Definition at line 3055 of file TPad.cxx. ◆ IncrementPaletteColor(). Int_t TPad::IncrementPaletteColor ; (; Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPad.html:87563,Hash,Hash,87563,doc/master/classTPad.html,https://root.cern,https://root.cern/doc/master/classTPad.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TPair::HashULong_t Hash() const overrideReturn hash value for this object.Definition TMap.h:118; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 118 of file TMap.h. ◆ IsA(). TClass * TPair::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 124 of file TMap.h. ◆ IsEqual(). Bool_t TPair::IsEqual ; (; const TObject * ; obj); const. inlineoverridevirtual . Default equal comparison (objects are equal if they have the same address in memory). ; More complicated classes might want to override this function. ; Reimplemented from TObject.; Definition at line 119 of file TMap.h. ◆ IsFolder(). Bool_t TPair::IsFolder ; (; ); const. inlineoverridevirtual . Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ; Reimplemented from TObject.; Definition at lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPair.html:13050,Hash,Hash,13050,doc/master/classTPair.html,https://root.cern,https://root.cern/doc/master/classTPair.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TPave::HashULong_t Hash() const overrideReturn hash value for this object.Definition TPave.h:63; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line 63 of file TPave.h. ◆ IsA(). TClass * TPave::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TBox.; Reimplemented in TPaveClass, TPaveLabel, TPaveStats, TPavesText, and TPaveText.; Definition at line 91 of file TPave.h. ◆ IsSortable(). Bool_t TPave::IsSortable ; (; ); const. inlineoverridevirtual . Reimplemented from TObject.; Definition at line 64 of file TPave.h. ◆ ls(). void TPave::ls ; (; Option_t * ; option = """"); const. overridevirtual . List this pave with its attributes. ; Reimplemented from TBox.; Definition at line 279 of file TPave.cxx. ◆ operator=(). TPave & TPave::operator= ; (; const TPave & ; src). Assignment operator. ; Definition at line 129 of file TPave.cx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPave.html:24830,Hash,Hash,24830,doc/master/classTPave.html,https://root.cern,https://root.cern/doc/master/classTPave.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"roviders in the same program/macro, where the environemntal variables solution is not convenient (see below).; To use AWS temporary security credentials you need to specify the session token. This can be added to the options argument with a string of the form TOKEN=mySessionToken. The temporary access and secret keys must also be available, either via the AUTH option or by environmental variable.; If you need to specify more than one option separate them by ' ' (blank), for instance: ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+""; Examples: TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; TFile* f2 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; ""AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; TFile* f3 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; ""TOKEN=AQoDYXdzEM///////////wEa8AHEYmCinjD+TsGEjtgKSMAT6wnY"");; If there is no authentication information in the 'options' argument (i.e. not AUTH=""...."") the values of the environmental variables S3_ACCESS_KEY and S3_SECRET_KEY (if set) are expected to contain the access key id and the secret access key, respectively. You have been provided with these credentials by your S3 service provider.; If neither the AUTH information is provided in the 'options' argument nor the environmental variables are set, we try to open the file without providing any authentication information to the server. This is useful when the file is set an access control that allows for any unidentified user to read the file. ; Definition at line 152 of file TS3WebFile.cxx. ◆ ~TS3WebFile(). virtual TS3WebFile::~TS3WebFile ; (; ). inlinevirtual . Definition at line 93 of file TS3WebFile.h. Member Function Documentation. ◆ Class(). static TClass * TS3WebFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TS3WebFile::Cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTS3WebFile.html:50764,authenticat,authentication,50764,doc/master/classTS3WebFile.html,https://root.cern,https://root.cern/doc/master/classTS3WebFile.html,1,['authenticat'],['authentication']
Security,"row index by adding row_shift and the column index by adding col_shift, respectively. ;  ; virtual TMatrixTBase< Element > & Sqr ();  Square each element of the matrix. ;  ; virtual TMatrixTBase< Element > & Sqrt ();  Take square root of all elements. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Element Sum () const;  Compute sum of elements. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTSparse.html:17272,Hash,Hash,17272,doc/master/classTMatrixTSparse.html,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html,2,['Hash'],['Hash']
Security,"rowser will reload all related J...Definition RWebWindow.cxx:1289; ROOT::RWebWindow::RemoveMasterConnectionvoid RemoveMasterConnection(unsigned connid=0)Remove master connection - if any.Definition RWebWindow.cxx:343; ROOT::RWebWindow::RemoveEmbedWindowvoid RemoveEmbedWindow(unsigned connid, int channel)Remove RWebWindow associated with the channelfEmbed.Definition RWebWindow.cxx:1867; ROOT::RWebWindow::SetCallBacksvoid SetCallBacks(WebWindowConnectCallback_t conn, WebWindowDataCallback_t data, WebWindowConnectCallback_t disconn=nullptr)Set call-backs function for connect, data and disconnect events.Definition RWebWindow.cxx:1772; ROOT::RWebWindow::SetRequireAuthKeyvoid SetRequireAuthKey(bool on)Configure if authentication key in connection string is required.Definition RWebWindow.hxx:316; ROOT::RWebWindow::GenerateKeystd::string GenerateKey() constGenerate new unique key for the window.Definition RWebWindow.cxx:611; ROOT::RWebWindow::SetUseCurrentDirvoid SetUseCurrentDir(bool on=true)Configure if window can access local files via currentdir/ path of http server.Definition RWebWindow.hxx:324; ROOT::RWebWindow::fDisconnCallbackWebWindowConnectCallback_t fDisconnCallback! callback for disconnect eventDefinition RWebWindow.hxx:159; ROOT::RWebWindow::GetMaxQueueLengthunsigned GetMaxQueueLength() constReturn maximal queue length of data which can be held by window.Definition RWebWindow.hxx:304; ROOT::RWebWindow::EQueueEntryKindEQueueEntryKindDefinition RWebWindow.hxx:124; ROOT::RWebWindow::kind_Disconnect@ kind_DisconnectDefinition RWebWindow.hxx:124; ROOT::RWebWindow::kind_Connect@ kind_ConnectDefinition RWebWindow.hxx:124; ROOT::RWebWindow::kind_None@ kind_NoneDefinition RWebWindow.hxx:124; ROOT::RWebWindow::kind_Data@ kind_DataDefinition RWebWindow.hxx:124; ROOT::RWebWindow::IsFileDialogMessagestatic bool IsFileDialogMessage(const std::string &msg)Check if this could be the message send by client to start new file dialog If returns true,...Definition RWebWindow.cxx:196",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebWindow_8hxx_source.html:44064,access,access,44064,doc/v632/RWebWindow_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebWindow_8hxx_source.html,1,['access'],['access']
Security,"roxiedPtr, fColRegister, columns);; 398 return RInterface<F_t, DS_t>(std::move(filterPtr), *fLoopManager, fColRegister);; 399 }; 400 ; 401 // clang-format off; 402 ////////////////////////////////////////////////////////////////////////////; 403 /// \brief Define a new column.; 404 /// \param[in] name The name of the defined column.; 405 /// \param[in] expression Function, lambda expression, functor class or any other callable object producing the defined value. Returns the value that will be assigned to the defined column.; 406 /// \param[in] columns Names of the columns/branches in input to the producer function.; 407 /// \return the first node of the computation graph for which the new quantity is defined.; 408 ///; 409 /// Define a column that will be visible from all subsequent nodes; 410 /// of the functional chain. The `expression` is only evaluated for entries that pass; 411 /// all the preceding filters.; 412 /// A new variable is created called `name`, accessible as if it was contained; 413 /// in the dataset from subsequent transformations/actions.; 414 ///; 415 /// Use cases include:; 416 /// * caching the results of complex calculations for easy and efficient multiple access; 417 /// * extraction of quantities of interest from complex objects; 418 ///; 419 /// An exception is thrown if the name of the new column is already in use in this branch of the computation graph.; 420 ///; 421 /// ### Example usage:; 422 /// ~~~{.cpp}; 423 /// // assuming a function with signature:; 424 /// double myComplexCalculation(const RVec<float> &muon_pts);; 425 /// // we can pass it directly to Define; 426 /// auto df_with_define = df.Define(""newColumn"", myComplexCalculation, {""muon_pts""});; 427 /// // alternatively, we can pass the body of the function as a string, as in Filter:; 428 /// auto df_with_define = df.Define(""newColumn"", ""x*x + y*y"");; 429 /// ~~~; 430 ///; 431 /// \note If the body of the string expression contains an explicit `return` statement (even if it is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:20218,access,accessible,20218,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['access'],['accessible']
Security,"roxy*TEmulatedCollectionProxy::InitializeEx(Bool_t silent); voidTEmulatedCollectionProxy::ReadItems(int nElements, TBuffer& b); voidReadMap(UInt_t nElements, TBuffer& b); voidTEmulatedCollectionProxy::Shrink(UInt_t nCurr, UInt_t left, Bool_t force); voidTEmulatedCollectionProxy::WriteItems(int nElements, TBuffer& b); voidWriteMap(UInt_t nElements, TBuffer& b). private:. TEmulatedMapProxy&operator=(const TEmulatedMapProxy& rhs). Data Members; public:. enum TGenCollectionProxy::[unnamed] { kBIT_ISSTRING; kBIT_ISTSTRING; kBOOL_t; };; enum TVirtualCollectionProxy::EProperty { kIsInitialized; kIsAssociative; kIsEmulated; kNeedDelete; };. public:. static const Int_tTVirtualCollectionProxy::fgIteratorArenaSizegreater than sizeof(void*) + sizeof(UInt_t). protected:. TClassRefTVirtualCollectionProxy::fClass; TGenCollectionProxy::MethodTGenCollectionProxy::fClearMethod cache for container accessors: clear container; void*TGenCollectionProxy::fCollectMethod to collect objects from container; void*TGenCollectionProxy::fConstructContainer accessors: block construct; map<std::string,TObjArray*>*TGenCollectionProxy::fConversionReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read) derived from another class.; TGenCollectionProxy::Method0TGenCollectionProxy::fCreateEnvMethod to allocate an Environment holder.; void*TGenCollectionProxy::fDestructContainer accessors: block destruct; ROOT::TCollectionProxyInfo::EnvironBase*TGenCollectionProxy::fEnvAddress of the currently proxied object; void*TGenCollectionProxy::fFeedContainer accessors: block feed; TGenCollectionProxy::MethodTGenCollectionProxy::fFirstContainer accessors: generic iteration: first; void*TGenCollectionProxy::fFunctionCopyIterator; void*TGenCollectionProxy::fFunctionCreateIterators; void*TGenCollectionProxy::fFunctionDeleteIterator; void*TGenCollectionProxy::fFunctionDeleteTwoIterators; void*TGenCollectionProxy::fFunctionNextIterator; TGenCollectionProxy::Value*TGenCollectionProxy::fKeyDescriptor of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEmulatedMapProxy.html:4712,access,accessors,4712,root/html534/TEmulatedMapProxy.html,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html,2,['access'],['accessors']
Security,"rptr);  ; template<typename T1 > ; RResultPtr< T1 > RDFDetail::MakeResultPtr (const std::shared_ptr< T1 > &, ::ROOT::Detail::RDF::RLoopManager &, std::shared_ptr< RDFInternal::RActionBase >);  ; ROOT::Internal::RDF::SnapshotPtr_t ROOT::Internal::RDF::CloneResultAndAction (const ROOT::Internal::RDF::SnapshotPtr_t &inptr, const std::string &outputFileName);  ; RResultPtr< T > ROOT::Internal::RDF::CloneResultAndAction (const RResultPtr< T > &inptr);  ; class ROOT::Internal::RDF::GraphDrawing::GraphCreatorHelper;  ; template<typename T1 > ; ROOT::RDF::Experimental::RResultMap< T1 > ROOT::RDF::Experimental::VariationsFor (RResultPtr< T1 > resPtr);  ; class RResultHandle;  . #include <ROOT/RResultPtr.hxx>; Member Typedef Documentation. ◆ SPT_t. template<typename T > . using ROOT::RDF::RResultPtr< T >::SPT_t = std::shared_ptr<T>. private . Definition at line 121 of file RResultPtr.hxx. ◆ Value_t. template<typename T > . using ROOT::RDF::RResultPtr< T >::Value_t = T. Convenience alias to simplify access to proxied type. ; Definition at line 206 of file RResultPtr.hxx. Constructor & Destructor Documentation. ◆ RResultPtr() [1/5]. template<typename T > . ROOT::RDF::RResultPtr< T >::RResultPtr ; (; std::shared_ptr< T > ; objPtr, . RDFDetail::RLoopManager * ; lm, . std::shared_ptr< RDFInternal::RActionBase > ; actionPtr . ). inlineprivate . Definition at line 199 of file RResultPtr.hxx. ◆ RResultPtr() [2/5]. template<typename T > . ROOT::RDF::RResultPtr< T >::RResultPtr ; (; ). default . ◆ RResultPtr() [3/5]. template<typename T > . ROOT::RDF::RResultPtr< T >::RResultPtr ; (; const RResultPtr< T > & ; ). default . ◆ RResultPtr() [4/5]. template<typename T > . ROOT::RDF::RResultPtr< T >::RResultPtr ; (; RResultPtr< T > && ; ). default . ◆ RResultPtr() [5/5]. template<typename T > . template<typename T2 , std::enable_if_t< std::is_constructible< std::shared_ptr< T >, std::shared_ptr< T2 > >::value, int > = 0> . ROOT::RDF::RResultPtr< T >::RResultPtr ; (; const RResultPtr< T2 > & ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RResultPtr.html:5524,access,access,5524,doc/master/classROOT_1_1RDF_1_1RResultPtr.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RResultPtr.html,1,['access'],['access']
Security,"rray() const; Int_tTClass::GetNmethods(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TRealData*TClass::GetRealData(const char* name) const; TVirtualRefProxy*TClass::GetReferenceProxy() const; const ROOT::TSchemaRuleSet*TClass::GetSchemaRules() const; ROOT::TSchemaRuleSet*TClass::GetSchemaRules(Bool_t create = kFALSE); const char*TClass::GetSharedLibs(); ShowMembersFunc_tTClass::GetShowMembersWrapper() const; TClassStreamer*TClass::GetStreamer() const; TVirtualStreamerInfo*TClass::GetStreamerInfo(Int_t version = 0) const; TObjArray*TClass::GetStreamerInfos() const; virtual const char*TNamed::GetTitle() const; const type_info*TClass::GetTypeInfo() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTClass::HasDefaultConstructor() const; virtual ULong_tTNamed::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTClass::IgnoreTObjectStreamer(Bool_t ignore = kTRUE); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTClass::InheritsFrom(const char* cl) const; virtual Bool_tTClass::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTClass::InterpretedShowMembers(void* obj, TMemberInspector& insp); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static TClass::ENewTypeTClass::IsCallingNew(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTClass::IsFolder() const; Bool_tTClass::IsFolder(void* obj) const; Bool_tTClass::IsForeign() const; Bool_tTClass::IsLoaded() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTClass::IsStartingWithTObject() const; Bool_tTClass::IsTObject() const; Bool_tTObject::IsZombie() const; static TClass*TClass::Load(TBuffer& b);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQClass.html:10311,Hash,Hash,10311,root/html528/TQClass.html,https://root.cern,https://root.cern/root/html528/TQClass.html,1,['Hash'],['Hash']
Security,"rray(); virtual const char*TObject::GetName() const; Int_tTMatrixTBase<double>::GetNcols() const; Int_tTMatrixTBase<double>::GetNoElements() const; Int_tTMatrixTBase<double>::GetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Int_t*GetRowIndexArray() const; virtual Int_t*GetRowIndexArray(); Int_tTMatrixTBase<double>::GetRowLwb() const; Int_tTMatrixTBase<double>::GetRowUpb() const; TMatrixTSparse<double>GetSub(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Option_t* option = ""S"") const; virtual TMatrixTBase<double>&GetSub(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, TMatrixTBase<double>& target, Option_t* option = ""S"") const; virtual const char*TObject::GetTitle() const; doubleTMatrixTBase<double>::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual TMatrixTBase<double>&InsertRow(Int_t row, Int_t col, const double* v, Int_t n = -1); virtual voidTObject::Inspect() constMENU ; voidTMatrixTBase<double>::Invalidate(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTMatrixTBase<double>::IsOwner() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsSymmetric() const; Bool_tTMatrixTBase<double>::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTMatrixTBase<double>::MakeValid(); virtual doubleTMatrixTBase<double>::Max() const; voidTObject::MayNotUse(const char* method) const; virtual doubleTMatrixTBase",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMatrixTSparse_double_.html:7012,Hash,Hash,7012,root/html528/TMatrixTSparse_double_.html,https://root.cern,https://root.cern/root/html528/TMatrixTSparse_double_.html,6,['Hash'],['Hash']
Security,"rray(const ULong_t *l, Int_t n)=0; TBuffer::ReadClassEmulatedvirtual Int_t ReadClassEmulated(const TClass *cl, void *object, const TClass *onfile_class=nullptr)=0; TBuffer::Bufferchar * Buffer() constDefinition TBuffer.h:96; TBuffer::ReadArrayvirtual Int_t ReadArray(Char_t *&c)=0; TBuffer::StreamObjectvirtual void StreamObject(void *obj, const std::type_info &typeinfo, const TClass *onFileClass=nullptr)=0; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClonesArrayAn array of clone (identical) objects.Definition TClonesArray.h:29; TMemberStreamerDefinition TMemberStreamer.h:26; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; TObject::Readvirtual Int_t Read(const char *name)Read contents of object with specified name from the current directory.Definition TObject.cxx:654; TProcessIDA TProcessID identifies a ROOT job in a unique way in time and space.Definition TProcessID.h:74; TRefTableA TRefTable maintains the association between a referenced object and the parent object supporting th...Definition TRefTable.h:35; TStreamerElementDefinition TStreamerElement.h:32; TStreamerInfoActions::TActionSequenceDefinition TStreamerInfoActions.h:177; TStringBasic string class.Definition TString.h:139; TVirtualArrayWrapper around an object and giving indirect access to its content even if the object is not of a cla...Definition TVirtualArray.h:27; TVirtualStreamerInfoAbstract Interface class describing Streamer information for one class.Definition TVirtualStreamerInfo.h:44; bool; double; int; unsigned int; nconst Int_t nDefinition legend1.C:16; TStreamerInfoActionsDefinition TBuffer.h:39; lTLine lDefinition textangle.C:4. corebaseincTBuffer.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:03 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBuffer_8h_source.html:46774,access,access,46774,doc/master/TBuffer_8h_source.html,https://root.cern,https://root.cern/doc/master/TBuffer_8h_source.html,1,['access'],['access']
Security,"rray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidFinishPolygon(); voidGetConvexVertices(Double_t* x, Double_t* y) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNconvex() const; Int_tGetNvert() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; voidGetVertices(Double_t* x, Double_t* y) const; Double_t*GetX(); Double_t*GetY(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsClockwise() const; Bool_tIsConvex() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsFinished() const; virtual Bool_tTObject::IsFolder() const; Bool_tIsIllegalCheck() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPolygon.html:3866,Hash,Hash,3866,root/html534/TGeoPolygon.html,https://root.cern,https://root.cern/root/html534/TGeoPolygon.html,1,['Hash'],['Hash']
Security,"rray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidFinishPolygon(); voidGetConvexVertices(Double_t* x, Double_t* y) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNconvex() const; Int_tGetNvert() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; voidGetVertices(Double_t* x, Double_t* y) const; Double_t*GetX(); Double_t*GetY(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsClockwise() const; Bool_tIsConvex() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsFinished() const; virtual Bool_tTObject::IsFolder() const; Bool_tIsIllegalCheck() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPolygon.html:3792,Hash,Hash,3792,root/html602/TGeoPolygon.html,https://root.cern,https://root.cern/root/html602/TGeoPolygon.html,2,['Hash'],['Hash']
Security,"rrent element is known. void TVectorT<Element> Draw(Option_t* option = """"); Draw this vector; The histogram is named ""TVectorT"" by default and no title. void TVectorT<Element> Print(Option_t* option = """") const; Print the vector as a list of elements. void TVectorT<Element> Streamer(TBuffer& b); Stream an object of class TVectorT. template<class Element> inline TVectorT<Element> &TVectorT<Element> Use(Int_t n, double* data); { return Use(0,n-1,data); }. template<class Element> inline const TVectorT<Element> &TVectorT<Element> Use(Int_t n, const double* data) const; { return Use(0,n-1,data); }. template<class Element> inline TVectorT<Element> &TVectorT<Element> Use(TVectorT<double>& v). template<class Element> inline const TVectorT<Element> &TVectorT<Element> Use(const TVectorT<double>& v) const. template<class Element> inline TVectorT<Element> TVectorT<Element> GetSub(Int_t row_lwb, Int_t row_upb, Option_t* option = ""S"") const. template<class Element> inline const Element &TVectorT<Element> operator()(Int_t ind) const; Access a vector element. template<class Element> inline Element &TVectorT<Element> operator()(Int_t ind); Access a vector element. Int_t GetLwb() const; { return fRowLwb; }. Int_t GetUpb() const; { return fNrows+fRowLwb-1; }. Int_t GetNrows() const; { return fNrows; }. Int_t GetNoElements() const; { return fNrows; }. Element * GetMatrixArray(); { return fElements; }. const Element * GetMatrixArray() const; { return fElements; }. void Invalidate(); { SetBit(kStatus); }. void MakeValid(); { ResetBit(kStatus); }. Bool_t IsValid() const; { return !TestBit(kStatus); }. Bool_t IsOwner() const; { return fIsOwner; }. void SetElements(const double* elements). TVectorT<Element> & Shift(Int_t row_shift); { fRowLwb += row_shift; return *this; }. TVectorT<Element> & ResizeTo(Int_t lwb, Int_t upb). TVectorT<Element> & ResizeTo(Int_t n); { return ResizeTo(0,n-1); }. TVectorT<Element> & Use(Int_t lwb, Int_t upb, double* data). const Element & operator[](Int_t index) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVectorT_double_.html:17386,Access,Access,17386,root/html528/TVectorT_double_.html,https://root.cern,https://root.cern/root/html528/TVectorT_double_.html,3,['Access'],['Access']
Security,"rrently CivetWeb does not nead read+write access. */; 11752 if (!mg_fopen(conn, path, MG_FOPEN_MODE_WRITE, &file); 11753 || file.access.fp == NULL) {; 11754 (void)mg_fclose(&file.access);; 11755 mg_send_http_error(conn,; 11756 500,; 11757 ""Error: Can not create file\nfopen(%s): %s"",; 11758 path,; 11759 strerror(ERRNO));; 11760 return;; 11761 }; 11762 ; 11763 fclose_on_exec(&file.access, conn);; 11764 range = mg_get_header(conn, ""Content-Range"");; 11765 r1 = r2 = 0;; 11766 if ((range != NULL) && parse_range_header(range, &r1, &r2) > 0) {; 11767 conn->status_code = 206; /* Partial content */; 11768 fseeko(file.access.fp, r1, SEEK_SET);; 11769 }; 11770 ; 11771 if (!forward_body_data(conn, file.access.fp, INVALID_SOCKET, NULL)) {; 11772 /* forward_body_data failed.; 11773 * The error code has already been sent to the client,; 11774 * and conn->status_code is already set. */; 11775 (void)mg_fclose(&file.access);; 11776 return;; 11777 }; 11778 ; 11779 if (mg_fclose(&file.access) != 0) {; 11780 /* fclose failed. This might have different reasons, but a likely; 11781 * one is ""no space on disk"", http 507. */; 11782 conn->status_code = 507;; 11783 }; 11784 ; 11785 /* Create response (status_code has been set before) */; 11786 mg_response_header_start(conn, conn->status_code);; 11787 send_no_cache_header(conn);; 11788 send_additional_header(conn);; 11789 mg_response_header_add(conn, ""Content-Length"", ""0"", -1);; 11790 ; 11791 /* Send all headers - there is no body */; 11792 mg_response_header_send(conn);; 11793}; 11794 ; 11795 ; 11796static void; 11797delete_file(struct mg_connection *conn, const char *path); 11798{; 11799 struct de de;; 11800 memset(&de.file, 0, sizeof(de.file));; 11801 if (!mg_stat(conn, path, &de.file)) {; 11802 /* mg_stat returns 0 if the file does not exist */; 11803 mg_send_http_error(conn,; 11804 404,; 11805 ""Error: Cannot delete file\nFile %s not found"",; 11806 path);; 11807 return;; 11808 }; 11809 ; 11810 if (de.file.is_directory) {; 11811 if (remove_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:340852,access,access,340852,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['access'],['access']
Security,"rrently CivetWeb does not nead read+write access. */; 11753 if (!mg_fopen(conn, path, MG_FOPEN_MODE_WRITE, &file); 11754 || file.access.fp == NULL) {; 11755 (void)mg_fclose(&file.access);; 11756 mg_send_http_error(conn,; 11757 500,; 11758 ""Error: Can not create file\nfopen(%s): %s"",; 11759 path,; 11760 strerror(ERRNO));; 11761 return;; 11762 }; 11763 ; 11764 fclose_on_exec(&file.access, conn);; 11765 range = mg_get_header(conn, ""Content-Range"");; 11766 r1 = r2 = 0;; 11767 if ((range != NULL) && parse_range_header(range, &r1, &r2) > 0) {; 11768 conn->status_code = 206; /* Partial content */; 11769 fseeko(file.access.fp, r1, SEEK_SET);; 11770 }; 11771 ; 11772 if (!forward_body_data(conn, file.access.fp, INVALID_SOCKET, NULL)) {; 11773 /* forward_body_data failed.; 11774 * The error code has already been sent to the client,; 11775 * and conn->status_code is already set. */; 11776 (void)mg_fclose(&file.access);; 11777 return;; 11778 }; 11779 ; 11780 if (mg_fclose(&file.access) != 0) {; 11781 /* fclose failed. This might have different reasons, but a likely; 11782 * one is ""no space on disk"", http 507. */; 11783 conn->status_code = 507;; 11784 }; 11785 ; 11786 /* Create response (status_code has been set before) */; 11787 mg_response_header_start(conn, conn->status_code);; 11788 send_no_cache_header(conn);; 11789 send_additional_header(conn);; 11790 mg_response_header_add(conn, ""Content-Length"", ""0"", -1);; 11791 ; 11792 /* Send all headers - there is no body */; 11793 mg_response_header_send(conn);; 11794}; 11795 ; 11796 ; 11797static void; 11798delete_file(struct mg_connection *conn, const char *path); 11799{; 11800 struct de de;; 11801 memset(&de.file, 0, sizeof(de.file));; 11802 if (!mg_stat(conn, path, &de.file)) {; 11803 /* mg_stat returns 0 if the file does not exist */; 11804 mg_send_http_error(conn,; 11805 404,; 11806 ""Error: Cannot delete file\nFile %s not found"",; 11807 path);; 11808 return;; 11809 }; 11810 ; 11811 if (de.file.is_directory) {; 11812 if (remove_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:340885,access,access,340885,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['access'],['access']
Security,"rride;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEditHist.html:7455,access,accessible,7455,doc/master/classTGTextEditHist.html,https://root.cern,https://root.cern/doc/master/classTGTextEditHist.html,1,['access'],['accessible']
Security,"rride;  Make a clone of an object using the Streamer facility. ;  ; void Delete (Option_t *o=nullptr) override;  Remove all elements in collection and delete all elements NB: Collection does not own elements, this function should be used judiciously by caller. ;  ; bool empty () const;  ; RooLinkedListIterImpl end () const;  ; TObject * find (const char *name) const;  Return pointer to object with given name in collection. ;  ; RooAbsArg * findArg (const RooAbsArg *) const;  Return pointer to object with given name in collection. ;  ; TObject * FindObject (const char *name) const override;  Return pointer to object with given name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object in list. ;  ; TObject * First () const;  ; RooFIter fwdIterator () const;  Create a one-time-use forward iterator for this list. ;  ; Int_t getHashTableSize () const;  ; const char * GetName () const override;  Returns name of object. ;  ; Int_t GetSize () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Int_t IndexOf (const char *name) const;  Return position of given object in list. ;  ; Int_t IndexOf (const TObject *arg) const;  Return position of given object in list. ;  ; TClass * IsA () const override;  ; RooLinkedListIter iterator (bool forward=true) const;  Create an iterator for this list. ;  ; TIterator * MakeIterator (bool forward=true) const;  Create a TIterator for this list. ;  ; RooLinkedList & operator= (const RooLinkedList &other);  Assignment operator, copy contents from 'other'. ;  ; void Print (const char *opt) const override;  Print contents of list, defers to Print() function of contained objects. ;  ; RooLinkedListIterImpl rbegin () const;  ; void RecursiveRemove (TObject *obj) override;  If one of the TObject we have a referenced to is deleted, remove the reference. ;  ; virtual bool Remove (TObject *arg);  Remove object from collection. ;  ; RooLinkedListIterImpl rend () const;  ; bool Replace (const TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinkedList.html:2262,Hash,Hash,2262,doc/master/classRooLinkedList.html,https://root.cern,https://root.cern/doc/master/classRooLinkedList.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"rride;  Returns name of object. ;  ; EHandleDSType GetType () const;  ; TClass * IsA () const override;  ; Bool_t IsCheckCache () const;  ; Bool_t IsCopyFiles () const;  ; Bool_t IsReleaseCache () const;  ; Bool_t IsRemoveFiles () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPBHandleDSType.html:2254,Hash,Hash,2254,doc/master/classTPBHandleDSType.html,https://root.cern,https://root.cern/doc/master/classTPBHandleDSType.html,2,['Hash'],['Hash']
Security,"rride;  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics obje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystemDirectory.html:4568,Hash,Hash,4568,doc/master/classTSystemDirectory.html,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html,4,"['Hash', 'hash']","['Hash', 'hash']"
Security,"rrideDefault print for collections, calls Print(option, 1).Definition TCollection.cxx:476; TCollection::IsEmptyvirtual Bool_t IsEmpty() constDefinition TCollection.h:188; TCollection::GetSizevirtual Int_t GetSize() constReturn the capacity of the collection, i.e.Definition TCollection.h:184; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TDataType::GetTypeInt_t GetType() constDefinition TDataType.h:68; TDataType::GetFullTypeNameconst char * GetFullTypeName() constGet full type description of typedef, e,g.: ""class TDirectory*"".Definition TDataType.cxx:175; TFunctionGlobal functions class (global functions are obtained from CINT).Definition TFunction.h:30; TFunction::GetNargsOptInt_t GetNargsOpt() constNumber of function optional (default) arguments.Definition TFunction.cxx:184; TFunction::GetNargsInt_t GetNargs() constNumber of function arguments.Definition TFunction.cxx:174; THashListTHashList implements a hybrid collection class consisting of a hash table and a list to store TObject...Definition THashList.h:34; TIterDefinition TCollection.h:235; TListA doubly linked list.Definition TList.h:38; TList::Clearvoid Clear(Option_t *option="""") overrideRemove all objects from the list.Definition TList.cxx:400; TList::FindObjectTObject * FindObject(const char *name) const overrideFind an object in this list using its name.Definition TList.cxx:576; TList::Addvoid Add(TObject *obj) overrideDefinition TList.h:83; TList::RemoveTObject * Remove(TObject *obj) overrideRemove object from the list.Definition TList.cxx:820; TList::AddLastvoid AddLast(TObject *obj) overrideAdd object at the end of the list.Definition TList.cxx:150; TList::FirstLinkvirtual TObjLink * FirstLink() constDefinition TList.h:104; TList::Deletevoid Delete(Option_t *option="""") overrideRemove all objects from the list AND delete all heap based objects.Definition TList.cxx:468; TList::AddFirstvoid AddFirst(TObject *obj) overrideAdd object at the beginn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TQObject_8cxx_source.html:40458,hash,hash,40458,doc/master/TQObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TQObject_8cxx_source.html,1,['hash'],['hash']
Security,"rrideTGraphMultiErrorsvirtual; GetEYlow(Int_t e)TGraphMultiErrorsvirtual; GetEYlowd() constTGraphinlinevirtual; GetFillColor(Int_t e) constTGraphMultiErrorsvirtual; GetFillColor() constTGraphMultiErrorsinlinevirtual; GetFillStyle(Int_t e) constTGraphMultiErrorsvirtual; GetFillStyle() constTGraphMultiErrorsinlinevirtual; GetFunction(const char *name) constTGraph; GetHistogram() constTGraphvirtual; GetIconName() constTObjectvirtual; GetLineColor(Int_t e) constTGraphMultiErrorsvirtual; GetLineColor() constTGraphMultiErrorsinlinevirtual; GetLineStyle(Int_t e) constTGraphMultiErrorsvirtual; GetLineStyle() constTGraphMultiErrorsinlinevirtual; GetLineWidth(Int_t e) constTGraphMultiErrorsvirtual; GetLineWidth() constTGraphMultiErrorsinlinevirtual; GetListOfFunctions() constTGraphinline; GetMarkerColor() constTAttMarkerinlinevirtual; GetMarkerLineWidth(Style_t style)TAttMarkerstatic; GetMarkerSize() constTAttMarkerinlinevirtual; GetMarkerStyle() constTAttMarkerinlinevirtual; GetMarkerStyleBase(Style_t style)TAttMarkerstatic; GetMaximum() constTGraphinline; GetMaxSize() constTGraphinline; GetMean(Int_t axis=1) constTGraphvirtual; GetMinimum() constTGraphinline; GetN() constTGraphinline; GetName() const overrideTNamedinlinevirtual; GetNYErrors() constTGraphMultiErrorsinline; GetObjectInfo(Int_t px, Int_t py) const overrideTGraphvirtual; GetObjectStat()TObjectstatic; GetOption() constTObjectinlinevirtual; GetPoint(Int_t i, Double_t &x, Double_t &y) constTGraphvirtual; GetPointX(Int_t i) constTGraphvirtual; GetPointY(Int_t i) constTGraphvirtual; GetRMS(Int_t axis=1) constTGraphvirtual; GetSumErrorsMode() constTGraphMultiErrorsinline; GetTitle() const overrideTNamedinlinevirtual; GetUniqueID() constTObjectvirtual; GetX() constTGraphinline; GetXaxis() constTGraph; GetY() constTGraphinline; GetYaxis() constTGraph; HandleTimer(TTimer *timer)TObjectvirtual; Hash() const overrideTNamedinlinevirtual; HasInconsistentHash() constTObjectinline; Info(const char *method, const char *msgfmt,.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors-members.html:8503,Hash,Hash,8503,doc/master/classTGraphMultiErrors-members.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors-members.html,1,['Hash'],['Hash']
Security,"rridevirtual . Implements TVirtualViewer3D.; Definition at line 86 of file TGLScenePad.h. ◆ SetPad(). void TGLScenePad::SetPad ; (; TVirtualPad * ; p). inline . Definition at line 63 of file TGLScenePad.h. ◆ SetSmartRefresh(). void TGLScenePad::SetSmartRefresh ; (; Bool_t ; smart_ref). inline . Definition at line 73 of file TGLScenePad.h. ◆ Streamer(). void TGLScenePad::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGLScenePad::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 98 of file TGLScenePad.h. ◆ SubPadPaint(). void TGLScenePad::SubPadPaint ; (; TVirtualPad * ; pad). Iterate over pad-primitives and import them. ; Definition at line 162 of file TGLScenePad.cxx. ◆ ValidateObjectBuffer(). Int_t TGLScenePad::ValidateObjectBuffer ; (; const TBuffer3D & ; buffer, . Bool_t ; includeRaw . ); const. protected . Validate if the passed 'buffer' contains all sections we require to add object. ; Returns Int_t combination of TBuffer::ESection flags still required - or TBuffer3D::kNone if buffer is valid. If 'includeRaw' is kTRUE check for kRaw/kRawSizes - skip otherwise. See base/src/TVirtualViewer3D.cxx for description of viewer architecture ; Definition at line 543 of file TGLScenePad.cxx. Member Data Documentation. ◆ fAcceptedPhysicals. Int_t TGLScenePad::fAcceptedPhysicals. protected . last physical ID that was processed in AddObject() ; Definition at line 39 of file TGLScenePad.h. ◆ fComposite. TGLFaceSet* TGLScenePad::fComposite. mutableprotected . Definition at line 49 of file TGLScenePad.h. ◆ fCSLevel. UInt_t TGLScenePad::fCSLevel. protected . Paritally created composite. ; Definition at line 50 of file TGLScenePad.h. ◆ fCSTokens. std::vector<CSPart_t> TGLScenePad::fCSTokens. protected . Definition at line 51 of file TGLScenePad.h. ◆ fInternalPIDs. Bool_t TGLScenePad::fInternalPIDs. protected . Definition at line 36 of file TGL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLScenePad.html:33604,Validat,Validate,33604,doc/master/classTGLScenePad.html,https://root.cern,https://root.cern/doc/master/classTGLScenePad.html,1,['Validat'],['Validate']
Security,"rror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Long64_tGetCurrentEntry() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tGetEntries(Bool_t force) const; TTreeReader::EEntryStatusGetEntryStatus() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsChain() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Bool_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeReader.html:7553,Hash,Hash,7553,root/html602/TTreeReader.html,https://root.cern,https://root.cern/root/html602/TTreeReader.html,2,['Hash'],['Hash']
Security,"rror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Float_tGetFrontPower() const; virtual const char*TObject::GetIconName() const; UInt_tGetLightState(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_tGetSidePower() const; Float_tGetSpecularPower() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tGetUseSpecular() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLLightSet.html:2334,Hash,Hash,2334,root/html528/TGLLightSet.html,https://root.cern,https://root.cern/root/html528/TGLLightSet.html,1,['Hash'],['Hash']
Security,"rror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Float_tGetFrontPower() const; virtual const char*TObject::GetIconName() const; UInt_tGetLightState(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_tGetSidePower() const; Float_tGetSpecularPower() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tGetUseSpecular() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGLLightSet.html:2334,Hash,Hash,2334,root/html530/TGLLightSet.html,https://root.cern,https://root.cern/root/html530/TGLLightSet.html,3,['Hash'],['Hash']
Security,"rror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Float_tGetFrontPower() const; virtual const char*TObject::GetIconName() const; UInt_tGetLightState(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_tGetSidePower() const; Float_tGetSpecularPower() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tGetUseSpecular() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLLightSet.html:2319,Hash,Hash,2319,root/html602/TGLLightSet.html,https://root.cern,https://root.cern/root/html602/TGLLightSet.html,2,['Hash'],['Hash']
Security,"rror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TStringGetJobID(); virtual TGridJobStatus*GetJobStatus() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tGetOutputSandbox(const char* localpath, Option_t* opt = 0); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGridJob.html:2506,Hash,Hash,2506,root/html528/TGridJob.html,https://root.cern,https://root.cern/root/html528/TGridJob.html,1,['Hash'],['Hash']
Security,"rror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TStringGetJobID(); virtual TGridJobStatus*GetJobStatus() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tGetOutputSandbox(const char* localpath, Option_t* opt = 0); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGridJob.html:2506,Hash,Hash,2506,root/html530/TGridJob.html,https://root.cern,https://root.cern/root/html530/TGridJob.html,3,['Hash'],['Hash']
Security,"rror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TStringGetJobID(); virtual TGridJobStatus*GetJobStatus() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tGetOutputSandbox(const char* localpath, Option_t* opt = 0); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGridJob.html:2506,Hash,Hash,2506,root/html602/TGridJob.html,https://root.cern,https://root.cern/root/html602/TGridJob.html,2,['Hash'],['Hash']
Security,"rror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TClass*GetResClass() const; TDataMember*GetResMember() const; Int_tGetResNumChilds() const; void*GetResPtr() const; Int_tGetResRestrict() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsXml() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRootSnifferStore.html:2573,Hash,Hash,2573,root/html534/TRootSnifferStore.html,https://root.cern,https://root.cern/root/html534/TRootSnifferStore.html,1,['Hash'],['Hash']
Security,"rror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TClass*GetResClass() const; TDataMember*GetResMember() const; Int_tGetResNumChilds() const; void*GetResPtr() const; Int_tGetResRestrict() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsXml() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TRootSnifferStore.html:2507,Hash,Hash,2507,root/html604/TRootSnifferStore.html,https://root.cern,https://root.cern/root/html604/TRootSnifferStore.html,1,['Hash'],['Hash']
Security,"rror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidForceValue(Double_t value); Double_tGetActivationValue() const; Double_tGetDEDw() const; Double_tGetDelta() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValue() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitSynapseDeltas(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsInputNeuron() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOutputNeuron() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); Int_tNumPostLinks() const; Int_tNumPreLinks() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* pt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__TNeuron.html:2525,Hash,Hash,2525,root/html528/TMVA__TNeuron.html,https://root.cern,https://root.cern/root/html528/TMVA__TNeuron.html,1,['Hash'],['Hash']
Security,"rror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidForceValue(Double_t value); Double_tGetActivationValue() const; Double_tGetDEDw() const; Double_tGetDelta() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValue() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitSynapseDeltas(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsInputNeuron() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOutputNeuron() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); Int_tNumPostLinks() const; Int_tNumPreLinks() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__TNeuron.html:2522,Hash,Hash,2522,root/html530/TMVA__TNeuron.html,https://root.cern,https://root.cern/root/html530/TMVA__TNeuron.html,3,['Hash'],['Hash']
Security,"rror = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidForceValue(Double_t value); Double_tGetActivationValue() const; Double_tGetDEDw() const; Double_tGetDelta() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValue() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitSynapseDeltas(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsInputNeuron() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOutputNeuron() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); Int_tNumPostLinks() const; Int_tNumPreLinks() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__TNeuron.html:3198,Hash,Hash,3198,root/html602/TMVA__TNeuron.html,https://root.cern,https://root.cern/root/html602/TMVA__TNeuron.html,2,['Hash'],['Hash']
Security,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  THashTable (const THashTable &)=delete;  ; void AddImpl (Int_t slot, TObject *object);  Helper function doing the actual add to the table give a slot and object. ;  ; Int_t GetCheckedHashValue (TObject *obj) const;  ; Int_t GetHashValue (const char *str) const;  ; Int_t GetHashValue (const TObject *obj) const;  ; Int_t GetHa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHashTable.html:12956,access,accessible,12956,doc/master/classTHashTable.html,https://root.cern,https://root.cern/doc/master/classTHashTable.html,1,['access'],['accessible']
Security,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kIsOwnerValue = (1ULL << ( 15 )); };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void PrintCollectionEntry (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMap.html:14585,access,accessible,14585,doc/master/classTMap.html,https://root.cern,https://root.cern/doc/master/classTMap.html,1,['access'],['accessible']
Security,"rror: Class "" << clName << "" has been selected but ""; 3466 << ""currently the support for its I/O is not yet available. Note that ""; 3467 << clName << "", even if not selected, will be available for ""; 3468 << ""interpreted code.\n"";; 3469 nerrors++;; 3470 }; 3471 if (!NeedsSelection(clName)){; 3472 std::cerr << ""Error: It is not necessary to explicitly select class ""; 3473 << clName << "". I/O is supported for it transparently.\n"";; 3474 nerrors++;; 3475 }; 3476 }; 3477 return nerrors;; 3478}; 3479 ; 3480////////////////////////////////////////////////////////////////////////////////; 3481 ; 3482class TRootClingCallbacks : public cling::InterpreterCallbacks {; 3483private:; 3484 std::list<std::string>& fFilesIncludedByLinkdef;; 3485 bool isLocked = false;; 3486public:; 3487 TRootClingCallbacks(cling::Interpreter* interp, std::list<std::string>& filesIncludedByLinkdef):; 3488 InterpreterCallbacks(interp),; 3489 fFilesIncludedByLinkdef(filesIncludedByLinkdef){};; 3490 ; 3491 ~TRootClingCallbacks(){};; 3492 ; 3493 void InclusionDirective(clang::SourceLocation /*HashLoc*/, const clang::Token & /*IncludeTok*/,; 3494 llvm::StringRef FileName, bool IsAngled, clang::CharSourceRange /*FilenameRange*/,; 3495 clang::OptionalFileEntryRef /*File*/, llvm::StringRef /*SearchPath*/,; 3496 llvm::StringRef /*RelativePath*/, const clang::Module * /*Imported*/,; 3497 clang::SrcMgr::CharacteristicKind /*FileType*/) override; 3498 {; 3499 if (isLocked) return;; 3500 if (IsAngled) return;; 3501 auto& PP = m_Interpreter->getCI()->getPreprocessor();; 3502 auto curLexer = PP.getCurrentFileLexer();; 3503 if (!curLexer) return;; 3504 auto fileEntry = curLexer->getFileEntry();; 3505 if (!fileEntry) return;; 3506 auto thisFileName = fileEntry->getName();; 3507 auto fileNameAsString = FileName.str();; 3508 auto isThisLinkdef = ROOT::TMetaUtils::IsLinkdefFile(thisFileName.data());; 3509 if (isThisLinkdef) {; 3510 auto isTheIncludedLinkdef = ROOT::TMetaUtils::IsLinkdefFile(fileNameAsString.c_str());; 3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:138785,Hash,HashLoc,138785,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['Hash'],['HashLoc']
Security,"rrorPruning =0; , kCostComplexityPruning; , kNoPruning; };  ; typedef std::vector< const TMVA::Event * > EventConstList;  ; typedef std::vector< TMVA::Event * > EventList;  . Public Member Functions;  DecisionTree (const DecisionTree &d);  copy constructor that creates a true copy, i.e. ;  ;  DecisionTree (SeparationBase *sepType, Float_t minSize, Int_t nCuts, DataSetInfo *=nullptr, UInt_t cls=0, Bool_t randomisedTree=kFALSE, Int_t useNvars=0, Bool_t usePoissonNvars=kFALSE, UInt_t nMaxDepth=9999999, Int_t iSeed=fgRandomSeed, Float_t purityLimit=0.5, Int_t treeID=0);  constructor specifying the separation type, the min number of events in a no that is still subjected to further splitting, the number of bins in the grid used in applying the cut for the node splitting. ;  ;  DecisionTree (void);  default constructor using the GiniIndex as separation criterion, no restrictions on minium number of events in a leave note or the separation gain in the node splitting ;  ; virtual ~DecisionTree (void);  destructor ;  ; void ApplyValidationSample (const EventConstList *validationSample) const;  run the validation sample through the (pruned) tree and fill in the nodes the variables NSValidation and NBValidadtion (i.e. ;  ; UInt_t BuildTree (const EventConstList &eventSample, DecisionTreeNode *node=nullptr);  building the decision tree by recursively calling the splitting of one (root-) node into two daughter nodes (returns the number of nodes) ;  ; Double_t CheckEvent (const TMVA::Event *, Bool_t UseYesNoLeaf=kFALSE) const;  the event e is put into the decision tree (starting at the root node) and the output is NodeType (signal) or (background) of the final node (basket) in which the given events ends up. ;  ; void CheckEventWithPrunedTree (const TMVA::Event *) const;  pass a single validation event through a pruned decision tree on the way down the tree, fill in all the ""intermediate"" information that would normally be there from training. ;  ; virtual const char * ClassName ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:2938,validat,validationSample,2938,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,2,['validat'],"['validation', 'validationSample']"
Security,"rrorStrategy == ""SUMOFSQUARES"") {; 531 fNet.SetLossFunction(ELossFunction::kMeanSquaredError);; 532 }; 533 if (fErrorStrategy == ""CROSSENTROPY"") {; 534 fNet.SetLossFunction(ELossFunction::kCrossEntropy);; 535 }; 536 if (fErrorStrategy == ""MUTUALEXCLUSIVE"") {; 537 fNet.SetLossFunction(ELossFunction::kSoftmaxCrossEntropy);; 538 }; 539 fOutputFunction = EOutputFunction::kSoftmax;; 540 }; 541 ; 542 //; 543 // Initialization; 544 //; 545 ; 546 if (fWeightInitializationString == ""XAVIER"") {; 547 fWeightInitialization = DNN::EInitialization::kGauss;; 548 }; 549 else if (fWeightInitializationString == ""XAVIERUNIFORM"") {; 550 fWeightInitialization = DNN::EInitialization::kUniform;; 551 }; 552 else {; 553 fWeightInitialization = DNN::EInitialization::kGauss;; 554 }; 555 ; 556 //; 557 // Training settings.; 558 //; 559 ; 560 // Force validation of the ValidationSize option; 561 GetNumValidationSamples();; 562 ; 563 KeyValueVector_t strategyKeyValues = ParseKeyValueString(fTrainingStrategyString,; 564 TString (""|""),; 565 TString ("",""));; 566 ; 567 std::cout << ""Parsed Training DNN string "" << fTrainingStrategyString << std::endl;; 568 std::cout << ""STring has size "" << strategyKeyValues.size() << std::endl;; 569 for (auto& block : strategyKeyValues) {; 570 TTrainingSettings settings;; 571 ; 572 settings.convergenceSteps = fetchValue(block, ""ConvergenceSteps"", 100);; 573 settings.batchSize = fetchValue(block, ""BatchSize"", 30);; 574 settings.testInterval = fetchValue(block, ""TestRepetitions"", 7);; 575 settings.weightDecay = fetchValue(block, ""WeightDecay"", 0.0);; 576 settings.learningRate = fetchValue(block, ""LearningRate"", 1e-5);; 577 settings.momentum = fetchValue(block, ""Momentum"", 0.3);; 578 settings.dropoutProbabilities = fetchValue(block, ""DropConfig"",; 579 std::vector<Double_t>());; 580 ; 581 TString regularization = fetchValue(block, ""Regularization"",; 582 TString (""NONE""));; 583 if (regularization == ""L1"") {; 584 settings.regularization = DNN::ERegularization::kL1;; 585 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDNN_8cxx_source.html:19068,validat,validation,19068,doc/master/MethodDNN_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDNN_8cxx_source.html,2,"['Validat', 'validat']","['ValidationSize', 'validation']"
Security,"rrors; Any serious inconsistency results in an error. ; Definition at line 27 of file TFractionFitter.h. Public Member Functions;  TFractionFitter ();  TFractionFitter default constructor. ;  ;  TFractionFitter (TH1 *data, TObjArray *MCs, Option_t *option="""");  TFractionFitter constructor. ;  ;  ~TFractionFitter () override;  TFractionFitter default destructor. ;  ; void Constrain (Int_t parm, Double_t low, Double_t high);  Constrain the values of parameter number <parm> (the parameter numbering follows that of the input template vector). ;  ; void ErrorAnalysis (Double_t UP);  Set UP to the given value (see class TMinuit), and perform a MINOS minimisation. ;  ; Double_t EvaluateFCN (const Double_t *par);  ; void ExcludeBin (Int_t bin);  Exclude the given bin from the fit. ;  ; TFitResultPtr Fit ();  Perform the fit with the default UP value. ;  ; Double_t GetChisquare () const;  Return the likelihood ratio Chi-squared (chi2) for the fit. ;  ; ROOT::Fit::Fitter * GetFitter () const;  Give direct access to the underlying fitter class. ;  ; TH1 * GetMCPrediction (Int_t parm) const;  Return the adjusted MC template (Aji) for template (parm). ;  ; Int_t GetNDF () const;  return the number of degrees of freedom in the fit the fNDF parameter has been previously computed during a fit. ;  ; TH1 * GetPlot ();  Return the ""template prediction"" corresponding to the fit result (this is not the same as the weighted sum of template distributions, as template statistical uncertainties are taken into account). ;  ; Double_t GetProb () const;  return the fit probability ;  ; void GetResult (Int_t parm, Double_t &value, Double_t &error) const;  Obtain the fit result for parameter <parm> (the parameter numbering follows that of the input template vector). ;  ; void IncludeBin (Int_t bin);  Include the given bin in the fit, if it was excluded before using ExcludeBin(). ;  ; TClass * IsA () const override;  ; void ReleaseRangeX ();  Release restrictions on the X range of the histogram to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFractionFitter.html:7407,access,access,7407,doc/master/classTFractionFitter.html,https://root.cern,https://root.cern/doc/master/classTFractionFitter.html,1,['access'],['access']
Security,"rs --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i) const; read-only access of vector elements. Index starts from 0. const T& operator()(unsigned int i) const; read-only access of vector elements. Index starts from 0. const T& At(unsigned int i) const; read-only access of vector elements with check on index. Index starts from 0. T& operator[](unsigned int i); read/write access of vector elements. Index starts from 0. T& operator()(unsigned int i); read/write access of vector elements. Index starts from 0. T& At(unsigned int i); read/write access of vector elements with check on index. Index starts from 0. SVector<T,D>& operator+=(const T& rhs); self addition with a scalar. SVector<T,D>& operator-=(const T& rhs); self subtraction with a scalar. SVector<T,D>& operator*=(const Double32_t& rhs); self multiplication with a scalar. SVector<T,D>& operator/=(const Double32_t& rhs); self division with a scalar. SVector<T,D>& operator+=(const SVector<T,D>& rhs); self addition with another vector. SVector<T,D>& operator-=(const SVector<T,D>& rhs); self subtraction with another vector. SVector<T,D>& Unit(); @name --- Expert functions --- ; transform vector into a vector of length 1. bool IsInUse(const Double32_t* p) const. Function to check if a vector is sharing same memory location of the passed pointer; This function is used by the expression templates to avoid the alias problem during; expression evaluation. When the vector is in use, for example in operations; like V = M * V, where M is a mtrix, a temporary object storing the interm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SVector_Double32_t_3_.html:6538,access,access,6538,root/html534/ROOT__Math__SVector_Double32_t_3_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SVector_Double32_t_3_.html,4,['access'],['access']
Security,"rs --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i) const; read-only access of vector elements. Index starts from 0. const T& operator()(unsigned int i) const; read-only access of vector elements. Index starts from 0. const T& At(unsigned int i) const; read-only access of vector elements with check on index. Index starts from 0. T& operator[](unsigned int i); read/write access of vector elements. Index starts from 0. T& operator()(unsigned int i); read/write access of vector elements. Index starts from 0. T& At(unsigned int i); read/write access of vector elements with check on index. Index starts from 0. SVector<T,D>& operator+=(const T& rhs); self addition with a scalar. SVector<T,D>& operator-=(const T& rhs); self subtraction with a scalar. SVector<T,D>& operator*=(const double& rhs); self multiplication with a scalar. SVector<T,D>& operator/=(const double& rhs); self division with a scalar. SVector<T,D>& operator+=(const SVector<T,D>& rhs); self addition with another vector. SVector<T,D>& operator-=(const SVector<T,D>& rhs); self subtraction with another vector. SVector<T,D>& Unit(); @name --- Expert functions --- ; transform vector into a vector of length 1. bool IsInUse(const double* p) const. Function to check if a vector is sharing same memory location of the passed pointer; This function is used by the expression templates to avoid the alias problem during; expression evaluation. When the vector is in use, for example in operations; like V = M * V, where M is a mtrix, a temporary object storing the intermediate resul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SVector_double_2_.html:6014,access,access,6014,root/html534/ROOT__Math__SVector_double_2_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SVector_double_2_.html,26,['access'],['access']
Security,"rs --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i) const; read-only access of vector elements. Index starts from 0. const T& operator()(unsigned int i) const; read-only access of vector elements. Index starts from 0. const T& At(unsigned int i) const; read-only access of vector elements with check on index. Index starts from 0. T& operator[](unsigned int i); read/write access of vector elements. Index starts from 0. T& operator()(unsigned int i); read/write access of vector elements. Index starts from 0. T& At(unsigned int i); read/write access of vector elements with check on index. Index starts from 0. SVector<T,D>& operator+=(const T& rhs); self addition with a scalar. SVector<T,D>& operator-=(const T& rhs); self subtraction with a scalar. SVector<T,D>& operator*=(const float& rhs); self multiplication with a scalar. SVector<T,D>& operator/=(const float& rhs); self division with a scalar. SVector<T,D>& operator+=(const SVector<T,D>& rhs); self addition with another vector. SVector<T,D>& operator-=(const SVector<T,D>& rhs); self subtraction with another vector. SVector<T,D>& Unit(); @name --- Expert functions --- ; transform vector into a vector of length 1. bool IsInUse(const float* p) const. Function to check if a vector is sharing same memory location of the passed pointer; This function is used by the expression templates to avoid the alias problem during; expression evaluation. When the vector is in use, for example in operations; like V = M * V, where M is a mtrix, a temporary object storing the intermediate result i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SVector_float_2_.html:5883,access,access,5883,root/html534/ROOT__Math__SVector_float_2_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SVector_float_2_.html,18,['access'],['access']
Security,"rs ;  CTVirtualGeoPainterAbstract class for geometry painters ;  CTVirtualGeoTrackBase class for user-defined tracks attached to a geometry ;  CTVirtualGLManip;  CTVirtualGLPainter;  CTVirtualGraphPainterAbstract interface to a histogram painter ;  CTVirtualHistPainterAbstract interface to a histogram painter ;  CTVirtualIndexAbstract interface for Tree Index ;  CTVirtualIsAProxy;  CTVirtualMagFieldAbstract class for magnetic field ;  CTVirtualMCAbstract Monte Carlo interface ;  CTVirtualMCApplicationInterface to a user Monte Carlo application ;  CTVirtualMCDecayerAbstract base class for particle decays ;  CTVirtualMCGeometryInterface to Monte Carlo geometry construction ;  CTVirtualMCSensitiveDetectorInterface to a user defined sensitive detector ;  CTVirtualMCStackInterface to a user defined particles stack ;  CTVirtualMonitoringReader;  CTVirtualMonitoringWriter;  CTVirtualMutexThis class implements a mutex interface ;  CTVirtualObjectWrapper around an object and giving indirect access to its content even if the object is not of a class in the Cint/Reflex dictionary ;  ►CTVirtualPacketizerThe packetizer is a load balancing object created for each query ;  CTVirtualSlaveStat;  CTVirtualPadTVirtualPad is an abstract base class for the Pad and Canvas classes ;  CTVirtualPadEditorAbstract base class used by ROOT graphics editor ;  CTVirtualPadPainterTo make it possible to use GL for 2D graphic in a TPad/TCanvas ;  CTVirtualPerfStatsProvides the interface for the PROOF internal performance measurement and event tracing ;  CTVirtualProofPlayerAbstract interface for the PROOF player ;  CTVirtualPSTVirtualPS is an abstract interface to Postscript, PDF, SVG ;  CTVirtualQConnectionMediates the link between the signal and the slot ;  CTVirtualRefProxy;  CTVirtualStreamerInfoAbstract Interface class describing Streamer information for one class ;  CTVirtualTableInterface;  CTVirtualTreePlayerAbstract base class defining the interface for the plugins that implement Draw, Scan,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/annotated.html:219203,access,access,219203,doc/v614/annotated.html,https://root.cern,https://root.cern/doc/v614/annotated.html,2,['access'],['access']
Security,"rs = NULL) const; virtual RooDataSet*GetAsDataSet(RooCmdArg arg1, RooCmdArg arg2 = RooCmdArg(), RooCmdArg arg3 = RooCmdArg(), RooCmdArg arg4 = RooCmdArg(), RooCmdArg arg5 = RooCmdArg(), RooCmdArg arg6 = RooCmdArg(), RooCmdArg arg7 = RooCmdArg(), RooCmdArg arg8 = RooCmdArg()) const; virtual THnSparse*GetAsSparseHist(RooAbsCollection* whichVars = NULL) const; virtual THnSparse*GetAsSparseHist(RooAbsCollection& whichVars) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual RooRealVar*GetNLLVar() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual RooRealVar*GetWeightVar() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; RooStats::MarkovChainMarkovChain(); RooStats::MarkovChainMarkovChain(RooArgSet& parameters); RooStats::MarkovChainMarkovChain(const RooStats::MarkovChain&); RooStats::MarkovChainMarkovChain(const char* name, const char* title, RooArgSet& parameters); voidTObject::MayNotUse(const char* method) const; virtual Double_tNLL() const; virtual Double_tNLL(Int_t i) const; virtual Bool_tTObject::Notify(); static voidTObject::opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__MarkovChain.html:3548,Hash,Hash,3548,root/html526/RooStats__MarkovChain.html,https://root.cern,https://root.cern/root/html526/RooStats__MarkovChain.html,1,['Hash'],['Hash']
Security,"rs to the branches; having referenced objects. TBranch* Bronch(const char* name, const char* classname, void* addobj, Int_t bufsize = 32000, Int_t splitlevel = 99); Create a new TTree BranchElement. WARNING about this new function. This function is designed to replace the function TTree::Branch above.; This function is far more powerful than the Branch function.; It supports the full C++, including STL and has the same behaviour; in split or non-split mode. classname does not have to derive from TObject.; The function is based on the new TStreamerInfo. Build a TBranchElement for an object of class classname. addr is the address of a pointer to an object of class classname.; The class dictionary must be available (ClassDef in class header). Note: See the comments in TBranchElement::SetAddress() for a more; detailed discussion of the meaning of the addr parameter. This option requires access to the library where the corresponding class; is defined. Accessing one single data member in the object implies; reading the full object. By default the branch buffers are stored in the same file as the Tree.; use TBranch::SetFile to specify a different file. IMPORTANT NOTE about branch names; In case two or more master branches contain subbranches with; identical names, one must add a ""."" (dot) character at the end; of the master branch name. This will force the name of the subbranch; to be master.subbranch instead of simply subbranch.; This situation happens when the top level object (say event); has two or more members referencing the same class.; For example, if a Tree has two branches B1 and B2 corresponding; to objects of the same class MyClass, one can do:; tree.Branch(""B1."",""MyClass"",&b1,8000,1);; tree.Branch(""B2."",""MyClass"",&b2,8000,1);; if MyClass has 3 members a,b,c, the two instructions above will generate; subbranches called B1.a, B1.b ,B1.c, B2.a, B2.b, B2.c. bufsize is the buffer size in bytes for this branch; The default value is 32000 bytes and should be ok for mo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:50515,Access,Accessing,50515,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,3,['Access'],['Accessing']
Security,"rs(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); THashTableIter(const THashTableIter& iter); THashTableIter(const THashTable* ht, Bool_t dir = kIterForward). private:. Int_tNextSlot(); THashTableIter(). Data Members; private:. Int_tfCursorcurrent position in table; Bool_tfDirectioniteration direction; TListIter*fListCursorcurrent position in collision list; const THashTable*fTablehash table being iterated. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THashTableIter(const THashTable* ht, Bool_t dir = kIterForward); Create a hashtable iterator. By default the iteration direction; is kIterForward. To go backward use kIterBackward. THashTableIter(const THashTableIter& iter); Copy ctor. TIterator & operator=(const TIterator& rhs); Overridden assignment operator. THashTableIter & operator=(const THashTableIter& rhs); Overloaded assignment operator. ~THashTableIter(); Delete hashtable iterator. TObject * Next(); Return next object in hashtable. Returns 0 when no more objects in table. Int_t NextSlot(); Returns index of next slot in table containing list to be iterated. void Reset(); Reset the hashtable iterator. Either to beginning or end, depending on; the initial iteration direction. Bool_t operator!=(const TIterator& aIter) const; This operator compares two TIterator objects. Bool_t operator!=(const THashTableIter& aIter) const; This operator compares two THashTableIter objects. TObject * operator*() const; Return pointer to current object or nullptr. THashTableIter(); { }. const TCollection * GetCollection() const; { return fTable; }. » Author: Fons Rademakers 27/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id$ » Last generated: 2015-06-02 16:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/THashTableIter.html:1965,hash,hashtable,1965,root/html604/THashTableIter.html,https://root.cern,https://root.cern/root/html604/THashTableIter.html,1,['hash'],['hashtable']
Security,"rs(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); THashTableIter(const THashTableIter& iter); THashTableIter(const THashTable* ht, Bool_t dir = kIterForward). private:. Int_tNextSlot(); THashTableIter(). Data Members; private:. Int_tfCursorcurrent position in table; Bool_tfDirectioniteration direction; TListIter*fListCursorcurrent position in collision list; const THashTable*fTablehash table being iterated. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THashTableIter(const THashTable* ht, Bool_t dir = kIterForward); Create a hashtable iterator. By default the iteration direction; is kIterForward. To go backward use kIterBackward. THashTableIter(const THashTableIter& iter); Copy ctor. TIterator & operator=(const TIterator& rhs); Overridden assignment operator. THashTableIter & operator=(const THashTableIter& rhs); Overloaded assignment operator. ~THashTableIter(); Delete hashtable iterator. TObject * Next(); Return next object in hashtable. Returns 0 when no more objects in table. Int_t NextSlot(); Returns index of next slot in table containing list to be iterated. void Reset(); Reset the hashtable iterator. Either to beginning or end, depending on; the initial iteration direction. Bool_t operator!=(const TIterator& aIter) const; This operator compares two TIterator objects. Bool_t operator!=(const THashTableIter& aIter) const; This operator compares two THashTableIter objects. TObject * operator*() const; Return pointer to current object or nullptr. THashTableIter(); { }. const TCollection * GetCollection() const; { return fTable; }. » Author: Fons Rademakers 27/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id$ » Last generated: 2015-06-30 15:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THashTableIter.html:1965,hash,hashtable,1965,root/html602/THashTableIter.html,https://root.cern,https://root.cern/root/html602/THashTableIter.html,1,['hash'],['hashtable']
Security,"rs, directories, files and collections. Can locate objects (or its data member) per name. Can be extended to application-specific classes.; Normally TRootSnifferFull class is used which able to access data from trees, canvases, histograms. ; Definition at line 115 of file TRootSniffer.h. Public Member Functions;  TRootSniffer (const char *name=""sniff"", const char *objpath=""Objects"");  constructor ;  ; virtual ~TRootSniffer ();  destructor ;  ; Bool_t CanDrawItem (const char *path);  Method verifies if object can be drawn. ;  ; Bool_t CanExploreItem (const char *path);  Method returns true when object has childs or one could try to expand item. ;  ; Int_t CheckRestriction (const char *item_name);  Checked if restriction is applied to the item full_item_name should have full path to the item. ;  ; Bool_t CreateItem (const char *fullname, const char *title);  Create item element. ;  ; void CreateOwnTopFolder ();  Create own TFolder structures independent from gROOT This allows to have many independent TRootSniffer instances At the same time such sniffer lost access to all global lists and folders. ;  ; virtual void * FindInHierarchy (const char *path, TClass **cl=nullptr, TDataMember **member=nullptr, Int_t *chld=nullptr);  Search element with specified path Returns pointer on element Optionally one could obtain element class, member description and number of childs. ;  ; TObject * FindTObjectInHierarchy (const char *path);  Search element in hierarchy, derived from TObject. ;  ; const char * GetAutoLoad () const;  return name of configured autoload scripts (or 0) ;  ; const char * GetItemField (const char *fullname, const char *name);  Return field for specified item. ;  ; virtual ULong_t GetItemHash (const char *itemname);  Get hash function for specified item used to detect any changes in the specified object. ;  ; virtual ULong_t GetStreamerInfoHash ();  ; TFolder * GetTopFolder (Bool_t force=kFALSE);  Returns top TFolder instance for the sniffer. ;  ; Bool_t HasRe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootSniffer.html:1525,access,access,1525,doc/master/classTRootSniffer.html,https://root.cern,https://root.cern/doc/master/classTRootSniffer.html,1,['access'],['access']
Security,"rs.cxx:542; TListOfDataMembers::GetTDictionary * Get(DeclId_t id)Return (after creating it if necessary) the TDataMember describing the data member corresponding to t...Definition TListOfDataMembers.cxx:216; TListOfDataMembers::Loadvoid Load()Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection.Definition TListOfDataMembers.cxx:399; TListOfEnumsWithLockA collection of TEnum objects designed for fast access given a DeclId_t and for keep track of TEnum t...Definition TListOfEnumsWithLock.h:31; TListOfFunctionTemplatesA collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFu...Definition TListOfFunctionTemplates.h:35; TListOfFunctionTemplates::FindObjectTObject * FindObject(const char *name) const overrideSpecialize FindObject to do search for the a function just by name or create it if its not already in...Definition TListOfFunctionTemplates.cxx:175; TListOfFunctionsA collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFu...Definition TListOfFunctions.h:35; TListOfFunctions::GetTFunction * Get(DeclId_t id)Return (after creating it if necessary) the TMethod or TFunction describing the function correspondin...Definition TListOfFunctions.cxx:262; TListOfFunctions::Deletevoid Delete(Option_t *option="""") overrideDelete all TFunction object files.Definition TListOfFunctions.cxx:162; TListOfFunctions::Loadvoid Load()Load all the functions known to the interpreter for the scope 'fClass' into this collection.Definition TListOfFunctions.cxx:374; TListOfFunctions::Unloadvoid Unload()Mark 'all func' as being unloaded.Definition TListOfFunctions.cxx:409; TListOfTypesA collection of TDataType designed to hold the typedef information and numerical type information.Definition TListOfTypes.h:31; TListA doubly linked list.Definition TList.h:38; TList::Clearvoid Clear(Option_t *option="""") overrideRemove all objects from the list.Definition TList.cxx:400; TList",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:139311,access,access,139311,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['access'],['access']
Security,"rsion ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TServerSocket ();  ;  TServerSocket (const TServerSocket &);  ; Bool_t Authenticate (TSocket *);  Check authentication request from the client on new open connection. ;  ; void operator= (const TServerSocket &);  . Private Attributes; TSeqCollection * fSecContexts;  . Static Private Attributes; static UChar_t fgAcceptOpt = kSrvNoAuth;  ; static SrvClup_t fgSrvAuthClupHook = 0;  ; static SrvAuth_t fgSrvAuthHook = 0;  . Additional Inherited Members;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTServerSocket.html:17385,Authenticat,Authenticate,17385,doc/master/classTServerSocket.html,https://root.cern,https://root.cern/doc/master/classTServerSocket.html,2,['Authenticat'],"['Authenticate', 'Authenticated']"
Security,"rsion embedded in Tensorflow) and for standalone Keras versions up to it latest 2.3. For using Tensorflow.Keras one needs to use the booking option tf.keras=True.; Update the TMVA Keras tutorials to use now tensorflow.keras.; Deprecate the MethodDNN in favour of MethodDL supporting both CNN and RNN; Add possibility to customize all relevant minimizer parameters used for training in MethodDL; Add support in MethodDL for the Cudnn version 8 when using the Cuda implementation for CNN and RNN Minuit2; Implement the missing support for MethodCategory for multiclass classifiers.; Add possibility to retrieve a ROC curve made with the training dataset instead of the default test dataset. RooFit Libraries. Extension / updates of the doxygen reference guide.; Allow for removing RooPlot from global directory management, see RooPlot::AddDirectory and RooPlot::SetDirectory; Hash-assisted finding of elements in RooWorkspace. Large RooWorkspace objects were slow in finding elements. This was improved using a hash map.; Stabilise RooStats::HypoTestInverter. It can now tolerate a few failed fits when conducting hypothesis tests. This is relevant when a few points in a parameter scan don’t converge due to numerical or model instabilities. These points will be skipped, and HypoTestInverter can continue.; Tweak pull / residual plots. ROOT automatically zoomed out a bit when a pull / residual plot is created. Now, the axis range of the original plot is transferred to the residual plot, so the pulls can be drawn below the main plot.; Improve plotting of RooBinSamplingPdf; Print a Warning message when the RooAddPdf is evaluated without passing a normalization set and the class has not a normalization set defined. Without a normalization set the RooAddPdf is not properly defined and its shape will be different depending on which normalization range is used. Massive speed up of RooFit’s BatchMode on CPUs with vector extensions; RooFit’s BatchMode has been around since ROOT 6.20, but to full",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/release-notes.html:16605,hash,hash,16605,doc/v624/release-notes.html,https://root.cern,https://root.cern/doc/v624/release-notes.html,1,['hash'],['hash']
Security,"rsion(). static constexpr Version_t TClassTable::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 101 of file TClassTable.h. ◆ Classes(). int TClassTable::Classes ; (; ). Definition at line 388 of file TClassTable.cxx. ◆ DeclFileName(). static const char * TClassTable::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 101 of file TClassTable.h. ◆ FindElement(). TClassRec * TClassTable::FindElement ; (; const char * ; cname, . Bool_t ; insert . ). staticprivate . Find a class by name in the class table (using hash of name). ; Returns 0 if the class is not in the table. Unless arguments insert is true in which case a new entry is created and returned. cname must be the normalized name of the class. ; Definition at line 625 of file TClassTable.cxx. ◆ GetDict() [1/2]. DictFuncPtr_t TClassTable::GetDict ; (; const char * ; cname). static . Given the class name returns the Dictionary() function of a class (uses hash of name). ; Definition at line 674 of file TClassTable.cxx. ◆ GetDict() [2/2]. DictFuncPtr_t TClassTable::GetDict ; (; const std::type_info & ; info). static . Given the std::type_info returns the Dictionary() function of a class (uses hash of std::type_info::name()). ; Definition at line 692 of file TClassTable.cxx. ◆ GetDictNorm(). DictFuncPtr_t TClassTable::GetDictNorm ; (; const char * ; cname). static . Given the normalized class name returns the Dictionary() function of a class (uses hash of name). ; Definition at line 717 of file TClassTable.cxx. ◆ GetID(). Version_t TClassTable::GetID ; (; const char * ; cname). static . Returns the ID of a class. ; Definition at line 647 of file TClassTable.cxx. ◆ GetPragmaBits(). Int_t TClassTable::GetPragmaBits ; (; const char * ; name). static . Returns the pragma bits as specified in the LinkDef.h file. ; Definition at line 660 of file TClassTable.cxx. ◆ GetProto(). TProtoClass * TClassTable::GetProto ; (;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassTable.html:16987,hash,hash,16987,doc/master/classTClassTable.html,https://root.cern,https://root.cern/doc/master/classTClassTable.html,1,['hash'],['hash']
Security,"rsionUsed!Indicates whether GetClassVersion has been called; static TClass::ENewTypefgCallingNewIntent of why/how TClass::New() is called; static Int_tfgClassCountprovides unique id for a each class; static THashTable*fgClassShortTypedefHash; static THashTable*fgClassTypedefHash; static ROOT::TMapTypeToTClass*fgIdMapMap from typeid to TClass pointer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void AddClass(TClass* cl); static: Add a class to the list and map of classes. void RemoveClass(TClass* cl); static: Remove a class from the list and map of classes. TClass(); Default ctor. TClass(const char* name, Bool_t silent = kFALSE); Create a TClass object. This object contains the full dictionary; of a class. It has list to baseclasses, datamembers and methods.; Use this ctor to create a standalone TClass object. Most useful; to get a TClass interface to an interpreted class. Used by TTabCom.; Normally you would use TClass::GetClass(""class"") to get access to a; TClass object for a certain class. TClass(const char* name, Version_t cversion, const char* dfil = 0, const char* ifil = 0, Int_t dl = 0, Int_t il = 0, Bool_t silent = kFALSE); Create a TClass object. This object contains the full dictionary; of a class. It has list to baseclasses, datamembers and methods. TClass(const char* name, Version_t cversion, const type_info& info, TVirtualIsAProxy* isa, ShowMembersFunc_t showmember, const char* dfil, const char* ifil, Int_t dl, Int_t il, Bool_t silent = kFALSE); Create a TClass object. This object contains the full dictionary; of a class. It has list to baseclasses, datamembers and methods. void ForceReload(TClass* oldcl); we found at least one equivalent.; let's force a reload. void Init(const char* name, Version_t cversion, const type_info* info, TVirtualIsAProxy* isa, ShowMembersFunc_t showmember, const char* dfil, const char* ifil, Int_t dl, Int_t il, Bool_t silent); Initialize a TClass object. This object contains the fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClass.html:16499,access,access,16499,root/html526/TClass.html,https://root.cern,https://root.cern/root/html526/TClass.html,2,['access'],['access']
Security,"rspective(). virtual Bool_t TGLCamera::IsPerspective ; (; ); const. inlinevirtual . Reimplemented in TGLPerspectiveCamera.; Definition at line 119 of file TGLCamera.h. ◆ OfInterest(). Bool_t TGLCamera::OfInterest ; (; const TGLBoundingBox & ; box, . Bool_t ; ignoreSize . ); const. Calculate if the an object defined by world frame bounding box is 'of interest' to the camera. ; This is defined as box:. intersecting completely or partially (kInside/kPartial) with cameras interest box (fInterestBox); having significant length OR volume ratio compared to this interest box. If a box is 'of interest' returns kTRUE, kFALSE otherwise. See TGLCamera::UpdateInterest() for more details of camera interest box.; Note: Length/volume ratios NOT dependent on the projected size of box at current camera configuration as we do not want continual changes. This is used when (re) populating the scene with objects from external client.; TODO: Might be more logical to move this test out to client - and have accessor for fInterestBox instead? ; Definition at line 578 of file TGLCamera.cxx. ◆ operator=(). TGLCamera & TGLCamera::operator= ; (; const TGLCamera & ; ). privatedelete . ◆ RefCamBase(). TGLMatrix & TGLCamera::RefCamBase ; (; ). inline . Definition at line 169 of file TGLCamera.h. ◆ RefCamTrans(). TGLMatrix & TGLCamera::RefCamTrans ; (; ). inline . Definition at line 170 of file TGLCamera.h. ◆ RefLastNoPickProjM(). TGLMatrix & TGLCamera::RefLastNoPickProjM ; (; ); const. inline . Definition at line 174 of file TGLCamera.h. ◆ RefModelViewMatrix(). const TGLMatrix & TGLCamera::RefModelViewMatrix ; (; ); const. inline . Definition at line 121 of file TGLCamera.h. ◆ RefViewport() [1/2]. TGLRect & TGLCamera::RefViewport ; (; ). inline . Definition at line 128 of file TGLCamera.h. ◆ RefViewport() [2/2]. const TGLRect & TGLCamera::RefViewport ; (; ); const. inline . Definition at line 129 of file TGLCamera.h. ◆ Reset(). virtual void TGLCamera::Reset ; (; ). pure virtual . Implemented in TGLO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLCamera.html:28257,access,accessor,28257,doc/master/classTGLCamera.html,https://root.cern,https://root.cern/doc/master/classTGLCamera.html,1,['access'],['accessor']
Security,"rst(char c) const; 539{; 540 const char *f = strchr(Data(), c);; 541 return f ? f - Data() : kNPOS;; 542}; 543 ; 544////////////////////////////////////////////////////////////////////////////////; 545/// Find first occurrence of a character in cs.; 546 ; 547Ssiz_t TString::First(const char *cs) const; 548{; 549 const char *f = strpbrk(Data(), cs);; 550 return f ? f - Data() : kNPOS;; 551}; 552 ; 553#ifndef R__BYTESWAP; 554////////////////////////////////////////////////////////////////////////////////; 555 ; 556inline static UInt_t SwapInt(UInt_t x); 557{; 558 return (((x & 0x000000ffU) << 24) | ((x & 0x0000ff00U) << 8) |; 559 ((x & 0x00ff0000U) >> 8) | ((x & 0xff000000U) >> 24));; 560}; 561#endif; 562 ; 563////////////////////////////////////////////////////////////////////////////////; 564/// Utility used by Hash().; 565 ; 566inline static void Mash(UInt_t& hash, UInt_t chars); 567{; 568 hash = (chars ^; 569 ((hash << kHashShift) |; 570 (hash >> (kBitsPerByte*sizeof(UInt_t) - kHashShift))));; 571}; 572 ; 573////////////////////////////////////////////////////////////////////////////////; 574/// Return a case-sensitive hash value (endian independent).; 575 ; 576UInt_t Hash(const char *str); 577{; 578 UInt_t len = str ? strlen(str) : 0;; 579 UInt_t hv = len; // Mix in the string length.; 580 UInt_t i = hv*sizeof(char)/sizeof(UInt_t);; 581 ; 582 if (((ULongptr_t)str)%sizeof(UInt_t) == 0) {; 583 // str is word aligned; 584 const UInt_t *p = (const UInt_t*)str;; 585 ; 586 while (i--) {; 587#ifndef R__BYTESWAP; 588 UInt_t h = *p++;; 589 Mash(hv, SwapInt(h));; 590#else; 591 Mash(hv, *p++); // XOR in the characters.; 592#endif; 593 }; 594 ; 595 // XOR in any remaining characters:; 596 if ((i = len*sizeof(char)%sizeof(UInt_t)) != 0) {; 597 UInt_t h = 0;; 598 const char* c = (const char*)p;; 599 while (i--); 600 h = ((h << kBitsPerByte*sizeof(char)) | *c++);; 601 Mash(hv, h);; 602 }; 603 } else {; 604 // str is not word aligned; 605 UInt_t h;; 606 const unsigned char *p = (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8cxx_source.html:16803,hash,hash,16803,doc/master/TString_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TString_8cxx_source.html,5,['hash'],['hash']
Security,"rt ; (; ); const. relative-part = ""//"" authority path-abempty ; / path-absolute; / path-noscheme; / path-empty. Definition at line 676 of file TUri.cxx. ◆ GetScheme(). const TString TUri::GetScheme ; (; ); const. inline . Definition at line 80 of file TUri.h. ◆ GetUri(). const TString TUri::GetUri ; (; ); const. Returns the whole URI - an implementation of chapter 5.3 component recomposition. ; The result URI is composed out of the five basic parts. URI = scheme "":"" hier-part [ ""?"" query ] [ ""#"" fragment ]; hier-part = ""//"" authority path-abempty; / path-absolute; / path-rootless; / path-empty. Definition at line 140 of file TUri.cxx. ◆ GetUserInfo(). const TString TUri::GetUserInfo ; (; ); const. inline . Definition at line 84 of file TUri.h. ◆ HasAuthority(). Bool_t TUri::HasAuthority ; (; ); const. inline . Definition at line 93 of file TUri.h. ◆ HasFragment(). Bool_t TUri::HasFragment ; (; ); const. inline . Definition at line 99 of file TUri.h. ◆ HasHierPart(). Bool_t TUri::HasHierPart ; (; ); const. inline . Definition at line 92 of file TUri.h. ◆ HasHost(). Bool_t TUri::HasHost ; (; ); const. inline . Definition at line 95 of file TUri.h. ◆ HasPath(). Bool_t TUri::HasPath ; (; ); const. inline . Definition at line 97 of file TUri.h. ◆ HasPort(). Bool_t TUri::HasPort ; (; ); const. inline . Definition at line 96 of file TUri.h. ◆ HasQuery(). Bool_t TUri::HasQuery ; (; ); const. inline . Definition at line 98 of file TUri.h. ◆ HasRelativePart(). Bool_t TUri::HasRelativePart ; (; ); const. inline . Definition at line 100 of file TUri.h. ◆ HasScheme(). Bool_t TUri::HasScheme ; (; ); const. inline . Definition at line 91 of file TUri.h. ◆ HasUserInfo(). Bool_t TUri::HasUserInfo ; (; ); const. inline . Definition at line 94 of file TUri.h. ◆ IsA(). TClass * TUri::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 157 of file TUri.h. ◆ IsAbsolute(). Bool_t TUri::IsAbsolute ; (; ); cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUri.html:19754,HasH,HasHierPart,19754,doc/master/classTUri.html,https://root.cern,https://root.cern/doc/master/classTUri.html,1,['HasH'],['HasHierPart']
Security,"rt(z)>3.2)""; selection1 returns a weight = 0 or 1; selection2 returns a weight = x+y if sqrt(z)>3.2; returns a weight = 0 otherwise. option is the drawing option.; - See TH1::Draw for the list of all drawing options.; - If option COL is specified when varexp has three fields:; tree.Draw(""e1:e2:e3"","""",""col"");; a 2D scatter is produced with e1 vs e2, and e3 is mapped on the color; table. The colors for e3 are evaluated once in linear scale before; painting. Therefore changing the pad to log scale along Z as no effect; on the colors.; - If option contains the string ""goff"", no graphics is generated. nentries is the number of entries to process (default is all); first is the first entry to process (default is 0). This function returns the number of selected entries. It returns -1; if an error occurs. Drawing expressions using arrays and array elements. Let assumes, a leaf fMatrix, on the branch fEvent, which is a 3 by 3 array,; or a TClonesArray.; In a TTree::Draw expression you can now access fMatrix using the following; syntaxes:. String passed What is used for each entry of the tree. ""fMatrix"" the 9 elements of fMatrix; ""fMatrix[][]"" the 9 elements of fMatrix; ""fMatrix[2][2]"" only the elements fMatrix[2][2]; ""fMatrix[1]"" the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2]; ""fMatrix[1][]"" the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2]; ""fMatrix[][0]"" the 3 elements fMatrix[0][0], fMatrix[1][0] and fMatrix[2][0]. ""fEvent.fMatrix...."" same as ""fMatrix..."" (unless there is more than one leaf named fMatrix!). In summary, if a specific index is not specified for a dimension, TTree::Draw; will loop through all the indices along this dimension. Leaving off the; last (right most) dimension of specifying then with the two characters '[]'; is equivalent. For variable size arrays (and TClonesArray) the range; of the first dimension is recalculated for each entry of the tree.; You can also specify the index as an expression of any other variables from the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTree.html:70539,access,access,70539,root/html534/TTree.html,https://root.cern,https://root.cern/root/html534/TTree.html,3,['access'],['access']
Security,"rt, Int_t size = 0, Int_t tcpwindowsize = -1, TSocket* s = 0, Int_t* err = 0); Creates a socket or a parallel socket and authenticates to the; remote server specified in 'url' on remote 'port' as 'user'. url: [[proto][p][auth]://]host[/?options]. where proto = ""sockd"", ""rootd"", ""proofd""; indicates the type of remote server; if missing ""sockd"" is assumed (""sockd"" indicates; any remote server session using TServerSocket); [p] = for parallel sockets (forced internally for; rootd); [auth] = ""up"", ""s"", ""k"", ""g"", ""h"", ""ug"" to force UsrPwd,; SRP, Krb5, Globus, SSH or UidGid authentication; [options] = ""m"" or ""s"", when proto=proofd indicates whether; we are master or slave (used internally by TSlave). An already opened connection can be used by passing its socket; in opensock. If 'err' is defined, '*err' on return from a failed call contains an error; code (see NetErrors.h). Example:. TSocket::CreateAuthSocket(""qwerty"",""rootdps://machine.fq.dn"",5051). creates an authenticated socket to a rootd server running; on remote machine machine.fq.dn on port 5051; ""parallel""; sockets are forced internally because rootd expects; parallel sockets; however a simple socket will be created; in this case because the size is 0 (the default);; authentication will attempt protocol SRP first. TSocket::CreateAuthSocket(""qwerty"",""pk://machine.fq.dn:5052"",3). creates an authenticated parallel socket of size 3 to a sockd; server running on remote machine machine.fq.dn on port 5052;; authentication will attempt protocol Kerberos first. NB: may hang if the remote server is not of the correct type;; at present TSocket has no way to find out the type of the; remote server automatically. Returns pointer to an authenticated socket or 0 if creation or; authentication is unsuccessful. Int_t GetClientProtocol(); Static method returning supported client protocol. void NetError(const char* where, Int_t error); Print error string depending on error code. ULong64_t GetSocketBytesSent(); Get total number of byt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSocket.html:23682,authenticat,authenticated,23682,root/html530/TSocket.html,https://root.cern,https://root.cern/root/html530/TSocket.html,5,['authenticat'],['authenticated']
Security,"rtex3 &worldRef, const TGLVector3 &worldDelta) const;  Convert a 3D vector worldDelta (shift) about vertex worldRef to a viewport (screen) '3D' vector. ;  ; TGLVertex3 WorldToViewport (const TGLVertex3 &worldVertex, TGLMatrix *modviewMat=nullptr) const;  Convert a 3D world vertex to '3D' viewport (screen) one. ;  ; virtual Bool_t Zoom (Int_t delta, Bool_t mod1, Bool_t mod2)=0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLCamera.html:9814,Hash,Hash,9814,doc/master/classTGLCamera.html,https://root.cern,https://root.cern/doc/master/classTGLCamera.html,2,['Hash'],['Hash']
Security,"rtical; bar-chart is drawn with the options ""bar"", ""bar0"",; ""bar1"", ""bar2"", ""bar3"", ""bar4"".; An horizontal bar-chart is drawn with the options ""hbar"",; ""hbar0"", ""hbar1"", ""hbar2"", ""hbar3"",; ""hbar4"". The bar is filled with the histogram fill color.; The left side of the bar is drawn with a light fill color.; The right side of the bar is drawn with a dark fill color.; The percentage of the bar drawn with either the light or dark color is:. 0% for option ""(h)bar"" or ""(h)bar0""; 10% for option ""(h)bar1""; 20% for option ""(h)bar2""; 30% for option ""(h)bar3""; 40% for option ""(h)bar4"". Picture; Source. // Example of bar charts with 1-d histograms; // Author: Rene Brun; TCanvas *hbars() {; cout << gSystem->DirName(__FILE__) << endl;; // try to open first the file cernstaff.root in tutorials/tree directory; TString filedir = gSystem->DirName(__FILE__);; filedir += TString(""/../tree/"");; TString filename = ""cernstaff.root"";; bool fileNotFound = gSystem->AccessPathName(filename); // note opposite return code; // if file is not found try to generate it uing the macro tree/cernbuild.C; if (fileNotFound) {; TString macroName = filedir + ""cernbuild.C"";; if (!gInterpreter->IsLoaded(macroName)) gInterpreter->LoadMacro(macroName);; gROOT->ProcessLineFast(""cernbuild()"");; }; TFile * f = TFile::Open(filename);; if (!f) {; Error(""hbars"",""file cernstaff.root not found"");; return 0;; }; TTree *T = (TTree*)f->Get(""T"");; if (!T) {; Error(""hbars"",""Tree T is not present in file %s"",f->GetName() );; return 0;; }; T->SetFillColor(45);; TCanvas *c1 = new TCanvas(""c1"",""histograms with bars"",700,800);; c1->SetFillColor(42);; c1->Divide(1,2);. //horizontal bar chart; c1->cd(1); gPad->SetGrid(); gPad->SetLogx(); gPad->SetFrameFillColor(33);; T->Draw(""Nation"","""",""hbar2"");. //vertical bar chart; c1->cd(2); gPad->SetGrid(); gPad->SetFrameFillColor(33);; T->Draw(""Division>>hDiv"","""",""goff"");; TH1F *hDiv = (TH1F*)gDirectory->Get(""hDiv"");; hDiv->SetStats(0);; TH1F *hDivFR = (TH1F*)hDiv->Clone(""hDivFR"");; T->Dr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/THistPainter.html:24072,Access,AccessPathName,24072,root/html604/THistPainter.html,https://root.cern,https://root.cern/root/html604/THistPainter.html,1,['Access'],['AccessPathName']
Security,"rts the content of 'output' in the internal output list. ;  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ProcessFill (Long64_t);  This method is called for all selected entries. ;  ; virtual void ResetAbort ();  ; virtual void SetStatus (Long64_t status);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelEvent.html:3661,Hash,Hash,3661,doc/master/classTSelEvent.html,https://root.cern,https://root.cern/doc/master/classTSelEvent.html,8,['Hash'],['Hash']
Security,"rtual Atom_tTGFrame::HandleDNDPosition(Int_t, Int_t, Atom_t, Int_t, Int_t); virtual Bool_tTGFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGFrame::HandleDragDrop(TGFrame*, Int_t, Int_t, TGLayoutHints*); virtual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tHasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGButton::IsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTGButton::IsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTextButton.html:11826,Hash,Hash,11826,root/html528/TGTextButton.html,https://root.cern,https://root.cern/root/html528/TGTextButton.html,6,['Hash'],['Hash']
Security,"rtual Atom_tTGFrame::HandleDNDPosition(Int_t, Int_t, Atom_t, Int_t, Int_t); virtual Bool_tTGFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGFrame::HandleDragDrop(TGFrame*, Int_t, Int_t, TGLayoutHints*); virtual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tTGTextButton::HasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; virtual Bool_tIsDisabledAndSelected() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tIsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tIsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGRadioButton.html:11886,Hash,Hash,11886,root/html528/TGRadioButton.html,https://root.cern,https://root.cern/root/html528/TGRadioButton.html,6,['Hash'],['Hash']
Security,"rtual Atom_tTGFrame::HandleDNDPosition(Int_t, Int_t, Atom_t, Int_t, Int_t); virtual Bool_tTGFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGFrame::HandleDragDrop(TGFrame*, Int_t, Int_t, TGLayoutHints*); virtual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tTGTextButton::HasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; virtual Bool_tIsDisabledAndSelected() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tIsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTGButton::IsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGCheckButton.html:11886,Hash,Hash,11886,root/html528/TGCheckButton.html,https://root.cern,https://root.cern/root/html528/TGCheckButton.html,6,['Hash'],['Hash']
Security,"rtual Atom_tTGFrame::HandleDNDPosition(Int_t, Int_t, Atom_t, Int_t, Int_t); virtual Bool_tTGFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGFrame::HandleDragDrop(TGFrame*, Int_t, Int_t, TGLayoutHints*); virtual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGColorPick.html:8684,Hash,Hash,8684,root/html528/TGColorPick.html,https://root.cern,https://root.cern/root/html528/TGColorPick.html,72,['Hash'],['Hash']
Security,"rtual Bool_tTClass::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTClass::InterpretedShowMembers(void* obj, TMemberInspector& insp); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static TClass::ENewTypeTClass::IsCallingNew(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTClass::IsFolder() const; Bool_tTClass::IsFolder(void* obj) const; Bool_tTClass::IsForeign() const; Bool_tTClass::IsLoaded() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTClass::IsStartingWithTObject() const; Bool_tTClass::IsTObject() const; Bool_tTClass::IsVersioned() const; Bool_tTObject::IsZombie() const; static TClass*TClass::Load(TBuffer& b); static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTClass::ls(Option_t* opt = """") const; voidTClass::MakeCustomMenuList(); Bool_tTClass::MatchLegacyCheckSum(UInt_t checksum) const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; voidTClass::Move(void* arenaFrom, void* arenaTo) const; void*TClass::New(TClass::ENewType defConstructor = kClassNew) const; void*TClass::New(void* arena, TClass::ENewType defConstructor = kClassNew) const; void*TClass::NewArray(Long_t nElements, TClass::ENewType defConstructor = kClassNew) const; void*TClass::NewArray(Long_t nElements, void* arena, TClass::ENewType defConstructor = kClassNew) const; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TQClass.html:12286,checksum,checksum,12286,root/html534/TQClass.html,https://root.cern,https://root.cern/root/html534/TQClass.html,1,['checksum'],['checksum']
Security,"rtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual voidHandleMenu(Int_t id); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual voidHandleWindowClosed(Int_t id); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidHide(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); static TGFrame*HSplitter(); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; static TGuiBuilder*TGuiBuilder::Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTGuiBuild",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRootGuiBuilder.html:12726,Hash,Hash,12726,root/html528/TRootGuiBuilder.html,https://root.cern,https://root.cern/root/html528/TRootGuiBuilder.html,6,['Hash'],['Hash']
Security,"rtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooHashTable&operator=(const RooHashTable&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tremove(TObject* arg, TObject* hashArg = 0); Bool_treplace(const TObject* oldArg, const TObject* newArg, const TObject* oldHashArg = 0); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); Int_tsize() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooHashTable.html:4189,hash,hashArg,4189,root/html528/RooHashTable.html,https://root.cern,https://root.cern/root/html528/RooHashTable.html,1,['hash'],['hashArg']
Security,"rtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooHashTable&operator=(const RooHashTable&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tremove(TObject* arg, TObject* hashArg = 0); Bool_treplace(const TObject* oldArg, const TObject* newArg, const TObject* oldHashArg = 0); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); Int_tsize() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooHashTable.html:4189,hash,hashArg,4189,root/html526/RooHashTable.html,https://root.cern,https://root.cern/root/html526/RooHashTable.html,1,['hash'],['hashArg']
Security,"rtual Bool_t SetExportUrl (const char *=nullptr);  ; virtual void SetTag (const char *, const char *, TMap *);  ; virtual void SetTagFilterList (TList *);  ; virtual Bool_t Stage (Bool_t=kFALSE, Option_t *="""");  ; virtual void Status ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGridCollection.html:3182,Hash,Hash,3182,doc/master/classTGridCollection.html,https://root.cern,https://root.cern/doc/master/classTGridCollection.html,2,['Hash'],['Hash']
Security,"rtual Int_tGetExecID() const; Double_tGetFactor() const; virtual const char*GetFullName() const; virtual const char*TObject::GetIconName() const; virtual const char*GetInclude() const; Int_tGetMaxIndex(Int_t i) const; virtual ULong_tGetMethod() const; virtual const char*TNamed::GetName() const; TClass*GetNewClass() const; Int_tGetNewType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tGetOffset() const; virtual Option_t*TObject::GetOption() const; voidGetSequenceType(TString& type) const; virtual Int_tGetSize() const; TMemberStreamer*GetStreamer() const; virtual const char*TNamed::GetTitle() const; Int_tGetTObjectOffset() const; Int_tGetType() const; const char*GetTypeName() const; const char*GetTypeNameBasic() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetXmax() const; Double_tGetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tHasCounter() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TObject* obj = 0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsaPointer() const; virtual Bool_tIsBase() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsOldFormat(const char* newTypeName); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TStreamerElement.html:3061,Hash,Hash,3061,root/html534/TStreamerElement.html,https://root.cern,https://root.cern/root/html534/TStreamerElement.html,1,['Hash'],['Hash']
Security,"rtual Int_tGetExecID() const; Double_tGetFactor() const; virtual const char*GetFullName() const; virtual const char*TObject::GetIconName() const; virtual const char*GetInclude() const; Int_tGetMaxIndex(Int_t i) const; virtual ULong_tGetMethod() const; virtual const char*TNamed::GetName() const; TClass*GetNewClass() const; Int_tGetNewType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tGetOffset() const; virtual Option_t*TObject::GetOption() const; voidGetSequenceType(TString& type) const; virtual Int_tGetSize() const; TMemberStreamer*GetStreamer() const; virtual const char*TNamed::GetTitle() const; Int_tGetTObjectOffset() const; Int_tGetType() const; const char*GetTypeName() const; const char*GetTypeNameBasic() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetXmax() const; Double_tGetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tHasCounter() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TObject* obj = 0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsaPointer() const; virtual Bool_tIsBase() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsOldFormat(const char* newTypeName); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsTransient() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerElement.html:2961,Hash,Hash,2961,root/html602/TStreamerElement.html,https://root.cern,https://root.cern/root/html602/TStreamerElement.html,2,['Hash'],['Hash']
Security,"rtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TGeoGlobalMagField(const TGeoGlobalMagField&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGeoGlobalMagField&operator=(const TGeoGlobalMagField&); voidUnlock(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TVirtualMagField*fFieldMagnetic field; Bool_tfLockLock flag for global field.; static TGeoGlobalMagField*fgInstanceStatic pointer to the field manager;. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoGlobalMagField(); Global field default constructor. ~TGeoGlobalMagField(); Global field destructor. void SetField(TVirtualMagField* field); Field setter. Deletes previous field if any. Acts only if fLock=kFALSE. TGeoGlobalMagField * GetInstance(); Static getter that does not create the object. TGeoGlobalMagField * Instance(); Returns always a valid static pointer to the field manager. void Lock(); Locks the global magnetic field if this is set. Cannot be unlocked. TGeoGlobalMagField(const TGeoGlobalMagField& ). TGeoGlobalMagField& operator=(const TGeoGlobalMagField& ). void Unlock(); {fLock = kFALSE;}. TVirtualMagField * GetField() const; Using SetField() makes a given field global. The field manager owns it from now on. {return fField;}. Bool_t IsLocked(); {return fLock;}. void Field(const Double_t* x, Double_t* B); Inline access to Field() method. {if (fField) fField->Field(x,B);}. » Last changed: root/geom:$Id$ » Last generated: 2015-03-14 16:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoGlobalMagField.html:7065,access,access,7065,root/html534/TGeoGlobalMagField.html,https://root.cern,https://root.cern/root/html534/TGeoGlobalMagField.html,1,['access'],['access']
Security,"rtual Long64_t GetSize() constReturns the current file size.Definition TFile.cxx:1347; TFile::GetENDvirtual Long64_t GetEND() constDefinition TFile.h:231; TFile::SumBuffervoid SumBuffer(Int_t bufsize)Increment statistics for buffer sizes of objects in this file.Definition TFile.cxx:2417; TFile::CurrentFilestatic TFile *& CurrentFile()Return the current ROOT file if any.Definition TFile.cxx:1067; TFile::GetEndpointUrlvirtual const TUrl * GetEndpointUrl() constDefinition TFile.h:235; TFile::Openstatic TFile * Open(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; TFile::kReproducible@ kReproducibleDefinition TFile.h:197; TFile::kWriteError@ kWriteErrorDefinition TFile.h:194; TFile::ReadBuffervirtual Bool_t ReadBuffer(char *buf, Int_t len)Read a buffer from the file.Definition TFile.cxx:1770; THashListTHashList implements a hybrid collection class consisting of a hash table and a list to store TObject...Definition THashList.h:34; TIterDefinition TCollection.h:235; TIter::Resetvoid Reset()Definition TCollection.h:254; TKeyBook space in a file, create I/O buffers, to fill them, (un)compress them.Definition TKey.h:28; TKey::Deletevoid Delete(Option_t *option="""") overrideDelete an object from the file.Definition TKey.cxx:539; TKey::GetSeekKeyvirtual Long64_t GetSeekKey() constDefinition TKey.h:89; TKey::SizeofInt_t Sizeof() const overrideReturn the size in bytes of the key header structure.Definition TKey.cxx:1342; TKey::GetKeylenInt_t GetKeylen() constDefinition TKey.h:84; TKey::GetObjlenInt_t GetObjlen() constDefinition TKey.h:87; TKey::GetNbytesInt_t GetNbytes() constDefinition TKey.h:86; TKey::GetKeepShort_t GetKeep() constReturns the ""KEEP"" status.Definition TKey.cxx:594; TKey::GetClassNamevirtual const char * GetClassName() constDefinition TKey.h:75; TKey::ReadFilevirtual Bool_t ReadFile()Read the key structure from the f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDirectoryFile_8cxx_source.html:97461,hash,hash,97461,doc/master/TDirectoryFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TDirectoryFile_8cxx_source.html,1,['hash'],['hash']
Security,"rtual Long64_tGetBytesRead() const; virtual Long64_tGetBytesReadExtra() const; virtual Double_tGetCpuTime() const; virtual Double_tGetDiskTime() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TGraphErrors*GetGraphIO(); TGraphErrors*GetGraphTime(); const char*GetHostInfo() const; virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual Int_tGetNleaves() const; virtual Long64_tGetNumEvents() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TPaveText*GetPave(); virtual Int_tGetReadaheadSize() const; virtual Int_tGetReadCalls() const; virtual Double_tGetRealTime() const; TStopwatch*GetStopwatch() const; virtual const char*TObject::GetTitle() const; virtual Int_tGetTreeCacheSize() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreePerfStats.html:5301,Hash,Hash,5301,root/html528/TTreePerfStats.html,https://root.cern,https://root.cern/root/html528/TTreePerfStats.html,1,['Hash'],['Hash']
Security,"rtual Long64_tGetBytesReadExtra() const; virtual Double_tGetCpuTime() const; virtual Double_tGetDiskTime() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TGraphErrors*GetGraphIO(); TGraphErrors*GetGraphTime(); const char*GetHostInfo() const; virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual Int_tGetNleaves() const; virtual Long64_tGetNumEvents() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TPaveText*GetPave(); virtual Int_tGetReadaheadSize() const; virtual Int_tGetReadCalls() const; virtual Double_tGetRealTime() const; TStopwatch*GetStopwatch() const; virtual const char*TObject::GetTitle() const; virtual Int_tGetTreeCacheSize() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetUnzipTime() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTreePerfStats.html:5439,Hash,Hash,5439,root/html530/TTreePerfStats.html,https://root.cern,https://root.cern/root/html530/TTreePerfStats.html,3,['Hash'],['Hash']
Security,"rtual Long64_tGetBytesReadExtra() const; virtual Double_tGetCpuTime() const; virtual Double_tGetDiskTime() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TGraphErrors*GetGraphIO(); TGraphErrors*GetGraphTime(); const char*GetHostInfo() const; virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual Int_tGetNleaves() const; virtual Long64_tGetNumEvents() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TPaveText*GetPave(); virtual Int_tGetReadaheadSize() const; virtual Int_tGetReadCalls() const; virtual Double_tGetRealTime() const; TStopwatch*GetStopwatch() const; virtual const char*TObject::GetTitle() const; virtual Int_tGetTreeCacheSize() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetUnzipTime() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreePerfStats.html:5327,Hash,Hash,5327,root/html602/TTreePerfStats.html,https://root.cern,https://root.cern/root/html602/TTreePerfStats.html,2,['Hash'],['Hash']
Security,"rtual Option_t*TObject::GetOption() const; virtual voidGetPointComplex(Int_t ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual voidGetPointComplex(const Int_t* ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(Int_t ipoint, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(const Int_t* ipoint, Bool_t fromInput = kFALSE) const; virtual voidGetPoints(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* re, Double_t* im, Bool_t fromInput = kFALSE) const; virtual Double_t*GetPointsReal(Bool_t fromInput = kFALSE) const; virtual Int_tGetSign() const; virtual const char*TObject::GetTitle() const; virtual Option_t*GetTransformFlag() const; virtual Option_t*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(Option_t* flag, Int_t sign, const Int_t* kind); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInplace() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVirtualFFT.html:5923,Hash,Hash,5923,root/html528/TVirtualFFT.html,https://root.cern,https://root.cern/root/html528/TVirtualFFT.html,1,['Hash'],['Hash']
Security,"rtual Option_t*TObject::GetOption() const; virtual voidGetPointComplex(Int_t ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual voidGetPointComplex(const Int_t* ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(Int_t ipoint, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(const Int_t* ipoint, Bool_t fromInput = kFALSE) const; virtual voidGetPoints(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* re, Double_t* im, Bool_t fromInput = kFALSE) const; virtual Double_t*GetPointsReal(Bool_t fromInput = kFALSE) const; virtual Int_tGetSign() const; virtual const char*TObject::GetTitle() const; virtual Option_t*GetTransformFlag() const; virtual Option_t*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(Option_t* flag, Int_t sign, const Int_t* kind); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInplace() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TVirtualFFT.html:5923,Hash,Hash,5923,root/html530/TVirtualFFT.html,https://root.cern,https://root.cern/root/html530/TVirtualFFT.html,3,['Hash'],['Hash']
Security,"rtual Option_t*TObject::GetOption() const; virtual voidGetPointComplex(Int_t ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual voidGetPointComplex(const Int_t* ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(Int_t ipoint, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(const Int_t* ipoint, Bool_t fromInput = kFALSE) const; virtual voidGetPoints(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* re, Double_t* im, Bool_t fromInput = kFALSE) const; virtual Double_t*GetPointsReal(Bool_t fromInput = kFALSE) const; virtual Int_tGetSign() const; virtual const char*TObject::GetTitle() const; virtual Option_t*GetTransformFlag() const; virtual Option_t*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(Option_t* flag, Int_t sign, const Int_t* kind); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInplace() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualFFT.html:5947,Hash,Hash,5947,root/html602/TVirtualFFT.html,https://root.cern,https://root.cern/root/html602/TVirtualFFT.html,2,['Hash'],['Hash']
Security,"rtual TObject * WaitPrimitive (const char *pname="""", const char *emode="""")=0;  ; virtual Int_t XtoAbsPixel (Double_t x) const =0;  ; virtual Double_t XtoPad (Double_t x) const =0;  ; virtual Int_t XtoPixel (Double_t x) const =0;  ; virtual Int_t YtoAbsPixel (Double_t y) const =0;  ; virtual Double_t YtoPad (Double_t y) const =0;  ; virtual Int_t YtoPixel (Double_t y) const =0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPad.html:13626,Hash,Hash,13626,doc/master/classTVirtualPad.html,https://root.cern,https://root.cern/doc/master/classTVirtualPad.html,2,['Hash'],['Hash']
Security,"rtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tTGeoMatrix::GetByteCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); voidTGeoMatrix::GetHomogenousMatrix(Double_t* hmat) const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*TGeoMatrix::GetPointerName() const; virtual const Double_t*GetRotationMatrix() const; virtual Double_t*GetRotationMatrix(); virtual const Double_t*GetScale() const; virtual Double_t*GetScale(); virtual const char*TNamed::GetTitle() const; virtual const Double_t*GetTranslation() const; virtual Double_t*GetTranslation(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TGeoMatrix&Inverse() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoMatrix::IsCombi() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTGeoMatrix::IsGeneral() const; Bool_tTGeoMatrix::IsIdentity() const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoMatrix::IsReflection() const; Bool_tTGeoMatrix::IsRegistered() const; Bool_tTGeoMatrix::IsRotAboutZ() const; Bool_tTGeoMatrix::IsRotation() const; Bool_tTGeoMatrix::IsScale() const; Bool_tTGeoMatrix::IsShared() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoMatrix::IsTranslation() const; Bool_tTObject::IsZombie() const; virtual voidTGeoMatrix::LocalToMaster(const Double_t* local, D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoHMatrix.html:9474,Hash,Hash,9474,root/html534/TGeoHMatrix.html,https://root.cern,https://root.cern/root/html534/TGeoHMatrix.html,3,['Hash'],['Hash']
Security,"rtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tTGeoMatrix::GetByteCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); voidTGeoMatrix::GetHomogenousMatrix(Double_t* hmat) const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*TGeoMatrix::GetPointerName() const; virtual const Double_t*GetRotationMatrix() const; virtual Double_t*GetRotationMatrix(); virtual const Double_t*GetScale() const; virtual Double_t*GetScale(); virtual const char*TNamed::GetTitle() const; virtual const Double_t*GetTranslation() const; virtual Double_t*GetTranslation(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TGeoMatrix&Inverse() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoMatrix::IsCombi() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTGeoMatrix::IsGeneral() const; Bool_tTGeoMatrix::IsIdentity() const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoMatrix::IsReflection() const; Bool_tTGeoMatrix::IsRegistered() const; Bool_tTGeoMatrix::IsRotAboutZ() const; Bool_tTGeoMatrix::IsRotation() const; Bool_tTGeoMatrix::IsScale() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoMatrix::IsTranslation() const; Bool_tTObject::IsZombie() const; virtual voidTGeoMatrix::LocalToMaster(const Double_t* local, Double_t* master) const; virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoHMatrix.html:9436,Hash,Hash,9436,root/html528/TGeoHMatrix.html,https://root.cern,https://root.cern/root/html528/TGeoHMatrix.html,3,['Hash'],['Hash']
Security,"rtual Width_tTAttLine::GetLineWidth() const; virtual TPoints3DABC*GetMarker() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; TMaterial*TShape::GetMaterial() const; virtual const char*GetName() const; virtual Int_tTShape::GetNumber() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TPoints3DABC*GetPoints() const; virtual TShape*GetShape() const; virtual Size_tGetSizeAttribute() const; virtual Bool_tGetSmooth() const; virtual Style_tGetStyleAttribute() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Float_tGetWidthFactor() const; static Double_t*Gyrot(Double_t* dirc, Double_t cosang, Double_t sinang, Double_t** trans); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPolyLineShape.html:3963,Hash,Hash,3963,root/html528/TPolyLineShape.html,https://root.cern,https://root.cern/root/html528/TPolyLineShape.html,1,['Hash'],['Hash']
Security,"rtual Width_tTAttLine::GetLineWidth() const; virtual TPoints3DABC*GetMarker() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; TMaterial*TShape::GetMaterial() const; virtual const char*GetName() const; virtual Int_tTShape::GetNumber() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TPoints3DABC*GetPoints() const; virtual TShape*GetShape() const; virtual Size_tGetSizeAttribute() const; virtual Bool_tGetSmooth() const; virtual Style_tGetStyleAttribute() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Float_tGetWidthFactor() const; static Double_t*Gyrot(Double_t* dirc, Double_t cosang, Double_t sinang, Double_t** trans); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPolyLineShape.html:3963,Hash,Hash,3963,root/html530/TPolyLineShape.html,https://root.cern,https://root.cern/root/html530/TPolyLineShape.html,3,['Hash'],['Hash']
Security,"rtual boolROOT::Math::Minimizer::SetVariableValue(unsigned int, double); virtual boolROOT::Math::Minimizer::SetVariableValues(const double* x); virtual voidShowMembers(TMemberInspector& insp); intROOT::Math::Minimizer::Status() const; intROOT::Math::Minimizer::Strategy() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); doubleROOT::Math::Minimizer::Tolerance() const; virtual intROOT::Math::Minimizer::VariableIndex(const string&) const; virtual stringROOT::Math::Minimizer::VariableName(unsigned int) const; virtual const double*X() const. private:. TLinearMinimizer(const TLinearMinimizer&); TLinearMinimizer&operator=(const TLinearMinimizer& rhs). Data Members; protected:. intROOT::Math::Minimizer::fDebugprint level; unsigned intROOT::Math::Minimizer::fMaxCallsmax number of function calls ; unsigned intROOT::Math::Minimizer::fMaxItermax number or iterations used to find the minimum; doubleROOT::Math::Minimizer::fPrecprecision; intROOT::Math::Minimizer::fStatusstatus of minimizer ; intROOT::Math::Minimizer::fStrategyminimizer strategy; doubleROOT::Math::Minimizer::fToltolerance (absolute); doubleROOT::Math::Minimizer::fUperror scale ; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. vector<double>fCovar; unsigned intfDim; vector<double>fErrors; TLinearFitter*fFitter; doublefMinVal; unsigned intfNFree; const ROOT::Math::IGradientFunctionMultiDim*fObjFunc; vector<double>fParams; boolfRobust. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLinearMinimizer(int type = 0); Default constructor implementation.; type is not used - needed for consistency with other minimizer plug-ins. TLinearMinimizer(const char* type); constructor passing a type of algorithm, (supported now robust via LTS regression). ~TLinearMinimizer(); Destructor implementation. TLinearMinimizer(const TLinearMinimizer& ); Implementation of copy constructor. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLinearMinimizer.html:4656,validat,validated,4656,root/html528/TLinearMinimizer.html,https://root.cern,https://root.cern/root/html528/TLinearMinimizer.html,3,['validat'],['validated']
Security,"rtual const char*TObject::GetIconName() const; virtual TLeaf*TLeaf::GetLeafCount() const; virtual TLeaf*TLeaf::GetLeafCounter(Int_t& countval) const; virtual Int_tTLeaf::GetLen() const; virtual Int_tTLeaf::GetLenStatic() const; virtual Int_tTLeaf::GetLenType() const; virtual Int_tGetMaximum() const; virtual Int_tGetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual Long64_tGetValueLong64(Int_t i = 0) const; virtual LongDouble_tGetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImport(TClonesArray* list, Int_t n); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTLeaf::IsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLeafL.html:2992,Hash,Hash,2992,root/html534/TLeafL.html,https://root.cern,https://root.cern/root/html534/TLeafL.html,1,['Hash'],['Hash']
Security,"rtual const char*TObject::GetIconName() const; virtual TLeaf*TLeaf::GetLeafCount() const; virtual TLeaf*TLeaf::GetLeafCounter(Int_t& countval) const; virtual Int_tTLeaf::GetLen() const; virtual Int_tTLeaf::GetLenStatic() const; virtual Int_tTLeaf::GetLenType() const; virtual Int_tGetMaximum() const; virtual Int_tGetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual Long64_tGetValueLong64(Int_t i = 0) const; virtual LongDouble_tGetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImport(TClonesArray* list, Int_t n); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTLeaf::IsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLeafL.html:2898,Hash,Hash,2898,root/html602/TLeafL.html,https://root.cern,https://root.cern/root/html602/TLeafL.html,2,['Hash'],['Hash']
Security,"rtual const char*TSystem::GetObjExt() const; virtual Option_t*TObject::GetOption() const; virtual Int_tGetPathInfo(const char* path, FileStat_t& buf); virtual TInetAddressTSystem::GetPeerName(int sock); virtual intTSystem::GetPid(); virtual intTSystem::GetProcInfo(ProcInfo_t* info) const; virtual intTSystem::GetServiceByName(const char* service); virtual char*TSystem::GetServiceByPort(int port); virtual TInetAddressTSystem::GetSockName(int sock); virtual intTSystem::GetSockOpt(int sock, int kind, int* val); virtual const char*TSystem::GetSoExt() const; virtual intTSystem::GetSysInfo(SysInfo_t* info) const; virtual const char*TNamed::GetTitle() const; virtual Int_tTSystem::GetUid(const char* user = 0); virtual UInt_tTObject::GetUniqueID() const; virtual UserGroup_t*TSystem::GetUserInfo(Int_t uid); virtual UserGroup_t*TSystem::GetUserInfo(const char* user = 0); virtual TList*TSystem::GetVolumes(Option_t*) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual const char*TSystem::HomeDirectory(const char* userName = 0); virtual const char*TSystem::HostName(); virtual voidTSystem::IgnoreInterrupt(Bool_t ignore = kTRUE); virtual voidTSystem::IgnoreSignal(ESignals sig, Bool_t ignore = kTRUE); Bool_tTSystem::InControl() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tTSystem::Init(); virtual voidTSystem::InnerLoop(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSystem::IsAbsoluteFileName(const char* dir); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTSystem::IsFileInIncludePath(const char* name, char** fullpath = 0); virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsPathLocal(const char* path); virtual Bool_tTNamed::I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNetXNGSystem.html:7747,Hash,Hash,7747,root/html534/TNetXNGSystem.html,https://root.cern,https://root.cern/root/html534/TNetXNGSystem.html,3,['Hash'],['Hash']
Security,"rtual const char*TSystem::GetObjExt() const; virtual Option_t*TObject::GetOption() const; virtual Int_tGetPathInfo(const char* path, FileStat_t& buf); virtual TInetAddressTSystem::GetPeerName(int sock); virtual intTSystem::GetPid(); virtual intTSystem::GetProcInfo(ProcInfo_t* info) const; virtual intTSystem::GetServiceByName(const char* service); virtual char*TSystem::GetServiceByPort(int port); virtual TInetAddressTSystem::GetSockName(int sock); virtual intTSystem::GetSockOpt(int sock, int kind, int* val); virtual const char*TSystem::GetSoExt() const; virtual intTSystem::GetSysInfo(SysInfo_t* info) const; virtual const char*TNamed::GetTitle() const; virtual Int_tTSystem::GetUid(const char* user = 0); virtual UInt_tTObject::GetUniqueID() const; virtual UserGroup_t*TSystem::GetUserInfo(Int_t uid); virtual UserGroup_t*TSystem::GetUserInfo(const char* user = 0); virtual TList*TSystem::GetVolumes(Option_t*) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual const char*TSystem::HomeDirectory(const char* userName = 0); virtual const char*TSystem::HostName(); virtual voidTSystem::IgnoreInterrupt(Bool_t ignore = kTRUE); virtual voidTSystem::IgnoreSignal(ESignals sig, Bool_t ignore = kTRUE); Bool_tTSystem::InControl() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tTSystem::Init(); virtual voidTSystem::InnerLoop(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSystem::IsAbsoluteFileName(const char* dir); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTSystem::IsFileInIncludePath(const char* name, char** fullpath = 0); virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTSystem::IsPathLocal(const char* path); virtual Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TDCacheSystem.html:7327,Hash,Hash,7327,root/html526/TDCacheSystem.html,https://root.cern,https://root.cern/root/html526/TDCacheSystem.html,18,['Hash'],['Hash']
Security,"rtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; static const char*str(const TNamed* ptr); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. RooNameReg(Int_t hashSize = 31); RooNameReg(const RooNameReg& other); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum { kRenamedArg; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooHashTable_htableRepository of registered names; static RooNameReg*_instance; RooLinkedList_list; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNameReg(Int_t hashSize = 31); {}. ~RooNameReg(); Destructor. RooNameReg(const RooNameReg& other); Copy constructor. RooNameReg& instance(); Return reference to singleton instance. void cleanup(); Cleanup function called by atexit() handler installed by RooSentinel; to delete global objects on heap at end of program. cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNameReg.html:5433,hash,hashSize,5433,root/html534/RooNameReg.html,https://root.cern,https://root.cern/root/html534/RooNameReg.html,1,['hash'],['hashSize']
Security,"rtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; RooLinkedListElem*findLink(const TObject* arg) const; voidTObject::MakeZombie(); voidswapWithNext(RooLinkedListElem* elem). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooLinkedListElem*_first! Link to first element of list; Int_t_hashThreshSize threshold for hashing; RooHashTable*_htableLink! Hash table by link pointer; RooHashTable*_htableName! Hash table by name ; RooLinkedListElem*_last! Link to last element of list; TString_name; Int_t_sizeCurrent size of list. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooLinkedList(Int_t htsize = 0); Constructor with hashing threshold. If collection size exceeds threshold; a hash table is added. RooLinkedList(const RooLinkedList& other); Copy constructor. RooLinkedList& operator=(const RooLinkedList& other); Assignment operator, copy contents from 'other'. void setHashTableSize(Int_t size); Change the threshold for hash-table use to given size.; If a hash table exists when this method is called, it is regenerated. ~RooLinkedList(); Destructor. RooLinkedListElem* findLink(const TObject* arg) const; Find the element link containing the given object. void Add(TObject* arg, Int_t refCount); Insert object into collection with given reference count value. Bool_t Remove(TObject* arg); Remove object from collection. TObject* At(Int_t index) const; Return object stored in sequential position given by index.; If index is out of range, a null pointer is returned. Bool_t Replace(const TObject* oldArg, const TObject* newArg); Replace object 'oldArg' in collection with new object 'newArg'.; If 'oldArg' is not found in collection kFALSE is returned. TObject* Fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooLinkedList.html:6485,hash,hash,6485,root/html528/RooLinkedList.html,https://root.cern,https://root.cern/root/html528/RooLinkedList.html,1,['hash'],['hash']
Security,"rtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; RooLinkedListElem*findLink(const TObject* arg) const; voidTObject::MakeZombie(); voidswapWithNext(RooLinkedListElem* elem). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooLinkedListElem*_first! Link to first element of list; Int_t_hashThreshSize threshold for hashing; RooHashTable*_htableLink! Hash table by link pointer; RooHashTable*_htableName! Hash table by name ; RooLinkedListElem*_last! Link to last element of list; TString_name; Int_t_sizeCurrent size of list. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooLinkedList(Int_t htsize = 0); Constructor with hashing threshold. If collection size exceeds threshold; a hash table is added.; if (htsize>0) {; cout << ""RooLinkedList::ctor htsize="" << htsize << endl ;; }. RooLinkedList(const RooLinkedList& other); Copy constructor. RooLinkedList& operator=(const RooLinkedList& other); Assignment operator, copy contents from 'other'. void setHashTableSize(Int_t size); Change the threshold for hash-table use to given size.; If a hash table exists when this method is called, it is regenerated. ~RooLinkedList(); Destructor. RooLinkedListElem* findLink(const TObject* arg) const; Find the element link containing the given object. void Add(TObject* arg, Int_t refCount); Insert object into collection with given reference count value. Bool_t Remove(TObject* arg); Remove object from collection. TObject* At(Int_t index) const; Return object stored in sequential position given by index.; If index is out of range, a null pointer is returned. Bool_t Replace(const TObject* oldArg, const TObject* newArg); Replace object 'oldArg' in collection with new object '",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooLinkedList.html:6554,hash,hash,6554,root/html530/RooLinkedList.html,https://root.cern,https://root.cern/root/html530/RooLinkedList.html,1,['hash'],['hash']
Security,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBlockFromCache(const char*, Int_t); TCondition*GetCondNewBlock() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFPBlock*GetPendingBlock(); TThread*GetThread() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Long64_tGetWaitTime(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFilePrefetch.html:2562,Hash,Hash,2562,root/html534/TFilePrefetch.html,https://root.cern,https://root.cern/root/html534/TFilePrefetch.html,1,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBlockFromCache(const char*, Int_t); TCondition*GetCondNewBlock() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFPBlock*GetPendingBlock(); TThread*GetThread() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Long64_tGetWaitTime(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFilePrefetch.html:2502,Hash,Hash,2502,root/html602/TFilePrefetch.html,https://root.cern,https://root.cern/root/html602/TFilePrefetch.html,2,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetBench(const char* name) const; Float_tGetCpuTime(const char* name); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_tGetRealTime(const char* name); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBenchmark.html:2418,Hash,Hash,2418,root/html526/TBenchmark.html,https://root.cern,https://root.cern/root/html526/TBenchmark.html,2,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetBench(const char* name) const; Float_tGetCpuTime(const char* name); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_tGetRealTime(const char* name); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBenchmark.html:2418,Hash,Hash,2418,root/html530/TBenchmark.html,https://root.cern,https://root.cern/root/html530/TBenchmark.html,3,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetBench(const char* name) const; Float_tGetCpuTime(const char* name); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_tGetRealTime(const char* name); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBenchmark.html:2351,Hash,Hash,2351,root/html602/TBenchmark.html,https://root.cern,https://root.cern/root/html602/TBenchmark.html,2,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetPort() const; Int_tGetProtocol() const; virtual const char*TObject::GetTitle() const; Int_tGetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSecContextCleanup.html:2408,Hash,Hash,2408,root/html528/TSecContextCleanup.html,https://root.cern,https://root.cern/root/html528/TSecContextCleanup.html,1,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetPort() const; Int_tGetProtocol() const; virtual const char*TObject::GetTitle() const; Int_tGetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSecContextCleanup.html:2408,Hash,Hash,2408,root/html530/TSecContextCleanup.html,https://root.cern,https://root.cern/root/html530/TSecContextCleanup.html,3,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetPort() const; Int_tGetProtocol() const; virtual const char*TObject::GetTitle() const; Int_tGetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSecContextCleanup.html:2328,Hash,Hash,2328,root/html602/TSecContextCleanup.html,https://root.cern,https://root.cern/root/html602/TSecContextCleanup.html,2,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; voidGetPosition(Float_t& longitude, Float_t& latitude, Float_t& psi); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; voidIconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); virtual voidTVirtualViewer3D::ObjectPaint(TObject*, Option_t* = """"); virtual Bool_tOpenComposite(const TBuffer3D&, Bool_t* = 0); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TViewerX3D.html:3027,Hash,Hash,3027,root/html528/TViewerX3D.html,https://root.cern,https://root.cern/root/html528/TViewerX3D.html,1,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; voidGetPosition(Float_t& longitude, Float_t& latitude, Float_t& psi); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; voidIconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); virtual voidTVirtualViewer3D::ObjectPaint(TObject*, Option_t* = """"); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Bool_tOpenComposite(const TBuffer3D&, Bool_t* = 0); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TViewerX3D.html:3027,Hash,Hash,3027,root/html530/TViewerX3D.html,https://root.cern,https://root.cern/root/html530/TViewerX3D.html,3,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; voidGetPosition(Float_t& longitude, Float_t& latitude, Float_t& psi); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; voidIconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); virtual voidTVirtualViewer3D::ObjectPaint(TObject*, Option_t* = """"); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Bool_tOpenComposite(const TBuffer3D&, Bool_t* = 0); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TViewerX3D.html:2753,Hash,Hash,2753,root/html602/TViewerX3D.html,https://root.cern,https://root.cern/root/html602/TViewerX3D.html,2,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Bool_tfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tinitialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Bool_tmerge(RooStats::SamplingDistribution& result); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__ToyMCStudy.html:2336,Hash,Hash,2336,root/html528/RooStats__ToyMCStudy.html,https://root.cern,https://root.cern/root/html528/RooStats__ToyMCStudy.html,1,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Bool_tfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tinitialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Bool_tmerge(RooStats::SamplingDistribution& result); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__ToyMCStudy.html:2435,Hash,Hash,2435,root/html530/RooStats__ToyMCStudy.html,https://root.cern,https://root.cern/root/html530/RooStats__ToyMCStudy.html,2,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Bool_tfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tinitialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooDataSet*merge(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__ToyMCStudy.html:2435,Hash,Hash,2435,root/html534/RooStats__ToyMCStudy.html,https://root.cern,https://root.cern/root/html534/RooStats__ToyMCStudy.html,1,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Bool_tfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tinitialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooDataSet*merge(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__ToyMCStudy.html:2435,Hash,Hash,2435,root/html602/RooStats__ToyMCStudy.html,https://root.cern,https://root.cern/root/html602/RooStats__ToyMCStudy.html,2,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Bool_tfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tinitialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsStudy.html:2464,Hash,Hash,2464,root/html526/RooAbsStudy.html,https://root.cern,https://root.cern/root/html526/RooAbsStudy.html,4,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Bool_tfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tinitialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsStudy.html:2562,Hash,Hash,2562,root/html530/RooAbsStudy.html,https://root.cern,https://root.cern/root/html530/RooAbsStudy.html,6,['Hash'],['Hash']
Security,"rtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Bool_tfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tinitialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsStudy.html:2562,Hash,Hash,2562,root/html602/RooAbsStudy.html,https://root.cern,https://root.cern/root/html602/RooAbsStudy.html,4,['Hash'],['Hash']
Security,"rtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidSetAttributes(const TString& attributes); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); Bool_tSetChecksum(const TString& checksum); voidSetCode(const TString& code); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetEmbed(Bool_t embed); Bool_tSetFromRule(const char* rule); voidSetInclude(const TString& include); static voidTObject::SetObjectStat(Bool_t stat); voidSetReadFunctionPointer(ROOT::TSchemaRule::ReadFuncPtr_t ptr); voidSetReadRawFunctionPointer(ROOT::TSchemaRule::ReadRawFuncPtr_t ptr); voidSetRuleType(ROOT::TSchemaRule::RuleType_t type); voidSetSource(const TString& source); voidSetSourceClass(const TString& classname); voidSetTarget(const TString& target); voidSetTargetClass(const TString& classname); virtual voidTObject::SetUniqueID(UInt_t uid); Bool_tSetVersion(const TString& version); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTestChecksum(UInt_t checksum) const; Bool_tTestVersion(Int_t version) const; ROOT::TSchemaRuleTSchemaRule(); ROOT::TSchemaRuleTSchemaRule(const ROOT::TSchemaRule& rhs); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__TSchemaRule.html:5820,checksum,checksum,5820,root/html530/ROOT__TSchemaRule.html,https://root.cern,https://root.cern/root/html530/ROOT__TSchemaRule.html,2,['checksum'],['checksum']
Security,"rtual void SetHistogram (TH1 *h)=0;  ; virtual void SetShowProjection (const char *option, Int_t nbins)=0;  ; virtual void SetShowProjectionXY (const char *option, Int_t nbinsY, Int_t nbinsX)=0;  ; virtual void SetStack (TList *stack)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualHistPainter.html:2548,Hash,Hash,2548,doc/master/classTVirtualHistPainter.html,https://root.cern,https://root.cern/doc/master/classTVirtualHistPainter.html,2,['Hash'],['Hash']
Security,"rtual void SetOption (Option_t *option="""")=0;  ; virtual Int_t SetPoint (Int_t point, Float_t x, Float_t y, Float_t z)=0;  ; virtual Int_t SetPoints (Int_t n, Float_t *p=nullptr, Option_t *option="""")=0;  ; virtual Int_t Size () const =0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPoints3DABC.html:2930,Hash,Hash,2930,doc/master/classTPoints3DABC.html,https://root.cern,https://root.cern/doc/master/classTPoints3DABC.html,2,['Hash'],['Hash']
Security,"rtualGeoPainter::GeoPainter(); virtual voidGetBombFactors(Double_t& bombx, Double_t& bomby, Double_t& bombz, Double_t& bombr) const; virtual Int_tGetBombMode() const; virtual TGeoNode*GetCheckedNode(); TGeoChecker*GetChecker(); virtual Int_tGetColor(Int_t base, Float_t light) const; virtual TGeoVolume*GetDrawnVolume() const; virtual Option_t*TObject::GetDrawOption() const; virtual const char*GetDrawPath() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNsegments() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual TGeoVolume*GetTopVolume() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidGetViewAngles(Double_t& longitude, Double_t& latitude, Double_t& psi); virtual Double_t*GetViewBox(); virtual Int_tGetVisLevel() const; virtual Int_tGetVisOption() const; virtual const char*GetVolumeInfo(const TGeoVolume* volume, Int_t px, Int_t py) const; virtual voidGrabFocus(Int_t nfr = 0, Double_t dlong = 0, Double_t dlat = 0, Double_t dpsi = 0); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsExplodedView() const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsPaintingShape() const; virtual Bool_tIsRaytracing() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual TH2F*LegoPlot(Int_t ntheta = 60, Double_t themin = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPainter.html:5050,Hash,Hash,5050,root/html528/TGeoPainter.html,https://root.cern,https://root.cern/root/html528/TGeoPainter.html,6,['Hash'],['Hash']
Security,"rtual_b);  ; virtual Int_t WritePDGTable (const char *filename);  write contents of the particle DB into a file ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDatabasePDG.html:4069,Hash,Hash,4069,doc/master/classTDatabasePDG.html,https://root.cern,https://root.cern/doc/master/classTDatabasePDG.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"rtyvirtual Long_t BaseClassInfo_Property(BaseClassInfo_t *) constDefinition TInterpreter.h:447; TInterpreter::CallFunc_ExecDoublevirtual Double_t CallFunc_ExecDouble(CallFunc_t *, void *) constDefinition TInterpreter.h:321; TInterpreter::CallFunc_SetArgvirtual void CallFunc_SetArg(CallFunc_t *, Long_t) const =0; TInterpreter::GetInterfaceMethodvirtual void * GetInterfaceMethod(TClass *cl, const char *method, const char *params, Bool_t objectIsConst=kFALSE)=0; TInterpreter::GetCurrentMacroNamevirtual const char * GetCurrentMacroName() constDefinition TInterpreter.h:257; TInterpreter::Executevirtual void Execute(TObject *obj, TClass *cl, const char *method, const char *params, int *error=nullptr)=0; TInterpreter::TypeNamevirtual const char * TypeName(const char *s)=0; TListOfEnumsA collection of TEnum objects designed for fast access given a DeclId_t and for keep track of TEnum t...Definition TListOfEnums.h:33; TLockGuardDefinition TVirtualMutex.h:70; TMemberInspectorAbstract base class for accessing the data-members of a class.Definition TMemberInspector.h:31; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TObjArrayAn array of TObjects.Definition TObjArray.h:31; TObjectMother of all ROOT objects.Definition TObject.h:41; TSeqCollectionSequenceable collection abstract base class.Definition TSeqCollection.h:28; TStringBasic string class.Definition TString.h:139; TVirtualMutexThis class implements a mutex interface.Definition TVirtualMutex.h:32; bool; double; int; unsigned int; lineTLine * lineDefinition entrylistblock_figure1.C:235; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::gCoreMutexR__EXTERN TVirtualRWMutex * gCoreMutexDefinition TVirtualRWMutex.h:37; ROOT::EFunctionMatchModeEFunctionMatchModeDefinition TDictionary.h:161; ROOT::kC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TInterpreter_8h_source.html:80065,access,accessing,80065,doc/master/TInterpreter_8h_source.html,https://root.cern,https://root.cern/doc/master/TInterpreter_8h_source.html,1,['access'],['accessing']
Security,"ructor Documentation. ◆ RPad() [1/3]. ROOT::Experimental::RPad::RPad ; (; ). inlineprivate . Create default pad. ; Definition at line 36 of file RPad.hxx. ◆ RPad() [2/3]. ROOT::Experimental::RPad::RPad ; (; const RPadPos & ; pos, . const RPadExtent & ; size . ). inlineprivate . Create a pad. ; Definition at line 39 of file RPad.hxx. ◆ RPad() [3/3]. ROOT::Experimental::RPad::RPad ; (; TRootIOCtor * ; ). inline . Constructor must be used only for I/O. ; Definition at line 58 of file RPad.hxx. ◆ ~RPad(). ROOT::Experimental::RPad::~RPad ; (; ). overridedefault . Destructor to have a vtable. . Member Function Documentation. ◆ Display(). std::unique_ptr< RDisplayItem > RPad::Display ; (; const RDisplayContext & ; ctxt). finalprotectedvirtual . Create pad display item. ; Reimplemented from ROOT::Experimental::RDrawable.; Definition at line 27 of file RPad.cxx. ◆ GetCanvas() [1/2]. const RCanvas * ROOT::Experimental::RPad::GetCanvas ; (; ); const. inlineoverridevirtual . Access to the top-most canvas (const version). ; Implements ROOT::Experimental::RPadBase.; Definition at line 70 of file RPad.hxx. ◆ GetCanvas() [2/2]. RCanvas * ROOT::Experimental::RPad::GetCanvas ; (; ). inlineoverridevirtual . Access to the top-most canvas (non-const version). ; Implements ROOT::Experimental::RPadBase.; Definition at line 73 of file RPad.hxx. ◆ GetParent() [1/2]. RPadBase * ROOT::Experimental::RPad::GetParent ; (; ). inline . Access to the parent pad (non-const version). ; Definition at line 67 of file RPad.hxx. ◆ GetParent() [2/2]. const RPadBase * ROOT::Experimental::RPad::GetParent ; (; ); const. inline . Access to the parent pad (const version). ; Definition at line 64 of file RPad.hxx. ◆ GetPos(). const RPadPos & ROOT::Experimental::RPad::GetPos ; (; ); const. inline . Get the position of the pad in parent (!) coordinates. ; Definition at line 76 of file RPad.hxx. ◆ GetSize(). const RPadExtent & ROOT::Experimental::RPad::GetSize ; (; ); const. inline . Get the size of the pad in pare",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPad.html:7864,Access,Access,7864,doc/master/classROOT_1_1Experimental_1_1RPad.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPad.html,1,['Access'],['Access']
Security,"ructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); UChar_tRooAbsCategory::_byteValue! Transient cache for byte values from tree branches; deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; TIterator*_catIter! Iterator over set of input categories; RooSetProxy_catSetSet of input category; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooSuperCategory.html:23158,access,access,23158,root/html534/RooSuperCategory.html,https://root.cern,https://root.cern/root/html534/RooSuperCategory.html,1,['access'],['access']
Security,"rue. ;  ; void MapKeySym (UInt_t &keysym, UInt_t &xkeysym, Bool_t tox=kTRUE);  Map to and from X key symbols. ;  ; void MapModifierState (UInt_t &state, UInt_t &xstate, Bool_t tox=kTRUE);  Map modifier key state to or from X. ;  ; void MapSetWindowAttributes (SetWindowAttributes_t *attr, ULong_t &xmask, GdkWindowAttr &xattr);  Map a SetWindowAttributes_t to a GdkWindowAttr structure. ;  ; void PutImage (Int_t offset, Int_t itran, Int_t x0, Int_t y0, Int_t nx, Int_t ny, Int_t xmin, Int_t ymin, Int_t xmax, Int_t ymax, UChar_t *image, Drawable_t id);  Draw image. ;  ; void RemovePixmap (GdkDrawable *pix);  Remove the pixmap pix. ;  ; void RenderString (Int_t x, Int_t y, ETextMode mode);  Perform the string rendering in the pad. ;  ; void SetColor (GdkGC *gc, Int_t ci);  Set the foreground color in GdkGC. ;  ; void SetInput (Int_t inp);  Set input on or off. ;  ; void SetMarkerType (Int_t type, Int_t n, GdkPoint *xy);  Set marker type. ;  . Private Attributes; FT_Vector fAlign;  alignment vector ;  ; TExMap * fColors;  Hash list of colors. ;  ; GdkCursor * fCursors [kNumCursors];  List of cursors. ;  ; Int_t fMaxNumberOfWindows;  Maximum number of windows. ;  ; XWindow_t * fWindows;  List of windows. ;  . Additional Inherited Members;  Public Types inherited from TVirtualX; enum  EBoxMode { kHollow; , kFilled; };  ; enum  EDrawMode { kCopy = 1; , kXor; , kInvert; };  ; enum  ETextMode { kClear; , kOpaque; };  ; enum  ETextSetMode { kCheck; , kLoad; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32.html:50983,Hash,Hash,50983,doc/master/classTGWin32.html,https://root.cern,https://root.cern/doc/master/classTGWin32.html,1,['Hash'],['Hash']
Security,"runeStrength(Float_t alpha = -1.). Data Members; private:. Float_tfAlpha! regularization parameter in CC pruning; Bool_tfDebug! debug flag; Int_tfOptimalK! index of the optimal tree in the pruned tree sequence; Bool_tfOwnQIndex! flag indicates if fQualityIndex is owned by this; vector<TMVA::DecisionTreeNode*>fPruneSequence! map of weakest links (i.e., branches to prune) -> pruning index; vector<Float_t>fPruneStrengthList! map of alpha -> pruning index; TMVA::SeparationBase*fQualityIndex! the quality index used to calculate R(t), R(T) = sum[t in ~T]{ R(t) }; vector<Float_t>fQualityIndexList! map of R(T) -> pruning index; TMVA::DecisionTree*fTree! (pruned) decision tree; const TMVA::DataSet*fValidationDataSet! the event sample to select the optimally-pruned tree; const TMVA::CCPruner::EventList*fValidationSample! the event sample to select the optimally-pruned tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CCPruner( DecisionTree* t_max, const EventList* validationSample, SeparationBase* qualityIndex ); constructor. CCPruner( DecisionTree* t_max, const DataSet* validationSample, SeparationBase* qualityIndex ); constructor. ~CCPruner(). void Optimize(); determine the pruning sequence. std::vector<DecisionTreeNode*> GetOptimalPruneSequence() const; return the prune strength (=alpha) corresponding to the prune sequence. void SetPruneStrength(Float_t alpha = -1.). CCPruner( DecisionTree* t_max, const EventList* validationSample, SeparationBase* qualityIndex = NULL ). Float_t GetOptimalQualityIndex() const; return the quality index from the validation sample for the optimal subtree T'. Float_t GetOptimalPruneStrength() const; return the prune strength (=alpha) corresponding to the prune sequence. » Last changed: Tue Jun 30 15:15:17 2015 » Last generated: 2015-06-30 15:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__CCPruner.html:1890,validat,validationSample,1890,root/html602/TMVA__CCPruner.html,https://root.cern,https://root.cern/root/html602/TMVA__CCPruner.html,4,['validat'],"['validation', 'validationSample']"
Security,"rver of owner; Bool_tRooArgProxy::_valueServerIf true contents is value server of owner; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooCategoryProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t valueServer = kTRUE, Bool_t shapeServer = kFALSE, Bool_t proxyOwnsArg = kFALSE); Constructor with owner and proxied category object. RooCategoryProxy(const char* name, const char* desc, RooAbsArg* owner, RooAbsCategory& ref, Bool_t valueServer = kTRUE, Bool_t shapeServer = kFALSE, Bool_t proxyOwnsArg = kFALSE); Constructor with owner and proxied category object. RooCategoryProxy(const char* name, RooAbsArg* owner, const RooCategoryProxy& other); Copy constructor. ~RooCategoryProxy(); Destructor. RooAbsCategoryLValue* lvptr() const; Return RooAbsCategoryLValye pointer of contained object if; it is indeed an lvalue. Bool_t setArg(RooAbsCategory& newRef); Change object held in proxy into newRef. RooCategoryProxy(); Constructors, assignment etc. RooCategoryProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t valueServer = kTRUE, Bool_t shapeServer = kFALSE, Bool_t proxyOwnsArg = kFALSE). TObject* Clone(const char* newName = 0) const; { return new RooCategoryProxy(newName,_owner,*this); }. inline operator Int_t() const; Accessors. const char* label() const; Facilitates use of proxy as string value. const RooAbsCategory& arg() const; Return proxies argument. Bool_t hasRange(const char* rangeName) const; Returns true if proxied argument has range with given name. RooCategoryProxy& operator=(Int_t index); LValue operations. RooCategoryProxy& operator=(const char* _label); Assignment value with string value. » Last changed: Mon Dec 7 13:47:04 2009 » Last generated: 2009-12-07 13:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCategoryProxy.html:8735,Access,Accessors,8735,root/html526/RooCategoryProxy.html,https://root.cern,https://root.cern/root/html526/RooCategoryProxy.html,1,['Access'],['Accessors']
Security,"rver of owner; Bool_tRooArgProxy::_valueServerIf true contents is value server of owner; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooCategoryProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t valueServer = kTRUE, Bool_t shapeServer = kFALSE, Bool_t proxyOwnsArg = kFALSE); Constructor with owner and proxied category object. RooCategoryProxy(const char* name, const char* desc, RooAbsArg* owner, RooAbsCategory& ref, Bool_t valueServer = kTRUE, Bool_t shapeServer = kFALSE, Bool_t proxyOwnsArg = kFALSE); Constructor with owner and proxied category object. RooCategoryProxy(const char* name, RooAbsArg* owner, const RooCategoryProxy& other); Copy constructor. ~RooCategoryProxy(); Destructor. RooAbsCategoryLValue* lvptr() const; Return RooAbsCategoryLValye pointer of contained object if; it is indeed an lvalue. Bool_t setArg(RooAbsCategory& newRef); Change object held in proxy into newRef. RooCategoryProxy(); Constructors, assignment etc. RooCategoryProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t valueServer = kTRUE, Bool_t shapeServer = kFALSE, Bool_t proxyOwnsArg = kFALSE). TObject* Clone(const char* newName = 0) const; { return new RooCategoryProxy(newName,_owner,*this); }. inline operator Int_t() const; Accessors. const char* label() const; Facilitates use of proxy as string value. const RooAbsCategory& arg() const; Return proxies argument. Bool_t hasRange(const char* rangeName) const; Returns true if proxied argument has range with given name. RooCategoryProxy& operator=(Int_t index); LValue operations. RooCategoryProxy& operator=(const char* _label); Assignment value with string value. » Last changed: Mon Jul 4 15:22:25 2011 » Last generated: 2011-07-04 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCategoryProxy.html:8790,Access,Accessors,8790,root/html530/RooCategoryProxy.html,https://root.cern,https://root.cern/root/html530/RooCategoryProxy.html,1,['Access'],['Accessors']
Security,"rver of owner; Bool_tRooArgProxy::_valueServerIf true contents is value server of owner; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooCategoryProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t valueServer = kTRUE, Bool_t shapeServer = kFALSE, Bool_t proxyOwnsArg = kFALSE); Constructor with owner and proxied category object. RooCategoryProxy(const char* name, const char* desc, RooAbsArg* owner, RooAbsCategory& ref, Bool_t valueServer = kTRUE, Bool_t shapeServer = kFALSE, Bool_t proxyOwnsArg = kFALSE); Constructor with owner and proxied category object. RooCategoryProxy(const char* name, RooAbsArg* owner, const RooCategoryProxy& other); Copy constructor. ~RooCategoryProxy(); Destructor. RooAbsCategoryLValue* lvptr() const; Return RooAbsCategoryLValye pointer of contained object if; it is indeed an lvalue. Bool_t setArg(RooAbsCategory& newRef); Change object held in proxy into newRef. RooCategoryProxy(); Constructors, assignment etc. RooCategoryProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t valueServer = kTRUE, Bool_t shapeServer = kFALSE, Bool_t proxyOwnsArg = kFALSE). TObject* Clone(const char* newName = 0) const; { return new RooCategoryProxy(newName,_owner,*this); }. inline operator Int_t() const; Accessors. const char* label() const; Facilitates use of proxy as string value. const RooAbsCategory& arg() const; Return proxies argument. Bool_t hasRange(const char* rangeName) const; Returns true if proxied argument has range with given name. RooCategoryProxy& operator=(Int_t index); LValue operations. RooCategoryProxy& operator=(const char* _label); Assignment value with string value. » Last changed: Thu Nov 3 20:07:43 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCategoryProxy.html:8790,Access,Accessors,8790,root/html532/RooCategoryProxy.html,https://root.cern,https://root.cern/root/html532/RooCategoryProxy.html,1,['Access'],['Accessors']
Security,"ry and the subdirectory src. The first time TClassTree::Draw is invoked, all the classes in the; current application are processed, including the parsing of the code; to find all classes referenced by the include statements.; This process may take a few seconds. The following commands will be; much faster. A TClassTree object may be saved in a Root file.; This object can be processed later by a Root program that ignores; the original classes. This interesting possibility allows to send; the class structure of an application to a colleague who does not have; your classes.; Example:; TFile f(""myClasses.root"",""recreate""); TClassTree *ct = new TClassTree(""ct"",""ATLF*""); ct->Write();; You can send at this point the file myClass.root to a colleague who can; run the following Root basic session; TFile f(""myClass.root""); //connect the file; tt.ls(); //to list all classes and titles; tt.Draw(""ATLFDisplay"") //show class ATLFDisplay with all its dependencies; At this point, one has still access to all the classes present; in the original session and select any combination of these classes; to be displayed. Function Members (Methods); public:. TClassTree(); TClassTree(const TClassTree&); TClassTree(const char* name, const char* classes = """"); virtual~TClassTree(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(const char* classes = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClassTree.html:4482,access,access,4482,root/html526/TClassTree.html,https://root.cern,https://root.cern/root/html526/TClassTree.html,5,['access'],['access']
Security,"ry and the subdirectory src. The first time TClassTree::Draw is invoked, all the classes in the; current application are processed, including the parsing of the code; to find all classes referenced by the include statements.; This process may take a few seconds. The following commands will be; much faster. A TClassTree object may be saved in a Root file.; This object can be processed later by a Root program that ignores; the original classes. This interesting possibility allows to send; the class structure of an application to a colleague who does not have; your classes.; Example:; TFile f(""myClasses.root"",""recreate""); TClassTree *ct = new TClassTree(""ct"",""ATLF*""); ct->Write();; You can send at this point the file myClass.root to a colleague who can; run the following Root basic session; TFile f(""myClass.root""); //connect the file; tt.ls(); //to list all classes and titles; tt.Draw(""ATLFDisplay"") //show class ATLFDisplay with all its dependencies; At this point, one has still access to all the classes present; in the original session and select any combination of these classes; to be displayed. Function Members (Methods); public:. virtual~TClassTree(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(const char* classes = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClassTree.html:4482,access,access,4482,root/html602/TClassTree.html,https://root.cern,https://root.cern/root/html602/TClassTree.html,2,['access'],['access']
Security,"ry associated with this file are automatically deleted. Labelling axes; Axis titles can be specified in the title argument of the constructor. They must be separated by "";"": TH1F* h=new TH1F(""h"", ""Histogram title;X Axis;Y Axis"", 100, 0, 1);; The histogram title and the axis titles can be any TLatex string, and are persisted if a histogram is written to a file.; Any title can be omitted: TH1F* h=new TH1F(""h"", ""Histogram title;;Y Axis"", 100, 0, 1);; TH1F* h=new TH1F(""h"", "";;Y Axis"", 100, 0, 1);; The method SetTitle() has the same syntax: h->SetTitle(""Histogram title;Another X title Axis"");; Alternatively, the title of each axis can be set directly: h->GetXaxis()->SetTitle(""X axis title"");; h->GetYaxis()->SetTitle(""Y axis title"");; For bin labels see binning. Binning. Fix or variable bin size; All histogram types support either fix or variable bin sizes. 2-D histograms may have fix size bins along X and variable size bins along Y or vice-versa. The functions to fill, manipulate, draw or access histograms are identical in both cases.; Each histogram always contains 3 axis objects of type TAxis: fXaxis, fYaxis and fZaxis. To access the axis parameters, use: TAxis *xaxis = h->GetXaxis(); etc.; Double_t binCenter = xaxis->GetBinCenter(bin), etc.; TAxisClass to manage histogram axis.Definition TAxis.h:31; TAxis::GetBinCentervirtual Double_t GetBinCenter(Int_t bin) constReturn center of bin.Definition TAxis.cxx:478; See class TAxis for a description of all the access functions. The axis range is always stored internally in double precision. Convention for numbering bins; For all histogram types: nbins, xlow, xup bin = 0; underflow bin; bin = 1; first bin with low-edge xlow INCLUDED; bin = nbins; last bin with upper-edge xup EXCLUDED; bin = nbins+1; overflow bin; In case of 2-D or 3-D histograms, a ""global bin"" number is defined. For example, assuming a 3-D histogram with (binx, biny, binz), the function Int_t gbin = h->GetBin(binx, biny, binz);; int; returns a global/lineari",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:6721,access,access,6721,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['access'],['access']
Security,"ry in the user_buffer will be shared with the returned TBasket. ; Definition at line 1226 of file TBranch.cxx. ◆ GetBasketSeek(). Long64_t TBranch::GetBasketSeek ; (; Int_t ; basket); const. virtual . Return address of basket in the file. ; Definition at line 1302 of file TBranch.cxx. ◆ GetBasketSize(). virtual Int_t TBranch::GetBasketSize ; (; ); const. inlinevirtual . Definition at line 217 of file TBranch.h. ◆ GetBrowsables(). TList * TBranch::GetBrowsables ; (; ). virtual . Returns (and, if 0, creates) browsable objects for this branch See TVirtualBranchBrowsable::FillListOfBrowsables. ; Definition at line 1312 of file TBranch.cxx. ◆ GetBulkEntries(). Int_t TBranch::GetBulkEntries ; (; Long64_t ; entry, . TBuffer & ; user_buf . ). private . Read a basket of events into the given buffer with byte swapping. ; ReturnsOn success, the number of events of the type held by this branch that have been read into the buffer. -1 on failure.; On success, the caller should be able to access the contents of buf as they are with:; static_cast<T*>(buf.GetCurrent()); where T is the type stored on this branch.; When count_buf points to a valid TBuffer and the branch has a branch count, count_buf will be filled (via a call to GetEntriesSerialized) with the data from the branchCount. After deserialization those value can be used to calculate the number of elements corresponding to each entries.; For each entry the number of elements is the multiplication of; TLeaf *leaf = static_cast<TLeaf*>(branch->GetListOfLeaves()->At(0));; auto len = leaf->GetLen();; lenOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranch.html:42730,access,access,42730,doc/master/classTBranch.html,https://root.cern,https://root.cern/doc/master/classTBranch.html,1,['access'],['access']
Security,"ry inheritance); by many other classes (graphics, histograms). It holds all the markers; attributes.; Marker attributes; The marker attributes are:. Marker color.; Marker style.; Marker size. Marker color; The marker color is a color index (integer) pointing in the ROOT color; table.; The marker color of any class inheriting from TAttMarker can; be changed using the method SetMarkerColor and retrieved using the; method GetMarkerColor.; The following table shows the first 50 default colors. Picture; Source. {; TCanvas *c = new TCanvas(""c"",""Marker colors"",0,0,500,200);; c.DrawColorTable();; return c;; }. Marker style; The Marker style defines the markers' shape.; The marker style of any class inheriting from TAttMarker can; be changed using the method SetMarkerStyle and retrieved using the; method GetMarkerStyle.; The following list gives the currently supported markers (screen; and PostScript) style. Each marker style is identified by an integer number; (first column) corresponding to a marker shape (second column) and can be also; accessed via a global name (third column). Marker number Marker shape Marker name; 1 dot kDot; 2 + kPlus; 3 * kStar; 4 o kCircle; 5 x kMultiply; 6 small dot kFullDotSmall; 7 medium dot kFullDotMedium; 8 large scalable dot kFullDotLarge; 9 -->19 large scalable dot; 20 full circle kFullCircle; 21 full square kFullSquare; 22 full triangle up kFullTriangleUp; 23 full triangle down kFullTriangleDown; 24 open circle kOpenCircle; 25 open square kOpenSquare; 26 open triangle up kOpenTriangleUp; 27 open diamond kOpenDiamond; 28 open cross kOpenCross; 29 full star kOpenStar; 30 open star kFullStar; 31 *; 32 open triangle down; 33 full diamond; 34 full cross. Picture; Source. {; TCanvas *c = new TCanvas(""c"",""Marker types"",0,0,500,200);; TMarker marker;; marker.DisplayMarkerTypes();; return c;; }. Marker size; Various marker sizes are shown in the figure below. The default marker size=1; is shown in the top left corner. Marker sizes smaller than 1 can ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TAttMarker.html:1388,access,accessed,1388,root/html530/TAttMarker.html,https://root.cern,https://root.cern/root/html530/TAttMarker.html,2,['access'],['accessed']
Security,"ry plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract class describing PROOF resources; TProofResourcesStatic Class to handle PROOF static config; TProofServ PROOF Server Application Interface; TProofServLite Local worker PROOF Server Application Interface; TProofSuperMaster PROOF control class for making submasters; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> Class describing a vector container; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> Class describing a vector container; TPyDispatcher Python dispatcher class; TPyReturn Python morphing return object; TPySelector Python equivalent base class for PROOF; TPythia6 Interface to Pythia6.1 Event Generator; TPythia6Decayer Particle Decayer Base Class; TPythia8 Interface class of Pythia8; TPythia8Decayer Particle Decayer using Pythia8; TPython Access to the python interpreter; TQApplication creates ROOT environement with the Qt windowing system; TQCanvasImp ABC describing Qt GUI independent main window; TQCanvasMenu interface to Qt based context sensitive popup menus; TQClass Class with connections; TQCommand encapsulates the information for undo/redo a single action.; TQConnection Internal class used in the object communication mechanism; TQMimeTypes Pool of mime type objects; TQObjSender Used to ""delegate"" TQObject functionality; TQObject Base class for object communication mechanism; TQRootApplication creates Qt environement interface with the ROOT windowing system; TQRootCanvas interface to Qt eventloop to handle user input; TQRootDialog prompt for the arguments of an object's member function; TQRootGuiFactory Qt ROOT Gui factory; TQUndoManager recorder of operations for undo and redo; TQpDataBase Qp Base Data class; TQpDataDens Qp Data class for Dens formulation; TQpDataSparse Qp Data class for Sparse formulation; TQpLinSolverBase Qp linear solver base class; TQpLinSolverDens Qp linear solver class for De",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:110710,Access,Access,110710,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,2,['Access'],['Access']
Security,"ry.h:168; TDictionary::EMemberSelectionEMemberSelectionKinds of members to include in lists.Definition TDictionary.h:216; TDictionary::EMemberSelection::kNoUsingDecls@ kNoUsingDecls; TDictionary::EMemberSelection::kOnlyUsingDecls@ kOnlyUsingDecls; TDictionary::DeclId_tconst void * DeclId_tDefinition TDictionary.h:224; TDumpMembersDefinition TClass.cxx:554; TDumpMembers::Inspectvoid Inspect(TClass *cl, const char *parent, const char *name, const void *addr, Bool_t isTransient) overridePrint value of member mname.Definition TClass.cxx:574; TDumpMembers::TDumpMembersTDumpMembers(bool noAddr)Definition TClass.cxx:557; TDumpMembers::fNoAddrbool fNoAddrDefinition TClass.cxx:555; TEnum::GetEnumstatic TEnum * GetEnum(const std::type_info &ti, ESearchAction sa=kALoadAndInterpLookup)Definition TEnum.cxx:175; TEnum::kNone@ kNoneDefinition TEnum.h:48; TExMapThis class stores a (key,value) pair using an external hash.Definition TExMap.h:33; TExMap::GetValueLong64_t GetValue(ULong64_t hash, Long64_t key)Return the value belonging to specified key and hash value.Definition TExMap.cxx:174; TExMap::AddAtvoid AddAt(UInt_t slot, ULong64_t hash, Long64_t key, Long64_t value)Add an (key,value) pair to the table.Definition TExMap.cxx:117; TFunctionTemplateDictionary for function template This class describes one single function template.Definition TFunctionTemplate.h:26; TFunctionGlobal functions class (global functions are obtained from CINT).Definition TFunction.h:30; TFunction::GetNargsInt_t GetNargs() constNumber of function arguments.Definition TFunction.cxx:174; THashTableTHashTable implements a hash table to store TObject's.Definition THashTable.h:35; THashTable::Addvoid Add(TObject *obj) overrideAdd object to the hash table.Definition THashTable.cxx:92; THashTable::GetListForObjectconst TList * GetListForObject(const char *name) constReturn the TList corresponding to object's name based hash value.Definition THashTable.cxx:268; THashTable::RemoveTObject * Remove(TObject *obj) ove",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:348988,hash,hash,348988,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,2,['hash'],['hash']
Security,"ry.h:168; TDictionary::EMemberSelectionEMemberSelectionKinds of members to include in lists.Definition TDictionary.h:216; TDictionary::EMemberSelection::kNoUsingDecls@ kNoUsingDecls; TDictionary::EMemberSelection::kOnlyUsingDecls@ kOnlyUsingDecls; TDictionary::DeclId_tconst void * DeclId_tDefinition TDictionary.h:224; TDumpMembersDefinition TClass.cxx:621; TDumpMembers::Inspectvoid Inspect(TClass *cl, const char *parent, const char *name, const void *addr, Bool_t isTransient) overridePrint value of member mname.Definition TClass.cxx:641; TDumpMembers::TDumpMembersTDumpMembers(bool noAddr)Definition TClass.cxx:624; TDumpMembers::fNoAddrbool fNoAddrDefinition TClass.cxx:622; TEnum::GetEnumstatic TEnum * GetEnum(const std::type_info &ti, ESearchAction sa=kALoadAndInterpLookup)Definition TEnum.cxx:175; TEnum::kNone@ kNoneDefinition TEnum.h:48; TExMapThis class stores a (key,value) pair using an external hash.Definition TExMap.h:33; TExMap::GetValueLong64_t GetValue(ULong64_t hash, Long64_t key)Return the value belonging to specified key and hash value.Definition TExMap.cxx:174; TExMap::AddAtvoid AddAt(UInt_t slot, ULong64_t hash, Long64_t key, Long64_t value)Add an (key,value) pair to the table.Definition TExMap.cxx:117; TFunctionTemplateDictionary for function template This class describes one single function template.Definition TFunctionTemplate.h:26; TFunctionGlobal functions class (global functions are obtained from CINT).Definition TFunction.h:30; TFunction::GetNargsInt_t GetNargs() constNumber of function arguments.Definition TFunction.cxx:174; THashTableTHashTable implements a hash table to store TObject's.Definition THashTable.h:35; THashTable::Addvoid Add(TObject *obj) overrideAdd object to the hash table.Definition THashTable.cxx:92; THashTable::GetListForObjectconst TList * GetListForObject(const char *name) constReturn the TList corresponding to object's name based hash value.Definition THashTable.cxx:268; THashTable::RemoveTObject * Remove(TObject *obj) ove",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:351626,hash,hash,351626,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,2,['hash'],['hash']
Security,"s ();  Delete internal trees. ;  ; virtual void LoadTrees ();  Load internal trees from directory. ;  ; virtual void SetBranchAddresses ();  Set branche addresses of internal trees. ;  ; virtual void SetDirectory (TDirectory *dir);  Set directory in which the trees are (or will be) created. ;  ; virtual void WriteTrees ();  Does nothing here ... reimplemented in sub-classes. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveVSD.html:1732,Hash,Hash,1732,doc/master/classROOT_1_1Experimental_1_1REveVSD.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveVSD.html,2,['Hash'],['Hash']
Security,"s (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue; TIterator*_coefIter! do not persist; RooListProxy_coefList; Bool_tRooAbsArg::_deleteWatch! Delete watch flag; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches; Bool_tRooAbsArg::_isConstant! Cached isConstant status; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; Int_t_lowestOrder; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooPolynomial.html:41947,access,access,41947,root/html602/RooPolynomial.html,https://root.cern,https://root.cern/root/html602/RooPolynomial.html,2,['access'],['access']
Security,"s * in the first field (in the case 'href' is a name, ie not IP address) Returns kTRUE if the two matches. ; Definition at line 1440 of file TAuthenticate.cxx. ◆ CheckNetrc() [1/2]. Bool_t TAuthenticate::CheckNetrc ; (; TString & ; user, . TString & ; passwd . ). Try to get user name and passwd from the ~/.rootnetrc or ~/.netrc files. ; For more info see the version with 4 arguments. This version is maintained for backward compatability reasons. ; Definition at line 878 of file TAuthenticate.cxx. ◆ CheckNetrc() [2/2]. Bool_t TAuthenticate::CheckNetrc ; (; TString & ; user, . TString & ; passwd, . Bool_t & ; pwhash, . Bool_t ; srppwd . ). Try to get user name and passwd from the ~/.rootnetrc or ~/.netrc files. ; First ~/.rootnetrc is tried, after that ~/.netrc. These files will only be used when their access masks are 0600. Returns kTRUE if user and passwd were found for the machine specified in the URL. If kFALSE, user and passwd are """". The boolean pwhash is set to kTRUE if the returned passwd is to be understood as password hash, i.e. if the 'password-hash' keyword is found in the 'machine' lines; not implemented for 'secure' and the .netrc file. The format of these files are:. this is a comment line; machine <machine fqdn> login <user> password <passwd> machine <machine fqdn> login <user> password-hash <passwd>; and in addition ~/.rootnetrc also supports:; secure <machine fqdn> login <user> password <passwd>; <machine fqdn> may be a domain name or contain the wild card '*'.; for the secure protocols. All lines must start in the first column. ; Definition at line 908 of file TAuthenticate.cxx. ◆ CheckProofAuth(). Bool_t TAuthenticate::CheckProofAuth ; (; Int_t ; cSec, . TString & ; det . ). static . Check if the authentication method can be attempted for the client. ; Definition at line 3541 of file TAuthenticate.cxx. ◆ Class(). static TClass * TAuthenticate::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TAuthentic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAuthenticate.html:23574,password,password,23574,doc/master/classTAuthenticate.html,https://root.cern,https://root.cern/doc/master/classTAuthenticate.html,2,"['hash', 'password']","['hash', 'password']"
Security,"s * GetJobStatus () const =0;  ; virtual Int_t GetOutputSandbox (const char *localpath, Option_t *opt=nullptr);  Must be implemented by actual GRID job implementation. ;  ; TClass * IsA () const override;  ; virtual Bool_t Resubmit ()=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGridJob.html:1486,Hash,Hash,1486,doc/master/classTGridJob.html,https://root.cern,https://root.cern/doc/master/classTGridJob.html,2,['Hash'],['Hash']
Security,"s * IsA () const override;  ; virtual double operator() (const Double_t *x, const Double_t *p)=0;  ; virtual void SetParameters (const Double_t *params)=0;  ; virtual void SetRange (Double_t a, Double_t b)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update ()=0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1AbsComposition.html:1458,Hash,Hash,1458,doc/master/classTF1AbsComposition.html,https://root.cern,https://root.cern/doc/master/classTF1AbsComposition.html,2,['Hash'],['Hash']
Security,s ; Definition at line 153 of file Event.h. ◆ ClearDynamicVariables(). static void TMVA::Event::ClearDynamicVariables ; (; ). inlinestatic . Definition at line 122 of file Event.h. ◆ CopyVarValues(). void TMVA::Event::CopyVarValues ; (; const Event & ; other). copies only the variable values ; Definition at line 203 of file Event.cxx. ◆ DeclFileName(). static const char * TMVA::Event::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 153 of file Event.h. ◆ GetBoostWeight(). Double_t TMVA::Event::GetBoostWeight ; (; ); const. inline . Definition at line 85 of file Event.h. ◆ GetClass(). UInt_t TMVA::Event::GetClass ; (; ); const. inline . Definition at line 86 of file Event.h. ◆ GetNSpectators(). UInt_t TMVA::Event::GetNSpectators ; (; ); const. accessor to the number of spectators ; Definition at line 335 of file Event.cxx. ◆ GetNTargets(). UInt_t TMVA::Event::GetNTargets ; (; ); const. accessor to the number of targets ; Definition at line 327 of file Event.cxx. ◆ GetNVariables(). UInt_t TMVA::Event::GetNVariables ; (; ); const. accessor to the number of variables ; Definition at line 316 of file Event.cxx. ◆ GetOriginalWeight(). Double_t TMVA::Event::GetOriginalWeight ; (; ); const. inline . Definition at line 84 of file Event.h. ◆ GetSpectator(). Float_t TMVA::Event::GetSpectator ; (; UInt_t ; ivar); const. return spectator content ; Definition at line 261 of file Event.cxx. ◆ GetSpectators() [1/2]. std::vector< Float_t > & TMVA::Event::GetSpectators ; (; ). inline . Definition at line 107 of file Event.h. ◆ GetSpectators() [2/2]. const std::vector< Float_t > & TMVA::Event::GetSpectators ; (; ); const. inline . Definition at line 108 of file Event.h. ◆ GetTarget(). Float_t TMVA::Event::GetTarget ; (; UInt_t ; itgt); const. inline . Definition at line 102 of file Event.h. ◆ GetTargets() [1/2]. std::vector< Float_t > & TMVA::Event::GetTargets ; (; ). inline . Definition at line 103 of file Event.h. ◆ G,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Event.html:17026,access,accessor,17026,doc/master/classTMVA_1_1Event.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Event.html,1,['access'],['accessor']
Security,"s ;  . Friends; class RooFIterForLinkedList;  ; class RooLinkedListIterImpl;  ; template<class T > ; class RooSTLRefCountList;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . #include <RooLinkedList.h>. Inheritance diagram for RooLinkedList:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ HashTableByLink. using RooLinkedList::HashTableByLink = std::unordered_map<TObject const*,TObject const*>. protected . Definition at line 131 of file RooLinkedList.h. ◆ HashTableByName. using RooLinkedList::HashTableByName = std::unordered_map<std::string,TObject const*>. protected . Definition at line 130 of file RooLinkedList.h. ◆ Pool. typedef RooLinkedListImplDetails::Pool RooLinkedList::Pool. private . memory pool for quick allocation of RooLinkedListElems ; Definition at line 143 of file RooLinkedList.h. Constructor & Destructor Documentation. ◆ RooLinkedList() [1/2]. RooLinkedList::RooLinkedList ; (; Int_t ; htsize = 0). Definition at line 266 of file RooLinkedList.cxx. ◆ RooLinkedList() [2/2]. RooLinkedList::RooLinkedList ; (; const RooLinkedList & ; other). Copy constructor. ; Definition at line 276 of file RooLinkedList.cxx. ◆ ~RooLinkedList(). RooLinkedList::~RooLinkedList ; (; ). override . Destructor. ; Definition at line 365 of file RooLinkedList.cxx. Member Function Documentati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinkedList.html:14220,Hash,HashTableByLink,14220,doc/master/classRooLinkedList.html,https://root.cern,https://root.cern/doc/master/classRooLinkedList.html,1,['Hash'],['HashTableByLink']
Security,"s RootClass > . Short_t ROOT::SetClassVersion ; (; RootClass * ; ). ◆ StrReplace(). static void ROOT::StrReplace ; (; std::string & ; proc, . const std::string & ; pat, . const std::string & ; tr . ). static . Replace all accurances of given string with other string. ; Definition at line 731 of file RConversionRuleParser.cxx. ◆ ToHumanReadableSize(). template<typename value_type > . void ROOT::ToHumanReadableSize ; (; value_type ; bytes, . Bool_t ; si, . Double_t * ; coeff, . const char ** ; units . ). Return the size expressed in 'human readable' format. ; Parameters. bytesthe size in bytes to be converted ; siwhether to use the SI units or not. ; coeffreturn the size expressed in the new unit. ; unitsreturn a pointer to the string representation of the new unit . Definition at line 38 of file StringConv.hxx. ◆ ValidateRule(). static Bool_t ROOT::ValidateRule ; (; const std::map< std::string, std::string > & ; rule, . std::string & ; error_string . ). static . Validate if the user specified rules are correct. ; Definition at line 265 of file RConversionRuleParser.cxx. ◆ WriteAutoVariables(). static void ROOT::WriteAutoVariables ; (; const std::list< std::string > & ; target, . const SourceTypeList_t & ; source, . MembersTypeMap_t & ; members, . std::string & ; className, . std::string & ; mappedName, . std::ostream & ; output . ). static . Write down the sources. ; Definition at line 464 of file RConversionRuleParser.cxx. ◆ WriteReadRawRuleFunc(). void ROOT::WriteReadRawRuleFunc ; (; SchemaRuleMap_t & ; rule, . int ; index, . std::string & ; mappedName, . MembersTypeMap_t & ; members, . std::ostream & ; output . ). Write the conversion function for ReadRaw rule, the function name is being written to rule[""funcname""]. ; Definition at line 682 of file RConversionRuleParser.cxx. ◆ WriteReadRuleFunc(). void ROOT::WriteReadRuleFunc ; (; SchemaRuleMap_t & ; rule, . int ; index, . std::string & ; mappedName, . MembersTypeMap_t & ; members, . std::ostream & ; output . ). W",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v618/namespaceROOT.html:28104,Validat,Validate,28104,doc/v618/namespaceROOT.html,https://root.cern,https://root.cern/doc/v618/namespaceROOT.html,1,['Validat'],['Validate']
Security,"s RootClass > . Short_t ROOT::SetClassVersion ; (; RootClass * ; ). ◆ StrReplace(). static void ROOT::StrReplace ; (; std::string & ; proc, . const std::string & ; pat, . const std::string & ; tr . ). static . Replace all accurances of given string with other string. ; Definition at line 743 of file RConversionRuleParser.cxx. ◆ ToHumanReadableSize(). template<typename value_type > . void ROOT::ToHumanReadableSize ; (; value_type ; bytes, . Bool_t ; si, . Double_t * ; coeff, . const char ** ; units . ). Return the size expressed in 'human readable' format. ; Parameters. bytesthe size in bytes to be converted ; siwhether to use the SI units or not. ; coeffreturn the size expressed in the new unit. ; unitsreturn a pointer to the string representation of the new unit . Definition at line 38 of file StringConv.hxx. ◆ ValidateRule(). static Bool_t ROOT::ValidateRule ; (; const std::map< std::string, std::string > & ; rule, . std::string & ; error_string . ). static . Validate if the user specified rules are correct. ; Definition at line 277 of file RConversionRuleParser.cxx. ◆ WriteAutoVariables(). static void ROOT::WriteAutoVariables ; (; const std::list< std::string > & ; target, . const SourceTypeList_t & ; source, . MembersTypeMap_t & ; members, . std::string & ; className, . std::string & ; mappedName, . std::ostream & ; output . ). static . Write down the sources. ; Definition at line 476 of file RConversionRuleParser.cxx. ◆ WriteReadRawRuleFunc(). void ROOT::WriteReadRawRuleFunc ; (; SchemaRuleMap_t & ; rule, . int ; index, . std::string & ; mappedName, . MembersTypeMap_t & ; members, . std::ostream & ; output . ). Write the conversion function for ReadRaw rule, the function name is being written to rule[""funcname""]. ; Definition at line 694 of file RConversionRuleParser.cxx. ◆ WriteReadRuleFunc(). void ROOT::WriteReadRuleFunc ; (; SchemaRuleMap_t & ; rule, . int ; index, . std::string & ; mappedName, . MembersTypeMap_t & ; members, . std::ostream & ; output . ). W",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v620/namespaceROOT.html:28197,Validat,Validate,28197,doc/v620/namespaceROOT.html,https://root.cern,https://root.cern/doc/v620/namespaceROOT.html,3,['Validat'],['Validate']
Security,"s a callable that takes N arguments of type T, passes them down to function func as an initializer list {t1, t2, t3,..., tN} and returns whatever f({t1, t2, t3, ..., tN}) returns.; Note that for this to work with RDataFrame the type of all columns that the callable is applied to must be exactly T. Example usage together with RDataFrame (""varX"" columns must all be float variables): bool myVecFunc(std::vector<float> args);; df.Filter(PassAsVec<3, float>(myVecFunc), {""var1"", ""var2"", ""var3""});. Definition at line 103 of file RDFHelpers.hxx. ◆ RunGraphs(). unsigned int ROOT::RDF::RunGraphs ; (; std::vector< RResultHandle > ; handles). Trigger the event loop of multiple RDataFrames concurrently. ; Parameters. [in]handlesA vector of RResultHandles . ReturnsThe number of distinct computation graphs that have been processed; This function triggers the event loop of all computation graphs which relate to the given RResultHandles. The advantage compared to running the event loop implicitly by accessing the RResultPtr is that the event loops will run concurrently. Therefore, the overall computation of all results is generally more efficient. It should be noted that user-defined operations (e.g., Filters and Defines) of the different RDataFrame graphs are assumed to be safe to call concurrently.; ROOT::RDataFrame df1(""tree1"", ""file1.root"");; auto r1 = df1.Histo1D(""var1"");; ; ROOT::RDataFrame df2(""tree2"", ""file2.root"");; auto r2 = df2.Sum(""var2"");; ; // RResultPtr -> RResultHandle conversion is automatic; ROOT::RDF::RunGraphs({r1, r2});; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; ROOT::RDF::RunGraphsunsigned int RunGraphs(std::vector< RResultHandle > handles)Trigger the event loop of multiple RDataFrames concurrently.Definition RDFHelpers.cxx:66. Definition at line 66 of file RDFHelpers.cxx. ◆ SaveGraph() [1/2]. template<typename NodeType > . std::string ROOT::RDF::SaveGraph ; (; No",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1RDF.html:13832,access,accessing,13832,doc/master/namespaceROOT_1_1RDF.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1RDF.html,2,['access'],['accessing']
Security,"s a set; // of cloned objects, and all their clone (recursive) server; // dependencies, that together form a self-consistent; // set that is free of external dependencies; ; RooArgSet *sclone3 = (RooArgSet *)s3.snapshot(true);; ; // S e t p r i n t i n g; // ------------------------; ; // Inline printing only show list of names of contained objects; cout << ""sclone = "" << (*sclone) << endl;; ; // Plain print shows the same, prefixed by name of the set; sclone->Print();; ; // Standard printing shows one line for each item with the items name, class name and value; sclone->Print(""s"");; ; // Verbose printing adds each items arguments, address and 'extras' as defined by the object; sclone->Print(""v"");; ; // U s i n g R o o A r g L i s t s; // ---------------------------------; ; // List constructors exists with up to 9 initial arguments; RooArgList l(a, b, c, d);; ; // Lists have an explicit order and allow multiple arguments with the same name; l.add(RooArgList(a, b, c, d));; ; // Access by index is provided; RooAbsArg *arg4 = l.at(4);; }; d#define d(i)Definition RSha256.hxx:102; b#define b(i)Definition RSha256.hxx:100; c#define c(i)Definition RSha256.hxx:101; g#define g(i)Definition RSha256.hxx:105; a#define a(i)Definition RSha256.hxx:99; s1#define s1(x)Definition RSha256.hxx:91; e#define e(i)Definition RSha256.hxx:103; RooArgList.h; RooArgSet.h; RooCategory.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooRealVar.h; TAxis.h; TCanvas.h; RooAbsArgCommon abstract base class for objects that represent a value and a ""shape"" in RooFit.Definition RooAbsArg.h:79; RooAbsCollection::selectByAttribRooAbsCollection * selectByAttrib(const char *name, bool value) constCreate a subset of the current collection, consisting only of those elements with the specified attri...Definition RooAbsCollection.cxx:793; RooAbsCollection::CloneTObject * Clone(const char *newname=nullptr) const overrideMake a clone of an object using the Streamer facility.Definition RooAbsCollection.h:76; RooAbsColl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf508__listsetmanip_8C.html:4305,Access,Access,4305,doc/master/rf508__listsetmanip_8C.html,https://root.cern,https://root.cern/doc/master/rf508__listsetmanip_8C.html,1,['Access'],['Access']
Security,"s about entry numbers in multi-threaded runs, see here. . Filter() Filter rows based on user-defined conditions. . Range() Filter rows based on entry number (single-thread only). . Redefine() Overwrite the value and/or type of an existing column. See Define() for more information. . RedefineSlot() Overwrite the value and/or type of an existing column. See DefineSlot() for more information. . RedefineSlotEntry() Overwrite the value and/or type of an existing column. See DefineSlotEntry() for more information. . Vary() Register systematic variations for an existing column. Varied results are then extracted via VariationsFor(). . Actions; Actions aggregate data into a result. Each one is described in more detail in the reference guide.; In the following, whenever we say an action ""returns"" something, we always mean it returns a smart pointer to it. Actions only act on events that pass all preceding filters.; Lazy actions only trigger the event loop when one of the results is accessed for the first time, making it easy to produce many different results in one event loop. Instant actions trigger the event loop instantly. Lazy action Description . Aggregate() Execute a user-defined accumulation operation on the processed column values. . Book() Book execution of a custom action using a user-defined helper object. . Cache() Cache column values in memory. Custom columns can be cached as well, filtered entries are not cached. Users can specify which columns to save (default is all). . Count() Return the number of events processed. Useful e.g. to get a quick count of the number of events passing a Filter. . Display() Provides a printable representation of the dataset contents. The method returns a ROOT::RDF::RDisplay() instance which can print a tabular representation of the data or return it as a string. . Fill() Fill a user-defined object with the values of the specified columns, as if by calling Obj.Fill(col1, col2, ...). . Graph() Fills a TGraph with the two columns provi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html:4822,access,accessed,4822,doc/v632/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html,1,['access'],['accessed']
Security,"s and use them in a geometry; root[] TGeoManager *geom = new TGeoManager(""geom"",""radionuclides"");; root[] TGeoElementTable *table = geom->GetElementTable();; root[] TGeoElementRN *c14 = table->GetElementRN(14,6); // A,Z; root[] c14->Print();; 6-C-014 ENDF=60140; A=14; Z=6; Iso=0; Level=0[MeV]; Dmass=3.0199[MeV];; Hlife=1.81e+11[s] J/P=0+; Abund=0; Htox=5.8e-10; Itox=5.8e-10; Stat=0; Decay modes:; BetaMinus Diso: 0 BR: 100.000% Qval: 0.1565; TGeoElementRNClass representing a radionuclidevoid TGeoManager::SetDefaultRootUnits() { if ( fgDefaultUnits == kRo...Definition TGeoElement.h:132; TGeoElementRN::Printvoid Print(Option_t *option="""") const overridePrint info about the element;.Definition TGeoElement.cxx:594; TGeoManagerThe manager class for any TGeo geometry.Definition TGeoManager.h:44; One can make materials or mixtures from radionuclides:; root[] TGeoMaterial *mat = new TGeoMaterial(""C14"", c14, 2.0);; The following properties of radionuclides can be currently accessed via getters in the TGeoElementRN class:; Atomic number and charge (from the base class TGeoElement). Isomeric number (ISO); ENDF code - following the convention: ENDF=10000*Z+100*A+ISO; Isomeric energy level [MeV]; Mass excess [MeV]; Half life [s]; Spin/Parity - can be retrieved with: TGeoElementRN::GetTitle(); Hynalation and ingestion toxicities; List of decays - TGeoElementRN::GetDecays(). The radioactive decays of a radionuclide are represented by the class TGeoDecayChannel and they are stored in a TObjArray. Decay provides:. Decay mode; Variation of isomeric number; Q value for the decay [GeV]; Parent element; Daughter element. Radionuclides are linked one to each other via their decays, until the last element in the decay chain which must be stable. One can iterate decay chains using the iterator TGeoElemIter:; root[] TGeoElemIter next(c14);; root[] TGeoElementRN *elem;; root[] while ((elem=next())) next.Print();; 6-C-014 (100% BetaMinus) T1/2=1.81e+11; 7-N-014 stable; N#define N; TGeoElemIterI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Materials__classes.html:7452,access,accessed,7452,doc/master/group__Materials__classes.html,https://root.cern,https://root.cern/doc/master/group__Materials__classes.html,1,['access'],['accessed']
Security,"s are used to add 3D effects to graphical objects like; 186TWbox, TPave, TPaveText, TPaveLabel, etc. and in colored lego plots.; 187 ; 188Two static functions are available that return the bright or dark color number corresponding; 189to a given color index. If these variants don't already exist, they are created as needed:; 190~~~ {.cpp}; 191 Int_t dark = TColor::GetColorDark(color_index);; 192 Int_t bright = TColor::GetColorBright(color_index);; 193~~~; 194 ; 195\anchor C031; 196## Accessible Color Schemes; 197Choosing an appropriate color scheme is essential for making results easy to understand and; 198interpret. Factors like colorblindness and converting colors to grayscale for publications; 199can impact accessibility. Furthermore, results should be aesthetically pleasing. The following; 200three color schemes, recommended by M. Petroff in [arXiv:2107.02270v2](https://arxiv.org/pdf/2107.02270); 201and available on [GitHub](https://github.com/mpetroff/accessible-color-cycles); 202under the MIT License, meet these criteria.; 203 ; 204These three color schemes are available as color sets with 6, 8, and 10 colors, named; 205`kP[6, 8, 10]ColorName`. For example, `kP6Red` represents the red color within the P6 color scheme; 206(`P` for Petroff or Preferred).; 207 ; 208Begin_Macro; 209../../../tutorials/graphics/accessiblecolorschemes.C; 210End_Macro; 211 ; 212The example thstackcolorscheme.C illustrates how to use these color schemes in THStack drawings.; 213It also demonstrates that they are effective in grayscale.; 214 ; 215\anchor C04; 216## Grayscale view of of canvas with colors; 217One can toggle between a grayscale preview and the regular colored mode using; 218`TCanvas::SetGrayscale()`. Note that in grayscale mode, access via RGB; 219will return grayscale values according to ITU standards (and close to b&w; 220printer gray-scales), while access via HLS returns de-saturated gray-scales. The; 221image below shows the ROOT color wheel in grayscale mode.; 222 ; 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TColor_8cxx_source.html:7203,access,accessible-color-cycles,7203,doc/master/TColor_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TColor_8cxx_source.html,1,['access'],['accessible-color-cycles']
Security,"s branch; TBranch*TBranch::fParent! Pointer to parent branch.; Int_tTBranch::fReadBasket! Current basket number when reading; Long64_tTBranch::fReadEntry! Current entry number when reading; G__p2memfuncTBranch::fReadLeaves! Pointer to the ReadLeaves implementation to use. ; Bool_tTBranch::fSkipZip! After being read, the buffer will not be unziped.; Int_tTBranch::fSplitLevelBranch split level; TStringTNamed::fTitleobject title; Long64_tTBranch::fTotBytesTotal number of bytes in all leaves before compression; TTree*TBranch::fTree! Pointer to Tree header; Int_tTBranch::fWriteBasketLast basket number written; Long64_tTBranch::fZipBytesTotal number of bytes in all leaves after compression; static Int_tTBranch::fgCount! branch counter. private:. UInt_tfClCheckSumClass checksum; TStringfClassNameName of the parent class, if we're the data member; Int_tfClassVersionVersion number of the class; TVirtualCollectionProxy*fCollProxy! Collection proxy; TStringfContNameClass name of referenced object; Int_tfIDElement serial number in the streamer info; TIndArrayfInd! Indices; TClass*fIndArrayCl! Class of the ind array; TStreamerInfo*fInfo! The streamer info; char*fObject! Pointer to object at address or the; TBranch*fParent! Parent of this branch. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBranchSTL(); Default constructor. TBranchSTL(TTree* tree, const char* name, TVirtualCollectionProxy* collProxy, Int_t buffsize, Int_t splitlevel); Normal constructor, called from TTree. TBranchSTL(TBranch* parent, const char* name, TVirtualCollectionProxy* collProxy, Int_t buffsize, Int_t splitlevel, TStreamerInfo* info, Int_t id); Normal constructor, called from another branch. ~TBranchSTL(); destructor. void Browse(TBrowser* b); browse a STL branch. Int_t Fill(). Cleanup after revious fill. Int_t GetEntry(Long64_t entry = 0, Int_t getall = 0). Check if we should be doing this at all. Int_t GetExpectedType(TClass*& clptr, EDataType& type); Fill ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBranchSTL.html:13239,checksum,checksum,13239,root/html532/TBranchSTL.html,https://root.cern,https://root.cern/root/html532/TBranchSTL.html,2,['checksum'],['checksum']
Security,"s branch; TBranch*TBranch::fParent! Pointer to parent branch.; Int_tTBranch::fReadBasket! Current basket number when reading; Long64_tTBranch::fReadEntry! Current entry number when reading; G__p2memfuncTBranch::fReadLeaves! Pointer to the ReadLeaves implementation to use. ; Bool_tTBranch::fSkipZip! After being read, the buffer will not be unziped.; Int_tTBranch::fSplitLevelBranch split level; TStringTNamed::fTitleobject title; Long64_tTBranch::fTotBytesTotal number of bytes in all leaves before compression; TTree*TBranch::fTree! Pointer to Tree header; Int_tTBranch::fWriteBasketLast basket number written; Long64_tTBranch::fZipBytesTotal number of bytes in all leaves after compression; static Int_tTBranch::fgCount! branch counter. private:. UInt_tfClCheckSumClass checksum; TStringfClassNameName of the parent class, if we're the data member; Int_tfClassVersionVersion number of the class; TVirtualCollectionProxy*fCollProxy! Collection proxy; TStringfContNameClass name of referenced object; Int_tfIDElement serial number in the streamer info; TIndArrayfInd! Indices; TClass*fIndArrayCl! Class of the ind array; TStreamerInfo*fInfo! The streamer info; char*fObject! Pointer to object at address or the; TBranch*fParent! Parent of this branch. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBranchSTL(); Default constructor. TBranchSTL(TTree* tree, const char* name, TVirtualCollectionProxy* collProxy, Int_t buffsize, Int_t splitlevel); Normal constructor, called from TTree. TBranchSTL(TBranch* parent, const char* name, TVirtualCollectionProxy* collProxy, Int_t buffsize, Int_t splitlevel, TStreamerInfo* info, Int_t id); Normal constructor, called from another branch. ~TBranchSTL(); destructor. void Browse(TBrowser* b); browse a STL branch. Int_t Fill(). Cleanup after revious fill. Int_t GetEntry(Long64_t entry = 0, Int_t getall = 0). Check if we should be doing this at all. TStreamerInfo* GetInfo() const. Check if we don't have the stre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TBranchSTL.html:12316,checksum,checksum,12316,root/html528/TBranchSTL.html,https://root.cern,https://root.cern/root/html528/TBranchSTL.html,2,['checksum'],['checksum']
Security,"s browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TWebFile() [1/3]. TWebFile::TWebFile ; (; ). inlineprivate . Definition at line 39 of file TWebFile.h. ◆ TWebFile() [2/3]. TWebFile::TWebFile ; (; const char * ; url, . Option_t * ; opt = """" . ). Create a Web file object. ; A web file is the same as a read-only TFile except that it is being read via a HTTP server. The url argument must be of the form: http://host.dom.ain/file.root. The opt can be ""NOPROXY"", to bypass any set ""http_proxy"" shell variable. The proxy can be specified as (in sh, or equivalent csh): export http_proxy=http://pcsalo.cern.ch:3128 The proxy can also be specified via the static method TWebFile::SetProxy(). Basic authentication (AuthType Basic) is supported. The user name and passwd can be specified in the url like this: http://username:mypasswd@pcsalo.cern.ch/files/aap.root If the file specified in the URL does not exist or is not accessible the kZombie bit will be set in the TWebFile object. Use IsZombie() to see if the file is accessible. The preferred interface to this constructor is via TFile::Open(). ; Definition at line 146 of file TWebFile.cxx. ◆ TWebFile() [3/3]. TWebFile::TWebFile ; (; TUrl ; url, . Option_t * ; opt = """" . ). Create a Web file object. ; A web file is the same as a read-only TFile except that it is being read via a HTTP server. Make sure url is a valid TUrl object. The opt can be ""NOPROXY"", to bypass any set ""http_proxy"" shell variable. The proxy can be specified as (in sh, or equivalent csh): export http_proxy=http://pcsalo.cern.ch:3128 The proxy can also be specified via the static method TWebFile::SetProxy(). Basic authentication (AuthType Basic) is supported. The user name and passwd can be specified in the url like this: http://username:mypasswd@pcsalo.cern.ch/files/aap.root If the file specified in the URL does not exist or is not accessible the kZombie bit will be set in the TWebF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebFile.html:44439,access,accessible,44439,doc/master/classTWebFile.html,https://root.cern,https://root.cern/doc/master/classTWebFile.html,1,['access'],['accessible']
Security,"s buffer. ;  ; void SetReadMode ();  Set buffer in read mode. ;  ; void SetReAllocFunc (ReAllocCharFun_t reallocfunc=nullptr);  Set which memory reallocation method to use. ;  ; void SetWriteMode ();  Set buffer in write mode. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; template<class T > ; Int_t WriteObject (const T *objptr, Bool_t cacheReuse=kTRUE);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMessage.html:25732,Hash,Hash,25732,doc/master/classTMessage.html,https://root.cern,https://root.cern/doc/master/classTMessage.html,12,['Hash'],['Hash']
Security,"s can be specified:. numfaces - approximate maximal number of faces in three.js model (default 100000); numnodes - approximate maximal number of meshes in three.js model (default 1000); doubleside - use double-side material (default only front side is set); wireframe - show wireframe for created object (default - off); dflt_colors - assign default ROOT colors for the volumes. When transparent volumes appeared in the model, one could use produceRenderOrder() function to correctly set rendering order. It should be used as:; import { produceRenderOrder } from './path_to_jsroot/modules/geom/TGeoPainter.mjs';; produceRenderOrder(scene, camera.position, 'box');; Following methods can be applied: “box”, “pnt”, “size”, “ray” and “dflt”. See more info in draw options description for TGeo classes.; Here is running example and source code.; 1.11.7 Custom user class; There is code example how custom user class can be implemented. It shows usage of different draw options for the class and ability to access sub-elements of the object using specialized expand function.; 1.11.8 Use with Node.js; To install latest JSROOT release, just do:; [shell] npm install jsroot; To use in the Node.js scripts, one should add following line:; import { httpRequest, makeSVG } from 'jsroot';; Using JSROOT functionality, one can open binary ROOT files (local and remote), parse ROOT JSON, create SVG output. For example, to create SVG image with lego plot, one should do:; import { openFile, makeSVG } from 'jsroot';; import { writeFileSync } from 'fs';. let file = await openFile(""https://root.cern/js/files/hsimple.root"");; let obj = await file.readObject(""hpx;1"");; let svg = await makeSVG({ object: obj, option: ""lego2"", width: 1200, height: 800 });; writeFileSync(""lego2.svg"", svg);; It is also possible to convert any JavaScript object into ROOT JSON string, using toJSON() function. Like:; import { toJSON, openFile, makeSVG } from 'jsroot';; import { writeFileSync } from 'fs';. let file = await openFile(""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html:31853,access,access,31853,root/htmldoc/guides/JSROOT/JSROOT.html,https://root.cern,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html,1,['access'],['access']
Security,"s changing the visibility of the edited volume or for its daughters, as well as other visualization settings. The radio button ""All"" allows viewing all volumes down to the selected depth. ""Leaves"" will draw only the deepest nodes that have the selected depth or lower level ones that have no daughters inside. ""Only"" will allow drawing only the edited volume. The check button ""Raytrace"" will just draw the current selection in solid mode using the ray-tracing algorithm provided by TGeo. Volume visualisation settings and division interface for volumes. Division. Allows dividing the edited volume according a given pattern. The division axes that are allowed are presented in a radio-button group. The number entries labeled ""From"", ""Step"" and ""Nslices"" correspond to the divisioning parameters on the selected axis. The range of the division is between start and start+ndiv*step values and its validity is checked upon changing one of the values. NOTE: When changing a value in a number entry by typing a number, press ENTER at the end to validate. This applies for taking into account and validation of any number change in the geometry editors. How to Create a Valid Geometry with Geometry Editors. Create a new geometry manager and start the editor as described at the beginning.; Create at least one material from the ""Materials"" shutter item category. Generally, for creating objects, the interface is always in the TGeoManagerEditor in different categories - one should just provide a name and requested parameters.; Create a shape that will be used for the top volume within the ""Shapes"" category. For the moment, the shapes that have editors are Box, Para, Trd1, Trd2, Tube, Tube segment, Cone, Cone segment, Hype, Pcon, Torus and Sphere.; Create a medium from one of the existing materials from the ""Medium"" category. You will notice that some categories as ""Volume"" and ""Medium"" are inactive at the beginning because at that time there is no material yet (for making a medium) and no sha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry.html:143905,validat,validate,143905,doc/master/group__Geometry.html,https://root.cern,https://root.cern/doc/master/group__Geometry.html,1,['validat'],['validate']
Security,"s class ; Definition at line 76 of file TSchemaRuleSet.h. ◆ DeclFileName(). static const char * ROOT::Detail::TSchemaRuleSet::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 76 of file TSchemaRuleSet.h. ◆ FindRules() [1/4]. const TSchemaRuleSet::TMatches TSchemaRuleSet::FindRules ; (; const TString & ; source); const. Return all the rules that are about the given 'source' class. ; User has to delete the returned array ; Definition at line 289 of file TSchemaRuleSet.cxx. ◆ FindRules() [2/4]. const TSchemaRuleSet::TMatches TSchemaRuleSet::FindRules ; (; const TString & ; source, . Int_t ; version . ); const. Return all the rules that applies to the specified version of the given 'source' class. ; User has to delete the returned array ; Definition at line 328 of file TSchemaRuleSet.cxx. ◆ FindRules() [3/4]. const TSchemaRuleSet::TMatches TSchemaRuleSet::FindRules ; (; const TString & ; source, . Int_t ; version, . UInt_t ; checksum . ); const. Return all the rules that applies to the specified version OR checksum of the given 'source' class. ; User has to delete the returned array ; Definition at line 368 of file TSchemaRuleSet.cxx. ◆ FindRules() [4/4]. const TSchemaRuleSet::TMatches TSchemaRuleSet::FindRules ; (; const TString & ; source, . UInt_t ; checksum . ); const. Return all the rules that applies to the specified checksum of the given 'source' class. ; User has to delete the returned array ; Definition at line 348 of file TSchemaRuleSet.cxx. ◆ GetClass(). TClass * TSchemaRuleSet::GetClass ; (; ). Definition at line 386 of file TSchemaRuleSet.cxx. ◆ GetClassCheckSum(). UInt_t TSchemaRuleSet::GetClassCheckSum ; (; ); const. Definition at line 393 of file TSchemaRuleSet.cxx. ◆ GetClassName(). TString TSchemaRuleSet::GetClassName ; (; ); const. Definition at line 403 of file TSchemaRuleSet.cxx. ◆ GetClassVersion(). Int_t TSchemaRuleSet::GetClassVersion ; (; ); const. Definition at line 410 of file TS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet.html:15561,checksum,checksum,15561,doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet.html,1,['checksum'],['checksum']
Security,"s collection. ;  ; void AddBefore (const TObject *before, TObject *obj);  Add object to the hash table. ;  ; Float_t AverageCollisions () const;  ; void Clear (Option_t *option="""") override;  Remove all objects from the table. ;  ; Int_t Collisions (const char *name) const;  Returns the number of collisions for an object with a certain name (i.e. ;  ; Int_t Collisions (TObject *obj) const;  Returns the number of collisions for an object (i.e. ;  ; void Delete (Option_t *option="""") override;  Remove all objects from the table AND delete all heap based objects. ;  ; Bool_t Empty () const;  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; const TList * GetListForObject (const char *name) const;  Return the TList corresponding to object's name based hash value. ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the TList corresponding to object's hash value. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Int_t GetRehashLevel () const;  ; Int_t GetSize () const override;  Return the capacity of the collection, i.e. ;  ; TClass * IsA () const override;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Returns a hash table iterator. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; void Print (Option_t *option, Int_t recurse) const override;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHashTable.html:2160,hash,hash,2160,doc/master/classTHashTable.html,https://root.cern,https://root.cern/doc/master/classTHashTable.html,1,['hash'],['hash']
Security,"s contains 3 axis objects of type TAxis: fXaxis, fYaxis and fZaxis. To access the axis parameters, use: TAxis *xaxis = h->GetXaxis(); etc.; Double_t binCenter = xaxis->GetBinCenter(bin), etc.; TAxisClass to manage histogram axis.Definition TAxis.h:31; TAxis::GetBinCentervirtual Double_t GetBinCenter(Int_t bin) constReturn center of bin.Definition TAxis.cxx:478; See class TAxis for a description of all the access functions. The axis range is always stored internally in double precision. Convention for numbering bins; For all histogram types: nbins, xlow, xup bin = 0; underflow bin; bin = 1; first bin with low-edge xlow INCLUDED; bin = nbins; last bin with upper-edge xup EXCLUDED; bin = nbins+1; overflow bin; In case of 2-D or 3-D histograms, a ""global bin"" number is defined. For example, assuming a 3-D histogram with (binx, biny, binz), the function Int_t gbin = h->GetBin(binx, biny, binz);; int; returns a global/linearized gbin number. This global gbin is useful to access the bin content/error information independently of the dimension. Note that to access the information other than bin content and errors one should use the TAxis object directly with e.g.: Double_t xcenter = h3->GetZaxis()->GetBinCenter(27);; double; returns the center along z of bin number 27 (not the global bin) in the 3-D histogram h3. Alphanumeric Bin Labels; By default, a histogram axis is drawn with its numeric bin labels. One can specify alphanumeric labels instead with:. call TAxis::SetBinLabel(bin, label); This can always be done before or after filling. When the histogram is drawn, bin labels will be automatically drawn. See examples labels1.C and labels2.C; call to a Fill function with one of the arguments being a string, e.g. hist1->Fill(somename, weight);; hist2->Fill(x, somename, weight);; hist2->Fill(somename, y, weight);; hist2->Fill(somenamex, somenamey, weight);; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; See examples hlabels1.C and hlabels2.C; via",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:7769,access,access,7769,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['access'],['access']
Security,"s create a new instance of class T to represent the ""Sum"" object. This method is not thread safe: correct or acceptable behaviours depend on the nature of T and of the merging function. ; Definition at line 312 of file TThreadedObject.hxx. Member Data Documentation. ◆ fDirectories. template<class T > . std::deque<TDirectory*> ROOT::TThreadedObject< T >::fDirectories. private . A TDirectory per slot. ; Definition at line 332 of file TThreadedObject.hxx. ◆ fgMaxSlots. template<class T > . constexpr const TNumSlots ROOT::TThreadedObject< T >::fgMaxSlots {64}. staticconstexpr . The initial number of empty processing slots that a TThreadedObject is constructed with by default. ; Deprecated: TThreadedObject grows as more slots are required. ; Definition at line 155 of file TThreadedObject.hxx. ◆ fIsMerged. template<class T > . bool ROOT::TThreadedObject< T >::fIsMerged. private . Remember if the objects have been merged already. ; Definition at line 335 of file TThreadedObject.hxx. ◆ fModel. template<class T > . std::unique_ptr<T> ROOT::TThreadedObject< T >::fModel. private . Use to store a ""model"" of the object. ; Definition at line 327 of file TThreadedObject.hxx. ◆ fObjPointers. template<class T > . std::deque<std::shared_ptr<T> > ROOT::TThreadedObject< T >::fObjPointers. private . An object pointer per slot. ; Definition at line 329 of file TThreadedObject.hxx. ◆ fSpinMutex. template<class T > . ROOT::TSpinMutex ROOT::TThreadedObject< T >::fSpinMutex. mutableprivate . Protects concurrent access to fThrIDSlotMap, fObjPointers. ; Definition at line 334 of file TThreadedObject.hxx. ◆ fThrIDSlotMap. template<class T > . std::map<std::thread::id, unsigned> ROOT::TThreadedObject< T >::fThrIDSlotMap. private . A mapping between the thread IDs and the slots. ; Definition at line 333 of file TThreadedObject.hxx. core/thread/inc/ROOT/TThreadedObject.hxx. ROOTTThreadedObject. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:00 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1TThreadedObject.html:10690,access,access,10690,doc/master/classROOT_1_1TThreadedObject.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1TThreadedObject.html,1,['access'],['access']
Security,"s decay info. ;  ; Double_t Qvalue () const;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive for decays. ;  ; void SetDaughter (TGeoElementRN *daughter);  ; void SetParent (TGeoElementRN *parent);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoDecayChannel.html:3437,Hash,Hash,3437,doc/master/classTGeoDecayChannel.html,https://root.cern,https://root.cern/doc/master/classTGeoDecayChannel.html,2,['Hash'],['Hash']
Security,"s describing current object ; Reimplemented from TEveElementList.; Reimplemented in TEveTrackListProjected.; Definition at line 227 of file TEveTrack.h. ◆ MakeTracks(). void TEveTrackList::MakeTracks ; (; Bool_t ; recurse = kTRUE). Regenerate the visual representations of tracks. ; The momentum limits are rescanned during the same traversal. ; Definition at line 635 of file TEveTrack.cxx. ◆ operator=(). TEveTrackList & TEveTrackList::operator= ; (; const TEveTrackList & ; ). private . ◆ ProjectedClass(). TClass * TEveTrackList::ProjectedClass ; (; const TEveProjection * ; p); const. overridevirtual . Virtual from TEveProjectable, returns TEveTrackListProjected class. ; Reimplemented from TEveElementList.; Definition at line 1175 of file TEveTrack.cxx. ◆ RoundMomentumLimit(). Double_t TEveTrackList::RoundMomentumLimit ; (; Double_t ; x). protected . Round the momentum limit up to a nice value. ; Definition at line 710 of file TEveTrack.cxx. ◆ SanitizeMinMaxCuts(). void TEveTrackList::SanitizeMinMaxCuts ; (; ). protected . Set Min/Max cuts so that they are within detected limits. ; Definition at line 723 of file TEveTrack.cxx. ◆ SelectByP() [1/2]. void TEveTrackList::SelectByP ; (; Double_t ; min_p, . Double_t ; max_p . ). Select visibility of tracks by momentum. ; If data-member fRecurse is set, the selection is applied recursively to all children. ; Definition at line 1040 of file TEveTrack.cxx. ◆ SelectByP() [2/2]. void TEveTrackList::SelectByP ; (; Double_t ; min_p, . Double_t ; max_p, . TEveElement * ; el . ). Select visibility of el's children tracks by momentum. ; Definition at line 1061 of file TEveTrack.cxx. ◆ SelectByPt() [1/2]. void TEveTrackList::SelectByPt ; (; Double_t ; min_pt, . Double_t ; max_pt . ). Select visibility of tracks by transverse momentum. ; If data-member fRecurse is set, the selection is applied recursively to all children. ; Definition at line 995 of file TEveTrack.cxx. ◆ SelectByPt() [2/2]. void TEveTrackList::SelectByPt ; (; Double_t ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackList.html:45172,Sanitiz,SanitizeMinMaxCuts,45172,doc/master/classTEveTrackList.html,https://root.cern,https://root.cern/doc/master/classTEveTrackList.html,1,['Sanitiz'],['SanitizeMinMaxCuts']
Security,"s does not really translate well to cling/clang. We; 5230/// should enhance these interfaces so that we can report; 5231/// compilation and runtime errors properly.; 5232 ; 5233void TCling::Execute(const char* function, const char* params, int* error); 5234{; 5235 R__LOCKGUARD_CLING(gInterpreterMutex);; 5236 if (error) {; 5237 *error = TInterpreter::kNoError;; 5238 }; 5239 TClingClassInfo cl(GetInterpreterImpl());; 5240 Longptr_t offset = 0L;; 5241 TClingCallFunc func(GetInterpreterImpl());; 5242 func.SetFunc(&cl, function, params, &offset);; 5243 func.Exec(nullptr);; 5244}; 5245 ; 5246////////////////////////////////////////////////////////////////////////////////; 5247/// Execute a method from class cl with arguments params.; 5248///; 5249/// FIXME: The cint-based version of this code does not check if the; 5250/// SetFunc() call works, and does not do any real checking; 5251/// for errors from the Exec() call. It did fetch the most; 5252/// recent cint security error and return that in error, but; 5253/// this does not really translate well to cling/clang. We; 5254/// should enhance these interfaces so that we can report; 5255/// compilation and runtime errors properly.; 5256 ; 5257void TCling::Execute(TObject* obj, TClass* cl, const char* method,; 5258 const char* params, Bool_t objectIsConst, int* error); 5259{; 5260 R__LOCKGUARD_CLING(gInterpreterMutex);; 5261 if (error) {; 5262 *error = TInterpreter::kNoError;; 5263 }; 5264 // If the actual class of this object inherits 2nd (or more) from TObject,; 5265 // 'obj' is unlikely to be the start of the object (as described by IsA()),; 5266 // hence gInterpreter->Execute will improperly correct the offset.; 5267 void* addr = cl->DynamicCast(TObject::Class(), obj, kFALSE);; 5268 Longptr_t offset = 0L;; 5269 TClingCallFunc func(GetInterpreterImpl());; 5270 func.SetFunc((TClingClassInfo*)cl->GetClassInfo(), method, params, objectIsConst, &offset);; 5271 void* address = (void*)((Longptr_t)addr + offset);; 5272 func.Exec(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:204337,secur,security,204337,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['secur'],['security']
Security,"s drawn with one of the 2D histogram drawing option,; 115an intermediate 2D histogram is filled using the Delaunay triangles; 116to interpolate the data set. The 2D histogram has equidistant bins along the X; 117and Y directions. The number of bins along each direction can be change using; 118`SetNpx()` and `SetNpy()`. Each bin is filled with the Z; 119value found via a linear interpolation on the plane defined by the triangle above; 120the (X,Y) coordinates of the bin center.; 121 ; 122The existing (X,Y,Z) points can be randomly scattered.; 123The Delaunay triangles are build in the (X,Y) plane. These 2D triangles are then; 124used to define flat planes in (X,Y,Z) over which the interpolation is done to fill; 125the 2D histogram. The 3D triangles int takes build a 3D surface in; 126the form of tessellating triangles at various angles. The triangles found can be; 127drawn in 3D with one of the TGraph2D specific drawing options.; 128 ; 129The histogram generated by the Delaunay interpolation can be accessed using the; 130`GetHistogram()` method.; 131 ; 132The axis settings (title, ranges etc ...) can be changed accessing the axis via; 133the GetXaxis GetYaxis and GetZaxis methods. They access the histogram axis created; 134at drawing time only. Therefore they should called after the TGraph2D is drawn:; 135 ; 136~~~ {.cpp}; 137 auto g = new TGraph2D();; 138 ; 139 [...]; 140 ; 141 g->Draw(""tri1"");; 142 gPad->Update();; 143 g->GetXaxis()->SetTitle(""X axis title"");; 144~~~; 145 ; 146\anchor G2D02; 147## Examples; 148 ; 149\anchor G2D021; 150### SURF1 Example; 151 ; 152Begin_Macro(source); 153{; 154 auto c = new TCanvas(""c"",""Graph2D example"",0,0,600,400);; 155 Double_t x, y, z, P = 6.;; 156 Int_t np = 200;; 157 auto dt = new TGraph2D();; 158 dt->SetTitle(""Graph title; X axis title; Y axis title; Z axis title"");; 159 auto r = new TRandom();; 160 for (Int_t N=0; N<np; N++) {; 161 x = 2*P*(r->Rndm(N))-P;; 162 y = 2*P*(r->Rndm(N))-P;; 163 z = (sin(x)/x)*(sin(y)/y)+0.2;; 164 dt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2D_8cxx_source.html:5418,access,accessed,5418,doc/master/TGraph2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2D_8cxx_source.html,1,['access'],['accessed']
Security,"s enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteEventHelper(TGraph *theGraph, Int_t event, Int_t px, Int_t py) overrideTGraphPaintervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgMaxPointsPerLineTGraphPainterprotectedstatic; fgObjectStatTObjectprivatestatic; fgPainterTVirtualGraphPainterprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fUniqueIDTObjectprivate; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetHighlightPoint(TGraph *theGraph) constTGraphPaintervirtual; GetIconName() constTObjectvirtual; GetName() constTObjectvirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectInfoHelper(TGraph *theGraph, Int_t px, Int_t py) const overrideTGraphPaintervirtual; GetObjectStat()TObjectstatic; GetOption() constTObjectinlinevirtual; GetPainter()TVirtualGraphPainterstatic; GetTitle() constTObjectvirtual; GetUniqueID() constTObjectvirtual; gxworkTGraphPainterprotected; gxworklTGraphPainterprotected; gyworkTGraphPainterprotected; gyworklTGraphPainterprotected; HandleTimer(TTimer *timer)TObjectvirtual; Hash() constTObjectvirtual; HasInconsistentHash() constTObjectinline; HighlightPoint(TGraph *theGraph, Int_t hpoint, Int_t distance)TGraphPaintervirtual; Info(const char *method, const char *msgfmt,...) constTObjectvirtual; InheritsFrom(const char *classname) constTObjectvirtual; InheritsFrom(const TClass *cl) constTObjectvirtual; Inspect() constTObjectvirtual; InvertBit(UInt_t f)TObjectinline; IsA() const overrideTGraphPainterinlinevirtual; IsDestructed() constTObjectinline; IsEqual(const TObject *obj) constTObjectvirtual; IsFolder() constTObjectvirtual; IsOnHeap() constTObjectinline; I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPainter-members.html:2878,Hash,Hash,2878,doc/master/classTGraphPainter-members.html,https://root.cern,https://root.cern/doc/master/classTGraphPainter-members.html,1,['Hash'],['Hash']
Security,"s fUser=user and search fgAuthInfo for the entry pertaining to; (host,user), setting fHostAuth accordingly.; If opt = ""P"" use fgProofAuthInfo list instead; If no entry is found fHostAuth is not changed. THostAuth * HasHostAuth(const char* host, const char* user, Option_t* opt = ""R""); Checks if a THostAuth with exact match for {host,user} exists; in the fgAuthInfo list; If opt = ""P"" use ProofAuthInfo list instead; Returns pointer to it or 0. void FileExpand(const char* fin, FILE* ftmp); Expands include directives found in fexp files; The expanded, temporary file, is pointed to by 'ftmp'; and should be already open. To be called recursively. char * GetDefaultDetails(Int_t method, Int_t opt, const char* user); Determine default authentication details for method 'sec' and user 'usr'.; Checks .rootrc family files. Returned string must be deleted by the user. void RemoveHostAuth(THostAuth* ha, Option_t* opt = """"); Remove THostAuth instance from the list. void Show(Option_t* opt = ""S""); Print info about the authentication sector.; If 'opt' contains 's' or 'S' prints information about established TSecContext,; else prints information about THostAuth (if 'opt' is 'p' or 'P', prints; Proof related information). Int_t AuthExists(TString User, Int_t method, const char* Options, Int_t* Message, Int_t* Rflag, CheckSecCtx_t funcheck); Check if we have a valid established sec context in memory; Retrieves relevant info and negotiates with server.; options = ""Opt,strlen(username),username.Data()""; message = kROOTD_USER, ... void InitRandom(); Initialize random machine using seed from /dev/urandom; (or current time if /dev/urandom not available). Int_t GenRSAKeys(); Generate a valid pair of private/public RSA keys to protect for; authentication token exchange. char * GetRandString(Int_t Opt, Int_t Len); Allocates and fills a 0 terminated buffer of length len+1 with; len random characters.; Returns pointer to the buffer (to be deleted by the caller); opt = 0 any non dangerous char; 1 l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAuthenticate.html:18782,authenticat,authentication,18782,root/html526/TAuthenticate.html,https://root.cern,https://root.cern/root/html526/TAuthenticate.html,7,['authenticat'],['authentication']
Security,"s for different locations; Bool_tfScanGlobalDir! when enabled (default), scan gROOT for histograms, canvases, open files; TList*fSinfo! last produced streamer info; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRootSniffer(const char* name, const char* objpath = ""Objects""); constructor. ~TRootSniffer(); destructor. void SetCurrentCallArg(THttpCallArg* arg); set current http arguments, which then used in different process methods; For instance, if user authorized with some user name,; depending from restrictions some objects will be invisible; or user get full access to the element. void SetAutoLoad(const char* scripts = """"); When specified, _autoload attribute will be always add; to top element of h.json/h.hml requests; Used to instruct browser automatically load special code. const char* GetAutoLoad() const; return name of configured autoload scripts (or 0). void Restrict(const char* path, const char* options); Restrict access to the specified location. Hides or provides read-only access to different parts of the hierarchy; Restriction done base on user-name specified with http requests; Options can be specified in URL style (separated with &); Following parameters can be specified:; visible = [all|user(s)] - make item visible for all users or only specified user; hidden = [all|user(s)] - make item hidden from all users or only specified user; readonly = [all|user(s)] - make item read-only for all users or only specified user; allow = [all|user(s)] - make full access for all users or only specified user; allow_method = method(s) - allow method(s) execution even when readonly flag specified for the object; Like make command seen by all but can be executed only by admin; sniff->Restrict(""/CmdReset"",""allow=admin"");; Or fully hide command from guest account; sniff->Restrict(""/CmdRebin"",""hidden=guest"");. Bool_t HasRestriction(const char* item_name); Made fast check if item with specified nam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRootSniffer.html:10391,access,access,10391,root/html534/TRootSniffer.html,https://root.cern,https://root.cern/root/html534/TRootSniffer.html,1,['access'],['access']
Security,"s for source info elements (copyright, last changed, author); static set<string>fgKeywordsC++ keywords; static TDocParser::(anonymous)kClassDoc_Ignore; static TDocParser::(anonymous)kClassDoc_LookingHaveSomething; static TDocParser::(anonymous)kClassDoc_LookingNothingFound; static TDocParser::(anonymous)kClassDoc_NumStates; static TDocParser::(anonymous)kClassDoc_Uninitialized; static TDocParser::(anonymous)kClassDoc_Written; static TDocParser::EDocContextkDocClass; static TDocParser::EDocContextkDocFunc; static TDocParser::EDocContextkIgnore; static TDocParser::EDocContextkNumDocContexts. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDocParser(TClassDocOutput& docOutput, TClass* cl); Constructor called for parsing class sources. TDocParser(TDocOutput& docOutput); constructor called for parsing text files with Convert(). ~TDocParser(); destructor, checking whether all methods have been found for gDebug > 3. void AddClassMethodsRecursively(TBaseClass* bc); Add accessible (i.e. non-private) methods of base class bc; and its base classes' methods to methodNames.; If bc==0, we add fCurrentClass's methods (and also private functions). void AddClassDataMembersRecursively(TBaseClass* bc); Add data members of fCurrentClass and of bc to datamembers, recursively.; Real data members are in idx 0..2 (public, protected, private access),; enum constants in idx 3..5. void AnchorFromLine(const TString& line, TString& anchor); Create an anchor from the given line, by hashing it and; convertig the hash into a custom base64 string. void Convert(ostream& out, istream& in, const char* relpath, Bool_t isCode, Bool_t interpretDirectives); Parse text file ""in"", add links etc, and write output to ""out"".; If ""isCode"", ""in"" is assumed to be C++ code. void DecorateKeywords(ostream& out, const char* text); Expand keywords in text, writing to out. void DecorateKeywords(TString& text); Find keywords in line and create URLs around them. Escape characte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDocParser.html:12497,access,accessible,12497,root/html602/TDocParser.html,https://root.cern,https://root.cern/root/html602/TDocParser.html,2,['access'],['accessible']
Security,"s for special authentication options; static ULong64_tTSocket::fgBytesRecvtotal bytes received by all socket objects; static ULong64_tTSocket::fgBytesSenttotal bytes sent by all socket objects; static Int_tTSocket::fgClientProtocolclient ""protocol"" version. private:. TMutex*fAMtxTo protect async msg queue; list<TXSockBuf*>fAQuelist of asynchronous messages; TSemaphorefASemControl access to conn async msg queue; Bool_tfAWaitkTRUE if waiting at the async msg queue; TSemaphorefAsynProcControl actions while processing async messages; TXSockBuf*fBufCurcurrent read buffer; TStringfBufferContainer for exchanging information; Int_tfByteCurcurrent position in the first buffer; Int_tfByteLeftbytes left in the first buffer; XrdProofConn*fConninstance of the underlying connection module; Bool_tfDontTimeoutIf true wait forever for incoming messages; TXHandler*fHandlerHandler of asynchronous events (input, error); TStringfHostRemote host; Bool_tfIForwardWhether the interrupt should be propagated; kXR_int32fILevHighest received interrupt; TMutex*fIMtxTo protect interrupt queue; Int_tfLogLevelLog level to be transmitted to servers; charfMode'e' (def) or 'i' (internal - proofsrv); Int_tfPid; Int_tfPortRemote port; Bool_tfRDInterruptTo interrupt waiting for messages; TObject*fReferenceGeneric object reference of this socket; kXR_int32fSendOptOptions for sending messages; Short_tfSessionIDproofsrv: remote ID of connected session; TStringfUserUsername used for login; Int_tfXrdProofdVersion; static Bool_tfgInitDoneAvoid initializing more than once; static TStringfgLocLocation string; static TXSockPipefgPipePipe for input monitoring; static TMutexfgSMtxTo protect spare list; static list<TXSockBuf*>fgSQuelist of spare buffers. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TSocket. XrdClientAbsUnsolMsgHandler. ←; TXSocket. ←. TXUnixSocket. Function documentation; void DoError(int level, const char* location, const char* fmt, va_list va) const; Interface to ErrorHandler (protecte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXSocket.html:11851,access,access,11851,root/html602/TXSocket.html,https://root.cern,https://root.cern/root/html602/TXSocket.html,1,['access'],['access']
Security,"s for special authentication options; static ULong64_tTSocket::fgBytesRecvtotal bytes received by all socket objects; static ULong64_tTSocket::fgBytesSenttotal bytes sent by all socket objects; static Int_tTSocket::fgClientProtocolclient ""protocol"" version. private:. TMutex*fAMtxTo protect async msg queue; list<TXSockBuf*>fAQuelist of asynchronous messages; TSemaphorefASemControl access to conn async msg queue; Bool_tfAWaitkTRUE if waiting at the async msg queue; TSemaphorefAsynProcControl actions while processing async messages; TXSockBuf*fBufCurcurrent read buffer; TStringfBufferContainer for exchanging information; Int_tfByteCurcurrent position in the first buffer; Int_tfByteLeftbytes left in the first buffer; XrdProofConn*fConninstance of the underlying connection module; Bool_tfDontTimeoutIf true wait forever for incoming messages; TXHandler*fHandlerHandler of asynchronous events (input, error); TStringfHostRemote host; Bool_tfIForwardWhether the interrupt should be propagated; kXR_int32fILevHighest received interrupt; TMutex*fIMtxTo protect interrupt queue; Int_tfLogLevelLog level to be transmitted to servers; charfMode'e' (def) or 'i' (internal - proofsrv); Int_tfPid; Int_tfPortRemote port; Bool_tfRDInterruptTo interrupt waiting for messages; TObject*fReferenceGeneric object reference of this socket; kXR_int32fSendOptOptions for sending messages; Short_tfSessionIDproofsrv: remote ID of connected session; TStringfUserUsername used for login; Int_tfXrdProofdVersion; static Bool_tfgInitDoneAvoid initializing more than once; static TStringfgLocLocation string; static TXSockPipefgPipePipe for input monitoring; static TMutexfgSMtxTo protect spare list; static list<TXSockBuf*>fgSQuelist of spare buffers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void DoError(int level, const char* location, const char* fmt, va_list va) const; Interface to ErrorHandler (protected). TXSocket(const char* url, Char_t mode = 'M', Int_t psi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TXSocket.html:11827,access,access,11827,root/html604/TXSocket.html,https://root.cern,https://root.cern/root/html604/TXSocket.html,1,['access'],['access']
Security,"s from the output. . Definition at line 23 of file StringUtils.cxx. ◆ StrReplace(). static void ROOT::StrReplace ; (; std::string & ; proc, . const std::string & ; pat, . const std::string & ; tr . ). static . Replace all accurances of given string with other string. ; Definition at line 743 of file RConversionRuleParser.cxx. ◆ ToHumanReadableSize(). template<typename value_type > . void ROOT::ToHumanReadableSize ; (; value_type ; bytes, . Bool_t ; si, . Double_t * ; coeff, . const char ** ; units . ). Return the size expressed in 'human readable' format. ; Parameters. bytesthe size in bytes to be converted ; siwhether to use the SI units or not. ; coeffreturn the size expressed in the new unit. ; unitsreturn a pointer to the string representation of the new unit . Definition at line 38 of file StringConv.hxx. ◆ ValidateRule(). static Bool_t ROOT::ValidateRule ; (; const std::map< std::string, std::string > & ; rule, . std::string & ; error_string . ). static . Validate if the user specified rules are correct. ; Definition at line 277 of file RConversionRuleParser.cxx. ◆ WebGUILog(). ROOT::Experimental::RLogChannel & ROOT::WebGUILog ; (; ). Log channel for WebGUI diagnostics. ; Definition at line 24 of file RWebDisplayArgs.cxx. ◆ WriteAutoVariables(). static void ROOT::WriteAutoVariables ; (; const std::list< std::string > & ; target, . const SourceTypeList_t & ; source, . MembersTypeMap_t & ; members, . std::string & ; className, . std::string & ; mappedName, . std::ostream & ; output . ). static . Write down the sources. ; Definition at line 476 of file RConversionRuleParser.cxx. ◆ WriteReadRawRuleFunc(). void ROOT::WriteReadRawRuleFunc ; (; SchemaRuleMap_t & ; rule, . int ; index, . std::string & ; mappedName, . MembersTypeMap_t & ; members, . std::ostream & ; output . ). Write the conversion function for ReadRaw rule, the function name is being written to rule[""funcname""]. ; Definition at line 694 of file RConversionRuleParser.cxx. ◆ WriteReadRuleFunc(). void RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v630/namespaceROOT.html:44499,Validat,Validate,44499,doc/v630/namespaceROOT.html,https://root.cern,https://root.cern/doc/v630/namespaceROOT.html,1,['Validat'],['Validate']
Security,"s from the output. . Definition at line 23 of file StringUtils.cxx. ◆ StrReplace(). static void ROOT::StrReplace ; (; std::string & ; proc, . const std::string & ; pat, . const std::string & ; tr . ). static . Replace all accurances of given string with other string. ; Definition at line 743 of file RConversionRuleParser.cxx. ◆ ToHumanReadableSize(). template<typename value_type > . void ROOT::ToHumanReadableSize ; (; value_type ; bytes, . Bool_t ; si, . Double_t * ; coeff, . const char ** ; units . ). Return the size expressed in 'human readable' format. ; Parameters. bytesthe size in bytes to be converted ; siwhether to use the SI units or not. ; coeffreturn the size expressed in the new unit. ; unitsreturn a pointer to the string representation of the new unit . Definition at line 38 of file StringConv.hxx. ◆ ValidateRule(). static Bool_t ROOT::ValidateRule ; (; const std::map< std::string, std::string > & ; rule, . std::string & ; error_string . ). static . Validate if the user specified rules are correct. ; Definition at line 277 of file RConversionRuleParser.cxx. ◆ WriteAutoVariables(). static void ROOT::WriteAutoVariables ; (; const std::list< std::string > & ; target, . const SourceTypeList_t & ; source, . MembersTypeMap_t & ; members, . std::string & ; className, . std::string & ; mappedName, . std::ostream & ; output . ). static . Write down the sources. ; Definition at line 476 of file RConversionRuleParser.cxx. ◆ WriteReadRawRuleFunc(). void ROOT::WriteReadRawRuleFunc ; (; SchemaRuleMap_t & ; rule, . int ; index, . std::string & ; mappedName, . MembersTypeMap_t & ; members, . std::ostream & ; output . ). Write the conversion function for ReadRaw rule, the function name is being written to rule[""funcname""]. ; Definition at line 694 of file RConversionRuleParser.cxx. ◆ WriteReadRuleFunc(). void ROOT::WriteReadRuleFunc ; (; SchemaRuleMap_t & ; rule, . int ; index, . std::string & ; mappedName, . MembersTypeMap_t & ; members, . std::ostream & ; output . ). W",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v626/namespaceROOT.html:35256,Validat,Validate,35256,doc/v626/namespaceROOT.html,https://root.cern,https://root.cern/doc/v626/namespaceROOT.html,2,['Validat'],['Validate']
Security,"s from the output. . Definition at line 23 of file StringUtils.cxx. ◆ StrReplace(). static void ROOT::StrReplace ; (; std::string & ; proc, . const std::string & ; pat, . const std::string & ; tr . ). static . Replace all accurances of given string with other string. ; Definition at line 757 of file RConversionRuleParser.cxx. ◆ ToHumanReadableSize(). template<typename value_type > . void ROOT::ToHumanReadableSize ; (; value_type ; bytes, . Bool_t ; si, . Double_t * ; coeff, . const char ** ; units . ). Return the size expressed in 'human readable' format. ; Parameters. bytesthe size in bytes to be converted ; siwhether to use the SI units or not. ; coeffreturn the size expressed in the new unit. ; unitsreturn a pointer to the string representation of the new unit . Definition at line 38 of file StringConv.hxx. ◆ ValidateRule(). static Bool_t ROOT::ValidateRule ; (; const std::map< std::string, std::string > & ; rule, . std::string & ; error_string . ). static . Validate if the user specified rules are correct. ; Definition at line 291 of file RConversionRuleParser.cxx. ◆ WebGUILog(). ROOT::Experimental::RLogChannel & ROOT::WebGUILog ; (; ). Log channel for WebGUI diagnostics. ; Definition at line 24 of file RWebDisplayArgs.cxx. ◆ WriteAutoVariables(). static void ROOT::WriteAutoVariables ; (; const std::list< std::string > & ; target, . const SourceTypeList_t & ; source, . MembersTypeMap_t & ; members, . std::string & ; className, . std::string & ; mappedName, . std::ostream & ; output . ). static . Write down the sources. ; Definition at line 490 of file RConversionRuleParser.cxx. ◆ WriteReadRawRuleFunc(). void ROOT::WriteReadRawRuleFunc ; (; SchemaRuleMap_t & ; rule, . int ; index, . std::string & ; mappedName, . MembersTypeMap_t & ; members, . std::ostream & ; output . ). Write the conversion function for ReadRaw rule, the function name is being written to rule[""funcname""]. ; Definition at line 708 of file RConversionRuleParser.cxx. ◆ WriteReadRuleFunc(). void RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT.html:44721,Validat,Validate,44721,doc/master/namespaceROOT.html,https://root.cern,https://root.cern/doc/master/namespaceROOT.html,2,['Validat'],['Validate']
Security,"s from tobject,; 4552 // then register with the buffer so that pointers are; 4553 // handled properly.; 4554 if (TestBit(kBranchObject)) {; 4555 b.MapObject((TObject*) fObject);; 4556 } else if (TestBit(kBranchAny)) {; 4557 b.MapObject(fObject, fBranchClass);; 4558 }; 4559 ; 4560 fNdata = 1;; 4561 TStreamerInfo *info = GetInfoImp();; 4562 if (!info) {; 4563 return;; 4564 }; 4565 // Since info is not null, fReadActionSequence is not null either.; 4566 b.ApplySequence(*fReadActionSequence, fObject);; 4567}; 4568 ; 4569////////////////////////////////////////////////////////////////////////////////; 4570/// Read leaves into i/o buffers for this branch.; 4571/// For split-class branch, base class branch, data member branch, or top-level branch.; 4572/// which do have a branch count and are not a counter.; 4573 ; 4574void TBranchElement::ReadLeavesMemberBranchCount(TBuffer& b); 4575{; 4576 R__ASSERT(fStreamerType != TVirtualStreamerInfo::kCounter);; 4577 ; 4578 ValidateAddress();; 4579 if (fObject == nullptr); 4580 {; 4581 // We have nowhere to copy the data (probably because the data member was; 4582 // 'dropped' from the current schema) so let's no copy it in a random place.; 4583 return;; 4584 }; 4585 ; 4586 // If not a TClonesArray or STL container master branch; 4587 // or sub-branch and branch inherits from tobject,; 4588 // then register with the buffer so that pointers are; 4589 // handled properly.; 4590 if (TestBit(kBranchObject)) {; 4591 b.MapObject((TObject*) fObject);; 4592 } else if (TestBit(kBranchAny)) {; 4593 b.MapObject(fObject, fBranchClass);; 4594 }; 4595 ; 4596 fNdata = (Int_t) fBranchCount->GetValue(0, 0);; 4597 TStreamerInfo *info = GetInfoImp();; 4598 if (!info) {; 4599 return;; 4600 }; 4601 R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject,1); // Here we have a single object that contains a variable size C-style array.; 4602 // Since info is not null, fReadActionSequence is not null either.; 4603 b.ApplySequence(*fReadActionSequence, fObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:169536,Validat,ValidateAddress,169536,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['Validat'],['ValidateAddress']
Security,"s generated if one of the; elements of newDeps is not found as a server. Double_t eval(const RooArgSet* nset = 0); Evaluate TFormula using given normalization set to be used as; observables definition passed to RooAbsReal::getVal(). DefinedValue(Int_t code); Interface to TFormula, return value defined by object with id 'code'; Object ids are mapped from object names by method DefinedVariable(). Int_t DefinedVariable(TString& name, int& action); Interface to TFormula. If name passed by TFormula is recognized; as one of our RooAbsArg servers, return a unique id integer; that represent this variable. Int_t DefinedVariable(TString& name); Interface to TFormula. If name passed by TFormula is recognized; as one of our RooAbsArg servers, return a unique id integer; that represent this variable. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Printing interface. void printValue(ostream& os) const; Print value of formula. void printName(ostream& os) const; Print name of formula. void printTitle(ostream& os) const; Print title of formula. void printClassName(ostream& os) const; Print class name of formula. void printArgs(ostream& os) const; Print arguments of formula, i.e. dependents that are actually used. TObject* Clone(const char* newName = 0) const; { return new RooFormula(*this,newName) ; }. RooAbsArg* getParameter(const char* name) const; Return pointer to parameter with given name. RooAbsArg* getParameter(Int_t index) const; Return pointer to parameter at given index. Bool_t ok(); Function value accessor. { return _isOK ; }. void Print(Option_t* options = 0) const; Printing interface (human readable). RooFormula& operator=(const RooFormula& other). void initCopy(const RooFormula& other). » Last changed: Tue Jun 30 14:33:01 2015 » Last generated: 2015-06-30 14:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooFormula.html:21179,access,accessor,21179,root/html602/RooFormula.html,https://root.cern,https://root.cern/root/html602/RooFormula.html,1,['access'],['accessor']
Security,"s generated if one of the; elements of newDeps is not found as a server. Double_t eval(const RooArgSet* nset = 0); Evaluate TFormula using given normalization set to be used as; observables definition passed to RooAbsReal::getVal(). DefinedValue(Int_t code); Interface to TFormula, return value defined by object with id 'code'; Object ids are mapped from object names by method DefinedVariable(). Int_t DefinedVariable(TString& name, int& action); Interface to TFormula. If name passed by TFormula is recognized; as one of our RooAbsArg servers, return a unique id integer; that represent this variable. Int_t DefinedVariable(TString& name); Interface to TFormula. If name passed by TFormula is recognized; as one of our RooAbsArg servers, return a unique id integer; that represent this variable. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Printing interface. void printValue(ostream& os) const; Print value of formula. void printName(ostream& os) const; Print name of formula. void printTitle(ostream& os) const; Print title of formula. void printClassName(ostream& os) const; Print class name of formula. void printArgs(ostream& os) const; Print arguments of formula, i.e. dependents that are actually used. TObject* Clone(const char* newName = 0) const; { return new RooFormula(*this,newName) ; }. RooAbsArg* getParameter(const char* name) const; Return pointer to parameter with given name. RooAbsArg* getParameter(Int_t index) const; Return pointer to parameter at given index. Bool_t ok(); Function value accessor. { return _isOK ; }. void Print(Option_t* options = 0) const; Printing interface (human readable). RooFormula& operator=(const RooFormula& other). void initCopy(const RooFormula& other). » Last changed: Tue Mar 10 17:16:49 2015 » Last generated: 2015-03-10 17:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooFormula.html:16392,access,accessor,16392,root/html534/RooFormula.html,https://root.cern,https://root.cern/root/html534/RooFormula.html,1,['access'],['accessor']
Security,s how to run items of work asynchronously with a TTaskGroup ;  mt302_TTaskGroupNested.C Calculate Fibonacci numbers exploiting nested parallelism through TTaskGroup ;  mt303_AsyncSimple.C Shows how to run items of work asynchronously with Async ;  mt304_AsyncNested.C Calculate Fibonacci numbers exploiting nested parallelism through Async ;  mt304_fillHistos.CFill histograms in parallel with automatic binning ;  mt305_TFuture.C Shows how to use the Future class of ROOT as a wrapper of std::future ;  mtbb001_fillHistos.C Fill histograms in parallel and write them on file ;  mtbb101_fillNtuples.C Fill n-tuples in distinct workers ;  mtbb201_parallelHistoFill.C Parallel fill of a histogram ;  ► net;  alien.C Example of use of the TAlien class (an implementation of TGrid) ;  authclient.CThis macro should be run together with authserv.C to test authentication between two remote ROOT sessions ;  authserv.CThis macro should be run together with authclient.C to test authentication between two remote ROOT sessions ;  fastMergeServer.CThis script shows how to make a simple iterative server that can receive TMemFile from multiple clients and merge them into a single file without block ;  hclient.CClient program which creates and fills a histogram ;  hclientbonj.CClient program which creates and fills a histogram ;  hcons.CHistogram consumer script ;  hprod.CHistogram producer script ;  hserv.CServer program which waits for two clients to connect ;  hserv2.CThis script shows how to make a simple iterative server that can accept connections while handling currently open connections ;  hserv2bonj.CThis script shows how to make a simple iterative server that can accept connections while handling currently open connections ;  LDAPExample.C;  parallelMergeClient.CClient program which creates and fills 2 histograms and a TTree ;  parallelMergeServer.CThis script shows how to make a simple iterative server that can accept connections while handling currently open connections ;  parallel,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/files.html:136205,authenticat,authentication,136205,doc/v612/files.html,https://root.cern,https://root.cern/doc/v612/files.html,1,['authenticat'],['authentication']
Security,"s if it was not yet trained, just instantiated; virtual void Reset() = 0;; for the moment, I provide a dummy (that would not work) default, just to make; compilation/running w/o parameter optimisation still possible. {return;}. Double_t GetMvaValue(Double_t* errLower = 0, Double_t* errUpper = 0); classifier response:; some methods may return a per-event error estimate; error calculation is skipped if err==0. const std::vector<Float_t>& GetRegressionValues(); regression response. const std::vector<Float_t>& GetMulticlassValues(); multiclass classification response. const Ranking* CreateRanking(); create ranking. Bool_t MonitorBoost(TMVA::MethodBoost* ); perfrom extra actions during the boosting at different stages. {return kFALSE;}. void AddWeightsXMLTo(void* parent) const; the actual ""weights"". void ReadWeightsFromXML(void* wghtnode). void ReadWeightsFromStream(istream& ). void ReadWeightsFromStream(TFile& ); {}. const TString& GetJobName() const; ---------- public accessors -----------------------------------------------; classifier naming (a lot of names ... aren't they ;-). { return fJobName; }. const TString& GetMethodName() const; { return fMethodName; }. TString GetMethodTypeName() const; { return Types::Instance().GetMethodName(fMethodType); }. Types::EMVA GetMethodType() const; { return fMethodType; }. const char* GetName() const; { return fMethodName.Data(); }. const TString& GetTestvarName() const; { return fTestvar; }. const TString GetProbaName() const; { return fTestvar + ""_Proba""; }. void SetTestvarName(const TString& v = """"); build classifier name in Test tree; MVA prefix (e.g., ""TMVA_""). { fTestvar = (v=="""") ? (""MVA_"" + GetMethodName()) : v; }. UInt_t GetNvar() const; number of input variable used by classifier. { return DataInfo().GetNVariables(); }. UInt_t GetNVariables() const; { return DataInfo().GetNVariables(); }. UInt_t GetNTargets() const; { return DataInfo().GetNTargets(); }. const TString& GetInputVar(Int_t i) const; internal names and expr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodBase.html:30122,access,accessors,30122,root/html528/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodBase.html,3,['access'],['accessors']
Security,"s in different namespaces, we can; 152# stack multiple @pythonization decorators. For example, if we define these; 153# classes:; 154ROOT.gInterpreter.Declare('''; 155class FirstClass {};; 156namespace NS {; 157 class SecondClass {};; 158}; 159'''); 160 ; 161# We can pythonize both of them with a single pythonizor function like so:; 162@pythonization('FirstClass'); 163@pythonization('SecondClass', ns='NS'); 164def pythonizor_for_first_and_second(klass, name):; 165 print('Executed for class ' + name); 166 ; 167# If we now access both classes, we should see that the pythonizor runs twice.; 168f = ROOT.FirstClass(); 169s = ROOT.NS.SecondClass(); 170 ; 171# So far we have seen how pythonizations can be registered for classes that; 172# have not been used yet. We have discussed how, in that case, the pythonizor; 173# functions are executed lazily when their target class/es are used for the; 174# first time in the application.; 175# However, it can also happen that our target class/es have already been; 176# accessed by the time we register a pythonization. In such a scenario, the; 177# pythonizor is applied immediately (at registration time) to the target; 178# class/es.; 179 ; 180# Let's see an example of what was just explained. We will define a new class; 181# and immediately create an object of that class. We can check how the object; 182# still does not have a new attribute `pythonized` that we are going to inject; 183# in the next step.; 184ROOT.gInterpreter.Declare('''; 185class MyClass2 {};; 186'''); 187o = ROOT.MyClass2(); 188try:; 189 print(o.pythonized); 190except AttributeError:; 191 print(""Object has not been pythonized yet!""); 192 ; 193# After that, we will register a pythonization for `MyClass2`. Since the class; 194# has already been used, the pythonization will happen right away.; 195@pythonization('MyClass2'); 196def pythonizor_for_myclass2(klass):; 197 klass.pythonized = True; 198 ; 199# Now our object does have the `pythonized` attribute:; 200print(o.p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/pyroot002__pythonizationDecorator_8py_source.html:8788,access,accessed,8788,doc/master/pyroot002__pythonizationDecorator_8py_source.html,https://root.cern,https://root.cern/doc/master/pyroot002__pythonizationDecorator_8py_source.html,1,['access'],['accessed']
Security,"s in this branch. ; Reimplemented in THbookBranch.; Definition at line 2838 of file TBranch.cxx. ◆ SetEntryOffsetLen(). void TBranch::SetEntryOffsetLen ; (; Int_t ; len, . bool ; updateSubBranches = false . ). virtual . Update the default value for the branch's fEntryOffsetLen if and only if it was already non zero (and the new value is not zero) If updateExisting is true, also update all the existing branches. ; Definition at line 2821 of file TBranch.cxx. ◆ SetFile() [1/2]. void TBranch::SetFile ; (; const char * ; fname). virtual . Set file where this branch writes/reads its buffers. ; By default the branch buffers reside in the file where the Tree was created. If the file name where the tree was created is an absolute path name or an URL (e.g. root://host/...) and if the fname is not an absolute path name or an URL then the path of the tree file is prepended to fname to make the branch file relative to the tree file. In this case one can move the tree + all branch files to a different location in the file system and still access the branch files. The ROOT file will be connected only when necessary. If called by TBranch::Fill (via TBasket::WriteFile), the file will be created with the option ""recreate"". If called by TBranch::GetEntry (via TBranch::GetBasket), the file will be opened in read mode. To open a file in ""update"" mode or with a certain compression level, use TBranch::SetFile(TFile *file). ; Definition at line 2908 of file TBranch.cxx. ◆ SetFile() [2/2]. void TBranch::SetFile ; (; TFile * ; file = nullptr). virtual . Set file where this branch writes/reads its buffers. ; By default the branch buffers reside in the file where the Tree was created. If the file name where the tree was created is an absolute path name or an URL (e.g. or root://host/...) and if the fname is not an absolute path name or an URL then the path of the tree file is prepended to fname to make the branch file relative to the tree file. In this case one can move the tree + all branch ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranch.html:64225,access,access,64225,doc/master/classTBranch.html,https://root.cern,https://root.cern/doc/master/classTBranch.html,1,['access'],['access']
Security,"s in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collecti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQConnectionList.html:6254,Hash,Hash,6254,doc/master/classTQConnectionList.html,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"s in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofOutputList.html:6805,Hash,Hash,6805,doc/master/classTProofOutputList.html,https://root.cern,https://root.cern/doc/master/classTProofOutputList.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"s in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHashList.html:8538,Hash,Hash,8538,doc/master/classTHashList.html,https://root.cern,https://root.cern/doc/master/classTHashList.html,22,"['Hash', 'hash']","['Hash', 'hash']"
Security,"s in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEditHist.html:5915,Hash,Hash,5915,doc/master/classTGTextEditHist.html,https://root.cern,https://root.cern/doc/master/classTGTextEditHist.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"s in this file. ;  ; void FillBuffer (char *&) final;  Encode file output buffer. ;  ; void Flush () final;  Synchronize a file's in-memory and on-disk states. ;  ; Int_t GetArrayLimit () const;  ; const char * GetDataBaseName () const;  Return name of data base on the host For Oracle always return 0. ;  ; Long64_t GetEND () const final;  ; Int_t GetErrno () const final;  Method returning errno. ;  ; Int_t GetIOVersion () const;  ; Int_t GetNbytesFree () const final;  ; Int_t GetNbytesInfo () const final;  ; Int_t GetNfree () const final;  ; Int_t GetQuerisCounter () const;  ; Long64_t GetSeekFree () const final;  ; Long64_t GetSeekInfo () const final;  ; Long64_t GetSize () const final;  Returns the current file size. ;  ; const char * GetTablesType () const;  ; Int_t GetUseIndexes () const;  ; Bool_t GetUseSuffixes () const;  ; Int_t GetUseTransactions () const;  ; TClass * IsA () const override;  ; Bool_t IsMySQL () const;  checks, if MySQL database ;  ; Bool_t IsODBC () const;  checks, if ODBC driver used for database connection ;  ; Bool_t IsOpen () const final;  return kTRUE if file is opened and can be accessed ;  ; Bool_t IsOracle () const;  checks, if Oracle database ;  ; void MakeFree (Long64_t, Long64_t) final;  Mark unused bytes on the file. ;  ; void MakeProject (const char *, const char *=""*"", Option_t *=""new"") final;  Generate source code necessary to access the objects stored in the file. ;  ; TString MakeSelectQuery (TClass *cl);  Produce SELECT statement which can be used to get all data of class cl in one SELECT statement. ;  ; void Map () final;  ; void Map (Option_t *) final;  List the contents of a file sequentially. ;  ; void Paint (Option_t *="""") final;  Paint all objects in the file. ;  ; void Print (Option_t *="""") const final;  Print all objects in the file. ;  ; Bool_t ReadBuffer (char *, Int_t) final;  Read a buffer from the file. ;  ; Bool_t ReadBuffer (char *, Long64_t, Int_t) final;  Read a buffer from the file at the offset 'pos' in th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLFile.html:11914,access,accessed,11914,doc/master/classTSQLFile.html,https://root.cern,https://root.cern/doc/master/classTSQLFile.html,1,['access'],['accessed']
Security,"s inherited from TGenCollectionProxy; void CheckFunctions () const;  Check existence of function pointers. ;  ; TGenCollectionProxy * Initialize (Bool_t silent) const;  Proxy initializer. ;  ; virtual TGenCollectionProxy * InitializeEx (Bool_t silent);  Proxy initializer. ;  ;  Protected Attributes inherited from TGenCollectionProxy; Method fClear;  Method cache for container accessors: clear container. ;  ; Collectfunc_t fCollect;  Method to collect objects from container. ;  ; ArrIterfunc_t fConstruct;  Container accessors: block construct. ;  ; std::map< std::string, TObjArray * > * fConversionReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) derived from another class. ;  ; Method0 fCreateEnv;  Method to allocate an Environment holder. ;  ; Sizing_t fDestruct;  Container accessors: block destruct. ;  ; EnvironBase_t * fEnv;  Address of the currently proxied object. ;  ; Feedfunc_t fFeed;  Container accessors: block feed. ;  ; Method fFirst;  Container accessors: generic iteration: first. ;  ; CopyIterator_t fFunctionCopyIterator;  ; CreateIterators_t fFunctionCreateIterators;  ; DeleteIterator_t fFunctionDeleteIterator;  ; DeleteTwoIterators_t fFunctionDeleteTwoIterators;  ; Next_t fFunctionNextIterator;  ; Value * fKey;  Descriptor of the key_type. ;  ; std::string fName;  Name of the class being proxied. ;  ; Method fNext;  Container accessors: generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenBitsetProxy.html:10035,access,accessors,10035,doc/master/classTGenBitsetProxy.html,https://root.cern,https://root.cern/doc/master/classTGenBitsetProxy.html,6,['access'],['accessors']
Security,"s may cause an annoying but harmless compiler warning:; Myclass.cxx:98: warning:; converting from ""void (Myclass::*)(void *)""to ""void *"" ); Strictly speaking, Thread0 must be a static member function to be called from a thread. Some compilers, for example gcc version 2.95.2, may not allow the (void(*) (void*))s cast and just stop if Thread0 is not static. On the other hand, if Thread0 is static, no compiler warnings are generated at all. Because the 'this' pointer is passed in 'arg' in the call to Thread0(void *arg), you have access to the instance of the class even if Thread0 is static. Using the 'this' pointer, non static members can still be read and written from Thread0, as long as you have provided Getter and Setter methods for these members. For example:; Bool_t state = arg->GetRunStatus();; arg->SetRunStatus(state);; Second, the pointer to the current instance of Myclass, i.e. (void*) this, has to be passed as first argument of the threaded function Thread0 (C++ member functions internally expect this pointer as first argument to have access to class members of the same instance). pthreads are made for simple C functions and do not know about Thread0 being a member function of a class. Thus, you have to pass this information by hand, if you want to access all members of the Myclass instance from the Thread0 function.; Note: Method Thread0 cannot be a virtual member function, since the cast of Thread0 to void(*) in the TThread constructor may raise problems with C++ virtual function table. However, Thread0 may call another virtual member function virtual void Myclass::Func0() which then can be overridden in a derived class of Myclass. (See example TMhs3).; Class Myclass may also provide a method to stop the running thread:; Int_t Myclass::Threadstop() {; if (mTh) {; TThread::Delete(mTh);; delete mTh;; mTh=0;; return 0;; }; return 1;; }; Example TMhs3: Class TThreadframe (TThreadframe.h, TThreadframe.cxx) is a simple example of a framework class managing up to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1115612,access,access,1115612,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['access'],['access']
Security,"s name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 41 of file TStatsFeedback.h. ◆ Hash(). ULong_t TStatsFeedback::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498; TStatsFeedback::HashULong_t Hash() const overrideReturn hash value for this object.Definition TStatsFeedback.h:42. Reimplemented from TObject.; Definition at line 42 of file TStatsFeedback.h. ◆ IsA(). TClass * TStatsFeedback::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 44 of file TStatsFeedback.h. ◆ Streamer(). void TStatsFeedback::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ Streamer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStatsFeedback.html:16958,Hash,Hash,16958,doc/master/classTStatsFeedback.html,https://root.cern,https://root.cern/doc/master/classTStatsFeedback.html,1,['Hash'],['Hash']
Security,"s needed. void RecursiveRemove(TObject* obj); Delete object from CINT symbol table so it can not be used anymore.; CINT objects are always on the heap. void Reset(); Reset the CINT state to the state saved by the last call to; TCint::SaveContext(). void ResetAll(); Reset the CINT state to its initial state. void ResetGlobals(); Reset the CINT global object state to the state saved by the last; call to TCint::SaveGlobalsContext(). void ResetGlobalVar(void* obj); Reset the CINT global object state to the state saved by the last; call to TCint::SaveGlobalsContext(). void RewindDictionary(); Rewind CINT dictionary to the point where it was before executing; the current macro. This function is typically called after SEGV or; ctlr-C after doing a longjmp back to the prompt. Int_t DeleteGlobal(void* obj); Delete obj from CINT symbol table so it cannot be accessed anymore.; Returns 1 in case of success and 0 in case object was not in table. Int_t DeleteVariable(const char* name); Delete obj from CINT symbol table so it cannot be accessed anymore.; Returns 1 in case of success and 0 in case object was not in table. void SaveContext(); Save the current CINT state. void SaveGlobalsContext(); Save the current CINT state of global objects. void UpdateListOfGlobals(); Update the list of pointers to global variables. This function; is called by TROOT::GetListOfGlobals(). void UpdateListOfGlobalFunctions(); Update the list of pointers to global functions. This function; is called by TROOT::GetListOfGlobalFunctions(). void UpdateListOfTypes(); Update the list of pointers to Datatype (typedef) definitions. This; function is called by TROOT::GetListOfTypes(). void SetClassInfo(TClass* cl, Bool_t reload = kFALSE); Set pointer to CINT's G__ClassInfo in TClass. Bool_t CheckClassInfo(const char* name, Bool_t autoload = kTRUE); Checks if a class with the specified name is defined in CINT.; Returns kFALSE is class is not defined. void CreateListOfBaseClasses(TClass* cl); Create list of poin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TCint.html:23405,access,accessed,23405,root/html534/TCint.html,https://root.cern,https://root.cern/root/html534/TCint.html,1,['access'],['accessed']
Security,"s never a danger that a pointer to an object becomes invalid for that reason. However, having created an object, it is the user’s responsibility to ensure that it is deleted when no longer needed, or to pass that responsibility onto to some other object. Failing to do that will result in a memory leak, one of the most common and most hard-to-find C++ bugs.; To send a message to an object via a pointer to it, you need to use the “->” operator e.g.:; root[] my_objptr->Solve();; Although we chose to call our pointer my_objptr, to emphasize that it is a pointer, heap objects are so common in an object-oriented program that pointer names rarely reflect the fact - you have to be careful that you know if you are dealing with an object or its pointer! Fortunately, the compiler won’t tolerate an attempt to do something like:; root[] my_objptr.Solve();; As we have seen, heap objects have to be accessed via pointers, whereas stack objects can be accessed directly. They can also be accessed via pointers:; root[] Quad stack_quad(1.,2.,-3.);; root[] Quad *stack_ptr = &stack_quad;; root[] stack_ptr->Solve();; Here we have a Quad pointer that has been initialized with the address of a stack object. Be very careful if you take the address of stack objects. As we shall see soon, they are deleted automatically, which could leave you with an illegal pointer. Using it will corrupt and may as well crash the program!; It is time to look at the destruction of objects. A destructor is a special C++ function that releases resources for (or destroys) an object of a class. It is the opposite of a constructor that creates the object of a class when it is called. The compiler will provide a destructor that does nothing if none is provided. We will add one to our Quad class so that we can see when it is called. The class names the destructor but with a prefix ~ which is the C++ one’s complement i.e. bit wise complement, and hence has destruction overtones! We declare it in the .h file and define i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:252526,access,accessed,252526,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['access'],['accessed']
Security,"s of the currently proxied object. ;  ; Feedfunc_t fFeed;  Container accessors: block feed. ;  ; Method fFirst;  Container accessors: generic iteration: first. ;  ; CopyIterator_t fFunctionCopyIterator;  ; CreateIterators_t fFunctionCreateIterators;  ; DeleteIterator_t fFunctionDeleteIterator;  ; DeleteTwoIterators_t fFunctionDeleteTwoIterators;  ; Next_t fFunctionNextIterator;  ; Value * fKey;  Descriptor of the key_type. ;  ; std::string fName;  Name of the class being proxied. ;  ; Method fNext;  Container accessors: generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . #include <TEmulatedCollectionProxy.h>. Inheritance diagram for TEmulatedCollectionProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Cont_t. typedef std::vector<char> TEmulatedCollectionProxy::Cont_t. Definition at line 25 of file TEmulatedCollectionProxy.h. ◆ PCont_t. typedef Cont_t*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEmulatedCollectionProxy.html:12759,access,accessors,12759,doc/master/classTEmulatedCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classTEmulatedCollectionProxy.html,1,['access'],['accessors']
Security,"s of the currently proxied object. ;  ; Feedfunc_t fFeed;  Container accessors: block feed. ;  ; Method fFirst;  Container accessors: generic iteration: first. ;  ; CopyIterator_t fFunctionCopyIterator;  ; CreateIterators_t fFunctionCreateIterators;  ; DeleteIterator_t fFunctionDeleteIterator;  ; DeleteTwoIterators_t fFunctionDeleteTwoIterators;  ; Next_t fFunctionNextIterator;  ; Value * fKey;  Descriptor of the key_type. ;  ; std::string fName;  Name of the class being proxied. ;  ; Method fNext;  Container accessors: generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . #include <TEmulatedMapProxy.h>. Inheritance diagram for TEmulatedMapProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEmulatedMapProxy() [1/2]. TEmulatedMapProxy::TEmulatedMapProxy ; (; const TEmulatedMapProxy & ; copy). Definition at line 39 of file TEmulatedMapProxy.cxx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEmulatedMapProxy.html:12897,access,accessors,12897,doc/master/classTEmulatedMapProxy.html,https://root.cern,https://root.cern/doc/master/classTEmulatedMapProxy.html,1,['access'],['accessors']
Security,"s of the currently proxied object. ;  ; Feedfunc_t fFeed;  Container accessors: block feed. ;  ; Method fFirst;  Container accessors: generic iteration: first. ;  ; CopyIterator_t fFunctionCopyIterator;  ; CreateIterators_t fFunctionCreateIterators;  ; DeleteIterator_t fFunctionDeleteIterator;  ; DeleteTwoIterators_t fFunctionDeleteTwoIterators;  ; Next_t fFunctionNextIterator;  ; Value * fKey;  Descriptor of the key_type. ;  ; std::string fName;  Name of the class being proxied. ;  ; Method fNext;  Container accessors: generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenBitsetProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenBitsetProxy(). TGenBitsetProxy::TGenBitsetProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 138 of file TGenCollectionProxy.cxx. ◆ ~TGenBitsetProxy(). TGenBitsetPr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenBitsetProxy.html:10913,access,accessors,10913,doc/master/classTGenBitsetProxy.html,https://root.cern,https://root.cern/doc/master/classTGenBitsetProxy.html,1,['access'],['accessors']
Security,"s of the currently proxied object. ;  ; Feedfunc_t fFeed;  Container accessors: block feed. ;  ; Method fFirst;  Container accessors: generic iteration: first. ;  ; CopyIterator_t fFunctionCopyIterator;  ; CreateIterators_t fFunctionCreateIterators;  ; DeleteIterator_t fFunctionDeleteIterator;  ; DeleteTwoIterators_t fFunctionDeleteTwoIterators;  ; Next_t fFunctionNextIterator;  ; Value * fKey;  Descriptor of the key_type. ;  ; std::string fName;  Name of the class being proxied. ;  ; Method fNext;  Container accessors: generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenListProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenListProxy(). TGenListProxy::TGenListProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 193 of file TGenCollectionProxy.cxx. ◆ ~TGenListProxy(). TGenListProxy::~TGenLi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenListProxy.html:11051,access,accessors,11051,doc/master/classTGenListProxy.html,https://root.cern,https://root.cern/doc/master/classTGenListProxy.html,1,['access'],['accessors']
Security,"s of the currently proxied object. ;  ; Feedfunc_t fFeed;  Container accessors: block feed. ;  ; Method fFirst;  Container accessors: generic iteration: first. ;  ; CopyIterator_t fFunctionCopyIterator;  ; CreateIterators_t fFunctionCreateIterators;  ; DeleteIterator_t fFunctionDeleteIterator;  ; DeleteTwoIterators_t fFunctionDeleteTwoIterators;  ; Next_t fFunctionNextIterator;  ; Value * fKey;  Descriptor of the key_type. ;  ; std::string fName;  Name of the class being proxied. ;  ; Method fNext;  Container accessors: generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenMapProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenMapProxy(). TGenMapProxy::TGenMapProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 280 of file TGenCollectionProxy.cxx. ◆ ~TGenMapProxy(). TGenMapProxy::~TGenMapProxy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenMapProxy.html:11485,access,accessors,11485,doc/master/classTGenMapProxy.html,https://root.cern,https://root.cern/doc/master/classTGenMapProxy.html,1,['access'],['accessors']
Security,"s of the currently proxied object. ;  ; Feedfunc_t fFeed;  Container accessors: block feed. ;  ; Method fFirst;  Container accessors: generic iteration: first. ;  ; CopyIterator_t fFunctionCopyIterator;  ; CreateIterators_t fFunctionCreateIterators;  ; DeleteIterator_t fFunctionDeleteIterator;  ; DeleteTwoIterators_t fFunctionDeleteTwoIterators;  ; Next_t fFunctionNextIterator;  ; Value * fKey;  Descriptor of the key_type. ;  ; std::string fName;  Name of the class being proxied. ;  ; Method fNext;  Container accessors: generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenSetProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenSetProxy(). TGenSetProxy::TGenSetProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 235 of file TGenCollectionProxy.cxx. ◆ ~TGenSetProxy(). TGenSetProxy::~TGenSetProxy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenSetProxy.html:11246,access,accessors,11246,doc/master/classTGenSetProxy.html,https://root.cern,https://root.cern/doc/master/classTGenSetProxy.html,1,['access'],['accessors']
Security,"s of the currently proxied object. ;  ; Feedfunc_t fFeed;  Container accessors: block feed. ;  ; Method fFirst;  Container accessors: generic iteration: first. ;  ; CopyIterator_t fFunctionCopyIterator;  ; CreateIterators_t fFunctionCreateIterators;  ; DeleteIterator_t fFunctionDeleteIterator;  ; DeleteTwoIterators_t fFunctionDeleteTwoIterators;  ; Next_t fFunctionNextIterator;  ; Value * fKey;  Descriptor of the key_type. ;  ; std::string fName;  Name of the class being proxied. ;  ; Method fNext;  Container accessors: generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenVectorBoolProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenVectorBoolProxy(). TGenVectorBoolProxy::TGenVectorBoolProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 92 of file TGenCollectionProxy.cxx. ◆ ~TGenVectorBoolPr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenVectorBoolProxy.html:11108,access,accessors,11108,doc/master/classTGenVectorBoolProxy.html,https://root.cern,https://root.cern/doc/master/classTGenVectorBoolProxy.html,1,['access'],['accessors']
Security,"s of the currently proxied object. ;  ; Feedfunc_t fFeed;  Container accessors: block feed. ;  ; Method fFirst;  Container accessors: generic iteration: first. ;  ; CopyIterator_t fFunctionCopyIterator;  ; CreateIterators_t fFunctionCreateIterators;  ; DeleteIterator_t fFunctionDeleteIterator;  ; DeleteTwoIterators_t fFunctionDeleteTwoIterators;  ; Next_t fFunctionNextIterator;  ; Value * fKey;  Descriptor of the key_type. ;  ; std::string fName;  Name of the class being proxied. ;  ; Method fNext;  Container accessors: generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenVectorProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenVectorProxy(). TGenVectorProxy::TGenVectorProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 42 of file TGenCollectionProxy.cxx. ◆ ~TGenVectorProxy(). TGenVectorPro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenVectorProxy.html:11028,access,accessors,11028,doc/master/classTGenVectorProxy.html,https://root.cern,https://root.cern/doc/master/classTGenVectorProxy.html,1,['access'],['accessors']
Security,"s of the currently proxied object. ;  ; Feedfunc_t fFeed;  Container accessors: block feed. ;  ; Method fFirst;  Container accessors: generic iteration: first. ;  ; CopyIterator_t fFunctionCopyIterator;  ; CreateIterators_t fFunctionCreateIterators;  ; DeleteIterator_t fFunctionDeleteIterator;  ; DeleteTwoIterators_t fFunctionDeleteTwoIterators;  ; Next_t fFunctionNextIterator;  ; Value * fKey;  Descriptor of the key_type. ;  ; std::string fName;  Name of the class being proxied. ;  ; Method fNext;  Container accessors: generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Private Member Functions; TGenCollectionStreamer & operator= (const TGenCollectionStreamer &);  . Additional Inherited Members;  Public Types inherited from TGenCollectionProxy; enum  { kBIT_ISSTRING = 0x20000000; , kBIT_ISTSTRING = 0x40000000; };  ; typedef const std::type_info & Info_t;  ;  Public Types inherited from TVirtualCollectionProxy; typedef void *(* CopyIt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenCollectionStreamer.html:11402,access,accessors,11402,doc/master/classTGenCollectionStreamer.html,https://root.cern,https://root.cern/doc/master/classTGenCollectionStreamer.html,1,['access'],['accessors']
Security,s of the currently proxied object. ;  ; Feedfunc_t fFeed;  Container accessors: block feed. ;  ; Method fFirst;  Container accessors: generic iteration: first. ;  ; CopyIterator_t fFunctionCopyIterator;  ; CreateIterators_t fFunctionCreateIterators;  ; DeleteIterator_t fFunctionDeleteIterator;  ; DeleteTwoIterators_t fFunctionDeleteTwoIterators;  ; Next_t fFunctionNextIterator;  ; Value * fKey;  Descriptor of the key_type. ;  ; std::string fName;  Name of the class being proxied. ;  ; Method fNext;  Container accessors: generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Private Member Functions;  TGenCollectionProxy ();  ; TGenCollectionProxy & operator= (const TGenCollectionProxy &);  . Friends; class TCollectionProxyFactory;  . Additional Inherited Members;  Static Public Attributes inherited from TVirtualCollectionProxy; static const Int_t fgIteratorArenaSize = 16;  The size of a small buffer that can be allocated on the stack to ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenCollectionProxy.html:11464,access,accessors,11464,doc/master/classTGenCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classTGenCollectionProxy.html,1,['access'],['accessors']
Security,"s opened, it is checked, that the file is staged, if not, the open fails; static UInt_tfgOpenTimeoutTimeout for open operations in ms - 0 corresponds to blocking i/o; static Int_tfgReadCallsNumber of bytes read from all TFile objects; static Bool_tfgReadInfoif true (default) ReadStreamerInfo is called when opening a file; static Int_tfgReadaheadSizeReadahead buffer size. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFile(); File default Constructor. TFile(const char* fname, Option_t* option = """", const char* ftitle = """", Int_t compress = 1); Opens or creates a local ROOT file whose name is fname1. It is; recommended to specify fname1 as ""<file>.root"". The suffix "".root""; will be used by object browsers to automatically identify the file as; a ROOT file. If the constructor fails in any way IsZombie() will; return true. Use IsOpen() to check if the file is (still) open. To open non-local files use the static TFile::Open() method, that; will take care of opening the files using the correct remote file; access plugin. If option = NEW or CREATE create a new file and open it for writing,; if the file already exists the file is; not opened.; = RECREATE create a new file, if the file already; exists it will be overwritten.; = UPDATE open an existing file for writing.; if no file exists, it is created.; = READ open an existing file for reading (default).; = NET used by derived remote file access; classes, not a user callable option; = WEB used by derived remote http access; class, not a user callable option; If option = """" (default), READ is assumed. The file can be specified as a URL of the form:; file:///user/rdm/bla.root or file:/user/rdm/bla.root. The file can also be a member of an archive, in which case it is; specified as:; multi.zip#file.root or multi.zip#0; which will open file.root which is a member of the file multi.zip; archive or member 1 from the archive. For more on archive file; support see the TArchiveFile class. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFile.html:23051,access,access,23051,root/html528/TFile.html,https://root.cern,https://root.cern/root/html528/TFile.html,4,['access'],['access']
Security,"s or lists of other objects). ;  ; Bool_t IsOverlap () const;  ; Bool_t IsSortable () const override;  ; void Paint (Option_t *option="""") override;  Paint the overlap. ;  ; void Print (Option_t *option="""") const override;  Print detailed info. ;  ; virtual void PrintInfo () const;  Print some info. ;  ; void SampleOverlap (Int_t npoints=1000000);  Draw overlap and sample with random points the overlapping region. ;  ; void SetFirstMatrix (TGeoMatrix *matrix);  ; void SetFirstVolume (TGeoVolume *vol);  ; void SetIsExtrusion (Bool_t flag=kTRUE);  ; void SetIsOverlap (Bool_t flag=kTRUE);  ; void SetNextPoint (Double_t x, Double_t y, Double_t z);  Set next overlapping point. ;  ; void SetOverlap (Double_t ovlp);  ; void SetSecondMatrix (TGeoMatrix *matrix);  ; void SetSecondVolume (TGeoVolume *vol);  ; void Sizeof3D () const override;  Get 3D size of this. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Validate () const;  Validate this overlap. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoOverlap.html:3552,Validat,Validate,3552,doc/master/classTGeoOverlap.html,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html,2,['Validat'],['Validate']
Security,"s read by all TFile objects; static Long64_tTFile::fgBytesWriteNumber of bytes written by all TFile objects; static TStringTFile::fgCacheFileDirDirectory where to locally stage files; static Bool_tTFile::fgCacheFileDisconnectedIndicates, we trust in the files in the cache dir without stat on the cached file; static Bool_tTFile::fgCacheFileForceIndicates, to force all READ to CACHEREAD; static Long64_tTFile::fgFileCounterCounter for all opened files; static Bool_tTFile::fgOnlyStagedBefore the file is opened, it is checked, that the file is staged, if not, the open fails; static UInt_tTFile::fgOpenTimeoutTimeout for open operations in ms - 0 corresponds to blocking i/o; static Int_tTFile::fgReadCallsNumber of bytes read from all TFile objects; static Bool_tTFile::fgReadInfoif true (default) ReadStreamerInfo is called when opening a file; static Int_tTFile::fgReadaheadSizeReadahead buffer size. private:. TStringfBasicUrlbasic url without authentication and options; TStringfBasicUrlOrgsave original url in case of temp redirection; Bool_tfHTTP11true if server support HTTP/1.1; Bool_tfHasModRoottrue if server has mod_root installed; TStringfMsgGetHeadcache GetHead() msg; TStringfMsgReadBuffercache ReadBuffer() msg; TStringfMsgReadBuffer10cache ReadBuffer10() msg; Bool_tfNoProxydon't use proxy; TUrlfProxyproxy URL; Long64_tfSizefile size; TSocket*fSocketsocket for HTTP/1.1 (stays alive between calls); TUrlfUrlOrgsave original url in case of temp redirection; static TUrlfgProxyglobally set proxy URL. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TWebFile(const char* url, Option_t* opt = """"); Create a Web file object. A web file is the same as a read-only; TFile except that it is being read via a HTTP server. The url; argument must be of the form: http://host.dom.ain/file.root.; The opt can be ""NOPROXY"", to bypass any set ""http_proxy"" shell; variable. The proxy can be specified as (in sh, or equivalent csh):; export http_proxy=htt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TWebFile.html:22174,authenticat,authentication,22174,root/html528/TWebFile.html,https://root.cern,https://root.cern/root/html528/TWebFile.html,2,['authenticat'],['authentication']
Security,"s should be called before Initialize, after setting kDim It predefines values of the cell division for certain variable iDim. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Varedu (Double_t[5], Int_t &, Double_t &, Double_t &);  Internal method used by Initialize. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFoam.html:12521,Hash,Hash,12521,doc/master/classTFoam.html,https://root.cern,https://root.cern/doc/master/classTFoam.html,2,['Hash'],['Hash']
Security,"s starting from the root, coded as 0-1 bit patterns stored in the ""long-integer"" (i.e. 0:left ; 1:right ; Definition at line 1231 of file DecisionTree.cxx. ◆ GetNodePurityLimit(). Double_t TMVA::DecisionTree::GetNodePurityLimit ; (; ); const. inline . Definition at line 162 of file DecisionTree.h. ◆ GetPruneStrength(). Double_t TMVA::DecisionTree::GetPruneStrength ; (; ); const. inline . Definition at line 147 of file DecisionTree.h. ◆ GetRandomisedVariables(). void TMVA::DecisionTree::GetRandomisedVariables ; (; Bool_t * ; useVariable, . UInt_t * ; variableMap, . UInt_t & ; nVars . ). Definition at line 1247 of file DecisionTree.cxx. ◆ GetRoot(). virtual DecisionTreeNode * TMVA::DecisionTree::GetRoot ; (; ); const. inlinevirtual . Reimplemented from TMVA::BinaryTree.; Definition at line 94 of file DecisionTree.h. ◆ GetSumWeights(). Double_t TMVA::DecisionTree::GetSumWeights ; (; const EventConstList * ; validationSample); const. calculate the normalization factor for a pruning validation sample ; Definition at line 1118 of file DecisionTree.cxx. ◆ GetTreeID(). Int_t TMVA::DecisionTree::GetTreeID ; (; ). inline . Definition at line 186 of file DecisionTree.h. ◆ GetVariableImportance() [1/2]. vector< Double_t > TMVA::DecisionTree::GetVariableImportance ; (; ). Return the relative variable importance, normalized to all variables together having the importance 1. ; The importance in evaluated as the total separation-gain that this variable had in the decision trees (weighted by the number of events) ; Definition at line 2745 of file DecisionTree.cxx. ◆ GetVariableImportance() [2/2]. Double_t TMVA::DecisionTree::GetVariableImportance ; (; UInt_t ; ivar). returns the relative importance of variable ivar ; Definition at line 2766 of file DecisionTree.cxx. ◆ IsA(). virtual TClass * TMVA::DecisionTree::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::BinaryTree.; Definition at line 243 of file DecisionTree.h. ◆ PruneNode()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:21804,validat,validation,21804,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['validat'],['validation']
Security,"s target URI using; given a base URI.; This is an implementation of the pseudocode in chapter 5.2.2. const TString MergePaths(const TUri& reference, const TUri& base); RFC 3986, 5.3.2.; If the base URI has a defined authority component and an empty; path, then return a string consisting of ""/"" concatenated with the; reference's path; otherwise,; return a string consisting of the reference's path component; appended to all but the last segment of the base URI's path (i.e.,; excluding any characters after the right-most ""/"" in the base URI; path, or excluding the entire base URI path if it does not contain; any ""/"" characters). TUri(const TUri& uri). virtual ~TUri(); { }. const TString GetScheme() const; { return fScheme; }. const TString GetUserInfo() const; { return fUserinfo; }. const TString GetHost() const; { return fHost; }. const TString GetPort() const; { return fPort; }. const TString GetPath() const; { return fPath; }. const TString GetQuery() const; { return fQuery; }. const TString GetFragment() const; { return fFragment; }. Bool_t HasScheme() const; { return fHasScheme; }. Bool_t HasHierPart() const; { return IsHierPart(GetHierPart()); }. Bool_t HasAuthority() const; { return fHasHost; }. Bool_t HasUserInfo() const; { return fHasUserinfo; }. Bool_t HasHost() const; { return fHasHost; }. Bool_t HasPort() const; { return fHasPort; }. Bool_t HasPath() const; { return fHasPath; }. Bool_t HasQuery() const; { return fHasQuery; }. Bool_t HasFragment() const; { return fHasFragment; }. Bool_t HasRelativePart() const; { return IsRelativePart(GetRelativePart()); }. Bool_t IsSortable() const; { return kTRUE; }. » Author: Gerhard E. Bruckner 15/07/07 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TUri.h 20877 2007-11-19 11:17:07Z rdm $ » Last generated: 2010-09-23 20:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TUri.html:17153,HasH,HasHierPart,17153,root/html528/TUri.html,https://root.cern,https://root.cern/root/html528/TUri.html,2,['HasH'],"['HasHierPart', 'HasHost']"
Security,"s target URI using; given a base URI.; This is an implementation of the pseudocode in chapter 5.2.2. const TString MergePaths(const TUri& reference, const TUri& base); RFC 3986, 5.3.2.; If the base URI has a defined authority component and an empty; path, then return a string consisting of ""/"" concatenated with the; reference's path; otherwise,; return a string consisting of the reference's path component; appended to all but the last segment of the base URI's path (i.e.,; excluding any characters after the right-most ""/"" in the base URI; path, or excluding the entire base URI path if it does not contain; any ""/"" characters). TUri(const TUri& uri). virtual ~TUri(); { }. const TString GetScheme() const; { return fScheme; }. const TString GetUserInfo() const; { return fUserinfo; }. const TString GetHost() const; { return fHost; }. const TString GetPort() const; { return fPort; }. const TString GetPath() const; { return fPath; }. const TString GetQuery() const; { return fQuery; }. const TString GetFragment() const; { return fFragment; }. Bool_t HasScheme() const; { return fHasScheme; }. Bool_t HasHierPart() const; { return IsHierPart(GetHierPart()); }. Bool_t HasAuthority() const; { return fHasHost; }. Bool_t HasUserInfo() const; { return fHasUserinfo; }. Bool_t HasHost() const; { return fHasHost; }. Bool_t HasPort() const; { return fHasPort; }. Bool_t HasPath() const; { return fHasPath; }. Bool_t HasQuery() const; { return fHasQuery; }. Bool_t HasFragment() const; { return fHasFragment; }. Bool_t HasRelativePart() const; { return IsRelativePart(GetRelativePart()); }. Bool_t IsSortable() const; { return kTRUE; }. » Author: Gerhard E. Bruckner 15/07/07 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TUri.h 20877 2007-11-19 11:17:07Z rdm $ » Last generated: 2011-07-04 15:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TUri.html:17222,HasH,HasHierPart,17222,root/html530/TUri.html,https://root.cern,https://root.cern/root/html530/TUri.html,2,['HasH'],"['HasHierPart', 'HasHost']"
Security,"s target URI using; given a base URI.; This is an implementation of the pseudocode in chapter 5.2.2. const TString MergePaths(const TUri& reference, const TUri& base); RFC 3986, 5.3.2.; If the base URI has a defined authority component and an empty; path, then return a string consisting of ""/"" concatenated with the; reference's path; otherwise,; return a string consisting of the reference's path component; appended to all but the last segment of the base URI's path (i.e.,; excluding any characters after the right-most ""/"" in the base URI; path, or excluding the entire base URI path if it does not contain; any ""/"" characters). TUri(const TUri& uri). virtual ~TUri(); { }. const TString GetScheme() const; { return fScheme; }. const TString GetUserInfo() const; { return fUserinfo; }. const TString GetHost() const; { return fHost; }. const TString GetPort() const; { return fPort; }. const TString GetPath() const; { return fPath; }. const TString GetQuery() const; { return fQuery; }. const TString GetFragment() const; { return fFragment; }. Bool_t HasScheme() const; { return fHasScheme; }. Bool_t HasHierPart() const; { return IsHierPart(GetHierPart()); }. Bool_t HasAuthority() const; { return fHasHost; }. Bool_t HasUserInfo() const; { return fHasUserinfo; }. Bool_t HasHost() const; { return fHasHost; }. Bool_t HasPort() const; { return fHasPort; }. Bool_t HasPath() const; { return fHasPath; }. Bool_t HasQuery() const; { return fHasQuery; }. Bool_t HasFragment() const; { return fHasFragment; }. Bool_t HasRelativePart() const; { return IsRelativePart(GetRelativePart()); }. Bool_t IsSortable() const; { return kTRUE; }. » Author: Gerhard E. Bruckner 15/07/07 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TUri.h 20877 2007-11-19 11:17:07Z rdm $ » Last generated: 2011-11-03 20:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TUri.html:17222,HasH,HasHierPart,17222,root/html532/TUri.html,https://root.cern,https://root.cern/root/html532/TUri.html,2,['HasH'],"['HasHierPart', 'HasHost']"
Security,"s title of object. This default method returns the class title; 485/// (i.e. description). Classes that give objects a title should override; 486/// this method.; 487 ; 488const char *TObject::GetTitle() const; 489{; 490 return IsA()->GetTitle();; 491}; 492 ; 493 ; 494////////////////////////////////////////////////////////////////////////////////; 495/// Execute action in response of a timer timing out. This method; 496/// must be overridden if an object has to react to timers.; 497 ; 498Bool_t TObject::HandleTimer(TTimer *); 499{; 500 return kFALSE;; 501}; 502 ; 503////////////////////////////////////////////////////////////////////////////////; 504/// Return hash value for this object.; 505///; 506/// Note: If this routine is overloaded in a derived class, this derived class; 507/// should also add; 508/// ~~~ {.cpp}; 509/// ROOT::CallRecursiveRemoveIfNeeded(*this); 510/// ~~~; 511/// Otherwise, when RecursiveRemove is called (by ~TObject or example) for this; 512/// type of object, the transversal of THashList and THashTable containers will; 513/// will have to be done without call Hash (and hence be linear rather than; 514/// logarithmic complexity). You will also see warnings like; 515/// ~~~; 516/// Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; 517/// ~~~; 518///; 519 ; 520ULong_t TObject::Hash() const; 521{; 522 //return (ULong_t) this >> 2;; 523 const void *ptr = this;; 524 return TString::Hash(&ptr, sizeof(void*));; 525}; 526 ; 527////////////////////////////////////////////////////////////////////////////////; 528/// Returns kTRUE if object inherits from class ""classname"".; 529 ; 530Bool_t TObject::InheritsFrom(const char *classname) const; 531{; 532 return IsA()->InheritsFrom(classname);; 533}; 534 ; 535////////////////////////////////////////////////////////////////////////////////; 536/// Returns kTRUE if obje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8cxx_source.html:17992,Hash,Hash,17992,doc/master/TObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TObject_8cxx_source.html,1,['Hash'],['Hash']
Security,"s to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void Copy (TObject &) const override;  Copy this to obj. ;  ; void DrawRegion (Int_t x, Int_t y, UInt_t w, UInt_t h) override;  Draw lines in exposed region. ;  ; virtual void HLayout ();  Horizontal layout of widgets (canvas, scrollbar). ;  ; void Init (Pixel_t bg);  Initialize a text view widget. ;  ; virtual void Mark (Long_t xPos, Long_t yPos);  Mark a text region from xPos to yPos. ;  ; virtual void UnMark ();  Clear marked region. ;  ; virtual void VLayout ();  Vertical layout of widgets (canvas, scrollbar). ;  ;  Protected Member Functions inherited from TGView; void DoRedraw () override;  redraw ;  ; virtual Bool_t ItemLayout ();  ; virtual void UpdateRegion (Int_t x, Int_t y, UInt_t w, UInt_t h);  update a part of view ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextView.html:30911,expose,exposed,30911,doc/master/classTGTextView.html,https://root.cern,https://root.cern/doc/master/classTGTextView.html,1,['expose'],['exposed']
Security,"s unique identifier; static Bool_tfgPromptUserkTRUE if user prompt required; static TList*fgProofAuthInfoSpecific lists of THostAuth fro proof; static Bool_tfgPwHashkTRUE if fgPasswd is a passwd hash; static Int_tfgRSAInit; static Int_tfgRSAKeyDefault type of RSA key to be tried; static rsa_KEYfgRSAPriKey; static rsa_KEY_exportfgRSAPubExport[2]; static rsa_KEYfgRSAPubKey; static Bool_tfgReadHomeAuthrckTRUE to look for $HOME/.rootauthrc; static TStringfgRootAuthrcPath to last rootauthrc-like file read; static Bool_tfgSRPPwdkTRUE if fgPasswd is a SRP passwd; static SecureAuth_tfgSecAuthHook; static TStringfgUser; static Bool_tfgUsrPwdCryptkTRUE if encryption for UsrPwd is required. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAuthenticate(TSocket* sock, const char* remote, const char* proto, const char* user = """"); Create authentication object. void CatchTimeOut(); Called in connection with a timer timeout. Bool_t Authenticate(); Authenticate to remote rootd or proofd server. Return kTRUE if; authentication succeeded. void SetEnvironment(); Set default authentication environment. The values are inferred; from fSecurity and fDetails. Bool_t GetUserPasswd(TString& user, TString& passwd, Bool_t& pwhash, Bool_t srppwd); Try to get user name and passwd from several sources. Bool_t CheckNetrc(TString& user, TString& passwd); Try to get user name and passwd from the ~/.rootnetrc or; ~/.netrc files. For more info see the version with 4 arguments.; This version is maintained for backward compatability reasons. Bool_t CheckNetrc(TString& user, TString& passwd, Bool_t& pwhash, Bool_t srppwd); Try to get user name and passwd from the ~/.rootnetrc or; ~/.netrc files. First ~/.rootnetrc is tried, after that ~/.netrc.; These files will only be used when their access masks are 0600.; Returns kTRUE if user and passwd were found for the machine; specified in the URL. If kFALSE, user and passwd are """".; If srppwd == kTRUE then a SRP ('secur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAuthenticate.html:11289,Authenticat,Authenticate,11289,root/html526/TAuthenticate.html,https://root.cern,https://root.cern/root/html526/TAuthenticate.html,14,['Authenticat'],['Authenticate']
Security,"s will affect next generation operation (only) ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1UpperLimitMCSModule.html:3082,Hash,Hash,3082,doc/master/classRooStats_1_1UpperLimitMCSModule.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1UpperLimitMCSModule.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"s() and GetFieldName() methods.; To recieve data for next result row, NextResultRow() method should be called.; Value from each column can be taken with the GetInt(), GetDouble(),; GetString() and other methods. There are no strict limitation which method should be used; to get column values. GetString() can be used as generic method,; which should always return correct result, but also convertion between most; basic data types are supported. For instance, if column contains integer; values, GetInt(), GetLong64(), GetDouble() and GetString() methods can be used.; If column has float point format, GetDouble() and GetString() methods can; be used without loss of precision while GetInt() or GetLong64() will return; integer part of the value. One also can test, if value is NULL with IsNull(); method. Buffer length, specified for statement in TSQLServer::Statement() call,; will also be used to allocate buffers for column values. Usage of these; buffers is transparent for users and does not limit number of rows,; which can be accessed with one statement. Example of select query:. stmt = serv->Statement(""SELECT * FROM TESTTABLE"", 100);; // process statement; if (stmt->Process()) {; // store result of statement in buffer; stmt->StoreResult();. // display info about selected field; cout << ""NumFields = "" << stmt->GetNumFields() << endl;; for (int n=0;n<stmt->GetNumFields();n++); cout << ""Field "" << n << "" = "" << stmt->GetFieldName(n) << endl;. // extract rows one after another; while (stmt->NextResultRow()) {; Double_t id1 = stmt->GetDouble(0);; UInt_t id2 = stmt->GetUInt(1);; const char* name1 = stmt->GetString(2);; const char* name2 = stmt->GetString(3);; cout << id1 << "" - "" << id2 << "" "" << name1 << "" "" << name2 << endl;; }; }. 4. Working with date/time parameters. Current implementation supports date, time, date&time and timestamp; data (all time intervals not supported yet). To set or get date/time values,; following methods should be used:; SetTime()/GetTime() - only t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSQLStatement.html:6147,access,accessed,6147,root/html528/TSQLStatement.html,https://root.cern,https://root.cern/root/html528/TSQLStatement.html,3,['access'],['accessed']
Security,"s() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual TDSetElement*TProofPlayer::GetNextPacket(TSlave* slave, TMessage* r); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TObject*TProofPlayer::GetOutput(const char* name) const; virtual TList*TProofPlayer::GetOutputList() const; virtual TVirtualPacketizer*TProofPlayer::GetPacketizer() const; virtual TProofProgressStatus*TProofPlayer::GetProgressStatus() const; virtual TQueryResult*TProofPlayer::GetQueryResult(const char* ref); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTProofPlayer::HandleGetTreeHeader(TMessage* mess); virtual voidTProofPlayer::HandleRecvHisto(TMessage* mess); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsClient() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnecti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofPlayerLocal.html:7195,Hash,Hash,7195,root/html528/TProofPlayerLocal.html,https://root.cern,https://root.cern/root/html528/TProofPlayerLocal.html,3,['Hash'],['Hash']
Security,"s() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual TDSetElement*TProofPlayer::GetNextPacket(TSlave* slave, TMessage* r); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TObject*TProofPlayer::GetOutput(const char* name) const; virtual TList*TProofPlayer::GetOutputList() const; virtual TVirtualPacketizer*TProofPlayer::GetPacketizer() const; virtual TProofProgressStatus*TProofPlayer::GetProgressStatus() const; virtual TQueryResult*TProofPlayer::GetQueryResult(const char* ref); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTProofPlayer::HandleGetTreeHeader(TMessage* mess); virtual voidTProofPlayer::HandleRecvHisto(TMessage* mess); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsClient() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Bool_tTProofPlayer::JoinProcess(TList* workers); static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofPlayerLocal.html:7195,Hash,Hash,7195,root/html534/TProofPlayerLocal.html,https://root.cern,https://root.cern/root/html534/TProofPlayerLocal.html,1,['Hash'],['Hash']
Security,"s() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual TDSetElement*TProofPlayer::GetNextPacket(TSlave* slave, TMessage* r); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TObject*TProofPlayer::GetOutput(const char* name) const; virtual TList*TProofPlayer::GetOutputList() const; virtual TVirtualPacketizer*TProofPlayer::GetPacketizer() const; virtual TProofProgressStatus*TProofPlayer::GetProgressStatus() const; virtual TQueryResult*TProofPlayer::GetQueryResult(const char* ref); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTProofPlayer::HandleGetTreeHeader(TMessage* mess); virtual voidTProofPlayer::HandleRecvHisto(TMessage* mess); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsClient() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Bool_tTProofPlayer::JoinProcess(TList* workers); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofPlayerLocal.html:7154,Hash,Hash,7154,root/html602/TProofPlayerLocal.html,https://root.cern,https://root.cern/root/html602/TProofPlayerLocal.html,2,['Hash'],['Hash']
Security,"s() const; virtual Int_tGetNextNodeIndex() const; TGeoNode*TGeoVolume::GetNode(const char* name) const; TGeoNode*TGeoVolume::GetNode(Int_t i) const; Int_tTGeoVolume::GetNodeIndex(const TGeoNode* node, Int_t* check_list, Int_t ncheck) const; TObjArray*TGeoVolume::GetNodes(); Int_tTGeoVolume::GetNtotal() const; Int_tTGeoVolume::GetNumber() const; virtual char*TGeoVolume::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Bool_tTGeoVolume::GetOptimalVoxels() const; virtual Option_t*TGeoVolume::GetOption() const; char*TGeoVolume::GetPointerName() const; TGeoShape*TGeoVolume::GetShape() const; TGeoVolumeAssembly::ThreadData_t&GetThreadData() const; virtual const char*TNamed::GetTitle() const; Char_tTGeoVolume::GetTransparency() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVoxelFinder*TGeoVolume::GetVoxels() const; voidTGeoVolume::GrabFocus()MENU ; voidTGeoVolume::Gsord(Int_t); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static TGeoVolume*TGeoVolume::Import(const char* filename, const char* name = """", Option_t* option = """"); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTGeoVolume::InspectMaterial() constMENU ; voidTGeoVolume::InspectShape() constMENU ; voidTObject::InvertBit(UInt_t f); voidTGeoVolume::InvisibleAll(Bool_t flag = kTRUE)TOGGLE GETTER ; virtual TClass*IsA() const; Bool_tTGeoVolume::IsActive() const; Bool_tTGeoVolume::IsActiveDaughters() const; Bool_tTGeoVolume::IsAdded() const; Bool_tTGeoVolume::IsAllInvisible() const; virtual Bool_tIsAssembly() const; Bool_tTGeoVolume::IsCylVoxels() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTGeoVolume::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoVolume::IsRaytracing() const; Bool_tTGeoVolume::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoVolumeAssembly.html:13292,Hash,Hash,13292,root/html532/TGeoVolumeAssembly.html,https://root.cern,https://root.cern/root/html532/TGeoVolumeAssembly.html,1,['Hash'],['Hash']
Security,"s(const char* group, const char* user, const char* dsName = 0, UInt_t option = 0); static TList*TDataSetManager::GetDataSetSrvMaps(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tTDataSetManager::GetGroupQuota(const char* group); virtual TMap*TDataSetManager::GetGroupQuotaMap(); virtual Long64_tTDataSetManager::GetGroupUsed(const char* group); virtual const char*TObject::GetIconName() const; Long_tGetModTime(const char* uri); const char*GetMSSUrl() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetStageOpts() const; virtual TMap*TDataSetManager::GetSubDataSets(const char* uri, const char* excludeservers); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTDataSetManager::MonitorUsedSpace(TVirtualMonitoringWriter* monitoring); virtual Bool_tTObject::Notify(); virtual Int_tNotifyUpdate(const char* group, const char* user, const char* dspath, Long_t mtime, const char* checksum = 0); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDataSetManagerFile.html:3939,Hash,Hash,3939,root/html534/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html534/TDataSetManagerFile.html,1,['Hash'],['Hash']
Security,"s(const char* group, const char* user, const char* dsName = 0, UInt_t option = 0); static TList*TDataSetManager::GetDataSetSrvMaps(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tTDataSetManager::GetGroupQuota(const char* group); virtual TMap*TDataSetManager::GetGroupQuotaMap(); virtual Long64_tTDataSetManager::GetGroupUsed(const char* group); virtual const char*TObject::GetIconName() const; Long_tGetModTime(const char* uri); const char*GetMSSUrl() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetStageOpts() const; virtual TMap*TDataSetManager::GetSubDataSets(const char* uri, const char* excludeservers); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTDataSetManager::MonitorUsedSpace(TVirtualMonitoringWriter* monitoring); virtual Bool_tTObject::Notify(); virtual Int_tNotifyUpdate(const char* group, const char* user, const char* dspath, Long_t mtime, const char* checksum = 0); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDataSetManagerFile.html:3803,Hash,Hash,3803,root/html602/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html602/TDataSetManagerFile.html,2,['Hash'],['Hash']
Security,"s) listed in categoryNameList and that remainder fraction formula be put in state with name remainderStateName. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimWSTool_1_1SplitRule.html:1825,Hash,Hash,1825,doc/master/classRooSimWSTool_1_1SplitRule.html,https://root.cern,https://root.cern/doc/master/classRooSimWSTool_1_1SplitRule.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"s); 598{; 599 if (this != &rhs); 600 rhs.TFormula::Copy(*this);; 601 return *this;; 602}; 603 ; 604////////////////////////////////////////////////////////////////////////////////; 605Bool_t TFormula::InitLambdaExpression(const char * formula) {; 606 ; 607 std::string lambdaExpression = formula;; 608 ; 609 // check if formula exist already in the map; 610 {; 611 R__LOCKGUARD(gROOTMutex);; 612 ; 613 auto funcit = gClingFunctions.find(lambdaExpression);; 614 if (funcit != gClingFunctions.end() ) {; 615 fLambdaPtr = funcit->second;; 616 fClingInitialized = true;; 617 return true;; 618 }; 619 }; 620 ; 621 // to be sure the interpreter is initialized; 622 ROOT::GetROOT();; 623 R__ASSERT(gInterpreter);; 624 ; 625 // set the cling name using hash of the static formulae map; 626 auto hasher = gClingFunctions.hash_function();; 627 TString lambdaName = TString::Format(""lambda__id%zu"", hasher(lambdaExpression) );; 628 ; 629 //lambdaExpression = TString::Format(""[&](double * x, double *){ return %s ;}"",formula);; 630 //TString lambdaName = TString::Format(""mylambda_%s"",GetName() );; 631 TString lineExpr = TString::Format(""std::function<double(double*,double*)> %s = %s ;"",lambdaName.Data(), lambdaExpression.c_str() );; 632 gInterpreter->ProcessLine(lineExpr);; 633 fLambdaPtr = (void*) gInterpreter->ProcessLine(TString(lambdaName)+TString("";"")); // add ; to avoid printing; 634 if (fLambdaPtr != nullptr) {; 635 R__LOCKGUARD(gROOTMutex);; 636 gClingFunctions.insert ( std::make_pair ( lambdaExpression, fLambdaPtr) );; 637 fClingInitialized = true;; 638 return true;; 639 }; 640 fClingInitialized = false;; 641 return false;; 642}; 643 ; 644////////////////////////////////////////////////////////////////////////////////; 645/// Compile the given expression with Cling; 646/// backward compatibility method to be used in combination with the empty constructor; 647/// if no expression is given , the current stored formula (retrieved with GetExpFormula()) or the title is used.; 648/// return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:23063,hash,hasher,23063,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['hash'],['hasher']
Security,"s);  ; void StopEmbedding (const char *name="""");  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooBrowser.html:8358,Hash,Hash,8358,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooBrowser.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooBrowser.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"s)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; static TCollection::(anonymous)TCollection::kIsOwner. private:. TList**fContHash table (table of lists); Int_tfEntriesNumber of objects in table; Int_tfRehashLevelAverage collision rate which triggers rehash; Int_tfUsedSlotsNumber of used slots. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THashTable(Int_t capacity = TCollection::kInitHashTableCapacity, Int_t rehash = 0); Create a THashTable object. Capacity is the initial hashtable capacity; (i.e. number of slots), by default kInitHashTableCapacity = 17, and; rehashlevel is the value at which a rehash will be triggered. I.e. when; the average size of the linked lists at a slot becomes longer than; rehashlevel then the hashtable will be resized and refilled to reduce; the collision rate to about 1. The higher the collision rate, i.e. the; longer the linked lists, the longer lookup will take. If rehashlevel=0; the table will NOT automatically be rehashed. Use Rehash() for manual; rehashing. ~THashTable(); Delete a hashtable. Objects are not deleted unless the THashTable is the; owner (set via SetOwner()). void Add(TObject* obj); Add object to the hash table. Its position in the table will be; determined by the value returned by its Hash() function. void AddBefore(const TObject* before, TObject* obj); Add object to the hash table. Its position in the table will be; determined by the value returned by its Hash() function.; If and only if 'before' is in the same bucket as obj, obj is added; in front of 'before' within the bucket's list. void AddAll(const TCollection* col); Add all objects from collection col to this collection.; Implemented for more efficient rehashing. void Clear(Option_t* optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THashTable.html:9434,hash,hashtable,9434,root/html602/THashTable.html,https://root.cern,https://root.cern/root/html602/THashTable.html,2,['hash'],['hashtable']
Security,"s, Int_t nc, Int_t first, Int_t eoffset);  Write for ClonesArray ('first' is an id between -1 and fNfulldata). ;  ; Int_t WriteBufferSTL (TBuffer &b, TVirtualCollectionProxy *cont, Int_t nc);  Write for STL container. ('first' is an id between -1 and fNfulldata). ;  ; Int_t WriteBufferSTLPtrs (TBuffer &b, TVirtualCollectionProxy *cont, Int_t nc, Int_t first, Int_t eoffset);  Write for STL container. ;  . Static Private Member Functions; template<typename T > ; static T GetTypedValueAux (Int_t type, void *ladd, int k, Int_t len);  Get the value from inside a collection. ;  ; static void PrintValueAux (char *ladd, Int_t atype, TStreamerElement *aElement, Int_t aleng, Int_t *count);  print value of element in object at pointer, type atype, leng aleng or *count The function may be called in two ways: -method1 len < 0 i is assumed to be the TStreamerElement number i in StreamerInfo -method2 len >= 0 i is the type address of variable is directly pointer. ;  . Private Attributes; UInt_t fCheckSum;  Checksum of original class. ;  ; TClass * fClass;  !pointer to class ;  ; Int_t fClassVersion;  Class version identifier. ;  ; TCompInfo * fComp;  ![fNslots with less than fElements->GetEntries()*1.5 used] Compiled info ;  ; TCompInfo ** fCompFull;  ![fElements->GetEntries()] ;  ; TCompInfo ** fCompOpt;  ![fNdata] ;  ; TObjArray * fElements;  Array of TStreamerElements. ;  ; Int_t fNdata;  !number of optimized elements ;  ; Int_t fNfulldata;  !number of elements ;  ; Int_t fNslots;  !total number of slots in fComp. ;  ; Int_t fNumber;  !Unique identifier ;  ; Int_t fNVirtualInfoLoc;  ! Number of virtual info location to update. ;  ; Version_t fOldVersion;  ! Version of the TStreamerInfo object read from the file ;  ; Int_t fOnFileClassVersion;  !Class version identifier as stored on file. ;  ; TStreamerInfoActions::TActionSequence * fReadMemberWise;  ! List of read action resulting from the compilation for use in member wise streaming. ;  ; TStreamerInfoActions::TActionSequence *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerInfo.html:28076,Checksum,Checksum,28076,doc/master/classTStreamerInfo.html,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html,1,['Checksum'],['Checksum']
Security,"s, Int_t* volumeNumbers) const; voidGetBranchOnlys(Int_t* isonly) const; TGeoHMatrix*GetCurrentMatrix() const; Int_tGetCurrentNodeId() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const Int_t*GetIdBranch() const; TGeoStateInfo*GetInfo(); Int_tGetLevel() const; TGeoStateInfo*GetMakePWInfo(Int_t nd); void*GetMatrices() const; TGeoNode*GetMother(Int_t up = 1) const; TGeoHMatrix*GetMotherMatrix(Int_t up = 1) const; virtual const char*TObject::GetName() const; TGeoNode*GetNode() const; Int_tGetNodeId() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetPath(); Int_tGetStackLevel() const; virtual const char*TObject::GetTitle() const; TGeoNode*GetTopNode() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasIdArray() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsDummy() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; voidLocalToMaster(const Double_t* local, Double_t* master) const; voidLocalToMasterBomb(const Double_t* local, Double_t* master) const; voidLocalToMasterVect(const Double_t* local, Double_t* master) const; virtual voidTObject::ls(Option_t* option = """") const; voidMasterToLocal(const Double_t* master, Double_t* local) const; voidMasterToLocalBomb(const Double_t* master, Double_t* local) const; voidMasterToLocalVect(const Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoNodeCache.html:3071,Hash,Hash,3071,root/html534/TGeoNodeCache.html,https://root.cern,https://root.cern/root/html534/TGeoNodeCache.html,2,['Hash'],['Hash']
Security,"s, the longer lookup will take. If rehashlevel=0; the table will NOT automatically be rehashed. Use Rehash() for manual; rehashing. ~THashTable(); Delete a hashtable. Objects are not deleted unless the THashTable is the; owner (set via SetOwner()). void Add(TObject* obj); Add object to the hash table. Its position in the table will be; determined by the value returned by its Hash() function. void AddAll(const TCollection* col); Add all objects from collection col to this collection.; Implemented for more efficient rehashing. void Clear(Option_t* option = """"); Remove all objects from the table. Does not delete the objects; unless the THashTable is the owner (set via SetOwner()). Int_t Collisions(const char* name) const; Returns the number of collisions for an object with a certain name; (i.e. number of objects in same slot in the hash table, i.e. length; of linked list). Int_t Collisions(TObject* obj) const; Returns the number of collisions for an object (i.e. number of objects; in same slot in the hash table, i.e. length of linked list). void Delete(Option_t* option = """"); Remove all objects from the table AND delete all heap based objects. TObject * FindObject(const char* name) const; Find object using its name. Uses the hash value returned by the; TString::Hash() after converting name to a TString. TObject * FindObject(const TObject* obj) const; Find object using its hash value (returned by its Hash() member). TList * GetListForObject(const char* name) const; Return the TList corresponding to object's name based hash value.; One can iterate this list ""manually"" to find, e.g. objects with; the same name. TList * GetListForObject(const TObject* obj) const; Return the TList corresponding to object's hash value.; One can iterate this list ""manually"" to find, e.g. identical; objects. TObject ** GetObjectRef(const TObject* obj) const; Return address of pointer to obj. TIterator * MakeIterator(Bool_t dir = kIterForward) const; Returns a hash table iterator. void Rehash(I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THashTable.html:9824,hash,hash,9824,root/html528/THashTable.html,https://root.cern,https://root.cern/root/html528/THashTable.html,3,['hash'],['hash']
Security,"s,; the following methods should be used:; SetTime()/GetTime() - only time (hour:min:sec),; SetDate()/GetDate() - only date (year-month-day),; SetDatime()/GetDatime() - date and time; SetTimestamp()/GetTimestamp() - timestamp with seconds fraction; For some of these methods TDatime type can be used as parameter / return value.; Be aware that TDatime supports only dates after 1995-01-01.; There are also methods to get year, month, day, hour, minutes and seconds separately. Note that different SQL databases treat date/time types differently.; For instance, MySQL has all correspondent types (TIME, DATE, DATETIME and TIMESTAMP),; Oracle native driver supports only DATE (which is actually date and time) and TIMESTAMP; ODBC interface provides access for time, date and timestamps,; for PostgreSQL, TIMESTAMP is available and can be retrieved via all methods,; the implementation for SQLite interprets the column content as; a timestamp with second fraction.; Due to these differences, one should use correct methods to access such data.; For instance, in MySQL SQL type 'DATE' is only date (one should use GetDate() to; access such data), while in Oracle it is date and time. Therefore,; to get complete data from a 'DATE' column in Oracle, one should use the GetDatime() method. The only difference between timestamp and date/time is that timestamp has a fractional; seconds part. Be aware that the fractional part has different meanings; (actual value) in different SQL plugins.; For PostgreSQL, it is given back as microseconds, while for SQLite3,; milliseconds correspond to the fraction (similar to the DATETIME-functions; implemented in the SQLite3 language). 5. Binary data. Most modern data bases support just binary data, which is; typically has SQL type name 'BLOB'. To access data in such; columns, GetBinary()/SetBinary() methods should be used.; The current implementation implies that the complete content of the; column must be retrieved at once. Therefore, very big data of; gigaby",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSQLStatement.html:8990,access,access,8990,root/html534/TSQLStatement.html,https://root.cern,https://root.cern/root/html534/TSQLStatement.html,3,['access'],['access']
Security,"s. ; At the moment two engine kinds are supported:. civetweb or http (default); fastcgi. Examples: // creates civetweb web server with http port 8080; serv->CreateEngine(""http:8080"");; serv->CreateEngine(""civetweb:8080"");; serv->CreateEngine("":8080"");; // creates fastcgi server with port 9000; serv->CreateEngine(""fastcgi:9000"");; One could apply additional parameters, using URL syntax: serv->CreateEngine(""http:8080?thrds=10""); . Definition at line 419 of file THttpServer.cxx. ◆ CreateItem(). Bool_t THttpServer::CreateItem ; (; const char * ; fullname, . const char * ; title . ). Create item in sniffer. ; Definition at line 1455 of file THttpServer.cxx. ◆ CreateServerThread(). void THttpServer::CreateServerThread ; (; ). Creates special thread to process all requests, directed to http server. ; Should be used with care - only dedicated instance of TRootSniffer is allowed By default THttpServer allows to access global lists pointers gROOT or gFile. To be on the safe side, all kind of such access performed from the main thread. Therefore usage of specialized thread means that no any global pointers will be accessible by THttpServer ; Definition at line 515 of file THttpServer.cxx. ◆ DeclFileName(). static const char * THttpServer::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 198 of file THttpServer.h. ◆ ExecuteHttp(). Bool_t THttpServer::ExecuteHttp ; (; std::shared_ptr< THttpCallArg > ; arg). Execute HTTP request. ; Executes http request, specified in THttpCallArg structure.; Method can be called from any thread Actual execution will be done in main ROOT thread, where analysis code is running. ; Definition at line 642 of file THttpServer.cxx. ◆ ExecuteWS(). Bool_t THttpServer::ExecuteWS ; (; std::shared_ptr< THttpCallArg > & ; arg, . Bool_t ; external_thrd = kFALSE, . Bool_t ; wait_process = kFALSE . ). Execute WS request. ; Execute WS related operation. ; Definition at line 1299 of file THttpServer.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHttpServer.html:23753,access,access,23753,doc/master/classTHttpServer.html,https://root.cern,https://root.cern/doc/master/classTHttpServer.html,1,['access'],['access']
Security,"s. Additionally --with-png=no --with-bzip2=no flags are passed to freetype configuration script. Default values for these options are auto. freetype finds libpng and libbzip2 on the system and builds extra modules. Then attempting to link against freetype one would need to link -lpng -lbzip2 explicitly otherwise linking will returns in undefined references. Otherwise we would need to check for libpng and libbzip2 on the system and adjust FREETYPE_LIBRARIES to include -lpng and -lbzip2. The current solution goes for the minimal configuration. The original request for this update was posted here.; 3D Graphics Libraries; Geometry Libraries; Database Libraries; Networking Libraries; THttpServer; Support of POST HTTP requests. For example, ROOT objects can be send with POST request and used as arguments of objects method execution in exe.bin and exe.json requests. Request and response HTTP headers are now directly accessible in THttpCallArg class; When command is registered with THttpServer::RegisterCommand() method, one could configure additional arguments which should be submitted when command is executed with cmd.json requests; Introduce restriction rules for objects access with THttpServer::Restrict() method. Up to now general read-only flag was applied - either everything read-only or everything is fully accessible. Now one could restrict access to different parts of objects hierarchy or even fully ‘hide’ them from the client. Restriction based on user account name, which is applied when htdigest authentication is configured. One also able to allow execution of selected methods.; Implement multi.bin and multi.json requests. One could request many items with single HTTP request. Let optimize communication between server and client.; With SNIFF tag in ClassDef() comments one could expose different properties, which than exposed by the TRootSniffer to the client with h.json requests. Such possibility ease implementation of client-side code for custom classes.; Allow to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v606/release-notes.html:18429,access,accessible,18429,doc/v606/release-notes.html,https://root.cern,https://root.cern/doc/v606/release-notes.html,1,['access'],['accessible']
Security,"s. Bool_t GetUserPasswd(TString& user, TString& passwd, Bool_t& pwhash, Bool_t srppwd); Try to get user name and passwd from several sources. Bool_t CheckNetrc(TString& user, TString& passwd); Try to get user name and passwd from the ~/.rootnetrc or; ~/.netrc files. For more info see the version with 4 arguments.; This version is maintained for backward compatability reasons. Bool_t CheckNetrc(TString& user, TString& passwd, Bool_t& pwhash, Bool_t srppwd); Try to get user name and passwd from the ~/.rootnetrc or; ~/.netrc files. First ~/.rootnetrc is tried, after that ~/.netrc.; These files will only be used when their access masks are 0600.; Returns kTRUE if user and passwd were found for the machine; specified in the URL. If kFALSE, user and passwd are """".; If srppwd == kTRUE then a SRP ('secure') pwd is searched for in; the files.; The boolean pwhash is set to kTRUE if the returned passwd is to; be understood as password hash, i.e. if the 'password-hash' keyword; is found in the 'machine' lines; not implemented for 'secure'; and the .netrc file.; The format of these files are:. # this is a comment line; machine <machine fqdn> login <user> password <passwd>; machine <machine fqdn> login <user> password-hash <passwd>. and in addition ~/.rootnetrc also supports:. secure <machine fqdn> login <user> password <passwd>. <machine fqdn> may be a domain name or contain the wild card '*'. for the secure protocols. All lines must start in the first column. const char * GetGlobalUser(); Static method returning the global user. Bool_t GetGlobalPwHash(); Static method returning the global password hash flag. Bool_t GetGlobalSRPPwd(); Static method returning the global SRP password flag. TDatime GetGlobalExpDate(); Static method returning default expiring date for new validity contexts. const char * GetDefaultUser(); Static method returning the default user information. const char * GetKrb5Principal(); Static method returning the principal to be used to init Krb5 tickets. Bool_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAuthenticate.html:12466,password,password-hash,12466,root/html526/TAuthenticate.html,https://root.cern,https://root.cern/root/html526/TAuthenticate.html,14,"['password', 'secur']","['password-hash', 'secure']"
Security,"s.; Compare()returns -1, 0 or 1 depending if the object is smaller, equal or larger than the other object. By default, a TObject has not a valid Compare() method.; IsSortable()returns true if the class is sort able (i.e. if it has a valid Compare() method). By default, a TObject is not sort able.; Hash()returns a hash value. It needs to be implemented if an object has to be stored in a collection using a hashing technique, like THashTable, THashList and TMap. By default, Hash() returns the address of the object. It is essential to choose a good hash function. The example below shows how to use and override these member functions.; class TObjNum : public TObject {; private:; Int_t num; // TObjNum is a simple container for an integer.; public:; TObjNum(Int_t i = 0) : num(i) { }; ~TObjNum() { }; void SetNum(Int_t i) { num = i; }; Int_t GetNum() const { return num; }; void Print(Option_t *) const; { printf(""num = %dn"", num); }; Bool_t IsEqual(TObject *obj) const; { return num == ((TObjNum*)obj)->num; }; Bool_t IsSortable() const { return kTRUE; }; Int_t Compare(const TObject *obj) const; { if (num < ((TObjNum*)obj)->num) return -1;; else if (num > ((TObjNum*)obj)->num) return 1;; else return 0; }; ULong_t Hash() const { return num; }; };; 16.5 The TIter Generic Iterator; As stated above, the TIterator class is abstract; it is not possible to create TIterator objects. However, it should be possible to write generic code to process all members of a collection so there is a need for a generic iterator object. A TIter object acts as generic iterator. It provides the same Next() and Reset() methods as TIterator although it has no idea how to support them! It works as follows:. To create a TIter object its constructor must be passed an object that inherits from TCollection. The TIter constructor calls the MakeIterator() method of this collection to get the appropriate iterator object that inherits from TIterator.; The Next() and Reset() methods of TIter simply call the Next()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:848689,Hash,Hash,848689,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['Hash'],['Hash']
Security,"s.capacity()) {; 2617 Int_t multiplier = 2;; 2618 if (fFuncs.size() > 100) {; 2619 multiplier = TMath::Floor(TMath::Log10(fFuncs.size()) * 10);; 2620 }; 2621 fClingVariables.reserve(multiplier * fClingVariables.capacity());; 2622 }; 2623 fClingVariables.push_back(0.0);; 2624 }; 2625 // else; 2626 // {; 2627 // var.fValue = v.second;; 2628 // fClingVariables[var.fArrayPos] = v.second;; 2629 // }; 2630 }; 2631 if (anyNewVar && !fFormula.IsNull()) {; 2632 ProcessFormula(fClingInput);; 2633 }; 2634}; 2635 ; 2636////////////////////////////////////////////////////////////////////////////////; 2637/// Set the name of the formula. We need to allow the list of function to; 2638/// properly handle the hashes.; 2639 ; 2640void TFormula::SetName(const char* name); 2641{; 2642 if (IsReservedName(name)) {; 2643 Error(""SetName"", ""The name \'%s\' is reserved as a TFormula variable name.\n""; 2644 ""\tThis function will not be renamed."",; 2645 name);; 2646 } else {; 2647 // Here we need to remove and re-add to keep the hashes consistent with; 2648 // the underlying names.; 2649 auto listOfFunctions = gROOT->GetListOfFunctions();; 2650 TObject* thisAsFunctionInList = nullptr;; 2651 R__LOCKGUARD(gROOTMutex);; 2652 if (listOfFunctions){; 2653 thisAsFunctionInList = listOfFunctions->FindObject(this);; 2654 if (thisAsFunctionInList) listOfFunctions->Remove(thisAsFunctionInList);; 2655 }; 2656 TNamed::SetName(name);; 2657 if (thisAsFunctionInList) listOfFunctions->Add(thisAsFunctionInList);; 2658 }; 2659}; 2660 ; 2661////////////////////////////////////////////////////////////////////////////////; 2662///; 2663/// Sets multiple variables.; 2664/// First argument is an array of pairs<TString,Double>, where; 2665/// first argument is name of variable,; 2666/// second argument represents value.; 2667/// size - number of variables passed in first argument; 2668 ; 2669void TFormula::SetVariables(const pair<TString,Double_t> *vars, const Int_t size); 2670{; 2671 for(Int_t i = 0; i < size; ++i); 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:102040,hash,hashes,102040,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['hash'],['hashes']
Security,"s.cxx. ◆ TClass() [6/8]. TClass::TClass ; (; ClassInfo_t * ; classInfo, . Version_t ; cversion, . const char * ; dfil, . const char * ; ifil = nullptr, . Int_t ; dl = 0, . Int_t ; il = 0, . Bool_t ; silent = kFALSE . ). Internal constructor. ; Create a TClass object. This object contains the full dictionary of a class. It has list to baseclasses, datamembers and methods. Use this ctor to create a standalone TClass object. Most useful to get a TClass interface to an interpreted class. Used by TTabCom.; This copies the ClassInfo (i.e. does not take ownership of it).; NoteUse TClass::GetClass(""class"") to get access to a TClass object for a certain class! ; Definition at line 1224 of file TClass.cxx. ◆ TClass() [7/8]. TClass::TClass ; (; const char * ; name, . Version_t ; cversion, . const char * ; dfil, . const char * ; ifil = nullptr, . Int_t ; dl = 0, . Int_t ; il = 0, . Bool_t ; silent = kFALSE . ). Internal constructor. ; NoteUse TClass::GetClass(""class"") to get access to a TClass object for a certain class! ; Definition at line 1275 of file TClass.cxx. ◆ TClass() [8/8]. TClass::TClass ; (; const char * ; name, . Version_t ; cversion, . const std::type_info & ; info, . TVirtualIsAProxy * ; isa, . const char * ; dfil, . const char * ; ifil, . Int_t ; dl, . Int_t ; il, . Bool_t ; silent = kFALSE . ). Internal constructor. ; NoteUse TClass::GetClass(""class"") to get access to a TClass object for a certain class! ; Definition at line 1304 of file TClass.cxx. ◆ ~TClass(). TClass::~TClass ; (; ). virtual . TClass dtor. Deletes all list that might have been created. ; Definition at line 1660 of file TClass.cxx. Member Function Documentation. ◆ AddClass(). void TClass::AddClass ; (; TClass * ; cl). static . static: Add a class to the list and map of classes. ; Definition at line 494 of file TClass.cxx. ◆ AddClassToDeclIdMap(). void TClass::AddClassToDeclIdMap ; (; TDictionary::DeclId_t ; id, . TClass * ; cl . ). static . static: Add a TClass* to the map of classes. ; Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:51540,access,access,51540,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,1,['access'],['access']
Security,"s.cxx. ◆ TClass() [6/8]. TClass::TClass ; (; ClassInfo_t * ; classInfo, . Version_t ; cversion, . const char * ; dfil, . const char * ; ifil = nullptr, . Int_t ; dl = 0, . Int_t ; il = 0, . Bool_t ; silent = kFALSE . ). Internal constructor. ; Create a TClass object. This object contains the full dictionary of a class. It has list to baseclasses, datamembers and methods. Use this ctor to create a standalone TClass object. Most useful to get a TClass interface to an interpreted class. Used by TTabCom.; This copies the ClassInfo (i.e. does not take ownership of it).; NoteUse TClass::GetClass(""class"") to get access to a TClass object for a certain class! ; Definition at line 1291 of file TClass.cxx. ◆ TClass() [7/8]. TClass::TClass ; (; const char * ; name, . Version_t ; cversion, . const char * ; dfil, . const char * ; ifil = nullptr, . Int_t ; dl = 0, . Int_t ; il = 0, . Bool_t ; silent = kFALSE . ). Internal constructor. ; NoteUse TClass::GetClass(""class"") to get access to a TClass object for a certain class! ; Definition at line 1342 of file TClass.cxx. ◆ TClass() [8/8]. TClass::TClass ; (; const char * ; name, . Version_t ; cversion, . const std::type_info & ; info, . TVirtualIsAProxy * ; isa, . const char * ; dfil, . const char * ; ifil, . Int_t ; dl, . Int_t ; il, . Bool_t ; silent = kFALSE . ). Internal constructor. ; NoteUse TClass::GetClass(""class"") to get access to a TClass object for a certain class! ; Definition at line 1371 of file TClass.cxx. ◆ ~TClass(). TClass::~TClass ; (; ). virtual . TClass dtor. Deletes all list that might have been created. ; Definition at line 1727 of file TClass.cxx. Member Function Documentation. ◆ AddClass(). void TClass::AddClass ; (; TClass * ; cl). static . static: Add a class to the list and map of classes. ; Definition at line 555 of file TClass.cxx. ◆ AddClassToDeclIdMap(). void TClass::AddClassToDeclIdMap ; (; TDictionary::DeclId_t ; id, . TClass * ; cl . ). static . static: Add a TClass* to the map of classes. ; Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:51541,access,access,51541,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['access'],['access']
Security,"s.h:110; TClass::GetBaseClassOffsetInt_t GetBaseClassOffset(const TClass *toBase, void *address=nullptr, bool isDerivedObject=true)Definition TClass.cxx:2858; TClass::GetCollectionProxyTVirtualCollectionProxy * GetCollectionProxy() constReturn the proxy describing the collection (if any).Definition TClass.cxx:2964; TClass::GetClassSizeInt_t GetClassSize() constDefinition TClass.h:425; TClass::PropertyLong_t Property() const overrideReturns the properties of the TClass as a bit field stored as a Long_t value.Definition TClass.cxx:6153; TClass::kInterpreted@ kInterpretedDefinition TClass.h:126; TClass::kEmulated@ kEmulatedDefinition TClass.h:125; TClass::kNoInfo@ kNoInfoDefinition TClass.h:122; TClass::kForwardDeclared@ kForwardDeclaredDefinition TClass.h:124; TClass::IsVersionedBool_t IsVersioned() constDefinition TClass.h:522; TClass::SetClassSizevoid SetClassSize(Int_t sizof)Definition TClass.h:307; TClass::FindStreamerInfoTVirtualStreamerInfo * FindStreamerInfo(TObjArray *arr, UInt_t checksum) constFind the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum.Definition TClass.cxx:7133; TClass::FindStreamerInfoAbstractEmulatedTVirtualStreamerInfo * FindStreamerInfoAbstractEmulated(UInt_t checksum) constFor the case where the requestor class is emulated and this class is abstract, returns a pointer to t...Definition TClass.cxx:4839; TClass::GetClassVersionVersion_t GetClassVersion() constDefinition TClass.h:420; TClass::GetRealDataTRealData * GetRealData(const char *name) constReturn pointer to TRealData element with name ""name"".Definition TClass.cxx:3570; TClass::kWarned@ kWarnedDefinition TClass.h:104; TClass::GetClassstatic TClass * GetClass(const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE)Static method returning pointer to TClass of the specified class name.Definition TClass.cxx:3035; TClonesArrayAn array of clone (identical) objects.Definition TClonesArray.h:29; TClonesArray::Classstatic TClass * Class(); TCollectionProxyFactory::GenEmu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html:255180,checksum,checksum,255180,doc/master/TStreamerInfo_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html,2,['checksum'],['checksum']
Security,"s/panel/panel.html"" as default HTML page At the moment only FitPanel is existing. ; Definition at line 132 of file RWebWindow.cxx. ◆ SetPosition(). void ROOT::RWebWindow::SetPosition ; (; unsigned ; x, . unsigned ; y . ). inline . Set window position. Will be applied if supported by used web display (like CEF or Chromium) ; Definition at line 269 of file RWebWindow.hxx. ◆ SetRequireAuthKey(). void ROOT::RWebWindow::SetRequireAuthKey ; (; bool ; on). inline . Configure if authentication key in connection string is required. ; Definition at line 316 of file RWebWindow.hxx. ◆ SetStartDialogFunc(). void RWebWindow::SetStartDialogFunc ; (; std::function< bool(const std::shared_ptr< RWebWindow > &, unsigned, const std::string &)> ; func). staticprivate . Configure func which has to be used for starting dialog. ; Definition at line 1953 of file RWebWindow.cxx. ◆ SetUseCurrentDir(). void ROOT::RWebWindow::SetUseCurrentDir ; (; bool ; on = true). inline . Configure if window can access local files via currentdir/ path of http server. ; Definition at line 324 of file RWebWindow.hxx. ◆ SetUserArgs(). void RWebWindow::SetUserArgs ; (; const std::string & ; args). Set arbitrary JSON data, which is accessible via conn.getUserArgs() method in JavaScript This JSON code injected into main HTML document into connectWebWindow({}) Must be set before RWebWindow::Show() method is called. ; Parameters. args- arbitrary JSON data which can be provided to client side . Definition at line 1310 of file RWebWindow.cxx. ◆ Show(). unsigned RWebWindow::Show ; (; const RWebDisplayArgs & ; args = """"). Show window in specified location. ; See alsoROOT::RWebWindowsManager::Show for more info ; Returns(future) connection id (or 0 when fails) ; Definition at line 191 of file RWebWindow.cxx. ◆ ShowWindow(). unsigned RWebWindow::ShowWindow ; (; std::shared_ptr< RWebWindow > ; window, . const RWebDisplayArgs & ; args = """" . ). static . Static method to show web window Has to be used instead of RWebWindow::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html:48135,access,access,48135,doc/v632/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html,1,['access'],['access']
Security,"s/panel/panel.html"" as default HTML page At the moment only FitPanel is existing. ; Definition at line 132 of file RWebWindow.cxx. ◆ SetPosition(). void ROOT::RWebWindow::SetPosition ; (; unsigned ; x, . unsigned ; y . ). inline . Set window position. Will be applied if supported by used web display (like CEF or Chromium) ; Definition at line 272 of file RWebWindow.hxx. ◆ SetRequireAuthKey(). void ROOT::RWebWindow::SetRequireAuthKey ; (; bool ; on). inline . Configure if authentication key in connection string is required. ; Definition at line 319 of file RWebWindow.hxx. ◆ SetStartDialogFunc(). void RWebWindow::SetStartDialogFunc ; (; std::function< bool(const std::shared_ptr< RWebWindow > &, unsigned, const std::string &)> ; func). staticprivate . Configure func which has to be used for starting dialog. ; Definition at line 1995 of file RWebWindow.cxx. ◆ SetUseCurrentDir(). void ROOT::RWebWindow::SetUseCurrentDir ; (; bool ; on = true). inline . Configure if window can access local files via currentdir/ path of http server. ; Definition at line 327 of file RWebWindow.hxx. ◆ SetUserArgs(). void RWebWindow::SetUserArgs ; (; const std::string & ; args). Set arbitrary JSON data, which is accessible via conn.getUserArgs() method in JavaScript This JSON code injected into main HTML document into connectWebWindow({}) Must be set before RWebWindow::Show() method is called. ; Parameters. args- arbitrary JSON data which can be provided to client side . Definition at line 1352 of file RWebWindow.cxx. ◆ Show(). unsigned RWebWindow::Show ; (; const RWebDisplayArgs & ; args = """"). Show window in specified location. ; See alsoROOT::RWebWindowsManager::Show for more info ; Returns(future) connection id (or 0 when fails) ; Definition at line 191 of file RWebWindow.cxx. ◆ ShowWindow(). unsigned RWebWindow::ShowWindow ; (; std::shared_ptr< RWebWindow > ; window, . const RWebDisplayArgs & ; args = """" . ). static . Static method to show web window Has to be used instead of RWebWindow::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebWindow.html:47019,access,access,47019,doc/master/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebWindow.html,1,['access'],['access']
Security,"s:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MATHCORE; » ROOT::Math::IBaseParam. class ROOT::Math::IBaseParam. Documentation for the abstract class IBaseParam.; It defines the interface for dealing with the function parameters; This is used only for internal convinience, to avoid redefining the Parameter API; for the one and the multi-dim functions.; Concrete class should derive from ROOT::Math::IParamFunction and not from this class. @ingroup ParamFunc. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~IBaseParam(); virtual unsigned intNPar() const; ROOT::Math::IBaseParam&operator=(const ROOT::Math::IBaseParam&); virtual stringParameterName(unsigned int i) const; virtual const double*Parameters() const; virtual voidSetParameters(const double* p). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~IBaseParam(). Virtual Destructor (no operations). {}. const double * Parameters() const. Access the parameter values. void SetParameters(const double* p). Set the parameter values; @param p vector of doubles containing the parameter values. to be defined: can user change number of params ? At the moment no. unsigned int NPar() const. Return the number of Parameters. std::string ParameterName(unsigned int i) const. Return the name of the i-th parameter (starting from zero); Overwrite if want to avoid the default name (""Par_0, Par_1, ...""). » Author: L. Moneta Tue Nov 14 14:20:07 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__IBaseParam.html:1253,Access,Access,1253,root/html534/ROOT__Math__IBaseParam.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__IBaseParam.html,1,['Access'],['Access']
Security,"s; 120 static ThreadsMap_t *fgThreadId; //! Thread id's map; 121 static Int_t fgNumThreads; //! Number of registered threads; 122 static Bool_t fgLockNavigators; //! Lock existing navigators; 123 TGeoNavigator *fCurrentNavigator; //! current navigator; 124 TGeoVolume *fCurrentVolume; //! current volume; 125 TGeoVolume *fTopVolume; //! top level volume in geometry; 126 TGeoNode *fTopNode; //! top physical node; 127 TGeoVolume *fMasterVolume; // master volume; 128 TGeoHMatrix *fGLMatrix; // matrix to be used for view transformations; 129 TObjArray *fUniqueVolumes; //-> list of unique volumes; 130 TGeoShape *fClippingShape; //! clipping shape for raytracing; 131 TGeoElementTable *fElementTable; //! table of elements; 132 ; 133 Int_t fNLevel; // maximum accepted level in geometry; 134 TGeoVolume *fPaintVolume; //! volume currently painted; 135 TGeoVolume *fUserPaintVolume; //!; 136 THashList *fHashVolumes; //! hash list of volumes providing fast search; 137 THashList *fHashGVolumes; //! hash list of group volumes providing fast search; 138 THashList *fHashPNE; //-> hash list of physical node entries; 139 mutable TObjArray *fArrayPNE; //! array of physical node entries; 140 Int_t fSizePNEId; // size of the array of unique ID's for PN entries; 141 Int_t fNPNEId; // number of PN entries having a unique ID; 142 Int_t *fKeyPNEId; //[fSizePNEId] array of uid values for PN entries; 143 Int_t *fValuePNEId; //[fSizePNEId] array of pointers to PN entries with ID's; 144 Int_t fMaxThreads; //! Max number of threads; 145 Bool_t fMultiThread; //! Flag for multi-threading; 146 Int_t fRaytraceMode; //! Raytrace mode: 0=normal, 1=pass through, 2=transparent; 147 Bool_t fUsePWNav; // Activate usage of parallel world in navigation; 148 TGeoParallelWorld *fParallelWorld; // Parallel world; 149 ConstPropMap_t fProperties; // Map of user-defined constant properties; 150 //--- private methods; 151 Bool_t IsLoopingVolumes() const { return fLoopVolumes; }; 152 void Init();; 153 Bool_t InitArrayP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8h_source.html:6447,hash,hash,6447,doc/master/TGeoManager_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8h_source.html,1,['hash'],['hash']
Security,"s; Dark and bright colors are used to add 3D effects to graphical objects like TWbox, TPave, TPaveText, TPaveLabel, etc. and in colored lego plots.; Two static functions are available that return the bright or dark color number corresponding to a given color index. If these variants don't already exist, they are created as needed: Int_t dark = TColor::GetColorDark(color_index);; Int_t bright = TColor::GetColorBright(color_index);; TColor::GetColorBrightstatic Int_t GetColorBright(Int_t color)Static function: Returns the bright color number corresponding to n If the TColor object does not exi...Definition TColor.cxx:2087; TColor::GetColorDarkstatic Int_t GetColorDark(Int_t color)Static function: Returns the dark color number corresponding to n If the TColor object does not exist...Definition TColor.cxx:2130. Accessible Color Schemes; Choosing an appropriate color scheme is essential for making results easy to understand and interpret. Factors like colorblindness and converting colors to grayscale for publications can impact accessibility. Furthermore, results should be aesthetically pleasing. The following three color schemes, recommended by M. Petroff in arXiv:2107.02270v2 and available on GitHub under the MIT License, meet these criteria.; These three color schemes are available as color sets with 6, 8, and 10 colors, named kP[6, 8, 10]ColorName. For example, kP6Red represents the red color within the P6 color scheme (P for Petroff or Preferred). The example thstackcolorscheme.C illustrates how to use these color schemes in THStack drawings. It also demonstrates that they are effective in grayscale. Grayscale view of of canvas with colors; One can toggle between a grayscale preview and the regular colored mode using TCanvas::SetGrayscale(). Note that in grayscale mode, access via RGB will return grayscale values according to ITU standards (and close to b&w printer gray-scales), while access via HLS returns de-saturated gray-scales. The image below shows the ROOT co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTColor.html:6329,access,accessibility,6329,doc/master/classTColor.html,https://root.cern,https://root.cern/doc/master/classTColor.html,1,['access'],['accessibility']
Security,"s; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooArgSet*RooAbsOptTestStatistic::_projDepsSet of projected observable; const RooArgSet*RooAbsTestStatistic::_projDepsPointer to set with projected observables; RooRefArrayRooAbsArg::_proxyListlist of proxies; stringRooAbsTestStatistic::_rangeNameName of range in which to calculate test statistic; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; TStringRooAbsOptTestStatistic::_sealNoticeUser-defined notice shown when reading a sealed likelihood ; Bool_tRooAbsOptTestStatistic::_sealedIs test statistic sealed -- i.e. no access to data ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Int_tRooAbsTestStatistic::_setNumPartition number of this instance in parallel calculation mode; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; Bool_t_showProgressShow progress indication during evaluation if true; Int_tRooAbsTestStatistic::_simCountTotal number of component p.d.f.s in RooSimultaneous (if any); RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_tRooAbsTestStatistic::_splitRangeSplit rangeName in RooSimultaneous index labels if true; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Double_t_sumWeightGlobal sum of weights needed for normalization; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_tRooAbsTestStatistic::_verbose",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooDataWeightedAverage.html:40592,access,access,40592,root/html534/RooDataWeightedAverage.html,https://root.cern,https://root.cern/root/html534/RooDataWeightedAverage.html,1,['access'],['access']
Security,"s; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTArchiveFile::fArchiveNameArchive file name; TStringfCommentArchive comment; TArchiveMember*TArchiveFile::fCurMemberCurrent archive member; Long64_tfDirOffsetCentral directory offset (from the beginning of the archive); Long64_tfDirPosCentral directory position; Long64_tfDirSizeCentral directory size; TFile*TArchiveFile::fFileFile stream used to access the archive; Int_tTArchiveFile::fMemberIndexIndex of sub-file in archive; TStringTArchiveFile::fMemberNameSub-file name; TObjArray*TArchiveFile::fMembersMembers in this archive. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TZIPFile(); Default ctor. TZIPFile(const char* archive, const char* member, TFile* file); Specify the archive name and member name. The member can be a decimal; number which allows to access the n-th member. Int_t OpenArchive(); Open archive and read end-header and directory. Returns -1 in case; of error, 0 otherwise. Long64_t FindEndHeader(); Find the end header of the ZIP archive. Returns 0 in case of error. Int_t ReadEndHeader(Long64_t pos); Read the end header of the ZIP archive including the archive comment; at the current file position. Check that it really was a single-disk; archive with all the entries as expected. Most importantly, figure; out where the central directory begins. Returns -1 in case of error,; 0 otherwise. Int_t ReadDirectory(); Read the directory of the ZIP archive. Returns -1 in case of error,; 0 otherwise. Int_t ReadMemberHeader(TZIPMember* member); Read the member header of the ZIP archive. Sets the position where; the data starts in the member object. Returns -1 in case of error,; 0 otherwise. Int_t SetCurrentMember(); Find the desired member in the member array and make it the; current member. Returns -1 in case member is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TZIPFile.html:10158,access,access,10158,root/html528/TZIPFile.html,https://root.cern,https://root.cern/root/html528/TZIPFile.html,1,['access'],['access']
Security,"s; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTArchiveFile::fArchiveNameArchive file name; TStringfCommentArchive comment; TArchiveMember*TArchiveFile::fCurMemberCurrent archive member; Long64_tfDirOffsetCentral directory offset (from the beginning of the archive); Long64_tfDirPosCentral directory position; Long64_tfDirSizeCentral directory size; TFile*TArchiveFile::fFileFile stream used to access the archive; Int_tTArchiveFile::fMemberIndexIndex of sub-file in archive; TStringTArchiveFile::fMemberNameSub-file name; TObjArray*TArchiveFile::fMembersMembers in this archive. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TZIPFile(); Default ctor. TZIPFile(const char* archive, const char* member, TFile* file); Specify the archive name and member name. The member can be a decimal; number which allows to access the n-th member. Int_t OpenArchive(); Open archive and read end-header and directory. Returns -1 in case; of error, 0 otherwise. Long64_t FindEndHeader(); Find the end header of the ZIP archive. Returns 0 in case of error. Int_t ReadEndHeader(Long64_t pos); Read the end header of the ZIP archive including the archive comment; at the current file position. Check that it really was a single-disk; archive with all the entries as expected. Most importantly, figure; out where the central directory begins. Returns -1 in case of error,; 0 otherwise. Long64_t ReadZip64EndLocator(Long64_t pos); Read Zip64 end of central directory locator. Returns -1 in case of error,; -2 in case end locator magic is not found (i.e. not a zip64 file) and; offset of Zip64 end of central directory record in case of success. Int_t ReadZip64EndRecord(Long64_t pos); Read Zip64 end of central directory record. Returns -1 in case of error; and 0 in case of success. Int_t ReadDirectory(); Read the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TZIPFile.html:11651,access,access,11651,root/html530/TZIPFile.html,https://root.cern,https://root.cern/root/html530/TZIPFile.html,3,['access'],['access']
Security,"s; set<string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue; Bool_tRooAbsArg::_deleteWatch! Delete watch flag; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Double_t_epsPrecision; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; RooFunctor*_ftor! Functor binding of RooAbsReal; RooRealProxy_funcInput function; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches; Bool_tRooAbsArg::_isConstant! Cached isConstant status; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooDerivative.html:34971,access,access,34971,root/html602/RooDerivative.html,https://root.cern,https://root.cern/root/html602/RooDerivative.html,2,['access'],['access']
Security,"s;  Precision to be used in ASCII exports. ;  ; static UInt_t fgExportPrecision = 17;  Maximum number of Xtru vertices. ;  ; static Bool_t fgLock = kFALSE;  mutex for navigator booking in MT mode ;  ; static Int_t fgMaxDaughters = 1;  Maximum level in geometry. ;  ; static Int_t fgMaxLevel = 1;  Verbosity level for Info messages (no IO). ;  ; static Int_t fgMaxXtruVert = 1;  Maximum number of daughters. ;  ; static std::mutex fgMutex;  ; static Int_t fgVerboseLevel = 1;  Lock preventing a second geometry to be loaded. ;  . Private Types; typedef std::map< std::string, Double_t > ConstPropMap_t;  ; typedef std::map< std::thread::id, TGeoNavigatorArray * > NavigatorsMap_t;  bits used for voxelization ;  ; typedef NavigatorsMap_t::iterator NavigatorsMapIt_t;  ; typedef std::map< std::thread::id, Int_t > ThreadsMap_t;  ; typedef ThreadsMap_t::const_iterator ThreadsMapIt_t;  . Private Member Functions; void Init ();  Initialize manager class. ;  ; Bool_t InitArrayPNE () const;  Initialize PNE array for fast access via index and unique-id. ;  ; Bool_t InsertPNEId (Int_t uid, Int_t ientry);  Insert a PN entry in the sorted array of indexes. ;  ; Bool_t IsLoopingVolumes () const;  ; void SetLoopVolumes (Bool_t flag=kTRUE);  ; void UpdateElements ();  Update element flags when geometry is loaded from a file. ;  ; void Voxelize (Option_t *option=nullptr);  Voxelize all non-divided volumes. ;  . Private Attributes; Bool_t fActivity;  flag for GL reflections ;  ; TObjArray * fArrayPNE;  ; UChar_t * fBits;  ; TObjArray * fBorderSurfaces;  ; TGeoShape * fClippingShape;  ; Bool_t fClosed;  ; TGeoNavigator * fCurrentNavigator;  Lock existing navigators. ;  ; TVirtualGeoTrack * fCurrentTrack;  ; TGeoVolume * fCurrentVolume;  current navigator ;  ; Bool_t fDrawExtra;  ; TGeoElementTable * fElementTable;  clipping shape for raytracing ;  ; Int_t fExplodedView;  ; TObjArray * fGDMLMatrices;  ; TGeoHMatrix * fGLMatrix;  ; TObjArray * fGShapes;  ; TObjArray * fGVolumes;  list of runtime ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoManager.html:63101,access,access,63101,doc/master/classTGeoManager.html,https://root.cern,https://root.cern/doc/master/classTGeoManager.html,1,['access'],['access']
Security,"s;  TMatrixTSymLazy ();  ;  TMatrixTSymLazy (Int_t nrows);  ;  TMatrixTSymLazy (Int_t row_lwb, Int_t row_upb);  ;  ~TMatrixTSymLazy () override;  ; Int_t GetRowLwb () const;  ; Int_t GetRowUpb () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTSymLazy.html:1530,Hash,Hash,1530,doc/master/classTMatrixTSymLazy.html,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html,2,['Hash'],['Hash']
Security,"s=1,WeightDecay=1e-2,Regularization=None,MaxEpochs=20,Optimizer=ADAM,DropConfig=0.0+0.+0.+0.:Architecture=CPU""; : The following options are set:; : - By User:; : V: ""True"" [Verbose output (short form of ""VerbosityLevel"" below - overrides the latter one)]; : VarTransform: ""None"" [List of variable transformations performed before training, e.g., ""D_Background,P_Signal,G,N_AllClasses"" for: ""Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)""]; : H: ""False"" [Print method-specific help message]; : InputLayout: ""10|30"" [The Layout of the input]; : Layout: ""LSTM|10|30|10|0|1,RESHAPE|FLAT,DENSE|64|TANH,LINEAR"" [Layout of the network.]; : ErrorStrategy: ""CROSSENTROPY"" [Loss function: Mean squared error (regression) or cross entropy (binary classification).]; : WeightInitialization: ""XAVIERUNIFORM"" [Weight initialization strategy]; : RandomSeed: ""1234"" [Random seed used for weight initialization and batch shuffling]; : ValidationSize: ""0.2"" [Part of the training data to use for validation. Specify as 0.2 or 20% to use a fifth of the data set as validation set. Specify as 100 to use exactly 100 events. (Default: 20%)]; : Architecture: ""CPU"" [Which architecture to perform the training on.]; : TrainingStrategy: ""LearningRate=1e-3,Momentum=0.0,Repetitions=1,ConvergenceSteps=5,BatchSize=100,TestRepetitions=1,WeightDecay=1e-2,Regularization=None,MaxEpochs=20,Optimizer=ADAM,DropConfig=0.0+0.+0.+0."" [Defines the training strategies.]; : - Default:; : VerbosityLevel: ""Default"" [Verbosity level]; : CreateMVAPdfs: ""False"" [Create PDFs for classifier outputs (signal and background)]; : IgnoreNegWeightsInTraining: ""False"" [Events with negative weights are ignored in the training (but are included for testing and performance evaluation)]; : BatchLayout: ""0|0|0"" [The Layout of the batch]; : Will now use the CPU architecture with BLAS and IMT s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:7252,Validat,ValidationSize,7252,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['Validat'],['ValidationSize']
Security,"sA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TProofResources;  TProofResources ();  ;  ~TProofResources () override;  ; virtual Bool_t IsValid () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofResourcesStatic.html:3353,Hash,Hash,3353,doc/master/classTProofResourcesStatic.html,https://root.cern,https://root.cern/doc/master/classTProofResourcesStatic.html,2,['Hash'],['Hash']
Security,"sArg object to the given ostream. Based on concept developed by Kyle Cranmer. void graphVizAddConnections(set<std::pair<RooAbsArg*,RooAbsArg*> >& ); Utility function that inserts all point-to-point client-server connections; between any two RooAbsArgs in the expression tree headed by this object; in the linkSet argument. Bool_t inhibitDirty(); Return current status of the inhibitDirty global flag. If true; no dirty state change tracking occurs and all caches are considered; to be always dirty. Bool_t addOwnedComponents(const RooArgSet& comps); Take ownership of the contents of 'comps'. RooAbsArg* cloneTree(const char* newname = 0) const; Clone tree expression of objects. All tree nodes will be owned by; the head node return by cloneTree(). RooExpensiveObjectCache& expensiveObjectCache() const. Bool_t flipAClean(). const char* aggregateCacheUniqueSuffix() const. TObject* clone(const char* newname) const. TObject* Clone(const char* newname = 0) const. Bool_t isDerived() const; Accessors to client-server relation information. Bool_t dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Does this arg depend on the value of any of of the values in serverList?. Bool_t dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; Does this arg depend on the value of server?. Bool_t hasClients() const; { return _clientList.GetSize()>0 ? kTRUE : kFALSE ; }. TIterator* clientIterator() const; Return iterator over all client RooAbsArgs. TIterator* valueClientIterator() const; Return iterator over all value client RooAbsArgs. TIterator* shapeClientIterator() const; Return iterator over all shape client RooAbsArgs. TIterator* serverIterator() const; Return iterator over all server RooAbsArgs. RooAbsArg* findServer(const char* name) const; Return server of this arg with given name. Returns null if not found. RooAbsArg* findServer(const RooAbsArg& arg) const; Return server of this arg with name of given input arg. Returns null if",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsArg.html:35456,Access,Accessors,35456,root/html528/RooAbsArg.html,https://root.cern,https://root.cern/root/html528/RooAbsArg.html,2,['Access'],['Accessors']
Security,sArg::_cacheListlist of caches; Bool_t_cdfBoundariesUse boundary conditions for CDFs.; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue; RooAICRegistry_codeReg! Auxiliary class keeping tracking of analytical integration code; RooDataHist*_dataHistUnowned pointer to underlying histogram; Bool_tRooAbsArg::_deleteWatch! Delete watch flag; RooSetProxy_depListList of observables mapped onto histogram observables; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; TIterator*_histObsIter!; RooArgSet_histObsListList of observables defining dimensions of histogram; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_t_intOrderInterpolation order; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches; Bool_tRooAbsArg::_isConstant! Cached isConstant status; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeR,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooHistFunc.html:35424,access,access,35424,root/html602/RooHistFunc.html,https://root.cern,https://root.cern/root/html602/RooHistFunc.html,2,['access'],['access']
Security,"sArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_t_boolValue! Transient cache for bool values from tree branches ; UChar_t_byteValue! Transient cache for byte values from tree branches ; static Bool_t_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_t_floatValue! Transient cache for floating point values from tree branches ; Bool_t_forceNumIntForce numerical integration if flag set; static Bool_t_globalSelectCompGlobal activation switch for component selection; static Bool_t_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_t_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TString_labelPlot label for objects value; RooArgSet*_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsReal.html:31106,validat,validate,31106,root/html534/RooAbsReal.html,https://root.cern,https://root.cern/root/html534/RooAbsReal.html,2,"['access', 'validat']","['access', 'validate']"
Security,"sBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArray*TEntryList::fBlocksblocks with indices of passing events (TEntryListBlocks); TEntryList*TEntryList::fCurrent! currently filled entry list; TDirectory*TEntryList::fDirectory! Pointer to directory holding this tree; Long64_tTEntryList::fEntriesToProcessused on proof to set the number of entries to process in a packet; Long64_tfEntrythe entry number, when the list is used for subentries; TStringTEntryList::fFileNamename of the file, where the tree is; Long64_tTEntryList::fLastIndexQueried! used to optimize GetEntry() function from a loop ; Long64_tTEntryList::fLastIndexReturned! used to optimize GetEntry() function from a loop; TEntryListArray*fLastSubListQueried! last sublist checked by GetSubListForEntry; TList*TEntryList::fListsa list of underlying entry lists for each tree of a chain; Long64_tTEntryList::fNnumber of entries in the list; Int_tTEntryList::fNBlocksnumber of TEntryListBlocks; TStringTNamed::fNameobject identifier; Bool_tTEntryList::fReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tTEntryList::fShift! true when some sub-lists don't correspond to trees; ULong_tTEntryList::fStringHash! Hash value of a string of treename and filename; TIter*fSubListIter! to iterate over fSubLists and keep last one checked; TList*fSubListsa list of underlying entry lists for each event of a TEntryList; TStringTNamed::fTitleobject title; TStringTEntryList::fTreeNamename of the tree; Int_tTEntryList::fTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(); Initialize data members, called by Reset. TEntryListArray(); default c-tor. TEntryListArray(const char* name, const char* title); c-tor wit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEntryListArray.html:11444,Hash,Hash,11444,root/html532/TEntryListArray.html,https://root.cern,https://root.cern/root/html532/TEntryListArray.html,2,['Hash'],['Hash']
Security,"sCollection.cxx. ◆ typedStructureTag(). TNamed * RooAbsCollection::typedStructureTag ; (; ). inlineprotected . Definition at line 410 of file RooAbsCollection.h. ◆ uniqueId(). RooFit::UniqueId< RooAbsCollection > const & RooAbsCollection::uniqueId ; (; ); const. inline . Returns a unique ID that is different for every instantiated RooAbsCollection. ; This ID can be used to check whether two collections are the same object, which is safer than memory address comparisons that might result in false positives when memory is recycled. ; Definition at line 98 of file RooAbsCollection.h. ◆ useHashMapForFind(). void RooAbsCollection::useHashMapForFind ; (; bool ; flag); const. Parameters. [in]flagSwitch hash map on or off. . Definition at line 1604 of file RooAbsCollection.cxx. Member Data Documentation. ◆ _allRRV. bool RooAbsCollection::_allRRV = true. protected . All contents are RRV. ; Definition at line 405 of file RooAbsCollection.h. ◆ _hashAssistedFind. std::unique_ptr<HashAssistedFind> RooAbsCollection::_hashAssistedFind. mutableprivate . ! ; Definition at line 446 of file RooAbsCollection.h. ◆ _list. Storage_t RooAbsCollection::_list. protected . Actual object storage. ; Definition at line 400 of file RooAbsCollection.h. ◆ _name. TString RooAbsCollection::_name. protected . Our name. ; Definition at line 404 of file RooAbsCollection.h. ◆ _ownCont. bool RooAbsCollection::_ownCont = false. protected . Flag to identify a list that owns its contents. ; Definition at line 403 of file RooAbsCollection.h. ◆ _sizeThresholdForMapSearch. std::size_t RooAbsCollection::_sizeThresholdForMapSearch = 100. private . ! ; Definition at line 447 of file RooAbsCollection.h. ◆ _structureTag. TNamed* RooAbsCollection::_structureTag {nullptr}. mutableprotected . ! Structure tag ; Definition at line 412 of file RooAbsCollection.h. ◆ _typedStructureTag. TNamed* RooAbsCollection::_typedStructureTag {nullptr}. mutableprotected . ! Typed structure tag ; Definition at line 413 of file RooAbsColl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsCollection.html:63339,Hash,HashAssistedFind,63339,doc/v632/classRooAbsCollection.html,https://root.cern,https://root.cern/doc/v632/classRooAbsCollection.html,1,['Hash'],['HashAssistedFind']
Security,"sFromStream(istream& istr); read the state of the method from an input stream. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); return the MVA value (range [-1;1]) that classifies the; event.according to the majority vote from the total number of; decision trees; In the literature I found that people actually use the; weighted majority vote (using the boost weights) .. However I; did not see any improvement in doing so :(; --> this is currently switched off. void WriteMonitoringHistosToFile( void ); here we could write some histograms created during the processing; to the output file. vector< Double_t > GetVariableImportance(); return the relative variable importance, normalized to all; variables together having the importance 1. The importance in; evaluated as the total separation-gain that this variable had in; the decision trees (weighted by the number of events). Double_t GetVariableImportance(UInt_t ivar); return the variable importance. const TMVA::Ranking* CreateRanking(); computes ranking of input variables. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". void ReadWeightsFromXML(void* ); {}. const std::vector<TMVA::IMethod*>& GetCommittee() const; accessors. { return fCommittee; }. const std::vector<Double_t>& GetBoostWeights() const; { return fBoostWeights; }. std::vector<IMethod*>& GetCommittee(); accessors. { return fCommittee; }. std::vector<Double_t>& GetBoostWeights(); { return fBoostWeights; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MethodCommittee.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCommittee.html:21618,access,accessors,21618,root/html532/TMVA__MethodCommittee.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCommittee.html,2,['access'],['accessors']
Security,"sInfo, Bool_t silent); Initialize a TClass object. This object contains the full dictionary; of a class. It has list to baseclasses, datamembers and methods. ~TClass(); TClass dtor. Deletes all list that might have been created. Int_t ReadRules(); Read the class.rules files from the default location:.; $ROOTSYS/etc/class.rules (or ROOTETCDIR/class.rules). Int_t ReadRules(const char* filename); Read a class.rules file which contains one rule per line with comment; starting with a #; Returns the number of rules loaded.; Returns -1 in case of error. Bool_t AddRule(const char* rule); Add a schema evolution customization rule.; The syntax of the rule can be either the short form:; [type=Read] classname membername [attributes=... ] [version=[...] ] [checksum=[...] ] [oldtype=...] [code={...}]; or the long form; [type=Read] sourceClass=classname [targetclass=newClassname] [ source=""type membername; [type2 membername2]"" ]; [target=""membername3;membername4""] [attributes=... ] [version=...] [checksum=...] [code={...}|functionname]. For example to set HepMC::GenVertex::m_event to _not_ owned the object it is pointing to:; HepMC::GenVertex m_event attributes=NotOwner. Semantic of the tags:; type : the type of the rule, valid values: Read, ReadRaw, Write, WriteRaw, the default is 'Read'.; sourceClass : the name of the class as it is on the rule file; targetClass : the name of the class as it is in the current code ; defaults to the value of sourceClass; source : the types and names of the data members from the class on file that are needed, the list is separated by semi-colons ';'; oldtype: in the short form only, indicates the type on disk of the data member.; target : the names of the data members updated by this rule, the list is separated by semi-colons ';'; attributes : list of possible qualifiers amongs:; Owner, NotOwner; version : list of the version of the class layout that this rule applies to. The syntax can be [1,4,5] or [2-] or [1-3] or [-3]; checksum : comma delimite",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClass.html:27837,checksum,checksum,27837,root/html602/TClass.html,https://root.cern,https://root.cern/root/html602/TClass.html,2,['checksum'],['checksum']
Security,"sName of this class . ◆ Class_Version(). static constexpr Version_t TNetFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 81 of file TNetFile.h. ◆ Close(). void TNetFile::Close ; (; Option_t * ; option = """"). overridevirtual . Close remote file. ; Reimplemented from TFile.; Definition at line 208 of file TNetFile.cxx. ◆ ConnectServer(). void TNetFile::ConnectServer ; (; Int_t * ; stat, . EMessageTypes * ; kind, . Int_t ; netopt, . Int_t ; tcpwindowsize, . Bool_t ; forceOpen, . Bool_t ; forceRead . ). protectedvirtual . Connect to remote rootd server. ; Definition at line 570 of file TNetFile.cxx. ◆ Create() [1/2]. void TNetFile::Create ; (; const char * ; url, . Option_t * ; option, . Int_t ; netopt . ). protectedvirtual . Create a NetFile object. ; A net file is the same as a TFile except that it is being accessed via a rootd server. The url argument must be of the form: root[k]://host.dom.ain/file.root. When protocol is ""rootk"" try using kerberos5 authentication. If the file specified in the URL does not exist, is not accessable or can not be created the kZombie bit will be set in the TNetFile object. Use IsZombie() to see if the file is accessable. If the remote daemon thinks the file is still connected, while you are sure this is not the case you can force open the file by preceding the option argument with an ""-"", e.g.: ""-recreate"". Do this only in cases when you are very sure nobody else is using the file. To bypass the writelock on a file, to allow the reading of a file that is being written by another process, explicitly specify the ""+read"" option (""read"" being the default option). The netopt argument can be used to specify the size of the tcp window in bytes (for more info see: http://www.psc.edu/networking/perf_tune.html). The default and minimum tcp window size is 65535 bytes. If netopt < -1 then |netopt| is the number of parallel sockets that will be used to connect to rootd. This option should be used o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNetFile.html:45540,authenticat,authentication,45540,doc/master/classTNetFile.html,https://root.cern,https://root.cern/doc/master/classTNetFile.html,1,['authenticat'],['authentication']
Security,"sReal::_boolValue! Transient cache for bool values from tree branches; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooObjCacheManager_cacheMgr! The cache manager; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue; RooArgSet*_curNormSet! Current normalization set; Bool_tRooAbsArg::_deleteWatch! Delete watch flag; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches; Bool_tRooAbsArg::_isConstant! Cached isConstant status; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMomentMorph.html:42421,access,access,42421,root/html602/RooMomentMorph.html,https://root.cern,https://root.cern/root/html602/RooMomentMorph.html,2,['access'],['access']
Security,"sSethave we set the generators yet? empty is not good enough - user might have removed them. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TVirtualBranchBrowsable. ←. TCollectionPropertyBrowsable. TMethodBrowsable; ←. TCollectionMethodBrowsable. TNonSplitBrowsable. Function documentation; TVirtualBranchBrowsable(const TBranch* b, TClass* type, Bool_t typeIsPointer, const TVirtualBranchBrowsable* parent = 0); constructor setting all members according to parameters. ~TVirtualBranchBrowsable(); Destructor. Delete our leaves. void Browse(TBrowser* b); Calls TTree::Draw on the method if return type is not a class;; otherwise expands returned object's ""folder"". Int_t FillListOfBrowsables(TList& list, const TBranch* branch, const TVirtualBranchBrowsable* parent = 0); Askes all registered generators to fill their browsables into; the list. The browsables are generated for a given parent,; or (if 0), for a given branch. The branch is passed down to; leaves of TVirtualBranchBrowsable, too, as we need to access; the branch's TTree to be able to traw. TClass* GetCollectionContainedType(const TBranch* b, const TVirtualBranchBrowsable* parent, TClass*& contained); Check whether the branch (or the parent) contains a collection.; If it does, set ""contained"" to the contained type (if we can; retrieve it) and return the TClass for the collection. Set; ""contained"" to the branch's (or parent's) contained object's; class for non-collections, returning 0. Only one of ""branch"" or ""parent"" can ge given (depending on whether; we are creating browsable objects for a branch or for another; browsable object). TList* GetLeaves() const; Return list of leaves. If not set up yet we'll create them. void GetScope(TString& scope) const; Returns the full name for TTree::Draw to draw *this.; Recursively appends, starting at the top TBranch,; all method / object names with proper reference operators (->, .); depending on fTypeIsPointer. void RegisterDefaultGenerators(); Adds the default genera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualBranchBrowsable.html:10346,access,access,10346,root/html602/TVirtualBranchBrowsable.html,https://root.cern,https://root.cern/root/html602/TVirtualBranchBrowsable.html,2,['access'],['access']
Security,"sSiIourRmMen. k : kurtosis printed; K : kurtosis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : rms printed; R : rms and rms error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed. For example, to print only name of histogram and number of entries do:. gStyle->SetOptStat(""ne"");. To print only the name of the histogram do:. gStyle->SetOptStat(""n"");. The default value is:. gStyle->SetOptStat(""nemr"");. When a histogram is painted, a TPaveStats object is created and added; to the list of functions of the histogram. If a TPaveStats object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters.; Once a histogram is painted, the statistics box can be accessed using; h->FindObject(""stats""). In the command line it is enough to do:. Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""). because after h->Draw() the histogram is automatically painted. But; in a script file the painting should be forced using gPad->Update(); in order to make sure the statistics box is created:. h->Draw();; gPad->Update();; TPaveStats *st = (TPaveStats*)h->FindObject(""stats"");. Without gPad->Update() the line h->FindObject(""stats""); returns a null pointer.; When a histogram is drawn with the option ""SAME"", the statistics box; is not drawn. To force the statistics box drawing with the option; ""SAME"", the option ""SAMES"" must be used.; If the new statistics box hides the previous statistics box, one can change; its position with these lines (""h"" being the pointer to the histogram):. Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""); Root > st->SetX1NDC(newx1); //new x start position; Root > st->SetX2NDC(newx2); //ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THistPainter.html:17639,access,accessed,17639,root/html534/THistPainter.html,https://root.cern,https://root.cern/root/html534/THistPainter.html,2,['access'],['accessed']
Security,"sSortable () const override;  ; void Print (Option_t *option="""") const override;  Print slave info. ;  ; void SetOrdinal (const char *ord);  ; void SetStatus (ESlaveStatus stat);  ; void SetSysInfo (SysInfo_t si);  Setter for fSysInfo. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on std",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlaveInfo.html:2632,Hash,Hash,2632,doc/master/classTSlaveInfo.html,https://root.cern,https://root.cern/doc/master/classTSlaveInfo.html,2,['Hash'],['Hash']
Security,"sTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. void*fBinData! binary data, assigned with http call; Long_tfBinDataLength! length of binary data; TConditionfCond! condition used to wait for processing; TStringfContent! text content (if any); TStringfContentType! type of content; TStringfFileName! file name; TStringfHeader! response header like ContentEncoding, Cache-Control and so on; TStringfMethod! request method like GET or POST; TStringfPathName! item path; void*fPostData! binary data received with post request; Long_tfPostDataLength! length of binary data; TStringfQuery! additional arguments; TStringfRequestHeader! complete header, provided with request; TStringfTopName! top item name; TStringfUserName! authenticated user name (if any); Int_tfZipping! indicate if content should be zipped. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THttpCallArg(); constructor. ~THttpCallArg(); destructor. TString AccessHeader(TString& buf, const char* name, const char* value = 0, Bool_t doing_set = kFALSE); method used to get or set http header in the string buffer; Header has following format:; field1 : value1\r\n; field2 : value2\r\n; Such format corresponds to header format in HTTP requests. TString CountHeader(const TString& buf, Int_t number = -1111) const; method used to counter number of headers or returns name of specified header. void SetPostData(void* data, L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/THttpCallArg.html:8026,authenticat,authenticated,8026,root/html604/THttpCallArg.html,https://root.cern,https://root.cern/root/html604/THttpCallArg.html,1,['authenticat'],['authenticated']
Security,"sVersion() const; {return fClassVersion;}. TObjArray * GetElements() const; {return fElements;}. ULong_t * GetElems() const; {return fElem;}. TStreamerInfoActions::TActionSequence * GetReadMemberWiseActions(Bool_t forCollection); { return forCollection ? fReadMemberWise : fReadObjectWise; }. TStreamerInfoActions::TActionSequence * GetReadObjectWiseActions(); { return fReadObjectWise; }. Int_t GetNdata() const; {return fNdata;}. Int_t GetNumber() const; {return fNumber;}. Int_t * GetLengths() const; {return fLength;}. ULong_t * GetMethods() const; {return fMethod;}. Int_t * GetNewTypes() const; {return fNewType;}. Int_t * GetOffsets() const; {return fOffset;}. Version_t GetOldVersion() const; {return fOldVersion;}. Int_t GetOnFileClassVersion() const; {return fOnFileClassVersion;}. Int_t * GetTypes() const; {return fType;}. TVirtualStreamerInfo * NewInfo(TClass* cl); {return new TStreamerInfo(cl);}. Int_t ReadBufferClones(TBuffer& b, TClonesArray* clones, Int_t nc, Int_t first, Int_t eoffset). Int_t ReadBufferSTL(TBuffer& b, TVirtualCollectionProxy* cont, Int_t nc, Int_t first, Int_t eoffset). void SetCheckSum(UInt_t checksum); {fCheckSum = checksum;}. void SetClass(TClass* cl); {fClass = cl;}. void SetClassVersion(Int_t vers); {fClassVersion=vers;}. Int_t WriteBuffer(TBuffer& b, char* pointer, Int_t first). Int_t WriteBufferClones(TBuffer& b, TClonesArray* clones, Int_t nc, Int_t first, Int_t eoffset). Int_t WriteBufferSTL(TBuffer& b, TVirtualCollectionProxy* cont, Int_t nc, Int_t first, Int_t eoffset). Int_t WriteBufferSTLPtrs(TBuffer& b, TVirtualCollectionProxy* cont, Int_t nc, Int_t first, Int_t eoffset). » Author: Rene Brun 12/10/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TStreamerInfo.h 36061 2010-10-04 16:05:51Z pcanal $ » Last generated: 2010-12-10 21:56; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TStreamerInfo.html:25998,checksum,checksum,25998,root/html528/TStreamerInfo.html,https://root.cern,https://root.cern/root/html528/TStreamerInfo.html,2,['checksum'],['checksum']
Security,"sVersion() const; {return fClassVersion;}. TObjArray * GetElements() const; {return fElements;}. ULong_t * GetElems() const; {return fElem;}. TStreamerInfoActions::TActionSequence * GetReadMemberWiseActions(Bool_t forCollection); { return forCollection ? fReadMemberWise : fReadObjectWise; }. TStreamerInfoActions::TActionSequence * GetReadObjectWiseActions(); { return fReadObjectWise; }. Int_t GetNdata() const; {return fNdata;}. Int_t GetNumber() const; {return fNumber;}. Int_t * GetLengths() const; {return fLength;}. ULong_t * GetMethods() const; {return fMethod;}. Int_t * GetNewTypes() const; {return fNewType;}. Int_t * GetOffsets() const; {return fOffset;}. Version_t GetOldVersion() const; {return fOldVersion;}. Int_t GetOnFileClassVersion() const; {return fOnFileClassVersion;}. Int_t * GetTypes() const; {return fType;}. TVirtualStreamerInfo * NewInfo(TClass* cl); {return new TStreamerInfo(cl);}. Int_t ReadBufferClones(TBuffer& b, TClonesArray* clones, Int_t nc, Int_t first, Int_t eoffset). Int_t ReadBufferSTL(TBuffer& b, TVirtualCollectionProxy* cont, Int_t nc, Int_t first, Int_t eoffset). void SetCheckSum(UInt_t checksum); {fCheckSum = checksum;}. void SetClass(TClass* cl); {fClass = cl;}. void SetClassVersion(Int_t vers); {fClassVersion=vers;}. Int_t WriteBuffer(TBuffer& b, char* pointer, Int_t first). Int_t WriteBufferClones(TBuffer& b, TClonesArray* clones, Int_t nc, Int_t first, Int_t eoffset). Int_t WriteBufferSTL(TBuffer& b, TVirtualCollectionProxy* cont, Int_t nc, Int_t first, Int_t eoffset). Int_t WriteBufferSTLPtrs(TBuffer& b, TVirtualCollectionProxy* cont, Int_t nc, Int_t first, Int_t eoffset). » Author: Rene Brun 12/10/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TStreamerInfo.h 38460 2011-03-16 15:28:08Z pcanal $ » Last generated: 2011-07-04 15:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TStreamerInfo.html:26080,checksum,checksum,26080,root/html530/TStreamerInfo.html,https://root.cern,https://root.cern/root/html530/TStreamerInfo.html,2,['checksum'],['checksum']
Security,"sZombie()) {<actions to take if file is unusable>}; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; If the file has been recovered, the bit kRecovered is set in the TFile object in memory. You can test if the file has been recovered with if (f.TestBit(TFile::kRecovered)) {... the file has been recovered}; When writing TTrees to a file, it is important to save the Tree header at regular intervals (see TTree::AutoSave). If a file containing a Tree is recovered, the last Tree header written to the file will be used. In this case all the entries in all the branches written before writing the header are valid entries. One can disable the automatic recovery procedure by setting TFile.Recover 0; in the system.rootrc file. ; Reimplemented from TFile.; Definition at line 86 of file TXMLFile.h. ◆ ReOpen(). Int_t TXMLFile::ReOpen ; (; Option_t * ; mode). finalvirtual . Reopen a file with a different access mode, like from READ to See TFile::Open() for details. ; Reimplemented from TFile.; Definition at line 372 of file TXMLFile.cxx. ◆ ResetErrno(). void TXMLFile::ResetErrno ; (; ); const. inlinefinalvirtual . Method resetting the errno. ; Reimplemented from TFile.; Definition at line 64 of file TXMLFile.h. ◆ SaveToFile(). void TXMLFile::SaveToFile ; (; ). protected . Saves xml structures to the file xml elements are kept in list of TKeyXML objects When saving, all this elements are linked to root xml node At the end StreamerInfo structures are added After xml document is saved, all nodes will be unlinked from root node and kept in memory. ; Only Close() or destructor release memory, used by xml structures ; Definition at line 454 of file TXMLFile.cxx. ◆ Seek(). void TXMLFile::Seek ; (; Long64_t ; offset, . ERelativeTo ; pos = kBeg . ). inlinefinalvirtual . Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ; Reimplemented from TFile.; Definition at line 88 of file TXMLFil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:68209,access,access,68209,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,1,['access'],['access']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSortedList.html:15345,access,accessible,15345,doc/master/classTSortedList.html,https://root.cern,https://root.cern/doc/master/classTSortedList.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObjArray; typedef TObjArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsiste",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRefArray.html:16109,access,accessible,16109,doc/master/classRooRefArray.html,https://root.cern,https://root.cern/doc/master/classRooRefArray.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoNavigatorArray (const TGeoNavigatorArray &)=delete;  ; TGeoNavigatorArray & operator= (const TGeoNavigatorArray &)=delete;  . Private Attributes; TGeoNavigator * fCurrentNavigator;  ; TGeoManager * fGeoManager;  . Additional Inherited Members;  Public Types inherited from TObjArray; typedef TObjArrayIter Iterator_t;  ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoNavigatorArray.html:16350,access,accessible,16350,doc/master/classTGeoNavigatorArray.html,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TListOfDataMembers (const TListOfDataMembers &)=delete;  Whether the list should contain regular data members or only using decls or both. ;  ; void MapObject (TObject *obj);  Add a pair<id, object> to the map of data members and their ids. ;  ; TListOfDataMembers & operator= (const TListOfDataMembers &)=delete;  ; void Unma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfDataMembers.html:18907,access,accessible,18907,doc/master/classTListOfDataMembers.html,https://root.cern,https://root.cern/doc/master/classTListOfDataMembers.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TListOfFunctions (const TListOfFunctions &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfFunctions & operator= (const TList",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfFunctions.html:18464,access,accessible,18464,doc/master/classTListOfFunctions.html,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TOrdCollection (const TOrdCollection &)=delete;  ; Bool_t IllegalIndex (const char *method, Int_t idx) const;  Return true when index out of bounds and print error. ;  ; void Init (Int_t capacity);  Initialize ordered collection. ;  ; Int_t LogIndex (Int_t idx) const;  ; Bool_t LowWaterMark () const;  ; void MoveGapTo (Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTOrdCollection.html:15733,access,accessible,15733,doc/master/classTOrdCollection.html,https://root.cern,https://root.cern/doc/master/classTOrdCollection.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfEnumsWithLock (const TListOfEnumsWithLock &)=delete;  ; TListOfEnumsWithLock & operator= (const TListOfEnumsWithLock &)=delete;  . Additional Inherited Members;  Public Types inherited from TListOfEnums; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfEnumsWithLock.html:17487,access,accessible,17487,doc/master/classTListOfEnumsWithLock.html,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfFunctionTemplates (const TListOfFunctionTemplates &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfFunctionTemplates.html:17603,access,accessible,17603,doc/master/classTListOfFunctionTemplates.html,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TClass * fClass;  ; TObjArray * fKeep;  Pointer to the class of the elements. ;  ;  Protected Attributes inherited from TObjArray; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClonesArray.html:24297,access,accessible,24297,doc/master/classTClonesArray.html,https://root.cern,https://root.cern/doc/master/classTClonesArray.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protecte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHashList.html:17836,access,accessible,17836,doc/master/classTHashList.html,https://root.cern,https://root.cern/doc/master/classTHashList.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fJobID;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Att",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGridJobStatusList.html:15547,access,accessible,15547,doc/master/classTGridJobStatusList.html,https://root.cern,https://root.cern/doc/master/classTGridJobStatusList.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; TObject * GetFromTable (Int_t idx) const;  the reference may be in the TRefTable ;  ; Bool_t GetObjectUID (Int_t &uid, TObject *obj, const char *methodname);  Private/static function, check",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRefArray.html:20704,access,accessible,20704,doc/master/classTRefArray.html,https://root.cern,https://root.cern/doc/master/classTRefArray.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObjArray.html:17836,access,accessible,17836,doc/master/classTObjArray.html,https://root.cern,https://root.cern/doc/master/classTObjArray.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; TEnum * FindUnloaded (const char *name);  ; TEnum * Get (DeclId_t id, const char *name);  Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ;  ; TClass * GetClass () const;  ; TExMap * GetIds ();  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfEnums.html:18040,access,accessible,18040,doc/master/classTListOfEnums.html,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DecrNofKeys ();  ; Int_t IdxAdd (const TObject &obj);  Add object and return its index in the tree. ;  ; void IncrNofKeys ();  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBtree.html:23148,access,accessible,23148,doc/master/classTBtree.html,https://root.cern,https://root.cern/doc/master/classTBtree.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSeqCollection.html:12961,access,accessible,12961,doc/master/classTSeqCollection.html,https://root.cern,https://root.cern/doc/master/classTSeqCollection.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Prote",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTList.html:18642,access,accessible,18642,doc/master/classTList.html,https://root.cern,https://root.cern/doc/master/classTList.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofOutputList.html:16296,access,accessible,16296,doc/master/classTProofOutputList.html,https://root.cern,https://root.cern/doc/master/classTProofOutputList.html,8,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoordSelect.html:18799,access,accessible,18799,doc/master/classTParallelCoordSelect.html,https://root.cern,https://root.cern/doc/master/classTParallelCoordSelect.html,1,['access'],['accessible']
Security,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQCommand.html:24436,access,accessible,24436,doc/master/classTQCommand.html,https://root.cern,https://root.cern/doc/master/classTQCommand.html,3,['access'],['accessible']
Security,"sable::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TVirtualBranchBrowsable::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TVirtualBranchBrowsable::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 99 of file TBranchBrowsable.h. ◆ DeclFileName(). static const char * TVirtualBranchBrowsable::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 99 of file TBranchBrowsable.h. ◆ FillListOfBrowsables(). Int_t TVirtualBranchBrowsable::FillListOfBrowsables ; (; TList & ; li, . const TBranch * ; branch, . const TVirtualBranchBrowsable * ; parent = nullptr . ). static . Askes all registered generators to fill their browsables into the list. ; The browsables are generated for a given parent, or (if 0), for a given branch. The branch is passed down to leaves of TVirtualBranchBrowsable, too, as we need to access the branch's TTree to be able to traw. ; Definition at line 138 of file TBranchBrowsable.cxx. ◆ GetBranch(). const TBranch * TVirtualBranchBrowsable::GetBranch ; (; ); const. inline . return the parent branch (might be many levels up) ; Definition at line 60 of file TBranchBrowsable.h. ◆ GetClassType(). TClass * TVirtualBranchBrowsable::GetClassType ; (; ); const. inline . return the type of this browsable object ; Definition at line 66 of file TBranchBrowsable.h. ◆ GetCollectionContainedType(). TClass * TVirtualBranchBrowsable::GetCollectionContainedType ; (; const TBranch * ; branch, . const TVirtualBranchBrowsable * ; parent, . TClass *& ; contained . ). staticprotected . Check whether the branch (or the parent) contains a collection. ; If it does, set ""contained"" to the contained type (if we can retrieve it) and return the TClass for the collection. Set ""contained"" to the branch's (or parent's) contained object's class for non-collections, returning 0.; On",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualBranchBrowsable.html:19033,access,access,19033,doc/master/classTVirtualBranchBrowsable.html,https://root.cern,https://root.cern/doc/master/classTVirtualBranchBrowsable.html,1,['access'],['access']
Security,"sary. Do not number labels. Always follow all platform presentation and usage guidelines for standard button functions. Let’s remember a few standard names and definitions of well known buttons:; OK - any changed information in a window is accepted and the window is closed;; Cancel - closes window without implementing submitted changes;; Reset- resets defaults and cancels any changed information that has not be submitted;; Apply - any changed information is accepted and again displayed in the window that remains open;; Close - closes the window;; Help - opens online Help.; Below are examples of text buttons. Note the two placement methods. The first example should be used when there are one to three command buttons; the second one when there are more than three buttons. Picture buttons are usually rectangular in shape with an icon or graphics label. These buttons may appear alone or placed in a group at the window’s top or side. They are most frequently used to quickly access commands, many of which are normally accessed through the tool bar. For example, the picture buttons below can be used to provide different styles of a histogram drawing. Here is the example how to create the first button:; TGPictureButton *fPicture = new TGPictureButton(parent,; gClient->GetPicture(""h1_s.xpm""), 11);; The picture of file h1_s.xpm is used in the button. All .xpm files are located in the directory $ROOTSYS/icons. You can assign a command directly as a parameter of the picture button constructor. The picture of TGPictureButton can be changed by:; fPicture->SetPicture(""h2_s.xpm"");; The advantage of command buttons is that they are always visible, providing a reminder of their existence. They can be inscribed with a meaningful description of what they do by TGToolTip(""Some describing text""). Their activation is much easier and faster than using a two-step menu bar/pull-down sequence. The only disadvantage of the text and picture buttons is that they consume considerable screen space",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1179306,access,access,1179306,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['access'],"['access', 'accessed']"
Security,"sation called by all constructors. ~MethodCFMlpANN( void ); destructor. void Train( void ); training of the Clement-Ferrand NN classifier. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns CFMlpANN output (normalised within [0,1]). Double_t EvalANN(vector<Double_t>& , Bool_t& isOK); evaluates NN value as function of input variables. void NN_ava(Double_t* ); auxiliary functions. Double_t NN_fonc(Int_t , Double_t ) const; activation function. void ReadWeightsFromStream(istream& istr); read back the weight from the training from file (stream). Int_t DataInterface(Double_t* , Double_t* , Int_t* , Int_t* , Int_t* , Int_t* , Double_t* , Int_t* , Int_t* ); data interface function. void AddWeightsXMLTo(void* parent) const; write weights to xml file. void ReadWeightsFromXML(void* wghtnode); read weights from xml file. void PrintWeights(ostream& o) const; write the weights of the neural net. TMVA::MethodCFMlpANN* This( void ); static pointer to this object (required for external functions. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void MakeClassSpecificHeader(ostream& , const TString& = """") const; write specific classifier response for header. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". Double_t GetData(Int_t isel, Int_t ivar) const; data accessors for external functions. { return (*fData)(isel, ivar); }. Int_t GetClass(Int_t ivar) const; { return (*fClass)[ivar]; }. const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MethodCFMlpANN.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCFMlpANN.html:24354,access,accessors,24354,root/html532/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCFMlpANN.html,1,['access'],['accessors']
Security,"scading menus is recommended and you should be careful in using more. Next lines show how to create a menu bar with File,Test and Help menus:; // menu bar item layout hints; fMBItemLayout = new TGLayoutHints(kLHintsTop|kLHintsLeft,0,4,0,0);; fMBHelpLayout = new TGLayoutHints(kLHintsTop|kLHintsRight);. // menu bar; fMenuBar = new TGMenuBar(fMain,100,20,kHorizontalFrame);. // adding popup menus; fMenuBar->AddPopup(""&File"", fMenuFile, fMBItemLayout);; fMenuBar->AddPopup(""&Test"", fMenuTest, fMBItemLayout);; fMenuBar->AddPopup(""&Help"", fMenuHelp, fMBHelpLayout);; Using the method TGMenuBar::AddPopup we add three TGPopupMenu objects to the menu bar fMenuBar. The first parameter is a hot string used by TGMenuTitle object. When you add a popup menu to the menu bar, a TGMenuTitle object is created by the menu bar. It is the name of the popup menu. A menu title should have a one-word name that reflects the purpose of all items within the corresponding popup menu. It should also have a defined character as its unique access key. The second parameter is the popup menu we would like to add. The third one is an object of TGLayoutHints type that defines how the menu title will be laid out in the menu bar. In our example the File and Test menus will be laid out to the left of the menu bar with 4 pixels distance in between, the Help menu - will be laid out to the right.; The menu classes provide a very flexible menu system: you can enable, disable, add or remove menu items dynamically. The method HideEntry(menuID) hides the menu entry (the entry will not be shown in the popup menu). To enable a hidden entry you should call EnableEntry(menuID) method. By default all entries are enabled. The method DisableEntry(menuID) helps you to disable a menu entry - it will appear in sunken relieve. The DeleteEntry(menuID) method will delete the specified entry from the menu.; A few words about the menu design. A menu should be kept consistent and simple. All related items need to be in a popup m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1193176,access,access,1193176,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['access'],['access']
Security,"scchar);  Un-escape specchars in src from escchar and copy to dst. ;  . Function Documentation. ◆ Compress(). char * Compress ; (; const char * ; str). Remove all blanks from the string str. ; The returned string has to be deleted by the user. ; Definition at line 2572 of file TString.cxx. ◆ EscChar(). int EscChar ; (; const char * ; src, . char * ; dst, . int ; dstlen, . char * ; specchars, . char ; escchar . ). Escape specchars in src with escchar and copy to dst. ; Definition at line 2593 of file TString.cxx. ◆ Form(). char * Form ; (; const char * ; fmt, .  ; ... . ). Formats a string in a circular formatting buffer. ; Removes the need to create and delete short lived strings. Don't pass Form() pointers from user code down to ROOT functions as the circular buffer may be overwritten downstream. Use Form() results immediately or use TString::Format() instead. ; Definition at line 2489 of file TString.cxx. ◆ Hash() [1/3]. UInt_t Hash ; (; const char * ; s). Return a case-sensitive hash value (endian independent). ; Definition at line 576 of file TString.cxx. ◆ Hash() [2/3]. UInt_t Hash ; (; const TString & ; s). inline . Definition at line 494 of file TString.h. ◆ Hash() [3/3]. UInt_t Hash ; (; const TString * ; s). inline . Definition at line 495 of file TString.h. ◆ operator!=() [1/8]. Bool_t operator!= ; (; const char * ; s1, . const TString & ; s2 . ). inline . Definition at line 807 of file TString.h. ◆ operator!=() [2/8]. Bool_t operator!= ; (; const char * ; s1, . const TSubString & ; s2 . ). inline . Definition at line 844 of file TString.h. ◆ operator!=() [3/8]. Bool_t operator!= ; (; const TString & ; s1, . const char * ; s2 . ). inline . Definition at line 789 of file TString.h. ◆ operator!=() [4/8]. Bool_t operator!= ; (; const TString & ; s1, . const TString & ; s2 . ). inline . Definition at line 773 of file TString.h. ◆ operator!=() [5/8]. Bool_t operator!= ; (; const TString & ; s1, . const TSubString & ; s2 . ). inline . Definition at line 841 of fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8h.html:6408,hash,hash,6408,doc/master/TString_8h.html,https://root.cern,https://root.cern/doc/master/TString_8h.html,1,['hash'],['hash']
Security,"scourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome First Steps With ROOT. The ROOT framework provides a number of classes, grouped into several class cathegories. To start using ROOT, you may find useful to browse the following documents:. Processing data with ROOT (to learn about the interactive and batch use of ROOT); Analyzing data with ROOT (about histograms and trees; mathematical and statistical tools); Showing results with ROOT (explaining pads, 2D and 3D graphics, and the GUI editor); Simulation in ROOT (about the virtual Monte Carlo and the geometry packages); ROOT I/O (explaining how to use ROOT files and trees, and how to access data from d/b or other nodes). . Processing data with ROOT ›. Navigate through this book; Processing data with ROOT; Showing results with ROOT; Simulation in ROOT; ROOT I/O. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/first-steps-root-1.html:2446,access,access,2446,d/first-steps-root-1.html,https://root.cern,https://root.cern/d/first-steps-root-1.html,2,['access'],['access']
Security,"scription of all the access methods. The bin edges are always stored internally in double precision.; You can examine the actual edges / limits of the histogram bins by accessing the axis parameters, like in the example below:; const Int_t XBINS = 5; const Int_t YBINS = 5;; Double_t xEdges[XBINS + 1] = {0.0, 0.2, 0.3, 0.6, 0.8, 1.0};; Double_t yEdges[YBINS + 1] = {-1.0, -0.4, -0.2, 0.5, 0.7, 1.0};. TH2* h = new TH2D(""h2"", ""h2"", XBINS, xEdges, YBINS, yEdges);; TAxis* xAxis = h->GetXaxis(); TAxis* yAxis = h->GetYaxis();. cout << ""Third bin on Y-dimension: "" << endl; // corresponds to; // [-0.2, 0.5]; cout << ""\tLower edge: "" << yAxis->GetBinLowEdge(3) << endl;; cout << ""\tCenter: "" << yAxis->GetBinCenter(3) << endl;; cout << ""\tUpper edge: "" << yAxis->GetBinUpEdge(3) << endl;; 3.3 Bin Numbering; All histogram types support fixed or variable bin sizes. 2-D histograms may have fixed size bins along X and variable size bins along Y or vice-versa. The functions to fill, manipulate, draw, or access histograms are identical in both cases.; 3.3.1 Convention; For all histogram types: nbins , xlow , xup; Bin# 0 contains the underflow.; Bin# 1 contains the first bin with low-edge ( xlow INCLUDED).; The second to last bin (bin# nbins) contains the upper-edge (xup EXCLUDED).; The Last bin (bin# nbins+1) contains the overflow.; In case of 2-D or 3-D histograms, a “global bin” number is defined. For example, assuming a 3-D histogram h with binx, biny, binz, the function returns a global/linear bin number.; Int_t bin = h->GetBin(binx, biny, binz);; This global bin is useful to access the bin information independently of the dimension.; 3.3.2 Re-binning. At any time, a histogram can be re-binned via the TH1::Rebin() method. It returns a new histogram with the re-binned contents. If bin errors were stored, they are recomputed during the re-binning.; 3.4 Filling Histograms; A histogram is typically filled with statements like:; h1->Fill(x);; h1->Fill(x,w); // with weight; h2->Fill(x,y);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:75535,access,access,75535,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['access'],['access']
Security,"se *prob, TQpVar *vars, TQpResidual *resids, TQpVar *step);  Solves the system for a given set of residuals. ;  ; virtual void SolveCompressed (TVectorD &rhs)=0;  ; virtual void SolveXYZS (TVectorD &stepx, TVectorD &stepy, TVectorD &stepz, TVectorD &steps, TVectorD &ztemp, TQpDataBase *data);  Assemble right-hand side of augmented system and call SolveCompressed to solve it. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpLinSolverBase.html:2577,Hash,Hash,2577,doc/master/classTQpLinSolverBase.html,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html,2,['Hash'],['Hash']
Security,"se Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome About ROOT. ROOT is a framework for data processing, born at CERN, at the heart of the research on high-energy physics. Every day, thousands of physicists use ROOT applications to analyze their data or to perform simulations. With ROOT you can:. Save data You can save your data (and any C++ object) in a compressed binary form in a ROOT file. The object format is also saved in the same file: the ROOT files are self-descriptive. Even in the case the source files describing the data model are not available, the information contained in a ROOT file is be always readable. ROOT provides a data structure, the tree, that is extremely powerful for fast access of huge amounts of data - orders of magnitude faster than accessing a normal file.; Access data Data saved into one or several ROOT files can be accessed from your PC, from the web and from large-scale file delivery systems used e.g. in the GRID. ROOT trees spread over several files can be chained and accessed as a unique object, allowing for loops over huge amounts of data.; Mine data Powerful mathematical and statistical tools are provided to operate on your data. The full power of a C++ application and of parallel processing is available for any kind of data manipulation. Data can also be generated following any statistical distribution and modeled, making it possible to simulate complex systems.; Publish results Results can be displayed with histograms, scatter plots, fitting functions. ROOT graphics may be adjusted real-time by few mouse clicks. Publication-quality figures can be saved in PDF or other formats.; Run interactively or build your own application You can use the Cling C++ interpreter for your interactive sessions and to write macros, or you can compile your program to run at full speed. In both cases, you can also create a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/about-root.html:2588,Access,Access,2588,d/about-root.html,https://root.cern,https://root.cern/d/about-root.html,2,"['Access', 'access']","['Access', 'accessed']"
Security,"se if (fNumValidationString.IsFloat()) {; 1127 Double_t valSizeAsDouble = fNumValidationString.Atof();; 1128 ; 1129 if (valSizeAsDouble < 1.0) {; 1130 // Relative spec. format 0.2; 1131 nValidationSamples = GetEventCollection(Types::kTraining).size() * valSizeAsDouble;; 1132 } else {; 1133 // Absolute spec format 100 or 100.0; 1134 nValidationSamples = valSizeAsDouble;; 1135 }; 1136 } else {; 1137 Log() << kFATAL << ""Cannot parse number \"""" << fNumValidationString << ""\"". Expected string like \""0.2\"" or \""100\"".""; 1138 << Endl;; 1139 }; 1140 ; 1141 // Value validation; 1142 // ----------------; 1143 if (nValidationSamples < 0) {; 1144 Log() << kFATAL << ""Validation size \"""" << fNumValidationString << ""\"" is negative."" << Endl;; 1145 }; 1146 ; 1147 if (nValidationSamples == 0) {; 1148 Log() << kFATAL << ""Validation size \"""" << fNumValidationString << ""\"" is zero."" << Endl;; 1149 }; 1150 ; 1151 if (nValidationSamples >= (Int_t)trainingSetSize) {; 1152 Log() << kFATAL << ""Validation size \"""" << fNumValidationString; 1153 << ""\"" is larger than or equal in size to training set (size=\"""" << trainingSetSize << ""\"")."" << Endl;; 1154 }; 1155 ; 1156 return nValidationSamples;; 1157}; 1158 ; 1159 ; 1160////////////////////////////////////////////////////////////////////////////////; 1161/// Implementation of architecture specific train method; 1162///; 1163template <typename Architecture_t>; 1164void MethodDL::TrainDeepNet(); 1165{; 1166 ; 1167 using Scalar_t = typename Architecture_t::Scalar_t;; 1168 using Layer_t = TMVA::DNN::VGeneralLayer<Architecture_t>;; 1169 using DeepNet_t = TMVA::DNN::TDeepNet<Architecture_t, Layer_t>;; 1170 using TensorDataLoader_t = TTensorDataLoader<TMVAInput_t, Architecture_t>;; 1171 ; 1172 bool debug = Log().GetMinType() == kDEBUG;; 1173 ; 1174 ; 1175 // set the random seed for weight initialization; 1176 Architecture_t::SetRandomSeed(fRandomSeed);; 1177 ; 1178 ///split training data in training and validation data; 1179 // and determine the numbe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:44087,Validat,Validation,44087,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,1,['Validat'],['Validation']
Security,"se of error (like server not initialized). ;  ; virtual void Sync (Int_t mode);  Set synchronisation on or off. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:34364,Hash,Hash,34364,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"se of symmetric matrices the size is N*(N+1)/2. ; Definition at line 125 of file SMatrix.icc. ◆ SMatrix() [9/10]. template<class T , unsigned int D1, unsigned int D2, class R > . ROOT::Math::SMatrix< T, D1, D2, R >::SMatrix ; (; const SVector< T, D1 *(D2+1)/2 > & ; v, . bool ; lower = true . ). constructor of a symmetrix a matrix from a SVector containing the lower (upper) triangular part. ; construct from upper/lower block ; Definition at line 858 of file SMatrix.icc. ◆ SMatrix() [10/10]. template<class T , unsigned int D1, unsigned int D2, class R > . ROOT::Math::SMatrix< T, D1, D2, R >::SMatrix ; (; const T & ; rhs). explicit . Construct from a scalar value (only for size 1 matrices) ; Definition at line 138 of file SMatrix.icc. Member Function Documentation. ◆ apply(). template<class T , unsigned int D1, unsigned int D2, class R > . T ROOT::Math::SMatrix< T, D1, D2, R >::apply ; (; unsigned int ; i); const. inline . access the parse tree with the index starting from zero and following the C convention for the order in accessing the matrix elements. ; Same convention for general and symmetric matrices. ; Definition at line 627 of file SMatrix.icc. ◆ Array() [1/2]. template<class T , unsigned int D1, unsigned int D2, class R > . T * ROOT::Math::SMatrix< T, D1, D2, R >::Array. inline . return pointer to internal array ; Definition at line 633 of file SMatrix.icc. ◆ Array() [2/2]. template<class T , unsigned int D1, unsigned int D2, class R > . const T * ROOT::Math::SMatrix< T, D1, D2, R >::Array. inline . return read-only pointer to internal array ; Definition at line 630 of file SMatrix.icc. ◆ At() [1/2]. template<class T , unsigned int D1, unsigned int D2, class R > . T & ROOT::Math::SMatrix< T, D1, D2, R >::At ; (; unsigned int ; i, . unsigned int ; j . ). inline . read/write access to matrix element with indices starting from 0. ; Function will check index values and it will assert if they are wrong ; Definition at line 660 of file SMatrix.icc. ◆ At() [2/2]. tem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1SMatrix.html:18119,access,access,18119,doc/master/classROOT_1_1Math_1_1SMatrix.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1SMatrix.html,2,['access'],"['access', 'accessing']"
Security,"se, ""delete"" which would call the dtors). The option=""dtor"" is only used when called via the ~TMapFile. ; Implements TVirtualMapFile.; Definition at line 979 of file TMapFile.cxx. ◆ Create(). TMapFile * TMapFile::Create ; (; const char * ; name, . Option_t * ; option = ""READ"", . Int_t ; size = kDefaultMapSize, . const char * ; title = """" . ). static . Create a memory mapped file. ; This opens a file (to which the memory will be mapped) and attaches a memory region to it. Option can be either: ""NEW"", ""CREATE"", ""RECREATE"", ""UPDATE"" or ""READ"" (see TFile). The default open mode is ""READ"". The size argument specifies the maximum size of shared memory file in bytes. TMapFile's can only be created via this method. Create() enforces that a TMapFile is always on the memory mapped heap (when ""NEW"", ""CREATE"" or ""RECREATE"" are used). ; Definition at line 1172 of file TMapFile.cxx. ◆ CreateSemaphore(). void TMapFile::CreateSemaphore ; (; Int_t ; pid = 0). protected . Create semaphore used for synchronizing access to shared memory. ; Definition at line 847 of file TMapFile.cxx. ◆ DeclFileName(). static const char * TMapFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 118 of file TMapFile.h. ◆ DeleteSemaphore(). void TMapFile::DeleteSemaphore ; (; ). protected . Delete the semaphore. ; Definition at line 877 of file TMapFile.cxx. ◆ FindShadowMapFile(). TMapFile * TMapFile::FindShadowMapFile ; (; ). protected . Returns shadow map file. ; Definition at line 1024 of file TMapFile.cxx. ◆ Get(). TObject * TMapFile::Get ; (; const char * ; name, . TObject * ; delObj = nullptr . ). Return pointer to object retrieved from shared memory. ; The object must be deleted after use. If delObj is a pointer to a previously allocated object it will be deleted. Returns 0 in case object with the given name does not exist. ; Definition at line 800 of file TMapFile.cxx. ◆ GetBaseAddr(). void * TMapFile::GetBaseAddr ; (; ); const. inl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMapFile.html:21209,access,access,21209,doc/master/classTMapFile.html,https://root.cern,https://root.cern/doc/master/classTMapFile.html,1,['access'],['access']
Security,"se.cxx:646; THnSparse::GetBinError2Double_t GetBinError2(Long64_t linidx) const overrideGet square of the error of bin addressed by linidx as If errors are not enabled (via Sumw2() or Calc...Definition THnSparse.cxx:771; THnSparse::THnSparseTHnSparse()Construct an empty THnSparse.Definition THnSparse.cxx:589; THnSparse::AddChunkTHnSparseArrayChunk * AddChunk()Create a new chunk of bin content.Definition THnSparse.cxx:634; THnSparse::GenerateArrayvirtual TArray * GenerateArray() const =0; THnSparse::SetBinError2void SetBinError2(Long64_t bin, Double_t e2) overrideSet error of bin with index ""bin"" to ""e"", enable errors if needed.Definition THnSparse.cxx:914; THnSparse::FillExMapvoid FillExMap()We have been streamed; set up fBins.Definition THnSparse.cxx:655; THnSparse::~THnSparse~THnSparse() overrideDestruct a THnSparse.Definition THnSparse.cxx:616; THnSparse::fBinsTExMap fBins! Filled binsDefinition THnSparse.h:42; THnSparse::fBinsContinuedTExMap fBinsContinued! Filled bins for non-unique hashes, containing pairs of (bin index 0, bin index 1)Definition THnSparse.h:43; THnSparse::AddBinContentvoid AddBinContent(const Int_t *idx, Double_t v=1.)Forwards to THnBase::AddBinContent().Definition THnSparse.h:113; THnSparse::Reservevoid Reserve(Long64_t nbins) overrideInitialize storage for nbins.Definition THnSparse.cxx:689; THnSparse::fChunkSizeInt_t fChunkSizeNumber of entries for each chunk.Definition THnSparse.h:39; THnSparse::Sumw2void Sumw2() overrideEnable calculation of errors.Definition THnSparse.cxx:948; THnSparse::GetNbinsLong64_t GetNbins() const overrideDefinition THnSparse.h:93; THnSparse::CreateIterROOT::Internal::THnBaseBinIter * CreateIter(Bool_t respectAxisRange) const overrideCreate an iterator over all filled bins of a THnSparse.Definition THnSparse.cxx:896; THnSparse::GetBinIndexForCurrentBinLong64_t GetBinIndexForCurrentBin(Bool_t allocate)Return the index for fCurrentBinIndex.Definition THnSparse.cxx:789; TIterDefinition TCollection.h:235; TObjArray::G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THnSparse_8cxx_source.html:48980,hash,hashes,48980,doc/master/THnSparse_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THnSparse_8cxx_source.html,1,['hash'],['hashes']
Security,"seOffsetvirtual Longptr_t ClassInfo_GetBaseOffset(ClassInfo_t *, ClassInfo_t *, void *=nullptr, bool=true) constDefinition TInterpreter.h:409; TInterpreter::ClassInfo_Destructvirtual void ClassInfo_Destruct(ClassInfo_t *, void *) constDefinition TInterpreter.h:404; TIsAProxyTIsAProxy implementation class.Definition TIsAProxy.h:27; TIterDefinition TCollection.h:235; TIter::Resetvoid Reset()Definition TCollection.h:254; TListOfDataMembersA collection of TDataMember objects designed for fast access given a DeclId_t and for keep track of T...Definition TListOfDataMembers.h:33; TListOfEnumsWithLockA collection of TEnum objects designed for fast access given a DeclId_t and for keep track of TEnum t...Definition TListOfEnumsWithLock.h:31; TListOfEnumsWithLock::Classstatic TClass * Class(); TListOfEnumsA collection of TEnum objects designed for fast access given a DeclId_t and for keep track of TEnum t...Definition TListOfEnums.h:33; TListOfFunctionTemplatesA collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFu...Definition TListOfFunctionTemplates.h:35; TListOfFunctionTemplates::fClassTClass * fClassDefinition TListOfFunctionTemplates.h:40; TListOfFunctionTemplates::FindObjectTObject * FindObject(const char *name) const overrideSpecialize FindObject to do search for the a function just by name or create it if its not already in...Definition TListOfFunctionTemplates.cxx:175; TListOfFunctionTemplates::Loadvoid Load()Load all the functions known to the interpreter for the scope 'fClass' into this collection.Definition TListOfFunctionTemplates.cxx:356; TListOfFunctionTemplates::Deletevoid Delete(Option_t *option="""") overrideDelete all TFunction object files.Definition TListOfFunctionTemplates.cxx:164; TListOfFunctionsA collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFu...Definition TListOfFunctions.h:35; TListOfFunctions::GetTFunction * Get(DeclId_t id)Return (after creating it if n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:356923,access,access,356923,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,2,['access'],['access']
Security,"sed in the most of the cases. They provide a buffered input data and an address of the in-memory target object and allow user to specify the conversion function mapping the data being read to the output format. The second type of the rules, the raw rules, also provide the pointer to the target object but the input is a raw TBuffer object containing the input data member declared as an input to the rule. This type of a rule is provided mainly to handle the file format changes that couldn’t have been handled otherwise and in general should not be used unless there is no other option.; 11.5.6.1 The dictionaries; The most convenient place to specify the conversion rules is a dictionary. One can do that either in a LinkDef file or in the selection xml file being fed to genreflex. The syntax of the rules is the following:. For dictionaries created from a LinkDef file:. #pragma read \; sourceClass=""ClassA"" \; source=""double m_a; double m_b; double m_c"" \; version=""[4-5,7,9,12-]"" \; checksum=""[12345,123456]"" \; targetClass=""ClassB"" \; target=""m_x"" \; embed=""true"" \; include=""iostream,cstdlib"" \; code=""{m_x = onfile.m_a * onfile.m_b * onfile.m_c; }"" \. #pragma readraw \; sourceClass=""TAxis"" \; source=""fXbins"" \; targetClass=""TAxis"" \; target=""fXbins"" \; version=""[-5]"" \; include=""TAxis.h"" \; code=""\; {\; Float_t * xbins=0; \; Int_t n = buffer.ReadArray( xbins ); \; fXbins.Set( xbins ); \; }"". For REFLEX dictionaries:. <ioread sourceClass=""ClassA""; source=""double m_a; double m_b; double m_c""; version=""[4-5,7,9,12-]""; checksum=""[12345,123456]""; targetClass=""ClassB""; target=""m_x""; embed=""true""; include=""iostream,cstdlib"">; <![CDATA[; m_x = onfile.m_a * onfile.m_b * onfile.m_c;; ]] >; </ioread>. <ioreadraw sourceClass=""TAxis""; source=""fXbins""; targetClass=""TAxis""; target=""fXbins""; version=""[-5]""; include=""TAxis.h"">; <![CDATA[; Float_t *xbins = 0;; Int_t n = buffer.ReadArray( xbins ) ;; fXbins.Set( xbins );; ]] >; </ioreadraw>; The variables in the rules have the following meanin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:499920,checksum,checksum,499920,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['checksum'],['checksum']
Security,"sedSlotsNumber of used slots. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THashTable(Int_t capacity = TCollection::kInitHashTableCapacity, Int_t rehash = 0); Create a THashTable object. Capacity is the initial hashtable capacity; (i.e. number of slots), by default kInitHashTableCapacity = 17, and; rehashlevel is the value at which a rehash will be triggered. I.e. when; the average size of the linked lists at a slot becomes longer than; rehashlevel then the hashtable will be resized and refilled to reduce; the collision rate to about 1. The higher the collision rate, i.e. the; longer the linked lists, the longer lookup will take. If rehashlevel=0; the table will NOT automatically be rehashed. Use Rehash() for manual; rehashing. ~THashTable(); Delete a hashtable. Objects are not deleted unless the THashTable is the; owner (set via SetOwner()). void Add(TObject* obj); Add object to the hash table. Its position in the table will be; determined by the value returned by its Hash() function. void AddAll(const TCollection* col); Add all objects from collection col to this collection.; Implemented for more efficient rehashing. void Clear(Option_t* option = """"); Remove all objects from the table. Does not delete the objects; unless the THashTable is the owner (set via SetOwner()). Int_t Collisions(const char* name) const; Returns the number of collisions for an object with a certain name; (i.e. number of objects in same slot in the hash table, i.e. length; of linked list). Int_t Collisions(TObject* obj) const; Returns the number of collisions for an object (i.e. number of objects; in same slot in the hash table, i.e. length of linked list). void Delete(Option_t* option = """"); Remove all objects from the table AND delete all heap based objects. TObject * FindObject(const char* name) const; Find object using its name. Uses the hash value returned by the; TString::Hash() after converting name to a TString. TObject * FindObject(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THashTable.html:9189,Hash,Hash,9189,root/html528/THashTable.html,https://root.cern,https://root.cern/root/html528/THashTable.html,3,['Hash'],['Hash']
Security,"sedSlotsNumber of used slots. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THashTable(Int_t capacity = TCollection::kInitHashTableCapacity, Int_t rehash = 0); Create a THashTable object. Capacity is the initial hashtable capacity; (i.e. number of slots), by default kInitHashTableCapacity = 17, and; rehashlevel is the value at which a rehash will be triggered. I.e. when; the average size of the linked lists at a slot becomes longer than; rehashlevel then the hashtable will be resized and refilled to reduce; the collision rate to about 1. The higher the collision rate, i.e. the; longer the linked lists, the longer lookup will take. If rehashlevel=0; the table will NOT automatically be rehashed. Use Rehash() for manual; rehashing. ~THashTable(); Delete a hashtable. Objects are not deleted unless the THashTable is the; owner (set via SetOwner()). void Add(TObject* obj); Add object to the hash table. Its position in the table will be; determined by the value returned by its Hash() function. void AddBefore(const TObject* before, TObject* obj); Add object to the hash table. Its position in the table will be; determined by the value returned by its Hash() function.; If and only if 'before' is in the same bucket as obj, obj is added; in front of 'before' within the bucket's list. void AddAll(const TCollection* col); Add all objects from collection col to this collection.; Implemented for more efficient rehashing. void Clear(Option_t* option = """"); Remove all objects from the table. Does not delete the objects; unless the THashTable is the owner (set via SetOwner()). Int_t Collisions(const char* name) const; Returns the number of collisions for an object with a certain name; (i.e. number of objects in same slot in the hash table, i.e. length; of linked list). Int_t Collisions(TObject* obj) const; Returns the number of collisions for an object (i.e. number of objects; in same slot in the hash table, i.e. length of linked list). voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THashTable.html:9397,Hash,Hash,9397,root/html534/THashTable.html,https://root.cern,https://root.cern/root/html534/THashTable.html,3,['Hash'],['Hash']
Security,"see tmva/doc/LICENSE) *; 25 **********************************************************************************/; 26 ; 27#ifndef TMVA_DNN_TENSORDATALOADER; 28#define TMVA_DNN_TENSORDATALOADER; 29 ; 30#include ""TMatrix.h""; 31#include ""TMVA/Event.h""; 32#include <algorithm>; 33#include <vector>; 34#include <utility>; 35 ; 36namespace TMVA {; 37 class DataSetInfo;; 38namespace DNN {; 39 ; 40//; 41// Input Data Types; 42//______________________________________________________________________________; 43using TensorInput =; 44 std::tuple<const std::vector<TMatrixT<Double_t>> &, const TMatrixT<Double_t> &, const TMatrixT<Double_t> &>;; 45 ; 46using TMVAInput_t = std::tuple<const std::vector<Event *> &, const DataSetInfo &>;; 47using IndexIterator_t = typename std::vector<size_t>::iterator;; 48 ; 49/** TTensorBatch; 50 *; 51 * Class representing training batches consisting of a vector of matrices as input data; 52 * and a matrix of output data. The input and output data can be accessed using; 53 * the GetInput() and GetOutput() member functions.; 54 *; 55 * \tparam Architecture_t The underlying architecture.; 56 */; 57 ; 58template <typename Architecture_t>; 59class TTensorBatch {; 60public:; 61 using Matrix_t = typename Architecture_t::Matrix_t;; 62 using Tensor_t = typename Architecture_t::Tensor_t;; 63 ; 64private:; 65 Tensor_t fInputTensor; ///< The input tensor batch, one matrix one input.; 66 Matrix_t fOutputMatrix; ///< The output matrix representing the ground truth.; 67 Matrix_t fWeightMatrix; ///< The event/example weights; 68 ; 69public:; 70 TTensorBatch(Tensor_t &, Matrix_t &, Matrix_t &);; 71 TTensorBatch(const TTensorBatch &) = default;; 72 TTensorBatch(TTensorBatch &&) = default;; 73 TTensorBatch &operator=(const TTensorBatch &) = default;; 74 TTensorBatch &operator=(TTensorBatch &&) = default;; 75 ; 76 /** Return the tensor representing the input data */; 77 Tensor_t &GetInput() { return fInputTensor; }; 78 /** Return the matrix representing the output data. *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TensorDataLoader_8h_source.html:1982,access,accessed,1982,doc/master/TensorDataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/TensorDataLoader_8h_source.html,1,['access'],['accessed']
Security,"selection expression is used as a weight; to fill the histogram.; If the expression includes only boolean operations, the result; is 0 or 1. If the result is 0, the histogram is not filled.; In general, the expression may be of the form:; value*(boolean expression); if boolean expression is true, the histogram is filled with; a weight = value.; Examples:; selection1 = ""x<y && sqrt(z)>3.2""; selection2 = ""(x+y)*(sqrt(z)>3.2""; selection1 returns a weight = 0 or 1; selection2 returns a weight = x+y if sqrt(z)>3.2; returns a weight = 0 otherwise. option is the drawing option; see TH1::Draw for the list of all drawing options.; If option contains the string ""goff"", no graphics is generated. nentries is the number of entries to process (default is all); first is the first entry to process (default is 0). Drawing expressions using arrays and array elements. Let assume, a leaf fMatrix, on the branch fEvent, which is a 3 by 3 array,; or a TClonesArray.; In a TTree::Draw expression you can now access fMatrix using the following; syntaxes:. String passed What is used for each entry of the tree. ""fMatrix"" the 9 elements of fMatrix; ""fMatrix[][]"" the 9 elements of fMatrix; ""fMatrix[2][2]"" only the elements fMatrix[2][2]; ""fMatrix[1]"" the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2]; ""fMatrix[1][]"" the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2]; ""fMatrix[][0]"" the 3 elements fMatrix[0][0], fMatrix[1][0] and fMatrix[2][0]. ""fEvent.fMatrix...."" same as ""fMatrix..."" (unless there is more than one leaf named fMatrix!). In summary, if a specific index is not specified for a dimension, TTree::Draw; will loop through all the indices along this dimension. Leaving off the; last (right most) dimension of specifying then with the two characters '[]'; is equivalent. For variable size arrays (and TClonesArray) the range; of the first dimension is recalculated for each entry of the tree.; You can also specify the index as an expression of any other variables from the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreePlayer.html:21724,access,access,21724,root/html528/TTreePlayer.html,https://root.cern,https://root.cern/root/html528/TTreePlayer.html,1,['access'],['access']
Security,"ser name and passwd from several sources. ;  ; Int_t GetVersion () const;  ; Int_t ProofAuthSetup ();  Authentication related stuff setup in TProofServ. ;  ; Int_t RfioAuth (TString &user);  RFIO authentication (no longer supported) ;  ; void SetEnvironment ();  Set default authentication environment. ;  ; Int_t SshAuth (TString &user);  SSH client authentication code (no longer supported) ;  ; Int_t SshError (const char *errfile);  . Static Private Member Functions; static Bool_t CheckHost (const char *Host, const char *host);  Check if 'host' matches 'href': this means either equal or ""containing"" it, even with wild cards * in the first field (in the case 'href' is a name, ie not IP address) Returns kTRUE if the two matches. ;  ; static void FileExpand (const char *fin, FILE *ftmp);  Expands include directives found in fexp files The expanded, temporary file, is pointed to by 'ftmp' and should be already open. ;  ; static Int_t ProofAuthSetup (TSocket *sock, Bool_t client);  Setup of authetication related stuff in PROOF run after a successful authentication. ;  ; static void RemoveSecContext (TRootSecContext *ctx);  Tool for removing SecContext ctx from THostAuth listed in fgAuthInfo or fgProofAuthInfo. ;  . Private Attributes; TString fDetails;  ; THostAuth * fHostAuth;  ; TString fPasswd;  ; TString fProtocol;  ; Bool_t fPwHash;  ; TString fRemote;  ; Int_t fRSAKey;  ; TRootSecContext * fSecContext;  ; ESecurity fSecurity;  ; TSocket * fSocket;  ; Int_t fTimeOut;  ; TString fUser;  ; Int_t fVersion;  . Static Private Attributes; static TList * fgAuthInfo = 0;  ; static TString fgAuthMeth [kMAXSEC];  ; static Bool_t fgAuthReUse;  ; static Int_t fgAuthTO = -2;  ; static TString fgDefaultUser;  ; static TDatime fgExpDate;  ; static GlobusAuth_t fgGlobusAuthHook;  ; static Krb5Auth_t fgKrb5AuthHook;  ; static TString fgKrb5Principal;  ; static TDatime fgLastAuthrc;  ; static Int_t fgLastError = -1;  ; static TString fgPasswd;  ; static TPluginHandler * fgPasswdDialog",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAuthenticate.html:18678,authenticat,authentication,18678,doc/master/classTAuthenticate.html,https://root.cern,https://root.cern/doc/master/classTAuthenticate.html,1,['authenticat'],['authentication']
Security,"ser prompt required; static TList*fgProofAuthInfoSpecific lists of THostAuth fro proof; static Bool_tfgPwHashkTRUE if fgPasswd is a passwd hash; static Int_tfgRSAInit; static Int_tfgRSAKeyDefault type of RSA key to be tried; static rsa_KEYfgRSAPriKey; static rsa_KEY_exportfgRSAPubExport[2]; static rsa_KEYfgRSAPubKey; static Bool_tfgReadHomeAuthrckTRUE to look for $HOME/.rootauthrc; static TStringfgRootAuthrcPath to last rootauthrc-like file read; static Bool_tfgSRPPwdkTRUE if fgPasswd is a SRP passwd; static SecureAuth_tfgSecAuthHook; static TStringfgUser; static Bool_tfgUsrPwdCryptkTRUE if encryption for UsrPwd is required. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAuthenticate(TSocket* sock, const char* remote, const char* proto, const char* user = """"); Create authentication object. void CatchTimeOut(); Called in connection with a timer timeout. Bool_t Authenticate(); Authenticate to remote rootd or proofd server. Return kTRUE if; authentication succeeded. void SetEnvironment(); Set default authentication environment. The values are inferred; from fSecurity and fDetails. Bool_t GetUserPasswd(TString& user, TString& passwd, Bool_t& pwhash, Bool_t srppwd); Try to get user name and passwd from several sources. Bool_t CheckNetrc(TString& user, TString& passwd); Try to get user name and passwd from the ~/.rootnetrc or; ~/.netrc files. For more info see the version with 4 arguments.; This version is maintained for backward compatability reasons. Bool_t CheckNetrc(TString& user, TString& passwd, Bool_t& pwhash, Bool_t srppwd); Try to get user name and passwd from the ~/.rootnetrc or; ~/.netrc files. First ~/.rootnetrc is tried, after that ~/.netrc.; These files will only be used when their access masks are 0600.; Returns kTRUE if user and passwd were found for the machine; specified in the URL. If kFALSE, user and passwd are """".; If srppwd == kTRUE then a SRP ('secure') pwd is searched for in; the files.; The boolean pwhas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAuthenticate.html:11369,authenticat,authentication,11369,root/html526/TAuthenticate.html,https://root.cern,https://root.cern/root/html526/TAuthenticate.html,7,['authenticat'],['authentication']
Security,"ser@]host[:port][/service][?options]; where proto = ""sockd"", ""rootd"", ""proofd"" indicates the type of remote server; if missing ""sockd"" is assumed (""sockd"" indicates any remote server session using TServerSocket) [p] = for parallel sockets (forced internally for rootd; ignored for proofd) [auth] = ""up"" or ""k"" to force UsrPwd or Krb5 authentication [port] = is the remote port number [service] = service name used to determine the port (for backward compatibility, specification of port as priority) options = ""m"" or ""s"", when proto=proofd indicates whether we are master or slave (used internally by TSlave); An already opened connection can be used by passing its socket in opensock.; If 'err' is defined, '*err' on return from a failed call contains an error code (see NetErrors.h).; Example:; TSocket::CreateAuthSocket(""pk://qwerty@machine.fq.dn:5052"",3); creates an authenticated parallel socket of size 3 to a sockd server running on remote machine machine.fq.dn on port 5052; authentication will attempt protocol Kerberos first.; NB: may hang if the remote server is not of the correct type; at present TSocket has no way to find out the type of the remote server automatically; Returns pointer to an authenticated socket or 0 if creation or authentication is unsuccessful. ; Definition at line 1290 of file TSocket.cxx. ◆ CreateAuthSocket() [2/2]. TSocket * TSocket::CreateAuthSocket ; (; const char * ; user, . const char * ; url, . Int_t ; port, . Int_t ; size = 0, . Int_t ; tcpwindowsize = -1, . TSocket * ; opensock = nullptr, . Int_t * ; err = nullptr . ). static . Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ; url: [[proto][p][auth]://]host[/?options]; where proto = ""sockd"", ""rootd"", ""proofd"" indicates the type of remote server if missing ""sockd"" is assumed (""sockd"" indicates any remote server session using TServerSocket) [p] = for parallel sockets (forced internally for rootd) [auth] = ""up"" or ""k"" t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSocket.html:24397,authenticat,authentication,24397,doc/master/classTSocket.html,https://root.cern,https://root.cern/doc/master/classTSocket.html,1,['authenticat'],['authentication']
Security,"sert it in prefetchBuffers list. void ReadListOfBlocks(); Get blocks specified in prefetchBlocks. Bool_t BinarySearchReadList(TFPBlock* , Long64_t , Int_t , Int_t* ); Search for a requested element in a block and return the index. Long64_t GetWaitTime(); Return the time spent wating for buffer to be read in microseconds. Bool_t ReadBuffer(char* , Long64_t , Int_t ); Return a prefetched element. void ReadBlock(Long64_t* , Int_t* , Int_t ); Create a TFPBlock object or recycle one and add it to the prefetchBlocks list. void AddPendingBlock(TFPBlock* ); Safe method to add a block to the pendingList. TFPBlock* GetPendingBlock(); Safe method to remove a block from the pendingList. void AddReadBlock(TFPBlock* ); Safe method to add a block to the readList. TFPBlock* CreateBlockObj(Long64_t* , Int_t* , Int_t ); Create a new block or recycle an old one. TThread* GetThread() const; Return reference to the consumer thread. void SetFile(TFile* ); Change the file. Int_t ThreadStart(); Used to start the consumer thread. TThread::VoidRtnFunc_t ThreadProc(void* ); Execution loop of the consumer thread. Int_t SumHex(const char* ); Sum up individual hex values to obtain a decimal value. Bool_t CheckBlockInCache(char*& , TFPBlock* ); Test if the block is in cache. char* GetBlockFromCache(const char* , Int_t ); Return a buffer from cache. void SaveBlockInCache(TFPBlock* ); Save the block content in cache. Bool_t CheckCachePath(const char* ); Validate the input file cache path. Bool_t SetCache(const char* ); Set the path of the cache directory. TFilePrefetch(TFile* ). TMutex* GetMutexSynch() const; { return fMutexSynch; }. » Author: Elvin Sindrilaru 19/05/2011 » Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TFilePrefetch.h 41698 2011-11-01 21:22:54Z pcanal $ » Last generated: 2011-11-03 20:13; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFilePrefetch.html:8172,Validat,Validate,8172,root/html532/TFilePrefetch.html,https://root.cern,https://root.cern/root/html532/TFilePrefetch.html,1,['Validat'],['Validate']
Security,"set = fBitOffsets[i] / 8;; 290 const Int_t shift = fBitOffsets[i] % 8;; 291 ULong64_t val = coord[i];; 292 ; 293 Char_t* pbuf = fCoordBuffer + offset;; 294 *pbuf += 0xff & (val << shift);; 295 val = val >> (8 - shift);; 296 while (val) {; 297 ++pbuf;; 298 *pbuf += 0xff & val;; 299 val = val >> 8;; 300 }; 301 }; 302 ; 303 ULong64_t hash = 5381;; 304 Char_t* str = fCoordBuffer;; 305 while (str - fCoordBuffer < fCoordBufferSize) {; 306 hash *= 5;; 307 hash += *(str++);; 308 }; 309 return hash;; 310}; 311*/; 312 ; 313 ; 314////////////////////////////////////////////////////////////////////////////////; 315/// Calculate hash from compact bin index.; 316 ; 317ULong64_t THnSparseCoordCompression::GetHashFromBuffer(const Char_t* buf) const; 318{; 319 // Bins are addressed in two different modes, depending; 320 // on whether the compact bin index fits into a Long64_t or not.; 321 // If it does, we can use it as a ""perfect hash"" for the TExMap.; 322 // If not we build a hash from the compact bin index, and use that; 323 // as the TExMap's hash.; 324 ; 325 if (fCoordBufferSize <= 8) {; 326 // fits into a Long64_t; 327 ULong64_t hash1 = 0;; 328 memcpy(&hash1, buf, fCoordBufferSize);; 329 return hash1;; 330 }; 331 ; 332 // else: doesn't fit into a Long64_t:; 333 ULong64_t hash = 5381;; 334 const Char_t* str = buf;; 335 while (str - buf < fCoordBufferSize) {; 336 hash *= 5;; 337 hash += *(str++);; 338 }; 339 return hash;; 340}; 341 ; 342 ; 343 ; 344 ; 345/** \class THnSparseCompactBinCoord; 346THnSparseCompactBinCoord is a class used by THnSparse internally. It; 347maps between an n-dimensional array of bin coordinates (indices) and; 348its compact version, the THnSparseCoordCompression.; 349*/; 350 ; 351class THnSparseCompactBinCoord: public THnSparseCoordCompression {; 352public:; 353 THnSparseCompactBinCoord(Int_t dim, const Int_t* nbins);; 354 ~THnSparseCompactBinCoord();; 355 Int_t* GetCoord() { return fCurrentBin; }; 356 const Char_t* GetBuffer() const { return fCoordBuffe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THnSparse_8cxx_source.html:11077,hash,hash,11077,doc/master/THnSparse_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THnSparse_8cxx_source.html,2,['hash'],['hash']
Security,"set in the TWebFile object. Use IsZombie() to see if the file is accessible. The preferred interface to this constructor is via TFile::Open(). ; Definition at line 146 of file TWebFile.cxx. ◆ TWebFile() [3/3]. TWebFile::TWebFile ; (; TUrl ; url, . Option_t * ; opt = """" . ). Create a Web file object. ; A web file is the same as a read-only TFile except that it is being read via a HTTP server. Make sure url is a valid TUrl object. The opt can be ""NOPROXY"", to bypass any set ""http_proxy"" shell variable. The proxy can be specified as (in sh, or equivalent csh): export http_proxy=http://pcsalo.cern.ch:3128 The proxy can also be specified via the static method TWebFile::SetProxy(). Basic authentication (AuthType Basic) is supported. The user name and passwd can be specified in the url like this: http://username:mypasswd@pcsalo.cern.ch/files/aap.root If the file specified in the URL does not exist or is not accessible the kZombie bit will be set in the TWebFile object. Use IsZombie() to see if the file is accessible. ; Definition at line 181 of file TWebFile.cxx. ◆ ~TWebFile(). TWebFile::~TWebFile ; (; ). virtual . Cleanup. ; Definition at line 199 of file TWebFile.cxx. Member Function Documentation. ◆ BasicAuthentication(). TString TWebFile::BasicAuthentication ; (; ). protectedvirtual . Return basic authentication scheme, to be added to the request. ; Definition at line 1385 of file TWebFile.cxx. ◆ CheckProxy(). void TWebFile::CheckProxy ; (; ). protectedvirtual . Check if shell var ""http_proxy"" has been set and should be used. ; Definition at line 353 of file TWebFile.cxx. ◆ Class(). static TClass * TWebFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TWebFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TWebFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 95 of file TWebFile.h. ◆ Close(). void TWebFile::Clos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebFile.html:45488,access,accessible,45488,doc/master/classTWebFile.html,https://root.cern,https://root.cern/doc/master/classTWebFile.html,1,['access'],['accessible']
Security,"set is only processed once.; 469~~~{.py}; 470df_correct = ROOT.RDataFrame(treename, filename);; 471 ; 472h_a = df_correct.Histo1D(""a""); 473h_b = df_correct.Histo1D(""b""); 474h_c = df_correct.Histo1D(""c""); 475 ; 476h_a_val = h_a.GetValue(); 477h_b_val = h_b.GetValue(); 478h_c_val = h_c.GetValue(); 479 ; 480print(f""How many times was the data set processed? {df_wrong.GetNRuns()} time."") # The answer will be 1 time. ; 481~~~; 482 ; 483An incorrect way - the dataset is processed three times.; 484~~~{.py}; 485df_incorrect = ROOT.RDataFrame(treename, filename);; 486 ; 487h_a = df_incorrect.Histo1D(""a""); 488h_a_val = h_a.GetValue(); 489 ; 490h_b = df_incorrect.Histo1D(""b""); 491h_b_val = h_b.GetValue(); 492 ; 493h_c = df_incorrect.Histo1D(""c""); 494h_c_val = h_c.GetValue(); 495 ; 496print(f""How many times was the data set processed? {df_wrong.GetNRuns()} times."") # The answer will be 3 times. ; 497~~~; 498 ; 499It is therefore good practice to declare all your transformations and actions *before* accessing their results, allowing; 500RDataFrame to run the loop once and produce all results in one go.; 501 ; 502### Going parallel; 503Let's say we would like to run the previous examples in parallel on several cores, dividing events fairly between cores.; 504The only modification required to the snippets would be the addition of this line *before* constructing the main; 505dataframe object:; 506~~~{.cpp}; 507ROOT::EnableImplicitMT();; 508~~~; 509Simple as that. More details are given [below](#parallel-execution).; 510 ; 511\anchor collections; 512## Working with collections and object selections; 513 ; 514RDataFrame reads collections as the special type [ROOT::RVec](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html): for example, a column containing an array of floating point numbers can be read as a ROOT::RVecF. C-style arrays (with variable or static size), STL vectors and most other collection types can be read this way.; 515 ; 516RVec is a container similar to std:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:29620,access,accessing,29620,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['access'],['accessing']
Security,"set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; static RooCategory*_dummyBlindState; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsHiddenReal.html:33447,access,access,33447,root/html534/RooAbsHiddenReal.html,https://root.cern,https://root.cern/root/html534/RooAbsHiddenReal.html,1,['access'],['access']
Security,"set<string>RooAbsArg::_boolAttribBoolean attributes; set<string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue; Bool_tRooAbsArg::_deleteWatch! Delete watch flag; static RooCategory*RooAbsHiddenReal::_dummyBlindState; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches; Bool_tRooAbsArg::_isConstant! Cached isConstant status; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooUnblindCPAsymVar.html:35593,access,access,35593,root/html602/RooUnblindCPAsymVar.html,https://root.cern,https://root.cern/root/html602/RooUnblindCPAsymVar.html,8,['access'],['access']
Security,"set> are TFileCollection objects); kShowDefault as kExport with in addition a default selection including; the datasets from the current user, the ones from the group; and the common ones. kPrint print the dataset content; no output is returned; kList get a list of available dataset names; kForceScan Re-open files while processing kPrint (do not use the; pre-processed information); kNoHeaderPrint Labelling header is not printed; kQuotaUpdate update {group, user} quotas; no output is returned. NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null. Int_t FillLsDataSet(const char* group, const char* user, const char* dsName, TList* out, UInt_t option); Check for the 'ls.txt' for 'group' and 'user' and fill the path for the; ls file in 'out'.; If 'dsname' is defined, open the file and extract the relevant line.; Return 0 on success, -1 on failure. TFileCollection * GetDataSet(const char* group, const char* user, const char* dsName, UInt_t option = 0, TMD5** checksum = 0). Returns the dataset <dsName> of user <user> in group <group> .; If checksum is non-zero, it will contain the pointer to a TMD5 sum object; with the checksum of the file, has to be deleted by the user.; If option has the bi kReadShort set, the shortobject is read, that does not; contain the list of files. This is much faster. Int_t CheckLocalCache(const char* group, const char* user, const char* dsName = ""ls"", UInt_t option = 0); Check if the local cache information for group, user, dsName is up-to-date; If not, make the relevant updates; Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. Int_t ClearCache(const char* uri = 0); Clear cached information matching uri. Int_t ShowCache(const char* uri = 0); Show cached information matching uri. Int_t WriteDataSet(const char* group, const char* user, const char* dsName, TFileCollection* dataset, UInt_t option = 0, TMD5* checksum = 0). Writes indicated datase",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManagerFile.html:15787,checksum,checksum,15787,root/html528/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html528/TDataSetManagerFile.html,6,['checksum'],['checksum']
Security,"settings. For instance, one can configure custom format for different axes:; import { settings } from 'https://root.cern/js/latest/modules/main.mjs';; settings.XValuesFormat = '4.2g';; settings.YValuesFormat = '6.1f';; One also can use build/jsroot.js bundle to load all functionality at one and access it via JSROOT global handle:; <script src=""https://root.cern/js/latest/build/jsroot.js""></script>; <script>; // getting json string from somewhere; let obj = JSROOT.parse(root_json);; JSROOT.draw('plain', obj, 'colz');; </script>; 1.11.2 Use of JSON; It is strongly recommended to use JSON when communicating with ROOT application. THttpServer provides a JSON representation for every registered object with an url address like:; http://your_root_server:8080/Canvases/c1/root.json; Such JSON representation generated using the TBufferJSON class. One could create JSON file for any ROOT object directly, just writing in the code:; obj->SaveAs(""file.json"");; To access data from a remote web server, it is recommended to use the httpRequest method. For instance to receive object from a THttpServer server one could do:; import { httpRequest } from 'https://root.cern/js/latest/modules/main.mjs';; let obj = await httpRequest(""http://your_root_server:8080/Canvases/c1/root.json"", ""object""); console.log('Read object of type', obj._typename);; Function returns Promise, which provides parsed object (or Error in case of failure).; If JSON string was obtained by different method, it could be parsed with parse function:; import { parse } from 'https://root.cern/js/latest/modules/main.mjs';; let obj = parse(json_string);; 1.11.3 Objects drawing; After an object has been created, one can directly draw it. If HTML page has <div> element:; <div id=""drawing""></div>; One could use the draw function:; import { draw } from 'https://root.cern/js/latest/modules/main.mjs';; draw(""drawing"", obj, ""colz"");; The first argument is the id of the HTML div element, where drawing will be performed. The second a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html:25573,access,access,25573,root/htmldoc/guides/JSROOT/JSROOT.html,https://root.cern,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html,1,['access'],['access']
Security,"settings. The radio button ""All"" allows viewing all volumes down to the selected depth. ""Leaves"" will draw only the deepest nodes that have the selected depth or lower level ones that have no daughters inside. ""Only"" will allow drawing only the edited volume. The check button ""Raytrace"" will just draw the current selection in solid mode using the ray-tracing algorithm provided by TGeo. Volume visualisation settings and division interface for volumes. Division. Allows dividing the edited volume according a given pattern. The division axes that are allowed are presented in a radio-button group. The number entries labeled ""From"", ""Step"" and ""Nslices"" correspond to the divisioning parameters on the selected axis. The range of the division is between start and start+ndiv*step values and its validity is checked upon changing one of the values. NOTE: When changing a value in a number entry by typing a number, press ENTER at the end to validate. This applies for taking into account and validation of any number change in the geometry editors. How to Create a Valid Geometry with Geometry Editors. Create a new geometry manager and start the editor as described at the beginning.; Create at least one material from the ""Materials"" shutter item category. Generally, for creating objects, the interface is always in the TGeoManagerEditor in different categories - one should just provide a name and requested parameters.; Create a shape that will be used for the top volume within the ""Shapes"" category. For the moment, the shapes that have editors are Box, Para, Trd1, Trd2, Tube, Tube segment, Cone, Cone segment, Hype, Pcon, Torus and Sphere.; Create a medium from one of the existing materials from the ""Medium"" category. You will notice that some categories as ""Volume"" and ""Medium"" are inactive at the beginning because at that time there is no material yet (for making a medium) and no shape (for making a volume). These categories are dynamically activated once all the required component",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry.html:143956,validat,validation,143956,doc/master/group__Geometry.html,https://root.cern,https://root.cern/doc/master/group__Geometry.html,1,['validat'],['validation']
Security,"sgfmt) const; virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*First() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetEntries() const; Int_tGetEntriesFast() const; virtual const char*TObject::GetIconName() const; Int_tGetLast() const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tIndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; virtual Bool_tIsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*Last() const; Int_tTSeqCollection::LastIndex() const; Int_tLowerBound() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*MakeIterator(Bool_t dir = kIterForward) const; virtual TIte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TObjArray.html:4859,Hash,Hash,4859,root/html528/TObjArray.html,https://root.cern,https://root.cern/root/html528/TObjArray.html,1,['Hash'],['Hash']
Security,"sgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetCoord(Int_t i) const; Int_tGetDim() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFoamVect.html:2354,Hash,Hash,2354,root/html528/TFoamVect.html,https://root.cern,https://root.cern/root/html528/TFoamVect.html,2,['Hash'],['Hash']
Security,"sgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetCoord(Int_t i) const; Int_tGetDim() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFoamVect.html:2354,Hash,Hash,2354,root/html530/TFoamVect.html,https://root.cern,https://root.cern/root/html530/TFoamVect.html,6,['Hash'],['Hash']
Security,"sgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetCoord(Int_t i) const; Int_tGetDim() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFoamVect.html:2294,Hash,Hash,2294,root/html602/TFoamVect.html,https://root.cern,https://root.cern/root/html602/TFoamVect.html,4,['Hash'],['Hash']
Security,"sgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction2Map<double,double,double>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2Ref_double_double_double_.html:3094,Hash,Hash,3094,root/html526/RooCFunction2Ref_double_double_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2Ref_double_double_double_.html,2,['Hash'],['Hash']
Security,"sgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction2Map<double,double,double>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction2Ref_double_double_double_.html:3094,Hash,Hash,3094,root/html530/RooCFunction2Ref_double_double_double_.html,https://root.cern,https://root.cern/root/html530/RooCFunction2Ref_double_double_double_.html,3,['Hash'],['Hash']
Security,"sgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction2Map<double,double,double>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction2Ref_double_double_double_.html:2834,Hash,Hash,2834,root/html602/RooCFunction2Ref_double_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction2Ref_double_double_double_.html,2,['Hash'],['Hash']
Security,"sgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTImagePlugin.html:4201,Hash,Hash,4201,doc/master/classTImagePlugin.html,https://root.cern,https://root.cern/doc/master/classTImagePlugin.html,3,['Hash'],['Hash']
Security,"sgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFontPool.html:6518,Hash,Hash,6518,doc/master/classTGFontPool.html,https://root.cern,https://root.cern/doc/master/classTGFontPool.html,4,['Hash'],['Hash']
Security,"sh, Long64_t key)Return the value belonging to specified key and hash value.Definition TExMap.cxx:174; TExMap::AddAtvoid AddAt(UInt_t slot, ULong64_t hash, Long64_t key, Long64_t value)Add an (key,value) pair to the table.Definition TExMap.cxx:117; TFunctionTemplateDictionary for function template This class describes one single function template.Definition TFunctionTemplate.h:26; TFunctionGlobal functions class (global functions are obtained from CINT).Definition TFunction.h:30; TFunction::GetNargsInt_t GetNargs() constNumber of function arguments.Definition TFunction.cxx:174; THashTableTHashTable implements a hash table to store TObject's.Definition THashTable.h:35; THashTable::Addvoid Add(TObject *obj) overrideAdd object to the hash table.Definition THashTable.cxx:92; THashTable::GetListForObjectconst TList * GetListForObject(const char *name) constReturn the TList corresponding to object's name based hash value.Definition THashTable.cxx:268; THashTable::RemoveTObject * Remove(TObject *obj) overrideRemove object from the hashtable.Definition THashTable.cxx:417; TInterpreter::SuspendAutoLoadingRAIIDefinition TInterpreter.h:120; TInterpreter::SuspendAutoParsingDefinition TInterpreter.h:111; TInterpreter::ClassInfo_HasMethodvirtual Bool_t ClassInfo_HasMethod(ClassInfo_t *, const char *) constDefinition TInterpreter.h:413; TInterpreter::DataMemberInfo_Namevirtual const char * DataMemberInfo_Name(DataMemberInfo_t *) constDefinition TInterpreter.h:469; TInterpreter::DataMemberInfo_TypeNamevirtual const char * DataMemberInfo_TypeName(DataMemberInfo_t *) constDefinition TInterpreter.h:467; TInterpreter::DataMemberInfo_TypeSizevirtual int DataMemberInfo_TypeSize(DataMemberInfo_t *) constDefinition TInterpreter.h:466; TInterpreter::ClassInfo_Newvirtual void * ClassInfo_New(ClassInfo_t *) constDefinition TInterpreter.h:425; TInterpreter::ClassInfo_IsValidvirtual Bool_t ClassInfo_IsValid(ClassInfo_t *) constDefinition TInterpreter.h:421; TInterpreter::AutoParsevirtual Int_t A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:352668,hash,hashtable,352668,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,2,['hash'],['hashtable']
Security,"sh;; 339 ; 340 TVirtualStreamerInfo *GetStreamerInfoImpl(Int_t version, Bool_t silent) const;; 341 ; 342 mutable TVirtualMutex *fOVRMutex = nullptr;; 343 typedef std::multimap<void*, Version_t> RepoCont_t;; 344 mutable RepoCont_t fObjectVersionRepository;; 345 ; 346 void UnregisterAddressInRepository(const char *where, void *location, const TClass *what) const;; 347 void MoveAddressInRepository(const char *where, void *oldadd, void *newadd, const TClass *what) const;; 348 void RegisterAddressInRepository(const char *where, void *location, const TClass *what) const;; 349 ; 350private:; 351 TClass(const TClass& tc) = delete;; 352 TClass& operator=(const TClass&) = delete;; 353 ; 354 bool IsClassStructOrUnion() const { return Property() & (kIsClass|kIsStruct|kIsUnion); }; 355 TList *CreateListOfDataMembers(std::atomic<TListOfDataMembers*> &data, TDictionary::EMemberSelection selection, bool load);; 356 ; 357protected:; 358 TVirtualStreamerInfo *FindStreamerInfo(TObjArray *arr, UInt_t checksum) const;; 359 void GetMissingDictionariesForBaseClasses(TCollection &result, TCollection &visited, bool recurse);; 360 void GetMissingDictionariesForMembers(TCollection &result, TCollection &visited, bool recurse);; 361 void GetMissingDictionariesWithRecursionCheck(TCollection &result, TCollection &visited, bool recurse);; 362 void GetMissingDictionariesForPairElements(TCollection &result, TCollection &visited, bool recurse);; 363 ; 364public:; 365 TClass();; 366 TClass(const char *name, Bool_t silent = kFALSE);; 367 TClass(const char *name, Version_t cversion, Bool_t silent = kFALSE);; 368 TClass(const char *name, Version_t cversion, EState theState, Bool_t silent = kFALSE);; 369 TClass(ClassInfo_t *info, Version_t cversion,; 370 const char *dfil, const char *ifil = nullptr,; 371 Int_t dl = 0, Int_t il = 0, Bool_t silent = kFALSE);; 372 TClass(const char *name, Version_t cversion,; 373 const char *dfil, const char *ifil = nullptr,; 374 Int_t dl = 0, Int_t il = 0, Bool_t silent = kF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8h_source.html:17278,checksum,checksum,17278,doc/master/TClass_8h_source.html,https://root.cern,https://root.cern/doc/master/TClass_8h_source.html,2,['checksum'],['checksum']
Security,"shAssistedFind;  . Private Member Functions; void insert (RooAbsArg *);  Insert an element into the owned collections. ;  ; bool replaceImpl (const RooAbsArg &var1, const RooAbsArg &var2);  . Static Private Member Functions; static void throwAddTypedException (TClass *klass, RooAbsArg *arg);  . Private Attributes; std::unique_ptr< HashAssistedFind > _hashAssistedFind;  ! ;  ; std::size_t _sizeThresholdForMapSearch = 100;  ! ;  ; const RooFit::UniqueId< RooAbsCollection > _uniqueId;  . Additional Inherited Members;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooAbsCollection.h>. Inheritance diagram for RooAbsCollection:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ const_iterator. using RooAbsCollection::const_iterator = Storage_t::const_iterator. Definition at line 68 of file RooAbsCollection.h. ◆ HashAssistedFind. using RooAbsCollection::HashAssistedFind = RooFit::Detail::HashAssistedFind. private . Definition at line 445 of file RooAbsCollection.h. ◆ LegacyIterator_t. using RooAbsCollection::LegacyIterator_t = TIteratorToSTLInterface<Storage_t>. protected . Definition at line 401 of file RooAbsCollection.h. ◆ Storage_t. using RooAbsCollection::Storage_t = std::vector<RooAbsArg*>. Definition at line 67 of file RooAbsCollection.h. Constructor & Destructor Documentation. ◆ RooAbsCollection() [1/4]. RooAbsCollection::RooAbsCollection ; (; ). Default constructor. ; Definition at line 117 of file RooAbsCollection.cxx. ◆ RooAbsCollection() [2/4]. RooAbsCollection::RooAbsCollection ; (; const char * ; name). Empty collection constructor. ; Definition at line 127 of file RooAbsCollection.cxx. ◆ ~RooAbsCollection(). RooAbsCollection::~RooAbsCollection ; (; ). override . Destructor. ; Definition at line 175 of file RooAbsCollection.cxx. ◆ RooAbsCollection() [3/4]. RooAbsCollection::RooAbsCollection ; (; const RooAbsCollection & ; other, . con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsCollection.html:26367,Hash,HashAssistedFind,26367,doc/v632/classRooAbsCollection.html,https://root.cern,https://root.cern/doc/v632/classRooAbsCollection.html,2,['Hash'],['HashAssistedFind']
Security,"shList object. ; Capacity is the initial hashtable capacity (i.e. number of slots), by default kInitHashTableCapacity = 17, and rehash is the value at which a rehash will be triggered. I.e. when the average size of the linked lists at a slot becomes longer than rehash then the hashtable will be resized and refilled to reduce the collision rate to about 1. The higher the collision rate, i.e. the longer the linked lists, the longer lookup will take. If rehash=0 the table will NOT automatically be rehashed. Use Rehash() for manual rehashing.; WARNING !!! If the name of an object in the HashList is modified, The hashlist must be Rehashed ; Definition at line 43 of file THashList.cxx. ◆ THashList() [3/3]. THashList::THashList ; (; TObject * ; parent, . Int_t ; capacity = TCollection::kInitHashTableCapacity, . Int_t ; rehash = 0 . ). For backward compatibility only. Use other ctor. ; Definition at line 51 of file THashList.cxx. ◆ ~THashList(). THashList::~THashList ; (; ). virtual . Delete a hashlist. ; Objects are not deleted unless the THashList is the owner (set via SetOwner()). ; Definition at line 60 of file THashList.cxx. Member Function Documentation. ◆ AddAfter() [1/2]. void THashList::AddAfter ; (; const TObject * ; after, . TObject * ; obj . ). overridevirtual . Insert object after object after in the list. ; Implements TSeqCollection.; Reimplemented in TListOfDataMembers, TListOfEnums, TListOfEnumsWithLock, TListOfFunctions, TListOfFunctionTemplates, and TSelectorList.; Definition at line 143 of file THashList.cxx. ◆ AddAfter() [2/2]. void THashList::AddAfter ; (; TObjLink * ; after, . TObject * ; obj . ). overridevirtual . Insert object after object after in the list. ; Reimplemented from TList.; Reimplemented in TListOfDataMembers, TListOfEnums, TListOfEnumsWithLock, TListOfFunctions, TListOfFunctionTemplates, and TSelectorList.; Definition at line 154 of file THashList.cxx. ◆ AddAt(). void THashList::AddAt ; (; TObject * ; obj, . Int_t ; idx . ). overridevirt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHashList.html:23534,hash,hashlist,23534,doc/master/classTHashList.html,https://root.cern,https://root.cern/doc/master/classTHashList.html,1,['hash'],['hashlist']
Security,"shTableCapacity, . Int_t ; rehash = 0 . ). TMap ctor. See THashTable for a description of the arguments. ; Definition at line 34 of file TMap.cxx. ◆ ~TMap(). TMap::~TMap ; (; ). virtual . TMap dtor. ; Objects are not deleted unless the TMap is the owner (set via SetOwner()). ; Definition at line 44 of file TMap.cxx. Member Function Documentation. ◆ Add() [1/2]. void TMap::Add ; (; TObject * ; key, . TObject * ; value . ). Add a (key,value) pair to the map. ; Definition at line 62 of file TMap.cxx. ◆ Add() [2/2]. void TMap::Add ; (; TObject * ; obj). overridevirtual . This function may not be used (but we need to provide it since it is a pure virtual in TCollection). ; Use Add(key,value) instead. ; Implements TCollection.; Definition at line 54 of file TMap.cxx. ◆ AverageCollisions(). Float_t TMap::AverageCollisions ; (; ); const. Return the ratio of entries vs occupied slots. ; Definition at line 73 of file TMap.cxx. ◆ Capacity(). Int_t TMap::Capacity ; (; ); const. Return number of slots in the hashtable. ; Use GetSize() to get the number of objects stored in the TMap. ; Definition at line 82 of file TMap.cxx. ◆ Class(). static TClass * TMap::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMap::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMap::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 90 of file TMap.h. ◆ Clear(). void TMap::Clear ; (; Option_t * ; option = """"). overridevirtual . Remove all (key,value) pairs from the map. ; The keys/values are deleted depending on the state of key-ownership (SetOwner()) and value-ownership (SetOwnerValue()).; To delete these objects regardless of the ownership state use:; Delete() to delete only keys;; DeleteValues() to delete only values;; DeleteAll() to delete both keys and values. . Implements TCollection.; Definition at line 97 of file TMap.cxx. ◆ Collisions() [1/2]. In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMap.html:18149,hash,hashtable,18149,doc/master/classTMap.html,https://root.cern,https://root.cern/doc/master/classTMap.html,1,['hash'],['hashtable']
Security,"shTableIter& rhs); Bool_tTIterator::operator==(const TIterator& other) const; virtual voidReset(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. THashTableIter(); Int_tNextSlot(). Data Members; private:. Int_tfCursorcurrent position in table; Bool_tfDirectioniteration direction; TListIter*fListCursorcurrent position in collision list; const THashTable*fTablehash table being iterated. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THashTableIter(const THashTable* ht, Bool_t dir = kIterForward); Create a hashtable iterator. By default the iteration direction; is kIterForward. To go backward use kIterBackward. THashTableIter(const THashTableIter& iter); Copy ctor. TIterator & operator=(const TIterator& rhs); Overridden assignment operator. THashTableIter & operator=(const THashTableIter& rhs); Overloaded assignment operator. ~THashTableIter(); Delete hashtable iterator. TObject * Next(); Return next object in hashtable. Returns 0 when no more objects in table. Int_t NextSlot(); Returns index of next slot in table containing list to be iterated. void Reset(); Reset the hashtable iterator. Either to beginning or end, depending on; the initial iteration direction. Bool_t operator!=(const TIterator& aIter) const; This operator compares two TIterator objects. Bool_t operator!=(const THashTableIter& aIter) const; This operator compares two THashTableIter objects. TObject * operator*() const; Return pointer to current object or nullptr. THashTableIter(); { }. const TCollection * GetCollection() const; { return fTable; }. » Author: Fons Rademakers 27/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id$ » Last generated: 2015-05-28 16:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THashTableIter.html:1954,hash,hashtable,1954,root/html534/THashTableIter.html,https://root.cern,https://root.cern/root/html534/THashTableIter.html,1,['hash'],['hashtable']
Security,"shed (Hash()) in hash tables . Classes; class  TArray;  Abstract array base class. More...;  ; class  TArrayC;  Array of chars or bytes (8 bits per element). More...;  ; class  TArrayD;  Array of doubles (64 bits per element). More...;  ; class  TArrayF;  Array of floats (32 bits per element). More...;  ; class  TArrayI;  Array of integers (32 bits per element). More...;  ; class  TArrayL;  Array of longs (32 or 64 bits per element). More...;  ; class  TArrayL64;  Array of long64s (64 bits per element). More...;  ; class  TArrayS;  Array of shorts (16 bits per element). More...;  ; class  TBits;  Container of bits. More...;  ; class  TBtree;  B-tree class. More...;  ; class  TClassTable;  This class registers for all classes their name, id and dictionary function in a hash table. More...;  ; class  TClonesArray;  An array of clone (identical) objects. More...;  ; class  TCollection;  Collection abstract base class. More...;  ; class  THashList;  THashList implements a hybrid collection class consisting of a hash table and a list to store TObject's. More...;  ; class  THashTable;  THashTable implements a hash table to store TObject's. More...;  ; class  TIterator;  Iterator abstract base class. More...;  ; class  TList;  A doubly linked list. More...;  ; class  TMap;  TMap implements an associative array of (key,value) pairs using a THashTable for efficient retrieval (therefore TMap does not conserve the order of the entries). More...;  ; class  TObjArray;  An array of TObjects. More...;  ; class  TObjectTable;  This class registers all instances of TObject and its derived classes in a hash table. More...;  ; class  TOrdCollection;  Ordered collection. More...;  ; class  TRefArray;  An array of references to TObjects. More...;  ; class  TRefTable;  A TRefTable maintains the association between a referenced object and the parent object supporting this referenced object. More...;  ; class  ROOT::TSeq< T >;  A pseudo container class which is a generator of indices. More",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Containers.html:2136,hash,hash,2136,doc/master/group__Containers.html,https://root.cern,https://root.cern/doc/master/group__Containers.html,1,['hash'],['hash']
Security,"should have full path to the item. ;  ; Bool_t CreateItem (const char *fullname, const char *title);  Create item element. ;  ; void CreateOwnTopFolder ();  Create own TFolder structures independent from gROOT This allows to have many independent TRootSniffer instances At the same time such sniffer lost access to all global lists and folders. ;  ; virtual void * FindInHierarchy (const char *path, TClass **cl=nullptr, TDataMember **member=nullptr, Int_t *chld=nullptr);  Search element with specified path Returns pointer on element Optionally one could obtain element class, member description and number of childs. ;  ; TObject * FindTObjectInHierarchy (const char *path);  Search element in hierarchy, derived from TObject. ;  ; const char * GetAutoLoad () const;  return name of configured autoload scripts (or 0) ;  ; const char * GetItemField (const char *fullname, const char *name);  Return field for specified item. ;  ; virtual ULong_t GetItemHash (const char *itemname);  Get hash function for specified item used to detect any changes in the specified object. ;  ; virtual ULong_t GetStreamerInfoHash ();  ; TFolder * GetTopFolder (Bool_t force=kFALSE);  Returns top TFolder instance for the sniffer. ;  ; Bool_t HasRestriction (const char *item_name);  Made fast check if item with specified name is in restriction list If returns true, requires precise check with CheckRestriction() method. ;  ; TClass * IsA () const override;  ; Bool_t IsReadOnly () const;  Returns readonly mode. ;  ; Bool_t IsScanGlobalDir () const;  Returns true when sniffer allowed to scan global directories. ;  ; virtual Bool_t IsStreamerInfoItem (const char *);  ; Bool_t Produce (const std::string &path, const std::string &file, const std::string &options, std::string &res);  Method produce different kind of data out of object. ;  ; Bool_t RegisterCommand (const char *cmdname, const char *method, const char *icon);  Register command which can be executed from web interface. ;  ; Bool_t RegisterObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootSniffer.html:2210,hash,hash,2210,doc/master/classTRootSniffer.html,https://root.cern,https://root.cern/doc/master/classTRootSniffer.html,1,['hash'],['hash']
Security,"signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTQObject::EmitVA<>(const char* signal_name, Int_t); virtual voidTObject::Error(const char* method, const char* msgfmt) const; char*TClass::EscapeChars(const char* text) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); TVirtualStreamerInfo*TClass::FindConversionStreamerInfo(const char* onfile_classname, UInt_t checksum) const; TVirtualStreamerInfo*TClass::FindConversionStreamerInfo(const TClass* onfile_cl, UInt_t checksum) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TVirtualStreamerInfo*TClass::FindStreamerInfo(UInt_t checksum) const; TVirtualStreamerInfo*TClass::FindStreamerInfoAbstractEmulated(UInt_t checksum) const; TClass*TClass::GetActualClass(const void* object) const; TDictAttributeMap*TDictionary::GetAttributeMap() const; TClass*TClass::GetBaseClass(const char* classname); TClass*TClass::GetBaseClass(const TClass* base); Int_tTClass::GetBaseClassOffset(const TClass* toBase, void* address = 0, bool isDerivedObject = true); TClass*TClass::GetBaseDataMember(const char* datamember); UInt_tTClass::GetCheckSum(TClass::ECheckSum code = kCurrentCheckSum) const; UInt_tTClass::GetCheckSum(Bool_t& isvalid) const; UInt_tTClass::GetCheckSum(TClass::ECheckSum code, Bool_t& isvalid) const; static Bool_tTClass::GetClass(TDictionary::DeclId_t id, vector<TClass*>& classes); static TClass*TClass::GetClass(const char* name, B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQClass.html:6494,checksum,checksum,6494,root/html602/TQClass.html,https://root.cern,https://root.cern/root/html602/TQClass.html,2,['checksum'],['checksum']
Security,"signed maxConcurrency=0);  Factory function returning a shared pointer to the instance of the global RTaskArenaWrapper. ;  ; TROOT * GetROOT1 ();  ; TROOT * GetROOT2 ();  ; static Func_t GetSymInLibImt (const char *funcname);  ; template<typename T , typename F > ; auto GetTheRightOp (T(F::*opPtr)(const T *, const double *)) -> decltype(opPtr);  Internal class used by TF1 to get the right operator() signature from a Functor with several ones. ;  ; template<typename T , typename F > ; auto GetTheRightOp (T(F::*opPtr)(T *, double *)) -> decltype(opPtr);  ; static TVersionCheck gVersionCheck (ROOT_VERSION_CODE);  ; template<typename > ; constexpr bool hasBeginEnd (...);  ; template<typename T > ; constexpr auto hasBeginEnd (int) -> decltype(std::begin(std::declval< T >()), std::end(std::declval< T >()), true);  ; Bool_t HasConsistentHashMember (const char *clName);  Return true is the Hash/RecursiveRemove setup is consistent, i.e. ;  ; Bool_t HasConsistentHashMember (TClass &clRef);  Return true is the Hash/RecursiveRemove setup is consistent, i.e. ;  ; static Bool_t & IsImplicitMTEnabledImpl ();  Keeps track of the status of ImplicitMT w/o resorting to the load of libImt. ;  ; Bool_t IsParBranchProcessingEnabled ();  Returns true if parallel branch processing is enabled. ;  ; int LogicalCPUBandwidthControl ();  Returns the available number of logical cores. ;  ; void MinimalErrorHandler (Int_t level, Bool_t abort_bool, const char *location, const char *msg);  A very simple error handler that is usually replaced by the TROOT default error handler. ;  ; void NotifyDirected (Detail::TBranchProxy *x);  ; std::ostream & operator<< (std::ostream &os, const RConcurrentHashColl::HashValue &h);  ; bool operator== (const RConcurrentHashColl::HashValue &lhs, const RConcurrentHashColl::HashValue &rhs);  ; template<typename T > ; static T ParallelReduceHelper (const std::vector< T > &objs, const std::function< T(T a, T b)> &redfunc);  A helper function to implement the TThreadExec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Internal.html:15295,Hash,Hash,15295,doc/master/namespaceROOT_1_1Internal.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Internal.html,2,['Hash'],['Hash']
Security,"sing on the data members,; and for the collection proxies recursiong on the elements of the; collection and iterating over the element's data members. Bool_t IsFolder(void* obj) const; Return kTRUE if the class has elements. void ReplaceWith(TClass* newcl) const; Inform the other objects to replace this object by the new TClass (newcl). void ResetClassInfo(Long_t tagnum); Make sure that the current ClassInfo is up to date. void ResetClassInfo(); Make sure that the current ClassInfo is up to date. void ResetCaches(); To clean out all caches. void ResetMenuList(); Resets the menu list to it's standard value. void ls(Option_t* opt = """") const; The ls function lists the contents of a class on stdout. Ls output; is typically much less verbose then Dump().; If options contains 'streamerinfo', run ls on the list of streamerInfos; and the list of conversion streamerInfos. void MakeCustomMenuList(); Makes a customizable version of the popup menu list, i.e. makes a list; of TClassMenuItem objects of methods accessible by context menu.; The standard (and different) way consists in having just one element; in this list, corresponding to the whole standard list.; Once the customizable version is done, one can remove or add elements. void Move(void* arenaFrom, void* arenaTo) const; Register the fact that an object was moved from the memory location; 'arenaFrom' to the memory location 'arenaTo'. TList * GetMenuList() const; Return the list of menu items associated with the class. TListOfFunctions * GetMethodList(); Return (create an empty one if needed) the list of functions.; The major difference with GetListOfMethod is that this returns; the internal type of fMethod and thus can not be made public.; It also never 'loads' the content of the list. TMethod * GetMethodAny(const char* method); Return pointer to method without looking at parameters.; Does not look in (possible) base classes.; Has the side effect of loading all the TMethod object in the list; of the class. TMethod * Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClass.html:41797,access,accessible,41797,root/html602/TClass.html,https://root.cern,https://root.cern/root/html602/TClass.html,2,['access'],['accessible']
Security,"sing seed from /dev/urandom (or current time if /dev/urandom not available). ;  ; static void MergeHostAuthList (TList *Std, TList *New, Option_t *Opt="""");  Tool for updating fgAuthInfo or fgProofAuthInfo 'nin' contains list of last input information through (re)reading of a rootauthrc-alike file. ;  ; static char * PromptPasswd (const char *prompt=""Password: "");  Static method to prompt for the user's passwd to be used for authentication to rootd or proofd. ;  ; static char * PromptUser (const char *remote);  Static method to prompt for the user name to be used for authentication to rootd or proofd. ;  ; static Int_t ReadRootAuthrc ();  Read authentication directives from $ROOTAUTHRC, $HOME/.rootauthrc or <Root_etc_dir>/system.rootauthrc and create related THostAuth objects. ;  ; static void RemoveHostAuth (THostAuth *ha, Option_t *opt="""");  Remove THostAuth instance from the list. ;  ; static Int_t SecureRecv (TSocket *Socket, Int_t dec, Int_t KeyType, char **Out);  Receive str from sock and decode it using key indicated by key type Return number of received bytes or -1 in case of error. ;  ; static Int_t SecureSend (TSocket *Socket, Int_t enc, Int_t KeyType, const char *In);  Encode null terminated str using the session private key indicated by enc and sends it over the network Returns number of bytes sent, or -1 in case of error. ;  ; static Int_t SendRSAPublicKey (TSocket *Socket, Int_t key=0);  Receives server RSA Public key Sends local RSA public key encoded. ;  ; static void SetAuthReUse (Bool_t authreuse);  Set global AuthReUse flag. ;  ; static void SetDefaultRSAKeyType (Int_t key);  Static method setting the default type of RSA key. ;  ; static void SetDefaultUser (const char *defaultuser);  Set default user name. ;  ; static void SetGlobalExpDate (TDatime expdate);  Set default expiring date for new validity contexts. ;  ; static void SetGlobalPasswd (const char *passwd);  Set global passwd to be used for authentication to rootd or proofd. ;  ; static voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAuthenticate.html:14050,Secur,SecureRecv,14050,doc/master/classTAuthenticate.html,https://root.cern,https://root.cern/doc/master/classTAuthenticate.html,1,['Secur'],['SecureRecv']
Security,"sing successive calls to DoUnfold at various tau. ;  ; void SetBias (const TH1 *bias);  set bias vector ;  ; void SetConstraint (EConstraint constraint);  set type of area constraint ;  ; void SetEpsMatrix (Double_t eps);  set numerical accuracy for Eigenvalue analysis when inverting matrices with rank problems ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldDensity.html:23118,Hash,Hash,23118,doc/master/classTUnfoldDensity.html,https://root.cern,https://root.cern/doc/master/classTUnfoldDensity.html,4,['Hash'],['Hash']
Security,"sing the defined architecture ;  . Private Attributes; TString fArchitectureString;  The string defining the architecture: CPU or GPU. ;  ; size_t fBatchDepth;  The depth of the batch used to train the deep net. ;  ; size_t fBatchHeight;  The height of the batch used to train the deep net. ;  ; TString fBatchLayoutString;  The string defining the layout of the batch. ;  ; size_t fBatchWidth;  The width of the batch used to train the deep net. ;  ; bool fBuildNet;  Flag to control whether to build fNet, the stored network used for the evaluation. ;  ; TString fErrorStrategy;  The string defining the error strategy for training. ;  ; TString fInputLayoutString;  The string defining the layout of the input. ;  ; std::vector< size_t > fInputShape;  Contains the batch size (no. ;  ; TString fLayoutString;  The string defining the layout of the deep net. ;  ; DNN::ELossFunction fLossFunction;  The loss function. ;  ; std::unique_ptr< DeepNetImpl_t > fNet;  ; TString fNumValidationString;  The string defining the number (or percentage) of training data used for validation. ;  ; DNN::EOutputFunction fOutputFunction;  The output function for making the predictions. ;  ; size_t fRandomSeed;  The random seed used to initialize the weights and shuffling batches (default is zero) ;  ; bool fResume;  ; KeyValueVector_t fSettings;  Map for the training strategy. ;  ; std::vector< TTrainingSettings > fTrainingSettings;  The vector defining each training strategy. ;  ; TString fTrainingStrategyString;  The string defining the training strategy. ;  ; DNN::EInitialization fWeightInitialization;  The initialization method. ;  ; TString fWeightInitializationString;  The string defining the weight initialization method. ;  ; TensorImpl_t fXInput;  ; HostBufferImpl_t fXInputBuffer;  ; std::unique_ptr< MatrixImpl_t > fYHat;  . Additional Inherited Members;  Public Types inherited from TMVA::MethodBase; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; en",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodDL.html:32299,validat,validation,32299,doc/master/classTMVA_1_1MethodDL.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodDL.html,1,['validat'],['validation']
Security,"sion are allowed. Only non-null parameters are filled by this function. Returns kTRUE in case of success. . Definition at line 842 of file TDataSetManager.cxx. ◆ PrintDataSet(). void TDataSetManager::PrintDataSet ; (; TFileCollection * ; fc, . Int_t ; popt = 0 . ). protected . Formatted printout of the content of TFileCollection 'fc'. ; Options in the form popt = u * 10 + f f 0 => header only, 1 => header + files when printing files u 0 => print file name only, 1 => print full URL ; Definition at line 1043 of file TDataSetManager.cxx. ◆ PrintUsedSpace(). void TDataSetManager::PrintUsedSpace ; (; ). protected . Prints the quota. ; Definition at line 638 of file TDataSetManager.cxx. ◆ ProcessFile(). void TDataSetManager::ProcessFile ; (; TFileInfo * ; fileInfo, . Int_t ; sopt, . Bool_t ; checkstg, . Bool_t ; doall, . TFileStager * ; stager, . Bool_t ; createStager, . const char * ; stageopts, . Bool_t ; dbg, . Bool_t & ; changed, . Bool_t & ; opened . ). static . Locate, stage, or fully validate file ""fileInfo"". ; Definition at line 1560 of file TDataSetManager.cxx. ◆ ReadGroupConfig(). Bool_t TDataSetManager::ReadGroupConfig ; (; const char * ; cf = 0). protected . Read group config file 'cf'. ; If cf == 0 re-read, if changed, the file pointed by fGroupConfigFile .; expects the following directives: Group definition: group <groupname> <user>+ disk quota property <groupname> diskquota <quota in GB> average filesize (to be used when the file size is not available) averagefilesize <average size>{G,g,M,m,K,k} ; Definition at line 206 of file TDataSetManager.cxx. ◆ RegisterDataSet(). Int_t TDataSetManager::RegisterDataSet ; (; const char * ; uri, . TFileCollection * ; dataSet, . const char * ; opt . ). virtual . Register a dataset, perfoming quota checkings, if needed. ; Returns 0 on success, -1 on failure ; Reimplemented in TDataSetManagerFile.; Definition at line 761 of file TDataSetManager.cxx. ◆ RemoveDataSet(). Bool_t TDataSetManager::RemoveDataSet ; (; const char * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDataSetManager.html:30357,validat,validate,30357,doc/master/classTDataSetManager.html,https://root.cern,https://root.cern/doc/master/classTDataSetManager.html,1,['validat'],['validate']
Security,"sion() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetIndex() const; virtual TGeoMatrix*GetMatrix() const; TGeoMedium*TGeoNode::GetMedium() const; TGeoVolume*TGeoNode::GetMotherVolume() const; virtual const char*TNamed::GetName() const; Int_tTGeoNode::GetNdaughters() const; TObjArray*TGeoNode::GetNodes() const; Int_tTGeoNode::GetNumber() const; virtual char*TGeoNode::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Double_tGetOffset() const; virtual Int_tTGeoNode::GetOptimalVoxels() const; virtual Option_t*TObject::GetOption() const; Int_t*TGeoNode::GetOverlaps(Int_t& novlp) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoExtension*TGeoNode::GetUserExtension() const; TGeoVolume*TGeoNode::GetVolume() const; TGeoExtension*TGeoNode::GrabFWExtension() const; TGeoExtension*TGeoNode::GrabUserExtension() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTGeoNode::InspectNode() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoAtt::IsActive() const; Bool_tTGeoAtt::IsActiveDaughters() const; Bool_tTGeoNode::IsCloned() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTGeoNode::IsFolder() const; Bool_tTGeoNode::IsOffset() const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoNode::IsOnScreen() constMENU ; Bool_tTGeoNode::IsOverlapping() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoNode::IsVirtual() const; Bool_tTGeoAtt::IsVisBranch() const; Bool_tTGeoAtt::IsVisContainers() const; Bool_tTGeoNode::IsVisDaughters() const; Bool_tTGeoNode::IsVisible() const; Bool_tTGeoAtt::IsVisLeaves() const; Bool_tTGeoAtt::IsVisOnly",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoNodeOffset.html:6425,Hash,Hash,6425,root/html534/TGeoNodeOffset.html,https://root.cern,https://root.cern/root/html534/TGeoNodeOffset.html,3,['Hash'],['Hash']
Security,"sionTree::EventConstList* validationSample) const; run the validation sample through the (pruned) tree and fill in the nodes; the variables NSValidation and NBValidadtion (i.e. how many of the Signal; and Background events from the validation sample. This is then later used; when asking for the ""tree quality"" .. Double_t TestPrunedTreeQuality(const TMVA::DecisionTreeNode* dt = __null, Int_t mode = 0) const; return the misclassification rate of a pruned tree; a ""pruned tree"" may have set the variable ""IsTerminal"" to ""arbitrary"" at; any node, hence this tree quality testing will stop there, hence test; the pruned tree (while the full tree is still in place for normal/later use). void CheckEventWithPrunedTree(const TMVA::Event* ) const; pass a single validation event throught a pruned decision tree; on the way down the tree, fill in all the ""intermediate"" information; that would normally be there from training. Double_t GetSumWeights(const TMVA::DecisionTree::EventConstList* validationSample) const; calculate the normalization factor for a pruning validation sample. UInt_t CountLeafNodes(TMVA::Node* n = __null); return the number of terminal nodes in the sub-tree below Node n. void DescendTree(TMVA::Node* n = __null); descend a tree to find all its leaf nodes. void PruneNode(TMVA::DecisionTreeNode* node); prune away the subtree below the node. void PruneNodeInPlace(TMVA::DecisionTreeNode* node); prune a node temporaily (without actually deleting its decendants; which allows testing the pruned tree quality for many different; pruning stages without ""touching"" the tree. TMVA::Node* GetNode(ULong_t sequence, UInt_t depth); retrieve node from the tree. Its position (up to a maximal tree depth of 64); is coded as a sequence of left-right moves starting from the root, coded as; 0-1 bit patterns stored in the ""long-integer"" (i.e. 0:left ; 1:right. void GetRandomisedVariables(Bool_t* useVariable, UInt_t* variableMap, UInt_t& nVars). Double_t TrainNodeFast(const TMVA::DecisionT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__DecisionTree.html:12333,validat,validationSample,12333,root/html602/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html602/TMVA__DecisionTree.html,4,['validat'],"['validation', 'validationSample']"
Security,"sion_t cversion, const type_info* info, TVirtualIsAProxy* isa, ShowMembersFunc_t showmember, const char* dfil, const char* ifil, Int_t dl, Int_t il, Bool_t silent); Initialize a TClass object. This object contains the full dictionary; of a class. It has list to baseclasses, datamembers and methods. TClass(const TClass& tc); copy constructor. TClass& operator=(const TClass& ); assignement operator. ~TClass(); TClass dtor. Deletes all list that might have been created. Int_t ReadRules(); Read the class.rules files from the default location:.; $ROOTSYS/etc/class.rules (or ROOTETCDIR/class.rules). Int_t ReadRules(const char* filename); Read a class.rules file which contains one rule per line with comment; starting with a #; Returns the number of rules loaded.; Returns -1 in case of error. Bool_t AddRule(const char* rule); Add a schema evolution customization rule.; The syntax of the rule can be either the short form:; [type=Read] classname membername [attributes=... ] [version=[...] ] [checksum=[...] ] [oldtype=...] [code={...}]; or the long form; [type=Read] sourceClass=classname [targetclass=newClassname] [ source=""type membername; [type2 membername2]"" ]; [target=""membername3;membername4""] [attributes=... ] [version=...] [checksum=...] [code={...}|functionname]. For example to set HepMC::GenVertex::m_event to _not_ owned the object it is pointing to:; HepMC::GenVertex m_event attributes=NotOwner. Semantic of the tags:; type : the type of the rule, valid values: Read, ReadRaw, Write, WriteRaw, the default is 'Read'.; sourceClass : the name of the class as it is on the rule file; targetClass : the name of the class as it is in the current code ; defaults to the value of sourceClass; source : the types and names of the data members from the class on file that are needed, the list is separated by semi-colons ';'; oldtype: in the short form only, indicates the type on disk of the data member.; target : the names of the data members updated by this rule, the list is separat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TClass.html:19362,checksum,checksum,19362,root/html528/TClass.html,https://root.cern,https://root.cern/root/html528/TClass.html,4,['checksum'],['checksum']
Security,"sis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : standard deviation printed; R : standard deviation and standard deviation error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed. For example, to print only name of histogram and number of entries do:. gStyle->SetOptStat(""ne"");. To print only the name of the histogram do:. gStyle->SetOptStat(""n"");. The default value is:. gStyle->SetOptStat(""nemr"");. When a histogram is painted, a TPaveStats object is created and added; to the list of functions of the histogram. If a TPaveStats object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters.; Once a histogram is painted, the statistics box can be accessed using; h->FindObject(""stats""). In the command line it is enough to do:. Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""). because after h->Draw() the histogram is automatically painted. But; in a script file the painting should be forced using gPad->Update(); in order to make sure the statistics box is created:. h->Draw();; gPad->Update();; TPaveStats *st = (TPaveStats*)h->FindObject(""stats"");. Without gPad->Update() the line h->FindObject(""stats""); returns a null pointer.; When a histogram is drawn with the option ""SAME"", the statistics box; is not drawn. To force the statistics box drawing with the option; ""SAME"", the option ""SAMES"" must be used.; If the new statistics box hides the previous statistics box, one can change; its position with these lines (""h"" being the pointer to the histogram):. Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""); Root > st->SetX1NDC(newx1); //new x start position; Root > st->SetX2NDC(newx2); //ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/THistPainter.html:17811,access,accessed,17811,root/html604/THistPainter.html,https://root.cern,https://root.cern/root/html604/THistPainter.html,1,['access'],['accessed']
Security,"sis of identity of; the two histograms is rejected for 0.05 significant level. The behavior of; the normalized residuals plot (see Fig. 2c) and the normal Q-Q plot (see; Fig. 2d) of residuals are not regular and we can identify the outlier or; bin with a big influence on . References:. [1] Pearson, K., 1904. On the Theory of Contingency and Its Relation to; Association and Normal Correlation. Drapers' Co. Memoirs, Biometric; Series No. 1, London.; [2] Gagunashvili, N., 2006. test for comparison; of weighted and unweighted histograms. Statistical Problems in Particle; Physics, Astrophysics and Cosmology, Proceedings of PHYSTAT05,; Oxford, UK, 12-15 September 2005, Imperial College Press, London, 43-44.; Gagunashvili,N., Comparison of weighted and unweighted histograms,; arXiv:physics/0605123, 2006.; [3] Cramer, H., 1946. Mathematical methods of statistics.; Princeton University Press, Princeton.; [4] Haberman, S.J., 1973. The analysis of residuals in cross-classified tables.; Biometrics 29, 205-220.; [5] Lewontin, R.C. and Felsenstein, J., 1965. The robustness of homogeneity; test in 2xN tables. Biometrics 21, 19-33.; [6] Seber, G.A.F., Lee, A.J., 2003, Linear Regression Analysis.; John Wiley & Sons Inc., New York. Double_t Chi2TestX(const TH1* h2, Double_t& chi2, Int_t& ndf, Int_t& igood, Option_t* option = ""UU"", Double_t* res = 0) const; The computation routine of the Chisquare test. For the method description,; see Chi2Test() function.; Returns p-value; parameters:; - h2-second histogram; - option:; ""UU"" = experiment experiment comparison (unweighted-unweighted); ""UW"" = experiment MC comparison (unweighted-weighted). Note that the first; histogram should be unweighted; ""WW"" = MC MC comparison (weighted-weighted). ""NORM"" = if one or both histograms is scaled. ""OF"" = overflows included; ""UF"" = underflows included; by default underflows and overflows are not included. - igood:; igood=0 - no problems; For unweighted unweighted comparison; igood=1'There is a bin in the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1.html:55404,Biometric,Biometrics,55404,root/html532/TH1.html,https://root.cern,https://root.cern/root/html532/TH1.html,4,['Biometric'],['Biometrics']
Security,"sis of identity of; the two histograms is rejected for 0.05 significant level. The behavior of; the normalized residuals plot (see Fig. 2c) and the normal Q-Q plot (see; Fig. 2d) of residuals are not regular and we can identify the outlier or; bin with a big influence on . References:. [1] Pearson, K., 1904. On the Theory of Contingency and Its Relation to; Association and Normal Correlation. Drapers' Co. Memoirs, Biometric; Series No. 1, London.; [2] Gagunashvili, N., 2006. test for comparison; of weighted and unweighted histograms. Statistical Problems in Particle; Physics, Astrophysics and Cosmology, Proceedings of PHYSTAT05,; Oxford, UK, 12-15 September 2005, Imperial College Press, London, 43-44.; Gagunashvili,N., Comparison of weighted and unweighted histograms,; arXiv:physics/0605123, 2006.; [3] Cramer, H., 1946. Mathematical methods of statistics.; Princeton University Press, Princeton.; [4] Haberman, S.J., 1973. The analysis of residuals in cross-classified tables.; Biometrics 29, 205-220.; [5] Lewontin, R.C. and Felsenstein, J., 1965. The robustness of homogeneity; test in 2xN tables. Biometrics 21, 19-33.; [6] Seber, G.A.F., Lee, A.J., 2003, Linear Regression Analysis.; John Wiley & Sons Inc., New York. Double_t Chi2TestX(const TH1* h2, Double_t& chi2, Int_t& ndf, Int_t& igood, Option_t* option = ""UU"", Double_t* res = 0) const; The computation routine of the Chisquare test. For the method description,; see Chi2Test() function.; Returns p-value; parameters:; - h2-second histogram; - option:; ""UU"" = experiment experiment comparison (unweighted-unweighted); ""UW"" = experiment MC comparison (unweighted-weighted). Note that the first; histogram should be unweighted; ""WW"" = MC MC comparison (weighted-weighted). ""NORM"" = if one or both histograms is scaled. ""OF"" = overflows included; ""UF"" = underflows included; by default underflows and overlows are not included. - igood:; igood=0 - no problems; For unweighted unweighted comparison; igood=1'There is a bin in the 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1.html:53912,Biometric,Biometrics,53912,root/html528/TH1.html,https://root.cern,https://root.cern/root/html528/TH1.html,2,['Biometric'],['Biometrics']
Security,"sisType(TMVA::Types::EAnalysisType type); { fAnalysisType = type; }. Types::EAnalysisType GetAnalysisType() const; { return fAnalysisType; }. Bool_t DoRegression() const; { return fAnalysisType == Types::kRegression; }. Bool_t DoMulticlass() const; { return fAnalysisType == Types::kMulticlass; }. void DisableWriting(Bool_t setter); setter method for suppressing writing to XML and writing of standalone classes. { fDisableWriting = setter; }. const TString& GetWeightFileDir() const; { return fFileDir; }. Bool_t IsNormalised() const; are input variables normalised ?. { return fNormalise; }. void SetNormalised(Bool_t norm); { fNormalise = norm; }. Bool_t Verbose() const; set number of input variables (only used by MethodCuts, could perhaps be removed); void SetNvar( Int_t n ) { fNvar = n; }; verbose and help flags. { return fVerbose; }. Bool_t Help() const; { return fHelp; }. const TString& GetInternalVarName(Int_t ivar) const; ---------- protected event and tree accessors -----------------------------; names of input variables (if the original names are expressions, they are; transformed into regexps). { return (*fInputVars)[ivar]; }. const TString& GetOriginalVarName(Int_t ivar) const; { return DataInfo().GetVariableInfo(ivar).GetExpression(); }. Bool_t HasTrainingTree() const; { return Data()->GetNTrainingEvents() != 0; }. void MakeClassSpecific(ostream& , const TString& = """") const; ---------- protected auxiliary methods ------------------------------------; make ROOT-independent C++ class for classifier response (classifier-specific implementation). {}. void MakeClassSpecificHeader(ostream& , const TString& = """") const; header and auxiliary classes. {}. Bool_t TxtWeightsOnly() const; if TRUE, write weights only to text files. { return kTRUE; }. Bool_t IsConstructedFromWeightFile() const; access to event information that needs method-specific information. { return fConstructedFromWeightFile; }. ECutOrientation GetCutOrientation() const; { return fCutOrientation; }. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBase.html:36807,access,accessors,36807,root/html534/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBase.html,3,['access'],['accessors']
Security,"sisType(TMVA::Types::EAnalysisType type); { fAnalysisType = type; }. Types::EAnalysisType GetAnalysisType() const; { return fAnalysisType; }. Bool_t DoRegression() const; { return fAnalysisType == Types::kRegression; }. Bool_t DoMulticlass() const; { return fAnalysisType == Types::kMulticlass; }. void DisableWriting(Bool_t setter); setter method for suppressing writing to XML and writing of standalone classes. { fDisableWriting = setter; }. const TString& GetWeightFileDir() const; { return fFileDir; }. Bool_t IsNormalised() const; are input variables normalised ?. { return fNormalise; }. void SetNormalised(Bool_t norm); { fNormalise = norm; }. Bool_t Verbose() const; set number of input variables (only used by MethodCuts, could perhaps be removed); void SetNvar( Int_t n ) { fNvar = n; }; verbose and help flags. { return fVerbose; }. Bool_t Help() const; { return fHelp; }. const TString& GetInternalVarName(Int_t ivar) const; ---------- protected event and tree accessors -----------------------------; names of input variables (if the original names are expressions, they are; transformed into regexps). { return (*fInputVars)[ivar]; }. const TString& GetOriginalVarName(Int_t ivar) const; { return DataInfo().GetVariableInfo(ivar).GetExpression(); }. Bool_t HasTrainingTree() const; { return Data()->GetNTrainingEvents() != 0; }. void MakeClassSpecific(ostream& , const TString& = """") const; ---------- protected auxiliary methods ------------------------------------; make ROOT-independent C++ class for classifier response (classifier-specific implementation). {}. void MakeClassSpecificHeader(ostream& , const TString& = """") const; header and auxiliary classes. {}. Bool_t TxtWeightsOnly() const; if TRUE, write weights only to text files. { return kTRUE; }. Float_t GetTWeight(const TMVA::Event* ev) const; access to event information that needs method-specific information. Bool_t IsConstructedFromWeightFile() const; { return fConstructedFromWeightFile; }. void SetCurrentEvent(Lo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodBase.html:34511,access,accessors,34511,root/html528/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodBase.html,3,['access'],['accessors']
Security,"siteFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidIncreaseNumber(TGNumberFormat::EStepSize step = kNSSSmall, Int_t sign = 1, Bool_t logstep = kFALSE); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tIsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGNumberEntry.html:11786,Hash,Hash,11786,root/html528/TGNumberEntry.html,https://root.cern,https://root.cern/root/html528/TGNumberEntry.html,6,['Hash'],['Hash']
Security,"siteFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInsertEntry(TGString* s, Int_t id, Int_t afterID); virtual voidInsertEntry(const char* s, Int_t id, Int_t afterID); virtual voidInsertEntry(TGLBEntry* lbe, TGLayoutHints* lhints, Int_t afterID); virtual voidTGFrame::Inspect() const; virtual voidIntegralHeight(Bool_t mode); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGListBox.html:10165,Hash,Hash,10165,root/html528/TGListBox.html,https://root.cern,https://root.cern/root/html528/TGListBox.html,6,['Hash'],['Hash']
Security,"siteFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; Bool_tIsEnabled(Int_t tabIndex) const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTab.html:9761,Hash,Hash,9761,root/html528/TGTab.html,https://root.cern,https://root.cern/root/html528/TGTab.html,6,['Hash'],['Hash']
Security,"siteFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGDoubleValuator.html:8991,Hash,Hash,8991,root/html528/TEveGDoubleValuator.html,https://root.cern,https://root.cern/root/html528/TEveGDoubleValuator.html,46,['Hash'],['Hash']
Security,"siteFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; voidHideContainer(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; Bool_tIsFixedSize() const; virtual Bool_tTObject::IsFolder(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGDockableFrame.html:9204,Hash,Hash,9204,root/html528/TGDockableFrame.html,https://root.cern,https://root.cern/root/html528/TGDockableFrame.html,6,['Hash'],['Hash']
Security,"siteFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; voidHideDaughters(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPconSection.html:8730,Hash,Hash,8730,root/html528/TGeoPconSection.html,https://root.cern,https://root.cern/root/html528/TGeoPconSection.html,6,['Hash'],['Hash']
Security,"sition) const; Double_tGetMax() const; Double_tGetMean() const; Double_tGetMin() const; Int_tGetNbins() const; Double_tGetRndm(TRandom3&) const; Double_tGetStepSize() const; Double_tGetWidth() const; TMVA::IntervalInterval(const TMVA::Interval& other); TMVA::IntervalInterval(Double_t min, Double_t max, Int_t nbins = 0); virtual TClass*IsA() const; TMVA::Interval&operator=(const TMVA::Interval&); voidSetMax(Double_t m); voidSetMin(Double_t m); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). private:. TMVA::MsgLogger&Log() const. Data Members; private:. Double_tfMaxthe constraints of the Interval; Double_tfMin; Int_tfNbinswhen >0 : number of bins (discrete interval); when =0 continuous interval; static TMVA::MsgLogger*fgLoggermessage logger. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Interval(Double_t min, Double_t max, Int_t nbins = 0). Interval(const TMVA::Interval& other). ~Interval(); destructor. Double_t GetElement(Int_t position) const; calculates the value of the ""number"" bin in a discrete interval.; Parameters:; Double_t position. Double_t GetStepSize() const; retuns the step size between the numbers of a ""discrete Interval"". Double_t GetRndm(TRandom3& ) const; get uniformely distributed number within interval. Double_t GetMin() const; accessors. { return fMin; }. Double_t GetMax() const; { return fMax; }. Double_t GetWidth() const; { return fMax - fMin; }. Int_t GetNbins() const; { return fNbins; }. Double_t GetMean() const; { return (fMax + fMin)/2; }. void SetMax(Double_t m); { fMax = m; }. void SetMin(Double_t m); { fMin = m; }. » Author: Peter Speckmayer » Copyright (c) 2005: *; » Last changed: root/tmva $Id: Interval.h 37399 2010-12-08 15:22:07Z evt $ » Last generated: 2010-12-08 16:56; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__Interval.html:2650,access,accessors,2650,root/html528/TMVA__Interval.html,https://root.cern,https://root.cern/root/html528/TMVA__Interval.html,1,['access'],['accessors']
Security,sitive popup menu; TRootControlBar ROOT native GUI implementation of TControlBar; TRootDialog Native GUI method argument prompt dialog box; TRootEmbeddedCanvas A ROOT TCanvas that can be embedded in a TGFrame; TRootGuiBuilder ROOT GUI Builder; TRootGuiFactory Factory for ROOT GUI components; TRootHelpDialog Dialog to display help text; TRootSecContext Class providing host specific authentication information; TRotMatrix Rotation Matrix for 3-D geometry objects; TRotation Rotations of TVector3 objects; TRuby Ruby/ROOT interface; TSAXParser SAX Parser; TSPHE SPHE shape; TSPlot class to disentangle signal from background; TSQLColumnInfo Summury information about column from SQL table; TSQLMonitoringWriter Sending monitoring data to a SQL DB; TSQLResult SQL query result; TSQLRow One row of an SQL query result; TSQLServer Connection to SQL server; TSQLStatement SQL statement; TSQLTableInfo Summury information about SQL table; TSVG SVG driver; TSecContext Class providing host specific authentication information; TSecContextCleanup Update the remote authentication table; TSelector A utility class for tree and object processing; TSelectorCint A utility class for tree and object processing (interpreted version); TSelectorDraw A specialized TSelector for TTree::Draw; TSelectorEntries A specialized TSelector for TTree::GetEntries(selection); TSelectorList Special TList used in the TSelector; TSelectorScalar Mergable scalar; TSemaphore Counting semaphore class; TSeqCollection Sequenceable collection ABC; TServerSocket This class implements server sockets; TSessionDescription Session description; TSessionFrame Session frame; TSessionInputFrame Input frame; TSessionLogView PROOF progress dialog; TSessionOutputFrame Output frame; TSessionQueryFrame Query frame; TSessionServerFrame Server frame; TSessionViewer Session Viewer; TShape Basic shape; TSignalHandler Signal event handler; TSlave PROOF slave server; TSlaveInfo basic info on slave; TSlaveLite PROOF lite worker server; TSlider,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ClassIndex.html:117866,authenticat,authentication,117866,root/html526/ClassIndex.html,https://root.cern,https://root.cern/root/html526/ClassIndex.html,1,['authenticat'],['authentication']
Security,"sitive popup menus.Definition TContextMenu.h:44; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TEnvThe TEnv class reads config files, by default named .rootrc.Definition TEnv.h:124; TFileHandlerDefinition TSysEvtHandler.h:65; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TGX11This class is the basic interface to the X11 (Xlib) graphics system.Definition TGX11.h:80; TGaxisThe axis painter class.Definition TGaxis.h:24; TGeometryTGeometry description.Definition TGeometry.h:39; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; THashListTHashList implements a hybrid collection class consisting of a hash table and a list to store TObject...Definition THashList.h:34; THashTableTHashTable implements a hash table to store TObject's.Definition THashTable.h:35; THtmlLegacy ROOT documentation system.Definition THtml.h:40; TKeyBook space in a file, create I/O buffers, to fill them, (un)compress them.Definition TKey.h:28; TLineUse the TLine constructor to create a simple line.Definition TLine.h:22; TLinkSpecial TText object used to show hyperlinks.Definition TLink.h:17; TListA doubly linked list.Definition TList.h:38; TMethodArgEach ROOT method (see TMethod) has a linked list of its arguments.Definition TMethodArg.h:36; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; TMinuitDefinition TMinuit.h:27; TObjectTableThis class registers all instances of TObject and its derived classes in a hash table.Definition TObjectTable.h:35; TObjectMother of all ROOT objects.Definition TObject.h:41; TOrdCollectionOrdered collection.Definition TOrdCollection.h:32; TPadThe most important graphics class in the ROOT system.Definition TPad.h:28; TPaveLabelA Pave (s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObjectTable.html:4895,hash,hash,4895,doc/master/classTObjectTable.html,https://root.cern,https://root.cern/doc/master/classTObjectTable.html,1,['hash'],['hash']
Security,"siveRemove; 496 tlk->fNext.reset();; 497 tlk->fPrev.reset();; 498 fCache = tlk;; 499 ; 500 // delete only heap objects; 501 auto obj = tlk->GetObject();; 502 if (obj && ROOT::Detail::HasBeenDeleted(obj)); 503 Error(""Delete"", ""A list is accessing an object (%p) already deleted (list name = %s)"",; 504 obj, GetName());; 505 else if (obj && obj->IsOnHeap()); 506 TCollection::GarbageCollect(obj);; 507 else if (obj && obj->IsA()->GetDirectoryAutoAdd()); 508 removeDirectory.Add(obj);; 509 ; 510 // delete tlk;; 511 }; 512 ; 513 fFirst.reset();; 514 fLast.reset();; 515 fCache.reset();; 516 fSize = 0;; 517 ; 518 } else {; 519 ; 520 auto first = fFirst; //pointer to first entry in linked list; 521 fFirst.reset();; 522 fLast.reset();; 523 fCache.reset();; 524 fSize = 0;; 525 while (first) {; 526 auto tlk = first;; 527 first = first->fNext;; 528 // delete only heap objects; 529 auto obj = tlk->GetObject();; 530 tlk->SetObject(nullptr);; 531 if (obj && ROOT::Detail::HasBeenDeleted(obj)); 532 Error(""Delete"", ""A list is accessing an object (%p) already deleted (list name = %s)"",; 533 obj, GetName());; 534 else if (obj && obj->IsOnHeap()); 535 TCollection::GarbageCollect(obj);; 536 else if (obj && obj->IsA()->GetDirectoryAutoAdd()); 537 removeDirectory.Add(obj);; 538 ; 539 // The formerly first token, when tlk goes out of scope has no more references; 540 // because of the fFirst.reset(); 541 }; 542 }; 543 ; 544 // These objects cannot expect to have a valid TDirectory anymore;; 545 // e.g. because *this is the TDirectory's list of objects. Even if; 546 // not, they are supposed to be deleted, so we can as well unregister; 547 // them from their directory, even if they are stack-based:; 548 TIter iRemDir(&removeDirectory);; 549 TObject* dirRem = nullptr;; 550 while ((dirRem = iRemDir())) {; 551 (*dirRem->IsA()->GetDirectoryAutoAdd())(dirRem, nullptr);; 552 }; 553 Changed();; 554}; 555 ; 556#if 0; 557////////////////////////////////////////////////////////////////////////////////; 55",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TList_8cxx_source.html:16508,access,accessing,16508,doc/master/TList_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TList_8cxx_source.html,1,['access'],['accessing']
Security,"size and location of the specified window ""id"" without; raising it. x, y - coordinates, which define the new position of the window; relative to its parent.; w, h - the width and height, which define the interior size of; the window. void ResizeWindow(Window_t id, UInt_t w, UInt_t h); Changes the width and height of the specified window ""id"", not; including its borders. This function does not change the window's; upper-left coordinate. w, h - the width and height, which are the interior dimensions of; the window after the call completes. void IconifyWindow(Window_t id); Iconifies the window ""id"". Bool_t NeedRedraw(ULong_t tgwindow, Bool_t force); Notify the low level GUI layer ROOT requires ""tgwindow"" to be; updated. Returns kTRUE if the notification was desirable and it was sent. At the moment only Qt4 layer needs that. One needs explicitly cast the first parameter to TGWindow to make; it working in the implementation. One needs to process the notification to confine; all paint operations within ""expose"" / ""paint"" like low level event; or equivalent. void ReparentWindow(Window_t id, Window_t pid, Int_t x, Int_t y); If the specified window is mapped, ReparentWindow automatically; performs an UnmapWindow request on it, removes it from its current; position in the hierarchy, and inserts it as the child of the specified; parent. The window is placed in the stacking order on top with respect; to sibling windows. void SetWindowBackground(Window_t id, ULong_t color); Sets the background of the window ""id"" to the specified color value; ""color"". Changing the background does not cause the window contents; to be changed. void SetWindowBackgroundPixmap(Window_t id, Pixmap_t pxm); Sets the background pixmap of the window ""id"" to the specified; pixmap ""pxm"". Window_t CreateWindow(Window_t parent, Int_t x, Int_t y, UInt_t w, UInt_t h, UInt_t border, Int_t depth, UInt_t clss, void* visual, SetWindowAttributes_t* attr, UInt_t wtype); Creates an unmapped subwindow for a specified pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVirtualX.html:36409,expose,expose,36409,root/html528/TVirtualX.html,https://root.cern,https://root.cern/root/html528/TVirtualX.html,6,['expose'],['expose']
Security,"size() * valSizeAsDouble;; 1122 } else {; 1123 Log() << kFATAL << ""Cannot parse number \"""" << fNumValidationString; 1124 << ""\"". Expected string like \""20%\"" or \""20.0%\""."" << Endl;; 1125 }; 1126 } else if (fNumValidationString.IsFloat()) {; 1127 Double_t valSizeAsDouble = fNumValidationString.Atof();; 1128 ; 1129 if (valSizeAsDouble < 1.0) {; 1130 // Relative spec. format 0.2; 1131 nValidationSamples = GetEventCollection(Types::kTraining).size() * valSizeAsDouble;; 1132 } else {; 1133 // Absolute spec format 100 or 100.0; 1134 nValidationSamples = valSizeAsDouble;; 1135 }; 1136 } else {; 1137 Log() << kFATAL << ""Cannot parse number \"""" << fNumValidationString << ""\"". Expected string like \""0.2\"" or \""100\"".""; 1138 << Endl;; 1139 }; 1140 ; 1141 // Value validation; 1142 // ----------------; 1143 if (nValidationSamples < 0) {; 1144 Log() << kFATAL << ""Validation size \"""" << fNumValidationString << ""\"" is negative."" << Endl;; 1145 }; 1146 ; 1147 if (nValidationSamples == 0) {; 1148 Log() << kFATAL << ""Validation size \"""" << fNumValidationString << ""\"" is zero."" << Endl;; 1149 }; 1150 ; 1151 if (nValidationSamples >= (Int_t)trainingSetSize) {; 1152 Log() << kFATAL << ""Validation size \"""" << fNumValidationString; 1153 << ""\"" is larger than or equal in size to training set (size=\"""" << trainingSetSize << ""\"")."" << Endl;; 1154 }; 1155 ; 1156 return nValidationSamples;; 1157}; 1158 ; 1159 ; 1160////////////////////////////////////////////////////////////////////////////////; 1161/// Implementation of architecture specific train method; 1162///; 1163template <typename Architecture_t>; 1164void MethodDL::TrainDeepNet(); 1165{; 1166 ; 1167 using Scalar_t = typename Architecture_t::Scalar_t;; 1168 using Layer_t = TMVA::DNN::VGeneralLayer<Architecture_t>;; 1169 using DeepNet_t = TMVA::DNN::TDeepNet<Architecture_t, Layer_t>;; 1170 using TensorDataLoader_t = TTensorDataLoader<TMVAInput_t, Architecture_t>;; 1171 ; 1172 bool debug = Log().GetMinType() == kDEBUG;; 1173 ; 1174 ; 1175",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:43918,Validat,Validation,43918,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,1,['Validat'],['Validation']
Security,"size); virtual Long_tGetLong(Int_t npar); virtual Long64_tGetLong64(Int_t npar); Int_tTSQLStatement::GetMinute(Int_t); Int_tTSQLStatement::GetMonth(Int_t); virtual const char*TObject::GetName() const; virtual Int_tGetNumAffectedRows(); virtual Int_tGetNumFields(); virtual Int_tGetNumParameters(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTSQLStatement::GetSecond(Int_t); virtual const char*GetString(Int_t npar); virtual Bool_tGetTime(Int_t npar, Int_t& hour, Int_t& min, Int_t& sec); virtual Bool_tGetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t&); virtual const char*TObject::GetTitle() const; virtual UInt_tGetUInt(Int_t npar); virtual ULong64_tGetULong64(Int_t npar); virtual UInt_tTObject::GetUniqueID() const; Int_tTSQLStatement::GetYear(Int_t); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTSQLStatement::IsError() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsNull(Int_t npar); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNextIteration(); virtual Bool_tNextResultRow(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMySQLStatement.html:3721,Hash,Hash,3721,root/html534/TMySQLStatement.html,https://root.cern,https://root.cern/root/html534/TMySQLStatement.html,1,['Hash'],['Hash']
Security,"sizeof(src_addr), &conn->client.rsa);; 15378 referer = header_val(conn, ""Referer"");; 15379 user_agent = header_val(conn, ""User-Agent"");; 15380 ; 15381 mg_snprintf(conn,; 15382 NULL, /* Ignore truncation in access log */; 15383 log_buf,; 15384 sizeof(log_buf),; 15385 ""%s - %s [%s] \""%s %s%s%s HTTP/%s\"" %d %"" INT64_FMT; 15386 "" %s %s"",; 15387 src_addr,; 15388 (ri->remote_user == NULL) ? ""-"" : ri->remote_user,; 15389 date,; 15390 ri->request_method ? ri->request_method : ""-"",; 15391 ri->request_uri ? ri->request_uri : ""-"",; 15392 ri->query_string ? ""?"" : """",; 15393 ri->query_string ? ri->query_string : """",; 15394 ri->http_version,; 15395 conn->status_code,; 15396 conn->num_bytes_sent,; 15397 referer,; 15398 user_agent);; 15399 }; 15400 ; 15401 /* Here we have a log message in log_buf. Call the callback */; 15402 if (conn->phys_ctx->callbacks.log_access) {; 15403 if (conn->phys_ctx->callbacks.log_access(conn, log_buf)) {; 15404 /* do not log if callack returns non-zero */; 15405 if (fi.access.fp) {; 15406 mg_fclose(&fi.access);; 15407 }; 15408 return;; 15409 }; 15410 }; 15411 ; 15412 /* Store in file */; 15413 if (fi.access.fp) {; 15414 int ok = 1;; 15415 flockfile(fi.access.fp);; 15416 if (fprintf(fi.access.fp, ""%s\n"", log_buf) < 1) {; 15417 ok = 0;; 15418 }; 15419 if (fflush(fi.access.fp) != 0) {; 15420 ok = 0;; 15421 }; 15422 funlockfile(fi.access.fp);; 15423 if (mg_fclose(&fi.access) != 0) {; 15424 ok = 0;; 15425 }; 15426 if (!ok) {; 15427 mg_cry_internal(conn,; 15428 ""Error writing log file %s"",; 15429 conn->dom_ctx->config[ACCESS_LOG_FILE]);; 15430 }; 15431 }; 15432}; 15433#else; 15434#error ""Either enable filesystems or provide a custom log_access implementation""; 15435#endif /* Externally provided function */; 15436 ; 15437 ; 15438/* Verify given socket address against the ACL.; 15439 * Return -1 if ACL is malformed, 0 if address is disallowed, 1 if allowed.; 15440 */; 15441static int; 15442check_acl(struct mg_context *phys_ctx, const union usa *sa); 15443{; 1544",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:455608,access,access,455608,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['access'],['access']
Security,"sizeof(src_addr), &conn->client.rsa);; 15379 referer = header_val(conn, ""Referer"");; 15380 user_agent = header_val(conn, ""User-Agent"");; 15381 ; 15382 mg_snprintf(conn,; 15383 NULL, /* Ignore truncation in access log */; 15384 log_buf,; 15385 sizeof(log_buf),; 15386 ""%s - %s [%s] \""%s %s%s%s HTTP/%s\"" %d %"" INT64_FMT; 15387 "" %s %s"",; 15388 src_addr,; 15389 (ri->remote_user == NULL) ? ""-"" : ri->remote_user,; 15390 date,; 15391 ri->request_method ? ri->request_method : ""-"",; 15392 ri->request_uri ? ri->request_uri : ""-"",; 15393 ri->query_string ? ""?"" : """",; 15394 ri->query_string ? ri->query_string : """",; 15395 ri->http_version,; 15396 conn->status_code,; 15397 conn->num_bytes_sent,; 15398 referer,; 15399 user_agent);; 15400 }; 15401 ; 15402 /* Here we have a log message in log_buf. Call the callback */; 15403 if (conn->phys_ctx->callbacks.log_access) {; 15404 if (conn->phys_ctx->callbacks.log_access(conn, log_buf)) {; 15405 /* do not log if callack returns non-zero */; 15406 if (fi.access.fp) {; 15407 mg_fclose(&fi.access);; 15408 }; 15409 return;; 15410 }; 15411 }; 15412 ; 15413 /* Store in file */; 15414 if (fi.access.fp) {; 15415 int ok = 1;; 15416 flockfile(fi.access.fp);; 15417 if (fprintf(fi.access.fp, ""%s\n"", log_buf) < 1) {; 15418 ok = 0;; 15419 }; 15420 if (fflush(fi.access.fp) != 0) {; 15421 ok = 0;; 15422 }; 15423 funlockfile(fi.access.fp);; 15424 if (mg_fclose(&fi.access) != 0) {; 15425 ok = 0;; 15426 }; 15427 if (!ok) {; 15428 mg_cry_internal(conn,; 15429 ""Error writing log file %s"",; 15430 conn->dom_ctx->config[ACCESS_LOG_FILE]);; 15431 }; 15432 }; 15433}; 15434#else; 15435#error ""Either enable filesystems or provide a custom log_access implementation""; 15436#endif /* Externally provided function */; 15437 ; 15438 ; 15439/* Verify given socket address against the ACL.; 15440 * Return -1 if ACL is malformed, 0 if address is disallowed, 1 if allowed.; 15441 */; 15442static int; 15443check_acl(struct mg_context *phys_ctx, const union usa *sa); 15444{; 1544",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:455641,access,access,455641,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['access'],['access']
Security,"sk; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTSQLServer::fDBcurrently selected DB; Int_tTSQLServer::fErrorCodeerror code of last operation; TStringTSQLServer::fErrorMsgerror message of last operation; Bool_tTSQLServer::fErrorOutenable error output; TStringTSQLServer::fHosthost to which we are connected; TStringfInfoserver info string; MYSQL*fMySQLconnection to MySQL server; Int_tTSQLServer::fPortport to which we are connected; TStringTSQLServer::fTypetype of DBMS (MySQL, Oracle, SysBase, ...); static const char*TSQLServer::fgFloatFmt! printf argument for floats and doubles, either ""%f"" or ""%e"" or ""%10f"" and so on. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMySQLServer(const char* db, const char* uid, const char* pw); Open a connection to a MySQL DB server. The db arguments should be; of the form ""mysql://<host>[:<port>][/<database>]"", e.g.:; ""mysql://pcroot.cern.ch:3456/test"". The uid is the username and pw; the password that should be used for the connection. In addition, several parameters can be specified in url after ""?"" symbol:; timeout=N n is connect timeout is seconds; socket=socketname socketname should be name of Unix socket, used; for connection; multi_statements tell the server that the client may send multiple; statements in a single string (separated by ;);; multi_results tell the server that the client can handle multiple; result sets from multiple-statement executions or; stored procedures; reconnect=0|1 enable or disable automatic reconnection to the server; if the connection is found to have been lost; compress use the compressed client/server protocol; cnf_file=filename Read options from the named option file instead of; from my.cnf; cnf_group=groupname Read options from the named group from my.cnf or the; file specified with cnf_file option; If several parameters are specified, they should be separated by ""&"" symbol; Example of connection argument:; TSQLServer::Connect(""mysql://ho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMySQLServer.html:8911,password,password,8911,root/html528/TMySQLServer.html,https://root.cern,https://root.cern/root/html528/TMySQLServer.html,4,['password'],['password']
Security,"sk; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. stringRooAbsTestStatistic::_addCoefRangeNameName of reference to be used for RooAddPdf components; list<RooAbsBinning*>_binList! Bin ranges; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooArgSetRooAbsOptTestStatistic::_cachedNodes! List of nodes that are cached as constant expressions; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAbsData*RooAbsTestStatistic::_dataPointer to original input dataset; RooAbsData*RooAbsOptTestStatistic::_dataClonePointer to internal clone if input data; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_t_extendedIs the input function and extended p.d.f.; static Bool_tRooAbsArg::_flipACleanStatic flag controlling flipping status of all AClean nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if fla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooXYChi2Var.html:33312,validat,validate,33312,root/html532/RooXYChi2Var.html,https://root.cern,https://root.cern/root/html532/RooXYChi2Var.html,1,['validat'],['validate']
Security,"skSetupMatchConversion; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupMatchConversionCollection; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupMatchLeaf; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupMismatch; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupMissingBranch; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupMissingCompiledCollectionProxy; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupMissingCounterBranch; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupNoCheck; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupNotSetup; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupTreeDestructed; static ROOT::TTreeReaderValueBase::ESetupStatuskSetupVoidPtr. protected:. TStringfBranchNamename of the branch to read data from.; TDictionary*fDicttype that the branch should contain; TLeaf*fLeaf; TStringfLeafName; ROOT::TBranchProxy*fProxyproxy for this branch, owned by TTreeReader; ROOT::TTreeReaderValueBase::EReadStatusfReadStatusread status of this data access; ROOT::TTreeReaderValueBase::ESetupStatusfSetupStatussetup status of this data access; vector<Long64_t>fStaticClassOffsets; Long64_tfTreeLastOffset; TTreeReader*fTreeReadertree reader we belong to. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTreeReaderValueBase(TTreeReader* reader = 0, const char* branchname = 0, TDictionary* dict = 0); Construct a tree value reader and register it with the reader object. ~TTreeReaderValueBase(); Unregister from tree reader, cleanup. ProxyRead(); Try to read the value from the TBranchProxy, returns; the status of the read. TLeaf* GetLeaf(); If we are reading a leaf, return the corresponding TLeaf. void* GetAddress(); Returns the memory address of the object being read. void CreateProxy(); Create the proxy object for our branch. const char* GetBranchDataType(TBranch* branch, TDictionary*& dict) const; Retrieve the type of data stored by branch; put its dictionary into; dict, return its",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TTreeReaderValueBase.html:3029,access,access,3029,root/html602/ROOT__TTreeReaderValueBase.html,https://root.cern,https://root.cern/root/html602/ROOT__TTreeReaderValueBase.html,4,['access'],['access']
Security,"sl, .a, .dll, etc. ;  ; virtual void ShowOutput (RedirectHandle_t *h);  Display the content associated with the redirection described by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem.html:19796,secur,secure,19796,doc/master/classTSystem.html,https://root.cern,https://root.cern/doc/master/classTSystem.html,2,['secur'],['secure']
Security,"sl, .a, .dll, etc. ;  ; virtual void ShowOutput (RedirectHandle_t *h);  Display the content associated with the redirection described by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNetSystem.html:19286,secur,secure,19286,doc/master/classTNetSystem.html,https://root.cern,https://root.cern/doc/master/classTNetSystem.html,3,['secur'],['secure']
Security,"slog ; (; ELogLevel ; level, . const char * ; mess . ). virtual . Send mess to syslog daemon. ; Level is the logging level and mess the message that will be written on the log. ; Reimplemented in TUnixSystem.; Definition at line 1686 of file TSystem.cxx. ◆ TempDirectory(). const char * TSystem::TempDirectory ; (; ); const. virtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1482 of file TSystem.cxx. ◆ TempFileName(). FILE * TSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). virtual . Create a secure temporary file by appending a unique 6 letter string to base. ; The file will be created in a standard (system) directory or in the directory provided in dir. Optionally one can provide suffix append to the final name - like extension "".txt"" or "".html"". The full filename is returned in base and a filepointer is returned for safely writing to the file (this avoids certain security problems). Returns 0 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1499 of file TSystem.cxx. ◆ Umask(). int TSystem::Umask ; (; Int_t ; mask). virtual . Set the process file creation mode mask. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1517 of file TSystem.cxx. ◆ UnixPathName(). const char * TSystem::UnixPathName ; (; const char * ; name). virtual . Convert from a local pathname to a Unix pathname. ; E.g. from \user\root to /user/root. ; Reimplemented in TWinNTSystem.; Definition at line 1063 of file TSystem.cxx. ◆ Unlink(). int TSystem::Unlink ; (; const char * ; name). virtual . Unlink, i.e. ; remove, a file.; If the file is currently open by the current or another process, the behavior of this function is implementation-defined (in particular, POSIX systems unlink the file name, while Windows does not allow the file to be deleted and the operation is a no",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem.html:95271,secur,security,95271,doc/master/classTSystem.html,https://root.cern,https://root.cern/doc/master/classTSystem.html,1,['secur'],['security']
Security,"slot)) != 0) {. } else {; fMap->AddAt(slot,hash,key,value);; }. Long64_t & operator()(ULong64_t hash, Long64_t key); Return a reference to the value belonging to the key with the; specified hash value. If the key does not exist it will be added.; NOTE: the reference will be invalidated an Expand() triggered by; an Add() or another operator() call. void Delete(Option_t* opt = """"); Delete all entries stored in the TExMap. Long64_t GetValue(ULong64_t hash, Long64_t key); Return the value belonging to specified key and hash value. If key not; found return 0. Long64_t GetValue(ULong64_t hash, Long64_t key, UInt_t& slot); Return the value belonging to specified key and hash value. If key not; found return 0.; In 'slot', return the index of the slot used or the first empty slot.; (to be used with AddAt). void Remove(ULong64_t hash, Long64_t key); Remove entry with specified key from the TExMap. Int_t FindElement(ULong64_t hash, Long64_t key); Find an entry with specified hash and key in the TExMap.; Returns the slot of the key or the next empty slot. void FixCollisions(Int_t index); Rehash the map in case an entry has been removed. void Expand(Int_t newsize); Expand the TExMap. void Streamer(TBuffer& b); Stream all objects in the collection to or from the I/O buffer. Bool_t HighWaterMark(); { return (Bool_t) (fTally >= ((3*fSize)/4)); }. void Add(ULong64_t hash, Long64_t key, Long64_t value). Int_t Capacity() const; { return fSize; }. Int_t GetSize() const; { return fTally; }. Long64_t GetValue(ULong64_t hash, Long64_t key). void Remove(ULong64_t hash, Long64_t key). Long64_t & operator()(ULong64_t hash, Long64_t key). » Author: Fons Rademakers 26/05/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id: TExMap.h 34618 2010-07-27 15:52:34Z rdm $ » Last generated: 2010-09-23 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TExMap.html:7984,hash,hash,7984,root/html528/TExMap.html,https://root.cern,https://root.cern/root/html528/TExMap.html,4,['hash'],['hash']
Security,"slot)) != 0) {. } else {; fMap->AddAt(slot,hash,key,value);; }. Long64_t & operator()(ULong64_t hash, Long64_t key); Return a reference to the value belonging to the key with the; specified hash value. If the key does not exist it will be added.; NOTE: the reference will be invalidated an Expand() triggered by; an Add() or another operator() call. void Delete(Option_t* opt = """"); Delete all entries stored in the TExMap. Long64_t GetValue(ULong64_t hash, Long64_t key); Return the value belonging to specified key and hash value. If key not; found return 0. Long64_t GetValue(ULong64_t hash, Long64_t key, UInt_t& slot); Return the value belonging to specified key and hash value. If key not; found return 0.; In 'slot', return the index of the slot used or the first empty slot.; (to be used with AddAt). void Remove(ULong64_t hash, Long64_t key); Remove entry with specified key from the TExMap. Int_t FindElement(ULong64_t hash, Long64_t key); Find an entry with specified hash and key in the TExMap.; Returns the slot of the key or the next empty slot. void FixCollisions(Int_t index); Rehash the map in case an entry has been removed. void Expand(Int_t newsize); Expand the TExMap. void Streamer(TBuffer& b); Stream all objects in the collection to or from the I/O buffer. Bool_t HighWaterMark(); { return (Bool_t) (fTally >= ((3*fSize)/4)); }. void Add(ULong64_t hash, Long64_t key, Long64_t value). Int_t Capacity() const; { return fSize; }. Int_t GetSize() const; { return fTally; }. Long64_t GetValue(ULong64_t hash, Long64_t key). void Remove(ULong64_t hash, Long64_t key). Long64_t & operator()(ULong64_t hash, Long64_t key). » Author: Fons Rademakers 26/05/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id: TExMap.h 34618 2010-07-27 15:52:34Z rdm $ » Last generated: 2011-07-04 15:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TExMap.html:8053,hash,hash,8053,root/html530/TExMap.html,https://root.cern,https://root.cern/root/html530/TExMap.html,4,['hash'],['hash']
Security,"slot)) != 0) {. } else {; fMap->AddAt(slot,hash,key,value);; }. Long64_t & operator()(ULong64_t hash, Long64_t key); Return a reference to the value belonging to the key with the; specified hash value. If the key does not exist it will be added.; NOTE: the reference will be invalidated an Expand() triggered by; an Add() or another operator() call. void Delete(Option_t* opt = """"); Delete all entries stored in the TExMap. Long64_t GetValue(ULong64_t hash, Long64_t key); Return the value belonging to specified key and hash value. If key not; found return 0. Long64_t GetValue(ULong64_t hash, Long64_t key, UInt_t& slot); Return the value belonging to specified key and hash value. If key not; found return 0.; In 'slot', return the index of the slot used or the first empty slot.; (to be used with AddAt). void Remove(ULong64_t hash, Long64_t key); Remove entry with specified key from the TExMap. Int_t FindElement(ULong64_t hash, Long64_t key); Find an entry with specified hash and key in the TExMap.; Returns the slot of the key or the next empty slot. void FixCollisions(Int_t index); Rehash the map in case an entry has been removed. void Expand(Int_t newsize); Expand the TExMap. void Streamer(TBuffer& b); Stream all objects in the collection to or from the I/O buffer. Bool_t HighWaterMark(); { return (Bool_t) (fTally >= ((3*fSize)/4)); }. void Add(ULong64_t hash, Long64_t key, Long64_t value). Int_t Capacity() const; { return fSize; }. Int_t GetSize() const; { return fTally; }. Long64_t GetValue(ULong64_t hash, Long64_t key). void Remove(ULong64_t hash, Long64_t key). Long64_t & operator()(ULong64_t hash, Long64_t key). » Author: Fons Rademakers 26/05/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id: TExMap.h 34618 2010-07-27 15:52:34Z rdm $ » Last generated: 2011-11-03 20:13; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TExMap.html:8053,hash,hash,8053,root/html532/TExMap.html,https://root.cern,https://root.cern/root/html532/TExMap.html,4,['hash'],['hash']
Security,"smutableprivate; fDataTClassprivate; fDeclFileLineTClassprivate; fDeclFileNameTClassprivate; fDeleteTClassprivate; fDeleteArrayTClassprivate; fDestructorTClassprivate; fDirAutoAddTClassprivate; fEnumsTClassprivate; fFuncTemplateTClassprivate; fgClassCountTClassprivatestatic; fgClassTypedefHashTClassprivatestatic; fgDtorOnlyTObjectprivatestatic; fGlobalIsATClassprivate; fgObjectStatTObjectprivatestatic; fHasCustomStreamerMemberTClassprivate; fHasRootPcmInfoTClassprivate; FillBuffer(char *&buffer)TNamedvirtual; fImplFileLineTClassprivate; fImplFileNameTClassprivate; FindClassOrBaseMethodWithId(DeclId_t faddr)TClassprivate; FindConversionStreamerInfo(const char *onfile_classname, UInt_t checksum) constTClass; FindConversionStreamerInfo(const TClass *onfile_cl, UInt_t checksum) constTClass; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; FindStreamerInfo(TObjArray *arr, UInt_t checksum) constTClassprotected; FindStreamerInfo(UInt_t checksum, Bool_t isTransient=kFALSE) constTClass; FindStreamerInfoAbstractEmulated(UInt_t checksum) constTClass; fInstanceCountTClassprivate; fIsATClassprivate; fIsAMethodTClassmutableprivate; fIsOffsetStreamerSetTClassmutableprivate; fIsSyntheticPairTClassprivate; fLastReadInfoTClassmutableprivate; fMergeTClassprivate; fMethodTClassprivate; fNameTNamedprotected; fNewTClassprivate; fNewArrayTClassprivate; fNoInfoOrEmuOrFwdDeclNameRegistryTClassprivatestatic; fObjectVersionRepositoryTClassmutableprivate; fOffsetStreamerTClassmutableprivate; fOnHeapTClassprivate; ForceReload(TClass *oldcl)TClass; fOVRMutexTClassmutableprivate; fPersistentRefTClassprivate; fPropertyTClassmutableprivate; fRealDataTClassprivate; fRefProxyTClassprivate; fResetAfterMergeTClassprivate; fRuntimePropertiesTClassmutableprivate; fSchemaRulesTClassprivate; fSharedLibsTClassprivate; fShowMembersTClassprivate; fSizeofTClassprivate; fStateTClassprivate; fStreamerTClassprivate; fStreamerFuncTClassprivate; fStreamerImplTClas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass-members.html:5244,checksum,checksum,5244,doc/master/classTClass-members.html,https://root.cern,https://root.cern/doc/master/classTClass-members.html,1,['checksum'],['checksum']
Security,"socket is valid); -1 = low level socket() call failed; -2 = low level bind() call failed; -3 = low level listen() call failed; Every valid server socket is added to the TROOT sockets list which; will make sure that any open sockets are properly closed on; program termination. ~TServerSocket(); Destructor: cleanup authentication stuff (if any) and close. TSocket * Accept(UChar_t Opt = 0); Accept a connection on a server socket. Returns a full-duplex; communication TSocket object. If no pending connections are; present on the queue and nonblocking mode has not been enabled; with SetOption(kNoBlock,1) the call blocks until a connection is; present. The returned socket must be deleted by the user. The socket; is also added to the TROOT sockets list which will make sure that; any open sockets are properly closed on program termination.; In case of error 0 is returned and in case non-blocking I/O is; enabled and no connections are available -1 is returned. The opt can be used to require client authentication; valid options are. kSrvAuth = require client authentication; kSrvNoAuth = force no client authentication. Example: use Opt = kSrvAuth to require client authentication. Default options are taken from fgAcceptOpt and are initially; equivalent to kSrvNoAuth; they can be changed with the static; method TServerSocket::SetAcceptOptions(Opt).; The active defaults can be visualized using the static method; TServerSocket::ShowAcceptOptions(). TInetAddress GetLocalInetAddress(); Return internet address of host to which the server socket is bound,; i.e. the local host. In case of error TInetAddress::IsValid() returns; kFALSE. Int_t GetLocalPort(); Get port # to which server socket is bound. In case of error returns -1. UChar_t GetAcceptOptions(); Return default options for Accept. void SetAcceptOptions(UChar_t Opt); Set default options for Accept according to modifier 'mod'.; Use:; kSrvAuth require client authentication; kSrvNoAuth do not require client authentication. void Show",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TServerSocket.html:13375,authenticat,authentication,13375,root/html530/TServerSocket.html,https://root.cern,https://root.cern/root/html530/TServerSocket.html,5,['authenticat'],['authentication']
Security,"solute; / path-noscheme; / path-empty. Definition at line 676 of file TUri.cxx. ◆ GetScheme(). const TString TUri::GetScheme ; (; ); const. inline . Definition at line 80 of file TUri.h. ◆ GetUri(). const TString TUri::GetUri ; (; ); const. Returns the whole URI - an implementation of chapter 5.3 component recomposition. ; The result URI is composed out of the five basic parts. URI = scheme "":"" hier-part [ ""?"" query ] [ ""#"" fragment ]; hier-part = ""//"" authority path-abempty; / path-absolute; / path-rootless; / path-empty. Definition at line 140 of file TUri.cxx. ◆ GetUserInfo(). const TString TUri::GetUserInfo ; (; ); const. inline . Definition at line 84 of file TUri.h. ◆ HasAuthority(). Bool_t TUri::HasAuthority ; (; ); const. inline . Definition at line 93 of file TUri.h. ◆ HasFragment(). Bool_t TUri::HasFragment ; (; ); const. inline . Definition at line 99 of file TUri.h. ◆ HasHierPart(). Bool_t TUri::HasHierPart ; (; ); const. inline . Definition at line 92 of file TUri.h. ◆ HasHost(). Bool_t TUri::HasHost ; (; ); const. inline . Definition at line 95 of file TUri.h. ◆ HasPath(). Bool_t TUri::HasPath ; (; ); const. inline . Definition at line 97 of file TUri.h. ◆ HasPort(). Bool_t TUri::HasPort ; (; ); const. inline . Definition at line 96 of file TUri.h. ◆ HasQuery(). Bool_t TUri::HasQuery ; (; ); const. inline . Definition at line 98 of file TUri.h. ◆ HasRelativePart(). Bool_t TUri::HasRelativePart ; (; ); const. inline . Definition at line 100 of file TUri.h. ◆ HasScheme(). Bool_t TUri::HasScheme ; (; ); const. inline . Definition at line 91 of file TUri.h. ◆ HasUserInfo(). Bool_t TUri::HasUserInfo ; (; ); const. inline . Definition at line 94 of file TUri.h. ◆ IsA(). TClass * TUri::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 157 of file TUri.h. ◆ IsAbsolute(). Bool_t TUri::IsAbsolute ; (; ); const. Returns kTRUE if instance qualifies as absolute-URI absolute-URI = sche",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUri.html:19830,HasH,HasHost,19830,doc/master/classTUri.html,https://root.cern,https://root.cern/doc/master/classTUri.html,1,['HasH'],['HasHost']
Security,"splacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const. Data Members; private:. ROOT::Math::Cartesian2D<double>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXY(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b). DisplacementVector2D & operator=( const ForeignVector & v). Assignment from a foreign 2D vector type, for example, Hep2Vector; Precondition: v must implement methods x() and y(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector2D<CoordSystem, Tag>& SetCoordinates(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b). Set internal data based on 2 Scalar numbers.; These are for example (x,y) for a cartesian vector or (r,phi) for a polar vector. void GetCoordinates(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar& a, ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar& b) const. get internal data into 2 Scalar numbers.; These are for example (x,y) for a cartesian vector or (r,phi) for a polar vector. { fCoordinates.GetCoordinates(a, b); }. bool operator==(const ROOT::Math::DisplacementVector2D<ROOT::Math::Cartes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__DisplacementVector2D_-p1Cartesian2D_double__-p1DefaultCoordinateSystemTag_.html:8535,access,access,8535,root/html602/ROOT__Math__DisplacementVector2D_-p1Cartesian2D_double__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__DisplacementVector2D_-p1Cartesian2D_double__-p1DefaultCoordinateSystemTag_.html,2,['access'],['access']
Security,"splacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::Cylindrical3D<Double32_t>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXYZ(ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c). DisplacementVector3D & operator=(const ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& ). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(const ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar* src). Set internal data based on a C-style array of 3 Scalar numbers. { fCoordinates.SetCoordinates(src); return *this; }. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c). Set internal data based on 3 Scalar numbers. { fCoordinates.SetCoordinates(a, b, c); return *this; }. void GetCoordinates(ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__DisplacementVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html:11774,access,access,11774,root/html526/ROOT__Math__DisplacementVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__DisplacementVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,5,['access'],['access']
Security,"splitlevel = 99 . ). inline . Definition at line 405 of file TTree.h. ◆ Branch() [9/13]. template<class T > . TBranch * TTree::Branch ; (; const char * ; name, . T ** ; addobj, . Int_t ; bufsize = 32000, . Int_t ; splitlevel = 99 . ). inline . Add a new branch, and infer the data type from the array addobj being passed. ; NoteThis and the previous overload should cover most cases for creating a branch. Try to use these two whenever possible, unless e.g. type conversions are needed.; Parameters. [in]nameName of the branch to be created. ; [in]addobjArray of the objects to be added. When calling Fill(), the current value of the type/object will be saved. ; [in]bufsizehe buffer size in bytes for this branch. When the buffer is full, it is compressed and written to disc. The default value of 32000 bytes and should be ok for most simple types. Larger buffers (e.g. 256000) if your Tree is not split and each entry is large (Megabytes). A small value for bufsize is beneficial if entries in the Tree are accessed randomly and the Tree is in split mode. ; [in]splitlevelIf T is a class or struct and splitlevel > 0, the members of the object are serialised as separate branches. . ReturnsPointer to the TBranch that was created. The branch is owned by the tree. ; Definition at line 370 of file TTree.h. ◆ Branch() [10/13]. template<class T > . TBranch * TTree::Branch ; (; const char * ; name, . T * ; obj, . Int_t ; bufsize = 32000, . Int_t ; splitlevel = 99 . ). inline . Add a new branch, and infer the data type from the type of obj being passed. ; NoteThis and the next overload should cover most cases for creating a branch. Try to use these two whenever possible, unless e.g. type conversions are needed.; Parameters. [in]nameName of the branch to be created. ; [in]objAddress of the object to be added. Make sure to pass a pointer to the actual type/class that should be stored in the tree (no pointers to base classes). When calling Fill(), the current value of the type/object will be",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTree.html:82118,access,accessed,82118,doc/master/classTTree.html,https://root.cern,https://root.cern/doc/master/classTTree.html,2,['access'],['accessed']
Security,"sponds to blocking i/o; static atomic<Int_t>TFile::fgReadCallsNumber of bytes read from all TFile objects; static Bool_tTFile::fgReadInfoif true (default) ReadStreamerInfo is called when opening a file; static Int_tTFile::fgReadaheadSizeReadahead buffer size. private:. XrdCl::File*fFileUnderlying XRootD file; XrdSysCondVar*fInitCondVarUsed to block an async open request; XrdCl::OpenFlags::FlagsfModeOpen mode of the current file; TStringfNewUrl; Int_tfQueryReadVParams; Int_tfReadvIorMaxMax size of a single readv chunk; Int_tfReadvIovMaxMax number of readv chunks; XrdCl::URL*fUrlURL of the current file. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TNetXNGFile(const char* url, Option_t* mode = """", const char* title = """", Int_t compress = 1, Int_t netopt = 0, Bool_t parallelopen = kFALSE); Constructor. param url: URL of the entry-point server to be contacted; param mode: initial file access mode; param title: title of the file (shown by ROOT browser); param compress: compression level and algorithm; param netopt: TCP window size in bytes (unused); param parallelopen: open asynchronously. ~TNetXNGFile(); Destructor. void Init(Bool_t create); Initialize the file. Makes sure that the file is really open before; calling TFile::Init. It may block. Long64_t GetSize() const; Get the file size. Returns -1 in the case that the file could not be; stat'ed. Bool_t IsOpen() const; Check if the file is open. void SetAsyncOpenStatus(TFile::EAsyncOpenStatus status); Set the status of an asynchronous file open. void Close(const Option_t* option = """"); Close the file. param option: if == ""R"", all TProcessIDs referenced by this file are; deleted (is this valid in xrootd context?). Int_t ReOpen(Option_t* modestr); Reopen the file with the new access mode. param mode: the new access mode; returns: 0 in case the mode was successfully modified, 1 in case; the mode did not change (was already as requested or wrong; input arguments) and -1 in case of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNetXNGFile.html:24458,access,access,24458,root/html602/TNetXNGFile.html,https://root.cern,https://root.cern/root/html602/TNetXNGFile.html,2,['access'],['access']
Security,"sponds to; // [-0.2, 0.5]; cout << ""\tLower edge: "" << yAxis->GetBinLowEdge(3) << endl;; cout << ""\tCenter: "" << yAxis->GetBinCenter(3) << endl;; cout << ""\tUpper edge: "" << yAxis->GetBinUpEdge(3) << endl;; 3.3 Bin Numbering; All histogram types support fixed or variable bin sizes. 2-D histograms may have fixed size bins along X and variable size bins along Y or vice-versa. The functions to fill, manipulate, draw, or access histograms are identical in both cases.; 3.3.1 Convention; For all histogram types: nbins , xlow , xup; Bin# 0 contains the underflow.; Bin# 1 contains the first bin with low-edge ( xlow INCLUDED).; The second to last bin (bin# nbins) contains the upper-edge (xup EXCLUDED).; The Last bin (bin# nbins+1) contains the overflow.; In case of 2-D or 3-D histograms, a “global bin” number is defined. For example, assuming a 3-D histogram h with binx, biny, binz, the function returns a global/linear bin number.; Int_t bin = h->GetBin(binx, biny, binz);; This global bin is useful to access the bin information independently of the dimension.; 3.3.2 Re-binning. At any time, a histogram can be re-binned via the TH1::Rebin() method. It returns a new histogram with the re-binned contents. If bin errors were stored, they are recomputed during the re-binning.; 3.4 Filling Histograms; A histogram is typically filled with statements like:; h1->Fill(x);; h1->Fill(x,w); // with weight; h2->Fill(x,y);; h2->Fill(x,y,w);; h3->Fill(x,y,z);; h3->Fill(x,y,z,w);; The Fill method computes the bin number corresponding to the given x, y or z argument and increments this bin by the given weight. The Fill() method returns the bin number for 1-D histograms or global bin number for 2-D and 3-D histograms. If TH1::Sumw2() has been called before filling, the sum of squares is also stored. One can increment a bin number directly by calling TH1::AddBinContent(), replace the existing content via TH1::SetBinContent() , and access the bin content of a given bin via TH1::GetBinContent() .;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:76122,access,access,76122,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['access'],['access']
Security,"sponse. */; 8420 if (ah->nonce == NULL) {; 8421 return 0;; 8422 }; 8423 s = NULL;; 8424 nonce = strtoull(ah->nonce, &s, 10);; 8425 if ((s == NULL) || (*s != 0)) {; 8426 return 0;; 8427 }; 8428 ; 8429 /* Convert the nonce from the client to a number. */; 8430 nonce ^= conn->dom_ctx->auth_nonce_mask;; 8431 ; 8432 /* The converted number corresponds to the time the nounce has been; 8433 * created. This should not be earlier than the server start. */; 8434 /* Server side nonce check is valuable in all situations but one:; 8435 * if the server restarts frequently, but the client should not see; 8436 * that, so the server should accept nonces from previous starts. */; 8437 /* However, the reasonable default is to not accept a nonce from a; 8438 * previous start, so if anyone changed the access rights between; 8439 * two restarts, a new login is required. */; 8440 if (nonce < (uint64_t)conn->phys_ctx->start_time) {; 8441 /* nonce is from a previous start of the server and no longer valid; 8442 * (replay attack?) */; 8443 return 0;; 8444 }; 8445 /* Check if the nonce is too high, so it has not (yet) been used by the; 8446 * server. */; 8447 if (nonce >= ((uint64_t)conn->phys_ctx->start_time; 8448 + conn->dom_ctx->nonce_count)) {; 8449 return 0;; 8450 }; 8451#else; 8452 (void)nonce;; 8453#endif; 8454 ; 8455 /* CGI needs it as REMOTE_USER */; 8456 if (ah->user != NULL) {; 8457 conn->request_info.remote_user =; 8458 mg_strdup_ctx(ah->user, conn->phys_ctx);; 8459 } else {; 8460 return 0;; 8461 }; 8462 ; 8463 return 1;; 8464}; 8465 ; 8466 ; 8467static const char *; 8468mg_fgets(char *buf, size_t size, struct mg_file *filep); 8469{; 8470 if (!filep) {; 8471 return NULL;; 8472 }; 8473 ; 8474 if (filep->access.fp != NULL) {; 8475 return fgets(buf, (int)size, filep->access.fp);; 8476 } else {; 8477 return NULL;; 8478 }; 8479}; 8480 ; 8481/* Define the initial recursion depth for procesesing htpasswd files that; 8482 * include other htpasswd; 8483 * (or even the same) files. It is not",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:243824,attack,attack,243824,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['attack'],['attack']
Security,"sponse. */; 8421 if (ah->nonce == NULL) {; 8422 return 0;; 8423 }; 8424 s = NULL;; 8425 nonce = strtoull(ah->nonce, &s, 10);; 8426 if ((s == NULL) || (*s != 0)) {; 8427 return 0;; 8428 }; 8429 ; 8430 /* Convert the nonce from the client to a number. */; 8431 nonce ^= conn->dom_ctx->auth_nonce_mask;; 8432 ; 8433 /* The converted number corresponds to the time the nounce has been; 8434 * created. This should not be earlier than the server start. */; 8435 /* Server side nonce check is valuable in all situations but one:; 8436 * if the server restarts frequently, but the client should not see; 8437 * that, so the server should accept nonces from previous starts. */; 8438 /* However, the reasonable default is to not accept a nonce from a; 8439 * previous start, so if anyone changed the access rights between; 8440 * two restarts, a new login is required. */; 8441 if (nonce < (uint64_t)conn->phys_ctx->start_time) {; 8442 /* nonce is from a previous start of the server and no longer valid; 8443 * (replay attack?) */; 8444 return 0;; 8445 }; 8446 /* Check if the nonce is too high, so it has not (yet) been used by the; 8447 * server. */; 8448 if (nonce >= ((uint64_t)conn->phys_ctx->start_time; 8449 + conn->dom_ctx->nonce_count)) {; 8450 return 0;; 8451 }; 8452#else; 8453 (void)nonce;; 8454#endif; 8455 ; 8456 /* CGI needs it as REMOTE_USER */; 8457 if (ah->user != NULL) {; 8458 conn->request_info.remote_user =; 8459 mg_strdup_ctx(ah->user, conn->phys_ctx);; 8460 } else {; 8461 return 0;; 8462 }; 8463 ; 8464 return 1;; 8465}; 8466 ; 8467 ; 8468static const char *; 8469mg_fgets(char *buf, size_t size, struct mg_file *filep); 8470{; 8471 if (!filep) {; 8472 return NULL;; 8473 }; 8474 ; 8475 if (filep->access.fp != NULL) {; 8476 return fgets(buf, (int)size, filep->access.fp);; 8477 } else {; 8478 return NULL;; 8479 }; 8480}; 8481 ; 8482/* Define the initial recursion depth for procesesing htpasswd files that; 8483 * include other htpasswd; 8484 * (or even the same) files. It is not",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:243856,attack,attack,243856,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['attack'],['attack']
Security,"ss () const;  ; TDataMember * GetResMember () const;  ; Int_t GetResNumChilds () const;  ; void * GetResPtr () const;  ; Int_t GetResRestrict () const;  ; void SetResult (void *_res, TClass *_rescl, TDataMember *_resmemb, Int_t _res_chld, Int_t restr=0);  set pointer on found element, class and number of childs ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootSnifferStoreXml.html:2326,Hash,Hash,2326,doc/master/classTRootSnifferStoreXml.html,https://root.cern,https://root.cern/doc/master/classTRootSnifferStoreXml.html,2,['Hash'],['Hash']
Security,"ss *onfileClass);  ; void ReadPairFromMap (int nElements, TBuffer &b);  ; void ReadPrimitives (int nElements, TBuffer &b, const TClass *onfileClass);  ; void WriteMap (int nElements, TBuffer &b);  ; void WriteObjects (int nElements, TBuffer &b);  ; void WritePrimitives (int nElements, TBuffer &b);  ;  Protected Member Functions inherited from TGenCollectionProxy; void CheckFunctions () const;  Check existence of function pointers. ;  ; virtual void DeleteItem (Bool_t force, void *ptr) const;  Call to delete/destruct individual item. ;  ; TGenCollectionProxy * Initialize (Bool_t silent) const;  Proxy initializer. ;  ; virtual TGenCollectionProxy * InitializeEx (Bool_t silent);  Proxy initializer. ;  . Protected Attributes; ReadBuffer_t fReadBufferFunc;  ;  Protected Attributes inherited from TGenCollectionProxy; Method fClear;  Method cache for container accessors: clear container. ;  ; Collectfunc_t fCollect;  Method to collect objects from container. ;  ; ArrIterfunc_t fConstruct;  Container accessors: block construct. ;  ; std::map< std::string, TObjArray * > * fConversionReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) derived from another class. ;  ; Method0 fCreateEnv;  Method to allocate an Environment holder. ;  ; Sizing_t fDestruct;  Container accessors: block destruct. ;  ; EnvironBase_t * fEnv;  Address of the currently proxied object. ;  ; Feedfunc_t fFeed;  Container accessors: block feed. ;  ; Method fFirst;  Container accessors: generic iteration: first. ;  ; CopyIterator_t fFunctionCopyIterator;  ; CreateIterators_t fFunctionCreateIterators;  ; DeleteIterator_t fFunctionDeleteIterator;  ; DeleteTwoIterators_t fFunctionDeleteTwoIterators;  ; Next_t fFunctionNextIterator;  ; Value * fKey;  Descriptor of the key_type. ;  ; std::string fName;  Name of the class being proxied. ;  ; Method fNext;  Container accessors: generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenCollectionStreamer.html:10047,access,accessors,10047,doc/master/classTGenCollectionStreamer.html,https://root.cern,https://root.cern/doc/master/classTGenCollectionStreamer.html,1,['access'],['accessors']
Security,"ss *pThis, void *obj, TBuffer &b, const TClass *onfile_class)Schema evolution rules.Definition TClass.h:283; TClass::GetImplFileLineShort_t GetImplFileLine() constDefinition TClass.h:457; TClass::GetMethodAllAnyTMethod * GetMethodAllAny(const char *method)Return pointer to method without looking at parameters.Definition TClass.cxx:4384; TClass::fRuntimePropertiesstd::atomic< UChar_t > fRuntimePropertiesDefinition TClass.h:273; TClass::EStateEStateDefinition TClass.h:121; TClass::kInterpreted@ kInterpretedDefinition TClass.h:126; TClass::kHasTClassInit@ kHasTClassInitDefinition TClass.h:127; TClass::kEmulated@ kEmulatedDefinition TClass.h:125; TClass::kNoInfo@ kNoInfoDefinition TClass.h:122; TClass::kLoaded@ kLoadedDefinition TClass.h:130; TClass::kForwardDeclared@ kForwardDeclaredDefinition TClass.h:124; TClass::kNamespaceForMeta@ kNamespaceForMetaDefinition TClass.h:131; TClass::FindConversionStreamerInfoTVirtualStreamerInfo * FindConversionStreamerInfo(const char *onfile_classname, UInt_t checksum) constReturn a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' ...Definition TClass.cxx:7193; TClass::GetBaseClassOffsetRecurseInt_t GetBaseClassOffsetRecurse(const TClass *toBase)Return data member offset to the base class ""cl"".Definition TClass.cxx:2705; TClass::GetDeleteROOT::DelFunc_t GetDelete() constReturn the wrapper around delete ThiObject.Definition TClass.cxx:7463; TClass::LoadClassDefaultstatic TClass * LoadClassDefault(const char *requestedname, Bool_t silent)Helper function used by TClass::GetClass().Definition TClass.cxx:5771; TClass::IsVersionedBool_t IsVersioned() constDefinition TClass.h:522; TClass::SetClassSizevoid SetClassSize(Int_t sizof)Definition TClass.h:307; TClass::FindClassOrBaseMethodWithIdTMethod * FindClassOrBaseMethodWithId(DeclId_t faddr)Find a method with decl id in this class or its bases.Definition TClass.cxx:4440; TClass::StreamerExternalstatic void StreamerExternal(const TClass *pThis, void *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8h_source.html:73055,checksum,checksum,73055,doc/v632/TClass_8h_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8h_source.html,2,['checksum'],['checksum']
Security,"ss *pThis, void *obj, TBuffer &b, const TClass *onfile_class)Schema evolution rules.Definition TClass.h:283; TClass::GetImplFileLineShort_t GetImplFileLine() constDefinition TClass.h:457; TClass::GetMethodAllAnyTMethod * GetMethodAllAny(const char *method)Return pointer to method without looking at parameters.Definition TClass.cxx:4451; TClass::fRuntimePropertiesstd::atomic< UChar_t > fRuntimePropertiesDefinition TClass.h:273; TClass::EStateEStateDefinition TClass.h:121; TClass::kInterpreted@ kInterpretedDefinition TClass.h:126; TClass::kHasTClassInit@ kHasTClassInitDefinition TClass.h:127; TClass::kEmulated@ kEmulatedDefinition TClass.h:125; TClass::kNoInfo@ kNoInfoDefinition TClass.h:122; TClass::kLoaded@ kLoadedDefinition TClass.h:130; TClass::kForwardDeclared@ kForwardDeclaredDefinition TClass.h:124; TClass::kNamespaceForMeta@ kNamespaceForMetaDefinition TClass.h:131; TClass::FindConversionStreamerInfoTVirtualStreamerInfo * FindConversionStreamerInfo(const char *onfile_classname, UInt_t checksum) constReturn a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' ...Definition TClass.cxx:7260; TClass::GetBaseClassOffsetRecurseInt_t GetBaseClassOffsetRecurse(const TClass *toBase)Return data member offset to the base class ""cl"".Definition TClass.cxx:2772; TClass::GetDeleteROOT::DelFunc_t GetDelete() constReturn the wrapper around delete ThiObject.Definition TClass.cxx:7530; TClass::LoadClassDefaultstatic TClass * LoadClassDefault(const char *requestedname, Bool_t silent)Helper function used by TClass::GetClass().Definition TClass.cxx:5838; TClass::IsVersionedBool_t IsVersioned() constDefinition TClass.h:522; TClass::SetClassSizevoid SetClassSize(Int_t sizof)Definition TClass.h:307; TClass::FindClassOrBaseMethodWithIdTMethod * FindClassOrBaseMethodWithId(DeclId_t faddr)Find a method with decl id in this class or its bases.Definition TClass.cxx:4507; TClass::StreamerExternalstatic void StreamerExternal(const TClass *pThis, void *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8h_source.html:72883,checksum,checksum,72883,doc/master/TClass_8h_source.html,https://root.cern,https://root.cern/doc/master/TClass_8h_source.html,2,['checksum'],['checksum']
Security,"ss = 0, Double_t weight = 1., Double_t boostweight = 1.); constructor. Event(const vector<Float_t>& values, const vector<Float_t>& targetValues, const vector<Float_t>& spectatorValues, UInt_t theClass = 0, Double_t weight = 1., Double_t boostweight = 1.); constructor. Event(const vector<Float_t>& , UInt_t theClass, Double_t weight = 1., Double_t boostweight = 1.); constructor. Event(const vector<Float_t*>*& , UInt_t nvar); constructor for single events. Event(const TMVA::Event& ); copy constructor. ~Event(); Event destructor. void SetVariableArrangement(vector<UInt_t>*const m) const; set the variable arrangement. void CopyVarValues(const TMVA::Event& other); copies only the variable values. Float_t GetValue(UInt_t ivar) const; return value of i'th variable. Float_t GetSpectator(UInt_t ivar) const; return spectator content. const std::vector<Float_t>& GetValues() const; return value vector. UInt_t GetNVariables() const; accessor to the number of variables. UInt_t GetNTargets() const; accessor to the number of targets. UInt_t GetNSpectators() const; accessor to the number of spectators. void SetVal(UInt_t ivar, Float_t val); set variable ivar to val. void Print(ostream& o) const; print method. void SetTarget(UInt_t itgt, Float_t value); set the target value (dimension itgt) to value. void SetSpectator(UInt_t ivar, Float_t value); set spectator value (dimension ivar) to value. Double_t GetWeight() const; return the event weight - depending on whether the flag; *IgnoreNegWeightsInTraining* is or not. If it is set AND it is; used for training, then negetive event weights are set to zero !; NOTE! For events used in Testing, the ORIGINAL possibly negative; event weight is used no matter what. void SetIsTraining(Bool_t ); when this static function is called, it sets the flag whether; events with negative event weight should be ignored in the; training, or not. void SetIgnoreNegWeightsInTraining(Bool_t ); when this static function is called, it sets the flag whether; events w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Event.html:4323,access,accessor,4323,root/html602/TMVA__Event.html,https://root.cern,https://root.cern/root/html602/TMVA__Event.html,2,['access'],['accessor']
Security,"ss R > . template<class A , class R2 > . bool ROOT::Math::SMatrix< T, D1, D2, R >::operator> ; (; const Expr< A, T, D1, D2, R2 > & ; rhs); const. element wise comparison ; Definition at line 367 of file SMatrix.icc. ◆ operator>() [2/3]. template<class T , unsigned int D1, unsigned int D2, class R > . template<class R2 > . bool ROOT::Math::SMatrix< T, D1, D2, R >::operator> ; (; const SMatrix< T, D1, D2, R2 > & ; rhs); const. element wise comparison ; Definition at line 357 of file SMatrix.icc. ◆ operator>() [3/3]. template<class T , unsigned int D1, unsigned int D2, class R > . bool ROOT::Math::SMatrix< T, D1, D2, R >::operator> ; (; const T & ; rhs); const. element wise comparison ; Definition at line 347 of file SMatrix.icc. ◆ operator[]() [1/2]. template<class T , unsigned int D1, unsigned int D2 = D1, class R = MatRepStd<T, D1, D2>> . SMatrixRow ROOT::Math::SMatrix< T, D1, D2, R >::operator[] ; (; unsigned int ; i). inline . read/write access to matrix element with indices starting from 0 : m[i][j] ; Definition at line 402 of file SMatrix.h. ◆ operator[]() [2/2]. template<class T , unsigned int D1, unsigned int D2 = D1, class R = MatRepStd<T, D1, D2>> . SMatrixRow_const ROOT::Math::SMatrix< T, D1, D2, R >::operator[] ; (; unsigned int ; i); const. inline . read only access to matrix element, with indices starting from 0 : m[i][j] ; Definition at line 398 of file SMatrix.h. ◆ Place_at() [1/2]. template<class T , unsigned int D1, unsigned int D2, class R > . template<class A , unsigned int D3, unsigned int D4, class R2 > . SMatrix< T, D1, D2, R > & ROOT::Math::SMatrix< T, D1, D2, R >::Place_at ; (; const Expr< A, T, D3, D4, R2 > & ; rhs, . unsigned int ; row, . unsigned int ; col . ). place a matrix expression in this matrix ; Definition at line 564 of file SMatrix.icc. ◆ Place_at() [2/2]. template<class T , unsigned int D1, unsigned int D2, class R > . template<unsigned int D3, unsigned int D4, class R2 > . SMatrix< T, D1, D2, R > & ROOT::Math::SMatrix< T, D1, D2,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1SMatrix.html:34975,access,access,34975,doc/master/classROOT_1_1Math_1_1SMatrix.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1SMatrix.html,1,['access'],['access']
Security,"ss TStringRef: public TRefCnt. TString. Basic string class. Cannot be stored in a TCollection... use TObjString instead. Function Members (Methods); public:. TStringRef(); TStringRef(const TStringRef&); ~TStringRef(); voidTRefCnt::AddReference(); TStringRef&operator=(const TStringRef&); UInt_tTRefCnt::References() const; UInt_tTRefCnt::RemoveReference(); voidTRefCnt::SetRefCount(UInt_t r). private:. Ssiz_tCapacity() const; char*Data() const; Ssiz_tFirst(char c) const; Ssiz_tFirst(const char* s) const; static TStringRef*GetRep(Ssiz_t capac, Ssiz_t nchar); UInt_tHash() const; UInt_tHashFoldCase() const; Ssiz_tLast(char) const; Ssiz_tLength() const; char&operator[](Ssiz_t i); charoperator[](Ssiz_t i) const; voidUnLink(). Data Members; public:. enum TRefCnt::EReferenceFlag { kStaticInit; };. protected:. UInt_tTRefCnt::fRefs(1 less than) number of references. private:. Ssiz_tfCapacityMax string length (excluding null); Ssiz_tfNcharsString length (excluding null). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void UnLink(); { if (RemoveReference() == 0) delete [] (char*)this; }. Ssiz_t Length() const; { return fNchars; }. Ssiz_t Capacity() const; { return fCapacity; }. char * Data() const; { return (char*)(this+1); }. char & operator[](Ssiz_t i); { return ((char*)(this+1))[i]; }. char operator[](Ssiz_t i) const; { return ((char*)(this+1))[i]; }. Ssiz_t First(char c) const. Ssiz_t First(const char* s) const. UInt_t Hash() const. UInt_t HashFoldCase() const. Ssiz_t Last(char ) const. TStringRef * GetRep(Ssiz_t capac, Ssiz_t nchar). TSubString & operator=(const TStringRef& ). » Author: Fons Rademakers 04/08/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TString.h 34285 2010-07-01 20:37:52Z rdm $ » Last generated: 2010-09-23 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TStringRef.html:1711,Hash,Hash,1711,root/html528/TStringRef.html,https://root.cern,https://root.cern/root/html528/TStringRef.html,2,['Hash'],"['Hash', 'HashFoldCase']"
Security,"ss dependencies and improve modularity. Each set of data has a producer class and one or many consumer classes. When using folders, the producer class places a pointer to the data into a folder, and the consumer class retrieves a reference to the folder.; The consumer can access the objects in a folder by specifying the path name of the folder.; Here is an example of a folder’s path name:; //root/Event/Hits/TCP; One does not have to specify the full path name. If the partial path name is unique, it will find it; otherwise it will return the first occurrence of the path.; The first diagram shows a system without folders. The objects have pointers to each other to access each other’s data. Pointers are an efficient way to share data between classes. However, a direct pointer creates a direct coupling between classes. This design can become a very tangled web of dependencies in a system with a large number of classes. In the second diagram, a reference to the data is in the folder and the consumers refer to the folder rather than each other to access the data. The naming and search service provided by the ROOT folders hierarchy provides an alternative. It loosely couples the classes and greatly enhances I/O operations. In this way, folders separate the data from the algorithms and greatly improve the modularity of an application by minimizing the class dependencies. In addition, the folder hierarchy creates a picture of the data organization. This is useful when discussing data design issues or when learning the data organization. The example below illustrates this point.; 10.3 How to Use Folders; Using folders means to build a hierarchy of folders, posting the reference to the data in the folder by the producer, and creating a reference to the folder by the user.; 10.3.1 Creating a Folder Hierarchy; To create a folder hierarchy you add the top folder of your hierarchy to //root. Then you add a folder to an existing folder with the TFolder::AddFolder method. This method",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:419901,access,access,419901,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['access'],['access']
Security,"ss faddr. ;  ; TListOfFunctions * GetMethodList ();  Return (create an empty one if needed) the list of functions. ;  ; TVirtualStreamerInfo * GetStreamerInfoImpl (Int_t version, Bool_t silent) const;  ; void Init (const char *name, Version_t cversion, const std::type_info *info, TVirtualIsAProxy *isa, const char *dfil, const char *ifil, Int_t dl, Int_t il, ClassInfo_t *classInfo, Bool_t silent);  Initialize a TClass object. ;  ; bool IsClassStructOrUnion () const;  ; void LoadClassInfo () const;  Try to load the ClassInfo if available. ;  ; void MoveAddressInRepository (const char *where, void *oldadd, void *newadd, const TClass *what) const;  ; TClass & operator= (const TClass &)=delete;  ; void RegisterAddressInRepository (const char *where, void *location, const TClass *what) const;  ; void SetClassSize (Int_t sizof);  ; void SetClassVersion (Version_t version);  Private function. ;  ; void SetRuntimeProperties ();  Internal routine to set calculate the class properties that can only be known at run-time, for example whether the Hash member function and the destructor are consistent. ;  ; void SetStreamerImpl ();  Internal routine to set fStreamerImpl based on the value of fStreamerType. ;  ; void UnregisterAddressInRepository (const char *where, void *location, const TClass *what) const;  . Static Private Member Functions; static void ConvStreamerInstrumented (const TClass *pThis, void *object, TBuffer &b, const TClass *onfile_class);  Case of instrumented class with a library. ;  ; static DeclIdMap_t * GetDeclIdMap ();  ; static IdMap_t * GetIdMap ();  ; static Bool_t HasNoInfoOrEmuOrFwdDeclaredDecl (const char *);  ; static TClass * LoadClassCustom (const char *requestedname, Bool_t silent);  Helper function used by TClass::GetClass(). ;  ; static TClass * LoadClassDefault (const char *requestedname, Bool_t silent);  Helper function used by TClass::GetClass(). ;  ; static void StreamerDefault (const TClass *pThis, void *object, TBuffer &b, const TClass *onfile",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:41149,Hash,Hash,41149,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,2,['Hash'],['Hash']
Security,"ss for RooProdPdf that calculates a general normalized projection of a product of non-factorizing PDFs, e.g ;  CRooGExpModelClass RooGExpModel is a RooResolutionModel implementation that models a resolution function that is the convolution of a Gaussian with a one-sided exponential ;  CRooGlobalFunc;  CRooGridRooGrid is a utility class for RooMCIntegrator which implements an adaptive multi-dimensional Monte Carlo numerical integration, following the VEGAS algorithm ;  CRooHashTableRooHashTable implements a hash table for TObjects ;  CRooHistA RooHist is a graphical representation of binned data based on the TGraphAsymmErrors class ;  CRooHistConstraint;  ►CRooHistErrorRooHistError is a singleton class used to calculate the error bars for each bin of a RooHist object ;  CBinomialSumAsym;  CBinomialSumEff;  CPoissonSum;  CRooHistFuncRooHistFunc implements a real-valued function sampled from a multidimensional histogram ;  CRooHistPdfRooHistPdf implements a probablity density function sampled from a multidimensional histogram ;  CRooImproperIntegrator1DSpecial numeric integrator that can handle integrals over open domains ;  CRooIntRooInt is a minimal implementation of a TObject holding a Int_t value ;  ►CRooIntegralMorph;  CMorphCacheElem;  CRooIntegrator1DRooIntegrator1D implements an adaptive one-dimensional numerical integration algorithm ;  CRooIntegrator2DRooIntegrator2D implements a numeric two-dimensiona integrator in terms of a recursive application of RooIntegrator1D ;  CRooIntegratorBindingFunction binding representing the output of a RooAbsIntegrator ;  CRooInvTransformLightweight function binding that returns the inverse of an input function binding Apply the change of variables transformation x -> 1/x to the input function and its range ;  CRooJeffreysPriorRooJeffreysPrior ;  CRooKeysPdfClass RooKeysPdf implements a one-dimensional kernel estimation p.d.f which model the distribution of an arbitrary input dataset as a superposition of Gaussian kernels, one",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:92440,hash,hash,92440,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,1,['hash'],['hash']
Security,"ss from the list and map of classesDefinition TClass.cxx:520; TClass::GetClassInfoClassInfo_t * GetClassInfo() constDefinition TClass.h:433; TClass::InheritsFromBool_t InheritsFrom(const char *cl) const overrideReturn kTRUE if this class inherits from a class with name ""classname"".Definition TClass.cxx:4874; TClass::GetDeclFileNameconst char * GetDeclFileName() constReturn name of the file containing the declaration of this class.Definition TClass.cxx:3463; TClass::GetClassstatic TClass * GetClass(const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE)Static method returning pointer to TClass of the specified class name.Definition TClass.cxx:2968; TCollectionCollection abstract base class.Definition TCollection.h:65; TCollection::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRemove object from this collection and recursively remove the object from all other objects (and coll...Definition TCollection.cxx:574; TCollection::UseRWLockvirtual bool UseRWLock(Bool_t enable=true)Set this collection to use a RW lock upon access, making it thread safe.Definition TCollection.cxx:761; TCollection::AddAllvirtual void AddAll(const TCollection *col)Add all objects from collection col to this collection.Definition TCollection.cxx:195; TCollection::SetOwnervirtual void SetOwner(Bool_t enable=kTRUE)Set whether this collection is the owner (enable==true) of its content.Definition TCollection.cxx:746; TCollection::Addvirtual void Add(TObject *obj)=0; TCollection::FindObjectTObject * FindObject(const char *name) const overrideFind an object in this collection using its name.Definition TCollection.cxx:312; TCollection::Deletevoid Delete(Option_t *option="""") override=0Delete this object.; TCollection::Clearvoid Clear(Option_t *option="""") override=0; TCollection::GetSizevirtual Int_t GetSize() constReturn the capacity of the collection, i.e.Definition TCollection.h:184; TColorThe color creation and management class.Definition TColor.h:21; TColor::InitializeColorsstatic void I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TROOT_8cxx_source.html:132163,access,access,132163,doc/v632/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TROOT_8cxx_source.html,1,['access'],['access']
Security,"ss from the list and map of classesDefinition TClass.cxx:585; TClass::GetClassInfoClassInfo_t * GetClassInfo() constDefinition TClass.h:433; TClass::InheritsFromBool_t InheritsFrom(const char *cl) const overrideReturn kTRUE if this class inherits from a class with name ""classname"".Definition TClass.cxx:4941; TClass::GetDeclFileNameconst char * GetDeclFileName() constReturn name of the file containing the declaration of this class.Definition TClass.cxx:3530; TClass::GetClassstatic TClass * GetClass(const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE)Static method returning pointer to TClass of the specified class name.Definition TClass.cxx:3035; TCollectionCollection abstract base class.Definition TCollection.h:65; TCollection::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRemove object from this collection and recursively remove the object from all other objects (and coll...Definition TCollection.cxx:574; TCollection::UseRWLockvirtual bool UseRWLock(Bool_t enable=true)Set this collection to use a RW lock upon access, making it thread safe.Definition TCollection.cxx:761; TCollection::AddAllvirtual void AddAll(const TCollection *col)Add all objects from collection col to this collection.Definition TCollection.cxx:195; TCollection::SetOwnervirtual void SetOwner(Bool_t enable=kTRUE)Set whether this collection is the owner (enable==true) of its content.Definition TCollection.cxx:746; TCollection::Addvirtual void Add(TObject *obj)=0; TCollection::FindObjectTObject * FindObject(const char *name) const overrideFind an object in this collection using its name.Definition TCollection.cxx:312; TCollection::Deletevoid Delete(Option_t *option="""") override=0Delete this object.; TCollection::Clearvoid Clear(Option_t *option="""") override=0; TCollection::GetSizevirtual Int_t GetSize() constReturn the capacity of the collection, i.e.Definition TCollection.h:184; TColorThe color creation and management class.Definition TColor.h:21; TColor::InitializeColorsstatic void I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:132339,access,access,132339,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,1,['access'],['access']
Security,"ss information about the “badness” of the violation to the minimiser. The minimiser can use this to compute a gradient to find its way out of the undefined region. This can drastically improve its ability to recover when unstable fit models are used, for example RooPolynomial.; For details, see the RooFit tutorial rf612_recoverFromInvalidParameters.C and arxiv:2012.02746.; Modernised RooDataHist; RooDataHist was partially modernised to improve const-correctness, to reduce side effects as well as its memory footprint, and to make it ready for RooFit’s faster batch evaluations. Derived classes that directly access protected members might need to be updated. This holds especially for direct accesses to _curWeight, _curWeightErrLo, etc, which have been removed. (It doesn’t make sense to write to these members from const functions when the same information can be retrieved using an index access operator of an array.) All similar accesses in derived classes should be replaced by the getters get_curWeight() or better get_wgt(i), which were also supported in ROOT <v6.24. More details on what happened:. Reduced side effects. This code produces undefined behaviour because the side effect of get(i), i.e., loading the new weight into _curWeight is not guaranteed to happen before weight() is called:. processEvent(dataHist.get(i), dataHist.weight()); // Dangerous! Order of evaluation is not guaranteed.; With the modernised interface, one would use:; processEvent(dataHist.get(i), dataHist.weight(i));; To modernise old code, one should replace patterns like h.get(i); h.func() by h.func(i);. One may #define R__SUGGEST_NEW_INTERFACE to switch on deprecation warnings for the functions in question. Similarly, the bin content can now be set using an index, making prior loading of a certain coordinate unnecessary:; for (int i=0 ; i<hist->numEntries() ; i++) {; - hist->get(i) ;; - hist->set(hist->weight() / sum);; + hist->set(i, hist->weight(i) / sum, 0.);; }. More const correctness. calc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/release-notes.html:22764,access,accesses,22764,doc/v624/release-notes.html,https://root.cern,https://root.cern/doc/v624/release-notes.html,1,['access'],['accesses']
Security,"ss to Python objects from Cling is not completely fleshed out. Currently, ROOT objects and built-in types can cross the boundary between the two interpreters, but other objects are much more restricted. For example, for a Python object to cross, it has to be a class instance, and its class has to be known to Cling first (i.e. the class has to cross first, before the instance can). All other cross-coding is based on strings that are run on the Python interpreter and vise-versa.; With the ROOT v4.00/06 and later, the TPython class will be loaded automatically on use, for older editions, the libPyROOT.so needs to be loaded first before use. It is possible to switch between interpreters by calling TPython::Prompt() on the ROOT side, while returning with ^D (EOF). State is preserved between successive switches, and string based cross calls can nest as long as shared resources are properly handled.; // Example: accessing the Python interpreter from ROOT; // either load PyROOT explicitly or rely on auto-loading; root[] gSystem->Load( ""libPyROOT"" );; root[] TPython::Exec(""print1+1"");; 2. // create a TBrowser on the Python side, and transfer it back and forth; root[] TBrowser* b = (void*)TPython::Eval(""ROOT.TBrowser()"");; (class TObject*)0x8d1daa0; root[] TPython::Bind(b,""b"");. // builtin variables can cross-over (after the call i==2); root[] int i = TPython::Eval( ""1+1"" );; root[] i; (int)2; 19.1.4 Installation; There are several ways of obtaining PyROOT, and which is best depends on your specific situation. If you work at CERN, you can use the installation available on afs. Otherwise, you will want to build from source, as PyROOT is not build by default in the binaries distributed from the ROOT project site. If you download the ROOT binaries, take care to download and install the Python distribution from http://www.python.org/ against which they were built.; 19.1.4.1 Environment Settings; ROOT installations with the build of PyROOT enabled are available from the CERN afs ce",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1045937,access,accessing,1045937,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['access'],['accessing']
Security,"ss to data pointer ; Definition at line 75 of file BasicFCN.h. ◆ HasHessian(). template<class DerivFunType , class ModelFunType , class DataType > . virtual bool ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::HasHessian ; (; ); const. inlinevirtual . flag to indicate if can compute Hessian ; Reimplemented from ROOT::Math::BasicFitMethodFunction< DerivFunType >.; Definition at line 84 of file BasicFCN.h. ◆ ModelFunction(). template<class DerivFunType , class ModelFunType , class DataType > . virtual const IModelFunction & ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::ModelFunction ; (; ); const. inlinevirtual . access to const reference to the model function ; Definition at line 78 of file BasicFCN.h. ◆ ModelFunctionPtr(). template<class DerivFunType , class ModelFunType , class DataType > . std::shared_ptr< IModelFunction > ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::ModelFunctionPtr ; (; ); const. inline . access to function pointer ; Definition at line 81 of file BasicFCN.h. ◆ SetData(). template<class DerivFunType , class ModelFunType , class DataType > . void ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::SetData ; (; const std::shared_ptr< DataType > & ; data). inlineprotected . Set the data pointer. ; Definition at line 98 of file BasicFCN.h. ◆ SetModelFunction(). template<class DerivFunType , class ModelFunType , class DataType > . void ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::SetModelFunction ; (; const std::shared_ptr< IModelFunction > & ; func). inlineprotected . Set the function pointer. ; Definition at line 101 of file BasicFCN.h. Member Data Documentation. ◆ fData. template<class DerivFunType , class ModelFunType , class DataType > . std::shared_ptr<DataType> ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::fData. protected . Definition at line 104 of file BasicFCN.h. ◆ fFunc. template<class DerivFunType , class ModelFunType , class DataType > . std::shared_ptr<IM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1BasicFCN.html:7550,access,access,7550,doc/master/classROOT_1_1Fit_1_1BasicFCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1BasicFCN.html,1,['access'],['access']
Security,"ss } from 'https://root.cern/js/latest/modules/tree.mjs';. let file = await openFile(""https://root.cern/js/files/hsimple.root"");; let tree = await file.readObject(""ntuple;1"");; let selector = new TSelector();. selector.AddBranch(""px"");; selector.AddBranch(""py"");. let cnt = 0, sumpx = 0, sumpy = 0;. selector.Begin = function() {; // function called before reading of TTree starts; }. selector.Process = function() {; // function called for every entry; sumpx += this.tgtobj.px;; sumpy += this.tgtobj.py;; cnt++;; }. selector.Terminate = function(res) {; if (!res || (cnt === 0)) return;; let meanpx = sumpx/cnt, meanpy = sumpy/cnt;; console.log(`Results meanpx = ${meanpx} meanpy = ${meanpy}`);; }. await treeProcess(tree, selector);; Here is running example and source code; This examples shows how read TTree from binary file and create TSelector object. Logically it is similar to original TSelector class - for every read entry TSelector::Process() method is called. Selected branches can be accessed from tgtobj data member. At the end of tree reading TSelector::Terminate() method will be called.; As third parameter of treeProcess() function one could provide object with arguments; let args = { numentries: 1000, firstentry: 500 };; treeProcess(tree, selector, args);; 1.11.6 TGeo API; Any supported TGeo object can be drawn directly with normal draw() function.; If necessary, one can create three.js model for supported object directly and use such model separately. This can be done with the function:; import { build } from './path_to_jsroot/modules/geom/TGeoPainter.mjs';; let opt = { numfaces: 100000 };; let obj3d = build(obj, opt);; scene.add( obj3d );; Following options can be specified:. numfaces - approximate maximal number of faces in three.js model (default 100000); numnodes - approximate maximal number of meshes in three.js model (default 1000); doubleside - use double-side material (default only front side is set); wireframe - show wireframe for created object (default -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html:30161,access,accessed,30161,root/htmldoc/guides/JSROOT/JSROOT.html,https://root.cern,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html,1,['access'],['accessed']
Security,"ss  ROOT::Experimental::RNTupleChainProcessor;  Processor specializiation for vertically concatenated RNTuples (chains). More...;  ; class  ROOT::Experimental::RNTupleClusterRange;  Used to loop over entries of collections in a single cluster. More...;  ; class  ROOT::Experimental::RNTupleCollectionView;  A view for a collection, that can itself generate new ntuple views for its nested fields. More...;  ; class  ROOT::Experimental::Internal::RNTupleCompressor;  Helper class to compress data blocks in the ROOT compression frame format. More...;  ; class  ROOT::Experimental::Internal::RNTupleDecompressor;  Helper class to uncompress data blocks in the ROOT compression frame format. More...;  ; class  ROOT::Experimental::RNTupleDescriptor;  The on-storage meta-data of an ntuple. More...;  ; class  ROOT::Experimental::Internal::RNTupleDescriptorBuilder;  A helper class for piece-wise construction of an RNTupleDescriptor. More...;  ; class  ROOT::Experimental::RNTupleDirectAccessView< T >;  A view variant that provides direct access to the I/O buffers. More...;  ; class  ROOT::Experimental::Internal::RNTupleFileWriter;  Write RNTuple data blocks in a TFile or a bare file container. More...;  ; class  ROOT::Experimental::RNTupleFillContext;  A context for filling entries (data) into clusters of an RNTuple. More...;  ; class  ROOT::Experimental::RNTupleFillStatus;  A status object after filling an entry. More...;  ; class  ROOT::Experimental::RNTupleFormatter;  Contains helper functions for RNTupleReader::PrintInfo() and RPrintSchemaVisitor::VisitField() More...;  ; class  ROOT::Experimental::RNTupleGlobalRange;  Used to loop over indexes (entries or collections) between start and end. More...;  ; class  ROOT::Experimental::RNTupleImporter;  Converts a TTree into an RNTuple. More...;  ; class  ROOT::Experimental::Internal::RNTupleIndex;  Builds an index on one or several fields of an RNTuple so it can be joined onto other RNTuples. More...;  ; class  ROOT::Experimental::RNT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__NTuple.html:7800,access,access,7800,doc/master/group__NTuple.html,https://root.cern,https://root.cern/doc/master/group__NTuple.html,1,['access'],['access']
Security,"ss() const; TDataType*GetDataType() const; TDictionary::DeclId_tGetDeclId() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; Int_tGetMaxIndex(Int_t dim) const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Long_tGetOffset() const; Long_tGetOffsetCint() const; virtual Option_t*TObject::GetOption() const; TList*GetOptions() const; TMethodCall*GetterMethod(TClass* cl = 0); virtual const char*TNamed::GetTitle() const; const char*GetTrueTypeName() const; const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGetUnitSize() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsaPointer() const; Bool_tIsBasic() const; Bool_tIsEnum() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsPersistent() const; virtual Bool_tTNamed::IsSortable() const; Int_tIsSTLContainer(); Bool_tIsValid(); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDataMember.html:7800,Hash,Hash,7800,root/html602/TDataMember.html,https://root.cern,https://root.cern/root/html602/TDataMember.html,2,['Hash'],['Hash']
Security,"ss(this);; 1526 return;; 1527 }; 1528 }; 1529 }; 1530 }; 1531 }; 1532 if (!silent && (!fClassInfo && !fCanLoadClassInfo) && !isStl && !TClassEdit::IsArtificial(fName) &&; 1533 !TClassEdit::IsInterpreterDetail(fName.Data()) ) {; 1534 if (fState == kHasTClassInit) {; 1535 if (fImplFileLine == -1 && fClassVersion == 0) {; 1536 // We have a 'transient' class with a ClassDefInline and apparently no interpreter; 1537 // information. Since it is transient, it is more than likely that the lack; 1538 // will be harmles.; 1539 } else {; 1540 ::Error(""TClass::Init"", ""no interpreter information for class %s is available even though it has a TClass ""; 1541 ""initialization routine."",; 1542 fName.Data());; 1543 }; 1544 } else {; 1545 const bool ispairbase = TClassEdit::IsStdPairBase(fName.Data()) && !IsFromRootCling();; 1546 if (!ispairbase); 1547 ::Warning(""TClass::Init"", ""no dictionary for class %s is available"", fName.Data());; 1548 }; 1549 }; 1550 ; 1551 fgClassCount++;; 1552 SetUniqueID(fgClassCount);; 1553 ; 1554 // Make the typedef-expanded -> original hash table entries.; 1555 // There may be several entries for any given key.; 1556 // We only make entries if the typedef-expanded name; 1557 // is different from the original name.; 1558 TString resolvedThis;; 1559 if (!givenInfo && strchr (name, '<')) {; 1560 if ( fName != name) {; 1561 if (!fgClassTypedefHash) {; 1562 fgClassTypedefHash = new THashTable (100, 5);; 1563 fgClassTypedefHash->SetOwner (kTRUE);; 1564 }; 1565 ; 1566 fgClassTypedefHash->Add (new TNameMapNode (name, fName));; 1567 SetBit (kHasNameMapNode);; 1568 ; 1569 }; 1570 resolvedThis = TClassEdit::ResolveTypedef (name, kTRUE);; 1571 if (resolvedThis != name) {; 1572 if (!fgClassTypedefHash) {; 1573 fgClassTypedefHash = new THashTable (100, 5);; 1574 fgClassTypedefHash->SetOwner (kTRUE);; 1575 }; 1576 ; 1577 fgClassTypedefHash->Add (new TNameMapNode (resolvedThis, fName));; 1578 SetBit (kHasNameMapNode);; 1579 }; 1580 ; 1581 }; 1582 ; 1583 //In case a class w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:60132,hash,hash,60132,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['hash'],['hash']
Security,"ss(this);; 1593 return;; 1594 }; 1595 }; 1596 }; 1597 }; 1598 }; 1599 if (!silent && (!fClassInfo && !fCanLoadClassInfo) && !isStl && !TClassEdit::IsArtificial(fName) &&; 1600 !TClassEdit::IsInterpreterDetail(fName.Data()) ) {; 1601 if (fState == kHasTClassInit) {; 1602 if (fImplFileLine == -1 && fClassVersion == 0) {; 1603 // We have a 'transient' class with a ClassDefInline and apparently no interpreter; 1604 // information. Since it is transient, it is more than likely that the lack; 1605 // will be harmles.; 1606 } else {; 1607 ::Error(""TClass::Init"", ""no interpreter information for class %s is available even though it has a TClass ""; 1608 ""initialization routine."",; 1609 fName.Data());; 1610 }; 1611 } else {; 1612 const bool ispairbase = TClassEdit::IsStdPairBase(fName.Data()) && !IsFromRootCling();; 1613 if (!ispairbase); 1614 ::Warning(""TClass::Init"", ""no dictionary for class %s is available"", fName.Data());; 1615 }; 1616 }; 1617 ; 1618 fgClassCount++;; 1619 SetUniqueID(fgClassCount);; 1620 ; 1621 // Make the typedef-expanded -> original hash table entries.; 1622 // There may be several entries for any given key.; 1623 // We only make entries if the typedef-expanded name; 1624 // is different from the original name.; 1625 TString resolvedThis;; 1626 if (!givenInfo && strchr (name, '<')) {; 1627 if ( fName != name) {; 1628 if (!fgClassTypedefHash) {; 1629 fgClassTypedefHash = new THashTable (100, 5);; 1630 fgClassTypedefHash->SetOwner (kTRUE);; 1631 }; 1632 ; 1633 fgClassTypedefHash->Add (new TNameMapNode (name, fName));; 1634 SetBit (kHasNameMapNode);; 1635 ; 1636 }; 1637 resolvedThis = TClassEdit::ResolveTypedef (name, kTRUE);; 1638 if (resolvedThis != name) {; 1639 if (!fgClassTypedefHash) {; 1640 fgClassTypedefHash = new THashTable (100, 5);; 1641 fgClassTypedefHash->SetOwner (kTRUE);; 1642 }; 1643 ; 1644 fgClassTypedefHash->Add (new TNameMapNode (resolvedThis, fName));; 1645 SetBit (kHasNameMapNode);; 1646 }; 1647 ; 1648 }; 1649 ; 1650 //In case a class w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:62883,hash,hash,62883,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['hash'],['hash']
Security,"ss* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); Long64_t&operator()(Long64_t key); Long64_t&operator()(ULong64_t hash, Long64_t key); TExMap&operator=(const TExMap&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidRemove(Long64_t key); voidRemove(ULong64_t hash, Long64_t key); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysErro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TExMap.html:3882,hash,hash,3882,root/html602/TExMap.html,https://root.cern,https://root.cern/root/html602/TExMap.html,2,['hash'],['hash']
Security,"ss,; 5002/// kFALSE otherwise.; 5003 ; 5004Bool_t TFile::Cp(const char *dst, Bool_t progressbar, UInt_t buffersize); 5005{; 5006 Bool_t rmdestiferror = kFALSE;; 5007 TStopwatch watch;; 5008 Bool_t success = kFALSE;; 5009 ; 5010 TUrl dURL(dst, kTRUE);; 5011 ; 5012 TString oopt = ""RECREATE"";; 5013 TString ourl = dURL.GetUrl();; 5014 ; 5015 // Files will be open in RAW mode; 5016 TString raw = ""filetype=raw"";; 5017 ; 5018 // Set optimization options for the destination file; 5019 TString opt = dURL.GetOptions();; 5020 if (opt != """") opt += ""&"";; 5021 opt += raw;; 5022 ; 5023 // AliEn files need to know where the source file is; 5024 if (!strcmp(dURL.GetProtocol(), ""alien"")); 5025 opt += TString::Format(""&source=%s"", GetName());; 5026 ; 5027 dURL.SetOptions(opt);; 5028 ; 5029 char *copybuffer = nullptr;; 5030 ; 5031 TFile *sfile = this;; 5032 TFile *dfile = nullptr;; 5033 ; 5034 // ""RECREATE"" does not work always well with XROOTD; 5035 // namely when some pieces of the path are missing;; 5036 // we force ""NEW"" in such a case; 5037 if (TFile::GetType(ourl, """") == TFile::kNet) {; 5038 if (gSystem->AccessPathName(ourl)) {; 5039 oopt = ""NEW"";; 5040 // Force creation of the missing parts of the path; 5041 opt += ""&mkpath=1"";; 5042 dURL.SetOptions(opt);; 5043 }; 5044 }; 5045 ; 5046 // Open destination file; 5047 if (!(dfile = TFile::Open(dURL.GetUrl(), oopt))) {; 5048 ::Error(""TFile::Cp"", ""cannot open destination file %s"", dst);; 5049 goto copyout;; 5050 }; 5051 ; 5052 // Probably we created a new file; 5053 // We have to remove it in case of errors; 5054 rmdestiferror = kTRUE;; 5055 ; 5056 sfile->Seek(0);; 5057 dfile->Seek(0);; 5058 ; 5059 copybuffer = new char[buffersize];; 5060 if (!copybuffer) {; 5061 ::Error(""TFile::Cp"", ""cannot allocate the copy buffer"");; 5062 goto copyout;; 5063 }; 5064 ; 5065 Bool_t readop, writeop;; 5066 Long64_t read, written, totalread, filesize, b00;; 5067 ; 5068 totalread = 0;; 5069 filesize = sfile->GetSize();; 5070 ; 5071 watch.Start();; 5072 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:183975,Access,AccessPathName,183975,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['Access'],['AccessPathName']
Security,"ss. It has list to baseclasses, datamembers and methods. TClass(const TClass& tc); copy constructor. TClass& operator=(const TClass& ); assignement operator. ~TClass(); TClass dtor. Deletes all list that might have been created. Int_t ReadRules(); Read the class.rules files from the default location:.; $ROOTSYS/etc/class.rules (or ROOTETCDIR/class.rules). Int_t ReadRules(const char* filename); Read a class.rules file which contains one rule per line with comment; starting with a #; Returns the number of rules loaded.; Returns -1 in case of error. Bool_t AddRule(const char* rule); Add a schema evolution customization rule.; The syntax of the rule can be either the short form:; [type=Read] classname membername [attributes=... ] [version=[...] ] [checksum=[...] ] [oldtype=...] [code={...}]; or the long form; [type=Read] sourceClass=classname [targetclass=newClassname] [ source=""type membername; [type2 membername2]"" ]; [target=""membername3;membername4""] [attributes=... ] [version=...] [checksum=...] [code={...}|functionname]. For example to set HepMC::GenVertex::m_event to _not_ owned the object it is pointing to:; HepMC::GenVertex m_event attributes=NotOwner. Semantic of the tags:; type : the type of the rule, valid values: Read, ReadRaw, Write, WriteRaw, the default is 'Read'.; sourceClass : the name of the class as it is on the rule file; targetClass : the name of the class as it is in the current code ; defaults to the value of sourceClass; source : the types and names of the data members from the class on file that are needed, the list is separated by semi-colons ';'; oldtype: in the short form only, indicates the type on disk of the data member.; target : the names of the data members updated by this rule, the list is separated by semi-colons ';'; attributes : list of possible qualifiers amongs:; Owner, NotOwner; version : list of the version of the class layout that this rule applies to. The syntax can be [1,4,5] or [2-] or [1-3] or [-3]; checksum : comma delimite",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TClass.html:19605,checksum,checksum,19605,root/html528/TClass.html,https://root.cern,https://root.cern/root/html528/TClass.html,4,['checksum'],['checksum']
Security,"ss;; 857 if (scopeEnumeration.Contains(""(unnamed)"")) {; 858 // FIXME: need to investigate the numbering scheme.; 859 md5EnumClass.Append(scopeName);; 860 md5EnumClass.Append(""::@1@1"");; 861 } else {; 862 // If the enumeration is not anonymous we put ""scopeName::Enumeration"" in a TString,; 863 // which will be hashed with MD5 later.; 864 md5EnumClass.Append(scopeEnumeration);; 865 // We extract the part after ""::"" (this is the enumerator name).; 866 TString enumOnlyName = TClassEdit::GetUnqualifiedName(scopeEnumeration);; 867 // The syntax is ""Class::EnumeratorEnumerator; 868 md5EnumClass.Append(enumOnlyName);; 869 }; 870 // The next part of the URL is hashed ""@ scopeName::EnumeratorEnumerator"".; 871 TString md5Enumerator(""@ "");; 872 md5Enumerator.Append(scopeName);; 873 md5Enumerator.Append(""::"");; 874 md5Enumerator.Append(dataMemberName);; 875 md5Enumerator.Append(dataMemberName);; 876 // We make the URL for the ""scopeName"".; 877 TString url = UrlGenerator(scopeName, scopeType);; 878 // Then we have to append the hashed text for the enumerator.; 879 url.Append(""#a"");; 880 url.Append(md5EnumClass.MD5());; 881 // We append ""a"" and then the next hashed text.; 882 url.Append(""a"");; 883 url.Append(md5Enumerator.MD5());; 884 return url;; 885}; 886} // namespace; 887 ; 888namespace {; 889////////////////////////////////////////////////////////////////////////////////; 890/// The function generates URL for enumeration. The hashed text consist of:; 891/// ""Class::EnumerationEnumeration"".; 892///; 893/// \param[in] scopeName the name of the class/namespace/struct; 894/// \param[in] enumeration the name of the enumeration; 895/// \param[in] scopeType enumerator for class/namespace/struct; 896 ; 897static TString GetUrlForEnumeration(TString scopeName, const TString &enumeration, EUrl scopeType); 898{; 899 // The URL consists of URL for the ""scopeName"", ""#a"" and hashed as MD5 text.; 900 // The text is ""Class::EnumerationEnumeration.; 901 TString md5Enumeration(scopeName);; 902",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8cxx_source.html:32936,hash,hashed,32936,doc/master/TApplication_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8cxx_source.html,1,['hash'],['hashed']
Security,"ssID uniquely identifies a ROOT job. The TProcessID title consists of a TUUID object, which provides a globally unique identifier. The TUUID class implements the UUID (Universally Unique Identifier), also known as GUID (Globally Unique Identifier). A UUID is 128 bits long, and if generated according to this algorithm, is either guaranteed to be different from all other UUID generated until 3400 A.D. or extremely likely to be different.; The TROOT constructor automatically creates a TProcessID. When a TFile contains referenced objects, the TProcessID object is written to the file. If a file has been written in multiple sessions (same machine or not), a TProcessID is written for each session. The TProcessID objects are used by TRef to uniquely identify the referenced TObject.; When a referenced object is read from a file (its bit kIsReferenced is set), this object is entered into the objects table of the corresponding TProcessID. Each TFile has a list of TProcessIDs (see TFile::fProcessIDs) also accessible from TProcessID::fgPIDs (for all files). When this object is deleted, it is removed from the table via the cleanup mechanism invoked by the TObject destructor. Each TProcessID has a table (TObjArray *fObjects) that keeps track of all referenced objects. If a referenced object has a fUniqueID, a pointer to this unique object may be found using fObjects->At(fUniqueID). In the same way, when a TRef::GetObject is called, GetObject uses its own fUniqueID to find the pointer to the referenced object. See TProcessID::GetObjectWithID and PutObjectWithID.; 11.4.4.2 Object Number; When an object is referenced, a unique identifier is computed and stored in both the fUniqueID of the referenced and referencing object. This uniqueID is computed by incrementing by one the static global in TProcessID::fgNumber. The fUniqueID is the serial object number in the current session. One can retrieve the current fgNumber value by calling the static function TProcessID::GetObjectCount at any",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:483980,access,accessible,483980,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['access'],['accessible']
Security,"ssOffsetRecurse(const TClass* toBase); Return data member offset to the base class ""cl"".; Returns -1 in case ""cl"" is not a base class.; Returns -2 if cl is a base class, but we can't find the offset; because it's virtual.; Takes care of multiple inheritance. Int_t GetBaseClassOffset(const TClass* toBase, void* address = 0, bool isDerivedObject = true); Return data member offset to the base class ""cl"".; Returns -1 in case ""cl"" is not a base class.; Takes care of multiple inheritance. TClass * GetBaseDataMember(const char* datamember); Return pointer to (base) class that contains datamember. TVirtualCollectionProxy * GetCollectionProxy() const; Return the proxy describing the collection (if any). TClassStreamer * GetStreamer() const; Return the Streamer Class allowing streaming (if any). ClassStreamerFunc_t GetStreamerFunc() const; Get a wrapper/accessor function around this class custom streamer (member function). ClassConvStreamerFunc_t GetConvStreamerFunc() const; Get a wrapper/accessor function around this class custom conversion streamer (member function). TVirtualIsAProxy* GetIsAProxy() const; Return the proxy implementing the IsA functionality. TClass * GetClass(const char* name, Bool_t load = kTRUE, Bool_t silent = kFALSE); Static method returning pointer to TClass of the specified class name.; If load is true an attempt is made to obtain the class by loading; the appropriate shared library (directed by the rootmap file).; If silent is 'true', do not warn about missing dictionary for the class.; (typically used for class that are used only for transient members); Returns 0 in case class is not found. TClass * GetClass(const type_info& typeinfo, Bool_t load = kTRUE, Bool_t silent = kFALSE); Return pointer to class with name. TClass * GetClass(ClassInfo_t* info, Bool_t load = kTRUE, Bool_t silent = kFALSE); Static method returning pointer to TClass of the specified ClassInfo.; If load is true an attempt is made to obtain the class by loading; the appropriate shar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClass.html:34869,access,accessor,34869,root/html602/TClass.html,https://root.cern,https://root.cern/root/html602/TClass.html,1,['access'],['accessor']
Security,"ssible collection. void SetCurrentCollection(); Set this collection to be the globally accesible collection. void StartGarbageCollection(); Set up for garbage collection. void EmptyGarbageCollection(); Do the garbage collection. void GarbageCollect(TObject* obj); Add to the list of things to be cleaned up. void SetOwner(Bool_t enable = kTRUE); Set whether this collection is the owner (enable==true); of its content. If it is the owner of its contents,; these objects will be deleted whenever the collection itself; is delete. The objects might also be deleted or destructed when Clear; is called (depending on the collection). void operator=(const TCollection& ). virtual ~TCollection(); { }. void Add(TObject* obj). Int_t Capacity() const; { return fSize; }. void Clear(Option_t* option = """"). Bool_t Contains(const char* name) const; { return FindObject(name) != 0; }. Bool_t Contains(const TObject* obj) const; { return FindObject(obj) != 0; }. void Delete(Option_t* option = """"). Int_t GetEntries() const; { return GetSize(); }. TObject ** GetObjectRef(const TObject* obj) const. Int_t GetSize() const; { return fSize; }. ULong_t Hash() const; { return fName.Hash(); }. Bool_t IsEmpty() const; { return GetSize() <= 0; }. Bool_t IsFolder() const; { return kTRUE; }. Bool_t IsOwner() const; { return TestBit(kIsOwner); }. Bool_t IsSortable() const; { return kTRUE; }. TIterator * MakeIterator(Bool_t dir = kIterForward) const. TIterator * MakeReverseIterator() const; { return MakeIterator(kIterBackward); }. TObject * Remove(TObject* obj). void RemoveAll(TCollection* col). void SetName(const char* name); { fName = name; }. » Author: Fons Rademakers 13/08/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id: TCollection.h 37411 2010-12-08 17:42:11Z pcanal $ » Last generated: 2010-12-08 19:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TCollection.html:14428,Hash,Hash,14428,root/html528/TCollection.html,https://root.cern,https://root.cern/root/html528/TCollection.html,2,['Hash'],['Hash']
Security,"ssible collection. void SetCurrentCollection(); Set this collection to be the globally accesible collection. void StartGarbageCollection(); Set up for garbage collection. void EmptyGarbageCollection(); Do the garbage collection. void GarbageCollect(TObject* obj); Add to the list of things to be cleaned up. void SetOwner(Bool_t enable = kTRUE); Set whether this collection is the owner (enable==true); of its content. If it is the owner of its contents,; these objects will be deleted whenever the collection itself; is delete. The objects might also be deleted or destructed when Clear; is called (depending on the collection). void operator=(const TCollection& ). virtual ~TCollection(); { }. void Add(TObject* obj). Int_t Capacity() const; { return fSize; }. void Clear(Option_t* option = """"). Bool_t Contains(const char* name) const; { return FindObject(name) != 0; }. Bool_t Contains(const TObject* obj) const; { return FindObject(obj) != 0; }. void Delete(Option_t* option = """"). Int_t GetEntries() const; { return GetSize(); }. TObject ** GetObjectRef(const TObject* obj) const. Int_t GetSize() const; { return fSize; }. ULong_t Hash() const; { return fName.Hash(); }. Bool_t IsEmpty() const; { return GetSize() <= 0; }. Bool_t IsFolder() const; { return kTRUE; }. Bool_t IsOwner() const; { return TestBit(kIsOwner); }. Bool_t IsSortable() const; { return kTRUE; }. TIterator * MakeIterator(Bool_t dir = kIterForward) const. TIterator * MakeReverseIterator() const; { return MakeIterator(kIterBackward); }. TObject * Remove(TObject* obj). void RemoveAll(TCollection* col). void SetName(const char* name); { fName = name; }. » Author: Fons Rademakers 13/08/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id: TCollection.h 37411 2010-12-08 17:42:11Z pcanal $ » Last generated: 2011-07-04 15:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TCollection.html:14497,Hash,Hash,14497,root/html530/TCollection.html,https://root.cern,https://root.cern/root/html530/TCollection.html,2,['Hash'],['Hash']
Security,"ssible collection. void SetCurrentCollection(); Set this collection to be the globally accesible collection. void StartGarbageCollection(); Set up for garbage collection. void EmptyGarbageCollection(); Do the garbage collection. void GarbageCollect(TObject* obj); Add to the list of things to be cleaned up. void SetOwner(Bool_t enable = kTRUE); Set whether this collection is the owner (enable==true); of its content. If it is the owner of its contents,; these objects will be deleted whenever the collection itself; is delete. The objects might also be deleted or destructed when Clear; is called (depending on the collection). void operator=(const TCollection& ). virtual ~TCollection(); { }. void Add(TObject* obj). Int_t Capacity() const; { return fSize; }. void Clear(Option_t* option = """"). Bool_t Contains(const char* name) const; { return FindObject(name) != 0; }. Bool_t Contains(const TObject* obj) const; { return FindObject(obj) != 0; }. void Delete(Option_t* option = """"). Int_t GetEntries() const; { return GetSize(); }. TObject ** GetObjectRef(const TObject* obj) const. Int_t GetSize() const; { return fSize; }. ULong_t Hash() const; { return fName.Hash(); }. Bool_t IsEmpty() const; { return GetSize() <= 0; }. Bool_t IsFolder() const; { return kTRUE; }. Bool_t IsOwner() const; { return TestBit(kIsOwner); }. Bool_t IsSortable() const; { return kTRUE; }. TIterator * MakeIterator(Bool_t dir = kIterForward) const. TIterator * MakeReverseIterator() const; { return MakeIterator(kIterBackward); }. TObject * Remove(TObject* obj). void RemoveAll(TCollection* col). void SetName(const char* name); { fName = name; }. » Author: Fons Rademakers 13/08/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id: TCollection.h 37411 2010-12-08 17:42:11Z pcanal $ » Last generated: 2011-11-03 20:10; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TCollection.html:14497,Hash,Hash,14497,root/html532/TCollection.html,https://root.cern,https://root.cern/root/html532/TCollection.html,2,['Hash'],['Hash']
Security,"ssification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. TStringfHiddenLayerstring containig the hidden layer structure; TStringfLayerSpecLayer specification option; TStringfLearningMethodthe learning method (given via option string); TTree*fLocalTrainingTreelocal copy of training tree; TMultiLayerPerceptron*fMLPthe TMLP; TStringfMLPBuildOptionsoption string to build the mlp; Int_tfNcyclesnumber of training cylcles; Double_tfValidationFractionfraction of events in training tree used for cross validation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodTMlpANN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0); standard constructor. MethodTMlpANN(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); TMlpANN can handle classification with 2 classes. void Init( void ); default initialisations. ~MethodTMlpANN( void ); destructor. void CreateMLPOptions(TString ); translates options from option string into TMlpANN language. void DeclareOptions(); define t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodTMlpANN.html:16777,validat,validation,16777,root/html530/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodTMlpANN.html,3,['validat'],['validation']
Security,"ssification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. TStringfHiddenLayerstring containig the hidden layer structure; TStringfLayerSpecLayer specification option; TStringfLearningMethodthe learning method (given via option string); TTree*fLocalTrainingTreelocal copy of training tree; TMultiLayerPerceptron*fMLPthe TMLP; TStringfMLPBuildOptionsoption string to build the mlp; Int_tfNcyclesnumber of training cylcles; Double_tfValidationFractionfraction of events in training tree used for cross validation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodTMlpANN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0); standard constructor. MethodTMlpANN(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = __null); constructor from weight file. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); TMlpANN can handle classification with 2 classes. void Init( void ); default initialisations. ~MethodTMlpANN( void ); destructor. void CreateMLPOptions(TString ); translates options from option string into TMlpANN language. void DeclareOptions(); define",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodTMlpANN.html:18025,validat,validation,18025,root/html602/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodTMlpANN.html,2,['validat'],['validation']
Security,"ssing key: \"""" + key + ""\""\n"";; 237 error_string += ""Expected \"" at the end of the value."";; 238 return false;; 239 }; 240 result[key] = command.substr( 1, l-1 );; 241 } else {; 242 l = command.find(' ', 1);; 243 if (l == std::string::npos) l = command.size();; 244 result[key] = command.substr( 0, l );; 245 }; 246 }; 247 ; 248 //--------------------------------------------------------------------; 249 // Everything went ok; 250 ///////////////////////////////////////////////////////////////////////; 251 ; 252 if( l == command.size() ); 253 break;; 254 command = command.substr( l+1 );; 255 }; 256 std::map<std::string, std::string>::const_iterator it1;; 257 it1 = result.find(""oldtype"");; 258 if ( it1 != result.end() ) {; 259 std::map<std::string, std::string>::const_iterator it2;; 260 it2 = result.find(""source"");; 261 if ( it2 != result.end() ) {; 262 result[""source""] = it1->second + "" "" + it2->second;; 263 }; 264 }; 265 if ( result.find(""version"") == result.end() && result.find(""checksum"") == result.end() ) {; 266 result[""version""] = ""[1-]"";; 267 }; 268 ; 269 //------------------------------------------------------------------------; 270 // ""include"" tag. Replace "";"" with "","" for backwards compatibility with; 271 // ROOT5; 272 //////////////////////////////////////////////////////////////////////////; 273 ; 274 auto const includeKeyName = ""include"";; 275 auto includeTag = result.find(includeKeyName);; 276 if (includeTag != result.end()){; 277 auto & includeTagValue = includeTag->second;; 278 std::replace_if (includeTagValue.begin(),; 279 includeTagValue.end(),; 280 [](char c){ return c == ';';},; 281 ',');; 282 result[includeKeyName] = includeTagValue;; 283 }; 284 ; 285 return ValidateRule( result, error_string);; 286 }; 287 ; 288 /////////////////////////////////////////////////////////////////////////////; 289 /// Validate if the user specified rules are correct; 290 ; 291 static Bool_t ValidateRule( const std::map<std::string, std::string>& rule, std::string &error",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html:9715,checksum,checksum,9715,doc/master/RConversionRuleParser_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html,2,['checksum'],['checksum']
Security,"ssion(Int_t , Option_t* = """"); Detach session with 'id' from its proofserv. The 'id' is the number; shown by QuerySessions. The correspondent TProof object is deleted.; If id == 0 all the known sessions are detached.; Option opt=""S"" or ""s"" forces session shutdown. void DetachSession(TProof* , Option_t* = """"); Detach session 'p' from its proofserv. The instance 'p' is invalidated; and should be deleted by the caller. Bool_t MatchUrl(const char* url); Checks if 'url' refers to the same 'user@host:port' entity as the URL; in memory. TProofMgr::MatchUrl cannot be used here because of the; 'double' default port, implying an additional check on the port effectively; open. void ShowWorkers(); Show available workers. const char * GetMssUrl(Bool_t = kFALSE); Gets the URL to be prepended to paths when accessing the MSS associated; with the connected cluster, if any. The information is retrieved from; the cluster the first time or if retrieve is true. TList * QuerySessions(Option_t* opt = ""S""); Get list of sessions accessible to this manager. Bool_t HandleInput(const void* ); Handle asynchronous input on the socket. Bool_t HandleError(const void* in = 0); Handle error on the input socket. Int_t Reset(Bool_t hard = kFALSE, const char* usr = 0); Send a cleanup request for the sessions associated with the current user.; If 'hard' is true sessions are signalled for termination and moved to; terminate at all stages (top master, sub-master, workers). Otherwise; (default) only top-master sessions are asked to terminate, triggering; a gentle session termination. In all cases all sessions should be gone; after a few (2 or 3) session checking cycles.; A user with superuser privileges can also asks cleaning for an different; user, specified by 'usr', or for all users (usr = *); Return 0 on success, -1 in case of error. TProofLog * GetSessionLogs(Int_t ridx = 0, const char* stag = 0, const char* pattern = ""-v \""| SvcMsg\"""", Bool_t rescan = kFALSE); Get logs or log tails from last session a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TXProofMgr.html:11528,access,accessible,11528,root/html534/TXProofMgr.html,https://root.cern,https://root.cern/root/html534/TXProofMgr.html,3,['access'],['accessible']
Security,"ssionDefinition TApplication.h:49; TApplication::NoLogOptBool_t NoLogOpt() constDefinition TApplication.h:143; TApplication::NoLogoOptBool_t NoLogoOpt() constDefinition TApplication.h:144; TApplication::WorkingDirectoryconst char * WorkingDirectory() constDefinition TApplication.h:147; TApplication::QuitOptBool_t QuitOpt() constDefinition TApplication.h:145; TApplication::ArgcInt_t Argc() constDefinition TApplication.h:140; TApplication::ProcessRemotevirtual Longptr_t ProcessRemote(const char *line, Int_t *error=nullptr)Process the content of a line starting with "".R"" (already stripped-off) The format is.Definition TApplication.cxx:1485; TApplication::fAppRemoteTApplication * fAppRemoteDefinition TApplication.h:80; TApplication::SetSignalHandlervoid SetSignalHandler(TSignalHandler *sh)Definition TApplication.h:92; TBenchmarkThis class is a ROOT utility to help benchmarking applications.Definition TBenchmark.h:29; TClassTable::GetDictstatic DictFuncPtr_t GetDict(const char *cname)Given the class name returns the Dictionary() function of a class (uses hash of name).Definition TClassTable.cxx:674; TEnv::GetValuevirtual Int_t GetValue(const char *name, Int_t dflt) constReturns the integer value for a resource.Definition TEnv.cxx:491; TFileHandlerDefinition TSysEvtHandler.h:65; TFileHandler::Removevoid Remove() overrideRemove file event handler from system file handler list.Definition TSysEvtHandler.cxx:137; TFileHandler::Addvoid Add() overrideAdd file event handler to system file handler list.Definition TSysEvtHandler.cxx:126; TInterpreter::GetPromptvirtual char * GetPrompt()=0; TInterpreter::SaveGlobalsContextvirtual void SaveGlobalsContext()=0; TInterpreter::EndOfLineActionvirtual void EndOfLineAction()=0; TInterpreter::Resetvirtual void Reset()=0; TInterpreter::SetGetlinevirtual void SetGetline(const char *(*getlineFunc)(const char *prompt), void(*histaddFunc)(const char *line))=0; TInterpreter::SaveContextvirtual void SaveContext()=0; TInterpreter::GetMorevirtual Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRint_8cxx_source.html:34654,hash,hash,34654,doc/master/TRint_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRint_8cxx_source.html,1,['hash'],['hash']
Security,"ssionSettings() const; virtual Int_tGetDescriptor() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetErrorCode() const; virtual const char*TObject::GetIconName() const; TInetAddressGetInetAddress() const; TTimeStampGetLastUsage(); virtual TInetAddressGetLocalInetAddress(); virtual Int_tGetLocalPort(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tGetOption(ESockOptions opt, Int_t& val); Int_tGetPort() const; Int_tGetRemoteProtocol() const; TSecContext*GetSecContext() const; const char*GetService() const; Int_tGetServType() const; static ULong64_tGetSocketBytesRecv(); static ULong64_tGetSocketBytesSent(); Int_tGetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidNetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSocket.html:3767,Hash,Hash,3767,root/html530/TSocket.html,https://root.cern,https://root.cern/root/html530/TSocket.html,3,['Hash'],['Hash']
Security,"ssionSettings() const; virtual Int_tGetDescriptor() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetErrorCode() const; virtual const char*TObject::GetIconName() const; TInetAddressGetInetAddress() const; TTimeStampGetLastUsage(); virtual TInetAddressGetLocalInetAddress(); virtual Int_tGetLocalPort(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tGetOption(ESockOptions opt, Int_t& val); Int_tGetPort() const; Int_tGetRemoteProtocol() const; TSecContext*GetSecContext() const; const char*GetService() const; Int_tGetServType() const; static ULong64_tGetSocketBytesRecv(); static ULong64_tGetSocketBytesSent(); Int_tGetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidNetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator dele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSocket.html:3371,Hash,Hash,3371,root/html602/TSocket.html,https://root.cern,https://root.cern/root/html602/TSocket.html,2,['Hash'],['Hash']
Security,"sson, Efficiency - Gaussian. ;  ; void SetPoissonBkgKnownEff (Int_t x, Int_t y, Double_t tau, Double_t e);  Model 4: Background - Poisson, Efficiency - known (x,y,tau,e) ;  ; void SetSwitch (bool bnd);  Deprecated name for SetBounding. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRolke.html:9428,Hash,Hash,9428,doc/master/classTRolke.html,https://root.cern,https://root.cern/doc/master/classTRolke.html,2,['Hash'],['Hash']
Security,"ssum of all event weights; vector<const TMVA::Event*>*fTrainSamplepointer to sample actually used in training (fEventSample or fSubSample) for example; Bool_tfTrainWithNegWeightsyes there are negative event weights and we don't ignore them; Double_tfTransitionPointbreak-down point for gradient regression; Bool_tfUseExclusiveVarsindividual variables already used in fisher criterium are not anymore analysed individually for node splitting; Bool_tfUseFisherCutsuse multivariate splits using the Fisher criterium; UInt_tfUseNTrainEventsnumber of randomly picked training events used in randomised (and bagged) trees; UInt_tfUseNvarsthe number of variables used in the randomised tree splitting; Bool_tfUsePoissonNvarsuse ""fUseNvars"" not as fixed number but as mean of a possion distr. in each split; Bool_tfUseYesNoLeafuse sig or bkg classification in leave nodes or sig/bkg; vector<const TMVA::Event*>fValidationSamplethe Validation events; vector<Double_t>fVariableImportancethe relative importance of the different variables; map<const TMVA::Event*,std::pair<Double_t,Double_t> >fWeightedResidualsweighted regression residuals; static const Int_tfgDebugLeveldebug level determining some printout/control plots etc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodBDT(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); the standard constructor for the ""boosted decision trees"". MethodBDT(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL). Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); BDT can handle classification with multiple classes and regression with one regression-target. void DeclareOptions(); define the options (their key words) that can be set in the option string; know options:; nTrees number of trees in the forest to be created; BoostType the boos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBDT.html:25815,Validat,Validation,25815,root/html534/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBDT.html,1,['Validat'],['Validation']
Security,"ssuming that T is copiable: this should be the case; 239 // for all result types in use, as they are copied for each slot; 240 variedResults.emplace_back(new T{*resPtr.fObjPtr});; 241 ; 242 // Check if the result's type T inherits from TNamed; 243 if constexpr (std::is_base_of<TNamed, T>::value) {; 244 // Get the current variation name; 245 std::string variationName = variations[i];; 246 // Replace the colon with an underscore; 247 std::replace(variationName.begin(), variationName.end(), ':', '_'); ; 248 // Get a pointer to the corresponding varied result; 249 auto &variedResult = variedResults.back();; 250 // Set the varied result's name to NOMINALNAME_VARIATIONAME; 251 variedResult->SetName((std::string(variedResult->GetName()) + ""_"" + variationName).c_str());; 252 }; 253 }; 254 ; 255 std::vector<void *> typeErasedResults;; 256 typeErasedResults.reserve(variedResults.size());; 257 for (auto &res : variedResults); 258 typeErasedResults.emplace_back(&res);; 259 ; 260 // Create the RVariedAction and inject it in the computation graph.; 261 // This recursively creates all the required varied column readers and upstream nodes of the computation graph.; 262 variedAction = nominalAction->MakeVariedAction(std::move(typeErasedResults));; 263 }; 264 ; 265 return RDFInternal::MakeResultMap<T>(resPtr.fObjPtr, std::move(variedResults), std::move(variations),; 266 *resPtr.fLoopManager, std::move(nominalAction), std::move(variedAction));; 267}; 268 ; 269using SnapshotPtr_t = ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>>;; 270SnapshotPtr_t VariationsFor(SnapshotPtr_t resPtr);; 271 ; 272/// \brief Add ProgressBar to a ROOT::RDF::RNode; 273/// \param[in] df RDataFrame node at which ProgressBar is called.; 274///; 275/// The ProgressBar can be added not only at the RDataFrame head node, but also at any any computational node,; 276/// such as Filter or Define.; 277/// ###Example usage:; 278/// ~~~{.cpp}; 279/// ROOT::RDataFrame df(""tree"", ""file.r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDFHelpers_8hxx_source.html:11961,inject,inject,11961,doc/master/RDFHelpers_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RDFHelpers_8hxx_source.html,1,['inject'],['inject']
Security,"st * ; std, . TList * ; nin, . Option_t * ; opt = """" . ). static . Tool for updating fgAuthInfo or fgProofAuthInfo 'nin' contains list of last input information through (re)reading of a rootauthrc-alike file. ; 'nin' info has priority. 'std' is cleaned from inactive members. 'nin' members used to update existing members in 'std' are removed from 'nin', do that they do not leak opt = ""P"" for proofauthinfo. ; Definition at line 3611 of file TAuthenticate.cxx. ◆ PromptPasswd(). char * TAuthenticate::PromptPasswd ; (; const char * ; prompt = ""Password: ""). static . Static method to prompt for the user's passwd to be used for authentication to rootd or proofd. ; Uses non-echoing command line to get passwd. Returns passwd (which must de deleted by caller) or 0. If non-interactive run (eg ProofServ) returns -1 ; Definition at line 1142 of file TAuthenticate.cxx. ◆ PromptUser(). char * TAuthenticate::PromptUser ; (; const char * ; remote). static . Static method to prompt for the user name to be used for authentication to rootd or proofd. ; User is asked to type user name. Returns user name (which must be deleted by caller) or 0. If non-interactive run (eg ProofServ) returns default user. ; Definition at line 1102 of file TAuthenticate.cxx. ◆ ProofAuthSetup() [1/2]. Int_t TAuthenticate::ProofAuthSetup ; (; ). private . Authentication related stuff setup in TProofServ. ; This is the place where the buffer send by the client / master is decoded. It contains also password information, if the case requires. Return 0 on success, -1 on failure. ; Definition at line 3699 of file TAuthenticate.cxx. ◆ ProofAuthSetup() [2/2]. Int_t TAuthenticate::ProofAuthSetup ; (; TSocket * ; sock, . Bool_t ; client . ). staticprivate . Setup of authetication related stuff in PROOF run after a successful authentication. ; Return 0 on success, -1 on failure. ; Definition at line 3820 of file TAuthenticate.cxx. ◆ ReadRootAuthrc(). Int_t TAuthenticate::ReadRootAuthrc ; (; ). static . Read authenticati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAuthenticate.html:34424,authenticat,authentication,34424,doc/master/classTAuthenticate.html,https://root.cern,https://root.cern/doc/master/classTAuthenticate.html,1,['authenticat'],['authentication']
Security,"st PDEFoamKernelBase &);  Copy constructor. ;  ; virtual ~PDEFoamKernelBase ();  Destructor. ;  ; virtual Float_t Estimate (PDEFoam *, std::vector< Float_t > &, ECellValue)=0;  ; virtual TClass * IsA () const;  ; MsgLogger & Log () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamKernelBase.html:1755,Hash,Hash,1755,doc/master/classTMVA_1_1PDEFoamKernelBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamKernelBase.html,2,['Hash'],['Hash']
Security,"st ROOT::Math::SVector<double,2*(2+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,2*(2+1)/2>UpperBlock() const. Data Members; public:. enum { kRows; kCols; kSize; };. public:. ROOT::Math::MatRepSym<double,2>fRep. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal; block. For example for a symmetric 3x3 matrices the order of the 6; elements \f${a_0,...a_5}\f$ is:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_3 \\; a_1 & a_2 & a_4 \\; a_3 & a_4 & a_5 \end{array} \right); \f]. STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const double& rhs) const; @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator!=(const SMatrix<T,D1,D2,R>& rhs); element wise comparison. bool operator>(const double& rhs) const; element wise comparison. bool operator<(const double& rhs) const; element wise comparison. const T& operator()(unsigned int i, unsigned in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SMatrix_double_2_2_-p1MatRepSym_double_2___.html:5339,access,access,5339,root/html528/ROOT__Math__SMatrix_double_2_2_-p1MatRepSym_double_2___.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SMatrix_double_2_2_-p1MatRepSym_double_2___.html,4,['access'],['access']
Security,"st ROOT::Math::SVector<double,3*(3+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,3*(3+1)/2>UpperBlock() const. Data Members; public:. enum { kRows; kCols; kSize; };. public:. ROOT::Math::MatRepSym<double,3>fRep. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal; block. For example for a symmetric 3x3 matrices the order of the 6; elements \f${a_0,...a_5}\f$ is:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_3 \\; a_1 & a_2 & a_4 \\; a_3 & a_4 & a_5 \end{array} \right); \f]. STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const double& rhs) const; @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator!=(const SMatrix<T,D1,D2,R>& rhs); element wise comparison. bool operator>(const double& rhs) const; element wise comparison. bool operator<(const double& rhs) const; element wise comparison. const T& operator()(unsigned int i, unsigned in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SMatrix_double_3_3_-p1MatRepSym_double_3___.html:5339,access,access,5339,root/html528/ROOT__Math__SMatrix_double_3_3_-p1MatRepSym_double_3___.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SMatrix_double_3_3_-p1MatRepSym_double_3___.html,4,['access'],['access']
Security,"st ROOT::Math::SVector<double,4*(4+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,4*(4+1)/2>UpperBlock() const. Data Members; public:. enum { kRows; kCols; kSize; };. public:. ROOT::Math::MatRepSym<double,4>fRep. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal; block. For example for a symmetric 3x3 matrices the order of the 6; elements \f${a_0,...a_5}\f$ is:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_3 \\; a_1 & a_2 & a_4 \\; a_3 & a_4 & a_5 \end{array} \right); \f]. STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const double& rhs) const; @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator!=(const SMatrix<T,D1,D2,R>& rhs); element wise comparison. bool operator>(const double& rhs) const; element wise comparison. bool operator<(const double& rhs) const; element wise comparison. const T& operator()(unsigned int i, unsigned in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SMatrix_double_4_4_-p1MatRepSym_double_4___.html:5339,access,access,5339,root/html528/ROOT__Math__SMatrix_double_4_4_-p1MatRepSym_double_4___.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SMatrix_double_4_4_-p1MatRepSym_double_4___.html,4,['access'],['access']
Security,"st ROOT::Math::SVector<double,5*(5+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,5*(5+1)/2>UpperBlock() const. Data Members; public:. enum { kRows; kCols; kSize; };. public:. ROOT::Math::MatRepSym<double,5>fRep. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal; block. For example for a symmetric 3x3 matrices the order of the 6; elements \f${a_0,...a_5}\f$ is:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_3 \\; a_1 & a_2 & a_4 \\; a_3 & a_4 & a_5 \end{array} \right); \f]. STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const double& rhs) const; @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator!=(const SMatrix<T,D1,D2,R>& rhs); element wise comparison. bool operator>(const double& rhs) const; element wise comparison. bool operator<(const double& rhs) const; element wise comparison. const T& operator()(unsigned int i, unsigned in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SMatrix_double_5_5_-p1MatRepSym_double_5___.html:5339,access,access,5339,root/html528/ROOT__Math__SMatrix_double_5_5_-p1MatRepSym_double_5___.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SMatrix_double_5_5_-p1MatRepSym_double_5___.html,4,['access'],['access']
Security,"st ROOT::Math::SVector<double,6*(6+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,6*(6+1)/2>UpperBlock() const. Data Members; public:. enum { kRows; kCols; kSize; };. public:. ROOT::Math::MatRepSym<double,6>fRep. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal; block. For example for a symmetric 3x3 matrices the order of the 6; elements \f${a_0,...a_5}\f$ is:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_3 \\; a_1 & a_2 & a_4 \\; a_3 & a_4 & a_5 \end{array} \right); \f]. STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const double& rhs) const; @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator!=(const SMatrix<T,D1,D2,R>& rhs); element wise comparison. bool operator>(const double& rhs) const; element wise comparison. bool operator<(const double& rhs) const; element wise comparison. const T& operator()(unsigned int i, unsigned in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SMatrix_double_6_6_-p1MatRepSym_double_6___.html:5339,access,access,5339,root/html528/ROOT__Math__SMatrix_double_6_6_-p1MatRepSym_double_6___.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SMatrix_double_6_6_-p1MatRepSym_double_6___.html,4,['access'],['access']
Security,"st ROOT::Math::SVector<double,7*(7+1)/2>& v, bool lower = true); doubleTrace() const; ROOT::Math::SVector<double,7*(7+1)/2>UpperBlock() const. Data Members; public:. enum { kRows; kCols; kSize; };. public:. ROOT::Math::MatRepSym<double,7>fRep. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal; block. For example for a symmetric 3x3 matrices the order of the 6; elements \f${a_0,...a_5}\f$ is:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_3 \\; a_1 & a_2 & a_4 \\; a_3 & a_4 & a_5 \end{array} \right); \f]. STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const double& rhs) const; @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator!=(const SMatrix<T,D1,D2,R>& rhs); element wise comparison. bool operator>(const double& rhs) const; element wise comparison. bool operator<(const double& rhs) const; element wise comparison. const T& operator()(unsigned int i, unsigned in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SMatrix_double_7_7_-p1MatRepSym_double_7___.html:5339,access,access,5339,root/html528/ROOT__Math__SMatrix_double_7_7_-p1MatRepSym_double_7___.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SMatrix_double_7_7_-p1MatRepSym_double_7___.html,4,['access'],['access']
Security,"st TClass *base, void *obj, Bool_t up=kTRUE)Cast obj of this class type up to baseclass cl if up is true.Definition TClass.cxx:4982; TClass::GetDirectoryAutoAddROOT::DirAutoAdd_t GetDirectoryAutoAdd() constReturn the wrapper around the directory auto add function.Definition TClass.cxx:7554; TClass::kDummyNew@ kDummyNewDefinition TClass.h:107; TClass::GetSchemaRulesconst ROOT::Detail::TSchemaRuleSet * GetSchemaRules() constReturn the set of the schema rules if any.Definition TClass.cxx:1999; TClass::IsTObjectBool_t IsTObject() constReturn kTRUE is the class inherits from TObject.Definition TClass.cxx:6005; TClass::InheritsFromBool_t InheritsFrom(const char *cl) const overrideReturn kTRUE if this class inherits from a class with name ""classname"".Definition TClass.cxx:4941; TClass::GetBaseClassOffsetInt_t GetBaseClassOffset(const TClass *toBase, void *address=nullptr, bool isDerivedObject=true)Definition TClass.cxx:2858; TClass::HasDefaultConstructorBool_t HasDefaultConstructor(Bool_t testio=kFALSE) constReturn true if we have access to a constructor usable for I/O.Definition TClass.cxx:7460; TClass::kEmulated@ kEmulatedDefinition TClass.h:125; TClass::GetActualClassTClass * GetActualClass(const void *object) constReturn a pointer to the real class of the object.Definition TClass.cxx:2674; TClass::GetClassstatic TClass * GetClass(const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE)Static method returning pointer to TClass of the specified class name.Definition TClass.cxx:3035; TCollection::Classstatic TClass * Class(); TDatimeThis class stores the date and time with a precision of one second in an unsigned 32 bit word (950130...Definition TDatime.h:37; TDatime::GetUInt_t Get() constReturn raw date/time as encoded by TDatime.Definition TDatime.cxx:240; TDatime::FillBuffervoid FillBuffer(char *&buffer)Encode Date/Time into buffer, used by I/O system.Definition TDatime.cxx:229; TDatime::SizeofInt_t Sizeof() constDefinition TDatime.h:81; TDatime::Streamervirtual void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8cxx_source.html:60524,access,access,60524,doc/master/TKey_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TKey_8cxx_source.html,1,['access'],['access']
Security,"st TClass* onfile_class) const; Case of TObjects when fIsOffsetStreamerSet is known to have been set. void StreamerTObjectEmulated(void* object, TBuffer& b, const TClass* onfile_class) const; Case of TObjects when we do not have the library defining the class. void StreamerInstrumented(void* object, TBuffer& b, const TClass* onfile_class) const; Case of instrumented class with a library. void StreamerStreamerInfo(void* object, TBuffer& b, const TClass* onfile_class) const; Case of where we should directly use the StreamerInfo.; case kForeign:; case kForeign|kEmulated:; case kInstrumented|kEmulated:; case kEmulated:. void StreamerDefault(void* object, TBuffer& b, const TClass* onfile_class) const; Default streaming in cases where either we have no way to know what to do; or if Property() has not yet been called. void AdoptStreamer(TClassStreamer* strm); Adopt a TClassStreamer object. Ownership is transfered to this TClass; object. void SetStreamerFunc(ClassStreamerFunc_t strm); Set a wrapper/accessor function around this class custom streamer. void SetMerge(ROOT::MergeFunc_t mergeFunc); Install a new wrapper around 'Merge'. void SetNew(ROOT::NewFunc_t newFunc); Install a new wrapper around 'new'. void SetNewArray(ROOT::NewArrFunc_t newArrayFunc); Install a new wrapper around 'new []'. void SetDelete(ROOT::DelFunc_t deleteFunc); Install a new wrapper around 'delete'. void SetDeleteArray(ROOT::DelArrFunc_t deleteArrayFunc); Install a new wrapper around 'delete []'. void SetDestructor(ROOT::DesFunc_t destructorFunc); Install a new wrapper around the destructor. void SetDirectoryAutoAdd(ROOT::DirAutoAdd_t dirAutoAddFunc); Install a new wrapper around the directory auto add function..; The function autoAddFunc has the signature void (*)(void *obj, TDirectory dir); and should register 'obj' to the directory if dir is not null; and unregister 'obj' from its current directory if dir is null. TVirtualStreamerInfo * FindStreamerInfo(UInt_t checksum) const; Find the TVirtualStre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TClass.html:44517,access,accessor,44517,root/html530/TClass.html,https://root.cern,https://root.cern/root/html530/TClass.html,1,['access'],['accessor']
Security,"st TClass* onfile_class) const; Case of TObjects when fIsOffsetStreamerSet is known to have been set. void StreamerTObjectEmulated(void* object, TBuffer& b, const TClass* onfile_class) const; Case of TObjects when we do not have the library defining the class. void StreamerInstrumented(void* object, TBuffer& b, const TClass* onfile_class) const; Case of instrumented class with a library. void StreamerStreamerInfo(void* object, TBuffer& b, const TClass* onfile_class) const; Case of where we should directly use the StreamerInfo.; case kForeign:; case kForeign|kEmulated:; case kInstrumented|kEmulated:; case kEmulated:. void StreamerDefault(void* object, TBuffer& b, const TClass* onfile_class) const; Default streaming in cases where either we have no way to know what to do; or if Property() has not yet been called. void AdoptStreamer(TClassStreamer* strm); Adopt a TClassStreamer object. Ownership is transfered to this TClass; object. void SetStreamerFunc(ClassStreamerFunc_t strm); Set a wrapper/accessor function around this class custom streamer. void SetMerge(ROOT::MergeFunc_t mergeFunc); Install a new wrapper around 'Merge'. void SetResetAfterMerge(ROOT::ResetAfterMergeFunc_t resetFunc); Install a new wrapper around 'ResetAfterMerge'. void SetNew(ROOT::NewFunc_t newFunc); Install a new wrapper around 'new'. void SetNewArray(ROOT::NewArrFunc_t newArrayFunc); Install a new wrapper around 'new []'. void SetDelete(ROOT::DelFunc_t deleteFunc); Install a new wrapper around 'delete'. void SetDeleteArray(ROOT::DelArrFunc_t deleteArrayFunc); Install a new wrapper around 'delete []'. void SetDestructor(ROOT::DesFunc_t destructorFunc); Install a new wrapper around the destructor. void SetDirectoryAutoAdd(ROOT::DirAutoAdd_t dirAutoAddFunc); Install a new wrapper around the directory auto add function..; The function autoAddFunc has the signature void (*)(void *obj, TDirectory dir); and should register 'obj' to the directory if dir is not null; and unregister 'obj' from its current",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TClass.html:44862,access,accessor,44862,root/html532/TClass.html,https://root.cern,https://root.cern/root/html532/TClass.html,2,['access'],['accessor']
Security,"st TClass* onfile_class) const; Case of TObjects when fIsOffsetStreamerSet is known to have been set. void StreamerTObjectEmulated(void* object, TBuffer& b, const TClass* onfile_class) const; Case of TObjects when we do not have the library defining the class. void StreamerInstrumented(void* object, TBuffer& b, const TClass* onfile_class) const; Case of instrumented class with a library. void StreamerStreamerInfo(void* object, TBuffer& b, const TClass* onfile_class) const; Case of where we should directly use the StreamerInfo.; case kForeign:; case kForeign|kEmulated:; case kInstrumented|kEmulated:; case kEmulated:. void StreamerDefault(void* object, TBuffer& b, const TClass* onfile_class) const; Default streaming in cases where either we have no way to know what to do; or if Property() has not yet been called. void AdoptStreamer(TClassStreamer* strm); Adopt a TClassStreamer object. Ownership is transfered to this TClass; object. void SetStreamerFunc(ClassStreamerFunc_t strm); Set a wrapper/accessor function around this class custom streamer. void SetNew(ROOT::NewFunc_t newFunc); Install a new wrapper around 'new'. void SetNewArray(ROOT::NewArrFunc_t newArrayFunc); Install a new wrapper around 'new []'. void SetDelete(ROOT::DelFunc_t deleteFunc); Install a new wrapper around 'delete'. void SetDeleteArray(ROOT::DelArrFunc_t deleteArrayFunc); Install a new wrapper around 'delete []'. void SetDestructor(ROOT::DesFunc_t destructorFunc); Install a new wrapper around the destructor. void SetDirectoryAutoAdd(ROOT::DirAutoAdd_t dirAutoAddFunc); Install a new wrapper around the directory auto add function..; The function autoAddFunc has the signature void (*)(void *obj, TDirectory dir); and should register 'obj' to the directory if dir is not null; and unregister 'obj' from its current directory if dir is null. TVirtualStreamerInfo * FindStreamerInfo(UInt_t checksum) const; Find the TVirtualStreamerInfo in the StreamerInfos corresponding to checksum. TVirtualStreamerInfo * Fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TClass.html:43853,access,accessor,43853,root/html528/TClass.html,https://root.cern,https://root.cern/root/html528/TClass.html,1,['access'],['accessor']
Security,"st TGenCollectionProxy& c) : TGenVectorProxy(c); 236 {; 237 }; 238 // Standard Destructor; 239 ~TGenSetProxy() override; 240 {; 241 }; 242 // Return the address of the value at index 'idx'; 243 void* At(UInt_t idx) override; 244 {; 245 if ( fEnv && fEnv->fObject ) {; 246 if ( fEnv->fUseTemp ) {; 247 return (((char*)fEnv->fTemp)+idx*fValDiff);; 248 }; 249 switch( idx ) {; 250 case 0:; 251 fEnv->fIdx = idx;; 252 return fEnv->fStart = fFirst.invoke(fEnv);; 253 default: {; 254 fEnv->fIdx = idx - fEnv->fIdx;; 255 if (! fEnv->fStart ) fEnv->fStart = fFirst.invoke(fEnv);; 256 void* result = fNext.invoke(fEnv);; 257 fEnv->fIdx = idx;; 258 return result;; 259 }; 260 }; 261 }; 262 Fatal(""TGenSetProxy"",""At> Logic error - no proxy object set."");; 263 return nullptr;; 264 }; 265};; 266 ; 267/**; 268\class TGenMapProxy; 269\ingroup IO; 270Localoptimization class.; 271 ; 272Collection proxies get copied. On copy we switch the type of the; 273proxy to the concrete STL type. The concrete types are optimized; 274for element access.; 275*/; 276 ; 277class TGenMapProxy : public TGenSetProxy {; 278public:; 279 // Standard Destructor; 280 TGenMapProxy(const TGenCollectionProxy& c) : TGenSetProxy(c); 281 {; 282 }; 283 // Standard Destructor; 284 ~TGenMapProxy() override; 285 {; 286 }; 287 // Call to delete/destruct individual item; 288 void DeleteItem(Bool_t force, void* ptr) const override; 289 {; 290 if (force) {; 291 if ( fKey->fProperties&kNeedDelete) {; 292 TVirtualCollectionProxy *proxy = fKey->fType->GetCollectionProxy();; 293 TPushPop helper(proxy,fKey->fCase&kIsPointer ? *(void**)ptr : ptr);; 294 proxy->Clear(""force"");; 295 }; 296 if ( fVal->fProperties&kNeedDelete) {; 297 TVirtualCollectionProxy *proxy = fVal->fType->GetCollectionProxy();; 298 char *addr = ((char*)ptr)+fValOffset;; 299 TPushPop helper(proxy,fVal->fCase&kIsPointer ? *(void**)addr : addr);; 300 proxy->Clear(""force"");; 301 }; 302 }; 303 if ( fKey->fCase&kIsPointer ) {; 304 fKey->DeleteItem(*(void**)ptr);; 305 }; 306",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGenCollectionProxy_8cxx_source.html:7710,access,access,7710,doc/master/TGenCollectionProxy_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGenCollectionProxy_8cxx_source.html,1,['access'],['access']
Security,"st TObject *obj, const char *name=nullptr, Option_t *="""", Int_t=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTROOT.html:20414,Hash,Hash,20414,doc/master/classTROOT.html,https://root.cern,https://root.cern/doc/master/classTROOT.html,4,"['Hash', 'hash']","['Hash', 'hash']"
Security,"st TObject *obj, const char *name=nullptr, Option_t *="""", Int_t=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTDirectory.html:9695,Hash,Hash,9695,doc/v632/classTDirectory.html,https://root.cern,https://root.cern/doc/v632/classTDirectory.html,4,"['Hash', 'hash']","['Hash', 'hash']"
Security,"st TRegexp& pat) const; Bool_tTString::Contains(TPRegexp& pat) const; Bool_tTString::Contains(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TString& pat, TString::ECaseCompare cmp = kExact) const; TStringTString::Copy() const; Int_tTString::CountChar(Int_t c) const; const char*TString::Data() const; Bool_tTString::EndsWith(const char* pat, TString::ECaseCompare cmp = kExact) const; Bool_tTString::EqualTo(const char* cs, TString::ECaseCompare cmp = kExact) const; Bool_tTString::EqualTo(const TString& st, TString::ECaseCompare cmp = kExact) const; virtual voidTString::FillBuffer(char*& buffer); Ssiz_tTString::First(char c) const; Ssiz_tTString::First(const char* cs) const; voidTString::Form(const char* fmt); static TStringTString::Format(const char* fmt); static Ssiz_tTString::GetInitialCapacity(); static Ssiz_tTString::GetMaxWaste(); static Ssiz_tTString::GetResizeIncrement(); Bool_tTString::Gets(FILE* fp, Bool_t chop = kTRUE); UInt_tTString::Hash(TString::ECaseCompare cmp = kExact) const; static UInt_tTString::Hash(const void* txt, Int_t ntxt); Ssiz_tTString::Index(const TRegexp& pat, Ssiz_t i = 0) const; Ssiz_tTString::Index(TPRegexp& pat, Ssiz_t i = 0) const; Ssiz_tTString::Index(const char* s, Ssiz_t i = 0, TString::ECaseCompare cmp = kExact) const; Ssiz_tTString::Index(const TString& s, Ssiz_t i = 0, TString::ECaseCompare cmp = kExact) const; Ssiz_tTString::Index(const TRegexp& pat, Ssiz_t* ext, Ssiz_t i = 0) const; Ssiz_tTString::Index(TPRegexp& pat, Ssiz_t* ext, Ssiz_t i = 0) const; Ssiz_tTString::Index(const char* pat, Ssiz_t patlen, Ssiz_t i, TString::ECaseCompare cmp) const; Ssiz_tTString::Index(const TString& pat, Ssiz_t patlen, Ssiz_t i, TString::ECaseCompare cmp) const; static Ssiz_tTString::InitialCapacity(Ssiz_t ic = 15); TString&TString::Insert(Ssiz_t pos, const char* cs); TString&TString::Insert(Ssiz_t pos, const TString& s); TString&TString::Insert(Ssiz_t pos, const char* cs, Ssiz_t n); TString&TString::Inser",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveException.html:2410,Hash,Hash,2410,root/html530/TEveException.html,https://root.cern,https://root.cern/root/html530/TEveException.html,4,['Hash'],['Hash']
Security,"st TSocket&). Data Members; public:. enum EStatusBits { kIsUnix; kBrokenConn; };; enum EInterest { kRead; kWrite; };; enum EServiceType { kSOCKD; kROOTD; kPROOFD; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TInetAddressfAddressremote internet address and port #; TBitsfBitsInfobits array to mark TStreamerInfo classes already sent; UInt_tfBytesRecvtotal bytes received over this socket; UInt_tfBytesSenttotal bytes sent using this socket; Int_tfCompressCompression level and algorithm; TTimeStampfLastUsageTime stamp of last usage; TVirtualMutex*fLastUsageMtxProtect last usage setting / reading; TInetAddressfLocalAddresslocal internet address and port #; TStringTNamed::fNameobject identifier; Int_tfRemoteProtocolprotocol of remote daemon; TSecContext*fSecContextafter a successful Authenticate call; TSocket::EServiceTypefServTyperemote service type; TStringfServicename of service (matches remote port #); Int_tfSocketsocket descriptor; Int_tfTcpWindowSizeTCP window size (default 65535);; TStringTNamed::fTitleobject title; TList*fUUIDslist of TProcessIDs already sent through the socket; TStringfUrlneeds this for special authentication options; static ULong64_tfgBytesRecvtotal bytes received by all socket objects; static ULong64_tfgBytesSenttotal bytes sent by all socket objects; static Int_tfgClientProtocolclient ""protocol"" version. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSocket(TInetAddress address, const char* service, Int_t tcpwindowsize = -1); Create a socket. Connect to the named service at address addr.; Use tcpwindowsize to specify the size of the receive buffer, it has; to be specified here to make sure the window scale option is set (for; tcpwindowsize > 65KB and for platforms supporting window ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSocket.html:9074,Authenticat,Authenticate,9074,root/html530/TSocket.html,https://root.cern,https://root.cern/root/html530/TSocket.html,6,"['Authenticat', 'authenticat']","['Authenticate', 'authentication']"
Security,"st TString &containerName, TBranchDescriptor *parent=nullptr);  ; bool IsClones () const;  ; bool IsSTL () const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchDescriptor.html:1485,Hash,Hash,1485,doc/master/classROOT_1_1Internal_1_1TBranchDescriptor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchDescriptor.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"st TString GetProbaName () const { return fTestvar + ""_Proba""; }; 337 TString GetWeightFileName() const;; 338 ; 339 // build classifier name in Test tree; 340 // MVA prefix (e.g., ""TMVA_""); 341 void SetTestvarName ( const TString & v="""" ) { fTestvar = (v=="""") ? (""MVA_"" + GetMethodName()) : v; }; 342 ; 343 // number of input variable used by classifier; 344 UInt_t GetNvar() const { return DataInfo().GetNVariables(); }; 345 UInt_t GetNVariables() const { return DataInfo().GetNVariables(); }; 346 UInt_t GetNTargets() const { return DataInfo().GetNTargets(); };; 347 ; 348 // internal names and expressions of input variables; 349 const TString& GetInputVar ( Int_t i ) const { return DataInfo().GetVariableInfo(i).GetInternalName(); }; 350 const TString& GetInputLabel( Int_t i ) const { return DataInfo().GetVariableInfo(i).GetLabel(); }; 351 const char * GetInputTitle( Int_t i ) const { return DataInfo().GetVariableInfo(i).GetTitle(); }; 352 ; 353 // normalisation and limit accessors; 354 Double_t GetMean( Int_t ivar ) const { return GetTransformationHandler().GetMean(ivar); }; 355 Double_t GetRMS ( Int_t ivar ) const { return GetTransformationHandler().GetRMS(ivar); }; 356 Double_t GetXmin( Int_t ivar ) const { return GetTransformationHandler().GetMin(ivar); }; 357 Double_t GetXmax( Int_t ivar ) const { return GetTransformationHandler().GetMax(ivar); }; 358 ; 359 // sets the minimum requirement on the MVA output to declare an event signal-like; 360 Double_t GetSignalReferenceCut() const { return fSignalReferenceCut; }; 361 Double_t GetSignalReferenceCutOrientation() const { return fSignalReferenceCutOrientation; }; 362 ; 363 // sets the minimum requirement on the MVA output to declare an event signal-like; 364 void SetSignalReferenceCut( Double_t cut ) { fSignalReferenceCut = cut; }; 365 void SetSignalReferenceCutOrientation( Double_t cutOrientation ) { fSignalReferenceCutOrientation = cutOrientation; }; 366 ; 367 // pointers to ROOT directories; 368 TDirectory* BaseDir()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodBase_8h_source.html:14903,access,accessors,14903,doc/master/MethodBase_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodBase_8h_source.html,1,['access'],['accessors']
Security,"st char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void Add (const char *cname, Version_t id, const std::type_info &info, DictFuncPtr_t dict, Int_t pragmabits);  Add a class to the class table (this is a static function). ;  ; static void Add (TProtoClass *protoClass);  Add a class to the class table (this is a static function). ;  ; static ROOT::TClassAlt * AddAlternate (const char *normname, const char *alternate);  ; static char * At (UInt_t index);  Returns class at index from sorted class table. ;  ; static Bool_t Check (const char *cname, std::string &normname);  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static DictFuncPtr_t GetDict (const char *cname);  Given the class name returns the Dictionary() function of a class (uses hash of name). ;  ; static DictFuncPtr_t GetDict (const std::type_info &info);  Given the std::type_info returns the Dictionary() function of a class (uses hash of std::type_info::name()). ;  ; static DictFuncPtr_t GetDictNorm (const char *cname);  Given the normalized class name returns the Dictionary() function of a class (uses hash of name). ;  ; static Version_t GetID (const char *cname);  Returns the ID of a class. ;  ; static Int_t GetPragmaBits (const char *name);  Returns the pragma bits as specified in the LinkDef.h file. ;  ; static TProtoClass * GetProto (const char *cname);  Given the class name returns the TClassProto object for the class. ;  ; static TProtoClass * GetProtoNorm (const char *cname);  Given the class normalized name returns the TClassProto object for the class. ;  ; static void Init ();  ; sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassTable.html:10338,hash,hash,10338,doc/master/classTClassTable.html,https://root.cern,https://root.cern/doc/master/classTClassTable.html,1,['hash'],['hash']
Security,"st char *name, Int_t bufsize) final;  create XML key, which will store object in xml structures ;  ; TKey * CreateKey (TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize) final;  create XML key, which will store object in xml structures ;  ; void DrawMap (const char *=""*"", Option_t *="""") final;  Draw map of objects in this file. ;  ; void FillBuffer (char *&) final;  Encode file output buffer. ;  ; void Flush () final;  Synchronize a file's in-memory and on-disk states. ;  ; Long64_t GetEND () const final;  ; Int_t GetErrno () const final;  Method returning errno. ;  ; Int_t GetIOVersion () const;  ; Int_t GetNbytesFree () const final;  ; Int_t GetNbytesInfo () const final;  ; Int_t GetNfree () const final;  ; Long64_t GetSeekFree () const final;  ; Long64_t GetSeekInfo () const final;  ; Long64_t GetSize () const final;  Returns the current file size. ;  ; TClass * IsA () const override;  ; Bool_t IsOpen () const final;  return kTRUE if file is opened and can be accessed ;  ; void MakeFree (Long64_t, Long64_t) final;  Mark unused bytes on the file. ;  ; void MakeProject (const char *, const char *=""*"", Option_t *=""new"") final;  Generate source code necessary to access the objects stored in the file. ;  ; void Map () final;  ; void Map (Option_t *) final;  List the contents of a file sequentially. ;  ; void Paint (Option_t *="""") final;  Paint all objects in the file. ;  ; void Print (Option_t *="""") const final;  Print all objects in the file. ;  ; Bool_t ReadBuffer (char *, Int_t) final;  Read a buffer from the file. ;  ; Bool_t ReadBuffer (char *, Long64_t, Int_t) final;  Read a buffer from the file at the offset 'pos' in the file. ;  ; void ReadFree () final;  Read the FREE linked list. ;  ; Int_t Recover () final;  Attempt to recover file if not correctly closed. ;  ; Int_t ReOpen (Option_t *mode) final;  Reopen a file with a different access mode, like from READ to See TFile::Open() for details. ;  ; void ResetErrno () const fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:3121,access,accessed,3121,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,1,['access'],['accessed']
Security,"st char *name, Long64_t value);  Add INT column to list of columns. ;  ;  ClassDefOverride (TSQLTableData, 1);  ; const char * GetColumn (Int_t n);  return column value ;  ; Int_t GetNumColumns ();  returns number of columns in provided set ;  ; Bool_t IsNumeric (Int_t n);  identifies if column has numeric value ;  ; TObjArray * TakeColInfos ();  take ownership over colinfos ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLTableData.html:1642,Hash,Hash,1642,doc/master/classTSQLTableData.html,https://root.cern,https://root.cern/doc/master/classTSQLTableData.html,2,['Hash'],['Hash']
Security,"st char *sqlname, const char *sqltype);  normal constructor ;  ; const char * GetName () const final;  Returns name of object. ;  ; const char * GetSQLName () const;  ; const char * GetSQLType () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLClassColumnInfo.html:1442,Hash,Hash,1442,doc/master/classTSQLClassColumnInfo.html,https://root.cern,https://root.cern/doc/master/classTSQLClassColumnInfo.html,2,['Hash'],['Hash']
Security,"st char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMapFile ();  Default ctor. Does not much except setting some basic values. ;  ;  TMapFile (const char *name, const char *title, Option_t *option, Int_t size, TMapFile *&newMapFile);  Create a memory mapped file. ;  ;  TMapFile (const TMapFile &f, Longptr_t offset=0);  Private copy ctor. ;  ; Int_t AcquireSemaphore ();  Acquire semaphore. Returns 0 if OK, -1 on error. ;  ; void CreateSemaphore (Int_t pid=0);  Create semaphore used for synchronizing access to shared memory. ;  ; void DeleteSemaphore ();  Delete the semaphore. ;  ; TMapFile * FindShadowMapFile ();  Returns shadow map file. ;  ; Int_t GetBestBuffer ();  Return the best buffer size for objects in this file. ;  ; void InitDirectory ();  Create the directory associated to this mapfile. ;  ; TMapFile & operator= (const TMapFile &rhs)=delete;  ; Int_t ReleaseSemaphore ();  Release semaphore. Returns 0 if OK, -1 on error. ;  ; TObject * Remove (const char *name, Bool_t lock);  Remove object by name from shared memory. ;  ; TObject * Remove (TObject *obj, Bool_t lock);  Remove object from shared memory. ;  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMapFile.html:14233,access,access,14233,doc/master/classTMapFile.html,https://root.cern,https://root.cern/doc/master/classTMapFile.html,1,['access'],['access']
Security,"st char * ServerInfo ()=0;  ; virtual Int_t Shutdown ()=0;  ; virtual Bool_t StartTransaction ();  submit ""START TRANSACTION"" query to database return kTRUE, if successful ;  ; virtual TSQLStatement * Statement (const char *, Int_t=100);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLServer.html:4615,Hash,Hash,4615,doc/master/classTSQLServer.html,https://root.cern,https://root.cern/doc/master/classTSQLServer.html,2,['Hash'],['Hash']
Security,"st char* cname); Remove a class from the class table. This happens when a shared library; is unloaded (i.e. the dtor's of the global init objects are called). TClassRec * FindElementImpl(const char* cname, Bool_t insert); Find a class by name in the class table (using hash of name). Returns; 0 if the class is not in the table. Unless arguments insert is true in; which case a new entry is created and returned. TClassRec * FindElement(const char* cname, Bool_t insert = kFALSE); Find a class by name in the class table (using hash of name). Returns; 0 if the class is not in the table. Unless arguments insert is true in; which case a new entry is created and returned.; cname can be any spelling of the class name. See FindElementImpl if the; name is already normalized. Version_t GetID(const char* cname); Returns the ID of a class. Int_t GetPragmaBits(const char* name); Returns the pragma bits as specified in the LinkDef.h file. DictFuncPtr_t GetDict(const char* cname); Given the class name returns the Dictionary() function of a class; (uses hash of name). DictFuncPtr_t GetDict(const type_info& info); Given the type_info returns the Dictionary() function of a class; (uses hash of type_info::name()). DictFuncPtr_t GetDictNorm(const char* cname); Given the normalized class name returns the Dictionary() function of a class; (uses hash of name). TProtoClass * GetProto(const char* cname); Given the class name returns the TClassProto object for the class.; (uses hash of name). TProtoClass * GetProtoNorm(const char* cname); Given the class normalized name returns the TClassProto object for the class.; (uses hash of name). char * Next(); Returns next class from sorted class table. Don't use this iterator; while modifying the class table. The class table can be modified; when making calls like TClass::GetClass(), etc. void PrintTable(); Print the class table. Before printing the table is sorted; alphabetically. void SortTable(); Sort the class table by ascending class ID's. void Te",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClassTable.html:9576,hash,hash,9576,root/html602/TClassTable.html,https://root.cern,https://root.cern/root/html602/TClassTable.html,2,['hash'],['hash']
Security,"st char* command = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TExec.html:5131,Hash,Hash,5131,root/html528/TExec.html,https://root.cern,https://root.cern/root/html528/TExec.html,1,['Hash'],['Hash']
Security,"st char* command = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TExec.html:5131,Hash,Hash,5131,root/html530/TExec.html,https://root.cern,https://root.cern/root/html530/TExec.html,3,['Hash'],['Hash']
Security,"st char* command = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TExec.html:5050,Hash,Hash,5050,root/html602/TExec.html,https://root.cern,https://root.cern/root/html602/TExec.html,2,['Hash'],['Hash']
Security,"st char* cs, TString::ECaseCompare cmp = kExact) const; intTString::CompareTo(const TString& st, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TRegexp& pat) const; Bool_tTString::Contains(TPRegexp& pat) const; Bool_tTString::Contains(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TString& pat, TString::ECaseCompare cmp = kExact) const; TStringTString::Copy() const; Int_tTString::CountChar(Int_t c) const; const char*TString::Data() const; Bool_tTString::EndsWith(const char* pat, TString::ECaseCompare cmp = kExact) const; virtual voidTString::FillBuffer(char*& buffer); Ssiz_tTString::First(char c) const; Ssiz_tTString::First(const char* cs) const; voidTString::Form(const char* fmt); static TStringTString::Format(const char* fmt); static Ssiz_tTString::GetInitialCapacity(); static Ssiz_tTString::GetMaxWaste(); static Ssiz_tTString::GetResizeIncrement(); Bool_tTString::Gets(FILE* fp, Bool_t chop = kTRUE); UInt_tTString::Hash(TString::ECaseCompare cmp = kExact) const; static UInt_tTString::Hash(const void* txt, Int_t ntxt); Ssiz_tTString::Index(const TRegexp& pat, Ssiz_t i = 0) const; Ssiz_tTString::Index(TPRegexp& pat, Ssiz_t i = 0) const; Ssiz_tTString::Index(const char* s, Ssiz_t i = 0, TString::ECaseCompare cmp = kExact) const; Ssiz_tTString::Index(const TString& s, Ssiz_t i = 0, TString::ECaseCompare cmp = kExact) const; Ssiz_tTString::Index(const TRegexp& pat, Ssiz_t* ext, Ssiz_t i = 0) const; Ssiz_tTString::Index(TPRegexp& pat, Ssiz_t* ext, Ssiz_t i = 0) const; Ssiz_tTString::Index(const char* pat, Ssiz_t patlen, Ssiz_t i, TString::ECaseCompare cmp) const; Ssiz_tTString::Index(const TString& pat, Ssiz_t patlen, Ssiz_t i, TString::ECaseCompare cmp) const; static Ssiz_tTString::InitialCapacity(Ssiz_t ic = 15); TString&TString::Insert(Ssiz_t pos, const char* cs); TString&TString::Insert(Ssiz_t pos, const TString& s); TString&TString::Insert(Ssiz_t pos, const char* cs, Ssiz_t n); TString&TString::Inser",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveException.html:2243,Hash,Hash,2243,root/html528/TEveException.html,https://root.cern,https://root.cern/root/html528/TEveException.html,2,['Hash'],['Hash']
Security,"st char* fTitle = """", Int_t compress = 1, Int_t netopt = 0, Bool_t parallelopen = kFALSE, const char* logicalurl = 0); Create a TXNetFile object. A TXNetFile object is the same as a TNetFile; (from which the former derives) except that the protocol is extended to; support dealing with new xrootd data server or xrootd load balancer; server. The ""url"" argument must be of the form. root://server1:port1[,server2:port2,...,serverN:portN]/pathfile,. Note that this means that multiple servers (>= 1) can be specified in; the url. The connection will try to connect to the first server:port; and if that does not succeed, it will try the second one, and so on; until it finds a server that will respond. See the TNetFile documentation for the description of the other arguments. The creation consists of internal variable settings (most important is; the client's domain), creation of a TXUrl array containing all specified; urls (a single url is serverX:portX/pathfile), trying to connect to the; servers calling Connect() method, getting a valid access to the remote; server the client is connected to using GetAccessToSrv() method,; recognizing the remote server (if an old rootd the TNetFile's Create; method will be called). The options field of the URL can be used for the following purposes:; a. open a non-ROOT generic file; ""root://server1:port1[,server2:port2,...]/pathfile?filetype=raw""; b. re-check the environment variables; ""root://server1:port1[,server2:port2,...]/pathfile?checkenv""; c. set the cache size (in bytes); ""root://server1:port1[,server2:port2,...]/pathfile?cachesz=20000000""; d. set the read-ahead size (in bytes); ""root://server1:port1[,server2:port2,...]/pathfile?readaheadsz=100000""; e. set the cache remove policy; ""root://server1:port1[,server2:port2,...]/pathfile?rmpolicy=1""; f. set the max number of redirections; ""root://server1:port1[,server2:port2,...]/pathfile?mxredir=2""; (multiple options can be set concurrently). ~TXNetFile(); Destructor. void FormUrl(TUrl uut",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TXNetFile.html:24951,access,access,24951,root/html528/TXNetFile.html,https://root.cern,https://root.cern/root/html528/TXNetFile.html,6,['access'],['access']
Security,"st char* fmt, va_list va) const; voidGetFileName(const char* filename, TString& fn, Bool_t* = 0); voidTObject::MakeZombie(). private:. TEntryList&operator=(const TEntryList&). Data Members; public:. enum { kBlockSize; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArray*fBlocksblocks with indices of passing events (TEntryListBlocks); TEntryList*fCurrent! currently filled entry list; TDirectory*fDirectory! Pointer to directory holding this tree; Long64_tfEntriesToProcessused on proof to set the number of entries to process in a packet; TStringfFileNamename of the file, where the tree is; Long64_tfLastIndexQueried! used to optimize GetEntry() function from a loop ; Long64_tfLastIndexReturned! used to optimize GetEntry() function from a loop; TList*fListsa list of underlying entry lists for each tree of a chain; Long64_tfNnumber of entries in the list; Int_tfNBlocksnumber of TEntryListBlocks; TStringTNamed::fNameobject identifier; Bool_tfReapplyIf true, TTree::Draw will 'reapply' the original cut; Bool_tfShift! true when some sub-lists don't correspond to trees; ULong_tfStringHash! Hash value of a string of treename and filename; TStringTNamed::fTitleobject title; TStringfTreeNamename of the tree; Int_tfTreeNumber! the index of the tree in the chain (used when the entry. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEntryList(); default c-tor. TEntryList(const char* name, const char* title); c-tor with name and title. TEntryList(const char* name, const char* title, const TTree* tree); constructor with name and title, which also sets the tree. TEntryList(const char* name, const char* title, const char* treename, const char* filename); c-tor with name and title, which also sets the treename and the filen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEntryList.html:17254,Hash,Hash,17254,root/html534/TEntryList.html,https://root.cern,https://root.cern/root/html534/TEntryList.html,1,['Hash'],['Hash']
Security,"st char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const TMatrixD*GetCovarianceMatrix() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const TVectorD*GetEigenValues() const; const TMatrixD*GetEigenVectors() const; TList*GetHistograms() const; virtual const char*TObject::GetIconName() const; const TVectorD*GetMeanValues() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const Double_t*GetRow(Int_t row); const TVectorD*GetSigmas() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const TVectorD*GetUserData() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual voidMakeCode(const char* filename = ""pca"", Option_t* option = """")MENU ; virtual voidMakeHistograms(const char* name = ""pca"", Option_t* option = ""epsdx"")MENU ; virtual voidMakeMethods(const char* classname = ""PCA"", Option_t* option = """")MENU ; virtual voidMakePrincipals()MENU ; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPrincipal.html:7714,Hash,Hash,7714,root/html528/TPrincipal.html,https://root.cern,https://root.cern/root/html528/TPrincipal.html,1,['Hash'],['Hash']
Security,"st char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const TMatrixD*GetCovarianceMatrix() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const TVectorD*GetEigenValues() const; const TMatrixD*GetEigenVectors() const; TList*GetHistograms() const; virtual const char*TObject::GetIconName() const; const TVectorD*GetMeanValues() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const Double_t*GetRow(Int_t row); const TVectorD*GetSigmas() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const TVectorD*GetUserData() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual voidMakeCode(const char* filename = ""pca"", Option_t* option = """")MENU ; virtual voidMakeHistograms(const char* name = ""pca"", Option_t* option = ""epsdx"")MENU ; virtual voidMakeMethods(const char* classname = ""PCA"", Option_t* option = """")MENU ; virtual voidMakePrincipals()MENU ; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPrincipal.html:7714,Hash,Hash,7714,root/html530/TPrincipal.html,https://root.cern,https://root.cern/root/html530/TPrincipal.html,5,['Hash'],['Hash']
Security,"st char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TGeoMatrix*GetMatrix(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGDMLRefl.html:2323,Hash,Hash,2323,root/html528/TGDMLRefl.html,https://root.cern,https://root.cern/root/html528/TGDMLRefl.html,1,['Hash'],['Hash']
Security,"st char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TGeoMatrix*GetMatrix(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGDMLRefl.html:2323,Hash,Hash,2323,root/html530/TGDMLRefl.html,https://root.cern,https://root.cern/root/html530/TGDMLRefl.html,3,['Hash'],['Hash']
Security,"st char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TGeoMatrix*GetMatrix(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGDMLRefl.html:2264,Hash,Hash,2264,root/html602/TGDMLRefl.html,https://root.cern,https://root.cern/root/html602/TGDMLRefl.html,2,['Hash'],['Hash']
Security,"st char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THtml*GetOwner() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THtml__THelperBase.html:2219,Hash,Hash,2219,root/html528/THtml__THelperBase.html,https://root.cern,https://root.cern/root/html528/THtml__THelperBase.html,1,['Hash'],['Hash']
Security,"st char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THtml*GetOwner() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/THtml__THelperBase.html:2221,Hash,Hash,2221,root/html530/THtml__THelperBase.html,https://root.cern,https://root.cern/root/html530/THtml__THelperBase.html,3,['Hash'],['Hash']
Security,"st char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THtml*GetOwner() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THtml__THelperBase.html:2157,Hash,Hash,2157,root/html602/THtml__THelperBase.html,https://root.cern,https://root.cern/root/html602/THtml__THelperBase.html,2,['Hash'],['Hash']
Security,"st char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGenerate(); TLorentzVector*GetDecay(Int_t n); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNt() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetWtMax() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGenPhaseSpace.html:2827,Hash,Hash,2827,root/html528/TGenPhaseSpace.html,https://root.cern,https://root.cern/root/html528/TGenPhaseSpace.html,1,['Hash'],['Hash']
Security,"st char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGenerate(); TLorentzVector*GetDecay(Int_t n); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNt() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetWtMax() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGenPhaseSpace.html:2827,Hash,Hash,2827,root/html530/TGenPhaseSpace.html,https://root.cern,https://root.cern/root/html530/TGenPhaseSpace.html,3,['Hash'],['Hash']
Security,"st char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGenerate(); TLorentzVector*GetDecay(Int_t n); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNt() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetWtMax() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGenPhaseSpace.html:2766,Hash,Hash,2766,root/html602/TGenPhaseSpace.html,https://root.cern,https://root.cern/root/html602/TGenPhaseSpace.html,2,['Hash'],['Hash']
Security,"st char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetConfigDescription() const; const char*GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__Configurable.html:2428,Hash,Hash,2428,root/html528/TMVA__Configurable.html,https://root.cern,https://root.cern/root/html528/TMVA__Configurable.html,1,['Hash'],['Hash']
Security,"st char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetConfigDescription() const; const char*GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__Configurable.html:2428,Hash,Hash,2428,root/html530/TMVA__Configurable.html,https://root.cern,https://root.cern/root/html530/TMVA__Configurable.html,3,['Hash'],['Hash']
Security,"st char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetConfigDescription() const; const char*GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Configurable.html:2487,Hash,Hash,2487,root/html602/TMVA__Configurable.html,https://root.cern,https://root.cern/root/html602/TMVA__Configurable.html,2,['Hash'],['Hash']
Security,"st char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetQAngle() const; voidGetRXYZ(Double_t* carray) const; voidGetRXYZ(Float_t* carray) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TQuaternionInvert() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TQuaternionLeftProduct(const TVector3& vector) const; TQuaternionLeftProduct(const TQuaternion& quaternion) const; TQuaternionLeftQuotient(const TVector3& vector) const; TQuaternionLeftQuotient(const TQuaternion& quaternion) const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; TQuaternion&MultiplyLeft(const TVector3& vector); TQuaternion&MultiplyLeft(const TQuaternion& quaternion); Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQuaternion.html:6780,Hash,Hash,6780,root/html528/TQuaternion.html,https://root.cern,https://root.cern/root/html528/TQuaternion.html,6,['Hash'],['Hash']
Security,"st char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; THtml::TFileSysEntryTFileSysEntry(const THtml::TFileSysEntry&); THtml::TFileSysEntryTFileSysEntry(const char* name, THtml::TFileSysDir* parent); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfLevellevel of directory; TStringfNamename of the element; THtml::TFileSysDir*fParentparent directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFileSysEntry(const char* name, THtml::TFileSysDir* parent); {}. const char* GetName() const; { return fName; }. ULong_t Hash() const; { return fName.Hash(); }. void GetFullName(TString& fullname, Bool_t asIncluded) const. TFileSysDir* GetParent() const; { return fParent; }. Int_t GetLevel() const; { return fLevel; }. TFileSysEntry(const char* name, THtml::TFileSysDir* parent); { fFiles.SetOwner(); fDirs.SetOwner(); }. TString fInputPath; // directories to look for classes; prepended to Decl/ ImplFileName(). » Author: Nenad Buncic 18/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THtml__TFileSysEntry.html:5718,Hash,Hash,5718,root/html534/THtml__TFileSysEntry.html,https://root.cern,https://root.cern/root/html534/THtml__TFileSysEntry.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TCondorSlave*ClaimVM(const char* vm, const char* cmd); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EState { kFree; kSuspended; kActive; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TList*fClaimslist of claims we manage; TStringfPoolthe condor pool to be accessed; TCondor::EStatefStateour claim state; Bool_tfValidaccess to Condor. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCondor(const char *pool); Create Condor interface object. Uses Condor apps since there is no; API yet. ~TCondor(); Cleanup Condor interface. void Print(Option_t* option = """") const; Print master status. TCondorSlave * ClaimVM(const char* vm, const char* cmd); Claim a VirtualMachine for PROOF usage. TList * GetVirtualMachines() const; Get the names of the virtual machines in the pool.; Return a TList of TObjString or 0 in case of failure. TList * Claim(Int_t n, const char *cmd); Claim n virtual machines; This function figures out the image and performance index before returning; the list of condor slaves. TCondorSlave * Claim(const char *vmname, const char *cmd); Claim virtual machine with name vmname; This function does not figure out the image and performance index before; returning the condor slave. Bool_t SetState(TCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCondor.html:5746,access,accessed,5746,root/html526/TCondor.html,https://root.cern,https://root.cern/root/html526/TCondor.html,1,['access'],['accessed']
Security,"st char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TCondorSlave*ClaimVM(const char* vm, const char* cmd); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EState { kFree; kSuspended; kActive; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TList*fClaimslist of claims we manage; TStringfPoolthe condor pool to be accessed; TCondor::EStatefStateour claim state; Bool_tfValidaccess to Condor. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCondor(const char* pool = """"); Create Condor interface object. Uses Condor apps since there is no; API yet. ~TCondor(); Cleanup Condor interface. void Print(Option_t* option = """") const; Print master status. TCondorSlave * ClaimVM(const char* vm, const char* cmd); Claim a VirtualMachine for PROOF usage. TList * GetVirtualMachines() const; Get the names of the virtual machines in the pool.; Return a TList of TObjString or 0 in case of failure. TList * Claim(Int_t n, const char* cmd); Claim n virtual machines; This function figures out the image and performance index before returning; the list of condor slaves. TCondorSlave * Claim(const char* vmname, const char* cmd); Claim virtual machine with name vmname; This function does not figure out the image and performance index before; returning the condor slave. Bool_t SetStat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TCondor.html:5732,access,accessed,5732,root/html528/TCondor.html,https://root.cern,https://root.cern/root/html528/TCondor.html,4,['access'],['accessed']
Security,"st char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); Bool_tFindLimits(const RooRealVar& param, double& lower, double& upper); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const RooArgSet*GetBestFitParameters() const; Int_tGetContourPoints(const RooRealVar& paramX, const RooRealVar& paramY, Double_t* x, Double_t* y, Int_t npoints = 30); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; RooAbsReal*GetLikelihoodRatio(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual RooArgSet*GetParameters() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInInterval(const RooArgSet&) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; RooStats::LikelihoodIntervalLikelihoodInterval(const char* name = 0); RooStats::LikelihoodIntervalLikelihoodInterval(const RooStats::LikelihoodInterval&); RooStats::LikelihoodIntervalLikelihoodInterval(const char* name, RooAbsReal*, const RooArgSet*, RooArgSet* = 0); Double_tLowerLimit(const RooRealVar& param); Double_tLowerLimit(const RooRealVar& param, bool& status); virtual voidTNamed::ls(Option_t* option = """") const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__LikelihoodInterval.html:3752,Hash,Hash,3752,root/html528/RooStats__LikelihoodInterval.html,https://root.cern,https://root.cern/root/html528/RooStats__LikelihoodInterval.html,6,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); Bool_tFindLimits(const RooRealVar& param, double& lower, double& upper); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const RooArgSet*GetBestFitParameters() const; Int_tGetContourPoints(const RooRealVar& paramX, const RooRealVar& paramY, Double_t* x, Double_t* y, Int_t npoints = 30); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; RooAbsReal*GetLikelihoodRatio(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual RooArgSet*GetParameters() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInInterval(const RooArgSet&) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; RooStats::LikelihoodIntervalLikelihoodInterval(const char* name = 0); RooStats::LikelihoodIntervalLikelihoodInterval(const RooStats::LikelihoodInterval&); RooStats::LikelihoodIntervalLikelihoodInterval(const char* name, RooAbsReal*, const RooArgSet*, RooArgSet* = 0); Double_tLowerLimit(const RooRealVar& param); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__LikelihoodInterval.html:3762,Hash,Hash,3762,root/html526/RooStats__LikelihoodInterval.html,https://root.cern,https://root.cern/root/html526/RooStats__LikelihoodInterval.html,1,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction1Map<double,int>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction1Ref_double_int_.html:2992,Hash,Hash,2992,root/html526/RooCFunction1Ref_double_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction1Ref_double_int_.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction1Map<double,int>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction1Ref_double_int_.html:2992,Hash,Hash,2992,root/html530/RooCFunction1Ref_double_int_.html,https://root.cern,https://root.cern/root/html530/RooCFunction1Ref_double_int_.html,3,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction1Map<double,int>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction1Ref_double_int_.html:2784,Hash,Hash,2784,root/html602/RooCFunction1Ref_double_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction1Ref_double_int_.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_thasMax(const char* rname = 0) const; Bool_thasMin(const char* rname = 0) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Double_tmax(const char* rname = 0) const; voidTObject::MayNotUse(const char* method) const; Double_tmin(const char* rname = 0) const; virtual const char*RooArgProxy::name() const; virtual Bool_tTObject::Notify(); const RooArgSet*RooAbsProxy::nset() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* remove",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooRealProxy.html:2989,Hash,Hash,2989,root/html530/RooRealProxy.html,https://root.cern,https://root.cern/root/html530/RooRealProxy.html,5,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_thasRange(const char* rangeName) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; const char*label() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual const char*RooArgProxy::name() const; virtual Bool_tTObject::Notify(); const RooArgSet*RooAbsProxy::nset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCategoryProxy.html:3095,Hash,Hash,3095,root/html526/RooCategoryProxy.html,https://root.cern,https://root.cern/root/html526/RooCategoryProxy.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_thasRange(const char* rangeName) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; const char*label() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual const char*RooArgProxy::name() const; virtual Bool_tTObject::Notify(); const RooArgSet*RooAbsProxy::nset() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator dele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCategoryProxy.html:3095,Hash,Hash,3095,root/html530/RooCategoryProxy.html,https://root.cern,https://root.cern/root/html530/RooCategoryProxy.html,3,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_thasRange(const char* rangeName) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; const char*label() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual const char*RooArgProxy::name() const; virtual Bool_tTObject::Notify(); const RooArgSet*RooAbsProxy::nset() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCategoryProxy.html:2608,Hash,Hash,2608,root/html602/RooCategoryProxy.html,https://root.cern,https://root.cern/root/html602/RooCategoryProxy.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Double_tI3() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Double_tIsospin() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; Double_tLifetime() const; virtual voidTNamed::ls(Option_t* option = """") const; Double_tMass() const; voidTObject::MayNotUse(const char* method) const; Int_tNDecayChannels() const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TParticlePDG.html:3628,Hash,Hash,3628,root/html528/TParticlePDG.html,https://root.cern,https://root.cern/root/html528/TParticlePDG.html,1,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Double_tI3() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Double_tIsospin() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; Double_tLifetime() const; virtual voidTNamed::ls(Option_t* option = """") const; Double_tMass() const; voidTObject::MayNotUse(const char* method) const; Int_tNDecayChannels() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TParticlePDG.html:3628,Hash,Hash,3628,root/html530/TParticlePDG.html,https://root.cern,https://root.cern/root/html530/TParticlePDG.html,3,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Double_tI3() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Double_tIsospin() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; Double_tLifetime() const; virtual voidTNamed::ls(Option_t* option = """") const; Double_tMass() const; voidTObject::MayNotUse(const char* method) const; Int_tNDecayChannels() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TParticlePDG.html:3437,Hash,Hash,3437,root/html602/TParticlePDG.html,https://root.cern,https://root.cern/root/html602/TParticlePDG.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; RooStats::HypoTestInverterPlotHypoTestInverterPlot(RooStats::HypoTestInverterResult* results); RooStats::HypoTestInverterPlotHypoTestInverterPlot(const RooStats::HypoTestInverterPlot&); RooStats::HypoTestInverterPlotHypoTestInverterPlot(const char* name, const char* title, RooStats::HypoTestInverterResult* results); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; TMultiGraph*MakeExpectedPlot(double sig1 = 1, double sig2 = 2); TGraphErrors*MakePlot(Option_t* opt = """");",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__HypoTestInverterPlot.html:2225,Hash,Hash,2225,root/html530/RooStats__HypoTestInverterPlot.html,https://root.cern,https://root.cern/root/html530/RooStats__HypoTestInverterPlot.html,5,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; RooStats::HypoTestInverterPlotHypoTestInverterPlot(const RooStats::HypoTestInverterPlot&); RooStats::HypoTestInverterPlotHypoTestInverterPlot(const char* name, const char* title, RooStats::HypoTestInverterResult* results); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; TGraphErrors*MakePlot(); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__HypoTestInverterPlot.html:2237,Hash,Hash,2237,root/html526/RooStats__HypoTestInverterPlot.html,https://root.cern,https://root.cern/root/html526/RooStats__HypoTestInverterPlot.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; RooStats::HypoTestResultHypoTestResult(const char* name = 0); RooStats::HypoTestResultHypoTestResult(const RooStats::HypoTestResult&); RooStats::HypoTestResultHypoTestResult(const char* name, Double_t nullp, Double_t altp); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); virtual Double_tNullPValue() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator dele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__HypoTestResult.html:2961,Hash,Hash,2961,root/html526/RooStats__HypoTestResult.html,https://root.cern,https://root.cern/root/html526/RooStats__HypoTestResult.html,1,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Double_thighBound() const; virtual RooAbsReal*RooAbsBinning::highBoundFunc() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsBinning::insertHook(RooAbsRealLValue&) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tRooAbsBinning::isParameterized() const; virtual Bool_tRooAbsBinning::isShareable() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tRooAbsBinning::isUniform() const; Bool_tTObject::IsZombie() const; virtual Double_tlowBound() const; virtual RooAbsReal*RooAbsBinning::lowBoundFunc() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooLinTransBinning.html:3184,Hash,Hash,3184,root/html526/RooLinTransBinning.html,https://root.cern,https://root.cern/root/html526/RooLinTransBinning.html,14,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Double_thighBound() const; virtual RooAbsReal*RooAbsBinning::highBoundFunc() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsBinning::insertHook(RooAbsRealLValue&) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tRooAbsBinning::isParameterized() const; virtual Bool_tRooAbsBinning::isShareable() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tisUniform() const; Bool_tTObject::IsZombie() const; virtual Double_tlowBound() const; virtual RooAbsReal*RooAbsBinning::lowBoundFunc() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooUniformBinning.html:3244,Hash,Hash,3244,root/html526/RooUniformBinning.html,https://root.cern,https://root.cern/root/html526/RooUniformBinning.html,7,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Double_thighBound() const; virtual RooAbsReal*highBoundFunc() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidinsertHook(RooAbsRealLValue&) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tisParameterized() const; virtual Bool_tisShareable() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tRooAbsBinning::isUniform() const; Bool_tTObject::IsZombie() const; virtual Double_tlowBound() const; virtual RooAbsReal*lowBoundFunc() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooParamBinning.html:3424,Hash,Hash,3424,root/html526/RooParamBinning.html,https://root.cern,https://root.cern/root/html526/RooParamBinning.html,7,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Double_thighBound() const; virtual RooAbsReal*highBoundFunc() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidinsertHook(RooAbsRealLValue&) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tisParameterized() const; virtual Bool_tisShareable() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tisUniform() const; Bool_tTObject::IsZombie() const; virtual Double_tlowBound() const; virtual RooAbsReal*lowBoundFunc() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsBinning.html:3042,Hash,Hash,3042,root/html526/RooAbsBinning.html,https://root.cern,https://root.cern/root/html526/RooAbsBinning.html,7,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(const ROOT::Minuit2::MnUserParameterState& state); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; ROOT::Minuit2::MnTraceObjectROOT::Minuit2::MnTraceObject::MnTraceObject(int parNumber = -1); ROOT::Minuit2::MnTraceObjectROOT::Minuit2::MnTraceObject::MnTraceObject(const ROOT::Minuit2::MnTraceObject&); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMinuit2TraceObject.html:2213,Hash,Hash,2213,root/html602/TMinuit2TraceObject.html,https://root.cern,https://root.cern/root/html602/TMinuit2TraceObject.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(const ROOT::Minuit2::MnUserParameterState& state); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMinuit2TraceObject.html:2303,Hash,Hash,2303,root/html534/TMinuit2TraceObject.html,https://root.cern,https://root.cern/root/html534/TMinuit2TraceObject.html,1,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static RooNameReg&instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; static const TNamed*known(const char* stringPtr); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNameReg.html:2520,Hash,Hash,2520,root/html534/RooNameReg.html,https://root.cern,https://root.cern/root/html534/RooNameReg.html,1,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static RooNameReg&instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; static const TNamed*known(const char* stringPtr); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator dele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNameReg.html:2520,Hash,Hash,2520,root/html602/RooNameReg.html,https://root.cern,https://root.cern/root/html602/RooNameReg.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static RooNameReg&instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNameReg.html:2520,Hash,Hash,2520,root/html526/RooNameReg.html,https://root.cern,https://root.cern/root/html526/RooNameReg.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static RooNameReg&instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooNameReg.html:2520,Hash,Hash,2520,root/html530/RooNameReg.html,https://root.cern,https://root.cern/root/html530/RooNameReg.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THbookKey.html:2230,Hash,Hash,2230,root/html528/THbookKey.html,https://root.cern,https://root.cern/root/html528/THbookKey.html,1,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/THbookKey.html:2230,Hash,Hash,2230,root/html530/THbookKey.html,https://root.cern,https://root.cern/root/html530/THbookKey.html,5,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__THnBaseBrowsable.html:2223,Hash,Hash,2223,root/html602/ROOT__THnBaseBrowsable.html,https://root.cern,https://root.cern/root/html602/ROOT__THnBaseBrowsable.html,4,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsOk() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); const char*NextMesg(); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TStatus.html:2441,Hash,Hash,2441,root/html528/TStatus.html,https://root.cern,https://root.cern/root/html528/TStatus.html,1,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); Double_toperator Double_t() const; void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDouble.html:2315,Hash,Hash,2315,root/html526/RooDouble.html,https://root.cern,https://root.cern/root/html526/RooDouble.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); Int_toperator Int_t() const; void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooInt.html:2282,Hash,Hash,2282,root/html526/RooInt.html,https://root.cern,https://root.cern/root/html526/RooInt.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); Double_toperator Double_t() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooDouble.html:2315,Hash,Hash,2315,root/html530/RooDouble.html,https://root.cern,https://root.cern/root/html530/RooDouble.html,3,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); Int_toperator Int_t() const; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooInt.html:2282,Hash,Hash,2282,root/html530/RooInt.html,https://root.cern,https://root.cern/root/html530/RooInt.html,3,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); Double_toperator double() const; void*TObject::operator new(s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooDouble.html:2240,Hash,Hash,2240,root/html602/RooDouble.html,https://root.cern,https://root.cern/root/html602/RooDouble.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); Int_toperator int() const; void*TObject::operator new(size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooInt.html:2222,Hash,Hash,2222,root/html602/RooInt.html,https://root.cern,https://root.cern/root/html602/RooInt.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofMonSender.html:2438,Hash,Hash,2438,root/html532/TProofMonSender.html,https://root.cern,https://root.cern/root/html532/TProofMonSender.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofMonSender.html:2462,Hash,Hash,2462,root/html602/TProofMonSender.html,https://root.cern,https://root.cern/root/html602/TProofMonSender.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(); RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(RooStats::LikelihoodInterval* theInterval); RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(const RooStats::LikelihoodIntervalPlot&); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); static voidTObject::operator de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__LikelihoodIntervalPlot.html:2601,Hash,Hash,2601,root/html526/RooStats__LikelihoodIntervalPlot.html,https://root.cern,https://root.cern/root/html526/RooStats__LikelihoodIntervalPlot.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(); RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(RooStats::LikelihoodInterval* theInterval); RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(const RooStats::LikelihoodIntervalPlot&); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__LikelihoodIntervalPlot.html:2601,Hash,Hash,2601,root/html530/RooStats__LikelihoodIntervalPlot.html,https://root.cern,https://root.cern/root/html530/RooStats__LikelihoodIntervalPlot.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Bool_tmatch(const char* testPattern) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); Bool_tok(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMapCatEntry.html:2295,Hash,Hash,2295,root/html526/RooMapCatEntry.html,https://root.cern,https://root.cern/root/html526/RooMapCatEntry.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Bool_tmatch(const char* testPattern) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tok(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooMapCatEntry.html:2295,Hash,Hash,2295,root/html530/RooMapCatEntry.html,https://root.cern,https://root.cern/root/html530/RooMapCatEntry.html,3,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Bool_tmatch(const char* testPattern) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tok(); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMapCatEntry.html:2176,Hash,Hash,2176,root/html602/RooMapCatEntry.html,https://root.cern,https://root.cern/root/html602/RooMapCatEntry.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Double_tmax(const char* rname = 0) const; voidTObject::MayNotUse(const char* method) const; Double_tmin(const char* rname = 0) const; virtual const char*RooArgProxy::name() const; virtual Bool_tTObject::Notify(); const RooArgSet*RooAbsProxy::nset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRealProxy.html:2989,Hash,Hash,2989,root/html526/RooRealProxy.html,https://root.cern,https://root.cern/root/html526/RooRealProxy.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooStats::MCMCIntervalPlotMCMCIntervalPlot(); RooStats::MCMCIntervalPlotMCMCIntervalPlot(RooStats::MCMCInterval& interval); RooStats::MCMCIntervalPlotMCMCIntervalPlot(const RooStats::MCMCIntervalPlot&); static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__MCMCIntervalPlot.html:3471,Hash,Hash,3471,root/html526/RooStats__MCMCIntervalPlot.html,https://root.cern,https://root.cern/root/html526/RooStats__MCMCIntervalPlot.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooStats::MCMCIntervalPlotMCMCIntervalPlot(); RooStats::MCMCIntervalPlotMCMCIntervalPlot(RooStats::MCMCInterval& interval); RooStats::MCMCIntervalPlotMCMCIntervalPlot(const RooStats::MCMCIntervalPlot&); static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* remove",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__MCMCIntervalPlot.html:3056,Hash,Hash,3056,root/html530/RooStats__MCMCIntervalPlot.html,https://root.cern,https://root.cern/root/html530/RooStats__MCMCIntervalPlot.html,5,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; TMVA::MethodInfoMethodInfo(); TMVA::MethodInfoMethodInfo(const TMVA::MethodInfo&); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__MethodInfo.html:2182,Hash,Hash,2182,root/html604/TMVA__MethodInfo.html,https://root.cern,https://root.cern/root/html604/TMVA__MethodInfo.html,1,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCustomizer.html:6199,Hash,Hash,6199,root/html526/RooCustomizer.html,https://root.cern,https://root.cern/root/html526/RooCustomizer.html,5,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCustomizer.html:6199,Hash,Hash,6199,root/html530/RooCustomizer.html,https://root.cern,https://root.cern/root/html530/RooCustomizer.html,6,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCustomizer.html:6004,Hash,Hash,6004,root/html602/RooCustomizer.html,https://root.cern,https://root.cern/root/html602/RooCustomizer.html,4,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); TObject*obj() const; const RooLinkedList&objList() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooTObjWrap.html:2372,Hash,Hash,2372,root/html526/RooTObjWrap.html,https://root.cern,https://root.cern/root/html526/RooTObjWrap.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); TObject*obj() const; const RooLinkedList&objList() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooTObjWrap.html:2372,Hash,Hash,2372,root/html530/RooTObjWrap.html,https://root.cern,https://root.cern/root/html530/RooTObjWrap.html,3,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); TObject*obj() const; const RooLinkedList&objList() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooTObjWrap.html:2241,Hash,Hash,2241,root/html602/RooTObjWrap.html,https://root.cern,https://root.cern/root/html602/RooTObjWrap.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); const char*operator const char*() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCut.html:2851,Hash,Hash,2851,root/html526/TCut.html,https://root.cern,https://root.cern/root/html526/TCut.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimWSTool__SplitRule.html:5485,Hash,Hash,5485,root/html526/RooSimWSTool__SplitRule.html,https://root.cern,https://root.cern/root/html526/RooSimWSTool__SplitRule.html,16,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; const char*operator const char *() const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCut.html:2752,Hash,Hash,2752,root/html602/TCut.html,https://root.cern,https://root.cern/root/html602/TCut.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; const char*operator const char*() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TCut.html:2851,Hash,Hash,2851,root/html530/TCut.html,https://root.cern,https://root.cern/root/html530/TCut.html,3,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooSimWSTool__SplitRule.html:5485,Hash,Hash,5485,root/html530/RooSimWSTool__SplitRule.html,https://root.cern,https://root.cern/root/html530/RooSimWSTool__SplitRule.html,36,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSimWSTool__SplitRule.html:5482,Hash,Hash,5482,root/html602/RooSimWSTool__SplitRule.html,https://root.cern,https://root.cern/root/html602/RooSimWSTool__SplitRule.html,22,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual const char*name() const; virtual Bool_tTObject::Notify(); const RooArgSet*RooAbsProxy::nset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooArgProxy.html:3124,Hash,Hash,3124,root/html526/RooArgProxy.html,https://root.cern,https://root.cern/root/html526/RooArgProxy.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual const char*name() const; virtual Bool_tTObject::Notify(); const RooArgSet*RooAbsProxy::nset() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooArgProxy.html:3124,Hash,Hash,3124,root/html530/RooArgProxy.html,https://root.cern,https://root.cern/root/html530/RooArgProxy.html,3,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual const char*name() const; virtual Bool_tTObject::Notify(); const RooArgSet*RooAbsProxy::nset() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooArgProxy.html:2711,Hash,Hash,2711,root/html602/RooArgProxy.html,https://root.cern,https://root.cern/root/html602/RooArgProxy.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; voidLowess(Double_t* x, Double_t* y, Int_t n, Double_t* ys, Double_t span, Int_t iter, Double_t delta); static voidLowest(Double_t* x, Double_t* y, Int_t n, Double_t& xs, Double_t& ys, Int_t nleft, Int_t nright, Double_t* w, Bool_t userw, Double_t* rw, Bool_t& ok); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphSmooth.html:3162,Hash,Hash,3162,root/html528/TGraphSmooth.html,https://root.cern,https://root.cern/root/html528/TGraphSmooth.html,1,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; voidLowess(Double_t* x, Double_t* y, Int_t n, Double_t* ys, Double_t span, Int_t iter, Double_t delta); static voidLowest(Double_t* x, Double_t* y, Int_t n, Double_t& xs, Double_t& ys, Int_t nleft, Int_t nright, Double_t* w, Bool_t userw, Double_t* rw, Bool_t& ok); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGraphSmooth.html:3162,Hash,Hash,3162,root/html530/TGraphSmooth.html,https://root.cern,https://root.cern/root/html530/TGraphSmooth.html,5,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; voidlogError(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooFactoryWSTool.html:4675,Hash,Hash,4675,root/html526/RooFactoryWSTool.html,https://root.cern,https://root.cern/root/html526/RooFactoryWSTool.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; voidlogError(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooFactoryWSTool.html:4716,Hash,Hash,4716,root/html530/RooFactoryWSTool.html,https://root.cern,https://root.cern/root/html530/RooFactoryWSTool.html,3,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; voidlogError(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooFactoryWSTool.html:4675,Hash,Hash,4675,root/html602/RooFactoryWSTool.html,https://root.cern,https://root.cern/root/html602/RooFactoryWSTool.html,2,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTProofMonSender::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofMonSenderML.html:2421,Hash,Hash,2421,root/html532/TProofMonSenderML.html,https://root.cern,https://root.cern/root/html532/TProofMonSenderML.html,4,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTProofMonSender::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofMonSenderML.html:2275,Hash,Hash,2275,root/html602/TProofMonSenderML.html,https://root.cern,https://root.cern/root/html602/TProofMonSenderML.html,4,['Hash'],['Hash']
Security,"st char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*TRootGuiFactory::IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQRootGuiFactory.html:3406,Hash,Hash,3406,root/html602/TQRootGuiFactory.html,https://root.cern,https://root.cern/root/html602/TQRootGuiFactory.html,2,['Hash'],['Hash']
Security,"st char* name) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*First() const; virtual TObjLink*FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tIsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*LastLink() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TList.html:5096,Hash,Hash,5096,root/html530/TList.html,https://root.cern,https://root.cern/root/html530/TList.html,5,['Hash'],['Hash']
Security,"st char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TBrowser*TContextMenu::GetBrowser(); virtual TObject*TContextMenu::GetCalledObject(); virtual TContextMenuImp*TContextMenu::GetContextMenuImp(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TVirtualPad*TContextMenu::GetSelectedCanvas(); virtual TClassMenuItem*TContextMenu::GetSelectedMenuItem(); virtual TFunction*TContextMenu::GetSelectedMethod(); virtual TObject*TContextMenu::GetSelectedObject(); virtual TVirtualPad*TContextMenu::GetSelectedPad(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveContextMenu.html:3596,Hash,Hash,3596,root/html534/TEveContextMenu.html,https://root.cern,https://root.cern/root/html534/TEveContextMenu.html,1,['Hash'],['Hash']
Security,"st char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TBrowser*TContextMenu::GetBrowser(); virtual TObject*TContextMenu::GetCalledObject(); virtual TContextMenuImp*TContextMenu::GetContextMenuImp(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TVirtualPad*TContextMenu::GetSelectedCanvas(); virtual TClassMenuItem*TContextMenu::GetSelectedMenuItem(); virtual TFunction*TContextMenu::GetSelectedMethod(); virtual TObject*TContextMenu::GetSelectedObject(); virtual TVirtualPad*TContextMenu::GetSelectedPad(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveContextMenu.html:3528,Hash,Hash,3528,root/html602/TEveContextMenu.html,https://root.cern,https://root.cern/root/html602/TEveContextMenu.html,2,['Hash'],['Hash']
Security,"st char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*get() const; virtual const RooArgSet*get(Int_t masterIdx) const; virtual const RooArgSet*get(const RooArgSet& coord) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tgetIndex(const RooArgSet& coord); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Bool_tRooAbsData::getRange(RooRealVar& var, Double_t& lowest, Double_t& highest, Double_t marginFrac = 0, Bool_t symMode = kFALSE) const; RooAbsData*RooAbsData::getSimData(const char* idxstate); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsData::hasFilledCache() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tisNonPoissonWeighted() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tisWeighted() const; Bool_tTObject::IsZombie() const; Double_tRooAbsData::kurtosis(RooRealVar& var, const char* cutSpec = 0, const char* cutRange = 0) const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Double_tRooAbsData::mean(RooRealVar& var, const char* cutSpec = 0, const char* cutRange = 0) const; RooRealVar*RooAbsData::meanVar(RooRealVar& var, const char* cutSpec = 0, const char* cutRang",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooDataHist.html:6467,Hash,Hash,6467,root/html530/RooDataHist.html,https://root.cern,https://root.cern/root/html530/RooDataHist.html,2,['Hash'],['Hash']
Security,"st error code processed by AuthError(); static TStringfgPasswd; static TPluginHandler*fgPasswdDialogPasswd dialog GUI plugin; static Int_tfgProcessIDID of the main thread as unique identifier; static Bool_tfgPromptUserkTRUE if user prompt required; static TList*fgProofAuthInfoSpecific lists of THostAuth fro proof; static Bool_tfgPwHashkTRUE if fgPasswd is a passwd hash; static Int_tfgRSAInit; static Int_tfgRSAKeyDefault type of RSA key to be tried; static rsa_KEYfgRSAPriKey; static rsa_KEY_exportfgRSAPubExport[2]; static rsa_KEYfgRSAPubKey; static Bool_tfgReadHomeAuthrckTRUE to look for $HOME/.rootauthrc; static TStringfgRootAuthrcPath to last rootauthrc-like file read; static Bool_tfgSRPPwdkTRUE if fgPasswd is a SRP passwd; static SecureAuth_tfgSecAuthHook; static TStringfgUser; static Bool_tfgUsrPwdCryptkTRUE if encryption for UsrPwd is required. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAuthenticate(TSocket* sock, const char* remote, const char* proto, const char* user = """"); Create authentication object. void CatchTimeOut(); Called in connection with a timer timeout. Bool_t Authenticate(); Authenticate to remote rootd or proofd server. Return kTRUE if; authentication succeeded. void SetEnvironment(); Set default authentication environment. The values are inferred; from fSecurity and fDetails. Bool_t GetUserPasswd(TString& user, TString& passwd, Bool_t& pwhash, Bool_t srppwd); Try to get user name and passwd from several sources. Bool_t CheckNetrc(TString& user, TString& passwd); Try to get user name and passwd from the ~/.rootnetrc or; ~/.netrc files. For more info see the version with 4 arguments.; This version is maintained for backward compatability reasons. Bool_t CheckNetrc(TString& user, TString& passwd, Bool_t& pwhash, Bool_t srppwd); Try to get user name and passwd from the ~/.rootnetrc or; ~/.netrc files. First ~/.rootnetrc is tried, after that ~/.netrc.; These files will only be used when their access m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAuthenticate.html:11195,authenticat,authentication,11195,root/html526/TAuthenticate.html,https://root.cern,https://root.cern/root/html526/TAuthenticate.html,7,['authenticat'],['authentication']
Security,"st input information through (re)reading of a rootauthrc-alike file. ;  ; static char * PromptPasswd (const char *prompt=""Password: "");  Static method to prompt for the user's passwd to be used for authentication to rootd or proofd. ;  ; static char * PromptUser (const char *remote);  Static method to prompt for the user name to be used for authentication to rootd or proofd. ;  ; static Int_t ReadRootAuthrc ();  Read authentication directives from $ROOTAUTHRC, $HOME/.rootauthrc or <Root_etc_dir>/system.rootauthrc and create related THostAuth objects. ;  ; static void RemoveHostAuth (THostAuth *ha, Option_t *opt="""");  Remove THostAuth instance from the list. ;  ; static Int_t SecureRecv (TSocket *Socket, Int_t dec, Int_t KeyType, char **Out);  Receive str from sock and decode it using key indicated by key type Return number of received bytes or -1 in case of error. ;  ; static Int_t SecureSend (TSocket *Socket, Int_t enc, Int_t KeyType, const char *In);  Encode null terminated str using the session private key indicated by enc and sends it over the network Returns number of bytes sent, or -1 in case of error. ;  ; static Int_t SendRSAPublicKey (TSocket *Socket, Int_t key=0);  Receives server RSA Public key Sends local RSA public key encoded. ;  ; static void SetAuthReUse (Bool_t authreuse);  Set global AuthReUse flag. ;  ; static void SetDefaultRSAKeyType (Int_t key);  Static method setting the default type of RSA key. ;  ; static void SetDefaultUser (const char *defaultuser);  Set default user name. ;  ; static void SetGlobalExpDate (TDatime expdate);  Set default expiring date for new validity contexts. ;  ; static void SetGlobalPasswd (const char *passwd);  Set global passwd to be used for authentication to rootd or proofd. ;  ; static void SetGlobalPwHash (Bool_t pwhash);  Set global passwd hash flag to be used for authentication to rootd or proofd. ;  ; static void SetGlobalSRPPwd (Bool_t srppwd);  Set global SRP passwd flag to be used for authentication to rootd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAuthenticate.html:14261,Secur,SecureSend,14261,doc/master/classTAuthenticate.html,https://root.cern,https://root.cern/doc/master/classTAuthenticate.html,1,['Secur'],['SecureSend']
Security,"st must be either TFileInfo or TObjString or TUrl . The function return 1 if successful, 0 otherwise. ; Definition at line 566 of file TChain.cxx. ◆ AddFriend() [1/3]. TFriendElement * TChain::AddFriend ; (; const char * ; chain, . const char * ; dummy = """" . ). overridevirtual . Add a TFriendElement to the list of friends of this chain. ; A TChain has a list of friends similar to a tree (see TTree::AddFriend). You can add a friend to a chain with the TChain::AddFriend method, and you can retrieve the list of friends with TChain::GetListOfFriends. This example has four chains each has 20 ROOT trees from 20 ROOT files. TChain ch(""t""); // a chain with 20 trees from 20 files; TChain ch1(""t1"");; TChain ch2(""t2"");; TChain ch3(""t3"");; Now we can add the friends to the first chain. ch.AddFriend(""t1""); ch.AddFriend(""t2""); ch.AddFriend(""t3""); . The parameter is the name of friend chain (the name of a chain is always the name of the tree from which it was created). The original chain has access to all variable in its friends. We can use the TChain::Draw method as if the values in the friends were in the original chain. To specify the chain to use in the Draw method, use the syntax: <chainname>.<branchname>.<varname>; If the variable name is enough to uniquely identify the variable, you can leave out the chain and/or branch name. For example, this generates a 3-d scatter plot of variable ""var"" in the TChain ch versus variable v1 in TChain t1 versus variable v2 in TChain t2. ch.Draw(""var:t1.v1:t2.v2"");; When a TChain::Draw is executed, an automatic call to TTree::AddFriend connects the trees in the chain. When a chain is deleted, its friend elements are also deleted.; The number of entries in the friend must be equal or greater to the number of entries of the original chain. If the friend has fewer entries a warning is given and the resulting histogram will have missing entries. For additional information see TTree::AddFriend. ; Reimplemented from TTree.; Definition at line 656",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:64641,access,access,64641,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,1,['access'],['access']
Security,"st must be either TFileInfo or TObjString or TUrl . The function return 1 if successful, 0 otherwise. ; Definition at line 592 of file TChain.cxx. ◆ AddFriend() [1/3]. TFriendElement * TChain::AddFriend ; (; const char * ; chain, . const char * ; dummy = """" . ). overridevirtual . Add a TFriendElement to the list of friends of this chain. ; A TChain has a list of friends similar to a tree (see TTree::AddFriend). You can add a friend to a chain with the TChain::AddFriend method, and you can retrieve the list of friends with TChain::GetListOfFriends. This example has four chains each has 20 ROOT trees from 20 ROOT files. TChain ch(""t""); // a chain with 20 trees from 20 files; TChain ch1(""t1"");; TChain ch2(""t2"");; TChain ch3(""t3"");; Now we can add the friends to the first chain. ch.AddFriend(""t1""); ch.AddFriend(""t2""); ch.AddFriend(""t3""); . The parameter is the name of friend chain (the name of a chain is always the name of the tree from which it was created). The original chain has access to all variable in its friends. We can use the TChain::Draw method as if the values in the friends were in the original chain. To specify the chain to use in the Draw method, use the syntax: <chainname>.<branchname>.<varname>; If the variable name is enough to uniquely identify the variable, you can leave out the chain and/or branch name. For example, this generates a 3-d scatter plot of variable ""var"" in the TChain ch versus variable v1 in TChain t1 versus variable v2 in TChain t2. ch.Draw(""var:t1.v1:t2.v2"");; When a TChain::Draw is executed, an automatic call to TTree::AddFriend connects the trees in the chain. When a chain is deleted, its friend elements are also deleted.; The number of entries in the friend must be equal or greater to the number of entries of the original chain. If the friend has fewer entries a warning is given and the resulting histogram will have missing entries. For additional information see TTree::AddFriend. ; Reimplemented from TTree.; Definition at line 682",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTChain.html:65050,access,access,65050,doc/master/classTChain.html,https://root.cern,https://root.cern/doc/master/classTChain.html,1,['access'],['access']
Security,"st of persistent data members.Definition TClass.cxx:2098; TClass::IsTObjectBool_t IsTObject() constReturn kTRUE is the class inherits from TObject.Definition TClass.cxx:6005; TClass::GetStreamerInfoTVirtualStreamerInfo * GetStreamerInfo(Int_t version=0, Bool_t isTransient=kFALSE) constreturns a pointer to the TVirtualStreamerInfo object for version If the object does not exist,...Definition TClass.cxx:4666; TClass::GetBaseClassOffsetInt_t GetBaseClassOffset(const TClass *toBase, void *address=nullptr, bool isDerivedObject=true)Definition TClass.cxx:2858; TClass::GetCollectionProxyTVirtualCollectionProxy * GetCollectionProxy() constReturn the proxy describing the collection (if any).Definition TClass.cxx:2964; TClass::GetClassstatic TClass * GetClass(const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE)Static method returning pointer to TClass of the specified class name.Definition TClass.cxx:3035; TCollection::Classstatic TClass * Class(); TCollection::UseRWLockvirtual bool UseRWLock(Bool_t enable=true)Set this collection to use a RW lock upon access, making it thread safe.Definition TCollection.cxx:761; TCollection::GetSizevirtual Int_t GetSize() constReturn the capacity of the collection, i.e.Definition TCollection.h:184; TDatimeThis class stores the date and time with a precision of one second in an unsigned 32 bit word (950130...Definition TDatime.h:37; TDatime::FillBuffervoid FillBuffer(char *&buffer)Encode Date/Time into buffer, used by I/O system.Definition TDatime.cxx:229; TDatime::AsSQLStringconst char * AsSQLString() constReturn the date & time in SQL compatible string format, like: 1997-01-15 20:16:28.Definition TDatime.cxx:152; TDatime::SizeofInt_t Sizeof() constDefinition TDatime.h:81; TDatime::Streamervirtual void Streamer(TBuffer &)Stream a object of type TDatime.Definition TDatime.cxx:416; TDatime::Setvoid Set()Set Date/Time to current time as reported by the system.Definition TDatime.cxx:289; TDatime::ReadBuffervoid ReadBuffer(char *&buffer)Deco",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDirectoryFile_8cxx_source.html:82217,access,access,82217,doc/master/TDirectoryFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TDirectoryFile_8cxx_source.html,1,['access'],['access']
Security,"st operation, writing the; the message digest and zeroizing the context. void Print() const; Print digest in ascii hex form. const char * AsString() const; Return message digest as string. Returns """" in case Final() has; not yet been called. void Encode(UChar_t* out, const UInt_t* in, UInt_t len); Encodes input into output. Assumes len is a multiple of 4. void Decode(UInt_t* out, const UChar_t* in, UInt_t len); Decodes input into output. Assumes len is a multiple of 4. void Transform(UInt_t[4] buf, const UChar_t[64] in); The core of the MD5 algorithm, this alters an existing MD5 hash to; reflect the addition of 16 longwords of new data. Update() blocks; the data and converts bytes into longwords for this routine. Int_t SetDigest(const char* md5ascii); Set the digest from the ASCII representation 'md5ascii'. The caller; is responsible to make sure that the 32 chars md5ascii are valid.; Returns -1 if md5ascii is malformed, returns 0 otherwise. TMD5 * ReadChecksum(const char* file); Returns checksum stored in ASCII in specified file. Use to read files; created via WriteChecksum(). The returned TMD5 object must be deleted; by the user. Returns 0 in case the file cannot be opened or in case of; error. Static utlity function. Int_t WriteChecksum(const char* file, const TMD5* md5); Writes checksum in ASCII format to specified file. This file can; directly be read by ReadChecksum(). The md5 must have been finalized.; Returns -1 in case file cannot be opened or in case of error,; 0 otherwise. Static utility function. TMD5 * FileChecksum(const char* file); Returns checksum of specified file. The returned TMD5 object must; be deleted by the user. Returns 0 in case the file does not exists; or in case of error. This function preserves the modtime of the file; so it can be safely used in conjunction with methods that keep track; of the file's modtime. Static utility function. Int_t FileChecksum(const char* file, UChar_t[16] digest); Returns checksum of specified file in digest ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMD5.html:3955,checksum,checksum,3955,root/html602/TMD5.html,https://root.cern,https://root.cern/root/html602/TMD5.html,2,['checksum'],['checksum']
Security,"st override;  ; Element & operator() (Int_t rown, Int_t coln) override;  Access element a_ij where i=rown and j=coln. ;  ; TMatrixTSym< Element > & operator*= (Element val);  Multiply every element of the matrix with val. ;  ; TMatrixTSym & operator+= (const TMatrixTSym &source);  Add the source matrix. ;  ; TMatrixTSym< Element > & operator+= (Element val);  Add val to every element of the matrix. ;  ; TMatrixTSym & operator-= (const TMatrixTSym &source);  Subtract the source matrix. ;  ; TMatrixTSym< Element > & operator-= (Element val);  Subtract val from every element of the matrix. ;  ; TMatrixTSym< Element > & operator= (const TMatrixTSym< Element > &source);  ; template<class Element2 > ; TMatrixTSym< Element > & operator= (const TMatrixTSym< Element2 > &source);  ; TMatrixTSym< Element > & operator= (const TMatrixTSymLazy< Element > &source);  ; TMatrixTSym< Element > & operator= (Element val);  Assign val to every element of the matrix. ;  ; TMatrixTRow< Element > operator[] (Int_t rown);  Access row a_i where i=rown. ;  ; const TMatrixTRow_const< Element > operator[] (Int_t rown) const;  ; void Plus (const TMatrixTSym< Element > &a, const TMatrixTSym< Element > &b);  Symmetric matrix summation. Replace this matrix with C such that C = A + B. ;  ; TMatrixTBase< Element > & Randomize (Element alpha, Element beta, Double_t &seed) override;  randomize matrix element values but keep matrix symmetric ;  ; virtual TMatrixTSym< Element > & RandomizePD (Element alpha, Element beta, Double_t &seed);  randomize matrix element values but keep matrix symmetric positive definite ;  ; TMatrixTSym< Element > & Rank1Update (const TVectorT< Element > &v, Element alpha=1.0);  Perform a rank 1 operation on the matrix: A += alpha * v * v^T. ;  ; TMatrixTBase< Element > & ResizeTo (const TMatrixTSym< Element > &m);  ; TMatrixTBase< Element > & ResizeTo (Int_t nrows, Int_t ncols, Int_t=-1) override;  Set size of the matrix to nrows x ncols New dynamic elements are created, the ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTSym.html:5904,Access,Access,5904,doc/master/classTMatrixTSym.html,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html,1,['Access'],['Access']
Security,"st va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TXMLSetup; Int_t AtoI (const char *sbuf, Int_t def=0, const char *errinfo=nullptr);  converts string to integer. ;  ; const char * GetElItemName (TStreamerElement *el);  get item name for given element ;  ; Bool_t IsValidXmlSetup (const char *setupstr);  checks if string is valid setup ;  ; Bool_t ReadSetupFromStr (const char *setupstr);  get values from string ;  ; TClass * XmlDefineClass (const char *xmlClassName);  define class for the converted class name, where special symbols were replaced by '_' ;  . Static Protected Member Functions; static void * ConvertFromXMLChecked (const char *xml, const TClass *expectedClass, Bool_t GenericLayout=kFALSE, Bool_t UseNamespaces=kFALSE);  Convert from XML and check if object derived from specified class When possible, cast to given class. ;  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  . Protected Attributes; Bool_t fCanUseCompact {kFALSE};  ! Flag indicate that basic type (like Int_t) can be placed in the same tag ;  ; Int_t fCompressLevel {0};  ! Compression level and algorithm ;  ; Int_t fErrorFlag {0};  ! Error flag ;  ; TClass * fExpectedBaseClass {nullptr};  ! Pointer to class, which should be stored as parent of current ;  ; Int_t fIOVersion {3};  ! Indicates format of ROOT xml file ;  ; std::deque< std::unique_ptr< TXMLStackObj > > fStack;  ! Stack of processed objects ;  ; TString fValueBuf;  ! Current value buffer ;  ; Version_t fVersionBuf {-111};  ! Current version buffer ;  ; TXMLEngine * fXML {nullptr};  ! instance of TXMLEngine for working with XML structures ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferXML.html:49544,hash,hash,49544,doc/master/classTBufferXML.html,https://root.cern,https://root.cern/doc/master/classTBufferXML.html,1,['hash'],['hash']
Security,"st&); virtual voidprintCompactTreeHook(ostream&, const char*); virtual Bool_tredirectServersHook(const RooAbsCollection&, Bool_t, Bool_t, Bool_t); voidRooCacheManager<RooAbsCacheElement>::reset(); Int_tRooCacheManager<RooAbsCacheElement>::setObj(const RooArgSet* nset, RooAbsCacheElement* obj, const TNamed* isetRangeName = 0); Int_tRooCacheManager<RooAbsCacheElement>::setObj(const RooArgSet* nset, const RooArgSet* iset, RooAbsCacheElement* obj, const TNamed* isetRangeName = 0); virtual voidShowMembers(TMemberInspector& insp, char* parent); voidRooCacheManager<RooAbsCacheElement>::sterilize(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. Bool_t_clearOnRedirect; Int_tRooCacheManager<RooAbsCacheElement>::_lastIndexLast slot accessed; Int_tRooCacheManager<RooAbsCacheElement>::_maxSizeMaximum size; RooNormSetCache*RooCacheManager<RooAbsCacheElement>::_nsetCache! Normalization/Integration set manager; RooAbsCacheElement**RooCacheManager<RooAbsCacheElement>::_object! Payload; Bool_t_optCacheModeSeen; list<RooArgSet*>_optCacheObsList! list of all optCacheObservables owned; RooArgSet*_optCacheObservables! current optCacheObservables ; RooAbsArg*RooAbsCache::_ownerPointer to owning RooAbsArg; Int_tRooCacheManager<RooAbsCacheElement>::_sizeActual use. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooObjCacheManager(RooAbsArg* owner = 0, Int_t maxSize = 10, Bool_t clearCacheOnServerRedirect = kTRUE); Constructor of object cache manager for given owner. If clearCacheOnServerRedirect is true; all cache elements will be cleared when a server redirect is intercepted by the cache manager.; This is the default strategy and should only be overridden when you really understand; what you're doing as properly implementing server redirect in cache elements can get very; complicated, especially if there are (cyclical) reference back to the owning object. RooObjCacheManager(const RooObjCacheManager&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooObjCacheManager.html:2942,access,accessed,2942,root/html526/RooObjCacheManager.html,https://root.cern,https://root.cern/root/html526/RooObjCacheManager.html,1,['access'],['accessed']
Security,"st(RooArgSet* whichVars = __null); virtual Int_tGetDimension() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tGetHistCutoff(); virtual const char*TObject::GetIconName() const; virtual enum IntervalTypeGetIntervalType(); Double_tGetKeysMax(); virtual Double_tGetKeysPdfCutoff(); virtual const char*TNamed::GetName() const; virtual RooRealVar*GetNLLVar() const; virtual Int_tGetNumBurnInSteps(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual RooArgSet*GetParameters() const; virtual TH1*GetPosteriorHist(); virtual RooNDKeysPdf*GetPosteriorKeysPdf(); virtual RooProduct*GetPosteriorKeysProduct(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tGetUseKeys(); virtual RooRealVar*GetWeightVar() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInInterval(const RooArgSet& point) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Double_tLowerLimit(RooRealVar& param); virtual Double_tLowerLimitByDataHist(RooRealVar& param); virtual Double_tLowerLimitByHist(RooRealVar& param); virtual Double_tLowerLimitByKeys(RooRealVar& param); virtual Double_tLowerLimitBySparseHist(RooRealVar& param); virtual Double_tLowerLimitShortest(RooRealVar& param); virtual Double_tLowerLimitTailFraction(RooRealVar& param); virtual voidTNamed::ls(Option_t* opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__MCMCInterval.html:5515,Hash,Hash,5515,root/html602/RooStats__MCMCInterval.html,https://root.cern,https://root.cern/root/html602/RooStats__MCMCInterval.html,2,['Hash'],['Hash']
Security,"st-read callback. ; Definition at line 175 of file RFieldBase.hxx. ◆ fName. std::string ROOT::Experimental::RFieldBase::fName. private . The field name relative to its parent field. ; Definition at line 167 of file RFieldBase.hxx. ◆ fNRepetitions. std::size_t ROOT::Experimental::RFieldBase::fNRepetitions. private . For fixed sized arrays, the array length. ; Definition at line 173 of file RFieldBase.hxx. ◆ fOnDiskId. DescriptorId_t ROOT::Experimental::RFieldBase::fOnDiskId = kInvalidDescriptorId. private . When the columns are connected to a page source or page sink, the field represents a field id in the corresponding RNTuple descriptor. ; This on-disk ID is set in RPageSink::Create() for writing and by RFieldDescriptor::CreateField() when recreating a field / model from the stored descriptor. ; Definition at line 179 of file RFieldBase.hxx. ◆ fOnDiskTypeChecksum. std::uint32_t ROOT::Experimental::RFieldBase::fOnDiskTypeChecksum = 0. protected . TClass checksum cached from the descriptor after a call to ConnectPageSource(). ; Only set for classes with dictionaries. ; Definition at line 246 of file RFieldBase.hxx. ◆ fOnDiskTypeVersion. std::uint32_t ROOT::Experimental::RFieldBase::fOnDiskTypeVersion = kInvalidTypeVersion. protected . C++ type version cached from the descriptor after a call to ConnectPageSource() ; Definition at line 243 of file RFieldBase.hxx. ◆ fParent. RFieldBase* ROOT::Experimental::RFieldBase::fParent. protected . Sub fields point to their mother field. ; Definition at line 222 of file RFieldBase.hxx. ◆ fPrincipalColumn. Internal::RColumn* ROOT::Experimental::RFieldBase::fPrincipalColumn = nullptr. protected . All fields that have columns have a distinct main column. ; E.g., for simple fields (float, int, ...), the principal column corresponds to the field type. For collection fields except fixed-sized arrays, the main column is the offset field. Class fields have no column of their own. When reading, points to any column of the column team of t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RFieldBase.html:55516,checksum,checksum,55516,doc/master/classROOT_1_1Experimental_1_1RFieldBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RFieldBase.html,1,['checksum'],['checksum']
Security,"st::FindObject(const char* name) const; virtual TObject*TList::FindObject(const TObject* obj) const; virtual TObject*TList::First() const; virtual TObjLink*TList::FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**TList::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tTList::IsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tIsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*TList::Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*TList::LastLink() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSortedList.html:3664,Hash,Hash,3664,root/html528/TSortedList.html,https://root.cern,https://root.cern/root/html528/TSortedList.html,1,['Hash'],['Hash']
Security,"st::FindObject(const char* name) const; virtual TObject*TList::FindObject(const TObject* obj) const; virtual TObject*TList::First() const; virtual TObjLink*TList::FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**TList::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tTList::IsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*TList::Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*TList::LastLink() const; virtual voidTCollection::ls(Option_t* option = """") con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooList.html:3839,Hash,Hash,3839,root/html526/RooList.html,https://root.cern,https://root.cern/root/html526/RooList.html,4,['Hash'],['Hash']
Security,"st; Int_tTEveElement::GetParentIgnoreCnt() const; virtual TObject*TEveElement::GetRenderObject(const TEveException& eh = ""TEveElement::GetRenderObject "") const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; Bool_tTEveWindow::GetShowTitleBar() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; TGTab*GetTab() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTEveWindow::IsAncestorOf(TEveWindow* win); Bool_tTEveWindow::IsCurrent() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveWindowTab.html:9289,Hash,Hash,9289,root/html528/TEveWindowTab.html,https://root.cern,https://root.cern/root/html528/TEveWindowTab.html,1,['Hash'],['Hash']
Security,"st; TDictAttributeMap*TDictionary::GetAttributeMap() const; TDictionary::DeclId_tGetDeclId() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*GetListOfMethodArgs(); virtual const char*GetMangledName() const; virtual const char*TNamed::GetName() const; Int_tGetNargs() const; Int_tGetNargsOpt() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetPrototype() const; const char*GetReturnTypeName() const; stringGetReturnTypeNormalizedName() const; const char*GetSignature(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; void*InterfaceMethod() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid(); Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFunction.html:2970,Hash,Hash,2970,root/html602/TFunction.html,https://root.cern,https://root.cern/root/html602/TFunction.html,2,['Hash'],['Hash']
Security,"st; TMatrixDSymGetCorrelationMatrix() const; voidROOT::Fit::FitResult::GetCorrelationMatrix<TMatrixDSym>(TMatrixTSym<double>& mat) const; TMatrixDSymGetCovarianceMatrix() const; voidROOT::Fit::FitResult::GetCovarianceMatrix<TMatrixDSym>(TMatrixTSym<double>& mat) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const double*ROOT::Fit::FitResult::GetErrors() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; stringROOT::Fit::FitResult::GetParameterName(unsigned int ipar) const; const double*ROOT::Fit::FitResult::GetParams() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; doubleROOT::Fit::FitResult::GlobalCC(unsigned int i) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; boolROOT::Fit::FitResult::HasMinosError(unsigned int i) const; intROOT::Fit::FitResult::Index(const string& name) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; boolROOT::Fit::FitResult::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; boolROOT::Fit::FitResult::IsParameterBound(unsigned int ipar) const; boolROOT::Fit::FitResult::IsParameterFixed(unsigned int ipar) const; virtual Bool_tTNamed::IsSortable() const; boolROOT::Fit::FitResult::IsValid() const; Bool_tTObject::IsZombie() const; doubleROOT::Fit::FitResult::LowerError(unsigned int i) const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFitResult.html:4082,Hash,Hash,4082,root/html530/TFitResult.html,https://root.cern,https://root.cern/root/html530/TFitResult.html,3,['Hash'],['Hash']
Security,"st; TMatrixDSymGetCorrelationMatrix() const; voidROOT::Fit::FitResult::GetCorrelationMatrix<TMatrixDSym>(TMatrixTSym<double>& mat) const; TMatrixDSymGetCovarianceMatrix() const; voidROOT::Fit::FitResult::GetCovarianceMatrix<TMatrixDSym>(TMatrixTSym<double>& mat) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const double*ROOT::Fit::FitResult::GetErrors() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; stringROOT::Fit::FitResult::GetParameterName(unsigned int ipar) const; const double*ROOT::Fit::FitResult::GetParams() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; doubleROOT::Fit::FitResult::GlobalCC(unsigned int i) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; intROOT::Fit::FitResult::Index(const string& name) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; boolROOT::Fit::FitResult::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; boolROOT::Fit::FitResult::IsParameterBound(unsigned int ipar) const; boolROOT::Fit::FitResult::IsParameterFixed(unsigned int ipar) const; virtual Bool_tTNamed::IsSortable() const; boolROOT::Fit::FitResult::IsValid() const; Bool_tTObject::IsZombie() const; doubleROOT::Fit::FitResult::LowerError(unsigned int i) const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; doubleROOT::Fit::FitResult::Mi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFitResult.html:3956,Hash,Hash,3956,root/html528/TFitResult.html,https://root.cern,https://root.cern/root/html528/TFitResult.html,1,['Hash'],['Hash']
Security,"st; static Long_tTObject::GetDtorOnly(); Int_tGetHistNBins(Int_t evtNum = 0); virtual const char*TObject::GetIconName() const; Double_tGetIntegral(Double_t xmin, Double_t xmax); TMVA::PDF::EInterpolateMethodGetInterpolMethod(); virtual const char*GetName() const; Int_tGetNBins() const; TH1*GetNSmoothHist() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; TH1*GetOriginalHist() const; TH1*GetPDFHist() const; UInt_tGetReadingVersion() const; TH1*GetSmoothedHist() const; TSpline*GetSpline() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetVal(Double_t x) const; Double_tGetValInverse(Double_t y, Bool_t isMonotonouslyIncreasingFunction = kFALSE) const; Double_tGetXmax() const; Double_tGetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__PDF.html:3058,Hash,Hash,3058,root/html530/TMVA__PDF.html,https://root.cern,https://root.cern/root/html530/TMVA__PDF.html,2,['Hash'],['Hash']
Security,"st; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTText::GetTextAdvance(UInt_t& a, const char* text, const Bool_t kern = kTRUE) const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual voidTText::GetTextAscentDescent(UInt_t& a, UInt_t& d, const char* text) const; virtual Color_tTAttText::GetTextColor() const; virtual voidTText::GetTextExtent(UInt_t& w, UInt_t& h, const char* text) const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTText::GetX() const; Double_tTText::GetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTText::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttText::Modify(); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLink.html:3298,Hash,Hash,3298,root/html528/TLink.html,https://root.cern,https://root.cern/root/html528/TLink.html,1,['Hash'],['Hash']
Security,"st; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTText::GetTextAdvance(UInt_t& a, const char* text, const Bool_t kern = kTRUE) const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual voidTText::GetTextAscentDescent(UInt_t& a, UInt_t& d, const char* text) const; virtual Color_tTAttText::GetTextColor() const; virtual voidTText::GetTextExtent(UInt_t& w, UInt_t& h, const char* text) const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTText::GetX() const; Double_tTText::GetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTText::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttText::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TLink.html:3298,Hash,Hash,3298,root/html530/TLink.html,https://root.cern,https://root.cern/root/html530/TLink.html,2,['Hash'],['Hash']
Security,"st; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**TList::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tTList::IsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*TList::Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*TList::LastLink() const; virtual voidTCollection::ls(Option_t* option = """") con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TParallelCoordSelect.html:4130,Hash,Hash,4130,root/html530/TParallelCoordSelect.html,https://root.cern,https://root.cern/root/html530/TParallelCoordSelect.html,5,['Hash'],['Hash']
Security,"st; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTPCON::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTPCON::GetNumberOfDivisions() const; virtual Int_tTPCON::GetNz() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tTPCON::GetPhi1() const; virtual Float_t*TPCON::GetRmax() const; virtual Float_t*TPCON::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPGON.html:3924,Hash,Hash,3924,root/html528/TPGON.html,https://root.cern,https://root.cern/root/html528/TPGON.html,1,['Hash'],['Hash']
Security,"st; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTPCON::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTPCON::GetNumberOfDivisions() const; virtual Int_tTPCON::GetNz() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tTPCON::GetPhi1() const; virtual Float_t*TPCON::GetRmax() const; virtual Float_t*TPCON::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPGON.html:3924,Hash,Hash,3924,root/html530/TPGON.html,https://root.cern,https://root.cern/root/html530/TPGON.html,3,['Hash'],['Hash']
Security,"st; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTPCON::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTPCON::GetNumberOfDivisions() const; virtual Int_tTPCON::GetNz() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tTPCON::GetPhi1() const; virtual Float_t*TPCON::GetRmax() const; virtual Float_t*TPCON::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPGON.html:3777,Hash,Hash,3777,root/html602/TPGON.html,https://root.cern,https://root.cern/root/html602/TPGON.html,2,['Hash'],['Hash']
Security,"st; virtual Int_tTTree::GetTimerInterval() const; virtual const char*TNamed::GetTitle() const; virtual Long64_tTTree::GetTotBytes() const; virtual TTree*TChain::GetTree() const; virtual TVirtualIndex*TTree::GetTreeIndex() const; virtual Int_tTChain::GetTreeNumber() const; Long64_t*TChain::GetTreeOffset() const; Int_tTChain::GetTreeOffsetLen() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTTree::GetUpdate() const; virtual TList*TTree::GetUserInfo(); virtual Double_t*TTree::GetV1(); virtual Double_t*TTree::GetV2(); virtual Double_t*TTree::GetV3(); virtual Double_t*TTree::GetV4(); virtual Double_t*TTree::GetVal(Int_t i); TTreeFormula*TTree::GetVar(Int_t i); TTreeFormula*TTree::GetVar1(); TTreeFormula*TTree::GetVar2(); TTreeFormula*TTree::GetVar3(); TTreeFormula*TTree::GetVar4(); virtual Double_t*TTree::GetW(); virtual Double_tTChain::GetWeight() const; virtual Long64_tTTree::GetZipBytes() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tHasTreeHeader() const; virtual voidTTree::IncrementTotalBuffers(Int_t nbytes); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTTree::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Int_tTChain::LoadBaskets(Long64_t maxmemory); virtual Long64_tTChain::LoadTree(Long64_t entry); virtual Long64_tTTree::LoadTreeFriend(Long64_t entry, TTree* T); voidTChain::Lookup(Bool_t force = kFALSE); virtual voidTChain::Loop(Option_t* option = """", Long64_t nentries = kBigNumber, Long64_t firstentry = 0)MENU ; virtual voidTChain::ls(O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofChain.html:10129,Hash,Hash,10129,root/html528/TProofChain.html,https://root.cern,https://root.cern/root/html528/TProofChain.html,1,['Hash'],['Hash']
Security,"st; virtual Long64_tTSelectorDraw::GetSelectedRows() const; const char*GetSelection() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; const char*GetSubIdExp() const; Int_tGetSubIdNum() const; virtual const char*TObject::GetTitle() const; TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_t*TSelectorDraw::GetV1() const; virtual Double_t*TSelectorDraw::GetV2() const; virtual Double_t*TSelectorDraw::GetV3() const; virtual Double_t*TSelectorDraw::GetV4() const; virtual Double_t*TSelectorDraw::GetVal(Int_t i) const; TTreeFormula*TSelectorDraw::GetVar(Int_t i) const; TTreeFormula*TSelectorDraw::GetVar1() const; TTreeFormula*TSelectorDraw::GetVar2() const; TTreeFormula*TSelectorDraw::GetVar3() const; TTreeFormula*TSelectorDraw::GetVar4() const; const char*GetVarexp() const; virtual Double_t*TSelectorDraw::GetW() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTSelector::Init(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTSelectorDraw::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEvePointSelector.html:4135,Hash,Hash,4135,root/html528/TEvePointSelector.html,https://root.cern,https://root.cern/root/html528/TEvePointSelector.html,1,['Hash'],['Hash']
Security,"st; virtual Long64_tTSelectorDraw::GetSelectedRows() const; const char*GetSelection() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; const char*GetSubIdExp() const; Int_tGetSubIdNum() const; virtual const char*TObject::GetTitle() const; TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_t*TSelectorDraw::GetV1() const; virtual Double_t*TSelectorDraw::GetV2() const; virtual Double_t*TSelectorDraw::GetV3() const; virtual Double_t*TSelectorDraw::GetV4() const; virtual Double_t*TSelectorDraw::GetVal(Int_t i) const; TTreeFormula*TSelectorDraw::GetVar(Int_t i) const; TTreeFormula*TSelectorDraw::GetVar1() const; TTreeFormula*TSelectorDraw::GetVar2() const; TTreeFormula*TSelectorDraw::GetVar3() const; TTreeFormula*TSelectorDraw::GetVar4() const; const char*GetVarexp() const; virtual Double_t*TSelectorDraw::GetW() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTSelector::Init(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTSelectorDraw::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEvePointSelector.html:4135,Hash,Hash,4135,root/html530/TEvePointSelector.html,https://root.cern,https://root.cern/root/html530/TEvePointSelector.html,3,['Hash'],['Hash']
Security,"st; virtual Long64_tTSelectorDraw::GetSelectedRows() const; const char*GetSelection() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; const char*GetSubIdExp() const; Int_tGetSubIdNum() const; virtual const char*TObject::GetTitle() const; TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_t*TSelectorDraw::GetV1() const; virtual Double_t*TSelectorDraw::GetV2() const; virtual Double_t*TSelectorDraw::GetV3() const; virtual Double_t*TSelectorDraw::GetV4() const; virtual Double_t*TSelectorDraw::GetVal(Int_t i) const; TTreeFormula*TSelectorDraw::GetVar(Int_t i) const; TTreeFormula*TSelectorDraw::GetVar1() const; TTreeFormula*TSelectorDraw::GetVar2() const; TTreeFormula*TSelectorDraw::GetVar3() const; TTreeFormula*TSelectorDraw::GetVar4() const; const char*GetVarexp() const; virtual Double_t*TSelectorDraw::GetW() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTSelector::Init(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTSelectorDraw::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEvePointSelector.html:4070,Hash,Hash,4070,root/html602/TEvePointSelector.html,https://root.cern,https://root.cern/root/html602/TEvePointSelector.html,2,['Hash'],['Hash']
Security,"st; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); RooDataSet*RooStats::HypoTestResult::GetFitInfo() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; RooDataSet*RooStats::HypoTestResult::GetNullDetailedOutput() const; RooStats::SamplingDistribution*RooStats::HypoTestResult::GetNullDistribution() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooStats::HybridPlot*GetPlot(const char* name, const char* title, int n_bins); Bool_tRooStats::HypoTestResult::GetPValueIsRightTail() const; vector<double>GetTestStat_b(); doubleGetTestStat_data(); vector<double>GetTestStat_sb(); Double_tRooStats::HypoTestResult::GetTestStatisticData() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tRooStats::HypoTestResult::HasTestStatisticData() const; RooStats::HybridResultHybridResult(const char* name = 0); RooStats::HybridResultHybridResult(const RooStats::HybridResult&); RooStats::HybridResultHybridResult(const char* name, const vector<double>& testStat_sb_vals, const vector<double>& testStat_b_vals, bool sumLargerValues = true); RooStats::HypoTestResultRooStats::HypoTestResult::HypoTestResult(const char* name = 0); RooStats::HypoTestResultRooStats::HypoTestResult::HypoTestResult(const RooStats::HypoTestResult& other); RooStats::HypoTestResultRooStats::HypoTestResult::HypoTestResult(const char* name, Double_t nullp, Double_t altp); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEq",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HybridResult.html:3980,Hash,Hash,3980,root/html534/RooStats__HybridResult.html,https://root.cern,https://root.cern/root/html534/RooStats__HybridResult.html,3,['Hash'],['Hash']
Security,"st; virtual TLeaf*TLeaf::GetLeafCount() const; virtual TLeaf*TLeaf::GetLeafCounter(Int_t& countval) const; virtual Int_tTLeaf::GetLen() const; virtual Int_tTLeaf::GetLenStatic() const; virtual Int_tTLeaf::GetLenType() const; virtual Int_tGetMaximum() const; virtual Int_tGetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual Long64_tTLeaf::GetValueLong64(Int_t i = 0) const; virtual LongDouble_tTLeaf::GetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; char*GetValueString() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImport(TClonesArray* list, Int_t n); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTLeaf::IsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLeafC.html:3033,Hash,Hash,3033,root/html534/TLeafC.html,https://root.cern,https://root.cern/root/html534/TLeafC.html,1,['Hash'],['Hash']
Security,"st; virtual TLeaf*TLeaf::GetLeafCount() const; virtual TLeaf*TLeaf::GetLeafCounter(Int_t& countval) const; virtual Int_tTLeaf::GetLen() const; virtual Int_tTLeaf::GetLenStatic() const; virtual Int_tTLeaf::GetLenType() const; virtual Int_tGetMaximum() const; virtual Int_tGetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual Long64_tTLeaf::GetValueLong64(Int_t i = 0) const; virtual LongDouble_tTLeaf::GetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; char*GetValueString() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImport(TClonesArray* list, Int_t n); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTLeaf::IsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLeafC.html:2939,Hash,Hash,2939,root/html602/TLeafC.html,https://root.cern,https://root.cern/root/html602/TLeafC.html,2,['Hash'],['Hash']
Security,"st; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*RooAbsData::get() const; virtual const RooArgSet*RooAbsData::get(Int_t index) const; static RooAbsData::StorageTypeRooAbsData::getDefaultStorageType(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Bool_tRooAbsData::getRange(RooRealVar& var, Double_t& lowest, Double_t& highest, Double_t marginFrac = 0, Bool_t symMode = kFALSE) const; RooAbsData*RooAbsData::getSimData(const char* idxstate); virtual const char*TNamed::GetTitle() const; const TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsData::hasFilledCache() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsData::isNonPoissonWeighted() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tRooAbsData::isWeighted() const; Bool_tTObject::IsZombie() const; Double_tRooAbsData::kurtosis(RooRealVar& var, const char* cutSpec = 0, const char* cutRange = 0) const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Double_tRooAbsData::mean(RooRealVar& var, const char* cutSpec = 0, const char* cutRange = 0) const; RooRealVar*RooAbsData::meanVar(RooRealVar& var, const char* cutSpec ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooTreeData.html:5218,Hash,Hash,5218,root/html534/RooTreeData.html,https://root.cern,https://root.cern/root/html534/RooTreeData.html,3,['Hash'],['Hash']
Security,"st; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortGetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TList*TSelector::GetInputList() const; virtual TClass*GetInterpretedClass() const; virtual TSelector*GetInterpretedSelector() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tGetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSelectorCint.html:2791,Hash,Hash,2791,root/html534/TSelectorCint.html,https://root.cern,https://root.cern/root/html534/TSelectorCint.html,1,['Hash'],['Hash']
Security,"st; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortGetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TList*TSelector::GetInputList() const; virtual TClass*GetInterpretedClass() const; virtual TSelector*GetInterpretedSelector() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tGetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSelectorCint.html:2798,Hash,Hash,2798,root/html602/TSelectorCint.html,https://root.cern,https://root.cern/root/html602/TSelectorCint.html,2,['Hash'],['Hash']
Security,"st; virtual const char*TDirectory::GetPathStatic() const; static Int_tTFile::GetReadaheadSize(); virtual Int_tTFile::GetReadCalls() const; Int_tTFile::GetRecordHeader(char* buf, Long64_t first, Int_t maxbytes, Int_t& nbytes, Int_t& objlen, Int_t& keylen); Long64_tTFile::GetRelOffset() const; virtual Long64_tTDirectoryFile::GetSeekDir() const; virtual Long64_tTFile::GetSeekFree() const; virtual Long64_tTFile::GetSeekInfo() const; virtual Long64_tTDirectoryFile::GetSeekKeys() const; virtual Long64_tTDirectoryFile::GetSeekParent() const; virtual Long64_tTFile::GetSize() const; const TList*TFile::GetStreamerInfoCache(); virtual TList*TFile::GetStreamerInfoList(); virtual const char*TNamed::GetTitle() const; static TFile::EFileTypeTFile::GetType(const char* name, Option_t* option = """", TString* prefix = 0); virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; Int_tTFile::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTFile::IncrementFileCounter(); virtual voidTFile::IncrementProcessIDs(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFile::IsArchive() const; Bool_tTFile::IsBinary() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tTDirectoryFile::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOpen() const; Bool_tTFile::IsRaw() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectoryFile::IsWritable() const; Bool_tTObject::IsZombie() const; virtual voidTFile::ls(Option_t* option = """") const; virtual voidTFile::MakeFree(Long64_t first, Long64_t last); virtual voidTFile::MakeProject(const char* dirnam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TNetFile.html:9322,Hash,Hash,9322,root/html528/TNetFile.html,https://root.cern,https://root.cern/root/html528/TNetFile.html,8,['Hash'],['Hash']
Security,"st; virtual const char*TDirectory::GetPathStatic() const; static Int_tTFile::GetReadaheadSize(); virtual Int_tTFile::GetReadCalls() const; Int_tTFile::GetRecordHeader(char* buf, Long64_t first, Int_t maxbytes, Int_t& nbytes, Int_t& objlen, Int_t& keylen); Long64_tTFile::GetRelOffset() const; virtual Long64_tTDirectoryFile::GetSeekDir() const; virtual Long64_tTFile::GetSeekFree() const; virtual Long64_tTFile::GetSeekInfo() const; virtual Long64_tTDirectoryFile::GetSeekKeys() const; virtual Long64_tTDirectoryFile::GetSeekParent() const; virtual Long64_tTFile::GetSize() const; const TList*TFile::GetStreamerInfoCache(); virtual TList*TFile::GetStreamerInfoList(); virtual const char*TNamed::GetTitle() const; static TFile::EFileTypeTFile::GetType(const char* name, Option_t* option = """", TString* prefix = 0); virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; Int_tTFile::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTFile::IncrementFileCounter(); virtual voidTFile::IncrementProcessIDs(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFile::IsArchive() const; Bool_tTFile::IsBinary() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tTDirectoryFile::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTFile::IsOpen() const; Bool_tTFile::IsRaw() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectoryFile::IsWritable() const; Bool_tTObject::IsZombie() const; virtual voidTFile::ls(Option_t* option = """") const; virtual voidTFile::MakeFree(Long64_t first, Long64_t last); virtual voidTFile::MakeProject(const char*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TDCacheFile.html:7810,Hash,Hash,7810,root/html526/TDCacheFile.html,https://root.cern,https://root.cern/root/html526/TDCacheFile.html,6,['Hash'],['Hash']
Security,"st; virtual const char*TDirectory::GetPathStatic() const; static Int_tTFile::GetReadaheadSize(); virtual Int_tTFile::GetReadCalls() const; Int_tTFile::GetRecordHeader(char* buf, Long64_t first, Int_t maxbytes, Int_t& nbytes, Int_t& objlen, Int_t& keylen); Long64_tTFile::GetRelOffset() const; virtual Long64_tTDirectoryFile::GetSeekDir() const; virtual Long64_tTFile::GetSeekFree() const; virtual Long64_tTFile::GetSeekInfo() const; virtual Long64_tTDirectoryFile::GetSeekKeys() const; virtual Long64_tTDirectoryFile::GetSeekParent() const; virtual Long64_tTFile::GetSize() const; const TList*TFile::GetStreamerInfoCache(); virtual TList*TFile::GetStreamerInfoList(); virtual const char*TNamed::GetTitle() const; static TFile::EFileTypeTFile::GetType(const char* name, Option_t* option = """", TString* prefix = 0); virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; Int_tTFile::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTFile::IncrementFileCounter(); virtual voidTFile::IncrementProcessIDs(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFile::IsArchive() const; Bool_tTFile::IsBinary() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tTDirectoryFile::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNetFile::IsOpen() const; Bool_tTFile::IsRaw() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectoryFile::IsWritable() const; Bool_tTObject::IsZombie() const; virtual voidTFile::ls(Option_t* option = """") const; virtual voidTFile::MakeFree(Long64_t first, Long64_t last); virtual voidTFile::MakeProject(const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TCastorFile.html:8724,Hash,Hash,8724,root/html530/TCastorFile.html,https://root.cern,https://root.cern/root/html530/TCastorFile.html,2,['Hash'],['Hash']
Security,"st; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGDimensionGetDimension() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGPositionGetPosition() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TGRegionIntersect(const TGRegion& r) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsNull() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGRegion.html:2789,Hash,Hash,2789,root/html528/TGRegion.html,https://root.cern,https://root.cern/root/html528/TGRegion.html,1,['Hash'],['Hash']
Security,"st; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGDimensionGetDimension() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGPositionGetPosition() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TGRegionIntersect(const TGRegion& r) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsNull() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGRegion.html:2789,Hash,Hash,2789,root/html530/TGRegion.html,https://root.cern,https://root.cern/root/html530/TGRegion.html,3,['Hash'],['Hash']
Security,"st; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGDimensionGetDimension() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGPositionGetPosition() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TGRegionIntersect(const TGRegion& r) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsNull() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGRegion.html:2467,Hash,Hash,2467,root/html602/TGRegion.html,https://root.cern,https://root.cern/root/html602/TGRegion.html,2,['Hash'],['Hash']
Security,"st; voidTObject::MakeZombie(). Data Members; public:. enum HashMethod { Pointer; Name; Intrinsic; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooLinkedList**_arr! Array of linked lists storing elements in each slot; Int_t_entriesNumber of entries stored; RooHashTable::HashMethod_hashMethodHashing method; Int_t_sizeTotal number of slots; Int_t_usedSlotsNumber of used slots. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooHashTable(Int_t initSize = 17, RooHashTable::HashMethod hashMethod = Name); Construct a hash table with given capacity and hash method. RooHashTable(const RooHashTable& other); Copy constructor. void add(TObject* arg, TObject* hashArg = 0); Add given object to table. If hashArg is given, hash will be calculation; on that rather than on 'arg'. Bool_t remove(TObject* arg, TObject* hashArg = 0); Remove given object from table. If hashArg is given, hash will be calculation; on that rather than on 'arg'. Double_t avgCollisions() const; Calculate the average number of collisions (table slots with >1 filled entry). Bool_t replace(const TObject* oldArg, const TObject* newArg, const TObject* oldHashArg = 0); Replace oldArg with newArg in the table. If oldHashArg is given, use that to calculate; the hash associated with oldArg. TObject* find(const char* name) const; Return the object with given name from the table. RooAbsArg* findArg(const RooAbsArg* arg) const. TObject* find(const TObject* arg) const; Return object with the given pointer from the table. RooLinkedListElem* findLinkTo(const TObject* arg) const; Return RooLinkedList element link to object 'hashArg'. RooSetPair* findSetPair(const RooArgSet* set1, const RooArgSet* set2) const; Return RooSetPair with given pointers in table. ~RooHash",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooHashTable.html:6638,hash,hashArg,6638,root/html532/RooHashTable.html,https://root.cern,https://root.cern/root/html532/RooHashTable.html,4,['hash'],"['hash', 'hashArg']"
Security,"st; voidTObject::MakeZombie(). Data Members; public:. enum HashMethod { Pointer; Name; Intrinsic; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooLinkedList**_arr! Array of linked lists storing elements in each slot; Int_t_entriesNumber of entries stored; RooHashTable::HashMethod_hashMethodHashing method; Int_t_sizeTotal number of slots; Int_t_usedSlotsNumber of used slots. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooHashTable(Int_t initSize = 17, RooHashTable::HashMethod hashMethod = Name); Construct a hash table with given capacity and hash method. RooHashTable(const RooHashTable& other); Copy constructor. void add(TObject* arg, TObject* hashArg = 0); Add given object to table. If hashArg is given, hash will be calculation; on that rather than on 'arg'. Bool_t remove(TObject* arg, TObject* hashArg = 0); Remove given object from table. If hashArg is given, hash will be calculation; on that rather than on 'arg'. Double_t avgCollisions() const; Calculate the average number of collisions (table slots with >1 filled entry). Bool_t replace(const TObject* oldArg, const TObject* newArg, const TObject* oldHashArg = 0); Replace oldArg with newArg in the table. If oldHashArg is given, use that to calculate; the hash associated with oldArg. TObject* find(const char* name) const; Return the object with given name from the table. TObject* find(const TObject* arg) const; Return object with the given pointer from the table. RooLinkedListElem* findLinkTo(const TObject* arg) const; Return RooLinkedList element link to object 'hashArg'. RooSetPair* findSetPair(const RooArgSet* set1, const RooArgSet* set2) const; Return RooSetPair with given pointers in table. ~RooHashTable(); Destructor. Int_t size() const; { retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooHashTable.html:6500,hash,hashArg,6500,root/html528/RooHashTable.html,https://root.cern,https://root.cern/root/html528/RooHashTable.html,4,['hash'],"['hash', 'hashArg']"
Security,"st; voidTObject::MakeZombie(). Data Members; public:. enum HashMethod { Pointer; Name; Intrinsic; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooLinkedList**_arr! Array of linked lists storing elements in each slot; Int_t_entriesNumber of entries stored; RooHashTable::HashMethod_hashMethodHashing method; Int_t_sizeTotal number of slots; Int_t_usedSlotsNumber of used slots. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooHashTable(Int_t initSize = 17, RooHashTable::HashMethod hashMethod = Name); Construct a hash table with given capacity and hash method. RooHashTable(const RooHashTable& other); Copy constructor. void add(TObject* arg, TObject* hashArg = 0); Add given object to table. If hashArg is given, hash will be calculation; on that rather than on 'arg'. Bool_t remove(TObject* arg, TObject* hashArg = 0); Remove given object from table. If hashArg is given, hash will be calculation; on that rather than on 'arg'. Double_t avgCollisions() const; Calculate the average number of collisions (table slots with >1 filled entry). Bool_t replace(const TObject* oldArg, const TObject* newArg, const TObject* oldHashArg = 0); Replace oldArg with newArg in the table. If oldHashArg is given, use that to calculate; the hash associated with oldArg. TObject* find(const char* name); Return the object with given name from the table. TObject* find(const TObject* hashArg); Return object with the given pointer from the table. RooLinkedListElem* findLinkTo(const TObject* arg) const; Return RooLinkedList element link to object 'hashArg'. RooSetPair* findSetPair(const RooArgSet* set1, const RooArgSet* set2) const; Return RooSetPair with given pointers in table. ~RooHashTable(); Destructor. Int_t size() const; { return _size ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooHashTable.html:6514,hash,hashArg,6514,root/html526/RooHashTable.html,https://root.cern,https://root.cern/root/html526/RooHashTable.html,2,['hash'],"['hash', 'hashArg']"
Security,"st; {return fNumber;}. Int_t GetTickx() const; {return fTickx;}. Int_t GetTicky() const; {return fTicky;}. Double_t GetX1() const; { return fX1; }. Double_t GetX2() const; { return fX2; }. Double_t GetY1() const; { return fY1; }. Double_t GetY2() const; { return fY2; }. TList * GetListOfPrimitives() const; {return fPrimitives;}. TList * GetListOfExecs() const; {return fExecs;}. TObject * GetPadPointer() const; {return fPadPointer;}. TView * GetView() const; {return fView;}. TObject * GetView3D() const; {return fPadView3D;}. Int_t GetLogx() const; {return fLogx;}. Int_t GetLogy() const; {return fLogy;}. Int_t GetLogz() const; {return fLogz;}. TVirtualPad * GetMother() const; {return fMother;}. const char * GetName() const; {return fName.Data();}. const char * GetTitle() const; {return fTitle.Data();}. TCanvas * GetCanvas() const; { return fCanvas; }. Int_t GetPadPaint() const; {return fPadPaint;}. Int_t GetPixmapID() const; {return fPixmapID;}. ULong_t Hash() const; { return fName.Hash(); }. Bool_t HasFixedAspectRatio() const; { return fFixedAspectRatio; }. Bool_t IsEditable() const; {return fEditable;}. Bool_t IsFolder() const; {return kTRUE;}. Bool_t IsModified() const; {return fModified;}. Bool_t IsVertical() const; {return !TestBit(kHori);}. void RangeChanged(); { Emit(""RangeChanged()""); }. void RangeAxisChanged(); { Emit(""RangeAxisChanged()""); }. void ResetView3D(TObject* view = 0); {fPadView3D=view;}. void SetBorderMode(Short_t bordermode); {fBorderMode = bordermode; Modified();}. void SetBorderSize(Short_t bordersize); {fBorderSize = bordersize; Modified();}. void SetCanvas(TCanvas* c); { fCanvas = c; }. void SetGrid(Int_t valuex = 1, Int_t valuey = 1); {fGridx = valuex; fGridy = valuey; Modified();}. void SetGridx(Int_t value = 1); {fGridx = value; Modified();}. void SetGridy(Int_t value = 1); {fGridy = value; Modified();}. void SetNumber(Int_t number); {fNumber = number;}. void SetName(const char* name); {fName = name;}. void SetTicks(Int_t valuex = 1, Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPad.html:65220,Hash,Hash,65220,root/html528/TPad.html,https://root.cern,https://root.cern/root/html528/TPad.html,6,['Hash'],['Hash']
Security,"stBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGObject&operator=(const TGObject& tgo). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TGClient*fClientConnection to display server; Handle_tfIdX11/Win32 Window identifier. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SaveAs(const char* filename = """", Option_t* option = """") const; Write this TGObject to a file using TImage, if filename's extension signals; a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename().; Otherwise forward to TObject::SaveAs(). TGObject& operator=(const TGObject& tgo). TGObject(); { }. TGObject(const TGObject& tgo); { }. virtual ~TGObject(); { }. Handle_t GetId() const; { return fId; }. TGClient * GetClient() const; { return fClient; }. ULong_t Hash() const; { return (ULong_t) fId >> 0; }. Bool_t IsEqual(const TObject* obj) const; { return fId == ((const TGObject *) obj)->fId; }. » Author: Fons Rademakers 27/12/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGObject.h 27658 2009-02-28 05:34:57Z pcanal $ » Last generated: 2010-09-23 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGObject.html:5866,Hash,Hash,5866,root/html528/TGObject.html,https://root.cern,https://root.cern/root/html528/TGObject.html,1,['Hash'],['Hash']
Security,"stBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGObject&operator=(const TGObject& tgo). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TGClient*fClientConnection to display server; Handle_tfIdX11/Win32 Window identifier. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SaveAs(const char* filename = """", Option_t* option = """") const; Write this TGObject to a file using TImage, if filename's extension signals; a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename().; Otherwise forward to TObject::SaveAs(). TGObject& operator=(const TGObject& tgo). TGObject(); { }. TGObject(const TGObject& tgo); { }. virtual ~TGObject(); { }. Handle_t GetId() const; { return fId; }. TGClient * GetClient() const; { return fClient; }. ULong_t Hash() const; { return (ULong_t) fId >> 0; }. Bool_t IsEqual(const TObject* obj) const; { return fId == ((const TGObject *) obj)->fId; }. » Author: Fons Rademakers 27/12/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGObject.h 27658 2009-02-28 05:34:57Z pcanal $ » Last generated: 2011-07-04 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGObject.html:5935,Hash,Hash,5935,root/html530/TGObject.html,https://root.cern,https://root.cern/root/html530/TGObject.html,1,['Hash'],['Hash']
Security,"stBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGObject&operator=(const TGObject& tgo). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TGClient*fClientConnection to display server; Handle_tfIdX11/Win32 Window identifier. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SaveAs(const char* filename = """", Option_t* option = """") const; Write this TGObject to a file using TImage, if filename's extension signals; a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename().; Otherwise forward to TObject::SaveAs(). TGObject& operator=(const TGObject& tgo). TGObject(); { }. TGObject(const TGObject& tgo); { }. virtual ~TGObject(); { }. Handle_t GetId() const; { return fId; }. TGClient * GetClient() const; { return fClient; }. ULong_t Hash() const; { return (ULong_t) fId >> 0; }. Bool_t IsEqual(const TObject* obj) const; { return fId == ((const TGObject *) obj)->fId; }. » Author: Fons Rademakers 27/12/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGObject.h 27658 2009-02-28 05:34:57Z pcanal $ » Last generated: 2011-11-03 20:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGObject.html:5935,Hash,Hash,5935,root/html532/TGObject.html,https://root.cern,https://root.cern/root/html532/TGObject.html,1,['Hash'],['Hash']
Security,"stCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringfGridtype of GRID (AliEn, Globus, ...); TStringfGridUrlthe GRID url used to create the grid connection; TStringfHostGRID portal to which we are connected; TStringfOptionsoptions specified; Int_tfPortport to which we are connected; TStringfPwuser passwd; TStringfUseruser name. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGrid * Connect(const char* grid, const char* uid = 0, const char* pw = 0, const char* options = 0); The grid should be of the form: <grid>://<host>[:<port>],; e.g.: alien://alice.cern.ch, globus://glsrv1.cern.ch, ...; The uid is the username and pw the password that should be used for; the connection. Depending on the <grid> the shared library (plugin); for the selected system will be loaded. When the connection could not; be opened 0 is returned. For AliEn the supported options are:; -domain=<domain name>; -debug=<debug level from 1 to 10>; Example: ""-domain=cern.ch -debug=5"". TGrid(); { }. virtual ~TGrid(); { }. const char * GridUrl() const; { return fGridUrl; }. const char * GetGrid() const; { return fGrid; }. const char * GetHost() const; { return fHost; }. const char * GetUser() const; { return fUser; }. const char * GetPw() const; { return fPw; }. const char * GetOptions() const; { return fOptions; }. Int_t GetPort() const; { return fPort; }. Bool_t IsConnected() const; { return fPort == -1 ? kFALSE : kTRUE; }. void Shell(); { MayNotUse(""Shell""); }. void Stdout(); { MayNotUse(""Stdout""); }. void Stderr(); { MayNotUse(""Stderr""); }. TGridResult * Command(const char* , Bool_t = kFALSE, UInt_t = 2); { MayNotUse(""Command""); return 0; }. TG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGrid.html:8106,password,password,8106,root/html602/TGrid.html,https://root.cern,https://root.cern/root/html602/TGrid.html,2,['password'],['password']
Security,"stLink() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; TList*THashList::GetListForObject(const char* name) const; TList*THashList::GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**TList::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tTList::IsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*TList::Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*TList::LastLink() const; virtual voidTCollection::ls(Option_t* option = """") con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSelectorList.html:4096,Hash,Hash,4096,root/html534/TSelectorList.html,https://root.cern,https://root.cern/root/html534/TSelectorList.html,3,['Hash'],['Hash']
Security,"stOfBases ; (; ). Return list containing the TBaseClass(es) of a class. ; Definition at line 3636 of file TClass.cxx. ◆ GetListOfDataMembers(). TList * TClass::GetListOfDataMembers ; (; Bool_t ; load = kTRUE). Return list containing the TDataMembers of a class. ; Definition at line 3770 of file TClass.cxx. ◆ GetListOfEnums(). TList * TClass::GetListOfEnums ; (; Bool_t ; requestListLoading = kTRUE). Return a list containing the TEnums of a class. ; The list returned is safe to use from multiple thread without explicitly taking the ROOT global lock.; In the case the TClass represents a namespace, the returned list will implicit take the ROOT global lock upon any access (see TListOfEnumsWithLock); In the case the TClass represents a class or struct and requestListLoading is true, the list is immutable (and thus safe to access from multiple thread without taking the global lock at all).; In the case the TClass represents a class or struct and requestListLoading is false, the list is mutable and thus we return a TListOfEnumsWithLock which will implicit take the ROOT global lock upon any access. ; Definition at line 3686 of file TClass.cxx. ◆ GetListOfFunctionTemplates(). TList * TClass::GetListOfFunctionTemplates ; (; Bool_t ; load = kTRUE). Return TListOfFunctionTemplates for a class. ; Definition at line 3798 of file TClass.cxx. ◆ GetListOfMethodOverloads(). TCollection * TClass::GetListOfMethodOverloads ; (; const char * ; name); const. Return the collection of functions named ""name"". ; Definition at line 3827 of file TClass.cxx. ◆ GetListOfMethods(). TList * TClass::GetListOfMethods ; (; Bool_t ; load = kTRUE). Return list containing the TMethods of a class. ; If load is true, the list is populated with all the defined function and currently instantiated function template. ; Definition at line 3812 of file TClass.cxx. ◆ GetListOfRealData(). TList * TClass::GetListOfRealData ; (; ); const. inline . Definition at line 453 of file TClass.h. ◆ GetListOfUsingDataMembers().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:83068,access,access,83068,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,1,['access'],['access']
Security,"stOfBases ; (; ). Return list containing the TBaseClass(es) of a class. ; Definition at line 3703 of file TClass.cxx. ◆ GetListOfDataMembers(). TList * TClass::GetListOfDataMembers ; (; Bool_t ; load = kTRUE). Return list containing the TDataMembers of a class. ; Definition at line 3837 of file TClass.cxx. ◆ GetListOfEnums(). TList * TClass::GetListOfEnums ; (; Bool_t ; requestListLoading = kTRUE). Return a list containing the TEnums of a class. ; The list returned is safe to use from multiple thread without explicitly taking the ROOT global lock.; In the case the TClass represents a namespace, the returned list will implicit take the ROOT global lock upon any access (see TListOfEnumsWithLock); In the case the TClass represents a class or struct and requestListLoading is true, the list is immutable (and thus safe to access from multiple thread without taking the global lock at all).; In the case the TClass represents a class or struct and requestListLoading is false, the list is mutable and thus we return a TListOfEnumsWithLock which will implicit take the ROOT global lock upon any access. ; Definition at line 3753 of file TClass.cxx. ◆ GetListOfFunctionTemplates(). TList * TClass::GetListOfFunctionTemplates ; (; Bool_t ; load = kTRUE). Return TListOfFunctionTemplates for a class. ; Definition at line 3865 of file TClass.cxx. ◆ GetListOfMethodOverloads(). TCollection * TClass::GetListOfMethodOverloads ; (; const char * ; name); const. Return the collection of functions named ""name"". ; Definition at line 3894 of file TClass.cxx. ◆ GetListOfMethods(). TList * TClass::GetListOfMethods ; (; Bool_t ; load = kTRUE). Return list containing the TMethods of a class. ; If load is true, the list is populated with all the defined function and currently instantiated function template. ; Definition at line 3879 of file TClass.cxx. ◆ GetListOfRealData(). TList * TClass::GetListOfRealData ; (; ); const. inline . Definition at line 453 of file TClass.h. ◆ GetListOfUsingDataMembers().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:83069,access,access,83069,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['access'],['access']
Security,"stack trace, if gEnv entry ""Root.Stacktrace"" is unset or 1, and if the image helper functions can be found (see InitImagehlpFunctions()). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Symlink (const char *from, const char *to) override;  Create a symlink from file1 to file2. ;  ; const char * TempDirectory () const override;  Return a user configured or systemwide directory to create temporary files in. ;  ; FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr) override;  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; int Umask (Int_t mask) override;  Set the process file creation mode mask. ;  ; const char * UnixPathName (const char *unixpathname) override;  Convert a pathname to a unix pathname. ;  ; int Unlink (const char *name) override;  Unlink, i.e. ;  ; int Utime (const char *file, Long_t modtime, Long_t actime) override;  Set a files modification and access times. ;  ; const char * WorkingDirectory () override;  Return the working directory for the default drive. ;  ; const char * WorkingDirectory (char driveletter);  Return working directory for the selected drive driveletter == 0 means return the working durectory for the default drive. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWinNTSystem.html:13555,access,access,13555,doc/master/classTWinNTSystem.html,https://root.cern,https://root.cern/doc/master/classTWinNTSystem.html,1,['access'],['access']
Security,"start. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsRealLValue.html:36352,validat,validate,36352,root/html534/RooAbsRealLValue.html,https://root.cern,https://root.cern/root/html534/RooAbsRealLValue.html,54,"['access', 'validat']","['access', 'validate']"
Security,"stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void ApplyTrainingBlockDivision ();  ; void ApplyTrainingSetDivision ();  apply division of data set ;  ; void DestroyCollection (Types::ETreeType type, Bool_t deleteEvents);  destroys the event collection (events + vector) ;  ; MsgLogger & Log () const;  . Private Attributes; std::vector< Char_t > fBlockBelongToTraining;  when dividing the dataset to blocks, sets whether the certain block is in the Training set or else in the validation set boolean are stored, taken std::vector<Char_t> for performance reasons (instead of std::vector<Bool_t>) ;  ; std::vector< std::vector< Long64_t > > fClassEvents;  number of events of class 0,1,2,... in training[0] and testing[1] (+validation, trainingoriginal) ;  ; Long64_t fCurrentEventIdx;  ; UInt_t fCurrentTreeIdx;  ; const DataSetInfo * fdsi;  -> datasetinfo that created this dataset ;  ; std::vector< std::vector< Event * > > fEventCollection;  list of events for training/testing/... ;  ; Bool_t fHasNegativeEventWeights;  true if at least one signal or bkg event has negative weight ;  ; MsgLogger * fLogger;  ! message logger ;  ; std::vector< std::map< TString, Results * > > fResults;  ! [train/test/...][method-identifier] ;  ; std::vector< Char_t > fSampling;  random or importance sampling (not all events are taken) !! Bool_t are stored ( no std::vector<bool> taken for speed (performance) issues ) ;  ; std::vector< std::vector< std::pair< Float_t, Long64_t > > > fSamplingEventList;  weights and indices for sampling ;  ; std::vector< Int_t > fSamplingNEvents;  number of events which should be sampled ;  ; TRandom3 * fSamplingRandom;  -> random generator for sampling ;  ; std::vector< std::vector< std::pair< Float_t, Long64_t > > > fSamplingSelected;  selected events ;  ; std::vector< Float_t > fSamplingWeight;  weight ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSet.html:13913,validat,validation,13913,doc/master/classTMVA_1_1DataSet.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSet.html,1,['validat'],['validation']
Security,"static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTEveElement::GetParentIgnoreCnt() const; TEveProjection*GetProjection(); virtual TObject*TEveElement::GetRenderObject(const TEveException& eh) const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tHandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual TEveElement*ImportElements(TEveElement* el, TEveElement* ext_list = 0); virtual TEveElement*ImportElementsRecurse(TEveElement* el, TEveElement* parent); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveProjectionManager.html:9108,Hash,Hash,9108,root/html530/TEveProjectionManager.html,https://root.cern,https://root.cern/root/html530/TEveProjectionManager.html,5,['Hash'],['Hash']
Security,"static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidGetPointComplex(Int_t ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual voidGetPointComplex(const Int_t* ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(Int_t, Bool_t) const; virtual Double_tGetPointReal(const Int_t*, Bool_t) const; virtual voidGetPoints(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* re, Double_t* im, Bool_t fromInput = kFALSE) const; virtual Double_t*GetPointsReal(Bool_t) const; virtual Int_tGetSign() const; virtual Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual Option_t*GetTransformFlag() const; virtual Option_t*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(Option_t* flags, Int_t sign, const Int_t*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInplace() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFFTComplex.html:4469,Hash,Hash,4469,root/html528/TFFTComplex.html,https://root.cern,https://root.cern/root/html528/TFFTComplex.html,1,['Hash'],['Hash']
Security,"static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidGetPointComplex(Int_t ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual voidGetPointComplex(const Int_t* ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(Int_t, Bool_t) const; virtual Double_tGetPointReal(const Int_t*, Bool_t) const; virtual voidGetPoints(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* re, Double_t* im, Bool_t fromInput = kFALSE) const; virtual Double_t*GetPointsReal(Bool_t) const; virtual Int_tGetSign() const; virtual Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual Option_t*GetTransformFlag() const; virtual Option_t*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(Option_t* flags, Int_t sign, const Int_t*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInplace() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFFTComplex.html:4469,Hash,Hash,4469,root/html530/TFFTComplex.html,https://root.cern,https://root.cern/root/html530/TFFTComplex.html,3,['Hash'],['Hash']
Security,"static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidGetPointComplex(Int_t ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual voidGetPointComplex(const Int_t* ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(Int_t, Bool_t) const; virtual Double_tGetPointReal(const Int_t*, Bool_t) const; virtual voidGetPoints(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* re, Double_t* im, Bool_t fromInput = kFALSE) const; virtual Double_t*GetPointsReal(Bool_t) const; virtual Int_tGetSign() const; virtual Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual Option_t*GetTransformFlag() const; virtual Option_t*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(Option_t* flags, Int_t sign, const Int_t*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInplace() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFFTComplex.html:4323,Hash,Hash,4323,root/html602/TFFTComplex.html,https://root.cern,https://root.cern/root/html602/TFFTComplex.html,2,['Hash'],['Hash']
Security,"static HashValue Hash (char *buf, int len);  Return the hash object corresponding to the buffer. ;  . Private Attributes; std::unique_ptr< RHashMap > fHashMap;  ; std::unique_ptr< ROOT::TRWSpinLock > fRWLock;  . #include <ROOT/RConcurrentHashColl.hxx>; Constructor & Destructor Documentation. ◆ RConcurrentHashColl(). ROOT::Internal::RConcurrentHashColl::RConcurrentHashColl ; (; ). Definition at line 41 of file RConcurrentHashColl.cxx. ◆ ~RConcurrentHashColl(). ROOT::Internal::RConcurrentHashColl::~RConcurrentHashColl ; (; ). default . Member Function Documentation. ◆ Find(). const RUidColl * ROOT::Internal::RConcurrentHashColl::Find ; (; const HashValue & ; hash); const. Return the collection of UID corresponding to the hash if the hash has already been seen or nullptr otherwise. ; Definition at line 46 of file RConcurrentHashColl.cxx. ◆ Hash(). RConcurrentHashColl::HashValue ROOT::Internal::RConcurrentHashColl::Hash ; (; char * ; buf, . int ; len . ). static . Return the hash object corresponding to the buffer. ; Definition at line 56 of file RConcurrentHashColl.cxx. ◆ Insert(). bool ROOT::Internal::RConcurrentHashColl::Insert ; (; const HashValue & ; hash, . RUidColl && ; coll . ); const. If the hash is there, return false. ; Otherwise, insert the hash and UID collection and return true. ; Definition at line 61 of file RConcurrentHashColl.cxx. Member Data Documentation. ◆ fHashMap. std::unique_ptr<RHashMap> ROOT::Internal::RConcurrentHashColl::fHashMap. mutableprivate . Definition at line 32 of file RConcurrentHashColl.hxx. ◆ fRWLock. std::unique_ptr<ROOT::TRWSpinLock> ROOT::Internal::RConcurrentHashColl::fRWLock. mutableprivate . Definition at line 33 of file RConcurrentHashColl.hxx. Libraries for ROOT::Internal::RConcurrentHashColl:. [legend]; The documentation for this class was generated from the following files:; core/thread/inc/ROOT/RConcurrentHashColl.hxx; core/thread/src/RConcurrentHashColl.cxx. ROOTInternalRConcurrentHashColl. ROOT master - Reference Guide",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1RConcurrentHashColl.html:1979,hash,hash,1979,doc/master/classROOT_1_1Internal_1_1RConcurrentHashColl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1RConcurrentHashColl.html,1,['hash'],['hash']
Security,"static Int_tTProof::GetParameter(TCollection* c, const char* par, Double_t& value); Int_tTProof::GetPort() const; TProof::EQueryModeTProof::GetQueryMode(Option_t* mode = 0) const; TQueryResult*TProof::GetQueryResult(const char* ref = 0); TList*TProof::GetQueryResults(); Float_tTProof::GetRealTime() const; Int_tTProof::GetRemoteProtocol() const; TProof::ERunStatusTProof::GetRunStatus() const; Int_tTProof::GetSeqNum() const; Int_tTProof::GetSessionID() const; const char*TProof::GetSessionTag() const; voidTProof::GetStatistics(Bool_t verbose = kFALSE); Int_tTProof::GetStatus() const; virtual const char*TNamed::GetTitle() const; virtual TTree*GetTreeHeader(TDSet* tdset); virtual UInt_tTObject::GetUniqueID() const; const char*TProof::GetUrl(); const char*TProof::GetUser() const; const char*TProof::GetWorkDir() const; voidTProof::GoAsynchronous(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTProof::IsDataReady(Long64_t& totalbytes, Long64_t& bytesready); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTProof::IsFolder() const; Bool_tTProof::IsIdle() const; Bool_tTProof::IsLite() const; Bool_tTProof::IsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tTProof::IsParallel() const; Bool_tTProof::IsProofd() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTProof::IsValid() const; Bool_tTProof::IsWaiting() const; Bool_tTObject::IsZombie() const; virtual Int_tLoad(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TLis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofLite.html:9836,Hash,Hash,9836,root/html528/TProofLite.html,https://root.cern,https://root.cern/root/html528/TProofLite.html,3,['Hash'],['Hash']
Security,"static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual voidGetIntegMC(Double_t&, Double_t&); virtual voidGetIntNorm(Double_t&, Double_t&); virtual voidGetMCvect(Double_t*); virtual Double_tGetMCwt(); virtual voidGetMCwt(Double_t&); virtual const char*TObject::GetName() const; virtual Long_tGetnCalls() const; virtual Long_tGetnEffev() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Double_tGetPrimary() const; virtual voidGetPrimary(Double_t& prime); virtual TRandom*GetPseRan() const; virtual TFoamIntegrand*GetRho(); virtual const char*TObject::GetTitle() const; virtual Int_tGetTotDim() const; virtual UInt_tTObject::GetUniqueID() const; virtual const char*GetVersion() const; virtual voidGetWtParams(Double_t, Double_t&, Double_t&, Double_t&); virtual voidGrow(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitCells(); virtual voidInitialize(); virtual voidInitialize(TRandom*, TFoamIntegrand*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLinkCells(); virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeActiveList(); virtual voidMakeAlpha(); virtual voidMakeEvent(); voidTObject::MayNotUse(const char* method) const; virtual Double_tMCgenerate(Double_t* MCvect); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFoam.html:7493,Hash,Hash,7493,root/html528/TFoam.html,https://root.cern,https://root.cern/root/html528/TFoam.html,1,['Hash'],['Hash']
Security,"static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual voidGetIntegMC(Double_t&, Double_t&); virtual voidGetIntNorm(Double_t&, Double_t&); virtual voidGetMCvect(Double_t*); virtual Double_tGetMCwt(); virtual voidGetMCwt(Double_t&); virtual const char*TObject::GetName() const; virtual Long_tGetnCalls() const; virtual Long_tGetnEffev() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Double_tGetPrimary() const; virtual voidGetPrimary(Double_t& prime); virtual TRandom*GetPseRan() const; virtual TFoamIntegrand*GetRho(); virtual const char*TObject::GetTitle() const; virtual Int_tGetTotDim() const; virtual UInt_tTObject::GetUniqueID() const; virtual const char*GetVersion() const; virtual voidGetWtParams(Double_t, Double_t&, Double_t&, Double_t&); virtual voidGrow(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitCells(); virtual voidInitialize(); virtual voidInitialize(TRandom*, TFoamIntegrand*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLinkCells(); virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeActiveList(); virtual voidMakeAlpha(); virtual voidMakeEvent(); voidTObject::MayNotUse(const char* method) const; virtual Double_tMCgenerate(Double_t* MCvect); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFoam.html:7493,Hash,Hash,7493,root/html530/TFoam.html,https://root.cern,https://root.cern/root/html530/TFoam.html,5,['Hash'],['Hash']
Security,"static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TDictionary*fClassclass (or typedef) represented by this info object; TStringfDeclFileNameheader; TStringfDeclFileSysNamefile system's location of the header; TStringfHtmlFileNamename of the HTML doc file; TStringfImplFileNamesource; TStringfImplFileSysNamefile system's location of the source; TModuleDocInfo*fModulemodule this class is in; Bool_tfSelectedselected for doc output; TListfTypedefstypedefs to this class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const char* GetName() const; Get the class name, or (UNKNOWN) is no TClass object was found. ULong_t Hash() const; Forward to TClass::Hash(), return -1 if no TClass object was found. Int_t Compare(const TObject* obj) const; Compare two TClassDocInfo objects; used for sorting. TClassDocInfo(TClass* cl, const char* htmlfilename = """", const char* fsdecl = """", const char* fsimpl = """", const char* decl = 0, const char* impl = 0); initialize the object. { }. TClassDocInfo(TDictionary* cl, const char* htmlfilename = """", const char* fsdecl = """", const char* fsimpl = """", const char* decl = 0, const char* impl = 0); { }. virtual ~TClassDocInfo(); {}. TDictionary* GetClass() const; { return fClass; }. const char* GetHtmlFileName() const; { return fHtmlFileName; }. const char* GetDeclFileName() const; { return fDeclFileName; }. const char* GetImplFileName() const; { return fImplFileName; }. const char* GetDeclFileSysName() const; { return fDeclFileSysName; }. const char* GetImplFileSysName() const; { return fImplFileSysName; }. void SetModule(TModuleDocInfo* module); { fModule = module; }. TModuleDocInfo* GetModule() const; { retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClassDocInfo.html:7204,Hash,Hash,7204,root/html602/TClassDocInfo.html,https://root.cern,https://root.cern/root/html602/TClassDocInfo.html,4,['Hash'],['Hash']
Security,"static TS3HTTPRequest::EAuthTypekNoAuth; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TS3HTTPRequest::EHTTPVerbkPOST; static TS3HTTPRequest::EHTTPVerbkPUT; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TStringfAccessKeyAccess key (for authentication); TS3HTTPRequest::EAuthTypefAuthTypeAuthentication type; TStringfBucketBucket name; TStringfHostHost name; TStringfObjectKeyObject key; TStringfSecretKeySecret key (for authentication); TStringfTimeStampRequest time stamp; TS3HTTPRequest::EHTTPVerbfVerbHTTP Verb. Class Charts. Inheritance Chart:. TObject. ←; TS3HTTPRequest. Function documentation; TS3HTTPRequest(). TS3HTTPRequest(TS3HTTPRequest::EHTTPVerb httpVerb, const TString& host, const TString& bucket, const TString& objectKey, TS3HTTPRequest::EAuthType authType, const TString& accessKey, const TString& secretKey); Default constructor. TS3HTTPRequest(const TS3HTTPRequest& m); Copy constructor. TString ComputeSignature(TS3HTTPRequest::EHTTPVerb httpVerb) const; Returns this request's signature. TString HTTPVerbToTString(TS3HTTPRequest::EHTTPVerb httpVerb) const. TS3HTTPRequest& SetTimeStamp(); Sets this request's time stamp according to:; http://code.google.com/apis/storage/docs/reference-headers.html#date. TString MakeRequestLine(TS3HTTPRequest::EHTTPVerb httpVerb) const; Returns the first line of a HTTP request for this object. Note that since; we don't use the virtual host syntax which is supported by Amazon, we; must include the bucket name in thr resource. For example, we don't use; http://mybucket.s3.amazonaws.com/path/to/my/file but instead; http://s3.amazonaws.com/mybucket/path/to/my/file so the HTTP request; will be of the form ""GET /mybucket/path/to/my/file HTTP/1.1""; Also note that the path mu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TS3HTTPRequest.html:8693,access,accessKey,8693,root/html602/TS3HTTPRequest.html,https://root.cern,https://root.cern/root/html602/TS3HTTPRequest.html,2,['access'],['accessKey']
Security,"static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDatabasePDG * Instance ();  static function ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDatabasePDG (const TDatabasePDG &db);  hash-map from pdg-code to particle ;  ; void BuildPdgMap () const;  Build fPdgMap mapping pdg-code to particle. ;  ; TDatabasePDG & operator= (const TDatabasePDG &db);  ; virtual void ReadPDGTableImpl (const char *filename, bool isParticleListInitializedWhenInvoking);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObjArray * fListOfClasses;  ; THashList * fParticleList;  ; TExMap * fPdgMap;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDatabasePDG.html:12514,hash,hash-map,12514,doc/master/classTDatabasePDG.html,https://root.cern,https://root.cern/doc/master/classTDatabasePDG.html,1,['hash'],['hash-map']
Security,"static; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fIsCurlyTCurlyLineprotected; fLastPointTPolyLineprotected; fLineColorTAttLineprotected; fLineStyleTAttLineprotected; fLineWidthTAttLineprotected; fNTPolyLineprotected; fNstepsTCurlyLineprotected; fOptionTPolyLineprotected; fPhimaxTCurlyArcprivate; fPhiminTCurlyArcprivate; fR1TCurlyArcprivate; fThetaTCurlyArcprivate; fUniqueIDTObjectprivate; fWaveLengthTCurlyLineprotected; fXTPolyLineprotected; fX1TCurlyLineprotected; fX2TCurlyLineprotected; fYTPolyLineprotected; fY1TCurlyLineprotected; fY2TCurlyLineprotected; GetAmplitude() constTCurlyLineinline; GetBBox() overrideTCurlyArcvirtual; GetBBoxCenter() overrideTCurlyArcvirtual; GetCurly() constTCurlyLineinline; GetDefaultAmplitude()TCurlyArcstatic; GetDefaultIsCurly()TCurlyArcstatic; GetDefaultWaveLength()TCurlyArcstatic; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetEndX() constTCurlyLineinline; GetEndY() constTCurlyLineinline; GetFillColor() constTAttFillinlinevirtual; GetFillStyle() constTAttFillinlinevirtual; GetIconName() constTObjectvirtual; GetLastPoint() constTPolyLineinlinevirtual; GetLineColor() constTAttLineinlinevirtual; GetLineStyle() constTAttLineinlinevirtual; GetLineWidth() constTAttLineinlinevirtual; GetN() constTPolyLineinline; GetName() constTObjectvirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOption() const overrideTPolyLineinlinevirtual; GetPhimax() constTCurlyArcinline; GetPhimin() constTCurlyArcinline; GetRadius() constTCurlyArcinline; GetStartX() constTCurlyLineinline; GetStartY() constTCurlyLineinline; GetTitle() constTObjectvirtual; GetUniqueID() constTObjectvirtual; GetWaveLength() constTCurlyLineinline; GetX() constTPolyLineinline; GetY() constTPolyLineinline; HandleTimer(TTimer *timer)TObjectvirtual; Hash() constTObjectvirtual; HasInconsistentHash() constTObjectinline; Info(const char *method, const char *msgfmt,.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCurlyArc-members.html:4098,Hash,Hash,4098,doc/master/classTCurlyArc-members.html,https://root.cern,https://root.cern/doc/master/classTCurlyArc-members.html,1,['Hash'],['Hash']
Security,"std::cerr << ""Error: TTreeReader cannot find a tree names \""MyTree\""!\n"";; break;; kEntryNotFound:; // Can't really happen as TTreeReader::Next() knows when to stop.; std::cerr << ""Error: The entry number doe not exist\n"";; break;; kEntryChainSetupError:; std::cerr << ""Error: TTreeReader cannot access a chain element, e.g. file without the tree\n"";; break;; kEntryChainFileError:; std::cerr << ""Error: TTreeReader cannot open a chain element, e.g. missing file\n"";; break;; kEntryDictionaryError:; std::cerr << ""Error: TTreeReader cannot find the dictionary for some data\n"";; break;; }; return false;; };  ; // Access the TriggerInfo object as if it's a pointer.; if (!triggerInfo->hasMuonL1()); continue;;  ; // Ditto for the vector<Muon>.; if (!muons->size()); continue;;  ; // Access the jetPt as an array, whether the TTree stores this as; // a std::vector, std::list, TClonesArray or Jet* C-style array, with; // fixed or variable array size.; if (jetPt.GetSize() < 2 || jetPt[0] < 100); continue;;  ; // Access the array of taus.; if (!taus.IsEmpty()) {; float currentWeight = *weight;; for (int iTau = 0, nTau = taus.GetSize(); iTau < nTau; ++iTau) {; // Access a float value - need to dereference as TTreeReaderValue; // behaves like an iterator; hist->Fill(taus[iTau].eta(), currentWeight);; }; }; } // TTree entry / event loop; }. Function Members (Methods); public:. virtual~TTreeReader(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); TTreeReader::Iterator_tbegin(); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeReader.html:5183,Access,Access,5183,root/html602/TTreeReader.html,https://root.cern,https://root.cern/root/html602/TTreeReader.html,2,['Access'],['Access']
Security,"std::string();}. int VariableIndex(const string& ) const; get index of variable given a variable given a name; return -1 if variable is not found. { return -1; }. int PrintLevel() const; minimizer configuration parameters ; set print level. { return fDebug; }. unsigned int MaxFunctionCalls(); max number of function calls. { return fMaxCalls; }. unsigned int MaxIterations(); max iterations. { return fMaxIter; }. double Tolerance() const; absolute tolerance. { return fTol; }. double Precision() const; precision of minimizer in the evaluation of the objective function; ( a value <=0 corresponds to the let the minimizer choose its default one). { return fPrec; }. int Strategy() const; strategy. { return fStrategy; }. int Status() const; status code of minimizer. { return fStatus; }. double ErrorDef() const; return the statistical scale used for calculate the error; is typically 1 for Chi2 and 0.5 for likelihood minimization. { return fUp; }. bool IsValidError() const; return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit). { return fValidError; }. void SetPrintLevel(int level); set print level. { fDebug = level; }. void SetMaxFunctionCalls(unsigned int maxfcn); set maximum of function calls. { if (maxfcn > 0) fMaxCalls = maxfcn; }. void SetMaxIterations(unsigned int maxiter); set maximum iterations (one iteration can have many function calls). { if (maxiter > 0) fMaxIter = maxiter; }. void SetTolerance(double tol); set the tolerance. { fTol = tol; }. void SetPrecision(double prec); set in the minimizer the objective function evaluation precision; ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. default case). { fPrec = prec; }. void SetStrategy(int strategyLevel); set the strategy. { fStrategy = strategyLevel; }. void SetErrorDef(double up); set scale for calculating the errors. { fUp = up; }. void SetValidError(bool on); flag to check if minimizer needs to perform accurate error analysis (e.g. r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__Minimizer.html:9758,validat,validation,9758,root/html526/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__Minimizer.html,1,['validat'],['validation']
Security,"std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; vector<double>_high; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; vector<double>_low; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__LinInterpVar.html:33339,access,access,33339,root/html534/RooStats__HistFactory__LinInterpVar.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__LinInterpVar.html,1,['access'],['access']
Security,"stead. */; 9773 break;; 9774 } else if (sf_sent == 0) {; 9775 /* No error, but 0 bytes sent. May be EOF? */; 9776 return;; 9777 }; 9778 loop_cnt++;; 9779 ; 9780 } while ((len > 0) && (sf_sent >= 0));; 9781 ; 9782 if (sf_sent > 0) {; 9783 return; /* OK */; 9784 }; 9785 ; 9786 /* sf_sent<0 means error, thus fall back to the classic way */; 9787 /* This is always the case, if sf_file is not a ""normal"" file,; 9788 * e.g., for sending data from the output of a CGI process. */; 9789 offset = (int64_t)sf_offs;; 9790 }; 9791#endif; 9792 if ((offset > 0) && (fseeko(filep->access.fp, offset, SEEK_SET) != 0)) {; 9793 mg_cry_internal(conn,; 9794 ""%s: fseeko() failed: %s"",; 9795 __func__,; 9796 strerror(ERRNO));; 9797 mg_send_http_error(; 9798 conn,; 9799 500,; 9800 ""%s"",; 9801 ""Error: Unable to access file at requested position."");; 9802 } else {; 9803 while (len > 0) {; 9804 /* Calculate how much to read from the file in the buffer */; 9805 to_read = sizeof(buf);; 9806 if ((int64_t)to_read > len) {; 9807 to_read = (int)len;; 9808 }; 9809 ; 9810 /* Read from file, exit the loop on error */; 9811 if ((num_read =; 9812 (int)fread(buf, 1, (size_t)to_read, filep->access.fp)); 9813 <= 0) {; 9814 break;; 9815 }; 9816 ; 9817 /* Send read bytes to the client, exit the loop on error */; 9818 if ((num_written = mg_write(conn, buf, (size_t)num_read)); 9819 != num_read) {; 9820 break;; 9821 }; 9822 ; 9823 /* Both read and were successful, adjust counters */; 9824 len -= num_written;; 9825 }; 9826 }; 9827 }; 9828}; 9829 ; 9830 ; 9831static int; 9832parse_range_header(const char *header, int64_t *a, int64_t *b); 9833{; 9834 return sscanf(header,; 9835 ""bytes=%"" INT64_FMT ""-%"" INT64_FMT,; 9836 a,; 9837 b); // NOLINT(cert-err34-c) 'sscanf' used to convert a string; 9838 // to an integer value, but function will not report; 9839 // conversion errors; consider using 'strtol' instead; 9840}; 9841 ; 9842 ; 9843static void; 9844construct_etag(char *buf, size_t buf_len, const struct mg_file_stat *fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:281213,access,access,281213,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['access'],['access']
Security,"stead. */; 9774 break;; 9775 } else if (sf_sent == 0) {; 9776 /* No error, but 0 bytes sent. May be EOF? */; 9777 return;; 9778 }; 9779 loop_cnt++;; 9780 ; 9781 } while ((len > 0) && (sf_sent >= 0));; 9782 ; 9783 if (sf_sent > 0) {; 9784 return; /* OK */; 9785 }; 9786 ; 9787 /* sf_sent<0 means error, thus fall back to the classic way */; 9788 /* This is always the case, if sf_file is not a ""normal"" file,; 9789 * e.g., for sending data from the output of a CGI process. */; 9790 offset = (int64_t)sf_offs;; 9791 }; 9792#endif; 9793 if ((offset > 0) && (fseeko(filep->access.fp, offset, SEEK_SET) != 0)) {; 9794 mg_cry_internal(conn,; 9795 ""%s: fseeko() failed: %s"",; 9796 __func__,; 9797 strerror(ERRNO));; 9798 mg_send_http_error(; 9799 conn,; 9800 500,; 9801 ""%s"",; 9802 ""Error: Unable to access file at requested position."");; 9803 } else {; 9804 while (len > 0) {; 9805 /* Calculate how much to read from the file in the buffer */; 9806 to_read = sizeof(buf);; 9807 if ((int64_t)to_read > len) {; 9808 to_read = (int)len;; 9809 }; 9810 ; 9811 /* Read from file, exit the loop on error */; 9812 if ((num_read =; 9813 (int)fread(buf, 1, (size_t)to_read, filep->access.fp)); 9814 <= 0) {; 9815 break;; 9816 }; 9817 ; 9818 /* Send read bytes to the client, exit the loop on error */; 9819 if ((num_written = mg_write(conn, buf, (size_t)num_read)); 9820 != num_read) {; 9821 break;; 9822 }; 9823 ; 9824 /* Both read and were successful, adjust counters */; 9825 len -= num_written;; 9826 }; 9827 }; 9828 }; 9829}; 9830 ; 9831 ; 9832static int; 9833parse_range_header(const char *header, int64_t *a, int64_t *b); 9834{; 9835 return sscanf(header,; 9836 ""bytes=%"" INT64_FMT ""-%"" INT64_FMT,; 9837 a,; 9838 b); // NOLINT(cert-err34-c) 'sscanf' used to convert a string; 9839 // to an integer value, but function will not report; 9840 // conversion errors; consider using 'strtol' instead; 9841}; 9842 ; 9843 ; 9844static void; 9845construct_etag(char *buf, size_t buf_len, const struct mg_file_stat *fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:281245,access,access,281245,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['access'],['access']
Security,"sted. If in addition one of the data member; 1152 // was declared using a typedef _and_ the current class definition; 1153 // uses a different typedef, we are unable to recalculate the; 1154 // checksum as it was, because the information is missing from; 1155 // the StreamerInfo, and for the same reason CompareContent can; 1156 // not know whether this is okay or not ...; 1157 //; 1158 // Since this is such an unlikely scenario, let's complain; 1159 // about it anyway (The class layout *may* have changed, we; 1160 // don't know).; 1161 ; 1162 // if (this has only base classes) {; 1163 // warn = kFALSE;; 1164 // }; 1165 }; 1166#endif // TEST_FOR_BACKWARD_COMPATIBILITY; 1167 if (warn && (fOldVersion <= 2)) {; 1168 // Names of STL base classes was modified in vers==3. Allocators removed; 1169 //; 1170 TIter nextBC(fClass->GetListOfBases());; 1171 TBaseClass* bc = 0;; 1172 while ((bc = (TBaseClass*) nextBC())) {; 1173 if (bc->GetClassPointer()->GetCollectionType()) {; 1174 warn = kFALSE;; 1175 }; 1176 }; 1177 }; 1178 if (warn) {; 1179 if (file) {; 1180 Warning(""BuildCheck"", ""\n\; 1181 The StreamerInfo of class %s read from file %s\n\; 1182 has the same version (=%d) as the active class but a different checksum.\n\; 1183 You should update the version to ClassDef(%s,%d).\n\; 1184 Do not try to write objects with the current class definition,\n\; 1185 the files will not be readable.\n"", GetName(), file->GetName(), fClassVersion, GetName(), fClassVersion + 1);; 1186 } else {; 1187 Warning(""BuildCheck"", ""\n\; 1188 The StreamerInfo of class %s \n\; 1189 has the same version (=%d) as the active class but a different checksum.\n\; 1190 You should update the version to ClassDef(%s,%d).\n\; 1191 Do not try to write objects with the current class definition,\n\; 1192 the files will not be readable.\n"", GetName(), fClassVersion, GetName(), fClassVersion + 1);; 1193 }; 1194 CompareContent(fClass,0,kTRUE,kTRUE,file);; 1195 fClass->SetBit(TClass::kWarned);; 1196 }; 1197 } else {; 1198 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html:44994,checksum,checksum,44994,doc/master/TStreamerInfo_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html,1,['checksum'],['checksum']
Security,"stemDefinition TSystem.h:561; TTree.h; Tools.h; TCutA specialized string object used for TTree selections.Definition TCut.h:25; TDirectoryFile::GetTObject * Get(const char *namecycle) overrideReturn pointer to object identified by namecycle.Definition TDirectoryFile.cxx:937; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TFile::Openstatic TFile * Open(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; TFile::SetCacheFileDirstatic Bool_t SetCacheFileDir(std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE)Sets the directory where to locally stage/cache remote files.Definition TFile.cxx:4626; TFile::Closevoid Close(Option_t *option="""") overrideClose a file.Definition TFile.cxx:950; TMVA::CrossValidationClass to perform cross validation, splitting the dataloader into folds.Definition CrossValidation.h:124; TMVA::DataLoaderDefinition DataLoader.h:50; TMVA::DataLoader::AddRegressionTreevoid AddRegressionTree(TTree *tree, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)Definition DataLoader.h:103; TMVA::DataLoader::PrepareTrainingAndTestTreevoid PrepareTrainingAndTestTree(const TCut &cut, const TString &splitOpt)prepare the training and test trees -> same cuts for signal and backgroundDefinition DataLoader.cxx:632; TMVA::DataLoader::AddTargetvoid AddTarget(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0)user inserts target in data set infoDefinition DataLoader.cxx:512; TMVA::DataLoader::AddVariablevoid AddVariable(const TString &expression, const TString &title, const TString &unit, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating variable in data set infoDefinition DataLoader.cxx:485; TMVA::Tools::Instance",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html:21020,validat,validation,21020,doc/master/TMVACrossValidationRegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html,1,['validat'],['validation']
Security,"stend = strchr(hostbegin, '/');; 17647 if (!hostend) {; 17648 return 0;; 17649 }; 17650 portbegin = strchr(hostbegin, ':');; 17651 if ((!portbegin) || (portbegin > hostend)) {; 17652 port = abs_uri_protocols[i].default_port;; 17653 request_domain_len = (size_t)(hostend - hostbegin);; 17654 } else {; 17655 port = strtoul(portbegin + 1, &portend, 10);; 17656 if ((portend != hostend) || (port <= 0); 17657 || !is_valid_port(port)) {; 17658 return 0;; 17659 }; 17660 request_domain_len = (size_t)(portbegin - hostbegin);; 17661 }; 17662 /* protocol found, port set */; 17663 break;; 17664 }; 17665 }; 17666 ; 17667 if (!port) {; 17668 /* port remains 0 if the protocol is not found */; 17669 return 0;; 17670 }; 17671 ; 17672 /* Check if the request is directed to a different server. */; 17673 /* First check if the port is the same. */; 17674 if (ntohs(USA_IN_PORT_UNSAFE(&conn->client.lsa)) != port) {; 17675 /* Request is directed to a different port */; 17676 return 0;; 17677 }; 17678 ; 17679 /* Finally check if the server corresponds to the authentication; 17680 * domain of the server (the server domain).; 17681 * Allow full matches (like http://mydomain.com/path/file.ext), and; 17682 * allow subdomain matches (like http://www.mydomain.com/path/file.ext),; 17683 * but do not allow substrings (like; 17684 * http://notmydomain.com/path/file.ext; 17685 * or http://mydomain.com.fake/path/file.ext).; 17686 */; 17687 if (auth_domain_check_enabled) {; 17688 server_domain = conn->dom_ctx->config[AUTHENTICATION_DOMAIN];; 17689 server_domain_len = strlen(server_domain);; 17690 if ((server_domain_len == 0) || (hostbegin == NULL)) {; 17691 return 0;; 17692 }; 17693 if ((request_domain_len == server_domain_len); 17694 && (!memcmp(server_domain, hostbegin, server_domain_len))) {; 17695 /* Request is directed to this server - full name match. */; 17696 } else {; 17697 if (request_domain_len < (server_domain_len + 2)) {; 17698 /* Request is directed to another server: The server name; 17699",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:525224,authenticat,authentication,525224,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['authenticat'],['authentication']
Security,"stend = strchr(hostbegin, '/');; 17648 if (!hostend) {; 17649 return 0;; 17650 }; 17651 portbegin = strchr(hostbegin, ':');; 17652 if ((!portbegin) || (portbegin > hostend)) {; 17653 port = abs_uri_protocols[i].default_port;; 17654 request_domain_len = (size_t)(hostend - hostbegin);; 17655 } else {; 17656 port = strtoul(portbegin + 1, &portend, 10);; 17657 if ((portend != hostend) || (port <= 0); 17658 || !is_valid_port(port)) {; 17659 return 0;; 17660 }; 17661 request_domain_len = (size_t)(portbegin - hostbegin);; 17662 }; 17663 /* protocol found, port set */; 17664 break;; 17665 }; 17666 }; 17667 ; 17668 if (!port) {; 17669 /* port remains 0 if the protocol is not found */; 17670 return 0;; 17671 }; 17672 ; 17673 /* Check if the request is directed to a different server. */; 17674 /* First check if the port is the same. */; 17675 if (ntohs(USA_IN_PORT_UNSAFE(&conn->client.lsa)) != port) {; 17676 /* Request is directed to a different port */; 17677 return 0;; 17678 }; 17679 ; 17680 /* Finally check if the server corresponds to the authentication; 17681 * domain of the server (the server domain).; 17682 * Allow full matches (like http://mydomain.com/path/file.ext), and; 17683 * allow subdomain matches (like http://www.mydomain.com/path/file.ext),; 17684 * but do not allow substrings (like; 17685 * http://notmydomain.com/path/file.ext; 17686 * or http://mydomain.com.fake/path/file.ext).; 17687 */; 17688 if (auth_domain_check_enabled) {; 17689 server_domain = conn->dom_ctx->config[AUTHENTICATION_DOMAIN];; 17690 server_domain_len = strlen(server_domain);; 17691 if ((server_domain_len == 0) || (hostbegin == NULL)) {; 17692 return 0;; 17693 }; 17694 if ((request_domain_len == server_domain_len); 17695 && (!memcmp(server_domain, hostbegin, server_domain_len))) {; 17696 /* Request is directed to this server - full name match. */; 17697 } else {; 17698 if (request_domain_len < (server_domain_len + 2)) {; 17699 /* Request is directed to another server: The server name; 17700",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:525257,authenticat,authentication,525257,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['authenticat'],['authentication']
Security,"stentRef() const; TRealData*GetRealData(const char* name) const; TVirtualRefProxy*GetReferenceProxy() const; ROOT::ResetAfterMergeFunc_tGetResetAfterMerge() const; const ROOT::TSchemaRuleSet*GetSchemaRules() const; ROOT::TSchemaRuleSet*GetSchemaRules(Bool_t create = kFALSE); const char*GetSharedLibs(); ShowMembersFunc_tGetShowMembersWrapper() const; TClass::EStateGetState() const; TClassStreamer*GetStreamer() const; ClassStreamerFunc_tGetStreamerFunc() const; TVirtualStreamerInfo*GetStreamerInfo(Int_t version = 0) const; TVirtualStreamerInfo*GetStreamerInfoAbstractEmulated(Int_t version = 0) const; const TObjArray*GetStreamerInfos() const; virtual const char*TNamed::GetTitle() const; const type_info*GetTypeInfo() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasDataMemberInfo() const; Bool_tHasDefaultConstructor() const; Bool_tHasDictionary(); static Bool_tHasDictionarySelection(const char* clname); virtual ULong_tTNamed::Hash() const; Bool_tHasInterpreterInfo() const; Bool_tHasInterpreterInfoInMemory() const; voidIgnoreTObjectStreamer(Bool_t ignore = kTRUE); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tInheritsFrom(const char* cl) const; virtual Bool_tInheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidInterpretedShowMembers(void* obj, TMemberInspector& insp, Bool_t isTransient); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static TClass::ENewTypeIsCallingNew(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tIsFolder(void* obj) const; Bool_tIsForeign() const; Bool_tIsLoaded() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsStartingWithTObject() const; Bool_tIsTObject() const; Bool_tIsVersioned() const; Bool_tTObject::IsZombie() const; static TClass*Load(TBuffer& b); static TClass*LoadClass(const char* requestedname, Bool_t si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClass.html:8645,Hash,Hash,8645,root/html602/TClass.html,https://root.cern,https://root.cern/root/html602/TClass.html,2,['Hash'],['Hash']
Security,"ster. Int_t CheckLocalCache(const char* group, const char* user, const char* dsName = ""ls"", UInt_t option = 0); Check if the local cache information for group, user, dsName is up-to-date; If not, make the relevant updates; Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. Int_t ClearCache(const char* uri = 0); Clear cached information matching uri. Int_t ShowCache(const char* uri = 0); Show cached information matching uri. Int_t WriteDataSet(const char* group, const char* user, const char* dsName, TFileCollection* dataset, UInt_t option = 0, TMD5* checksum = 0). Writes indicated dataset.; If option has the bit kFileMustExist set, the file must still exist,; otherwise the new dataset is not written (returns 3 in this case).; If checksum is non-zero the files current checksum is checked against it,; if it does not match the file is not written (the function returns 2 in this; case, if the file has disappeared it is also not written (i.e. checksum; implies the bit kFileMustExist set in option).; Returns != 0 for success, 0 for error. Int_t ChecksumDataSet(const char* path, const char* md5path, TString& checksum); Calculate the checksum of the indicated dataset at 'path' and save it to the; appropriate file 'md5path'. The MD5 string is returned in 'md5sum'.; Return 0 on success, -1 on error. Bool_t RemoveDataSet(const char* group, const char* user, const char* dsName); Removes the indicated dataset. Bool_t ExistsDataSet(const char* group, const char* user, const char* dsName); Checks if the indicated dataset exits. Int_t RegisterDataSet(const char* uri, TFileCollection* dataSet, const char* opt); Register a dataset, perfoming quota checkings and verification, if required.; If a dataset with the same name already exists the action fails unless 'opts'; contains 'O', in which case the old dataset is overwritten, or contains 'U',; in which case 'newDataSet' is added to the existing dataset (duplications are; ignored, if any).; If 'opts' contains 'V' th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManagerFile.html:17096,checksum,checksum,17096,root/html528/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html528/TDataSetManagerFile.html,6,['checksum'],['checksum']
Security,"sterUnloadPoint(watermark, headers[0]);; 2323 }; 2324 ; 2325 assert(cling::Interpreter::kSuccess == compRes &&; 2326 ""Payload code of a dictionary could not be parsed correctly."");; 2327 if (compRes!=cling::Interpreter::kSuccess) {; 2328 Warning(""TCling::RegisterModule"",; 2329 ""Problems declaring payload for module %s."", modulename) ;; 2330 }; 2331 }; 2332 }; 2333 ; 2334 // Now that all the header have been registered/compiled, let's; 2335 // make sure to 'reset' the TClass that have a class init in this module; 2336 // but already had their type information available (using information/header; 2337 // loaded from other modules or from class rules or from opening a TFile; 2338 // or from loading header in a way that did not provoke the loading of; 2339 // the library we just loaded).; 2340 ProcessClassesToUpdate();; 2341 ; 2342 if (!ModuleWasSuccessfullyLoaded && !hasHeaderParsingOnDemand) {; 2343 // __ROOTCLING__ might be pulled in through PCH; 2344 fInterpreter->declare(""#ifdef __ROOTCLING__\n""; 2345 ""#undef __ROOTCLING__\n""; 2346 + gInterpreterClassDef +; 2347 ""#endif"");; 2348 }; 2349 ; 2350 if (wasDlopened) {; 2351 assert(isSharedLib);; 2352 void* dyLibHandle = fRegisterModuleDyLibs.back();; 2353 fRegisterModuleDyLibs.pop_back();; 2354 dlclose(dyLibHandle);; 2355 }; 2356}; 2357 ; 2358void TCling::AddAvailableIndentifiers(TSeqCollection& Idents) {; 2359 clang::CompilerInstance& CI = *GetInterpreterImpl()->getCI();; 2360 ASTContext &C = CI.getASTContext();; 2361 ; 2362 // Do not do anything if we have no global module index.; 2363 // FIXME: This is mostly to real with false positives in the TTabCom; 2364 // interface for non-modules.; 2365 if (!fCxxModulesEnabled); 2366 return;; 2367 ; 2368 if (IdentifierInfoLookup *External = C.Idents.getExternalIdentifierLookup()) {; 2369 std::unique_ptr<IdentifierIterator> Iter(External->getIdentifiers());; 2370 for (llvm::StringRef Ident = Iter->Next(); !Ident.empty(); Ident = Iter->Next()) {; 2371 std::string I = Ident.str();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:90964,hasH,hasHeaderParsingOnDemand,90964,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['hasH'],['hasHeaderParsingOnDemand']
Security,"stic (=parameters of the input function); Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooArgSet*RooAbsOptTestStatistic::_projDepsSet of projected observable; const RooArgSet*RooAbsTestStatistic::_projDepsPointer to set with projected observables; TRefArrayRooAbsArg::_proxyListlist of proxies; stringRooAbsTestStatistic::_rangeNameName of range in which to calculate test statistic; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; TStringRooAbsOptTestStatistic::_sealNoticeUser-defined notice shown when reading a sealed likelihood ; Bool_tRooAbsOptTestStatistic::_sealedIs test statistic sealed -- i.e. no access to data ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; Int_tRooAbsTestStatistic::_simCountTotal number of component p.d.f.s in RooSimultaneous (if any); RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_tRooAbsTestStatistic::_splitRangeSplit rangeName in RooSimultaneous index labels if true; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_tRooAbsTestStatistic::_verboseVerbose messaging if true; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; Bool_t_weightSqAppl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNLLVar.html:37488,access,access,37488,root/html532/RooNLLVar.html,https://root.cern,https://root.cern/root/html532/RooNLLVar.html,1,['access'],['access']
Security,"stic (=parameters of the input function); Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooArgSet*RooAbsOptTestStatistic::_projDepsSet of projected observable; const RooArgSet*RooAbsTestStatistic::_projDepsPointer to set with projected observables; TRefArrayRooAbsArg::_proxyListlist of proxies; stringRooAbsTestStatistic::_rangeNameName of range in which to calculate test statistic; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; TStringRooAbsOptTestStatistic::_sealNoticeUser-defined notice shown when reading a sealed likelihood ; Bool_tRooAbsOptTestStatistic::_sealedIs test statistic sealed -- i.e. no access to data ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; Int_tRooAbsTestStatistic::_simCountTotal number of component p.d.f.s in RooSimultaneous (if any); RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_tRooAbsTestStatistic::_splitRangeSplit rangeName in RooSimultaneous index labels if true; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_tRooAbsTestStatistic::_verboseVerbose messaging if true; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooChi2Var.html:37779,access,access,37779,root/html532/RooChi2Var.html,https://root.cern,https://root.cern/root/html532/RooChi2Var.html,1,['access'],['access']
Security,"stogram smoothing ;  th2polyBoxes.C This tutorial illustrates how to create an histogram with polygonal bins (TH2Poly) ;  th2polyEurope.C This tutorial illustrates how to create an histogram with polygonal bins (TH2Poly), fill it and draw it ;  th2polyHoneycomb.CThis tutorial illustrates how to create an histogram with hexagonal bins (TH2Poly), fill it and draw it using GL ;  th2polyUSA.CThis tutorial illustrates how to create an histogram with polygonal bins (TH2Poly), fill it and draw it using GL ;  transpad.C Example of a canvas showing two histograms with different scales ;  twoscales.C Example of macro illustrating how to superimpose two histograms with different scales in the ""same"" pad ;  xyplot.C Example showing how to produce a plot with an orthogonal axis system centered at (0,0) ;  ► histfactory;  example.C;  example.py;  makeExample.C;  makeQuickModel.py;  ModifyInterpolation.C;  ► html;  MakeTutorials.C;  ► http;  httpaccess.CThis program demonstrates access control to the THttpServer with digest methods ;  httpcontrol.CThis program demonstrates simple application control via THttpServer Two histogram are filled within endless loop ;  httpserver.CThis program creates : ;  httptextlog.CThis macro demonstrates custom access and custom drawing for TMsgList class Main motivation for this example - demonstrate how traffic between server and client can be minimized and how one could build custom UI in the browser ;  httptextlog.js;  ► image;  galaxy_image.C Importing an image and manipulating it ;  hist2image.C Create an image from a 2-D histogram and manipulate it ;  hsumanim.C This script is a slightly modified version of hsum.C ;  image2hist.C Create a 2-D histogram from an image ;  img2pad.C Display image in canvas and pad ;  imgconv.C Open rose512.jpg and save it in the following formats: .png, .gif, .xpm and tiff ;  pad2png.C Create a canvas and save as png ;  rose_image.C Display image in a new canvas and pad ;  trans_graph.C Demonstrates how to access",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:124855,access,access,124855,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['access'],['access']
Security,stogram with a float per channel (see TH1 documentation)} ;  CTH2GLRendering of TH2 and derived classes ;  CTH2I2-D histogram with a int per channel (see TH1 documentation)} ;  CTH2Poly2D Histogram with Polygonal Bins ;  CTH2PolyBinHelper class to represent a bin in the TH2Poly histogram ;  CTH2S2-D histogram with a short per channel (see TH1 documentation) ;  CTH3The 3-D histogram classes derived from the 1-D histogram classes ;  CTH3C3-D histogram with a bype per channel (see TH1 documentation) ;  CTH3D3-D histogram with a double per channel (see TH1 documentation)} ;  CTH3F3-D histogram with a float per channel (see TH1 documentation)} ;  CTH3GLOpenGL renderer class for TH3 ;  CTH3I3-D histogram with a int per channel (see TH1 documentation)} ;  CTH3S3-D histogram with a short per channel (see TH1 documentation) ;  CTHaarMatrixT;  CTHashListTHashList implements a hybrid collection class consisting of a hash table and a list to store TObject's ;  CTHashTableTHashTable implements a hash table to store TObject's ;  CTHashTableIterIterator of hash table ;  CTHbookBranchHBOOK Branch ;  CTHbookFileThis class is an interface to the Hbook objects in Hbook files ;  CTHbookKeyHBOOK Key ;  CTHbookTreeA wrapper class supporting Hbook ntuples (CWN and RWN) ;  CTHDFSFileReads and writes its data via the HDFS protocols ;  CTHDFSSystemDirectory handler for HDFS (THDFSFile) ;  CTHelixTHelix has two different constructors ;  CTHilbertMatrixT;  CTHilbertMatrixTSym;  CTHistPainterThe histogram painter class ;  CTHLimitsFinderClass to find nice axis limits ;  CTHnMultidimensional histogram ;  CTHnBaseMultidimensional histogram base ;  CTHnIterIterator over THnBase bins ;  CTHnSparseEfficient multidimensional histogram ;  CTHnSparseArrayChunkTHnSparseArrayChunk is used internally by THnSparse ;  CTHnSparseTTemplated implementation of the abstract base THnSparse ;  CTHnTTemplated implementation of the abstract base THn ;  CTHostAuth;  CTHStackThe Histogram stack class ;  ►CTHtml;  CDocE,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:135640,hash,hash,135640,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,1,['hash'],['hash']
Security,"stogram. ;  ;  reverseaxis.C;   Example showing an histogram with reverse axis. ;  ;  sparsehist.C;  Evaluate the performance of THnSparse vs TH1/2/3/nF for different numbers of dimensions and bins per dimension. ;  ;  statsEditing.C;   Edit statistics box. ;  ;  testSmooth.C;   Histogram smoothing. ;  ;  th2polyBoxes.C;   This tutorial illustrates how to create an histogram with polygonal bins (TH2Poly). ;  ;  th2polyEurope.C;   This tutorial illustrates how to create an histogram with polygonal bins (TH2Poly), fill it and draw it. ;  ;  th2polyHoneycomb.C;   This tutorial illustrates how to create an histogram with hexagonal bins (TH2Poly). ;  ;  th2polyUSA.C;   This tutorial illustrates how to create an histogram with polygonal bins (TH2Poly), fill it and draw it using the col option. ;  ;  thstack2palettecolor.C;   Palette coloring for 2D histograms' stack is activated thanks to the option PFC (Palette Fill Color). ;  ;  thstackcolorscheme.C;   This example demonstrates how to use the accessible color schemes with THStack. ;  ;  thstackpalettecolor.C;   Palette coloring for histograms' stack is activated thanks to the options PFC (Palette Fill Color), PLC (Palette Line Color) and AMC (Palette Marker Color). ;  ;  tprofile2polyRealistic.C;   Different charges depending on region ;  ;  tprofile2polyRealisticModuleError.C;   Simulate faulty detector panel w.r.t. ;  ;  transpad.C;   Example of a canvas showing two histograms with different scales. ;  ;  twoscales.C;   Example of macro illustrating how to superimpose two histograms with different scales in the ""same"" pad. ;  ;  twoscales.py;   Example of macro illustrating how to superimpose two histograms with different scales in the ""same"" pad. ;  ;  xyplot.C;   Example showing how to produce a plot with an orthogonal axis system centered at (0,0). ;  ;  ZoomHistogram.C;   Changing the Range on the X-Axis of a Histogram ;  . tutorialshist. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:50 (GVA Time",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_cb5b3ace9d7fddaf972edd3edd27e2ab.html:5927,access,accessible,5927,doc/master/dir_cb5b3ace9d7fddaf972edd3edd27e2ab.html,https://root.cern,https://root.cern/doc/master/dir_cb5b3ace9d7fddaf972edd3edd27e2ab.html,1,['access'],['accessible']
Security,"stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHelix.html:10177,Hash,Hash,10177,doc/master/classTHelix.html,https://root.cern,https://root.cern/doc/master/classTHelix.html,14,"['Hash', 'hash']","['Hash', 'hash']"
Security,"stract class describing PROOF resources; TProofResourcesStatic Class to handle PROOF static config; TProofServ PROOF Server Application Interface; TProofServLite PROOF-Lite Server Application Interface; TProofSuperMaster PROOF control class for making submasters; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> Class describing a vector container; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> Class describing a vector container; TPyDispatcher Python dispatcher class; TPyMultiGenFunction Python for Math::IMultiGenFunction equivalent; TPyMultiGradFunction Python for Math::IMultiGradFunction equivalent; TPyReturn Python morphing return object; TPySelector Python equivalent base class for PROOF; TPythia6 Interface to Pythia6.1 Event Generator; TPythia6Decayer Particle Decayer Base Class; TPythia8 Interface class of Pythia8; TPythia8Decayer Particle Decayer using Pythia8; TPython Access to the python interpreter; TQApplication creates ROOT environement with the Qt windowing system; TQCanvasImp ABC describing Qt GUI independent main window; TQCanvasMenu interface to Qt based context sensitive popup menus; TQClass Class with connections; TQCommand encapsulates the information for undo/redo a single action.; TQConnection Internal class used in the object communication mechanism; TQMimeTypes Pool of mime type objects; TQObjSender Used to ""delegate"" TQObject functionality; TQObject Base class for object communication mechanism; TQRootApplication creates Qt environement interface with the ROOT windowing system; TQRootCanvas interface to Qt eventloop to handle user input; TQRootDialog prompt for the arguments of an object's member function; TQRootGuiFactory Qt ROOT Gui factory; TQUndoManager recorder of operations for undo and redo; TQpDataBase Qp Base Data class; TQpDataDens Qp Data class for Dens formulation; TQpDataSparse Qp Data class for Sparse formulation; TQpLinSolverBase Qp linear solver base class; TQpLinSolverDens Qp linear solver class for De",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:115597,Access,Access,115597,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,2,['Access'],['Access']
Security,"stream &ReadString(std::istream &str); // Read to EOF or null character; 430 std::istream &ReadToDelim(std::istream &str, char delim = '\n'); // Read to EOF or delimitor; 431 std::istream &ReadToken(std::istream &str); // Read separated by white space; 432 TString &Remove(Ssiz_t pos); // Remove pos to end of string; 433 TString &Remove(Ssiz_t pos, Ssiz_t n); // Remove n chars starting at pos; 434 TString &Remove(EStripType s, char c); // Like Strip() but changing string directly; 435 TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s);; 436 TString &Replace(Ssiz_t pos, Ssiz_t n, const char *s, Ssiz_t ns);; 437 TString &Replace(Ssiz_t pos, Ssiz_t n, const TString &s);; 438 TString &Replace(Ssiz_t pos, Ssiz_t n1, const TString &s, Ssiz_t n2);; 439 TString &ReplaceAll(const TString &s1, const TString &s2); // Find&Replace all s1 with s2 if any; 440 TString &ReplaceAll(const TString &s1, const char *s2); // Find&Replace all s1 with s2 if any; 441 TString &ReplaceAll(const char *s1, const TString &s2); // Find&Replace all s1 with s2 if any; 442 TString &ReplaceAll(const char *s1, const char *s2); // Find&Replace all s1 with s2 if any; 443 TString &ReplaceAll(const char *s1, Ssiz_t ls1, const char *s2, Ssiz_t ls2); // Find&Replace all s1 with s2 if any; 444 TString &ReplaceSpecialCppChars();; 445 void Resize(Ssiz_t n); // Truncate or add blanks as necessary; 446 TSubString Strip(EStripType s = kTrailing, char c = ' ') const;; 447 TString &Swap(TString &other); // Swap the contents of this and other without reallocation; 448 void ToLower(); // Change self to lower-case; 449 void ToUpper(); // Change self to upper-case; 450 TObjArray *Tokenize(const TString &delim) const;; 451 Bool_t Tokenize(TString &tok, Ssiz_t &from, const char *delim = "" "") const;; 452 std::string_view View() const { return std::string_view(GetPointer(),Length()); }; 453 ; 454 // Static member functions; 455 static UInt_t Hash(const void *txt, Int_t ntxt); // Calculates hash index from any char string.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8h_source.html:19038,Hash,Hash,19038,doc/master/TString_8h_source.html,https://root.cern,https://root.cern/doc/master/TString_8h_source.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"string& name, double val, double step); virtual boolSetVariableValue(unsigned int ivar, double val); virtual boolSetVariableValues(const double* x); intROOT::Math::Minimizer::Status() const; intROOT::Math::Minimizer::Strategy() const; doubleROOT::Math::Minimizer::Tolerance() const; const ROOT::Math::MinimTransformFunction*TransformFunction() const; virtual intROOT::Math::Minimizer::VariableIndex(const string&) const; virtual stringROOT::Math::Minimizer::VariableName(unsigned int) const; virtual const double*X() const. private:. ROOT::Math::GSLMinimizerGSLMinimizer(const ROOT::Math::GSLMinimizer&); ROOT::Math::GSLMinimizer&operator=(const ROOT::Math::GSLMinimizer& rhs). Data Members; protected:. intROOT::Math::Minimizer::fDebugprint level; unsigned intROOT::Math::Minimizer::fMaxCallsmax number of function calls ; unsigned intROOT::Math::Minimizer::fMaxItermax number or iterations used to find the minimum; doubleROOT::Math::Minimizer::fPrecprecision; intROOT::Math::Minimizer::fStatusstatus of minimizer ; intROOT::Math::Minimizer::fStrategyminimizer strategy; doubleROOT::Math::Minimizer::fToltolerance (absolute); doubleROOT::Math::Minimizer::fUperror scale ; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. map<unsigned int,std::pair<double,double> >fBoundsmap specifying the bound using as key the parameter index; unsigned intfDim; ROOT::Math::GSLMultiMinimizer*fGSLMultiMin; doublefLSToleranceLine Search Tolerance; doublefMinVal; vector<std::string>fNames; const ROOT::Math::IMultiGradFunction*fObjFunc; vector<double>fSteps; vector<double>fValues; vector<ROOT::Math::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLMinimizer(ROOT::Math::EGSLMinimizerType type = ROOT::Math::kConjugateFR ). Default constructor. GSLMinimizer(const char * type ). Constructor with a string giving na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__GSLMinimizer.html:4905,validat,validated,4905,root/html526/ROOT__Math__GSLMinimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__GSLMinimizer.html,1,['validat'],['validated']
Security,"string& name, double val, double step); virtual boolSetVariableValue(unsigned int ivar, double val); virtual boolSetVariableValues(const double* x); intROOT::Math::Minimizer::Status() const; intROOT::Math::Minimizer::Strategy() const; doubleROOT::Math::Minimizer::Tolerance() const; const ROOT::Math::MinimTransformFunction*TransformFunction() const; virtual intROOT::Math::Minimizer::VariableIndex(const string&) const; virtual stringROOT::Math::Minimizer::VariableName(unsigned int) const; virtual const double*X() const. private:. ROOT::Math::GSLMinimizerGSLMinimizer(const ROOT::Math::GSLMinimizer&); ROOT::Math::GSLMinimizer&operator=(const ROOT::Math::GSLMinimizer& rhs). Data Members; protected:. intROOT::Math::Minimizer::fDebugprint level; unsigned intROOT::Math::Minimizer::fMaxCallsmax number of function calls ; unsigned intROOT::Math::Minimizer::fMaxItermax number or iterations used to find the minimum; doubleROOT::Math::Minimizer::fPrecprecision; intROOT::Math::Minimizer::fStatusstatus of minimizer ; intROOT::Math::Minimizer::fStrategyminimizer strategy; doubleROOT::Math::Minimizer::fToltolerance (absolute); doubleROOT::Math::Minimizer::fUperror scale ; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. map<unsigned int,std::pair<double,double> >fBoundsmap specifying the bound using as key the parameter index; unsigned intfDim; ROOT::Math::GSLMultiMinimizer*fGSLMultiMin; doublefLSToleranceLine Search Tolerance; doublefMinVal; vector<std::string>fNames; const ROOT::Math::IMultiGradFunction*fObjFunc; vector<double>fSteps; vector<double>fValues; vector<ROOT::Math::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLMinimizer(ROOT::Math::EGSLMinimizerType type = ROOT::Math::kConjugateFR). Default constructor. GSLMinimizer(const char* type). Constructor with a string giving name ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__GSLMinimizer.html:5121,validat,validated,5121,root/html528/ROOT__Math__GSLMinimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__GSLMinimizer.html,3,['validat'],['validated']
Security,"string. ;  ; Int_t defaultPrintContents (Option_t *opt) const override;  Define default RooPrinable print options for given Print() flag string For inline printing only show value of objects, for default print show name,class name value and extras of each object. ;  ; void dump () const;  Base contents dumper for debugging purposes. ;  ; bool empty () const;  ; const_iterator end () const;  ; bool equals (const RooAbsCollection &otherColl) const;  Check if this and other collection have identically-named contents. ;  ; RooAbsArg * find (const char *name) const;  Find object with given name in list. ;  ; RooAbsArg * find (const RooAbsArg &) const;  Find object with given name in list. ;  ; TObject * FindObject (const char *name) const override;  Find object by name in the collection. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object in the collection, Note: matching by object name, like the find() method. ;  ; RooAbsArg * first () const;  ; Storage_t const & get () const;  Const access to the underlying stl container. ;  ; Int_t getCatIndex (const char *name, Int_t defVal=0, bool verbose=false) const;  Get index value of a RooAbsCategory stored in set with given name. ;  ; const char * getCatLabel (const char *name, const char *defVal="""", bool verbose=false) const;  Get state name of a RooAbsCategory stored in set with given name. ;  ; Int_t getHashTableSize () const;  Query the size at which the collection will automatically start using an extra lookup table instead of performing a linear search. ;  ; const char * GetName () const override;  Returns name of object. ;  ; double getRealValue (const char *name, double defVal=0.0, bool verbose=false) const;  Get value of a RooAbsReal stored in set with given name. ;  ; Int_t getSize () const;  Return the number of elements in the collection. ;  ; const char * getStringValue (const char *name, const char *defVal="""", bool verbose=false) const;  Get string value of a RooStringVar stored in set with",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooArgList.html:7731,access,access,7731,doc/master/classRooArgList.html,https://root.cern,https://root.cern/doc/master/classRooArgList.html,2,['access'],['access']
Security,"string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooObjCacheManager_cacheMgrThe cache manager; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAddition.html:33451,access,access,33451,root/html534/RooAddition.html,https://root.cern,https://root.cern/root/html534/RooAddition.html,1,['access'],['access']
Security,"string>RooAbsArg::_boolAttribBoolean attributes; set<string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue; RooDataHist_dataSet; RooListProxy_dataVarsThe RooRealVars; Bool_tRooAbsArg::_deleteWatch! Delete watch flag; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches; Bool_tRooAbsArg::_isConstant! Cached isConstant status; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ParamHistFunc.html:35499,access,access,35499,root/html602/ParamHistFunc.html,https://root.cern,https://root.cern/root/html602/ParamHistFunc.html,2,['access'],['access']
Security,"string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooObjCacheManager_cacheMgr! The cache manager; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Int_t_ipOrderInterpolation order for cache histograms ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsCachedReal.html:34628,access,access,34628,root/html534/RooAbsCachedReal.html,https://root.cern,https://root.cern/root/html534/RooAbsCachedReal.html,1,['access'],['access']
Security,"string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; RooListProxy_highSetHigh-side varaition; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; vector<int>_interpCode; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooListProxy_lowSetLow-side variation; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/PiecewiseInterpolation.html:33486,access,access,33486,root/html534/PiecewiseInterpolation.html,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html,1,['access'],['access']
Security,"stripDisconnected=true) constRooAbsArg; getParameters(const RooArgSet *observables, bool stripDisconnected=true) constRooAbsArg; getParameters(const RooArgSet *observables, RooArgSet &outputSet, bool stripDisconnected=true) constRooAbsArgvirtual; getParametersHook(const RooArgSet *, RooArgSet *, bool) constRooAbsArginlineprotectedvirtual; getParametersSizeEstimate(const RooArgSet *nset=nullptr) constRooAbsArgprivate; getPlotLabel() constRooAbsReal; getPropagatedError(const RooFitResult &fr, const RooArgSet &nset={}) constRooAbsReal; getProxy(Int_t index) constRooAbsArg; getStringAttribute(const Text_t *key) constRooAbsArg; GetTitle() const overrideTNamedinlinevirtual; getTitle(bool appendUnit=false) constRooAbsReal; getTransientAttribute(const Text_t *name) constRooAbsArg; GetUniqueID() constTObjectvirtual; getUnit() constRooAbsRealinline; getVal(const RooArgSet *normalisationSet=nullptr) constRooAbsRealinline; getVal(const RooArgSet &normalisationSet) constRooAbsRealinline; getValV(const RooArgSet *set=nullptr) const overrideRooAbsPdfvirtual; getVariables(bool stripDisconnected=true) constRooAbsArg; globalSelectComp(bool flag)RooAbsRealprotectedstatic; gradient(double *) constRooAbsRealinlinevirtual; graphVizAddConnections(std::set< std::pair< RooAbsArg *, RooAbsArg * > > &)RooAbsArgprotected; graphVizTree(const char *fileName, const char *delimiter=""\n"", bool useTitle=false, bool useLatex=false)RooAbsArg; graphVizTree(std::ostream &os, const char *delimiter=""\n"", bool useTitle=false, bool useLatex=false)RooAbsArg; HandleTimer(TTimer *timer)TObjectvirtual; hasClients() constRooAbsArginline; hasDataToken() constRooAbsArginline; hasGradient() constRooAbsRealinlinevirtual; Hash() const overrideTNamedinlinevirtual; HasInconsistentHash() constTObjectinline; hasRange(const char *) constRooAbsArginlinevirtual; hideOffset()RooAbsRealstatic; Ignore enum valueRooAbsReal; importWorkspaceHook(RooWorkspace &ws)RooAbsArginlinevirtual; Info(const char *method, const char *msgfmt,.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf-members.html:21419,Hash,Hash,21419,doc/master/classRooAbsPdf-members.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf-members.html,1,['Hash'],['Hash']
Security,"struct a vector of size 8 from 8 scalar values ; Definition at line 160 of file SVector.icc. ◆ SVector() [14/15]. template<class T , unsigned int D> . ROOT::Math::SVector< T, D >::SVector ; (; const T & ; a1, . const T & ; a2, . const T & ; a3, . const T & ; a4, . const T & ; a5, . const T & ; a6, . const T & ; a7, . const T & ; a8, . const T & ; a9 . ). construct a vector of size 9 from 9 scalar values ; Definition at line 168 of file SVector.icc. ◆ SVector() [15/15]. template<class T , unsigned int D> . ROOT::Math::SVector< T, D >::SVector ; (; const T & ; a1, . const T & ; a2, . const T & ; a3, . const T & ; a4, . const T & ; a5, . const T & ; a6, . const T & ; a7, . const T & ; a8, . const T & ; a9, . const T & ; a10 . ). construct a vector of size 10 from 10 scalar values ; Definition at line 178 of file SVector.icc. Member Function Documentation. ◆ apply(). template<class T , unsigned int D> . T ROOT::Math::SVector< T, D >::apply ; (; unsigned int ; i); const. inline . access the parse tree. Index starts from zero ; Definition at line 537 of file SVector.icc. ◆ Array() [1/2]. template<class T , unsigned int D> . T * ROOT::Math::SVector< T, D >::Array. inline . return non-const pointer to internal array ; Definition at line 543 of file SVector.icc. ◆ Array() [2/2]. template<class T , unsigned int D> . const T * ROOT::Math::SVector< T, D >::Array. inline . return read-only pointer to internal array ; Definition at line 540 of file SVector.icc. ◆ At() [1/2]. template<class T , unsigned int D> . T & ROOT::Math::SVector< T, D >::At ; (; unsigned int ; i). inline . read/write access of vector elements with check on index. Index starts from 0. ; Definition at line 602 of file SVector.icc. ◆ At() [2/2]. template<class T , unsigned int D> . const T & ROOT::Math::SVector< T, D >::At ; (; unsigned int ; i); const. inline . read-only access of vector elements with check on index. Index starts from 0. ; Definition at line 596 of file SVector.icc. ◆ begin() [1/2]. template<c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1SVector.html:12680,access,access,12680,doc/master/classROOT_1_1Math_1_1SVector.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1SVector.html,1,['access'],['access']
Security,"such; and will be precalculated when fitting to a dataset. By forcibly precalculating functions with non-trivial Jacobians,; or functions of multiple variables occurring in the data set,; using addColumn(), you may alter the outcome of the fit. Only in cases where such a modification of fit behaviour is intentional,; this function should be used. RooArgSet* addColumns(const RooArgList& varList); Utility function to add multiple columns in one call; See addColumn() for details. RooAbsDataStore* merge(const RooArgSet& allvars, list<RooAbsDataStore*> dstoreList); Merge columns of supplied data set(s) with this data set. All; data sets must have equal number of entries. In case of; duplicate columns the column of the last dataset in the list; prevails. void append(RooAbsDataStore& other). Double_t sumEntries() const. Int_t numEntries() const. void reset(). void cacheArgs(const RooAbsArg* owner, RooArgSet& varSet, const RooArgSet* nset = 0); Cache given RooAbsArgs with this tree: The tree is; given direct write access of the args internal cache; the args values is pre-calculated for all data points; in this data collection. Upon a get() call, the; internal cache of 'newVar' will be loaded with the; precalculated value and it's dirty flag will be cleared. void setArgStatus(const RooArgSet& set, Bool_t active); Activate or deactivate the branch status of the TTree branch associated; with the given set of dataset observables. void resetCache(); Remove tree with values of cached observables; and clear list of cached observables. void attachBuffers(const RooArgSet& extObs). void resetBuffers(). void restoreAlternateBuffers(). void checkInit() const. Stat_t GetEntries() const; Interface function to TTree::GetEntries. void Reset(Option_t* option = 0); Interface function to TTree::Reset. Int_t Fill(); Interface function to TTree::Fill. Int_t GetEntry(Int_t entry = 0, Int_t getall = 0); Interface function to TTree::GetEntry. void Draw(Option_t* option = """"). void Streamer(TBuffer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooTreeDataStore.html:17077,access,access,17077,root/html532/RooTreeDataStore.html,https://root.cern,https://root.cern/root/html532/RooTreeDataStore.html,1,['access'],['access']
Security,"sultManager;  CTQUndoManagerRecorder of operations for undo and redo ;  CTrackD;  CTrackD32;  CTRadialGradientDefine a radial color gradient ;  CTRandomThis is the base class for the ROOT Random number generators ;  CTRandom1The Ranlux Random number generator class ;  CTRandom2Random number generator class based on the maximally quidistributed combined Tausworthe generator by L'Ecuyer ;  CTRandom3Random number generator class based on M ;  CTRealDataManages the effective list of all data members for a given class ;  CTReaperTimer;  CTRecCmdEvent;  CTRecEvent;  CTRecExtraEvent;  CTRecGuiEvent;  CTRecorder;  CTRecorderInactive;  CTRecorderPaused;  CTRecorderRecording;  CTRecorderReplaying;  CTRecorderState;  CTRecWinPair;  CTRedirectOutputGuard;  CTRefPersistent Reference link to a TObject A TRef is a lightweight object pointing to any TObject ;  CTRefArrayAn array of references to TObjects ;  CTRefArrayIterIterator of object array ;  CTRefArrayProxyA container proxy, which allows to access references stored in a TRefArray from TTree::Draw ;  CTRefCntDefinitions for TRefCnt, base class for reference counted objects ;  CTRefProxy;  CTRefTableA TRefTable maintains the association between a referenced object and the parent object supporting this referenced object ;  CTRegexpRegular expression class ;  CTRemoteObjectProtocol for browsing ROOT objects from a remote ROOT session ;  CTResponseTable;  CTRFIOFileA ROOT file that reads/writes via a rfiod server ;  CTRFIOSystemDirectory handler for RFIO ;  Ctriangulateio;  CTRint;  CTRobustEstimator;  CTRolke;  CTROOTROOT top level object description ;  CTRootApplication;  CTRootAuth;  CTRootBrowser;  CTRootBrowserLite;  CTRootCanvas;  CTRootContextMenu;  CTRootControlBar;  CTRootDialog;  CTRootEmbeddedCanvas;  CTRootGuiBuilder;  CTRootGuiFactory;  CTRootHelpDialog;  CTRootIOCtor;  CTRootSecContext;  CTRootSniffer;  CTRootSnifferScanRec;  CTRootSnifferStoreAbstract interface for storage of hierarchy scan in TRootSniffer ;  CTRoot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:152098,access,access,152098,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,1,['access'],['access']
Security,"sultPtr::GetPtrT * GetPtr()Get the pointer to the encapsulated object.Definition RResultPtr.hxx:236; ROOT::RDF::RResultPtr::ThrowIfNullvoid ThrowIfNull()Definition RResultPtr.hxx:193; ROOT::RDF::RResultPtr::OnPartialResultRResultPtr< T > & OnPartialResult(ULong64_t everyNEvents, std::function< void(T &)> callback)Register a callback that RDataFrame will execute ""everyNEvents"" on a partial result.Definition RResultPtr.hxx:318; ROOT::RDF::RResultPtr::fLoopManagerRDFDetail::RLoopManager * fLoopManagerNon-owning pointer to the RLoopManager at the root of this computation graph.Definition RResultPtr.hxx:174; ROOT::RDF::RResultPtr::operator!=friend bool operator!=(const RResultPtr< T1 > &lhs, const RResultPtr< T2 > &rhs)Definition RResultPtr.hxx:407; ROOT::RDF::RResultPtr::beginRIterationHelper< T >::Iterator_t begin()Return an iterator to the beginning of the contained object if this makes sense, throw a compilation ...Definition RResultPtr.hxx:257; ROOT::RDF::RResultPtr::Value_tT Value_tConvenience alias to simplify access to proxied type.Definition RResultPtr.hxx:206; ROOT::RDF::RResultPtr::GetT * Get()Get the pointer to the encapsulated result.Definition RResultPtr.hxx:186; ROOT::RDF::RResultPtr::GetValueconst T & GetValue()Get a const reference to the encapsulated object.Definition RResultPtr.hxx:228; ROOT::RDF::RResultPtr::RResultPtrRResultPtr(const RResultPtr &)=default; ROOT::RDF::RResultPtr::operator*T & operator*()Get a pointer to the encapsulated object.Definition RResultPtr.hxx:240; ROOT::RDF::RResultPtr::operator=RResultPtr & operator=(const RResultPtr &)=default; ROOT::RDF::RResultPtr::OnPartialResultSlotRResultPtr< T > & OnPartialResultSlot(ULong64_t everyNEvents, std::function< void(unsigned int, T &)> callback)Register a callback that RDataFrame will execute in each worker thread concurrently on that thread's ...Definition RResultPtr.hxx:364; ROOT::RDF::RResultPtr::operator=RResultPtr & operator=(RResultPtr &&)=default; ROOT::RDF::RResultPtr::operator==fri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RResultPtr_8hxx_source.html:23796,access,access,23796,doc/master/RResultPtr_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RResultPtr_8hxx_source.html,1,['access'],['access']
Security,"sum(const TString& checksum) const; static voidProcessDeclaration(TObjArray* array, const TString& list); static voidProcessList(TObjArray* array, const TString& list); Bool_tProcessVersion(const TString& version) const. Data Members; public:. enum RuleType_t { kReadRule; kReadRawRule; kNone; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfAttributesAttributes to be applied to the member (like Owner/NotOwner); TStringfChecksumSource checksum string; vector<UInt_t>*fChecksumVect! Source checksum vector (for searching purposes); TStringfCodeUser specified code snippet; Bool_tfEmbedValue determining if the rule should be embedded; TStringfIncludeIncludes string; TObjArray*fIncludeVect! Includes vector; ROOT::TSchemaRule::ReadFuncPtr_tfReadFuncPtr! Conversion function pointer for read rule; ROOT::TSchemaRule::ReadRawFuncPtr_tfReadRawFuncPtr! Conversion function pointer for readraw rule; ROOT::TSchemaRule::RuleType_tfRuleTypeType of the rule; TStringfSourceSource data member string; TStringfSourceClassSource class; TObjArray*fSourceVect! Source data member vector (for searching purposes); TStringfTargetTarget data mamber string; TStringfTargetClassTarget class, this is the owner of this rule object.; TObjArray*fTargetVect! Target data member vector (for searching purposes); TStringfVersionSource version string; vector<std::pair<Int_t,Int_t> >*fVersionVect! Source version vector (for searching purposes). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSchemaRule(); Default Constructor. ~TSchemaRule(); Destructor. TSchemaRule(const ROOT::TSchemaRule& rhs); Copy Constructor. void ls(Option_t* option = """") const; The ls function lists the contents of a class on stdout. Ls output; is typically much less verbos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__TSchemaRule.html:7027,checksum,checksum,7027,root/html528/ROOT__TSchemaRule.html,https://root.cern,https://root.cern/root/html528/ROOT__TSchemaRule.html,8,['checksum'],['checksum']
Security,"sumVect = nullptr;; 905 return kFALSE;; 906 }; 907 ; 908 if( !fChecksumVect ); 909 fChecksumVect = new std::vector<UInt_t>;; 910 fChecksumVect->clear();; 911 ; 912 //---------------------------------------------------------------------------; 913 // Check the validity of each list element; 914 /////////////////////////////////////////////////////////////////////////////; 915 ; 916 for( const auto& checksumStr : checksums ) {; 917 auto chksum = ParseChecksum( checksumStr.c_str() );; 918 if (chksum == 0u) {; 919 delete fChecksumVect;; 920 fChecksumVect = nullptr;; 921 return kFALSE;; 922 }; 923 ; 924 fChecksumVect->push_back( chksum );; 925 }; 926 return kTRUE;; 927}; 928 ; 929////////////////////////////////////////////////////////////////////////////////; 930/// Parse the checksum in the given string. Returns either the checksum or zero; 931/// if the string is not a hex or decimal number.; 932 ; 933UInt_t TSchemaRule::ParseChecksum(const char* checksum) const {; 934 std::istringstream converter(checksum);; 935 UInt_t chksum;; 936 converter >> std::hex >> chksum;; 937 if (converter.fail()) {; 938 converter.clear();; 939 converter.seekg(0);; 940 converter >> std::dec >> chksum;; 941 }; 942 ; 943 if( converter.fail() ) {; 944 return 0u;; 945 }; 946 ; 947 return chksum;; 948}; 949 ; 950////////////////////////////////////////////////////////////////////////////////; 951/// Split the list as a comma separated list into a TObjArray of TObjString.; 952 ; 953void TSchemaRule::ProcessList( TObjArray* array, const TString& list ); 954{; 955 std::list<std::string> elems;; 956 std::list<std::string>::iterator it;; 957 Internal::TSchemaRuleProcessor::SplitList( (const char*)list, elems );; 958 ; 959 array->Clear();; 960 ; 961 if( elems.empty() ); 962 return;; 963 ; 964 for( it = elems.begin(); it != elems.end(); ++it ) {; 965 TObjString *str = new TObjString;; 966 *str = it->c_str();; 967 array->Add( str );; 968 }; 969}; 970 ; 971/////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSchemaRule_8cxx_source.html:30468,checksum,checksum,30468,doc/master/TSchemaRule_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSchemaRule_8cxx_source.html,2,['checksum'],['checksum']
Security,"sume that; 1634 // there will also be a collection proxy.; 1635 fCollectionProxy = TVirtualStreamerInfo::Factory()->GenEmulatedProxy( GetName(), silent );; 1636 if (fCollectionProxy) {; 1637 fSizeof = fCollectionProxy->Sizeof();; 1638 ; 1639 // Numeric Collections have implicit conversions:; 1640 GetSchemaRules(kTRUE);; 1641 ; 1642 } else if (!silent) {; 1643 Warning(""Init"",""Collection proxy for %s was not properly initialized!"",GetName());; 1644 }; 1645 if (fStreamer==nullptr) {; 1646 fStreamer = TVirtualStreamerInfo::Factory()->GenEmulatedClassStreamer( GetName(), silent );; 1647 }; 1648 }; 1649 } else if (TClassEdit::IsStdPair(GetName())) {; 1650 // std::pairs have implicit conversions; 1651 GetSchemaRules(kTRUE);; 1652 }; 1653 ; 1654 ResetBit(kLoading);; 1655}; 1656 ; 1657////////////////////////////////////////////////////////////////////////////////; 1658/// TClass dtor. Deletes all list that might have been created.; 1659 ; 1660TClass::~TClass(); 1661{; 1662 R__LOCKGUARD(gInterpreterMutex);; 1663 ; 1664 // Remove from the typedef hashtables.; 1665 if (fgClassTypedefHash && TestBit (kHasNameMapNode)) {; 1666 TString resolvedThis = TClassEdit::ResolveTypedef (GetName(), kTRUE);; 1667 TIter next (fgClassTypedefHash->GetListForObject (resolvedThis));; 1668 while ( TNameMapNode* htmp = static_cast<TNameMapNode*> (next()) ) {; 1669 if (resolvedThis == htmp->String() && htmp->fOrigName == GetName()) {; 1670 fgClassTypedefHash->Remove (htmp);; 1671 delete htmp;; 1672 break;; 1673 }; 1674 }; 1675 }; 1676 ; 1677 // Not owning lists, don't call Delete(); 1678 // But this still need to be done first because the TList destructor; 1679 // does access the object contained (via GetObject()->TestBit(kCanDelete)); 1680 delete fStreamer; fStreamer =nullptr;; 1681 delete fAllPubData; fAllPubData =nullptr;; 1682 delete fAllPubMethod; fAllPubMethod=nullptr;; 1683 ; 1684 delete fPersistentRef.load();; 1685 ; 1686 if (fBase.load()); 1687 (*fBase).Delete();; 1688 delete fBase.load();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:64109,hash,hashtables,64109,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['hash'],['hashtables']
Security,"sume that; 1701 // there will also be a collection proxy.; 1702 fCollectionProxy = TVirtualStreamerInfo::Factory()->GenEmulatedProxy( GetName(), silent );; 1703 if (fCollectionProxy) {; 1704 fSizeof = fCollectionProxy->Sizeof();; 1705 ; 1706 // Numeric Collections have implicit conversions:; 1707 GetSchemaRules(kTRUE);; 1708 ; 1709 } else if (!silent) {; 1710 Warning(""Init"",""Collection proxy for %s was not properly initialized!"",GetName());; 1711 }; 1712 if (fStreamer==nullptr) {; 1713 fStreamer = TVirtualStreamerInfo::Factory()->GenEmulatedClassStreamer( GetName(), silent );; 1714 }; 1715 }; 1716 } else if (TClassEdit::IsStdPair(GetName())) {; 1717 // std::pairs have implicit conversions; 1718 GetSchemaRules(kTRUE);; 1719 }; 1720 ; 1721 ResetBit(kLoading);; 1722}; 1723 ; 1724////////////////////////////////////////////////////////////////////////////////; 1725/// TClass dtor. Deletes all list that might have been created.; 1726 ; 1727TClass::~TClass(); 1728{; 1729 R__LOCKGUARD(gInterpreterMutex);; 1730 ; 1731 // Remove from the typedef hashtables.; 1732 if (fgClassTypedefHash && TestBit (kHasNameMapNode)) {; 1733 TString resolvedThis = TClassEdit::ResolveTypedef (GetName(), kTRUE);; 1734 TIter next (fgClassTypedefHash->GetListForObject (resolvedThis));; 1735 while ( TNameMapNode* htmp = static_cast<TNameMapNode*> (next()) ) {; 1736 if (resolvedThis == htmp->String() && htmp->fOrigName == GetName()) {; 1737 fgClassTypedefHash->Remove (htmp);; 1738 delete htmp;; 1739 break;; 1740 }; 1741 }; 1742 }; 1743 ; 1744 // Not owning lists, don't call Delete(); 1745 // But this still need to be done first because the TList destructor; 1746 // does access the object contained (via GetObject()->TestBit(kCanDelete)); 1747 delete fStreamer; fStreamer =nullptr;; 1748 delete fAllPubData; fAllPubData =nullptr;; 1749 delete fAllPubMethod; fAllPubMethod=nullptr;; 1750 ; 1751 delete fPersistentRef.load();; 1752 ; 1753 if (fBase.load()); 1754 (*fBase).Delete();; 1755 delete fBase.load();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:66860,hash,hashtables,66860,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['hash'],['hashtables']
Security,"supposed to be set properly (no longer pointing to the default).; 6883 if (pThis->fStreamerImpl.load() == &TClass::StreamerDefault) {; 6884 pThis->Fatal(""StreamerDefault"", ""fStreamerImpl not properly initialized (%d)"", pThis->fStreamerType);; 6885 } else {; 6886 (*pThis->fStreamerImpl)(pThis,object,b,onfile_class);; 6887 }; 6888}; 6889 ; 6890////////////////////////////////////////////////////////////////////////////////; 6891/// Adopt a TClassStreamer object. Ownership is transfered to this TClass; 6892/// object.; 6893 ; 6894void TClass::AdoptStreamer(TClassStreamer *str); 6895{; 6896// // This code can be used to quickly test the STL Emulation layer; 6897// Int_t k = TClassEdit::IsSTLCont(GetName());; 6898// if (k==1||k==-1) { delete str; return; }; 6899 ; 6900 R__LOCKGUARD(gInterpreterMutex);; 6901 ; 6902 if (fStreamer) delete fStreamer;; 6903 if (str) {; 6904 fStreamerType = kExternal | ( fStreamerType&kEmulatedStreamer );; 6905 fStreamer = str;; 6906 fStreamerImpl = &TClass::StreamerExternal;; 6907 } else if (fStreamer) {; 6908 // Case where there was a custom streamer and it is hereby removed,; 6909 // we need to reset fStreamerType; 6910 fStreamer = str;; 6911 fStreamerType = TClass::kDefault;; 6912 if (fProperty != -1) {; 6913 fProperty = -1;; 6914 Property();; 6915 }; 6916 }; 6917}; 6918 ; 6919////////////////////////////////////////////////////////////////////////////////; 6920/// Set a wrapper/accessor function around this class custom streamer.; 6921 ; 6922void TClass::SetStreamerFunc(ClassStreamerFunc_t strm); 6923{; 6924 R__LOCKGUARD(gInterpreterMutex);; 6925 if (fProperty != -1 && !fConvStreamerFunc &&; 6926 ( (fStreamerFunc == nullptr && strm != nullptr) || (fStreamerFunc != nullptr && strm == nullptr) ) ); 6927 {; 6928 fStreamerFunc = strm;; 6929 ; 6930 // Since initialization has already been done, make sure to tweak it; 6931 // for the new state.; 6932 if (HasInterpreterInfo() && fStreamerType != kTObject && !fStreamer) {; 6933 fStreamerType = kIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:265607,access,accessor,265607,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['access'],['accessor']
Security,"supposed to be set properly (no longer pointing to the default).; 6950 if (pThis->fStreamerImpl.load() == &TClass::StreamerDefault) {; 6951 pThis->Fatal(""StreamerDefault"", ""fStreamerImpl not properly initialized (%d)"", pThis->fStreamerType);; 6952 } else {; 6953 (*pThis->fStreamerImpl)(pThis,object,b,onfile_class);; 6954 }; 6955}; 6956 ; 6957////////////////////////////////////////////////////////////////////////////////; 6958/// Adopt a TClassStreamer object. Ownership is transfered to this TClass; 6959/// object.; 6960 ; 6961void TClass::AdoptStreamer(TClassStreamer *str); 6962{; 6963// // This code can be used to quickly test the STL Emulation layer; 6964// Int_t k = TClassEdit::IsSTLCont(GetName());; 6965// if (k==1||k==-1) { delete str; return; }; 6966 ; 6967 R__LOCKGUARD(gInterpreterMutex);; 6968 ; 6969 if (fStreamer) delete fStreamer;; 6970 if (str) {; 6971 fStreamerType = kExternal | ( fStreamerType&kEmulatedStreamer );; 6972 fStreamer = str;; 6973 fStreamerImpl = &TClass::StreamerExternal;; 6974 } else if (fStreamer) {; 6975 // Case where there was a custom streamer and it is hereby removed,; 6976 // we need to reset fStreamerType; 6977 fStreamer = str;; 6978 fStreamerType = TClass::kDefault;; 6979 if (fProperty != -1) {; 6980 fProperty = -1;; 6981 Property();; 6982 }; 6983 }; 6984}; 6985 ; 6986////////////////////////////////////////////////////////////////////////////////; 6987/// Set a wrapper/accessor function around this class custom streamer.; 6988 ; 6989void TClass::SetStreamerFunc(ClassStreamerFunc_t strm); 6990{; 6991 R__LOCKGUARD(gInterpreterMutex);; 6992 if (fProperty != -1 && !fConvStreamerFunc &&; 6993 ( (fStreamerFunc == nullptr && strm != nullptr) || (fStreamerFunc != nullptr && strm == nullptr) ) ); 6994 {; 6995 fStreamerFunc = strm;; 6996 ; 6997 // Since initialization has already been done, make sure to tweak it; 6998 // for the new state.; 6999 if (HasInterpreterInfo() && fStreamerType != kTObject && !fStreamer) {; 7000 fStreamerType = kIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:268358,access,accessor,268358,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['access'],['accessor']
Security,"swd, Bool_t& pwhash, Bool_t srppwd); Int_tGetVersion() const; Int_tProofAuthSetup(); static Int_tProofAuthSetup(TSocket* sock, Bool_t client); static voidRemoveSecContext(TRootSecContext* ctx); Int_tRfioAuth(TString& user); voidSetEnvironment(); Int_tSshAuth(TString& user); Int_tSshError(const char* errfile). Data Members; public:. enum ESecurity { kClear; kSRP; kKrb5; kGlobus; kSSH; kRfio; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfDetailslogon details (method dependent ...); THostAuth*fHostAuthpointer to relevant authentication info; TStringfPasswduser's password; TStringfProtocolremote service (rootd, proofd); Bool_tfPwHashkTRUE if fPasswd is a passwd hash; Int_tfRSAKeyType of RSA key used; TStringfRemoteremote host to which we want to connect; Bool_tfSRPPwdkTRUE if fPasswd is a SRP passwd; TRootSecContext*fSecContextpointer to relevant sec context; TAuthenticate::ESecurityfSecurityactual logon security level; TSocket*fSocketconnection to remote daemon; Int_tfTimeOuttimeout flag; TStringfUseruser to be authenticated; Int_tfVersion0,1,2, ... accordingly to remote daemon version; static TList*fgAuthInfo; static TStringfgAuthMeth[6]; static Bool_tfgAuthReUsekTRUE is ReUse required; static Int_tfgAuthTOif > 0, timeout in sec; static TStringfgDefaultUserDefault user information; static TDatimefgExpDateExpiring date for new security contexts; static GlobusAuth_tfgGlobusAuthHook; static Krb5Auth_tfgKrb5AuthHook; static TStringfgKrb5PrincipalPrincipal for Krb5 ticket; static TDatimefgLastAuthrcTime of last reading of fgRootAuthrc; static Int_tfgLastErrorLast error code processed by AuthError(); static TStringfgPasswd; static TPluginHandler*fgPasswdDialogPasswd dialog GUI plugin; static Int_tfgProcessIDID of the main thread as unique identifier",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAuthenticate.html:9088,authenticat,authentication,9088,root/html526/TAuthenticate.html,https://root.cern,https://root.cern/root/html526/TAuthenticate.html,25,"['authenticat', 'hash', 'password', 'secur']","['authenticated', 'authentication', 'hash', 'password', 'security']"
Security,"t 'method' to be the last used (if in the list ...). ;  ; void SetServer (Int_t server);  ; void SetUser (const char *user);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update (THostAuth *ha);  Update info with the one in ha Remaining methods, if any, get lower priority. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHostAuth.html:4497,Hash,Hash,4497,doc/master/classTHostAuth.html,https://root.cern,https://root.cern/doc/master/classTHostAuth.html,2,['Hash'],['Hash']
Security,"t (const char *soExt);  Set shared library extension, should be either .so, .sl, .a, .dll, etc. ;  ; virtual void ShowOutput (RedirectHandle_t *h);  Display the content associated with the redirection described by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebSystem.html:18776,secur,secure,18776,doc/master/classTWebSystem.html,https://root.cern,https://root.cern/doc/master/classTWebSystem.html,1,['secur'],['secure']
Security,"t (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassDocInfo.html:5045,Hash,Hash,5045,doc/master/classTClassDocInfo.html,https://root.cern,https://root.cern/doc/master/classTClassDocInfo.html,1,['Hash'],['Hash']
Security,"t (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParameter.html:5685,Hash,Hash,5685,doc/master/classTParameter.html,https://root.cern,https://root.cern/doc/master/classTParameter.html,2,['Hash'],['Hash']
Security,"t (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TFileSysDB.html:5135,Hash,Hash,5135,doc/master/classTHtml_1_1TFileSysDB.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TFileSysDB.html,9,['Hash'],['Hash']
Security,"t (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStatistic.html:4978,Hash,Hash,4978,doc/master/classTStatistic.html,https://root.cern,https://root.cern/doc/master/classTStatistic.html,1,['Hash'],['Hash']
Security,"t (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObjString.html:4655,Hash,Hash,4655,doc/master/classTObjString.html,https://root.cern,https://root.cern/doc/master/classTObjString.html,1,['Hash'],['Hash']
Security,"t (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTIconBoxThumb.html:3826,Hash,Hash,3826,doc/master/classTIconBoxThumb.html,https://root.cern,https://root.cern/doc/master/classTIconBoxThumb.html,1,['Hash'],['Hash']
Security,"t (the pad's list of; 480 // primitives) will contain both the container and the containees; 481 // (the TParallelCoorVar) but if the Clear is being called from; 482 // the destructor of the container of this list, one of the first; 483 // thing done will be the remove the container (the pad) for the; 484 // list (of Primitives of the canvas) that was connecting it; 485 // (indirectly) to the list of cleanups.; 486 ; 487 // To preserve this connection (without introducing one when there was none),; 488 // we re-use fCache to inform RecursiveRemove of the node currently; 489 // being cleared/deleted.; 490 while (fFirst) {; 491 auto tlk = fFirst;; 492 fFirst = fFirst->fNext;; 493 fSize--;; 494 ; 495 // Make node available to RecursiveRemove; 496 tlk->fNext.reset();; 497 tlk->fPrev.reset();; 498 fCache = tlk;; 499 ; 500 // delete only heap objects; 501 auto obj = tlk->GetObject();; 502 if (obj && ROOT::Detail::HasBeenDeleted(obj)); 503 Error(""Delete"", ""A list is accessing an object (%p) already deleted (list name = %s)"",; 504 obj, GetName());; 505 else if (obj && obj->IsOnHeap()); 506 TCollection::GarbageCollect(obj);; 507 else if (obj && obj->IsA()->GetDirectoryAutoAdd()); 508 removeDirectory.Add(obj);; 509 ; 510 // delete tlk;; 511 }; 512 ; 513 fFirst.reset();; 514 fLast.reset();; 515 fCache.reset();; 516 fSize = 0;; 517 ; 518 } else {; 519 ; 520 auto first = fFirst; //pointer to first entry in linked list; 521 fFirst.reset();; 522 fLast.reset();; 523 fCache.reset();; 524 fSize = 0;; 525 while (first) {; 526 auto tlk = first;; 527 first = first->fNext;; 528 // delete only heap objects; 529 auto obj = tlk->GetObject();; 530 tlk->SetObject(nullptr);; 531 if (obj && ROOT::Detail::HasBeenDeleted(obj)); 532 Error(""Delete"", ""A list is accessing an object (%p) already deleted (list name = %s)"",; 533 obj, GetName());; 534 else if (obj && obj->IsOnHeap()); 535 TCollection::GarbageCollect(obj);; 536 else if (obj && obj->IsA()->GetDirectoryAutoAdd()); 537 removeDirectory.Add(ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TList_8cxx_source.html:15724,access,accessing,15724,doc/master/TList_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TList_8cxx_source.html,1,['access'],['accessing']
Security,"t */; 18977 ; 18978 /* Get SSL client certificate information (if set) */; 18979 struct mg_client_cert client_cert;; 18980 if (ssl_get_client_cert_info(conn, &client_cert)) {; 18981 conn->request_info.client_cert = &client_cert;; 18982 }; 18983 ; 18984 /* process HTTPS connection */; 18985#if defined(USE_HTTP2); 18986 if ((tls.alpn_proto != NULL); 18987 && (!memcmp(tls.alpn_proto, ""\x02h2"", 3))) {; 18988 /* process HTTPS/2 connection */; 18989 init_connection(conn);; 18990 conn->connection_type = CONNECTION_TYPE_REQUEST;; 18991 conn->protocol_type = PROTOCOL_TYPE_HTTP2;; 18992 conn->content_len =; 18993 -1; /* content length is not predefined */; 18994 conn->is_chunked = 0; /* HTTP2 is never chunked */; 18995 process_new_http2_connection(conn);; 18996 } else; 18997#endif; 18998 {; 18999 /* process HTTPS/1.x or WEBSOCKET-SECURE connection */; 19000 init_connection(conn);; 19001 conn->connection_type = CONNECTION_TYPE_REQUEST;; 19002 /* Start with HTTP, WS will be an ""upgrade"" request later */; 19003 conn->protocol_type = PROTOCOL_TYPE_HTTP1;; 19004 process_new_connection(conn);; 19005 }; 19006 ; 19007 /* Free client certificate info */; 19008 if (conn->request_info.client_cert) {; 19009 mg_free((void *)(conn->request_info.client_cert->subject));; 19010 mg_free((void *)(conn->request_info.client_cert->issuer));; 19011 mg_free((void *)(conn->request_info.client_cert->serial));; 19012 mg_free((void *)(conn->request_info.client_cert->finger));; 19013 /* Free certificate memory */; 19014 X509_free(; 19015 (X509 *)conn->request_info.client_cert->peer_cert);; 19016 conn->request_info.client_cert->peer_cert = 0;; 19017 conn->request_info.client_cert->subject = 0;; 19018 conn->request_info.client_cert->issuer = 0;; 19019 conn->request_info.client_cert->serial = 0;; 19020 conn->request_info.client_cert->finger = 0;; 19021 conn->request_info.client_cert = 0;; 19022 }; 19023 } else {; 19024 /* make sure the connection is cleaned up on SSL failure */; 19025 close_connection(conn)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:565587,SECUR,SECURE,565587,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,"['SECUR', 'certificate']","['SECURE', 'certificate']"
Security,"t */; 18978 ; 18979 /* Get SSL client certificate information (if set) */; 18980 struct mg_client_cert client_cert;; 18981 if (ssl_get_client_cert_info(conn, &client_cert)) {; 18982 conn->request_info.client_cert = &client_cert;; 18983 }; 18984 ; 18985 /* process HTTPS connection */; 18986#if defined(USE_HTTP2); 18987 if ((tls.alpn_proto != NULL); 18988 && (!memcmp(tls.alpn_proto, ""\x02h2"", 3))) {; 18989 /* process HTTPS/2 connection */; 18990 init_connection(conn);; 18991 conn->connection_type = CONNECTION_TYPE_REQUEST;; 18992 conn->protocol_type = PROTOCOL_TYPE_HTTP2;; 18993 conn->content_len =; 18994 -1; /* content length is not predefined */; 18995 conn->is_chunked = 0; /* HTTP2 is never chunked */; 18996 process_new_http2_connection(conn);; 18997 } else; 18998#endif; 18999 {; 19000 /* process HTTPS/1.x or WEBSOCKET-SECURE connection */; 19001 init_connection(conn);; 19002 conn->connection_type = CONNECTION_TYPE_REQUEST;; 19003 /* Start with HTTP, WS will be an ""upgrade"" request later */; 19004 conn->protocol_type = PROTOCOL_TYPE_HTTP1;; 19005 process_new_connection(conn);; 19006 }; 19007 ; 19008 /* Free client certificate info */; 19009 if (conn->request_info.client_cert) {; 19010 mg_free((void *)(conn->request_info.client_cert->subject));; 19011 mg_free((void *)(conn->request_info.client_cert->issuer));; 19012 mg_free((void *)(conn->request_info.client_cert->serial));; 19013 mg_free((void *)(conn->request_info.client_cert->finger));; 19014 /* Free certificate memory */; 19015 X509_free(; 19016 (X509 *)conn->request_info.client_cert->peer_cert);; 19017 conn->request_info.client_cert->peer_cert = 0;; 19018 conn->request_info.client_cert->subject = 0;; 19019 conn->request_info.client_cert->issuer = 0;; 19020 conn->request_info.client_cert->serial = 0;; 19021 conn->request_info.client_cert->finger = 0;; 19022 conn->request_info.client_cert = 0;; 19023 }; 19024 } else {; 19025 /* make sure the connection is cleaned up on SSL failure */; 19026 close_connection(conn)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:565620,SECUR,SECURE,565620,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,"['SECUR', 'certificate']","['SECURE', 'certificate']"
Security,"t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design sinc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHashList.html:13177,Hash,Hash,13177,doc/master/classTHashList.html,https://root.cern,https://root.cern/doc/master/classTHashList.html,30,['Hash'],['Hash']
Security,"t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinkedList.html:6631,Hash,Hash,6631,doc/master/classRooLinkedList.html,https://root.cern,https://root.cern/doc/master/classRooLinkedList.html,1,['Hash'],['Hash']
Security,"t *minfo) const final;  ; std::string MethodInfo_TypeNormalizedName (MethodInfo_t *minfo) const final;  ; void PrintIntro () final;  No-op; see TRint instead. ;  ; Longptr_t ProcessLine (const char *line, EErrorCode *error=nullptr) final;  ; Longptr_t ProcessLineAsynch (const char *line, EErrorCode *error=nullptr);  Let cling process a command line asynch. ;  ; Longptr_t ProcessLineSynch (const char *line, EErrorCode *error=nullptr) final;  Let cling process a command line synchronously, i.e we are waiting it will be finished. ;  ; void RecursiveRemove (TObject *obj) final;  Delete object from cling symbol table so it can not be used anymore. ;  ; void RefreshClassInfo (TClass *cl, const clang::NamedDecl *def, bool alias);  Internal function. Actually do the update of the ClassInfo when seeing. ;  ; void RegisterModule (const char *modulename, const char **headers, const char **includePaths, const char *payloadCode, const char *fwdDeclsCode, void(*triggerFunc)(), const FwdDeclArgsToKeepCollection_t &fwdDeclsArgToSkip, const char **classesHeaders, Bool_t lateRegistration=false, Bool_t hasCxxModule=false) final;  Inject the module named ""modulename"" into cling; load all headers. ;  ; bool RegisterPrebuiltModulePath (const std::string &FullPath, const std::string &ModuleMapName=""module.modulemap"") const final;  ; void RegisterTClassUpdate (TClass *oldcl, DictFuncPtr_t dict) final;  Register classes that already existed prior to their dictionary loading and that already had a ClassInfo (and thus would not be refresh via UpdateClassInfo. ;  ; void RegisterTemporary (const cling::Value &value);  Register value as a temporary, extending its lifetime to that of the interpreter. ;  ; void RegisterTemporary (const TInterpreterValue &value);  ; Int_t ReloadAllSharedLibraryMaps () final;  Reload the library map entries coming from all the loaded shared libraries, after first unloading the current ones. ;  ; void ReportDiagnosticsToErrorHandler (bool enable=true) final;  Report ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:28056,Inject,Inject,28056,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,1,['Inject'],['Inject']
Security,"t *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented in TEnvRec, TNamed, TObjString, TParameter< AParamType >, TParameter< Long64_t >, TCollection, TPair, TASImagePlugin, TASPluginGS, TPad, TImagePlugin, TPave, TGObject, TGPicture, TIconBoxThumb, TClassDocInfo, THtml::TFileSysEntry, TStatistic, TDrawFeedback, TStatsFeedback, and RooLinkedList.; Definition at line 515 of file TObject.cxx. ◆ HasInconsistentHash(). Bool_t TObject::HasInconsistentHash ; (; ); const. inline . Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; missing call to RecursiveRemove in destructor).; Note: Since the consistency is only tested for during inserts, this routine will return true for object that have never been inserted whether or not they have a consistent setup. This has no negative side-effect as searching for the object with the right or wrong Hash will always yield a not-found answer (Since anyway no hash can be guaranteed unique, there is always a check) ; Definition at line 358 of file TObject.h. ◆ Info(). void TObject::Info ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue info message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at line 961 of file TObject.cxx. ◆ InheritsFrom() [1/2]. Bool_t TObject::InheritsFrom ; (; const char * ; classname); const. virtual . Returns kTRUE if object inherits from class ""classname"". ; Reimplemented in TClass.; Definition at line 525 of file TObject.cxx. ◆ InheritsFrom() [2/2]. Bool_t TObject::InheritsFrom ; (; const TClass * ; cl); const. virtual . Returns kTRUE if object inherits from TClass cl. ; Reimplemented in TClass.; Definition at line 533 of file TObject.cxx. ◆ Inspect(). void TObject::Inspect ; (; ); const. virtual . Dump contents of this object in a graphics canvas. ; Same action as Dump but",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTObject.html:44326,Hash,Hash,44326,doc/v632/classTObject.html,https://root.cern,https://root.cern/doc/v632/classTObject.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"t *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented in TEnvRec, TNamed, TObjString, TParameter< AParamType >, TParameter< Long64_t >, TCollection, TPair, TASImagePlugin, TASPluginGS, TPad, TImagePlugin, TPave, TGObject, TGPicture, TIconBoxThumb, TClassDocInfo, THtml::TFileSysEntry, TStatistic, TDrawFeedback, TStatsFeedback, and RooLinkedList.; Definition at line 520 of file TObject.cxx. ◆ HasInconsistentHash(). Bool_t TObject::HasInconsistentHash ; (; ); const. inline . Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; missing call to RecursiveRemove in destructor).; Note: Since the consistency is only tested for during inserts, this routine will return true for object that have never been inserted whether or not they have a consistent setup. This has no negative side-effect as searching for the object with the right or wrong Hash will always yield a not-found answer (Since anyway no hash can be guaranteed unique, there is always a check) ; Definition at line 358 of file TObject.h. ◆ Info(). void TObject::Info ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue info message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at line 967 of file TObject.cxx. ◆ InheritsFrom() [1/2]. Bool_t TObject::InheritsFrom ; (; const char * ; classname); const. virtual . Returns kTRUE if object inherits from class ""classname"". ; Reimplemented in TClass.; Definition at line 530 of file TObject.cxx. ◆ InheritsFrom() [2/2]. Bool_t TObject::InheritsFrom ; (; const TClass * ; cl); const. virtual . Returns kTRUE if object inherits from TClass cl. ; Reimplemented in TClass.; Definition at line 538 of file TObject.cxx. ◆ Inspect(). void TObject::Inspect ; (; ); const. virtual . Dump contents of this object in a graphics canvas. ; Same action as Dump but",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObject.html:44051,Hash,Hash,44051,doc/master/classTObject.html,https://root.cern,https://root.cern/doc/master/classTObject.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"t *obj);  ; virtual void SetOption (const char *option);  ; virtual void SetStatus (Long64_t status);  ; virtual void SlaveBegin (TTree *);  ; virtual void SlaveTerminate ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Terminate ();  ; virtual int Version () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelector.html:5958,Hash,Hash,5958,doc/master/classTSelector.html,https://root.cern,https://root.cern/doc/master/classTSelector.html,2,['Hash'],['Hash']
Security,"t *obj)=0; TCollection::MakeIteratorvirtual TIterator * MakeIterator(Bool_t dir=kIterForward) const =0; TCollection::operator=void operator=(const TCollection &)=delete; TCollection::IsFolderBool_t IsFolder() const overrideReturns kTRUE in case object contains browsable objects (like containers or lists of other objects).Definition TCollection.h:189; TCollection::PrintCollectionEntryvirtual void PrintCollectionEntry(TObject *entry, Option_t *option, Int_t recurse) constPrint the collection entry.Definition TCollection.cxx:445; TCollection::IsArgNullBool_t IsArgNull(const char *where, const TObject *obj) constReturns true if object is a null pointer.Definition TCollection.cxx:372; TCollection::NotifyBool_t Notify() override'Notify' all objects in this collection.Definition TCollection.cxx:407; TCollection::kInitCapacity@ kInitCapacityDefinition TCollection.h:159; TCollection::kInitHashTableCapacity@ kInitHashTableCapacityDefinition TCollection.h:159; TCollection::HashULong_t Hash() const overrideReturn hash value for this object.Definition TCollection.h:186; TCollection::SetCurrentCollectionvoid SetCurrentCollection()Set this collection to be the globally accessible collection.Definition TCollection.cxx:688; TCollection::GetCurrentCollectionstatic TCollection * GetCurrentCollection()Return the globally accessible collection.Definition TCollection.cxx:680; TCollection::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRemove object from this collection and recursively remove the object from all other objects (and coll...Definition TCollection.cxx:574; TCollection::CapacityInt_t Capacity() constDefinition TCollection.h:167; TCollection::RemoveAllvoid RemoveAll()Definition TCollection.h:204; TCollection::UseRWLockvirtual bool UseRWLock(Bool_t enable=true)Set this collection to use a RW lock upon access, making it thread safe.Definition TCollection.cxx:761; TCollection::fgEmptyingGarbagestatic Bool_t fgEmptyingGarbageDefinition TCollection.h:136; TCollection::Asse",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8h_source.html:17958,Hash,Hash,17958,doc/master/TCollection_8h_source.html,https://root.cern,https://root.cern/doc/master/TCollection_8h_source.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHn.html:12143,Hash,Hash,12143,doc/master/classTHn.html,https://root.cern,https://root.cern/doc/master/classTHn.html,10,['Hash'],['Hash']
Security,"t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASImage.html:17151,Hash,Hash,17151,doc/master/classTASImage.html,https://root.cern,https://root.cern/doc/master/classTASImage.html,10,['Hash'],['Hash']
Security,"t * ep_getattro (CPPExcInstance *self, PyObject *attr);  ; static PyObject * ep_new (PyTypeObject *subtype, PyObject *args, PyObject *kwds);  ; static int ep_nonzero (CPPExcInstance *self);  ; static PyObject * ep_repr (CPPExcInstance *self);  ; static PyObject * ep_richcompare (CPPExcInstance *self, PyObject *other, int op);  ; static int ep_setattro (CPPExcInstance *self, PyObject *attr, PyObject *value);  ; static PyObject * ep_str (CPPExcInstance *self);  ; static int ep_traverse (CPPExcInstance *pyobj, visitproc visit, void *args);  ; static PyObject * eqneq_binop (CPPClass *klass, PyObject *self, PyObject *obj, int op);  ; CPYCPPYY_EXTERN const PyResult Eval (const std::string &expr);  ; CPYCPPYY_EXTERN bool Exec (const std::string &cmd);  ; CPYCPPYY_EXTERN void ExecScript (const std::string &name, const std::vector< std::string > &args);  ; static PyObject * GetAttrDirect (PyObject *pyclass, PyObject *pyname);  ; PyObject * GetScopeProxy (Cppyy::TCppScope_t);  ; uint64_t HashSignature (CPyCppyy_PyArgs_t args, size_t nargsf);  ; bool HaveImplicit (CallContext *ctxt);  ; static PyObject * im_call (PyObject *meth, PyObject *args, PyObject *kw);  ; static void im_dealloc (PyMethodObject *im);  ; static PyObject * im_descr_get (PyObject *meth, PyObject *obj, PyObject *pyclass);  ; CPYCPPYY_EXTERN bool Import (const std::string &name);  ; static void indexiter_dealloc (indexiterobject *ii);  ; static PyObject * indexiter_iternext (indexiterobject *ii);  ; static int indexiter_traverse (indexiterobject *ii, visitproc visit, void *arg);  ; bool InsertDispatcher (CPPScope *klass, PyObject *bases, PyObject *dct, std::ostringstream &err);  ; CPYCPPYY_EXTERN void * Instance_AsVoidPtr (PyObject *pyobject);  ; CPYCPPYY_EXTERN bool Instance_Check (PyObject *pyobject);  ; CPYCPPYY_EXTERN bool Instance_CheckExact (PyObject *pyobject);  ; PyObject * Instance_FromVoidPtr (void *addr, const char *classname, int python_owns);  ; CPYCPPYY_EXTERN PyObject * Instance_FromVoidPtr (vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceCPyCppyy.html:10771,Hash,HashSignature,10771,doc/master/namespaceCPyCppyy.html,https://root.cern,https://root.cern/doc/master/namespaceCPyCppyy.html,1,['Hash'],['HashSignature']
Security,"t << "" rule->fTarget = \"""" << (*it)[""target""];; 802 output << ""\"";"" << std::endl;; 803 }; 804 ; 805 if( it->find( ""source"" ) != it->end() ) {; 806 output << "" rule->fSource = \"""" << (*it)[""source""];; 807 output << ""\"";"" << std::endl;; 808 }; 809 ; 810 //--------------------------------------------------------------------; 811 // Deal with non mandatory keys; 812 ///////////////////////////////////////////////////////////////////////; 813 ; 814 if( it->find( ""funcname"" ) != it->end() ) {; 815 std::string code = (*it)[""code""];; 816 StrReplace( code, ""\n"", ""\\n"" );; 817 StrReplace( code, ""\"""", ""\\\"""");; 818 ; 819 output << "" rule->fFunctionPtr = (void *)TFunc2void( "";; 820 output << (*it)[""funcname""] << "");"" << std::endl;; 821 output << "" rule->fCode = \"""" << code;; 822 output << ""\"";"" << std::endl;; 823 }; 824 ; 825 if( it->find( ""version"" ) != it->end() ) {; 826 output << "" rule->fVersion = \"""" << (*it)[""version""];; 827 output << ""\"";"" << std::endl;; 828 }; 829 ; 830 if( it->find( ""checksum"" ) != it->end() ) {; 831 output << "" rule->fChecksum = \"""" << (*it)[""checksum""];; 832 output << ""\"";"" << std::endl;; 833 }; 834 ; 835 if( it->find( ""embed"" ) != it->end() ) {; 836 output << "" rule->fEmbed = "" << (*it)[""embed""];; 837 output << "";"" << std::endl;; 838 }; 839 ; 840 if( it->find( ""include"" ) != it->end() ) {; 841 output << "" rule->fInclude = \"""" << (*it)[""include""];; 842 output << ""\"";"" << std::endl;; 843 }; 844 ; 845 if( it->find( ""attributes"" ) != it->end() ) {; 846 output << "" rule->fAttributes = \"""" << (*it)[""attributes""];; 847 output << ""\"";"" << std::endl;; 848 }; 849 }; 850 }; 851 ; 852 /////////////////////////////////////////////////////////////////////////////; 853 /// Get the list of includes specified in the shema rules; 854 ; 855 void GetRuleIncludes( std::list<std::string> &result ); 856 {; 857 std::list<std::string> tmp;; 858 std::list<SchemaRuleMap_t>::iterator rule;; 859 SchemaRuleMap_t::iterator attr;; 860 SchemaRuleClassMap_t::iterator it;; 861 ; 862 /",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html:31262,checksum,checksum,31262,doc/master/RConversionRuleParser_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html,2,['checksum'],['checksum']
Security,"t >::InitializeCuda. inlineprivate . Initializes all shared devices resource and makes sure that a sufficient number of curand states are allocated on the device and initialized as well as that the one-vector for the summation over columns has the right size. ; Definition at line 103 of file CudaMatrix.cu. ◆ InitializeCurandStates(). template<typename AFloat > . void TMVA::DNN::TCudaMatrix< AFloat >::InitializeCurandStates. private . Definition at line 140 of file CudaMatrix.cu. ◆ operator TMatrixT(). template<typename AFloat > . TMVA::DNN::TCudaMatrix< AFloat >::operator TMatrixT. Convert cuda matrix to Root TMatrix. ; Performs synchronous data transfer. ; Definition at line 150 of file CudaMatrix.cu. ◆ operator()(). template<typename AFloat > . TCudaDeviceReference< AFloat > TMVA::DNN::TCudaMatrix< AFloat >::operator() ; (; size_t ; i, . size_t ; j . ); const. Access to elements of device matrices provided through TCudaDeviceReference class. ; Note that access is synchronous end enforces device synchronization on all streams. Only used for testing. ; Definition at line 310 of file CudaMatrix.h. ◆ operator=() [1/2]. template<typename AFloat > . TCudaMatrix & TMVA::DNN::TCudaMatrix< AFloat >::operator= ; (; const TCudaMatrix< AFloat > & ; ). default . ◆ operator=() [2/2]. template<typename AFloat > . TCudaMatrix & TMVA::DNN::TCudaMatrix< AFloat >::operator= ; (; TCudaMatrix< AFloat > && ; ). default . ◆ Print(). template<typename AFloat > . void TMVA::DNN::TCudaMatrix< AFloat >::Print ; (; ); const. inline . Definition at line 174 of file CudaMatrix.h. ◆ ResetDeviceReturn(). template<typename AFloat > . void TMVA::DNN::TCudaMatrix< AFloat >::ResetDeviceReturn ; (; AFloat ; value = 0.0). inlinestatic . Set the return buffer on the device to the specified value. ; This is required for example for reductions in order to initialize the accumulator. ; Definition at line 293 of file CudaMatrix.h. ◆ SetComputeStream(). template<typename AFloat > . void TMVA::DNN::TCudaMatr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCudaMatrix.html:8949,access,access,8949,doc/master/classTMVA_1_1DNN_1_1TCudaMatrix.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCudaMatrix.html,1,['access'],['access']
Security,"t DoExit(); exit->Connect(""Clicked()"",""MyMainFrame"",this,""DoExit()"");; ...; }; Here is an abstract view of the signal/slots connections in example.C:. To benefit from this mechanism your classes must inherit from TQObject or otherwise the class definition must start with RQ_OBJECT(""ClassName"")macro. This macro allows the signals/slots communication mechanism to be applied between compiled and interpreted classes in an interactive ROOT session without having the class derive from TQObject. Every signal method declaration is followed by a comment ""*SIGNAL*"". Only instances of a class that defines a signal or instances of its subclasses can emit the signal. The ROOT implementation of a popular example presenting signals and slots is the next. Let’s have a minimal class declaration:; class MyClass {; private:; Int_t fValue;; public:; MyClass() { fValue=0; }; Int_t GetValue() const { return fValue; }; void SetValue(Int_t);; };; It will become the following as interpreted:; class MyClass {; RQ_OBJECT(""MyClass""); private:; Int_t fValue;; public:; MyClass() { fValue=0; }; Int_t GetValue() const { return fValue; }; void SetValue(Int_t); // *SIGNAL*; };; Both class declarations have the same data member and public methods to access the value. By placing the RQ_OBJECT(""MyClass"") macro inside the MyClass body (MyClass is not inherited from TQObject) we allow this class to use the signal/slot communication. Any instance of this class can tell the outside world that the state of its data member has changed by emitting a signal SetValue(Int_t). A possible implementation of MyClass::SetValue() can be:; void MyClass::SetValue(Int_t v) {; if (v != fValue) {; fValue = v;; Emit(""SetValue(Int_t)"",v);; }; }; The line Emit(""SetValue(Int_t)"",v) activates the signal SetValue(Int_t) with argument v. You can use any of the methods TQObject::Emit(""full_method_name"",arguments) to emit a signal. We create two instances of MyClass and connect them together:; MyClass *objA = new MyClass();; MyClass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1166394,access,access,1166394,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['access'],['access']
Security,"t Double_t*GetBinMinEdges(UInt_t bin) const; pair<const Double_t*,const Double_t*>GetBinsEdges() const; const Double_t*GetBinsMaxEdges() const; const Double_t*GetBinsMinEdges() const; Double_tGetBinVolume(UInt_t bin) const; const Double_t*GetBinWidth(UInt_t bin) const; Double_tGetDataMax(UInt_t dim) const; Double_tGetDataMin(UInt_t dim) const; UInt_tGetDim() const; const Double_t*GetDimData(UInt_t dim) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; UInt_tGetNBins() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const Double_t*GetOneDimBinEdges() const; virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; TKDTreeID*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TKDTreeBinning.html:4085,Hash,Hash,4085,root/html528/TKDTreeBinning.html,https://root.cern,https://root.cern/root/html528/TKDTreeBinning.html,1,['Hash'],['Hash']
Security,"t Double_t*GetBinMinEdges(UInt_t bin) const; pair<const Double_t*,const Double_t*>GetBinsEdges() const; const Double_t*GetBinsMaxEdges() const; const Double_t*GetBinsMinEdges() const; Double_tGetBinVolume(UInt_t bin) const; const Double_t*GetBinWidth(UInt_t bin) const; Double_tGetDataMax(UInt_t dim) const; Double_tGetDataMin(UInt_t dim) const; UInt_tGetDim() const; const Double_t*GetDimData(UInt_t dim) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; UInt_tGetNBins() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const Double_t*GetOneDimBinEdges() const; virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; TKDTreeID*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TKDTreeBinning.html:4114,Hash,Hash,4114,root/html530/TKDTreeBinning.html,https://root.cern,https://root.cern/root/html530/TKDTreeBinning.html,3,['Hash'],['Hash']
Security,"t Double_t*GetBinMinEdges(UInt_t bin) const; pair<const Double_t*,const Double_t*>GetBinsEdges() const; const Double_t*GetBinsMaxEdges() const; const Double_t*GetBinsMinEdges() const; Double_tGetBinVolume(UInt_t bin) const; const Double_t*GetBinWidth(UInt_t bin) const; Double_tGetDataMax(UInt_t dim) const; Double_tGetDataMin(UInt_t dim) const; UInt_tGetDim() const; const Double_t*GetDimData(UInt_t dim) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; UInt_tGetNBins() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const Double_t*GetOneDimBinEdges() const; virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; TKDTreeID*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TKDTreeBinning.html:4043,Hash,Hash,4043,root/html602/TKDTreeBinning.html,https://root.cern,https://root.cern/root/html602/TKDTreeBinning.html,2,['Hash'],['Hash']
Security,"t InheritsFrom(const char *cl) const overrideReturn kTRUE if this class inherits from a class with name ""classname"".Definition TClass.cxx:4941; TCollectionCollection abstract base class.Definition TCollection.h:65; TCollection::Removevirtual TObject * Remove(TObject *obj)=0; TCollection::MakeIteratorvirtual TIterator * MakeIterator(Bool_t dir=kIterForward) const =0; TCollection::PrintCollectionEntryvirtual void PrintCollectionEntry(TObject *entry, Option_t *option, Int_t recurse) constPrint the collection entry.Definition TCollection.cxx:445; TCollection::Drawvoid Draw(Option_t *option="""") overrideDraw all objects in this collection.Definition TCollection.cxx:284; TCollection::IsArgNullBool_t IsArgNull(const char *where, const TObject *obj) constReturns true if object is a null pointer.Definition TCollection.cxx:372; TCollection::NotifyBool_t Notify() override'Notify' all objects in this collection.Definition TCollection.cxx:407; TCollection::SetCurrentCollectionvoid SetCurrentCollection()Set this collection to be the globally accessible collection.Definition TCollection.cxx:688; TCollection::GetCurrentCollectionstatic TCollection * GetCurrentCollection()Return the globally accessible collection.Definition TCollection.cxx:680; TCollection::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRemove object from this collection and recursively remove the object from all other objects (and coll...Definition TCollection.cxx:574; TCollection::CapacityInt_t Capacity() constDefinition TCollection.h:167; TCollection::RemoveAllvoid RemoveAll()Definition TCollection.h:204; TCollection::UseRWLockvirtual bool UseRWLock(Bool_t enable=true)Set this collection to use a RW lock upon access, making it thread safe.Definition TCollection.cxx:761; TCollection::fgEmptyingGarbagestatic Bool_t fgEmptyingGarbageDefinition TCollection.h:136; TCollection::AssertClassBool_t AssertClass(TClass *cl) constMake sure all objects in this collection inherit from class cl.Definition TCollection.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8cxx_source.html:30788,access,accessible,30788,doc/master/TCollection_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCollection_8cxx_source.html,1,['access'],['accessible']
Security,"t MinimumState&, double, const MnUserTransformation&); construct from internal parameters (after minimization). ~MnUserParameterState(); {}. MnUserParameterState(const MnUserParameterState& state); {}. MnUserParameterState& operator=(const ROOT::Minuit2::MnUserParameterState& state). const MnGlobalCorrelationCoeff& GlobalCC() const; {return fGlobalCC;}. const std::vector<double>& IntParameters() const; Minuit internal representation. {return fIntParameters;}. const MnUserCovariance& IntCovariance() const; {return fIntCovariance;}. const MnUserTransformation& Trafo() const; transformation internal <-> external. {return fParameters.Trafo();}. bool IsValid() const; {return fValid;}. bool HasCovariance() const; {return fCovarianceValid;}. bool HasGlobalCC() const; {return fGCCValid;}. double Fval() const; {return fFVal;}. double Edm() const; {return fEDM;}. unsigned int NFcn() const; {return fNFcn;}. const std::vector<ROOT::Minuit2::MinuitParameter>& MinuitParameters() const; facade: forward interface of MnUserParameters and MnUserTransformation ; access to parameters (row-wise). std::vector<double> Params() const; access to parameters and errors in column-wise representation. std::vector<double> Errors() const. void Add(const string& name, double val, double err); add free Parameter. void Add(const string& name, double val, double err, double , double ); add limited Parameter. void Add(const string& , double ); add const Parameter. void Fix(unsigned int); interaction via external number of Parameter. void Release(unsigned int). void SetValue(unsigned int, double). void SetError(unsigned int, double). void SetLimits(unsigned int, double, double). void SetUpperLimit(unsigned int, double). void SetLowerLimit(unsigned int, double). void RemoveLimits(unsigned int). double Value(unsigned int). double Error(unsigned int). void Fix(const std::string &); interaction via Name of Parameter. void Release(const std::string &). void SetValue(const std::string &, double). void SetErro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__MnUserParameterState.html:5541,access,access,5541,root/html526/ROOT__Minuit2__MnUserParameterState.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__MnUserParameterState.html,1,['access'],['access']
Security,"t ROOT::Minuit2::MnUserParameterState& state). const MnGlobalCorrelationCoeff& GlobalCC() const; {return fGlobalCC;}. MnUserCovariance Hessian() const; hessian (inverse of covariance matrix). const std::vector<double>& IntParameters() const; Minuit internal representation. {return fIntParameters;}. const MnUserCovariance& IntCovariance() const; {return fIntCovariance;}. int CovarianceStatus() const; covariance matrix status (0 = not valid, 1 approximate, 2, full but made pos def, 3 accurate and not pos def. { return fCovStatus; }. const MnUserTransformation& Trafo() const; transformation internal <-> external. {return fParameters.Trafo();}. bool IsValid() const; {return fValid;}. bool HasCovariance() const; {return fCovarianceValid;}. bool HasGlobalCC() const; {return fGCCValid;}. double Fval() const; {return fFVal;}. double Edm() const; {return fEDM;}. unsigned int NFcn() const; {return fNFcn;}. const std::vector<ROOT::Minuit2::MinuitParameter>& MinuitParameters() const; facade: forward interface of MnUserParameters and MnUserTransformation ; access to parameters (row-wise). std::vector<double> Params() const; access to parameters and errors in column-wise representation. std::vector<double> Errors() const. void Add(const string& name, double val, double err); add free Parameter. void Add(const string& name, double val, double err, double , double ); add limited Parameter. void Add(const string& , double ); add const Parameter. void Fix(unsigned int ); interaction via external number of Parameter. void Release(unsigned int ). void RemoveLimits(unsigned int ). void SetValue(unsigned int , double ). void SetError(unsigned int , double ). void SetLimits(unsigned int , double , double ). void SetUpperLimit(unsigned int , double ). void SetLowerLimit(unsigned int , double ). void SetName(unsigned int iext, const string& name); { fParameters.SetName(iext,name); }. double Value(unsigned int ) const. double Error(unsigned int ) const. void Fix(const string& ); interaction v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__MnUserParameterState.html:6004,access,access,6004,root/html534/ROOT__Minuit2__MnUserParameterState.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__MnUserParameterState.html,3,['access'],['access']
Security,"t ROOT::Minuit2::MnUserParameterState& state). const MnGlobalCorrelationCoeff& GlobalCC() const; {return fGlobalCC;}. MnUserCovariance Hessian() const; hessian (inverse of covariance matrix). const std::vector<double>& IntParameters() const; Minuit internal representation. {return fIntParameters;}. const MnUserCovariance& IntCovariance() const; {return fIntCovariance;}. int CovarianceStatus() const; covariance matrix status (0 = not valid, 1 approximate, 2, full but made pos def, 3 accurate and not pos def. { return fCovStatus; }. const MnUserTransformation& Trafo() const; transformation internal <-> external. {return fParameters.Trafo();}. bool IsValid() const; {return fValid;}. bool HasCovariance() const; {return fCovarianceValid;}. bool HasGlobalCC() const; {return fGCCValid;}. double Fval() const; {return fFVal;}. double Edm() const; {return fEDM;}. unsigned int NFcn() const; {return fNFcn;}. const std::vector<ROOT::Minuit2::MinuitParameter>& MinuitParameters() const; facade: forward interface of MnUserParameters and MnUserTransformation ; access to parameters (row-wise). std::vector<double> Params() const; access to parameters and errors in column-wise representation. std::vector<double> Errors() const. void Add(const string& name, double val, double err); add free Parameter. void Add(const string& name, double val, double err, double , double ); add limited Parameter. void Add(const string& , double ); add const Parameter. void Fix(unsigned int ); interaction via external number of Parameter. void Release(unsigned int ). void SetValue(unsigned int , double ). void SetError(unsigned int , double ). void SetLimits(unsigned int , double , double ). void SetUpperLimit(unsigned int , double ). void SetLowerLimit(unsigned int , double ). void RemoveLimits(unsigned int ). double Value(unsigned int ) const. double Error(unsigned int ) const. void Fix(const string& ); interaction via Name of Parameter. void Release(const string& ). void SetValue(const string& , double )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Minuit2__MnUserParameterState.html:5952,access,access,5952,root/html532/ROOT__Minuit2__MnUserParameterState.html,https://root.cern,https://root.cern/root/html532/ROOT__Minuit2__MnUserParameterState.html,1,['access'],['access']
Security,"t RooArgSet &vars);  Install the given set of observables are reference normalization variables for this frame. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:14046,Hash,Hash,14046,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"t TBuffer3D& buffer, const TGLLogicalShape& logical) const; virtual voidTGLScene::DestroyPhysicalInternal(TGLScene::PhysicalShapeMapIt_t pit); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidTGLScene::ReleaseGLCtxIdentity(); Int_tValidateObjectBuffer(const TBuffer3D& buffer, Bool_t includeRaw) const. private:. TGLScenePad(const TGLScenePad&); TGLScenePad&operator=(const TGLScenePad&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum TGLLockable::ELock { kUnlocked; kDrawLock; kSelectLock; kModifyLock; };. protected:. Int_tfAcceptedPhysicals; Bool_tTGLSceneBase::fAutoDestruct; TGLBoundingBoxTGLSceneBase::fBoundingBoxbounding box for scene (axis aligned) - lazy update - use BoundingBox() to access; Bool_tTGLSceneBase::fBoundingBoxValidbounding box valid?; UInt_tfCSLevel; vector<CSPart_t>fCSTokens; TGLClip*TGLSceneBase::fClipScene clipping-plane.; TGLFaceSet*fComposite! Paritally created composite; Bool_tTGLSceneBase::fDoClipCheckPerform global clip-plane-check in UpdateSceneInfo(); Bool_tTGLSceneBase::fDoFrustumCheckPerform global frustum-check in UpdateSceneInfo(); TGLContextIdentity*TGLScene::fGLCtxIdentity; Bool_tTGLScene::fInSmartRefresh!; Bool_tfInternalPIDs! using internal physical IDs; Short_tTGLSceneBase::fLODScene-lod.; Float_tTGLScene::fLastLineWidthScale; UInt_tfLastPID! last physical ID that was processed in AddObject(); Float_tTGLScene::fLastPointSizeScale; TGLLockable::ELockTGLLockable::fLockLock state.; map<TObject*,TGLLogicalShape*>TGLScene::fLogicalShapes!; UInt_tTGLSceneBase::fMinorStampCounter increased on minimal update.; TStringTGLSceneBase::fNameObject identifier.; UInt_tfNextInternalPID! next internal physical ID (from 1 - 0 reserved); Floa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLScenePad.html:11226,access,access,11226,root/html528/TGLScenePad.html,https://root.cern,https://root.cern/root/html528/TGLScenePad.html,4,['access'],['access']
Security,"t TEveException& eh) const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveStraightLineSet::GetRnrLines(); virtual Bool_tTEveStraightLineSet::GetRnrMarkers(); virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; Double_tGetScale() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveScalableStraightLineSet.html:12309,Hash,Hash,12309,root/html530/TEveScalableStraightLineSet.html,https://root.cern,https://root.cern/root/html530/TEveScalableStraightLineSet.html,5,['Hash'],['Hash']
Security,"t TExMap::GetValue ; (; ULong64_t ; hash, . Long64_t ; key . ). Return the value belonging to specified key and hash value. ; If key not found return 0. ; Definition at line 174 of file TExMap.cxx. ◆ GetValue() [3/3]. Long64_t TExMap::GetValue ; (; ULong64_t ; hash, . Long64_t ; key, . UInt_t & ; slot . ). Return the value belonging to specified key and hash value. ; If key not found return 0. In 'slot', return the index of the slot used or the first empty slot. (to be used with AddAt). ; Definition at line 197 of file TExMap.cxx. ◆ HighWaterMark(). Bool_t TExMap::HighWaterMark ; (; ). inlineprivate . Definition at line 54 of file TExMap.h. ◆ IsA(). TClass * TExMap::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 81 of file TExMap.h. ◆ operator()() [1/2]. Long64_t & TExMap::operator() ; (; Long64_t ; key). inline . Definition at line 79 of file TExMap.h. ◆ operator()() [2/2]. Long64_t & TExMap::operator() ; (; ULong64_t ; hash, . Long64_t ; key . ). Return a reference to the value belonging to the key with the specified hash value. ; If the key does not exist it will be added. NOTE: the reference will be invalidated an Expand() triggered by an Add() or another operator() call. ; Definition at line 139 of file TExMap.cxx. ◆ operator=(). TExMap & TExMap::operator= ; (; const TExMap & ; map). Assignment operator. ; Definition at line 64 of file TExMap.cxx. ◆ Remove() [1/2]. void TExMap::Remove ; (; Long64_t ; key). inline . Definition at line 76 of file TExMap.h. ◆ Remove() [2/2]. void TExMap::Remove ; (; ULong64_t ; hash, . Long64_t ; key . ). Remove entry with specified key from the TExMap. ; Definition at line 217 of file TExMap.cxx. ◆ Streamer(). void TExMap::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from TObject.; Definition at line 306 of file TExMap.cxx. ◆ StreamerNVirtual(). void TExMap::Stream",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTExMap.html:15951,hash,hash,15951,doc/master/classTExMap.html,https://root.cern,https://root.cern/doc/master/classTExMap.html,1,['hash'],['hash']
Security,"t TFTP & ; ). privatedelete . ◆ TFTP() [3/3]. TFTP::TFTP ; (; const char * ; url, . Int_t ; par = 1, . Int_t ; wsize = kDfltWindowSize, . TSocket * ; sock = nullptr . ). Open connection to host specified by the url using par parallel sockets. ; The url has the form: [root[s,k]://]host[:port]. If port is not specified the default rootd port (1094) will be used. Using wsize one can specify the tcp window size. Normally this is not needed when using parallel sockets. An existing connection (TSocket *sock) can also be used to establish the FTP session. ; Definition at line 74 of file TFTP.cxx. ◆ ~TFTP(). TFTP::~TFTP ; (; ). virtual . TFTP dtor. Send close message and close socket. ; Definition at line 149 of file TFTP.cxx. Member Function Documentation. ◆ AccessPathName(). Bool_t TFTP::AccessPathName ; (; const char * ; path, . EAccessMode ; mode = kFileExists, . Bool_t ; print = kFALSE . ). Returns kFALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Definition at line 1111 of file TFTP.cxx. ◆ Ascii(). void TFTP::Ascii ; (; ). inline . Definition at line 107 of file TFTP.h. ◆ ascii(). void TFTP::ascii ; (; ). inline . Definition at line 123 of file TFTP.h. ◆ bin(). void TFTP::bin ; (; ). inline . Definition at line 122 of file TFTP.h. ◆ Binary(). void TFTP::Binary ; (; ). inline . Definition at line 106 of file TFTP.h. ◆ bye(). void TFTP::bye ; (; ). inline . Definition at line 121 of file TFTP.h. ◆ cd(). void TFTP::cd ; (; const char * ; dir); const. inline . Definition at line 113 of file TFTP.h. ◆ ChangeDirectory(). Int_t TFTP::ChangeDirectory ; (; const char * ; dir); const. Change the remote directory. ; If the remote directory contains a .message file and it is < 1024 characters then the contents is echoed back. Returns 0 in case of success and -1 in case of failure. ; Definition at line 628 of file TFTP.cxx. ◆ ChangePermission(). Int_t TFTP::Change",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFTP.html:14797,access,access,14797,doc/master/classTFTP.html,https://root.cern,https://root.cern/doc/master/classTFTP.html,1,['access'],['access']
Security,"t THashTable::GetCheckedHashValue ; (; TObject * ; obj); const. inlineprivate . Definition at line 93 of file THashTable.h. ◆ GetHashValue() [1/3]. Int_t THashTable::GetHashValue ; (; const char * ; str); const. inlineprivate . Definition at line 48 of file THashTable.h. ◆ GetHashValue() [2/3]. Int_t THashTable::GetHashValue ; (; const TObject * ; obj); const. inlineprivate . Definition at line 99 of file THashTable.h. ◆ GetHashValue() [3/3]. Int_t THashTable::GetHashValue ; (; TString & ; s); const. inlineprivate . Definition at line 47 of file THashTable.h. ◆ GetListForObject() [1/2]. const TList * THashTable::GetListForObject ; (; const char * ; name); const. Return the TList corresponding to object's name based hash value. ; One can iterate this list ""manually"" to find, e.g. objects with the same name. ; Definition at line 268 of file THashTable.cxx. ◆ GetListForObject() [2/2]. const TList * THashTable::GetListForObject ; (; const TObject * ; obj); const. Return the TList corresponding to object's hash value. ; One can iterate this list ""manually"" to find, e.g. identical objects. ; Definition at line 282 of file THashTable.cxx. ◆ GetObjectRef(). TObject ** THashTable::GetObjectRef ; (; const TObject * ; obj); const. overridevirtual . Return address of pointer to obj. ; Implements TCollection.; Definition at line 296 of file THashTable.cxx. ◆ GetRehashLevel(). Int_t THashTable::GetRehashLevel ; (; ); const. inline . Definition at line 72 of file THashTable.h. ◆ GetSize(). Int_t THashTable::GetSize ; (; ); const. inlineoverridevirtual . Return the capacity of the collection, i.e. ; the current total amount of space that has been allocated so far. Same as Capacity. Use GetEntries to get the number of elements currently in the collection. ; Reimplemented from TCollection.; Definition at line 73 of file THashTable.h. ◆ IsA(). TClass * THashTable::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TCollection.; Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHashTable.html:21964,hash,hash,21964,doc/master/classTHashTable.html,https://root.cern,https://root.cern/doc/master/classTHashTable.html,1,['hash'],['hash']
Security,"t TString &name, Bool_t direction=kTRUE, Bool_t caseSensitive=kTRUE, Bool_t subString=kFALSE);  ; TGCanvas * GetCanvas () const;  ; virtual TGHScrollBar * GetHScrollbar () const;  returns pointer to hor. scroll bar ;  ; virtual TGFrame * GetLastActive () const;  ; const TGWindow * GetMessageWindow () const;  ; virtual const TGFrame * GetNextSelected (void **current);  Return the next selected item. ;  ; const TGPicture * GetObjPicture (TGFrame *f);  Retrieve icons associated with class ""name"". ;  ; virtual TGDimension GetPageDimension () const;  Returns page dimension. ;  ; virtual TGPosition GetPagePosition () const;  Returns page position. ;  ; virtual TGVScrollBar * GetVScrollbar () const;  returns pointer to vert. scroll bar ;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button event in container. ;  ; Bool_t HandleDNDFinished () override;  ; Bool_t HandleDoubleClick (Event_t *event) override;  Handle double click mouse event. ;  ; Bool_t HandleExpose (Event_t *event) override;  Handle expose events. Do not use double buffer. ;  ; Bool_t HandleKey (Event_t *event) override;  The key press event handler converts a key press to some line editor action. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion events. ;  ; virtual void Home (Bool_t select=kFALSE);  Move to upper-left corner of container. ;  ; virtual void InvertSelection ();  Invert the selection, all selected items become unselected and vice versa. ;  ; TClass * IsA () const override;  ; virtual void KeyPressed (TGFrame *, UInt_t keysym, UInt_t mask);  Signal emitted when keyboard key pressed. ;  ; void Layout () override;  Layout container entries. ;  ; virtual void LineDown (Bool_t select=kFALSE);  Move one line down. ;  ; virtual void LineLeft (Bool_t select=kFALSE);  Move current position one column left. ;  ; virtual void LineRight (Bool_t select=kFALSE);  Move current position one column right. ;  ; virtual void LineUp (Bool_t select=kFALSE);  Make current po",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGContainer.html:4065,expose,expose,4065,doc/master/classTGContainer.html,https://root.cern,https://root.cern/doc/master/classTGContainer.html,1,['expose'],['expose']
Security,"t TString &option);  . Public Member Functions; IMethod * Create (const std::string &name, const TString &job, const TString &title, DataSetInfo &dsi, const TString &option);  creates the method if needed based on the method name using the creator function the factory has stored ;  ; IMethod * Create (const std::string &name, DataSetInfo &dsi, const TString &weightfile="""");  creates the method if needed based on the method name using the creator function the factory has stored ;  ; const std::vector< std::string > List () const;  returns a vector of the method type names of registered methods ;  ; void Print () const;  prints the registered method type names ;  ; Bool_t Register (const std::string &name, Creator creator);  registers a classifier creator function under the method type name ;  ; Bool_t Unregister (const std::string &name);  unregisters a classifier type name ;  . Static Public Member Functions; static void DestroyInstance ();  destroy the singleton instance ;  ; static ClassifierFactory & Instance ();  access to the ClassifierFactory singleton creates the instance if needed ;  . Private Types; typedef std::map< std::string, Creator > CallMap;  . Private Member Functions;  ClassifierFactory ();  ;  ClassifierFactory (const ClassifierFactory &);  ;  ~ClassifierFactory ();  ; const ClassifierFactory & operator= (const ClassifierFactory &);  . Private Attributes; CallMap fCalls;  . Static Private Attributes; static ClassifierFactory * fgInstance = 0;  Initialize static singleton pointer. ;  . #include <TMVA/ClassifierFactory.h>; Member Typedef Documentation. ◆ CallMap. typedef std::map<std::string, Creator> TMVA::ClassifierFactory::CallMap. private . Definition at line 98 of file ClassifierFactory.h. ◆ Creator. typedef IMethod *(* TMVA::ClassifierFactory::Creator) (const TString &job, const TString &title, DataSetInfo &dsi, const TString &option). Definition at line 60 of file ClassifierFactory.h. Constructor & Destructor Documentation. ◆ ClassifierFactor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1ClassifierFactory.html:1614,access,access,1614,doc/master/classTMVA_1_1ClassifierFactory.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1ClassifierFactory.html,1,['access'],['access']
Security,"t TString TUri::GetRelativePart ; (; ); const. relative-part = ""//"" authority path-abempty ; / path-absolute; / path-noscheme; / path-empty. Definition at line 676 of file TUri.cxx. ◆ GetScheme(). const TString TUri::GetScheme ; (; ); const. inline . Definition at line 80 of file TUri.h. ◆ GetUri(). const TString TUri::GetUri ; (; ); const. Returns the whole URI - an implementation of chapter 5.3 component recomposition. ; The result URI is composed out of the five basic parts. URI = scheme "":"" hier-part [ ""?"" query ] [ ""#"" fragment ]; hier-part = ""//"" authority path-abempty; / path-absolute; / path-rootless; / path-empty. Definition at line 140 of file TUri.cxx. ◆ GetUserInfo(). const TString TUri::GetUserInfo ; (; ); const. inline . Definition at line 84 of file TUri.h. ◆ HasAuthority(). Bool_t TUri::HasAuthority ; (; ); const. inline . Definition at line 93 of file TUri.h. ◆ HasFragment(). Bool_t TUri::HasFragment ; (; ); const. inline . Definition at line 99 of file TUri.h. ◆ HasHierPart(). Bool_t TUri::HasHierPart ; (; ); const. inline . Definition at line 92 of file TUri.h. ◆ HasHost(). Bool_t TUri::HasHost ; (; ); const. inline . Definition at line 95 of file TUri.h. ◆ HasPath(). Bool_t TUri::HasPath ; (; ); const. inline . Definition at line 97 of file TUri.h. ◆ HasPort(). Bool_t TUri::HasPort ; (; ); const. inline . Definition at line 96 of file TUri.h. ◆ HasQuery(). Bool_t TUri::HasQuery ; (; ); const. inline . Definition at line 98 of file TUri.h. ◆ HasRelativePart(). Bool_t TUri::HasRelativePart ; (; ); const. inline . Definition at line 100 of file TUri.h. ◆ HasScheme(). Bool_t TUri::HasScheme ; (; ); const. inline . Definition at line 91 of file TUri.h. ◆ HasUserInfo(). Bool_t TUri::HasUserInfo ; (; ); const. inline . Definition at line 94 of file TUri.h. ◆ IsA(). TClass * TUri::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 157 of file TUri.h. ◆ IsAbsolute(). Bool_t T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUri.html:19726,HasH,HasHierPart,19726,doc/master/classTUri.html,https://root.cern,https://root.cern/doc/master/classTUri.html,1,['HasH'],['HasHierPart']
Security,"t a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation Reference Guide. The Reference Guide is available for all major ROOT releases, and for the current HEAD of the git master:. HEAD of the git master - browse; 6.20 - browse | download; 6.18 - browse | download; 6.16 - browse | download; 6.14 - browse | download; 6.12 - browse | download; 6.10 - browse | download; 6.08 - browse | download; 6.06 - browse | download; 6.04 - browse | download; 6.02 - browse | download; 5.34 - browse | download; 5.32 - browse | download; 5.30 - browse | download; 5.28 - browse | download; 5.26 - browse | download; 5.24 - browse | download. Additionally, the source code is accessible via:. Browsing the Git repository using gitweb; Github. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All rights reserved. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/guides/reference-guide.html:2472,access,accessible,2472,d/guides/reference-guide.html,https://root.cern,https://root.cern/d/guides/reference-guide.html,1,['access'],['accessible']
Security,"t affect the value of fClassInfo, fCanLoadClassInfo is set to false. ; Definition at line 5824 of file TClass.cxx. ◆ ls(). void TClass::ls ; (; Option_t * ; options = """"); const. overridevirtual . The ls function lists the contents of a class on stdout. ; Ls output is typically much less verbose then Dump(). If options contains 'streamerinfo', run ls on the list of streamerInfos and the list of conversion streamerInfos. ; Reimplemented from TObject.; Definition at line 4258 of file TClass.cxx. ◆ MakeCustomMenuList(). void TClass::MakeCustomMenuList ; (; ). Makes a customizable version of the popup menu list, i.e. ; makes a list of TClassMenuItem objects of methods accessible by context menu. The standard (and different) way consists in having just one element in this list, corresponding to the whole standard list. Once the customizable version is done, one can remove or add elements. ; Definition at line 4283 of file TClass.cxx. ◆ MatchLegacyCheckSum(). Bool_t TClass::MatchLegacyCheckSum ; (; UInt_t ; checksum); const. Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ; Definition at line 6494 of file TClass.cxx. ◆ Move(). void TClass::Move ; (; void * ; arenaFrom, . void * ; arenaTo . ); const. Register the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ; Definition at line 4327 of file TClass.cxx. ◆ MoveAddressInRepository(). void TClass::MoveAddressInRepository ; (; const char * ; where, . void * ; oldadd, . void * ; newadd, . const TClass * ; what . ); const. private . Definition at line 337 of file TClass.cxx. ◆ New() [1/2]. void * TClass::New ; (; ENewType ; defConstructor = kClassNew, . Bool_t ; quiet = kFALSE . ); const. Return a pointer to a newly allocated object of this class. ; The class must have a default constructor. For meaning of defConstructor, see TClass::IsCallingNew().; If quiet is true, do no issue a message via E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:104371,checksum,checksum,104371,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,1,['checksum'],['checksum']
Security,"t affect the value of fClassInfo, fCanLoadClassInfo is set to false. ; Definition at line 5891 of file TClass.cxx. ◆ ls(). void TClass::ls ; (; Option_t * ; options = """"); const. overridevirtual . The ls function lists the contents of a class on stdout. ; Ls output is typically much less verbose then Dump(). If options contains 'streamerinfo', run ls on the list of streamerInfos and the list of conversion streamerInfos. ; Reimplemented from TObject.; Definition at line 4325 of file TClass.cxx. ◆ MakeCustomMenuList(). void TClass::MakeCustomMenuList ; (; ). Makes a customizable version of the popup menu list, i.e. ; makes a list of TClassMenuItem objects of methods accessible by context menu. The standard (and different) way consists in having just one element in this list, corresponding to the whole standard list. Once the customizable version is done, one can remove or add elements. ; Definition at line 4350 of file TClass.cxx. ◆ MatchLegacyCheckSum(). Bool_t TClass::MatchLegacyCheckSum ; (; UInt_t ; checksum); const. Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ; Definition at line 6561 of file TClass.cxx. ◆ Move(). void TClass::Move ; (; void * ; arenaFrom, . void * ; arenaTo . ); const. Register the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ; Definition at line 4394 of file TClass.cxx. ◆ MoveAddressInRepository(). void TClass::MoveAddressInRepository ; (; const char * ; where, . void * ; oldadd, . void * ; newadd, . const TClass * ; what . ); const. private . Definition at line 337 of file TClass.cxx. ◆ New() [1/2]. void * TClass::New ; (; ENewType ; defConstructor = kClassNew, . Bool_t ; quiet = kFALSE . ); const. Return a pointer to a newly allocated object of this class. ; The class must have a default constructor. For meaning of defConstructor, see TClass::IsCallingNew().; If quiet is true, do no issue a message via E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:104372,checksum,checksum,104372,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['checksum'],['checksum']
Security,"t as being in range. This overload requires a name lookup. Recommend to use the category index with RooCategory::isStateInRange(const char*, RooAbsCategory::value_type) const. ; Definition at line 414 of file RooCategory.cxx. ◆ isStateInRange() [2/2]. bool RooCategory::isStateInRange ; (; const char * ; rangeName, . RooAbsCategory::value_type ; stateIndex . ); const. Check if the state is in the given range. ; If no range is specified either as argument or if no range has been defined for this category (i.e., the default range is meant), all category states count as being in range. ; Definition at line 396 of file RooCategory.cxx. ◆ operator=(). RooCategory & RooCategory::operator= ; (; const RooCategory & ; ). delete . ◆ operator[](). RooAbsCategory::value_type & RooCategory::operator[] ; (; const std::string & ; stateName). Access a named state. ; If a state with this name doesn't exist yet, the state is assigned the next available positive integer. Parameters. [in]stateNameName of the state to be accessed. . ReturnsReference to the category index. If no state exists, it will be created on the fly. ; Definition at line 256 of file RooCategory.cxx. ◆ readFromStream(). bool RooCategory::readFromStream ; (; std::istream & ; is, . bool ; compact, . bool ; verbose = false . ). overridevirtual . Read object contents from given stream. ; If token is a decimal digit, try to find a corresponding state for it. If that succeeds, the state denoted by this index is used. Otherwise, interpret it as a label. ; Reimplemented from RooAbsCategory.; Definition at line 288 of file RooCategory.cxx. ◆ recomputeShape(). void RooCategory::recomputeShape ; (; ). inlineoverrideprotectedvirtual . This category's shape does not depend on others, and does not need recomputing. ; Implements RooAbsCategory.; Definition at line 124 of file RooCategory.h. ◆ setIndex() [1/3]. bool RooAbsCategoryLValue::setIndex ; (; const std::pair< std::string, value_type > & ; nameIdxPair, . bool ; printError = t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCategory.html:60833,access,accessed,60833,doc/master/classRooCategory.html,https://root.cern,https://root.cern/doc/master/classRooCategory.html,1,['access'],['accessed']
Security,"t bottom of BoundingBox to a value (resize in y direction on bottom) ;  ; virtual void SetNDC (Bool_t isNDC=kTRUE);  Set NDC mode on if isNDC = kTRUE, off otherwise. ;  ; virtual void SetX (Double_t x);  ; virtual void SetY (Double_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TMarker. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMarker.html:5055,Hash,Hash,5055,doc/master/classTMarker.html,https://root.cern,https://root.cern/doc/master/classTMarker.html,2,['Hash'],['Hash']
Security,"t char * TAuthenticate::GetAuthMethod ; (; Int_t ; idx). static . Static method returning the method corresponding to idx. ; Definition at line 1067 of file TAuthenticate.cxx. ◆ GetAuthMethodIdx(). Int_t TAuthenticate::GetAuthMethodIdx ; (; const char * ; meth). static . Static method returning the method index (which can be used to find the method in GetAuthMethod()). ; Returns -1 in case meth is not found. ; Definition at line 1082 of file TAuthenticate.cxx. ◆ GetAuthReUse(). Bool_t TAuthenticate::GetAuthReUse ; (; ). static . Static method returning the authentication reuse settings. ; Definition at line 1051 of file TAuthenticate.cxx. ◆ GetClientProtocol(). Int_t TAuthenticate::GetClientProtocol ; (; ). static . Static method returning supported client protocol. ; Definition at line 3889 of file TAuthenticate.cxx. ◆ GetDefaultDetails(). char * TAuthenticate::GetDefaultDetails ; (; Int_t ; method, . Int_t ; opt, . const char * ; usr . ). static . Determine default authentication details for method 'sec' and user 'usr'. ; Checks .rootrc family files. Returned string must be deleted by the user. ; Definition at line 2172 of file TAuthenticate.cxx. ◆ GetDefaultUser(). const char * TAuthenticate::GetDefaultUser ; (; ). static . Static method returning the default user information. ; Definition at line 1034 of file TAuthenticate.cxx. ◆ GetGlobalExpDate(). TDatime TAuthenticate::GetGlobalExpDate ; (; ). static . Static method returning default expiring date for new validity contexts. ; Definition at line 1026 of file TAuthenticate.cxx. ◆ GetGlobalPwHash(). Bool_t TAuthenticate::GetGlobalPwHash ; (; ). static . Static method returning the global password hash flag. ; Definition at line 1010 of file TAuthenticate.cxx. ◆ GetGlobalSRPPwd(). Bool_t TAuthenticate::GetGlobalSRPPwd ; (; ). static . Static method returning the global SRP password flag. ; Definition at line 1018 of file TAuthenticate.cxx. ◆ GetGlobalUser(). const char * TAuthenticate::GetGlobalUser ; (; ). stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAuthenticate.html:27275,authenticat,authentication,27275,doc/master/classTAuthenticate.html,https://root.cern,https://root.cern/doc/master/classTAuthenticate.html,1,['authenticat'],['authentication']
Security,"t char * TCling::DataMemberInfo_ValidArrayIndex ; (; DataMemberInfo_t * ; dminfo); const. finalvirtual . Reimplemented from TInterpreter.; Definition at line 8714 of file TCling.cxx. ◆ Declare(). bool TCling::Declare ; (; const char * ; code). finalvirtual . Declare code to the interpreter, without any of the interpreter actions that could trigger a re-interpretation of the code. ; I.e. make cling behave like a compiler: no dynamic lookup, no input wrapping for subsequent execution, no automatic provision of declarations but just a plain #include. Returns true on success, false on failure. ; Implements TInterpreter.; Definition at line 3098 of file TCling.cxx. ◆ DeepAutoLoadImpl(). Int_t TCling::DeepAutoLoadImpl ; (; const char * ; cls, . std::unordered_set< std::string > & ; visited, . bool ; nameIsNormalized . ). staticprivate . Definition at line 6204 of file TCling.cxx. ◆ DeleteGlobal(). Int_t TCling::DeleteGlobal ; (; void * ; obj). finalvirtual . Delete obj from Cling symbol table so it cannot be accessed anymore. ; Returns 1 in case of success and 0 in case object was not in table. ; Implements TInterpreter.; Definition at line 3783 of file TCling.cxx. ◆ DeleteVariable(). Int_t TCling::DeleteVariable ; (; const char * ; name). finalvirtual . Undeclare obj called name. ; Returns 1 in case of success, 0 for failure. ; Implements TInterpreter.; Definition at line 3798 of file TCling.cxx. ◆ DiagnoseIfInterpreterException(). bool TCling::DiagnoseIfInterpreterException ; (; const std::exception & ; e); const. finalvirtual . Implements TInterpreter.; Definition at line 2442 of file TCling.cxx. ◆ DisplayClass(). int TCling::DisplayClass ; (; FILE * ; fout, . const char * ; name, . int ; base, . int ; start . ); const. finalvirtual . Reimplemented from TInterpreter.; Definition at line 7410 of file TCling.cxx. ◆ DisplayIncludePath(). int TCling::DisplayIncludePath ; (; FILE * ; fout); const. finalvirtual . Interface to cling function. ; Reimplemented from TInterpreter.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:82200,access,accessed,82200,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,1,['access'],['accessed']
Security,"t char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; template<class T > ; static void assert_is_no_temporary (T &&);  . Protected Attributes; bool _allRRV = true;  All contents are RRV. ;  ; Storage_t _list;  Actual object storage. ;  ; TString _name;  Our name. ;  ; bool _ownCont = false;  Flag to identify a list that owns its contents. ;  ; TNamed * _structureTag {nullptr};  ! Structure tag ;  ; TNamed * _typedStructureTag {nullptr};  ! Typed structure tag ;  . Private Types; using HashAssistedFind = RooFit::Detail::HashAssistedFind;  . Private Member Functions; void insert (RooAbsArg *);  Insert an element into the owned collections. ;  ; bool replaceImpl (const RooAbsArg &var1, const RooAbsArg &var2);  . Static Private Member Functions; static void throwAddTypedException (TClass *klass, RooAbsArg *arg);  . Private Attributes; std::unique_ptr< HashAssistedFind > _hashAssistedFind;  ! ;  ; std::size_t _sizeThresholdForMapSearch = 100;  ! ;  ; const RooFit::UniqueId< RooAbsCollection > _uniqueId;  . Additional Inherited Members;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooAbsCollection.h>. Inheritance diagram for RooAbsCollection:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ const_iterator. using RooAbsCollection::const_iterator = Storage_t::const_iterator. Definition at line 68 of file RooAbsCollection.h. ◆ HashAssistedFind. using RooAbsCollection::HashAssistedFind = RooFit::Detail::HashAssistedFind. private . Definition at line 445 of file RooAbsCollection.h. ◆ LegacyIterator_t. using RooAbsCollection::LegacyIterator_t = TIteratorToSTLInterface<Storage_t>. protected . Definition at line 401 of file RooAbsCollection.h. ◆ Storage_t. using RooAbsCollection::Storage_t = std::vector<RooAbsArg*>. Definition at line 67 of file RooAbsCollection.h. Const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsCollection.html:25713,Hash,HashAssistedFind,25713,doc/v632/classRooAbsCollection.html,https://root.cern,https://root.cern/doc/v632/classRooAbsCollection.html,1,['Hash'],['HashAssistedFind']
Security,"t char *fsname);  ; void SetHtmlFileName (const char *name);  ; void SetImplFileName (const char *name);  ; void SetImplFileSysName (const char *fsname);  ; void SetModule (TModuleDocInfo *module);  ; void SetSelected (Bool_t sel=kTRUE);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on std",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassDocInfo.html:2466,Hash,Hash,2466,doc/master/classTClassDocInfo.html,https://root.cern,https://root.cern/doc/master/classTClassDocInfo.html,2,['Hash'],['Hash']
Security,"t char *histogramName, const char *histogramTitle=nullptr, const char *distributionName=nullptr, const char *projectionMode=nullptr, Bool_t useAxisBinning=kTRUE);  get covariance matrix including all contributions ;  ; TH1 * GetFoldedOutput (const char *histogramName, const char *histogramTitle=nullptr, const char *distributionName=nullptr, const char *projectionMode=nullptr, Bool_t useAxisBinning=kTRUE, Bool_t addBgr=kFALSE) const;  retreive unfolding result folded back as a new histogram ;  ; TH1 * GetInput (const char *histogramName, const char *histogramTitle=nullptr, const char *distributionName=nullptr, const char *projectionMode=nullptr, Bool_t useAxisBinning=kTRUE) const;  retreive input distribution in a new histogram ;  ; const TUnfoldBinning * GetInputBinning (const char *distributionName=nullptr) const;  locate a binning node for the input (measured) quantities ;  ; TH2 * GetL (const char *histogramName, const char *histogramTitle=nullptr, Bool_t useAxisBinning=kTRUE);  access matrix of regularisation conditions in a new histogram ;  ; TUnfoldBinning * GetLBinning (void) const;  return binning scheme for regularisation conditions (matrix L) ;  ; TH1 * GetLxMinusBias (const char *histogramName, const char *histogramTitle=nullptr);  get regularisation conditions multiplied by result vector minus bias L(x-biasScale*biasVector) ;  ; TH1 * GetOutput (const char *histogramName, const char *histogramTitle=nullptr, const char *distributionName=nullptr, const char *projectionMode=nullptr, Bool_t useAxisBinning=kTRUE) const;  retreive unfolding result as a new histogram ;  ; const TUnfoldBinning * GetOutputBinning (const char *distributionName=nullptr) const;  locate a binning node for the unfolded (truth level) quantities ;  ; TH2 * GetProbabilityMatrix (const char *histogramName, const char *histogramTitle=nullptr, Bool_t useAxisBinning=kTRUE) const;  get matrix of probabilities in a new histogram ;  ; TH2 * GetRhoIJtotal (const char *histogramName, const char *h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldDensity.html:11461,access,access,11461,doc/master/classTUnfoldDensity.html,https://root.cern,https://root.cern/doc/master/classTUnfoldDensity.html,1,['access'],['access']
Security,"t char *name, Int_t bufsize) final;  create XML key, which will store object in xml structures ;  ; void DrawMap (const char *=""*"", Option_t *="""") final;  Draw map of objects in this file. ;  ; void FillBuffer (char *&) final;  Encode file output buffer. ;  ; void Flush () final;  Synchronize a file's in-memory and on-disk states. ;  ; Long64_t GetEND () const final;  ; Int_t GetErrno () const final;  Method returning errno. ;  ; Int_t GetIOVersion () const;  ; Int_t GetNbytesFree () const final;  ; Int_t GetNbytesInfo () const final;  ; Int_t GetNfree () const final;  ; Long64_t GetSeekFree () const final;  ; Long64_t GetSeekInfo () const final;  ; Long64_t GetSize () const final;  Returns the current file size. ;  ; TClass * IsA () const override;  ; Bool_t IsOpen () const final;  return kTRUE if file is opened and can be accessed ;  ; void MakeFree (Long64_t, Long64_t) final;  Mark unused bytes on the file. ;  ; void MakeProject (const char *, const char *=""*"", Option_t *=""new"") final;  Generate source code necessary to access the objects stored in the file. ;  ; void Map () final;  ; void Map (Option_t *) final;  List the contents of a file sequentially. ;  ; void Paint (Option_t *="""") final;  Paint all objects in the file. ;  ; void Print (Option_t *="""") const final;  Print all objects in the file. ;  ; Bool_t ReadBuffer (char *, Int_t) final;  Read a buffer from the file. ;  ; Bool_t ReadBuffer (char *, Long64_t, Int_t) final;  Read a buffer from the file at the offset 'pos' in the file. ;  ; void ReadFree () final;  Read the FREE linked list. ;  ; Int_t Recover () final;  Attempt to recover file if not correctly closed. ;  ; Int_t ReOpen (Option_t *mode) final;  Reopen a file with a different access mode, like from READ to See TFile::Open() for details. ;  ; void ResetErrno () const final;  Method resetting the errno. ;  ; void Seek (Long64_t, ERelativeTo=kBeg) final;  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; void SetEND",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:3324,access,access,3324,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,1,['access'],['access']
Security,"t char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static bool clearObsList ();  ; static const char * DeclFileName ();  ; static void doClearObsList (bool flag);  ;  Static Public Member Functions inherited from RooCacheManager< RooAbsCacheElement >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsCache; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; bool _allowOptimize;  ; bool _clearOnRedirect;  ; bool _optCacheModeSeen;  ! ;  ; RooArgSet * _optCacheObservables = nullptr;  ! current optCacheObservables ;  ;  Protected Attributes inherited from RooCacheManager< RooAbsCacheElement >; Int_t _lastIndex;  ! Last slot accessed ;  ; Int_t _maxSize;  ! Maximum size ;  ; std::vector< RooNormSetCache > _nsetCache;  ! Normalization/Integration set manager ;  ; std::vector< RooAbsCacheElement * > _object;  ! Payload ;  ; Int_t _size;  ! Actual use ;  ; bool _wired;  ! In wired mode, there is a single payload which is returned always ;  ;  Protected Attributes inherited from RooAbsCache; RooAbsArg * _owner;  Pointer to owning RooAbsArg. ;  . Static Protected Attributes; static bool _clearObsList;  Clear obslist on sterilize? ;  . #include <RooObjCacheManager.h>. Inheritance diagram for RooObjCacheManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooObjCacheManager() [1/2]. RooObjCacheManager::RooObjCacheManager ; (; RooAbsArg * ; owner = nullptr, . Int_t ; maxSize = 2, . bool ; clearCacheOnServerRedirect = true, . bool ; allowOptimize = false . ). Constructor of object cache manager for given owner. ; If clearCacheOnServerRedirect is true all cache elements will be cleared",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooObjCacheManager.html:6135,access,accessed,6135,doc/master/classRooObjCacheManager.html,https://root.cern,https://root.cern/doc/master/classRooObjCacheManager.html,1,['access'],['accessed']
Security,"t char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); Long64_t&operator()(Long64_t key); Long64_t&operator()(ULong64_t hash, Long64_t key); TExMap&operator=(const TExMap&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidRemove(Long64_t key); voidRemove(ULong64_t hash, Long64_t key); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysErr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TExMap.html:3866,hash,hash,3866,root/html528/TExMap.html,https://root.cern,https://root.cern/root/html528/TExMap.html,1,['hash'],['hash']
Security,"t char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TObjArray*fAllRules! Array of all rules; UInt_tfCheckSumTarget class checksum; TClassReffClass! Target class pointer (for consistency checking); TStringfClassNameTarget class name; TObjArray*fPersistentRulesArray of the rules that will be embeded in the file; TObjArray*fRemainingRules! Array of non-persisten rules - just for cleanup purposes - owns the elements; Int_tfVersionTarget class version. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSchemaRuleSet(). virtual ~TSchemaRuleSet(). Bool_t AddRule(ROOT::TSchemaRule* rule, Bool_t checkConsistency = kTRUE). Bool_t AddRules(ROOT::TSchemaRuleSet* rules, Bool_t checkConsistency = kTRUE). Bool_t HasRuleWithSourceClass(const TString& source) const. const TObjArray* FindRules(const TString& source) const. const TSchemaMatch* FindRules( const TString &source, Int_t version ). const TSchemaMatch* FindRules( const TString &source, UInt_t checksum ). const TSchemaMatch* FindRules(const TString& source, Int_t version, UInt_t checksum) const. TClass* GetClass(). UInt_t GetClassCheckSum() const. TString GetClassName() const. Int_t GetClassVersion() const. const TObjArray* GetRules() const. const TObjArray* GetPersistentRules() const. void RemoveRule(ROOT::TSchemaRule* rule). void RemoveRules(TObjArray* rules). void SetClass(TClass* cls). void ls(Option_t* option = """") const. » Last changed: root/core:$Id: TSchemaRuleSet.h 29272 2009-06-30 19:24:06Z pcanal $ » Last generated: 2009-12-07 13:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__TSchemaRuleSet.html:6839,checksum,checksum,6839,root/html526/ROOT__TSchemaRuleSet.html,https://root.cern,https://root.cern/root/html526/ROOT__TSchemaRuleSet.html,2,['checksum'],['checksum']
Security,"t char* fullpath); set complete path of requested http element; For instance, it could be ""/folder/subfolder/get.bin""; Here ""/folder/subfolder/"" is element path and ""get.bin"" requested file.; One could set path and file name separately. TString GetHeader(const char* name); return specified header. void AddHeader(const char* name, const char* value); Set name: value pair to reply header; Content-Type field handled separately - one should use SetContentType() method; Content-Length field cannot be set at all;. void FillHttpHeader(TString& buf, const char* header = 0); fill HTTP header. Bool_t CompressWithGzip(); compress reply data with gzip compression. Bool_t IsBinData() const. THttpCallArg(). void SetMethod(const char* method); these methods used to set http request arguments. void SetTopName(const char* topname); set engine-specific top-name. void SetPathName(const char* p); set request path name. void SetFileName(const char* f); set request file name. void SetUserName(const char* n); set name of authenticated user. void SetQuery(const char* q); set request query. void SetRequestHeader(const char* h); set full set of request header. Int_t NumRequestHeader() const; returns number of fields in request header. TString GetRequestHeaderName(Int_t number) const; returns field name in request header. TString GetRequestHeader(const char* name); get named field from request header. const char * GetTopName() const; returns engine-specific top-name. const char * GetMethod() const; returns request method like GET or POST. Bool_t IsPostMethod() const; returns kTRUE if post method is used. void* GetPostData() const; return pointer on posted with request data. Long_t GetPostDataLength() const; return length of posted with request data. const char * GetPathName() const; returns path name from request URL. const char * GetFileName() const; returns file name from request URL. const char * GetUserName() const; return authenticated user name (0 - when no authentication). const char * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/THttpCallArg.html:10071,authenticat,authenticated,10071,root/html604/THttpCallArg.html,https://root.cern,https://root.cern/root/html604/THttpCallArg.html,1,['authenticat'],['authenticated']
Security,"t char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static DictFuncPtr_tGetDict(const char* cname); static DictFuncPtr_tGetDict(const type_info& info); static DictFuncPtr_tGetDictNorm(const char* cname); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static Version_tGetID(const char* cname); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static Int_tGetPragmaBits(const char* name); static TProtoClass*GetProto(const char* cname); static TProtoClass*GetProtoNorm(const char* cname); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static voidInit(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static char*Next(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClassTable.html:3043,Hash,Hash,3043,root/html602/TClassTable.html,https://root.cern,https://root.cern/root/html602/TClassTable.html,2,['Hash'],['Hash']
Security,"t char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Float_tGetA() const; virtual Float_tGetDensity() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Float_tGetInterLength() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetRadLength() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Float_tGetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMaterial.html:2765,Hash,Hash,2765,root/html528/TMaterial.html,https://root.cern,https://root.cern/root/html528/TMaterial.html,1,['Hash'],['Hash']
Security,"t char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Float_tGetA() const; virtual Float_tGetDensity() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Float_tGetInterLength() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetRadLength() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Float_tGetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMaterial.html:2765,Hash,Hash,2765,root/html530/TMaterial.html,https://root.cern,https://root.cern/root/html530/TMaterial.html,3,['Hash'],['Hash']
Security,"t char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Float_tGetA() const; virtual Float_tGetDensity() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Float_tGetInterLength() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetRadLength() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Float_tGetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMaterial.html:2520,Hash,Hash,2520,root/html602/TMaterial.html,https://root.cern,https://root.cern/root/html602/TMaterial.html,2,['Hash'],['Hash']
Security,"t char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual void*FindInHierarchy(const char* path, TClass** cl = 0, TDataMember** member = 0, Int_t* chld = 0); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TObject*FindTObjectInHierarchy(const char* path); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const char*GetItemField(const char* fullname, const char* name); ULong_tGetItemHash(const char* itemname); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; ULong_tGetStreamerInfoHash(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tHasRestriction(const char* item_name); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tIsDrawableClass(TClass* cl); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsReadOnly() const; Bool_tIsScanGlobalDir() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsStreamerInfoItem(const char* itemname); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TRootSniffer.html:2827,Hash,Hash,2827,root/html604/TRootSniffer.html,https://root.cern,https://root.cern/root/html604/TRootSniffer.html,1,['Hash'],['Hash']
Security,"t char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntries() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; Bool_tMatches(Int_t idx, const Char_t* idxbuf) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THnSparseArrayChunk.html:2755,Hash,Hash,2755,root/html528/THnSparseArrayChunk.html,https://root.cern,https://root.cern/root/html528/THnSparseArrayChunk.html,1,['Hash'],['Hash']
Security,"t char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntries() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; Bool_tMatches(Int_t idx, const Char_t* idxbuf) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/THnSparseArrayChunk.html:2755,Hash,Hash,2755,root/html530/THnSparseArrayChunk.html,https://root.cern,https://root.cern/root/html530/THnSparseArrayChunk.html,3,['Hash'],['Hash']
Security,"t char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntries() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; Bool_tMatches(Int_t idx, const Char_t* idxbuf) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THnSparseArrayChunk.html:2667,Hash,Hash,2667,root/html602/THnSparseArrayChunk.html,https://root.cern,https://root.cern/root/html602/THnSparseArrayChunk.html,2,['Hash'],['Hash']
Security,"t char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TMutex*GetMutex() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCondition.html:2387,Hash,Hash,2387,root/html526/TCondition.html,https://root.cern,https://root.cern/root/html526/TCondition.html,2,['Hash'],['Hash']
Security,"t char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TMutex*GetMutex() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TCondition.html:2387,Hash,Hash,2387,root/html530/TCondition.html,https://root.cern,https://root.cern/root/html530/TCondition.html,3,['Hash'],['Hash']
Security,"t char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TMutex*GetMutex() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCondition.html:2360,Hash,Hash,2360,root/html602/TCondition.html,https://root.cern,https://root.cern/root/html602/TCondition.html,2,['Hash'],['Hash']
Security,"t char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TList*GetContourList(Double_t contour) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGLPlotPainter*GetRealPainter(); virtual TList*GetStack() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; static TVirtualHistPainter*TVirtualHistPainter::HistPainter(TH1* obj); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInside(Int_t x, Int_t y); virtual Bool_tIsInside(Double_t x, Double_t y); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual Int_tMakeCuts(char* cutsOpt); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLHistPainter.html:7452,Hash,Hash,7452,root/html528/TGLHistPainter.html,https://root.cern,https://root.cern/root/html528/TGLHistPainter.html,1,['Hash'],['Hash']
Security,"t char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TList*GetContourList(Double_t contour) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGLPlotPainter*GetRealPainter(); virtual TList*GetStack() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; static TVirtualHistPainter*TVirtualHistPainter::HistPainter(TH1* obj); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInside(Int_t x, Int_t y); virtual Bool_tIsInside(Double_t x, Double_t y); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual Int_tMakeCuts(char* cutsOpt); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGLHistPainter.html:7621,Hash,Hash,7621,root/html530/TGLHistPainter.html,https://root.cern,https://root.cern/root/html530/TGLHistPainter.html,3,['Hash'],['Hash']
Security,"t char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TList*GetContourList(Double_t contour) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGLPlotPainter*GetRealPainter(); virtual TList*GetStack() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; static TVirtualHistPainter*TVirtualHistPainter::HistPainter(TH1* obj); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInside(Int_t x, Int_t y); virtual Bool_tIsInside(Double_t x, Double_t y); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual Int_tMakeCuts(char* cutsOpt); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLHistPainter.html:7475,Hash,Hash,7475,root/html602/TGLHistPainter.html,https://root.cern,https://root.cern/root/html602/TGLHistPainter.html,2,['Hash'],['Hash']
Security,"t char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; set<string>&GetDependencies(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; set<string>&GetModules(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLibraryDocInfo.html:2442,Hash,Hash,2442,root/html602/TLibraryDocInfo.html,https://root.cern,https://root.cern/root/html602/TLibraryDocInfo.html,2,['Hash'],['Hash']
Security,"t char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TGridJobStatus::EGridJobStatusGetStatus() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGridJobStatus.html:2436,Hash,Hash,2436,root/html528/TGridJobStatus.html,https://root.cern,https://root.cern/root/html528/TGridJobStatus.html,1,['Hash'],['Hash']
Security,"t char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TGridJobStatus::EGridJobStatusGetStatus() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGridJobStatus.html:2436,Hash,Hash,2436,root/html530/TGridJobStatus.html,https://root.cern,https://root.cern/root/html530/TGridJobStatus.html,3,['Hash'],['Hash']
Security,"t char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TGridJobStatus::EGridJobStatusGetStatus() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGridJobStatus.html:2436,Hash,Hash,2436,root/html602/TGridJobStatus.html,https://root.cern,https://root.cern/root/html602/TGridJobStatus.html,2,['Hash'],['Hash']
Security,"t char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TToggle*First(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual Int_tGetTogglesCount(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Int_tIndexOf(TToggle* t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Int_tInsertAt(TToggle* t, Int_t pos, Bool_t select = 1); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual TToggle*Last(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TToggleGroup.html:2518,Hash,Hash,2518,root/html528/TToggleGroup.html,https://root.cern,https://root.cern/root/html528/TToggleGroup.html,1,['Hash'],['Hash']
Security,"t char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TToggle*First(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual Int_tGetTogglesCount(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Int_tIndexOf(TToggle* t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Int_tInsertAt(TToggle* t, Int_t pos, Bool_t select = 1); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual TToggle*Last(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TToggleGroup.html:2518,Hash,Hash,2518,root/html530/TToggleGroup.html,https://root.cern,https://root.cern/root/html530/TToggleGroup.html,3,['Hash'],['Hash']
Security,"t char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TToggle*First(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual Int_tGetTogglesCount(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Int_tIndexOf(TToggle* t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Int_tInsertAt(TToggle* t, Int_t pos, Bool_t select = 1); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual TToggle*Last(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator dele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TToggleGroup.html:2491,Hash,Hash,2491,root/html602/TToggleGroup.html,https://root.cern,https://root.cern/root/html602/TToggleGroup.html,2,['Hash'],['Hash']
Security,"t char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); voidFilterZonal(const float* source, float* destVector); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrumTransform.html:3413,Hash,Hash,3413,root/html528/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html528/TSpectrumTransform.html,1,['Hash'],['Hash']
Security,"t char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); voidFilterZonal(const float* source, float* destVector); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSpectrumTransform.html:3413,Hash,Hash,3413,root/html530/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html530/TSpectrumTransform.html,3,['Hash'],['Hash']
Security,"t char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; TLDAPEntry*GetNext(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLDAPResult.html:2164,Hash,Hash,2164,root/html528/TLDAPResult.html,https://root.cern,https://root.cern/root/html528/TLDAPResult.html,1,['Hash'],['Hash']
Security,"t char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; TLDAPEntry*GetNext(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TLDAPResult.html:2164,Hash,Hash,2164,root/html530/TLDAPResult.html,https://root.cern,https://root.cern/root/html530/TLDAPResult.html,2,['Hash'],['Hash']
Security,"t char* name) const; virtual TObject*FindObject(const TObject* obj) const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; TList*GetListForObject(const char* name) const; TList*GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetRehashLevel() const; virtual Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THashTable.html:3479,Hash,Hash,3479,root/html528/THashTable.html,https://root.cern,https://root.cern/root/html528/THashTable.html,1,['Hash'],['Hash']
Security,"t char* name) const; virtual TObject*FindObject(const TObject* obj) const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; TList*GetListForObject(const char* name) const; TList*GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetRehashLevel() const; virtual Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/THashTable.html:3483,Hash,Hash,3483,root/html530/THashTable.html,https://root.cern,https://root.cern/root/html530/THashTable.html,5,['Hash'],['Hash']
Security,"t char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetLevel() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TGeoHMatrix*GetMatrix(Int_t level = -1) const; TGeoNode*GetMother(Int_t levup = 1) const; virtual const char*TNamed::GetName() const; TGeoNode*GetNode(Int_t level = -1) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGeoHMatrix*GetOriginalMatrix() const; TGeoShape*GetShape(Int_t level = -1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*GetVolume(Int_t level = -1) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsAligned() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsMatchingState(TGeoNavigator* nav) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsVisible() const; Bool_tIsVisibleFull() const; Bool_tIsVolAttributes() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPhysicalNode.html:4473,Hash,Hash,4473,root/html534/TGeoPhysicalNode.html,https://root.cern,https://root.cern/root/html534/TGeoPhysicalNode.html,1,['Hash'],['Hash']
Security,"t char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetLevel() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TGeoHMatrix*GetMatrix(Int_t level = -1) const; TGeoNode*GetMother(Int_t levup = 1) const; virtual const char*TNamed::GetName() const; TGeoNode*GetNode(Int_t level = -1) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGeoHMatrix*GetOriginalMatrix() const; TGeoShape*GetShape(Int_t level = -1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*GetVolume(Int_t level = -1) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsAligned() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsMatchingState(TGeoNavigator* nav) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsVisible() const; Bool_tIsVisibleFull() const; Bool_tIsVolAttributes() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPhysicalNode.html:4417,Hash,Hash,4417,root/html602/TGeoPhysicalNode.html,https://root.cern,https://root.cern/root/html602/TGeoPhysicalNode.html,2,['Hash'],['Hash']
Security,"t char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetLevel() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TGeoHMatrix*GetMatrix(Int_t level = -1) const; TGeoNode*GetMother(Int_t levup = 1) const; virtual const char*TNamed::GetName() const; TGeoNode*GetNode(Int_t level = -1) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGeoHMatrix*GetOriginalMatrix() const; TGeoShape*GetShape(Int_t level = -1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*GetVolume(Int_t level = -1) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsAligned() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsVisible() const; Bool_tIsVisibleFull() const; Bool_tIsVolAttributes() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPhysicalNode.html:4471,Hash,Hash,4471,root/html528/TGeoPhysicalNode.html,https://root.cern,https://root.cern/root/html528/TGeoPhysicalNode.html,1,['Hash'],['Hash']
Security,"t char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetLevel() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TGeoHMatrix*GetMatrix(Int_t level = -1) const; TGeoNode*GetMother(Int_t levup = 1) const; virtual const char*TNamed::GetName() const; TGeoNode*GetNode(Int_t level = -1) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGeoHMatrix*GetOriginalMatrix() const; TGeoShape*GetShape(Int_t level = -1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*GetVolume(Int_t level = -1) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsAligned() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsVisible() const; Bool_tIsVisibleFull() const; Bool_tIsVolAttributes() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoPhysicalNode.html:4471,Hash,Hash,4471,root/html530/TGeoPhysicalNode.html,https://root.cern,https://root.cern/root/html530/TGeoPhysicalNode.html,2,['Hash'],['Hash']
Security,"t char* par) const; Get specified parameter. A parameter set via SetParameter() is either; a TParameter or a TNamed or 0 in case par is not defined. void DeleteParameters(const char* wildcard); Delete the input list parameters specified by a wildcard (e.g. PROOF_*); or exact name (e.g. PROOF_MaxSlavesPerNode). void ShowParameters(const char* wildcard = ""PROOF_*"") const; Show the input list parameters specified by the wildcard.; Default is the special PROOF control parameters (PROOF_*). void AddFeedback(const char* name); Add object to feedback list. void RemoveFeedback(const char* name); Remove object from feedback list. void ClearFeedback(); Clear feedback list. void ShowFeedback() const; Show items in feedback list. TList * GetFeedbackList() const; Return feedback list. TTree * GetTreeHeader(TDSet* tdset); Creates a tree header (a tree with nonexisting files) object for; the DataSet. TDrawFeedback * CreateDrawFeedback(); Draw feedback creation proxy. When accessed via TProof avoids; link dependency on libProofPlayer. void SetDrawFeedbackOption(TDrawFeedback* f, Option_t* opt); Set draw feedback option. void DeleteDrawFeedback(TDrawFeedback* f); Delete draw feedback object. TList * GetOutputNames(); FIXME: to be written. void Browse(TBrowser* b); Build the PROOF's structure in the browser. void SetPlayer(TVirtualProofPlayer* player); Set a new PROOF player. TVirtualProofPlayer * MakePlayer(const char* player = 0, TSocket* s = 0); Construct a TProofPlayer object. The player string specifies which; player should be created: remote, slave, sm (supermaster) or base.; Default is remote. Socket is needed in case a slave player is created. void AddChain(TChain* chain); Add chain to data set. void RemoveChain(TChain* chain); Remove chain from data set. void GetLog(Int_t start = -1, Int_t end = -1); Ask for remote logs in the range [start, end]. If start == -1 all the; messages not yet received are sent back. TMacro * GetLastLog(); Fill a TMacro with the log lines since the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProof.html:75002,access,accessed,75002,root/html528/TProof.html,https://root.cern,https://root.cern/root/html528/TProof.html,6,['access'],['accessed']
Security,"t char* url, const char* ord, Int_t perf, const char* image, const char* workdir); TSlave*TProof::CreateSubmaster(const char* url, const char* ord, const char* image, const char* msd); Int_tCreateSymLinks(TList* files); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; static Bool_tTProof::GetFileInCmd(const char* cmd, TString& fn); static Int_tTProof::GetInputData(TList* input, const char* cachedir, TString& emsg); TList*TProof::GetListOfActiveSlaves() const; TVirtualProofPlayer*TProof::GetPlayer() const; TPluginHandler*TProof::GetProgressDialog() const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTProof::HandleLibIncPath(const char* what, Bool_t add, const char* dirs); Int_tInit(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); voidTProof::InitMembers(); virtual TVirtualProofPlayer*TProof::MakePlayer(const char* player = 0, TSocket* s = 0); TProofQueryResult*MakeQueryResult(Long64_t nent, const char* opt, Long64_t fst, TDSet* dset, const char* selec); voidTObject::MakeZombie(); voidTProof::PrepareInputDataFile(TString& dataFile); Int_tTProof::RemoveWorkers(TList* wrks); static Int_tTProof::SaveInputData(TQueryResult* qr, const char* cachedir, TString& emsg); virtual voidTProof::SaveWorkerInfo(); Int_tTProof::SendFile(const char* file, Int_t opt = (kBinary|kForward|kCp|kCpBin), const char* rfile = 0, TSlave* sl = 0); static Int_tTProof::SendInputData(TQueryResult* qr, TProof* p, TString& emsg); voidTProof::SetDSet(TDSet* dset); voidTProof::SetPlayer(TVirtualProofPlayer* player); voidSetQueryRunning(TProofQueryResult* pq); Int_tSetupWorkers(Int_t opt = 0, TList* wrks = 0); static void*TProof::SlaveStartupThread(void* arg); virtual Bool_tTProof::StartSlaves(Bool_t attach = kFALSE); static voidTProof::SystemCmd(const char* cmd, Int_t fdout); voidTProof::UpdateDialog(); virtual voidTProof::ValidateDSet(TDSet* dset).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofLite.html:20888,Validat,ValidateDSet,20888,root/html528/TProofLite.html,https://root.cern,https://root.cern/root/html528/TProofLite.html,1,['Validat'],['ValidateDSet']
Security,"t contents to be printed. RooPrintable::StyleOption defaultPrintStyle(Option_t* opt) const; Configure mapping of Print() arguments to RooPrintable print styles. void Streamer(TBuffer& ); Stream an object of class RooFitResult. TObject* Clone(const char* newname = 0) const. TObject* clone() const; { return new RooFitResult(*this); }. void Print(Option_t* options = 0) const; Printing interface. Int_t status() const; Accessors. UInt_t numStatusHistory() const; { return _statusHistory.size() ; }. Int_t covQual() const; Return MINUIT quality code of covariance matrix. Int_t numInvalidNLL() const; Return number of NLL evaluations with problems. Double_t edm() const; Return estimated distance to minimum. Double_t minNll() const; Return minimized -log(L) value. const RooArgList& constPars() const; Return list of constant parameters. const RooArgList& floatParsInit() const; Return list of floating parameters before fit. const RooArgList& floatParsFinal() const; Return list of floarting parameters after fit. Double_t correlation(const RooAbsArg& par1, const RooAbsArg& par2) const; Return correlation between par1 and par2. return correlation(par1.GetName(),par2.GetName()). Double_t globalCorr(const RooAbsArg& par); Global correlation accessors. { return globalCorr(par.GetName()) ; }. RooPlot * plotOn(RooPlot* frame, const RooAbsArg& par1, const RooAbsArg& par2, const char* options = ""ME"") const; Add objects to a 2D plot. void setMinNLL(Double_t val); { _minNLL = val ; }. void setEDM(Double_t val); { _edm = val ; }. void setStatus(Int_t val); { _status = val ; }. void setCovQual(Int_t val); { _covQual = val ; }. void setNumInvalidNLL(Int_t val); { _numBadNLL=val ; }. void setStatusHistory(vector<pair<string,int> >& hist); { _statusHistory = hist ; }. » Last changed: Tue Jun 2 15:30:52 2015 » Last generated: 2015-06-02 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooFitResult.html:18759,access,accessors,18759,root/html604/RooFitResult.html,https://root.cern,https://root.cern/root/html604/RooFitResult.html,1,['access'],['accessors']
Security,"t dict, Int_t pragmabits); Add a class to the class table (this is a static function). void Remove(const char* cname); Remove a class from the class table. This happens when a shared library; is unloaded (i.e. the dtor's of the global init objects are called). TClassRec * FindElementImpl(const char* cname, Bool_t insert); Find a class by name in the class table (using hash of name). Returns; 0 if the class is not in the table. Unless arguments insert is true in; which case a new entry is created and returned. TClassRec * FindElement(const char* cname, Bool_t insert = kFALSE); Find a class by name in the class table (using hash of name). Returns; 0 if the class is not in the table. Unless arguments insert is true in; which case a new entry is created and returned. Version_t GetID(const char* cname); Returns the ID of a class. Int_t GetPragmaBits(const char* name); Returns the pragma bits as specified in the LinkDef.h file. VoidFuncPtr_t GetDict(const char* cname); Given the class name returns the Dictionary() function of a class; (uses hash of name). VoidFuncPtr_t GetDict(const type_info& info); Given the type_info returns the Dictionary() function of a class; (uses hash of type_info::name()). char * Next(); Returns next class from sorted class table. Don't use this iterator; while modifying the class table. The class table can be modified; when making calls like TClass::GetClass(), etc. void PrintTable(); Print the class table. Before printing the table is sorted; alphabetically. void SortTable(); Sort the class table by ascending class ID's. void Terminate(); Deletes the class table (this static class function calls the dtor). TClassTable(). » Author: Fons Rademakers 11/08/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id: TClassTable.h 33854 2010-06-12 14:09:50Z pcanal $ » Last generated: 2010-12-10 21:56; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in gener",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TClassTable.html:8083,hash,hash,8083,root/html528/TClassTable.html,https://root.cern,https://root.cern/root/html528/TClassTable.html,1,['hash'],['hash']
Security,"t dict, Int_t pragmabits); Add a class to the class table (this is a static function). void Remove(const char* cname); Remove a class from the class table. This happens when a shared library; is unloaded (i.e. the dtor's of the global init objects are called). TClassRec * FindElementImpl(const char* cname, Bool_t insert); Find a class by name in the class table (using hash of name). Returns; 0 if the class is not in the table. Unless arguments insert is true in; which case a new entry is created and returned. TClassRec * FindElement(const char* cname, Bool_t insert = kFALSE); Find a class by name in the class table (using hash of name). Returns; 0 if the class is not in the table. Unless arguments insert is true in; which case a new entry is created and returned. Version_t GetID(const char* cname); Returns the ID of a class. Int_t GetPragmaBits(const char* name); Returns the pragma bits as specified in the LinkDef.h file. VoidFuncPtr_t GetDict(const char* cname); Given the class name returns the Dictionary() function of a class; (uses hash of name). VoidFuncPtr_t GetDict(const type_info& info); Given the type_info returns the Dictionary() function of a class; (uses hash of type_info::name()). char * Next(); Returns next class from sorted class table. Don't use this iterator; while modifying the class table. The class table can be modified; when making calls like TClass::GetClass(), etc. void PrintTable(); Print the class table. Before printing the table is sorted; alphabetically. void SortTable(); Sort the class table by ascending class ID's. void Terminate(); Deletes the class table (this static class function calls the dtor). TClassTable(). » Author: Fons Rademakers 11/08/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id: TClassTable.h 33854 2010-06-12 14:09:50Z pcanal $ » Last generated: 2011-07-04 15:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in gener",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TClassTable.html:8152,hash,hash,8152,root/html530/TClassTable.html,https://root.cern,https://root.cern/root/html530/TClassTable.html,1,['hash'],['hash']
Security,"t dict, Int_t pragmabits); Add a class to the class table (this is a static function). void Remove(const char* cname); Remove a class from the class table. This happens when a shared library; is unloaded (i.e. the dtor's of the global init objects are called). TClassRec * FindElementImpl(const char* cname, Bool_t insert); Find a class by name in the class table (using hash of name). Returns; 0 if the class is not in the table. Unless arguments insert is true in; which case a new entry is created and returned. TClassRec * FindElement(const char* cname, Bool_t insert = kFALSE); Find a class by name in the class table (using hash of name). Returns; 0 if the class is not in the table. Unless arguments insert is true in; which case a new entry is created and returned. Version_t GetID(const char* cname); Returns the ID of a class. Int_t GetPragmaBits(const char* name); Returns the pragma bits as specified in the LinkDef.h file. VoidFuncPtr_t GetDict(const char* cname); Given the class name returns the Dictionary() function of a class; (uses hash of name). VoidFuncPtr_t GetDict(const type_info& info); Given the type_info returns the Dictionary() function of a class; (uses hash of type_info::name()). char * Next(); Returns next class from sorted class table. Don't use this iterator; while modifying the class table. The class table can be modified; when making calls like TClass::GetClass(), etc. void PrintTable(); Print the class table. Before printing the table is sorted; alphabetically. void SortTable(); Sort the class table by ascending class ID's. void Terminate(); Deletes the class table (this static class function calls the dtor). TClassTable(). » Author: Fons Rademakers 11/08/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id: TClassTable.h 33854 2010-06-12 14:09:50Z pcanal $ » Last generated: 2011-11-03 20:10; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in gener",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TClassTable.html:8152,hash,hash,8152,root/html532/TClassTable.html,https://root.cern,https://root.cern/root/html532/TClassTable.html,1,['hash'],['hash']
Security,"t double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,2>SVector<double,2>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,2>SVector<double,2>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,2>&Unit(). Data Members; public:. enum { kSize; };. private:. doublefArray[2]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i) const; read-only access of vect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SVector_double_2_.html:4519,access,access,4519,root/html528/ROOT__Math__SVector_double_2_.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SVector_double_2_.html,4,['access'],['access']
Security,"t double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,2>SVector<double,2>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,2>SVector<double,2>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,2>&Unit(). Data Members; public:. enum { kSize; };. private:. doublefArray[2]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array(); return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin(); STL const_iterator interface. . const_iterator end(); STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i); read-only access of vector elements. Index start",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__SVector_double_2_.html:4519,access,access,4519,root/html526/ROOT__Math__SVector_double_2_.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__SVector_double_2_.html,1,['access'],['access']
Security,"t double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,3>SVector<double,3>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,3>SVector<double,3>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,3>&Unit(). Data Members; public:. enum { kSize; };. private:. doublefArray[3]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i) const; read-only access of vect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SVector_double_3_.html:4610,access,access,4610,root/html528/ROOT__Math__SVector_double_3_.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SVector_double_3_.html,4,['access'],['access']
Security,"t double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,3>SVector<double,3>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,3>SVector<double,3>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,3>&Unit(). Data Members; public:. enum { kSize; };. private:. doublefArray[3]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array(); return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin(); STL const_iterator interface. . const_iterator end(); STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i); read-only access of vector elements. Index start",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__SVector_double_3_.html:4610,access,access,4610,root/html526/ROOT__Math__SVector_double_3_.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__SVector_double_3_.html,1,['access'],['access']
Security,"t double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,4>SVector<double,4>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,4>SVector<double,4>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,4>&Unit(). Data Members; public:. enum { kSize; };. private:. doublefArray[4]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i) const; read-only access of vect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SVector_double_4_.html:4519,access,access,4519,root/html528/ROOT__Math__SVector_double_4_.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SVector_double_4_.html,4,['access'],['access']
Security,"t double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,4>SVector<double,4>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,4>SVector<double,4>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,4>&Unit(). Data Members; public:. enum { kSize; };. private:. doublefArray[4]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array(); return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin(); STL const_iterator interface. . const_iterator end(); STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i); read-only access of vector elements. Index start",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__SVector_double_4_.html:4519,access,access,4519,root/html526/ROOT__Math__SVector_double_4_.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__SVector_double_4_.html,1,['access'],['access']
Security,"t double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,5>SVector<double,5>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,5>SVector<double,5>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,5>&Unit(). Data Members; public:. enum { kSize; };. private:. doublefArray[5]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i) const; read-only access of vect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SVector_double_5_.html:4519,access,access,4519,root/html528/ROOT__Math__SVector_double_5_.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SVector_double_5_.html,4,['access'],['access']
Security,"t double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,5>SVector<double,5>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,5>SVector<double,5>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,5>&Unit(). Data Members; public:. enum { kSize; };. private:. doublefArray[5]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array(); return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin(); STL const_iterator interface. . const_iterator end(); STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i); read-only access of vector elements. Index start",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__SVector_double_5_.html:4519,access,access,4519,root/html526/ROOT__Math__SVector_double_5_.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__SVector_double_5_.html,1,['access'],['access']
Security,"t double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,6>SVector<double,6>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,6>SVector<double,6>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,6>&Unit(). Data Members; public:. enum { kSize; };. private:. doublefArray[6]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i) const; read-only access of vect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SVector_double_6_.html:4610,access,access,4610,root/html528/ROOT__Math__SVector_double_6_.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SVector_double_6_.html,4,['access'],['access']
Security,"t double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,6>SVector<double,6>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,6>SVector<double,6>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,6>&Unit(). Data Members; public:. enum { kSize; };. private:. doublefArray[6]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array(); return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin(); STL const_iterator interface. . const_iterator end(); STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i); read-only access of vector elements. Index start",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__SVector_double_6_.html:4610,access,access,4610,root/html526/ROOT__Math__SVector_double_6_.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__SVector_double_6_.html,1,['access'],['access']
Security,"t double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,7>SVector<double,7>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,7>SVector<double,7>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,7>&Unit(). Data Members; public:. enum { kSize; };. private:. doublefArray[7]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i) const; read-only access of vect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SVector_double_7_.html:4610,access,access,4610,root/html528/ROOT__Math__SVector_double_7_.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SVector_double_7_.html,4,['access'],['access']
Security,"t double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8); ROOT::Math::SVector<double,7>SVector<double,7>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9); ROOT::Math::SVector<double,7>SVector<double,7>(const double& a1, const double& a2, const double& a3, const double& a4, const double& a5, const double& a6, const double& a7, const double& a8, const double& a9, const double& a10); ROOT::Math::SVector<double,7>&Unit(). Data Members; public:. enum { kSize; };. private:. doublefArray[7]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array(); return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin(); STL const_iterator interface. . const_iterator end(); STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i); read-only access of vector elements. Index start",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__SVector_double_7_.html:4610,access,access,4610,root/html526/ROOT__Math__SVector_double_7_.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__SVector_double_7_.html,1,['access'],['access']
Security,"t enc, Int_t KeyType, const char* In); Encode null terminated str using the session private key indicated by enc; and sends it over the network; Returns number of bytes sent, or -1 in case of error.; enc = 1 for private encoding, enc = 2 for public encoding. Int_t SecureRecv(TSocket* Socket, Int_t dec, Int_t KeyType, char** Out); Receive str from sock and decode it using key indicated by key type; Return number of received bytes or -1 in case of error.; dec = 1 for private decoding, dec = 2 for public decoding. Int_t DecodeRSAPublic(const char* rsapubexport, rsa_NUMBER& n, rsa_NUMBER& d, char** rsassl = 0); Store RSA public keys from export string rsaPubExport. Int_t SetRSAPublic(const char* rsapubexport, Int_t klen); Store RSA public keys from export string rsaPubExport.; Returns type of stored key, or -1 is not recognized. Int_t SendRSAPublicKey(TSocket* Socket, Int_t key = 0); Receives server RSA Public key; Sends local RSA public key encoded. Int_t ReadRootAuthrc(); Read authentication directives from $ROOTAUTHRC, $HOME/.rootauthrc or; <Root_etc_dir>/system.rootauthrc and create related THostAuth objects.; Files are read only if they changed since last reading; If 'proofconf' is defined, check also file proofconf for directives. Bool_t CheckProofAuth(Int_t cSec, TString& det); Check if the authentication method can be attempted for the client. void MergeHostAuthList(TList* Std, TList* New, Option_t* Opt = """"); Tool for updating fgAuthInfo or fgProofAuthInfo; 'nin' contains list of last input information through (re)reading; of a rootauthrc-alike file. 'nin' info has priority.; 'std' is cleaned from inactive members.; 'nin' members used to update existing members in 'std' are; removed from 'nin', do that they do not leak; opt = ""P"" for proofauthinfo. void RemoveSecContext(TRootSecContext* ctx); Tool for removing SecContext ctx from THostAuth listed in; fgAuthInfo or fgProofAuthInfo. Int_t ProofAuthSetup(); Authentication related stuff setup in TProofServ.; This is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAuthenticate.html:20878,authenticat,authentication,20878,root/html526/TAuthenticate.html,https://root.cern,https://root.cern/root/html526/TAuthenticate.html,7,['authenticat'],['authentication']
Security,"t for each toy-MC sample generated ;  ►NROOTNamespace for new ROOT classes and functions ;  ►NDetail;  ►NTDF;  CTCustomColumn;  CTCustomColumnBase;  CTFilter;  CTFilterBase;  CTLoopManager;  CTRange;  CTRangeBase;  CTBranchProxyBase class for all the proxy object ;  ►CTCollectionProxyInfo;  CAddress;  CEnvironSmall helper to save proxy environment in the event of recursive calls ;  CEnvironBase;  CInsertSmall helper to encapsulate all necessary data accesses for containers like set, multiset etc ;  CIteratorsSmall helper to implement the function to create,access and destroy iterators ;  CIterators< Cont_t, true >;  CIterators< std::vector< T >, false >;  CIteratorValueSmall helper to encapsulate whether to return the value pointed to by the iterator or its address ;  CIteratorValue< Cont_t, value_ptr * >;  CMapInsertSmall helper to encapsulate all necessary data accesses for containers like set, multiset etc ;  CPairHolder;  CPushbackSmall helper to encapsulate all necessary data accesses for containers like vector, list, deque ;  CPushback< Internal::TStdBitsetHelper< Bitset_t > >;  CPushback< std::vector< bool > >;  CPushfrontSmall helper to encapsulate all necessary data accesses for containers like forward_list ;  CSfinaeHelper;  CTypeSmall helper to encapsulate basic data accesses for all STL continers ;  ►CType< Internal::TStdBitsetHelper< Bitset_t > >;  ►CIterators;  CPtrSize_t;  ►CType< std::vector< Bool_t > >;  CIterators;  ►CTSchemaRuleSet;  CTMatches;  ►NExecutorUtilsThis namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce ;  CReduceObjectsMerge collection of TObjects ;  ►NExperimental;  ►NDetail;  CTHistBinIterIterates over the bins of a THist or THistImpl ;  CTHistBinPtrPoints to a histogram bin (or actually a THistBinRef) ;  CTHistBinRefRepresents a bin reference ;  CTHistBinStatConst view on a bin's statistical data ;  CTHistDataA THistImplBase's data, provides accessors to all its statistics ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/annotated.html:11463,access,accesses,11463,doc/v610/annotated.html,https://root.cern,https://root.cern/doc/v610/annotated.html,1,['access'],['accesses']
Security,"t index); Bool_tHighWaterMark(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Int_tfSize; TExMap::Assoc_t*fTable; Int_tfTally. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TExMap(Int_t mapSize = 100); Create a TExMap. TExMap(const TExMap& map); Copy constructor. TExMap& operator=(const TExMap& ); Assignement operator. ~TExMap(); Delete TExMap. void Add(ULong64_t hash, Long64_t key, Long64_t value); Add an (key,value) pair to the table. The key should be unique. void AddAt(UInt_t slot, ULong64_t hash, Long64_t key, Long64_t value); Add an (key,value) pair to the table. The key should be unique.; If the 'slot' is open, use it to store the value,; otherwise revert to Add(hash,key,value); This is usually used in conjuction with GetValue wiht 3 parameters:; if ((idx = (ULong64_t)fMap->GetValue(hash, key, slot)) != 0) {. } else {; fMap->AddAt(slot,hash,key,value);; }. Long64_t & operator()(ULong64_t hash, Long64_t key); Return a reference to the value belonging to the key with the; specified hash value. If the key does not exist it will be added.; NOTE: the reference will be invalidated an Expand() triggered by; an Add() or another operator() call. void Delete(Option_t* opt = """"); Delete all entries stored in the TExMap. Long64_t GetValue(ULong64_t hash, Long64_t key); Return the value belonging to specified key and hash value. If key not; found return 0. Long64_t GetValue(ULong64_t hash, Long64_t key, UInt_t& slot); Return the value belonging to specified key and hash value. If key not; found return 0.; In 'slot', return the index of the slot used or the first empty slot.; (to be used with AddAt). void Remove(ULong64_t hash, Long64_t key); Remove entry with specified key from the TExMap. I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TExMap.html:6478,hash,hash,6478,root/html528/TExMap.html,https://root.cern,https://root.cern/root/html528/TExMap.html,8,['hash'],['hash']
Security,"t is added to the TROOT sockets list which; will make sure that any open sockets are properly closed on; program termination. ~TServerSocket(); Destructor: cleanup authentication stuff (if any) and close. TSocket * Accept(UChar_t Opt = 0); Accept a connection on a server socket. Returns a full-duplex; communication TSocket object. If no pending connections are; present on the queue and nonblocking mode has not been enabled; with SetOption(kNoBlock,1) the call blocks until a connection is; present. The returned socket must be deleted by the user. The socket; is also added to the TROOT sockets list which will make sure that; any open sockets are properly closed on program termination.; In case of error 0 is returned and in case non-blocking I/O is; enabled and no connections are available -1 is returned. Opt can be used to require client authentication; valid options are. kSrvAuth = require client authentication; kSrvNoAuth = force no client authentication. Example: use Opt = kSrvAuth to require client authentication. Default options are taken from fgAcceptOpt and are initially; equivalent to kSrvNoAuth; they can be changed with the static; method TServerSocket::SetAcceptOptions(Opt).; The active defaults can be visualized using the static method; TServerSocket::ShowAcceptOptions(). TInetAddress GetLocalInetAddress(); Return internet address of host to which the server socket is bound,; i.e. the local host. In case of error TInetAddress::IsValid() returns; kFALSE. Int_t GetLocalPort(); Get port # to which server socket is bound. In case of error returns -1. UChar_t GetAcceptOptions(); Return default options for Accept. void SetAcceptOptions(UChar_t Opt); Set default options for Accept according to modifier 'mod'.; Use:; kSrvAuth require client authentication; kSrvNoAuth do not require client authentication. void ShowAcceptOptions(); Print default options for Accept. Bool_t Authenticate(TSocket* ); Check authentication request from the client on new; open connection. T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TServerSocket.html:13226,authenticat,authentication,13226,root/html528/TServerSocket.html,https://root.cern,https://root.cern/root/html528/TServerSocket.html,1,['authenticat'],['authentication']
Security,"t level is set to the default (99), TTree::Branch will; 2020/// not issue a warning if the class can not be split.; 2021 ; 2022TBranch* TTree::Branch(const char* name, const char* classname, void* addobj, Int_t bufsize /* = 32000 */, Int_t splitlevel /* = 99 */); 2023{; 2024 if (fgBranchStyle == 1) {; 2025 return Bronch(name, classname, addobj, bufsize, splitlevel);; 2026 } else {; 2027 if (splitlevel < 0) {; 2028 splitlevel = 0;; 2029 }; 2030 return BranchOld(name, classname, addobj, bufsize, splitlevel);; 2031 }; 2032}; 2033 ; 2034////////////////////////////////////////////////////////////////////////////////; 2035/// Create a new TTree BranchObject.; 2036///; 2037/// Build a TBranchObject for an object of class classname.; 2038/// addobj is the address of a pointer to an object of class classname.; 2039/// IMPORTANT: classname must derive from TObject.; 2040/// The class dictionary must be available (ClassDef in class header).; 2041///; 2042/// This option requires access to the library where the corresponding class; 2043/// is defined. Accessing one single data member in the object implies; 2044/// reading the full object.; 2045/// See the next Branch constructor for a more efficient storage; 2046/// in case the entry consists of arrays of identical objects.; 2047///; 2048/// By default the branch buffers are stored in the same file as the Tree.; 2049/// use TBranch::SetFile to specify a different file; 2050///; 2051/// IMPORTANT NOTE about branch names:; 2052///; 2053/// And in general, in case two or more master branches contain subbranches; 2054/// with identical names, one must add a ""."" (dot) character at the end; 2055/// of the master branch name. This will force the name of the subbranches; 2056/// to be of the form `master.subbranch` instead of simply `subbranch`.; 2057/// This situation happens when the top level object; 2058/// has two or more members referencing the same class.; 2059/// For example, if a Tree has two branches B1 and B2 corresponding;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:81042,access,access,81042,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['access'],['access']
Security,"t line 191 of file THashTable.cxx. ◆ Collisions() [2/2]. Int_t THashTable::Collisions ; (; TObject * ; obj); const. Returns the number of collisions for an object (i.e. ; number of objects in same slot in the hash table, i.e. length of linked list). ; Definition at line 205 of file THashTable.cxx. ◆ DeclFileName(). static const char * THashTable::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 82 of file THashTable.h. ◆ Delete(). void THashTable::Delete ; (; Option_t * ; option = """"). overridevirtual . Remove all objects from the table AND delete all heap based objects. ; Implements TCollection.; Definition at line 220 of file THashTable.cxx. ◆ Empty(). Bool_t THashTable::Empty ; (; ); const. inline . Definition at line 66 of file THashTable.h. ◆ FindObject() [1/2]. TObject * THashTable::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from TCollection.; Reimplemented in TListOfTypes, and TListOfTypes.; Definition at line 238 of file THashTable.cxx. ◆ FindObject() [2/2]. TObject * THashTable::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from TCollection.; Reimplemented in TListOfTypes.; Definition at line 251 of file THashTable.cxx. ◆ GetCheckedHashValue(). Int_t THashTable::GetCheckedHashValue ; (; TObject * ; obj); const. inlineprivate . Definition at line 93 of file THashTable.h. ◆ GetHashValue() [1/3]. Int_t THashTable::GetHashValue ; (; const char * ; str); const. inlineprivate . Definition at line 48 of file THashTable.h. ◆ GetHashValue() [2/3]. Int_t THashTable::GetHashValue ; (; const TObject * ; obj); const. inlineprivate . Definition at line 99 of file THashTable.h. ◆ GetHashValue() [3/3]. Int_t THashTable::GetHashValue ; (; TString & ; s); const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHashTable.html:20418,hash,hash,20418,doc/master/classTHashTable.html,https://root.cern,https://root.cern/doc/master/classTHashTable.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"t line 34 of file THostAuth.h. Public Member Functions;  THostAuth ();  Default constructor. ;  ;  THostAuth (const char *asstring);  Create hostauth object from directives given as a compact string See THostAuth::AsString(). ;  ;  THostAuth (const char *host, const char *user, Int_t authmeth, const char *details);  Create hostauth object with one method only. ;  ;  THostAuth (const char *host, const char *user, Int_t nmeth=0, Int_t *authmeth=nullptr, char **details=nullptr);  Create hostauth object. ;  ;  THostAuth (const char *host, Int_t server, const char *user, Int_t authmeth, const char *details);  Create hostauth object with one method only. ;  ;  THostAuth (const char *host, Int_t server, const char *user, Int_t nmeth=0, Int_t *authmeth=nullptr, char **details=nullptr);  Create hostauth object. ;  ;  THostAuth (THostAuth &ha);  Copy ctor ... ;  ; virtual ~THostAuth ();  The dtor. ;  ; void Activate ();  ; void AddFirst (Int_t level, const char *details=nullptr);  Add new method in first position If already in the list, set as first method 'level' with authentication 'details'. ;  ; void AddMethod (Int_t level, const char *details=nullptr);  Add method to the list. ;  ; void AsString (TString &out) const;  Return a static string with all info in a serialized form. ;  ; void CountFailure (Int_t level);  Count failures for 'method'. ;  ; void CountSuccess (Int_t level);  Count successes for 'method'. ;  ; TRootSecContext * CreateSecContext (const char *user, const char *host, Int_t meth, Int_t offset, const char *details, const char *token, TDatime expdate=kROOTTZERO, void *ctx=nullptr, Int_t key=-1);  Create a Security context and add it to local list Return pointer to it to be stored in TAuthenticate. ;  ; void DeActivate ();  ; TList * Established () const;  ; const char * GetDetails (Int_t level);  Return authentication details for specified level or """" if the specified level does not exist for this host. ;  ; const char * GetDetailsByIdx (Int_t idx) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHostAuth.html:1389,authenticat,authentication,1389,doc/master/classTHostAuth.html,https://root.cern,https://root.cern/doc/master/classTHostAuth.html,1,['authenticat'],['authentication']
Security,"t line 48 of file TASPluginGS.cxx. ◆ ~TASPluginGS(). TASPluginGS::~TASPluginGS ; (; ). override . dtor ; Definition at line 65 of file TASPluginGS.cxx. Member Function Documentation. ◆ Class(). static TClass * TASPluginGS::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TASPluginGS::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TASPluginGS::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 38 of file TASPluginGS.h. ◆ DeclFileName(). static const char * TASPluginGS::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 38 of file TASPluginGS.h. ◆ File2ASImage(). ASImage * TASPluginGS::File2ASImage ; (; const char * ; filename). overridevirtual . read PS/EPS/PDF file and convert it to ASImage ; Reimplemented from TASImagePlugin.; Definition at line 76 of file TASPluginGS.cxx. ◆ Hash(). ULong_t TASPluginGS::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TASPluginGS::HashULong_t Hash() const overrideReturn hash value for this object.Definition TASPlugi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASPluginGS.html:12686,Hash,Hash,12686,doc/master/classTASPluginGS.html,https://root.cern,https://root.cern/doc/master/classTASPluginGS.html,1,['Hash'],['Hash']
Security,"t line 51 of file CPPExcInstance.cxx. ◆ eqneq_binop(). static PyObject * CPyCppyy::eqneq_binop ; (; CPPClass * ; klass, . PyObject * ; self, . PyObject * ; obj, . int ; op . ). inlinestatic . Definition at line 450 of file CPPInstance.cxx. ◆ Eval(). const CPyCppyy::PyResult CPyCppyy::Eval ; (; const std::string & ; expr). Definition at line 467 of file API.cxx. ◆ Exec(). bool CPyCppyy::Exec ; (; const std::string & ; cmd). Definition at line 446 of file API.cxx. ◆ ExecScript(). void CPyCppyy::ExecScript ; (; const std::string & ; name, . const std::vector< std::string > & ; args . ). Definition at line 318 of file API.cxx. ◆ GetAttrDirect(). static PyObject * CPyCppyy::GetAttrDirect ; (; PyObject * ; pyclass, . PyObject * ; pyname . ). inlinestatic . Definition at line 120 of file ProxyWrappers.cxx. ◆ GetScopeProxy(). PyObject * CPyCppyy::GetScopeProxy ; (; Cppyy::TCppScope_t ; scope). Definition at line 497 of file ProxyWrappers.cxx. ◆ HashSignature(). uint64_t CPyCppyy::HashSignature ; (; CPyCppyy_PyArgs_t ; args, . size_t ; nargsf . ). inline . Definition at line 17 of file CPPOverload.h. ◆ HaveImplicit(). bool CPyCppyy::HaveImplicit ; (; CallContext * ; ctxt). inline . Definition at line 132 of file CallContext.h. ◆ im_call(). static PyObject * CPyCppyy::im_call ; (; PyObject * ; meth, . PyObject * ; args, . PyObject * ; kw . ). static . Definition at line 251 of file CustomPyTypes.cxx. ◆ im_dealloc(). static void CPyCppyy::im_dealloc ; (; PyMethodObject * ; im). static . Definition at line 226 of file CustomPyTypes.cxx. ◆ im_descr_get(). static PyObject * CPyCppyy::im_descr_get ; (; PyObject * ; meth, . PyObject * ; obj, . PyObject * ; pyclass . ). static . Definition at line 295 of file CustomPyTypes.cxx. ◆ Import(). bool CPyCppyy::Import ; (; const std::string & ; name). Definition at line 259 of file API.cxx. ◆ indexiter_dealloc(). static void CPyCppyy::indexiter_dealloc ; (; indexiterobject * ; ii). static . Definition at line 354 of file CustomPyTypes.cxx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceCPyCppyy.html:42611,Hash,HashSignature,42611,doc/master/namespaceCPyCppyy.html,https://root.cern,https://root.cern/doc/master/namespaceCPyCppyy.html,1,['Hash'],['HashSignature']
Security,"t long long& val, char mergemode); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TParameter::EStatusBits { kMultiply; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfName; long longfVal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t TParameter<AParamType> Merge(TCollection* in); Merge objects in the list.; Returns the number of objects that were in the list. const char * GetName() const; { return fName; }. const AParamType & GetVal() const; { return fVal; }. void SetVal(const long long& val); { fVal = val; }. void SetMergeMode(char mergemode = '+'). ULong_t Hash() const; { return fName.Hash(); }. Bool_t IsSortable() const; { return kTRUE; }. Int_t Compare(const TObject* obj) const; Compare two TParameter objects. Returns 0 when equal, -1 when this is; smaller and +1 when bigger (like strcmp). void ls(Option_t* ) const; Print this parameter content. void Print(Option_t* ) const; Print this parameter content. cout << IsA(). » Author: Maarten Ballintijn 21/06/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TParameter.h 40272 2011-07-18 11:12:14Z rdm $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParameter_Long64_t_.html:5935,Hash,Hash,5935,root/html532/TParameter_Long64_t_.html,https://root.cern,https://root.cern/root/html532/TParameter_Long64_t_.html,2,['Hash'],['Hash']
Security,"t new TFunction-s. TList* GetListForObject(const TObject* obj) const; Return the set of overloads for function obj, collecting all available ones.; Can construct and insert new TFunction-s. TFunction * Find(TListOfFunctions::DeclId_t id) const; Return the TMethod or TFunction describing the function corresponding; to the Decl 'id'. Return NULL if not found. TFunction * Get(TListOfFunctions::DeclId_t id); Return (after creating it if necessary) the TMethod or TFunction; describing the function corresponding to the Decl 'id'. void UnmapObject(TObject* obj); Remove a pair<id, object> from the map of functions and their ids. void RecursiveRemove(TObject* obj); Remove object from this collection and recursively remove the object; from all other objects (and collections).; This function overrides TCollection::RecursiveRemove that calls; the Remove function. THashList::Remove cannot be called because; it uses the hash value of the hash table. This hash value; is not available anymore when RecursiveRemove is called from; the TObject destructor. TObject* Remove(TObject* obj); Remove object from the list. TObject* Remove(TObjLink* lnk); Remove object via its objlink from the list. void Load(); Load all the functions known to the intepreter for the scope 'fClass'; into this collection. void Unload(); Mark 'all func' as being unloaded.; After the unload, the function can no longer be found directly,; until the decl can be found again in the interpreter (in which; the func object will be reused. void Unload(TFunction* func); Mark 'func' as being unloaded.; After the unload, the function can no longer be found directly,; until the decl can be found again in the interpreter (in which; the func object will be reused. TObject* FindObject(const TObject* obj) const. TIterator* MakeIterator(Bool_t dir = kIterForward) const. TObject* At(Int_t idx) const. TObject* After(const TObject* obj) const. TObject* Before(const TObject* obj) const. TObject* First() const. TObjLink* FirstLink() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TListOfFunctions.html:14573,hash,hash,14573,root/html604/TListOfFunctions.html,https://root.cern,https://root.cern/root/html604/TListOfFunctions.html,1,['hash'],['hash']
Security,"t new_width, UInt_t new_height);  Get picture with specified size from pool (picture will be scaled if necessary). ;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  List all pictures in the pool. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGPicturePool.html:2021,Hash,Hash,2021,doc/master/classTGPicturePool.html,https://root.cern,https://root.cern/doc/master/classTGPicturePool.html,2,['Hash'],['Hash']
Security,"t of ROOT. ; Definition at line 85 of file TMemoryRegulator.h. Public Member Functions; void CallClearProxiedObjects ();  ; TClass * IsA () const;  ; void RecursiveRemove (TObject *object) final;  Recursively remove this object from a list. ;  ; void Streamer (TBuffer &R__b);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPyROOT_1_1RegulatorCleanup.html:1514,Hash,Hash,1514,doc/master/classPyROOT_1_1RegulatorCleanup.html,https://root.cern,https://root.cern/doc/master/classPyROOT_1_1RegulatorCleanup.html,2,['Hash'],['Hash']
Security,"t of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNetSystem.html:19809,access,access,19809,doc/master/classTNetSystem.html,https://root.cern,https://root.cern/doc/master/classTNetSystem.html,3,['access'],['access']
Security,"t option = 0, Int_t bufsize = 0) const; Int_tWriteDataSet(const char* group, const char* user, const char* dsName, TFileCollection* dataset, UInt_t option = 0, TMD5* checksum = 0). protected:. Bool_tBrowseDataSets(const char* group, const char* user, const char* dsName, UInt_t option, TObject* target); Int_tChecksumDataSet(const char* path, const char* md5path, TString& checksum); Int_tCreateLsFile(const char* group, const char* user, Long_t& mtime, TString& checksum); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Bool_tExistsDataSet(const char* group, const char* user, const char* dsName); Int_tFillLsDataSet(const char* group, const char* user, const char* dsName, TList* out, UInt_t option); const char*GetDataSetPath(const char* group, const char* user, const char* dsName); const char*GetDataSetPath(const char* group, const char* user, const char* dsName, TString& md5path, Bool_t local = kFALSE); virtual TMap*TDataSetManager::GetGroupUsedMap(); Int_tTDataSetManager::GetNDisapparedFiles() const; Int_tTDataSetManager::GetNOpenedFiles() const; Int_tTDataSetManager::GetNTouchedFiles() const; voidTDataSetManager::GetQuota(const char* group, const char* user, const char* dsName, TFileCollection* dataset); virtual TMap*TDataSetManager::GetUserUsedMap(); voidInit(); voidTObject::MakeZombie(); voidTDataSetManager::PrintDataSet(TFileCollection* fc, Int_t popt = 0); voidTDataSetManager::PrintUsedSpace(); Bool_tTDataSetManager::ReadGroupConfig(const char* cf = 0); Bool_tRemoveDataSet(const char* group, const char* user, const char* dsName); Int_tScanDataSet(const char* group, const char* user, const char* dsName, UInt_t option = kReopen|kDebug); static Long64_tTDataSetManager::ToBytes(const char* size = 0); virtual voidUpdateUsedSpace(). private:. Int_tCheckLocalCache(const char* group, const char* user, const char* dsName = ""ls"", UInt_t option = 0); voidInitLocalCache(). Data Members; public:. enum TDataSetManager::EDataSetS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManagerFile.html:7501,checksum,checksum,7501,root/html528/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html528/TDataSetManagerFile.html,8,['checksum'],['checksum']
Security,"t override;  ; Int_t ReadLock ();  Obtain a reader lock. Returns always 0. ;  ; Int_t ReadUnLock ();  Unlock reader lock. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteLock ();  Obtain a writer lock. Returns always 0. ;  ; Int_t WriteUnLock ();  Unlock writer lock. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRWLock.html:1451,Hash,Hash,1451,doc/master/classTRWLock.html,https://root.cern,https://root.cern/doc/master/classTRWLock.html,2,['Hash'],['Hash']
Security,"t prior to the minimization. The size of the covariance matrix is according to the number of variable parameters (free and limited).; 5.13.1 MnUserCovariance(const std::vector\(<\)double\(>\)&, unsigned int nrow); Construct from data, positions of the elements in the array are arranged according to the packed storage format. The size of the array must be \(nrow*(nrow+1)/2\). The array must contain the upper triangular part of the symmetric matrix packed sequentially, column by column, so that arr(0) contains covar(0,0), arr(1) and arr(2) contain covar(0,1) and covar(1,1) respectively, and so on. The number of rows (colums) has to be specified.; 5.13.2 MnUserCovariance(unsigned int nrow); Specify the number of rows (colums) at instantiation. It will allocate an array of the length \(nrow*(nrow+1)/2\) and inititalize it to \(0\). Elements can then be set using the method operator()(unsigned int, unsigned int).; 5.13.3 MnUserCovariance::operator()(unsigned int, unsigned int); Individual elements can be accessed via the operator(), both for reading and writing.; 5.14 MnUserParameters; [api:parameters] MnUserParameters is the main class for user interaction with the parameters. It serves both as input to the minimization as well as output as the result of the minimization is converted into the user representable format in order to allow for further interaction. Parameters for M can be added (defined) specifying a name, value and initial uncertainty.; 5.14.1 add(…); The method MnUserParameters::add(…) is overloaded for three kind of parameters:. add(const char*, double, double) for adding a free variable parameter; add(const char*, double, double, double, double) for adding a variable parameter with limits (lower and upper); add(const char*, double) for adding a constant parameter. When adding parameters, M assigns indices to each parameter which will be the same as in the std::vector\(<\)double\(>\) in the FCNBase::operator(). That means the first parameter the user adds ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:58130,access,accessed,58130,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,1,['access'],['accessed']
Security,"t px, Int_t py) override;  Process event of type 'event' - one of EEventType types, occurring at window location px, py This is provided for use when embedding GL viewer into pad. ;  ; Bool_t GetArcBall () const;  ; Bool_t GetDoInternalSelection () const;  ; Int_t GetSecSelType () const;  ; Int_t GetTooltipPixelTolerance () const;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button 'event'. ;  ; Bool_t HandleConfigureNotify (Event_t *event) override;  Handle configure notify 'event' - a window resize/movement. ;  ; Bool_t HandleCrossing (Event_t *event) override;  Handle generic Event_t type 'event' - provided to catch focus changes and terminate any interaction in viewer. ;  ; Bool_t HandleDoubleClick (Event_t *event) override;  Handle mouse double click 'event'. ;  ; Bool_t HandleEvent (Event_t *event) override;  Handle generic Event_t type 'event' - provided to catch focus changes and terminate any interaction in viewer. ;  ; virtual Bool_t HandleExpose (Event_t *event);  Handle window expose 'event' - show. ;  ; Bool_t HandleFocusChange (Event_t *event) override;  Handle generic Event_t type 'event' - provided to catch focus changes and terminate any interaction in viewer. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle keyboard 'event'. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion 'event'. ;  ; Bool_t HandleTimer (TTimer *t) override;  If mouse delay timer times out emit signal. ;  ; virtual void PopupContextMenu (TGLPhysicalShape *pshp, Event_t *event, Int_t gx, Int_t gy);  Popup context menu. ;  ; virtual void RemoveTooltip ();  Hide the tooltip. ;  ; void Repaint () override;  Handle window expose 'event' - show. ;  ; void SetArcBall (Bool_t a);  ; void SetDoInternalSelection (Bool_t x);  ; void SetMouseOverSelectDelay (Int_t ms);  Set delay of mouse-over probe (highlight). ;  ; void SetMouseOverTooltipDelay (Int_t ms);  Set delay of tooltip timer. ;  ; void SetSecSelType (Int_t t);  ; void SetTooltipPix",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLEventHandler.html:2314,expose,expose,2314,doc/master/classTGLEventHandler.html,https://root.cern,https://root.cern/doc/master/classTGLEventHandler.html,1,['expose'],['expose']
Security,"t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_t*GetGLMatrix(Double_t* rGLMatrix) const; virtual const char*TObject::GetIconName() const; virtual Double_t*GetMatrix(); virtual const char*TNamed::GetName() const; virtual Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Double_tGetPhi() const; virtual Double_tGetPsi() const; virtual Double_tGetTheta() const; virtual const char*TNamed::GetTitle() const; virtual Int_tGetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsReflection() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRotMatrix.html:2853,Hash,Hash,2853,root/html528/TRotMatrix.html,https://root.cern,https://root.cern/root/html528/TRotMatrix.html,1,['Hash'],['Hash']
Security,"t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_t*GetGLMatrix(Double_t* rGLMatrix) const; virtual const char*TObject::GetIconName() const; virtual Double_t*GetMatrix(); virtual const char*TNamed::GetName() const; virtual Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Double_tGetPhi() const; virtual Double_tGetPsi() const; virtual Double_tGetTheta() const; virtual const char*TNamed::GetTitle() const; virtual Int_tGetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsReflection() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TRotMatrix.html:2853,Hash,Hash,2853,root/html530/TRotMatrix.html,https://root.cern,https://root.cern/root/html530/TRotMatrix.html,3,['Hash'],['Hash']
Security,"t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_t*GetGLMatrix(Double_t* rGLMatrix) const; virtual const char*TObject::GetIconName() const; virtual Double_t*GetMatrix(); virtual const char*TNamed::GetName() const; virtual Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Double_tGetPhi() const; virtual Double_tGetPsi() const; virtual Double_tGetTheta() const; virtual const char*TNamed::GetTitle() const; virtual Int_tGetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsReflection() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRotMatrix.html:2527,Hash,Hash,2527,root/html602/TRotMatrix.html,https://root.cern,https://root.cern/root/html602/TRotMatrix.html,2,['Hash'],['Hash']
Security,"t py); TMVA::FactoryFactory(TString theJobName, TFile* theTargetFile, TString theOption = """"); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TMVA::IMethod*GetMethod(const TString& title) const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeClass(const TString& methodTitle = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__Factory.html:5694,Hash,Hash,5694,root/html528/TMVA__Factory.html,https://root.cern,https://root.cern/root/html528/TMVA__Factory.html,1,['Hash'],['Hash']
Security,"t py); TMVA::FactoryFactory(TString theJobName, TFile* theTargetFile, TString theOption = """"); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TMVA::IMethod*GetMethod(const TString& title) const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeClass(const TString& methodTitle = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__Factory.html:5694,Hash,Hash,5694,root/html530/TMVA__Factory.html,https://root.cern,https://root.cern/root/html530/TMVA__Factory.html,3,['Hash'],['Hash']
Security,"t rep = 1); Append character c rep times to string. Ssiz_t Capacity(Ssiz_t n); Return string capacity. If nc != current capacity Clone() the string; in a string with the desired capacity. int CompareTo(const char* cs, TString::ECaseCompare cmp = kExact) const; Compare a string to char *cs2. int CompareTo(const TString& st, TString::ECaseCompare cmp = kExact) const; Compare a string to another string. Int_t CountChar(Int_t c) const; Return number of times character c occurs in the string. TString Copy() const; Copy a string. UInt_t Hash(TString::ECaseCompare cmp = kExact) const; Return hash value. UInt_t Hash(const void* txt, Int_t ntxt); Calculates hash index from any char string. (static function); Based on precalculated table of 256 specially selected numbers.; These numbers are selected in such a way, that for string; length == 4 (integer number) the hash is unambigous, i.e.; from hash value we can recalculate input (no degeneration). The quality of hash method is good enough, that; ""random"" numbers made as R = Hash(1), Hash(2), ...Hash(N); tested by <R>, <R*R>, <Ri*Ri+1> gives the same result; as for libc rand(). For string: i = TString::Hash(string,nstring);; For int: i = TString::Hash(&intword,sizeof(int));; For pointer: i = TString::Hash(&pointer,sizeof(void*));. V.Perev. Ssiz_t Index(const char* pat, Ssiz_t patlen, Ssiz_t i, TString::ECaseCompare cmp) const; Search for a string in the TString. Plen is the length of pattern,; startIndex is the index from which to start and cmp selects the type; of case-comparison. Bool_t MaybeRegexp() const; Returns true if string contains one of the regexp characters ""^$.[]*+?"". Bool_t MaybeWildcard() const; Returns true if string contains one of the wildcard characters ""[]*?"". TString& Prepend(char c, Ssiz_t rep = 1); Prepend characters to self. TString & Replace(Ssiz_t pos, Ssiz_t n, const char* s, Ssiz_t ns); Remove at most n1 characters from self beginning at pos,; and replace them with the first n2 characters of cs. TSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TString.html:10010,hash,hash,10010,root/html528/TString.html,https://root.cern,https://root.cern/root/html528/TString.html,3,"['Hash', 'hash']","['Hash', 'hash']"
Security,"t results.; It uses the IMPROVE command of TMinuit (see TMinuit::mnimpr); This algorithm attempts to improve the found local minimum by; searching for a better one.; = ""R"" Use the Range specified in the function range; = ""N"" Do not store the graphics function, do not draw; = ""0"" Do not plot the result of the fit. By default the fitted function; is drawn unless the option ""N"" above is specified.; = ""+"" Add this new fitted function to the list of fitted functions; (by default, any previous function is deleted); = ""C"" In case of linear fitting, do not calculate the chisquare; (saves time); = ""F"" If fitting a polN, use the minuit fitter; = ""EX0"" When fitting a TGraphErrors do not consider errors in the coordinate; = ""ROB"" In case of linear fitting, compute the LTS regression; coefficients (robust (resistant) regression), using; the default fraction of good points; ""ROB=0.x"" - compute the LTS regression coefficients, using; 0.x as a fraction of good points; = ""S"" The result of the fit is returned in the TFitResultPtr; (see below Access to the Fit Result). When the fit is drawn (by default), the parameter goption may be used; to specify a list of graphics options. See TGraphPainter for a complete; list of these options. In order to use the Range option, one must first create a function; with the expression to be fitted. For example, if your graph; has a defined range between -4 and 4 and you want to fit a gaussian; only in the interval 1 to 3, you can do:; TF1 *f1 = new TF1(""f1"",""gaus"",1,3);; graph->Fit(""f1"",""R"");. Who is calling this function:. Note that this function is called when calling TGraphErrors::Fit; or TGraphAsymmErrors::Fit ot TGraphBentErrors::Fit; See the discussion below on error calulation. Linear fitting:. When the fitting function is linear (contains the ""++"" sign) or the fitting; function is a polynomial, a linear fitter is initialised.; To create a linear function, use the following syntax: linear parts; separated by ""++"" sign.; Example: to fit the para",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraph.html:22526,Access,Access,22526,root/html528/TGraph.html,https://root.cern,https://root.cern/root/html528/TGraph.html,3,['Access'],['Access']
Security,"t rid of internal nodes) the Decision tree to avoid overtraining; serveral different pruning methods can be applied as selected by the; variable ""fPruneMethod"". void ApplyValidationSample(const TMVA::DecisionTree::EventList* validationSample) const; run the validation sample through the (pruned) tree and fill in the nodes; the variables NSValidation and NBValidadtion (i.e. how many of the Signal; and Background events from the validation sample. This is then later used; when asking for the ""tree quality"" .. Double_t TestPrunedTreeQuality(const TMVA::DecisionTreeNode* dt = NULL, Int_t mode = 0) const; return the misclassification rate of a pruned tree; a ""pruned tree"" may have set the variable ""IsTerminal"" to ""arbitrary"" at; any node, hence this tree quality testing will stop there, hence test; the pruned tree (while the full tree is still in place for normal/later use). void CheckEventWithPrunedTree(const TMVA::Event& ) const; pass a single validation event throught a pruned decision tree; on the way down the tree, fill in all the ""intermediate"" information; that would normally be there from training. Double_t GetSumWeights(const TMVA::DecisionTree::EventList* validationSample) const; calculate the normalization factor for a pruning validation sample. UInt_t CountLeafNodes(TMVA::Node* n = NULL); return the number of terminal nodes in the sub-tree below Node n. void DescendTree(TMVA::Node* n = NULL); descend a tree to find all its leaf nodes. void PruneNode(TMVA::DecisionTreeNode* node); prune away the subtree below the node. void PruneNodeInPlace(TMVA::DecisionTreeNode* node); prune a node temporaily (without actually deleting its decendants; which allows testing the pruned tree quality for many different; pruning stages without ""touching"" the tree. TMVA::Node* GetNode(ULong_t sequence, UInt_t depth); retrieve node from the tree. Its position (up to a maximal tree depth of 64); is coded as a sequence of left-right moves starting from the root, coded as; 0-1 bit patt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__DecisionTree.html:11654,validat,validation,11654,root/html528/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html528/TMVA__DecisionTree.html,3,['validat'],['validation']
Security,"t string and set the init bits accordingly; Format is; dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>]; The <datasetdir> is mandatory.; See TDataSetManager::ParseInitOpts for the available; base options.; The base options are already initialized by the base constructor. const char * GetDataSetPath(const char* group, const char* user, const char* dsName, TString& md5path, Bool_t local = kFALSE); Returns path of the indicated dataset. The extension is '.root' for all files; except for 'dsName==ls' which have extension '.txt'.; If 'local' is kTRUE the local cache path is returned instead in the form; <cachedir>/<group>.<user>.<dsName>.<ext>.; NB: contains a static TString for result, so copy result before using twice. Int_t NotifyUpdate(const char* group, const char* user, const char* dspath, Long_t mtime, const char* checksum = 0); Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated; or created or modified dataset. For still existing datasets, fill the; modification date in seconds anf the checksum.; Returns 0 on success, -1 on error. Int_t CreateLsFile(const char* group, const char* user, Long_t& mtime, TString& checksum); Create or recreate the dataset lists for 'uri'.; The list are saved in text form in 'uri'/ls.txt for fast browsing and in; 'uri'/ls.root in form of TMacro for optimized and portable transfer.; Return 0 on success, 1 if the file was empty, -1 on error. Bool_t BrowseDataSets(const char* group, const char* user, const char* dsName, UInt_t option, TObject* target); Adds the dataset in the folder of group, user to the list in target.; If dsName is defined, only the information about the specified dataset; is processed. The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet.; Available options (to be .or.ed):; kPrint print the dataset content; kQuotaUpdate update quotas; kExport use export naming; kList get a list of dataset names. NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; N",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDataSetManagerFile.html:13765,checksum,checksum,13765,root/html534/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html534/TDataSetManagerFile.html,3,['checksum'],['checksum']
Security,"t string and set the init bits accordingly; Format is; dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>]; The <datasetdir> is mandatory.; See TDataSetManager::ParseInitOpts for the available; base options.; The base options are laready initialized by the base constructor. const char * GetDataSetPath(const char* group, const char* user, const char* dsName, TString& md5path, Bool_t local = kFALSE); Returns path of the indicated dataset. The extension is '.root' for all files; except for 'dsName==ls' which have extension '.txt'.; If 'local' is kTRUE the local cache path is returned instead in the form; <cachedir>/<group>.<user>.<dsName>.<ext>.; NB: contains a static TString for result, so copy result before using twice. Int_t NotifyUpdate(const char* group, const char* user, const char* dspath, Long_t mtime, const char* checksum = 0); Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated; or created or modified dataset. For still existing datasets, fill the; modification date in seconds anf the checksum.; Returns 0 on success, -1 on error. Int_t CreateLsFile(const char* group, const char* user, Long_t& mtime, TString& checksum); Create or recreate the dataset lists for 'uri'.; The list are saved in text form in 'uri'/ls.txt for fast browsing and in; 'uri'/ls.root in form of TMacro for optimized and portable transfer.; Return 0 on success, 1 if the file was empty, -1 on error. Bool_t BrowseDataSets(const char* group, const char* user, const char* dsName, UInt_t option, TObject* target); Adds the dataset in the folder of group, user to the list in target.; If dsName is defined, only the information about the specified dataset; is processed. The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet.; Available options (to be .or.ed):; kPrint print the dataset content; kQuotaUpdate update quotas; kExport use export naming; kList get a list of dataset names. NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; N",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManagerFile.html:13143,checksum,checksum,13143,root/html528/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html528/TDataSetManagerFile.html,3,['checksum'],['checksum']
Security,"t string& name); voidSetUpperLimit(double up); voidSetValue(double val); doubleUpperLimit() const; doubleValue() const. Data Members; private:. boolfConst; doublefError; boolfFix; boolfLoLimValid; doublefLoLimit; stringfName; unsigned intfNum; boolfUpLimValid; doublefUpLimit; doublefValue. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinuitParameter(); default constructor standard with value/error = 0. {}. MinuitParameter(unsigned int num, const string& name, double val); constructor for constant Parameter. {}. MinuitParameter(unsigned int num, const string& name, double val, double err); constructor for standard Parameter. {}. MinuitParameter(unsigned int num, const string& name, double val, double err, double min, double max); constructor for limited Parameter. ~MinuitParameter(); {}. MinuitParameter(const ROOT::Minuit2::MinuitParameter& par); {}. MinuitParameter& operator=(const ROOT::Minuit2::MinuitParameter& par). unsigned int Number() const; access methods. {return fNum;}. const std::string & GetName() const; new API returning a string. { return fName; }. const char * Name() const; return const char * for mantaining backward compatibility. {return fName.c_str();}. double Value() const; {return fValue;}. double Error() const; {return fError;}. void SetName(const string& name); interaction. { fName = name; }. void SetValue(double val); {fValue = val;}. void SetError(double err); {fError = err;}. void SetLimits(double low, double up). void SetUpperLimit(double up). void SetLowerLimit(double low). void RemoveLimits(). void Fix(); {fFix = true;}. void Release(); {fFix = false;}. bool IsConst() const; state of Parameter (fixed/const/limited). {return fConst;}. bool IsFixed() const; {return fFix;}. bool HasLimits() const; {return fLoLimValid || fUpLimValid; }. bool HasLowerLimit() const; {return fLoLimValid; }. bool HasUpperLimit() const; {return fUpLimValid; }. double LowerLimit() const; {return fLoLimit;}. double UpperLi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__MinuitParameter.html:2825,access,access,2825,root/html534/ROOT__Minuit2__MinuitParameter.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__MinuitParameter.html,3,['access'],['access']
Security,"t the TThreadedObject with initSlots empty slots and the ""model"" of the thread private objects. ; Parameters. initSlotsSet the initial number of slots of the TThreadedObject. . Template Parameters. ARGSArguments' class type of the constructor of T . Parameters. argsvariadic arguments. This form of the constructor is useful to manually pre-set the content of a given number of slots when used in combination with TThreadedObject::SetAtSlot(). ; Definition at line 167 of file TThreadedObject.hxx. ◆ TThreadedObject() [3/3]. template<class T > . template<class ... ARGS> . ROOT::TThreadedObject< T >::TThreadedObject ; (; ARGS &&... ; args). inline . Construct the TThreadedObject and the ""model"" of the thread private objects. ; Template Parameters. ARGSArguments of the constructor of T . Definition at line 184 of file TThreadedObject.hxx. Member Function Documentation. ◆ Get(). template<class T > . std::shared_ptr< T > ROOT::TThreadedObject< T >::Get ; (; ). inline . Access the pointer corresponding to the current slot. ; This method is not adequate for being called inside tight loops as it implies a lookup in a mapping between the threadIDs and the slot indices. A good practice consists in copying the pointer onto the stack and proceed with the loop as shown in this work item (psudo-code) which will be sent to different threads: auto workItem = [](){; auto objPtr = tthreadedObject.Get();; for (auto i : ROOT::TSeqI(1000)) {; // tthreadedObject->FastMethod(i); // don't do this! Inefficient!; objPtr->FastMethod(i);; }; }; ROOT::TSeqA pseudo container class which is a generator of indices.Definition TSeq.hxx:67; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4. Definition at line 280 of file TThreadedObject.hxx. ◆ GetAtSlot(). template<class T > . std::shared_ptr< T > ROOT::TThreadedObject< T >::GetAtSlot ; (; unsigned ; i). inline . Access a particular processing slot. ; This method i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TThreadedObject.html:4811,Access,Access,4811,doc/v632/classROOT_1_1TThreadedObject.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TThreadedObject.html,2,['Access'],['Access']
Security,"t the center of bins of this histogram.Definition TH1.cxx:3192; TH1::SetBarWidthvirtual void SetBarWidth(Float_t width=0.5)Set the width of bars as fraction of the bin width for drawing mode ""B"".Definition TH1.h:365; TH1::BufferEmptyvirtual Int_t BufferEmpty(Int_t action=0)Fill histogram with all entries in the buffer.Definition TH1.cxx:1414; TH1::SetStatsvirtual void SetStats(Bool_t stats=kTRUE)Set statistics option on/off.Definition TH1.cxx:8990; TH1::GetKurtosisvirtual Double_t GetKurtosis(Int_t axis=1) constDefinition TH1.cxx:7744; TH2D2-D histogram with a double per channel (see TH1 documentation)Definition TH2.h:357; THLimitsFinder::GetLimitsFinderstatic THLimitsFinder * GetLimitsFinder()Return pointer to the current finder.Definition THLimitsFinder.cxx:153; THLimitsFinder::FindGoodLimitsvirtual Int_t FindGoodLimits(TH1 *h, Double_t xmin, Double_t xmax)Compute the best axis limits for the X axis.Definition THLimitsFinder.cxx:53; THashListTHashList implements a hybrid collection class consisting of a hash table and a list to store TObject...Definition THashList.h:34; THashList::Clearvoid Clear(Option_t *option="""") overrideRemove all objects from the list.Definition THashList.cxx:189; TIterDefinition TCollection.h:235; TListA doubly linked list.Definition TList.h:38; TList::Streamervoid Streamer(TBuffer &) overrideStream all objects in the collection to or from the I/O buffer.Definition TList.cxx:1189; TList::FindObjectTObject * FindObject(const char *name) const overrideFind an object in this list using its name.Definition TList.cxx:576; TList::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRemove object from this collection and recursively remove the object from all other objects (and coll...Definition TList.cxx:762; TList::Addvoid Add(TObject *obj) overrideDefinition TList.h:83; TList::RemoveTObject * Remove(TObject *obj) overrideRemove object from the list.Definition TList.cxx:820; TList::FirstTObject * First() const overrideReturn the first object",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:462213,hash,hash,462213,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['hash'],['hash']
Security,"t the next 40 entries pass, then stop processing"". If a range node hangs from a filter node,; 542and the range has a `begin` parameter of 10, that means the range will skip the first 10 entries *that pass the; 543preceding filter*.; 544 ; 545Ranges allow ""early quitting"": if all branches of execution of a functional graph reached their `end` value of; 546processed entries, the event-loop is immediately interrupted. This is useful for debugging and quick data explorations.; 547 ; 548\anchor custom-columns; 549### Custom columns; 550Custom columns are created by invoking `Define(name, f, columnList)`. As usual, `f` can be any callable object; 551(function, lambda expression, functor class...); it takes the values of the columns listed in `columnList` (a list of; 552strings) as parameters, in the same order as they are listed in `columnList`. `f` must return the value that will be; 553assigned to the temporary column.; 554 ; 555A new variable is created called `name`, accessible as if it was contained in the dataset from subsequent; 556transformations/actions.; 557 ; 558Use cases include:; 559- caching the results of complex calculations for easy and efficient multiple access; 560- extraction of quantities of interest from complex objects; 561- branch aliasing, i.e. changing the name of a branch; 562 ; 563An exception is thrown if the `name` of the new column/branch is already in use for another branch in the TTree.; 564 ; 565It is also possible to specify the quantity to be stored in the new temporary column as a C++ expression with the method; 566`Define(name, expression)`. For example this invocation; 567 ; 568~~~{.cpp}; 569df.Define(""pt"", ""sqrt(px*px + py*py)"");; 570~~~; 571 ; 572will create a new column called ""pt"" the value of which is calculated starting from the columns px and py. The system; 573builds a just-in-time compiled function starting from the expression after having deduced the list of necessary branches; 574from the names of the variables specified by",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:34164,access,accessible,34164,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['access'],['accessible']
Security,"t the next 40 entries pass, then stop processing"". If a range node hangs from a filter node,; 582and the range has a `begin` parameter of 10, that means the range will skip the first 10 entries *that pass the; 583preceding filter*.; 584 ; 585Ranges allow ""early quitting"": if all branches of execution of a functional graph reached their `end` value of; 586processed entries, the event-loop is immediately interrupted. This is useful for debugging and quick data explorations.; 587 ; 588\anchor custom-columns; 589### Custom columns; 590Custom columns are created by invoking `Define(name, f, columnList)`. As usual, `f` can be any callable object; 591(function, lambda expression, functor class...); it takes the values of the columns listed in `columnList` (a list of; 592strings) as parameters, in the same order as they are listed in `columnList`. `f` must return the value that will be; 593assigned to the temporary column.; 594 ; 595A new variable is created called `name`, accessible as if it was contained in the dataset from subsequent; 596transformations/actions.; 597 ; 598Use cases include:; 599- caching the results of complex calculations for easy and efficient multiple access; 600- extraction of quantities of interest from complex objects; 601- branch aliasing, i.e. changing the name of a branch; 602 ; 603An exception is thrown if the `name` of the new column/branch is already in use for another branch in the TTree.; 604 ; 605It is also possible to specify the quantity to be stored in the new temporary column as a C++ expression with the method; 606`Define(name, expression)`. For example this invocation; 607 ; 608~~~{.cpp}; 609df.Define(""pt"", ""sqrt(px*px + py*py)"");; 610~~~; 611 ; 612will create a new column called ""pt"" the value of which is calculated starting from the columns px and py. The system; 613builds a just-in-time compiled function starting from the expression after having deduced the list of necessary branches; 614from the names of the variables specified by",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:35804,access,accessible,35804,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['access'],['accessible']
Security,"t to obtain the order of an array's elements into; an index in order to do more useful things than the standard built; in functions.; *arr1 is unchanged;; *arr2 is the array of indicies corresponding to the decending value; of arr1 with arr2[0] corresponding to the largest arr1 value and; arr2[Narr] the smallest. Author: Adrian Bevan (bevan@slac.stanford.edu). void BubbleLow(Int_t Narr, Double_t* arr1, Int_t* arr2); Opposite ordering of the array arr2[] to that of BubbleHigh. Author: Adrian Bevan (bevan@slac.stanford.edu). ULong_t Hash(const void* txt, Int_t ntxt); Calculates hash index from any char string.; Based on precalculated table of 256 specially selected numbers.; These numbers are selected in such a way, that for string; length == 4 (integer number) the hash is unambigous, i.e.; from hash value we can recalculate input (no degeneration). The quality of hash method is good enough, that; ""random"" numbers made as R = Hash(1), Hash(2), ...Hash(N); tested by <R>, <R*R>, <Ri*Ri+1> gives the same result; as for libc rand(). For string: i = TMath::Hash(string,nstring);; For int: i = TMath::Hash(&intword,sizeof(int));; For pointer: i = TMath::Hash(&pointer,sizeof(void*));. V.Perev; This function is kept for back compatibility. The code previously in this function; has been moved to the static function TString::Hash. ULong_t Hash(const char* str). Double_t BesselI0(Double_t x); Compute the modified Bessel function I_0(x) for any real x. --- NvE 12-mar-2000 UU-SAP Utrecht. Double_t BesselK0(Double_t x); Compute the modified Bessel function K_0(x) for positive real x. M.Abramowitz and I.A.Stegun, Handbook of Mathematical Functions,; Applied Mathematics Series vol. 55 (1964), Washington. --- NvE 12-mar-2000 UU-SAP Utrecht. Double_t BesselI1(Double_t x); Compute the modified Bessel function I_1(x) for any real x. M.Abramowitz and I.A.Stegun, Handbook of Mathematical Functions,; Applied Mathematics Series vol. 55 (1964), Washington. --- NvE 12-mar-2000 UU-SAP Utrecht. Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMath.html:24673,Hash,Hash,24673,root/html528/TMath.html,https://root.cern,https://root.cern/root/html528/TMath.html,6,['Hash'],['Hash']
Security,"t two differing bytes (treated as unsigned char values,; so that `\200' is greater than `\0', for example). Zero-length; strings are always identical. int CompareTo(const TString& st, TString::ECaseCompare cmp = kExact) const; Compare a string to another string. Returns returns zero if the two; strings are identical, otherwise returns the difference between; the first two differing bytes (treated as unsigned char values,; so that `\200' is greater than `\0', for example). Zero-length; strings are always identical. Int_t CountChar(Int_t c) const; Return number of times character c occurs in the string. TString Copy() const; Copy a string. Ssiz_t First(char c) const; Find first occurrence of a character c. Ssiz_t First(const char* cs) const; Find first occurrence of a character in cs. UInt_t HashCase() const; Return a case-sensitive hash value (endian independent). UInt_t HashFoldCase() const; Return a case-insensitive hash value (endian independent). UInt_t Hash(TString::ECaseCompare cmp = kExact) const; Return hash value. UInt_t Hash(const void* txt, Int_t ntxt); Calculates hash index from any char string. (static function); Based on precalculated table of 256 specially selected numbers.; These numbers are selected in such a way, that for string; length == 4 (integer number) the hash is unambigous, i.e.; from hash value we can recalculate input (no degeneration). The quality of hash method is good enough, that; ""random"" numbers made as R = Hash(1), Hash(2), ...Hash(N); tested by <R>, <R*R>, <Ri*Ri+1> gives the same result; as for libc rand(). For string: i = TString::Hash(string,nstring);; For int: i = TString::Hash(&intword,sizeof(int));; For pointer: i = TString::Hash(&pointer,sizeof(void*));. V.Perev. Ssiz_t Index(const char* pat, Ssiz_t patlen, Ssiz_t i, TString::ECaseCompare cmp) const; Search for a string in the TString. Plen is the length of pattern,; startIndex is the index from which to start and cmp selects the type; of case-comparison. Ssiz_t Last(char c)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TString.html:10602,Hash,Hash,10602,root/html530/TString.html,https://root.cern,https://root.cern/root/html530/TString.html,4,"['Hash', 'hash']","['Hash', 'hash']"
Security,"t two differing bytes (treated as unsigned char values,; so that `\200' is greater than `\0', for example). Zero-length; strings are always identical. int CompareTo(const TString& st, TString::ECaseCompare cmp = kExact) const; Compare a string to another string. Returns returns zero if the two; strings are identical, otherwise returns the difference between; the first two differing bytes (treated as unsigned char values,; so that `\200' is greater than `\0', for example). Zero-length; strings are always identical. Int_t CountChar(Int_t c) const; Return number of times character c occurs in the string. TString Copy() const; Copy a string. Ssiz_t First(char c) const; Find first occurrence of a character c. Ssiz_t First(const char* cs) const; Find first occurrence of a character in cs. UInt_t HashCase() const; Return a case-sensitive hash value (endian independent). UInt_t HashFoldCase() const; Return a case-insensitive hash value (endian independent). UInt_t Hash(TString::ECaseCompare cmp = kExact) const; Return hash value. UInt_t Hash(const void* txt, Int_t ntxt); Calculates hash index from any char string. (static function); For string: i = TString::Hash(string,nstring);; For int: i = TString::Hash(&intword,sizeof(int));; For pointer: i = TString::Hash(&pointer,sizeof(void*));. This employs two different hash functions, depending on ntxt:; ntxt == sizeof(void*): a simple bitwise xor to get fast pointer hashes; else: MurmurHash3_x64_128 http://code.google.com/p/smhasher. Ssiz_t Index(const char* pat, Ssiz_t patlen, Ssiz_t i, TString::ECaseCompare cmp) const; Search for a string in the TString. Plen is the length of pattern,; startIndex is the index from which to start and cmp selects the type; of case-comparison. Ssiz_t Last(char c) const; Find last occurrence of a character c. TString MD5() const; Return the MD5 digest for this string, in a string representation. Bool_t MaybeRegexp() const; Returns true if string contains one of the regexp characters ""^$.[]*+?"". Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TString.html:11281,Hash,Hash,11281,root/html534/TString.html,https://root.cern,https://root.cern/root/html534/TString.html,6,"['Hash', 'hash']","['Hash', 'hash']"
Security,"t uid); static voidSetUpSSL(const char* cafile, const char* capath, const char* ucert, const char* ukey); voidTSocket::SetUrl(const char* url); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTSocket::Touch(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TSSLSocket(); Bool_tTSocket::Authenticate(const char* user); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); Bool_tTSocket::RecvProcessIDs(TMessage* mess); Bool_tTSocket::RecvStreamerInfos(TMessage* mess); voidTSocket::SendProcessIDs(const TMessage& mess); voidTSocket::SendStreamerInfos(const TMessage& mess); voidTSocket::SetDescriptor(Int_t desc). private:. voidWrapWithSSL(). Data Members; public:. enum TSocket::EStatusBits { kIsUnix; kBrokenConn; };; enum TSocket::EInterest { kRead; kWrite; };; enum TSocket::EServiceType { kSOCKD; kROOTD; kPROOFD; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TInetAddressTSocket::fAddressremote internet address and port #; TBitsTSocket::fBitsInfobits array to mark TStreamerInfo classes already sent; UInt_tTSocket::fBytesRecvtotal bytes received over this socket; UInt_tTSocket::fBytesSenttotal bytes sent using this socket; Int_tTSocket::fCompressCompression level an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSSLSocket.html:8025,Authenticat,Authenticate,8025,root/html532/TSSLSocket.html,https://root.cern,https://root.cern/root/html532/TSSLSocket.html,1,['Authenticat'],['Authenticate']
Security,"t value, Int_t base);; 466 static TString BaseConvert(const TString& s_in, Int_t base_in, Int_t base_out); // Converts string from base base_in to base base_out (supported bases 2-36); 467 static TString Format(const char *fmt, ...); 468#if defined(__GNUC__); 469 __attribute__((format(printf, 1, 2))); 470#endif; 471 ;; 472 ; 473 ClassDef(TString,2) //Basic string class; 474};; 475 ; 476// Related global functions; 477std::istream &operator>>(std::istream &str, TString &s);; 478std::ostream &operator<<(std::ostream &str, const TString &s);; 479#if defined(R__TEMPLATE_OVERLOAD_BUG); 480template <>; 481#endif; 482TBuffer &operator>>(TBuffer &buf, TString *&sp);; 483TBuffer &operator<<(TBuffer &buf, const TString * sp);; 484 ; 485// Conversion operator (per se).; 486inline std::string& operator+=(std::string &left, const TString &right); 487{; 488 return left.append(right.Data());; 489}; 490 ; 491TString ToLower(const TString &s); // Return lower-case version of argument; 492TString ToUpper(const TString &s); // Return upper-case version of argument; 493 ; 494inline UInt_t Hash(const TString &s) { return s.Hash(); }; 495inline UInt_t Hash(const TString *s) { return s->Hash(); }; 496 UInt_t Hash(const char *s);; 497 ; 498extern char *Form(const char *fmt, ...) // format in circular buffer; 499#if defined(__GNUC__); 500__attribute__((format(printf, 1, 2))); 501#endif; 502;; 503extern void Printf(const char *fmt, ...) // format and print; 504#if defined(__GNUC__); 505__attribute__((format(printf, 1, 2))); 506#endif; 507;; 508extern char *Strip(const char *str, char c = ' '); // strip c off str, free with delete []; 509extern char *StrDup(const char *str); // duplicate str, free with delete []; 510extern char *Compress(const char *str); // remove blanks from string, free with delele []; 511extern int EscChar(const char *src, char *dst, int dstlen, char *specchars,; 512 char escchar); // copy from src to dst escaping specchars by escchar; 513extern int UnEscChar(const char *s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8h_source.html:20827,Hash,Hash,20827,doc/master/TString_8h_source.html,https://root.cern,https://root.cern/doc/master/TString_8h_source.html,1,['Hash'],['Hash']
Security,"t when library is load...Definition RWebWindowsManager.cxx:105; ROOT::RWebWindowsManager::Instancestatic std::shared_ptr< RWebWindowsManager > & Instance()Returns default window manager Used to display all standard ROOT elements like TCanvas or TFitPanel.Definition RWebWindowsManager.cxx:79; ROOT::RWebWindowsManager::InformListenerbool InformListener(const std::string &msg)If ROOT_LISTENER_SOCKET variable is configured, message will be sent to that unix socket.Definition RWebWindowsManager.cxx:299; ROOT::RWebWindowsManager::fLaunchTmoutfloat fLaunchTmout! timeout in seconds to start browser process, default 30sDefinition RWebWindowsManager.hxx:53; ROOT::RWebWindowsManager::GetServerLocationsstatic std::map< std::string, std::string > GetServerLocations()Returns server locations as <std::string, std::string> Key is location name (with slash at the end) a...Definition RWebWindowsManager.cxx:209; ROOT::RWebWindowsManager::GetUrlstd::string GetUrl(RWebWindow &win, bool remote=false, std::string *produced_key=nullptr)Provide URL address to access specified window from inside or from remote.Definition RWebWindowsManager.cxx:686; ROOT::RWebWindowsManager::Unregistervoid Unregister(RWebWindow &win)Release all references to specified window Called from RWebWindow destructor.Definition RWebWindowsManager.cxx:674; ROOT::RWebWindowsManager::IsLoopbackModestatic bool IsLoopbackMode()Returns true if loopback mode used by THttpServer for web widgets.Definition RWebWindowsManager.cxx:147; ROOT::RWebWindowsManager::CreateWindowstd::shared_ptr< RWebWindow > CreateWindow()Creates new window To show window, RWebWindow::Show() have to be called.Definition RWebWindowsManager.cxx:619; TExecTExec is a utility class that can be used to execute a C++ command when some event happens in a pad.Definition TExec.h:26; THttpServerOnline http server for arbitrary ROOT application.Definition THttpServer.h:31; THttpWSHandlerClass for user-side handling of websocket with THttpServer.Definition THttpWS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebWindowsManager_8hxx_source.html:13075,access,access,13075,doc/master/RWebWindowsManager_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RWebWindowsManager_8hxx_source.html,1,['access'],['access']
Security,"t will check as well whether the document is well formated. ;  . Private Attributes; _xmlSAXHandler * fSAXHandler;  libxml2 SAX handler ;  . Friends; class TSAXParserCallback;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TXMLParser; virtual void InitializeContext ();  Initialize parser parameters, such as, disactivate non-standards libxml1 features, on/off validation, clear error and warning messages. ;  ; virtual void OnValidateError (const TString &message);  This function is called when an error from the parser has occurred. ;  ; virtual void OnValidateWarning (const TString &message);  This function is called when a warning from the parser has occurred. ;  ; virtual void ReleaseUnderlying ();  To release any existing document. ;  ; virtual void SetParseCode (Int_t code);  Set the parse code: ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSAXParser.html:16714,validat,validation,16714,doc/master/classTSAXParser.html,https://root.cern,https://root.cern/doc/master/classTSAXParser.html,1,['validat'],['validation']
Security,"t x);  ; virtual void SetY (Double_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TText. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to cu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLatex.html:16772,Hash,Hash,16772,doc/master/classTLatex.html,https://root.cern,https://root.cern/doc/master/classTLatex.html,12,"['Hash', 'hash']","['Hash', 'hash']"
Security,"t { kRead; kWrite; };; enum TSocket::EServiceType { kSOCKD; kROOTD; kPROOFD; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TInetAddressTSocket::fAddressremote internet address and port #; TBitsTSocket::fBitsInfobits array to mark TStreamerInfo classes already sent; UInt_tTSocket::fBytesRecvtotal bytes received over this socket; UInt_tTSocket::fBytesSenttotal bytes sent using this socket; Int_tTSocket::fCompressCompression level and algorithm; TTimeStampTSocket::fLastUsageTime stamp of last usage; TVirtualMutex*TSocket::fLastUsageMtxProtect last usage setting / reading; TInetAddressTSocket::fLocalAddresslocal internet address and port #; TStringTNamed::fNameobject identifier; Int_tTSocket::fRemoteProtocolprotocol of remote daemon; TSecContext*TSocket::fSecContextafter a successful Authenticate call; TSocket::EServiceTypeTSocket::fServTyperemote service type; TStringTSocket::fServicename of service (matches remote port #); Int_tTSocket::fSocketsocket descriptor; Int_tTSocket::fTcpWindowSizeTCP window size (default 65535);; TStringTNamed::fTitleobject title; TList*TSocket::fUUIDslist of TProcessIDs already sent through the socket; TStringTSocket::fUrlneeds this for special authentication options; static ULong64_tTSocket::fgBytesRecvtotal bytes received by all socket objects; static ULong64_tTSocket::fgBytesSenttotal bytes sent by all socket objects; static Int_tTSocket::fgClientProtocolclient ""protocol"" version. private:. Int_t*fReadBytesLeftbytes left to read for specified socket; TMonitor*fReadMonitormonitor read from parallel sockets; char**fReadPtrpointer to read buffer for specified socket; Int_tfSizenumber of parallel sockets; TSocket**fSocketsarray of parallel sockets; Int_t*fWriteBytesLeftbytes left to write for specified socket; TMonitor*fWr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPSocket.html:9785,Authenticat,Authenticate,9785,root/html530/TPSocket.html,https://root.cern,https://root.cern/root/html530/TPSocket.html,6,"['Authenticat', 'authenticat']","['Authenticate', 'authentication']"
Security,"t { kRead; kWrite; };; enum TSocket::EServiceType { kSOCKD; kROOTD; kPROOFD; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TInetAddressTSocket::fAddressremote internet address and port #; TBitsTSocket::fBitsInfobits array to mark TStreamerInfo classes already sent; UInt_tTSocket::fBytesRecvtotal bytes received over this socket; UInt_tTSocket::fBytesSenttotal bytes sent using this socket; Int_tTSocket::fCompressCompression level and algorithm; TTimeStampTSocket::fLastUsageTime stamp of last usage; TVirtualMutex*TSocket::fLastUsageMtxProtect last usage setting / reading; TInetAddressTSocket::fLocalAddresslocal internet address and port #; TStringTNamed::fNameobject identifier; Int_tTSocket::fRemoteProtocolprotocol of remote daemon; TSecContext*TSocket::fSecContextafter a successful Authenticate call; TSocket::EServiceTypeTSocket::fServTyperemote service type; TStringTSocket::fServicename of service (matches remote port #); Int_tTSocket::fSocketsocket descriptor; Int_tTSocket::fTcpWindowSizeTCP window size (default 65535);; TStringTNamed::fTitleobject title; TList*TSocket::fUUIDslist of TProcessIDs already sent through the socket; TStringTSocket::fUrlneeds this for special authentication options; static ULong64_tTSocket::fgBytesRecvtotal bytes received by all socket objects; static ULong64_tTSocket::fgBytesSenttotal bytes sent by all socket objects; static Int_tTSocket::fgClientProtocolclient ""protocol"" version. private:. Int_tfTcpWindowSizesize of tcp window (for window scaling). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPServerSocket(Int_t port, Bool_t reuse = kFALSE, Int_t backlog = kDefaultBacklog, Int_t tcpwindowsize = -1); Create a parallel server socket object on a specified port. Set reuse; to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPServerSocket.html:9909,Authenticat,Authenticate,9909,root/html530/TPServerSocket.html,https://root.cern,https://root.cern/root/html530/TPServerSocket.html,6,"['Authenticat', 'authenticat']","['Authenticate', 'authentication']"
Security,"t { kRead; kWrite; };; enum TSocket::EServiceType { kSOCKD; kROOTD; kPROOFD; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TInetAddressTSocket::fAddressremote internet address and port #; TBitsTSocket::fBitsInfobits array to mark TStreamerInfo classes already sent; UInt_tTSocket::fBytesRecvtotal bytes received over this socket; UInt_tTSocket::fBytesSenttotal bytes sent using this socket; Int_tTSocket::fCompressCompression level and algorithm; TTimeStampTSocket::fLastUsageTime stamp of last usage; TVirtualMutex*TSocket::fLastUsageMtxProtect last usage setting / reading; TInetAddressTSocket::fLocalAddresslocal internet address and port #; TStringTNamed::fNameobject identifier; Int_tTSocket::fRemoteProtocolprotocol of remote daemon; TSecContext*TSocket::fSecContextafter a successful Authenticate call; TSocket::EServiceTypeTSocket::fServTyperemote service type; TStringTSocket::fServicename of service (matches remote port #); Int_tTSocket::fSocketsocket descriptor; Int_tTSocket::fTcpWindowSizeTCP window size (default 65535);; TStringTNamed::fTitleobject title; TList*TSocket::fUUIDslist of TProcessIDs already sent through the socket; TStringTSocket::fUrlneeds this for special authentication options; static ULong64_tTSocket::fgBytesRecvtotal bytes received by all socket objects; static ULong64_tTSocket::fgBytesSenttotal bytes sent by all socket objects; static Int_tTSocket::fgClientProtocolclient ""protocol"" version. private:. TMutex*fAMtxTo protect async msg queue; list<TXSockBuf*>fAQuelist of asynchronous messages; TSemaphorefASemControl access to conn async msg queue; Bool_tfAWaitkTRUE if waiting at the async msg queue; TSemaphorefAsynProcControl actions while processing async messages; TXSockBuf*fBufCurcurrent read buffer; TStringfBufferContainer for ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TXSocket.html:10401,Authenticat,Authenticate,10401,root/html530/TXSocket.html,https://root.cern,https://root.cern/root/html530/TXSocket.html,6,"['Authenticat', 'authenticat']","['Authenticate', 'authentication']"
Security,"t { kRead; kWrite; };; enum TSocket::EServiceType { kSOCKD; kROOTD; kPROOFD; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TInetAddressTSocket::fAddressremote internet address and port #; TBitsTSocket::fBitsInfobits array to mark TStreamerInfo classes already sent; UInt_tTSocket::fBytesRecvtotal bytes received over this socket; UInt_tTSocket::fBytesSenttotal bytes sent using this socket; Int_tTSocket::fCompressCompression level and algorithm; TTimeStampTSocket::fLastUsageTime stamp of last usage; TVirtualMutex*TSocket::fLastUsageMtxProtect last usage setting / reading; TInetAddressTSocket::fLocalAddresslocal internet address and port #; TStringTNamed::fNameobject identifier; Int_tTSocket::fRemoteProtocolprotocol of remote daemon; TSecContext*TSocket::fSecContextafter a successful Authenticate call; TSocket::EServiceTypeTSocket::fServTyperemote service type; TStringTSocket::fServicename of service (matches remote port #); Int_tTSocket::fSocketsocket descriptor; Int_tTSocket::fTcpWindowSizeTCP window size (default 65535);; TStringTNamed::fTitleobject title; TList*TSocket::fUUIDslist of TProcessIDs already sent through the socket; TStringTSocket::fUrlneeds this for special authentication options; static ULong64_tTSocket::fgBytesRecvtotal bytes received by all socket objects; static ULong64_tTSocket::fgBytesSenttotal bytes sent by all socket objects; static Int_tTSocket::fgClientProtocolclient ""protocol"" version. private:. TSeqCollection*fSecContextsList of TSecContext with cleanup info; static UChar_tfgAcceptOptDefault accept options; static void*fgSrvAuthClupHook; static void*fgSrvAuthHook. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TServerSocket(const char* service, Bool_t reuse = kFALSE, Int_t backlo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TServerSocket.html:9592,Authenticat,Authenticate,9592,root/html530/TServerSocket.html,https://root.cern,https://root.cern/root/html530/TServerSocket.html,6,"['Authenticat', 'authenticat']","['Authenticate', 'authentication']"
Security,"t { kRead; kWrite; };; enum TSocket::EServiceType { kSOCKD; kROOTD; kPROOFD; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TInetAddressTSocket::fAddressremote internet address and port #; TBitsTSocket::fBitsInfobits array to mark TStreamerInfo classes already sent; UInt_tTSocket::fBytesRecvtotal bytes received over this socket; UInt_tTSocket::fBytesSenttotal bytes sent using this socket; Int_tTSocket::fCompressCompression level and algorithm; TTimeStampTSocket::fLastUsageTime stamp of last usage; TVirtualMutex*TSocket::fLastUsageMtxProtect last usage setting / reading; TInetAddressTSocket::fLocalAddresslocal internet address and port #; TStringTNamed::fNameobject identifier; Int_tTSocket::fRemoteProtocolprotocol of remote daemon; TSecContext*TSocket::fSecContextafter a successful Authenticate call; TSocket::EServiceTypeTSocket::fServTyperemote service type; TStringTSocket::fServicename of service (matches remote port #); Int_tTSocket::fSocketsocket descriptor; Int_tTSocket::fTcpWindowSizeTCP window size (default 65535);; TStringTNamed::fTitleobject title; TList*TSocket::fUUIDslist of TProcessIDs already sent through the socket; TStringTSocket::fUrlneeds this for special authentication options; static ULong64_tTSocket::fgBytesRecvtotal bytes received by all socket objects; static ULong64_tTSocket::fgBytesSenttotal bytes sent by all socket objects; static Int_tTSocket::fgClientProtocolclient ""protocol"" version. private:. list<Int_t>fClientIDs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TXUnixSocket(const char* u, Int_t psid = -1, Char_t ver = -1, TXHandler* handler = 0, int fd = -1); Constructor. Int_t Reconnect(); Try reconnection after failure. virtual ~TXUnixSocket(); { fSessionID = -1; }. Int_t Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TXUnixSocket.html:10593,Authenticat,Authenticate,10593,root/html530/TXUnixSocket.html,https://root.cern,https://root.cern/root/html530/TXUnixSocket.html,6,"['Authenticat', 'authenticat']","['Authenticate', 'authentication']"
Security,"t { kRead; kWrite; };; enum TSocket::EServiceType { kSOCKD; kROOTD; kPROOFD; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TInetAddressTSocket::fAddressremote internet address and port #; TBitsTSocket::fBitsInfobits array to mark TStreamerInfo classes already sent; UInt_tTSocket::fBytesRecvtotal bytes received over this socket; UInt_tTSocket::fBytesSenttotal bytes sent using this socket; Int_tTSocket::fCompressCompression level and algorithm; TTimeStampTSocket::fLastUsageTime stamp of last usage; TVirtualMutex*TSocket::fLastUsageMtxProtect last usage setting / reading; TInetAddressTSocket::fLocalAddresslocal internet address and port #; TStringTNamed::fNameobject identifier; Int_tTSocket::fRemoteProtocolprotocol of remote daemon; TSecContext*TSocket::fSecContextafter a successful Authenticate call; TSocket::EServiceTypeTSocket::fServTyperemote service type; TStringTSocket::fServicename of service (matches remote port #); Int_tTSocket::fSocketsocket descriptor; Int_tTSocket::fTcpWindowSizeTCP window size (default 65535);; TStringTNamed::fTitleobject title; TList*TSocket::fUUIDslist of TProcessIDs already sent through the socket; TStringTSocket::fUrlneeds this for special authentication options; static ULong64_tTSocket::fgBytesRecvtotal bytes received by all socket objects; static ULong64_tTSocket::fgBytesSenttotal bytes sent by all socket objects; static Int_tTSocket::fgClientProtocolclient ""protocol"" version. private:. ssl_st*fSSL; ssl_ctx_st*fSSLCtx; static charfgSSLCAFile[2147483647]; static charfgSSLCAPath[2147483647]; static charfgSSLUCert[2147483647]; static charfgSSLUKey[2147483647]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void WrapWithSSL(void); Wraps the socket with OpenSSL. TSSLSocket(TIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSSLSocket.html:9566,Authenticat,Authenticate,9566,root/html532/TSSLSocket.html,https://root.cern,https://root.cern/root/html532/TSSLSocket.html,4,"['Authenticat', 'authenticat']","['Authenticate', 'authentication']"
Security,"t  RComputeGlobalBin<-1, NDIMS, BINS, AXES >;  ; struct  RComputeGlobalBinRaw;  Recursively computes a zero-based global bin index, given... More...;  ; struct  RComputeGlobalBinRaw<-1, NDIMS, BINS, AXES, BINTYPE >;  ; struct  RComputeLocalBins;  Recursively computes the number of regular bins before the current dimension, as well as the number of under- and overflow bins left to account for, after the current dimension. More...;  ; struct  RComputeLocalBins< 0, NDIMS, AXES >;  ; struct  RComputeLocalBinsInitialisation;  Recursively compute some quantities needed for ComputeLocalBins, namely the total number of bins per hyperplane (overflow and regular) and the number of regular bins per hyperplane on the hyperplanes that have them. More...;  ; struct  RComputeLocalBinsInitialisation< 0, NDIMS, AXES >;  ; struct  RComputeLocalBinsRaw;  Recursively computes zero-based local bin indices, given... More...;  ; struct  RComputeLocalBinsRaw<-1, NDIMS, BINS, AXES, BINTYPE >;  ; class  RDaosContainer;  A RDaosContainer provides read/write access to objects in a given container. More...;  ; struct  RDaosEventQueue;  ; class  RDaosNTupleAnchor;  Entry point for an RNTuple in a DAOS container. More...;  ; class  RDaosObject;  Provides low-level access to DAOS objects in a container. More...;  ; class  RDaosPool;  A RDaosPool provides access to containers in a specific DAOS pool. More...;  ; class  RDirectoryEntry;  ; class  RExtraTypeInfoDescriptorBuilder;  A helper class for piece-wise construction of an RExtraTypeInfoDescriptor. More...;  ; class  RFieldDescriptorBuilder;  A helper class for piece-wise construction of an RFieldDescriptor. More...;  ; struct  RFieldRepresentationModifier;  ; class  RFileSharedPtrCtor;  ; class  RFileStorageInterface;  Base class for RFile storage backends. More...;  ; struct  RFillIterRange;  Recursively fills the ranges of all axes, excluding under- and overflow. More...;  ; struct  RFillIterRange<-1, AXES >;  ; struct  RFindLocalBins;  Find ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Experimental_1_1Internal.html:2878,access,access,2878,doc/master/namespaceROOT_1_1Experimental_1_1Internal.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Experimental_1_1Internal.html,1,['access'],['access']
Security,"t! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; RooCategoryProxy_indexCatIndex category; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooSimultaneous.html:41007,access,access,41007,root/html534/RooSimultaneous.html,https://root.cern,https://root.cern/root/html534/RooSimultaneous.html,1,['access'],['access']
Security,"t! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooRealProxy_nNumber of expected events; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooExtendedTerm.html:40008,access,access,40008,root/html534/RooExtendedTerm.html,https://root.cern,https://root.cern/root/html534/RooExtendedTerm.html,2,['access'],['access']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsCachedReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsCachedReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; Bool_tgetCdfBoundaries() const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet* depList) const; virtual Option_t*TObject::GetDrawOption() const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCachedReal.html:12257,hash,hash,12257,root/html534/RooCachedReal.html,https://root.cern,https://root.cern/root/html534/RooCachedReal.html,3,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsCachedReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsCachedReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet* depList) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsSelfCachedReal.html:12660,hash,hash,12660,root/html534/RooAbsSelfCachedReal.html,https://root.cern,https://root.cern/root/html534/RooAbsSelfCachedReal.html,9,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooAbsReal&RooAbsOptTestStatistic::function(); const RooAbsReal&RooAbsOptTestStatistic::function() const; RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooChi2Var.html:14229,hash,hash,14229,root/html534/RooChi2Var.html,https://root.cern,https://root.cern/root/html534/RooChi2Var.html,12,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooAbsReal&function(); const RooAbsReal&function() const; RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsOptTestStatistic.html:13073,hash,hash,13073,root/html534/RooAbsOptTestStatistic.html,https://root.cern,https://root.cern/root/html534/RooAbsOptTestStatistic.html,3,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet* depList) const; virtual Option_t*TObject::GetDrawOption()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/Roo1DMomentMorphFunction.html:12124,hash,hash,12124,root/html534/Roo1DMomentMorphFunction.html,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html,147,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; static Int_tgetCacheAllNumeric(); Bool_tgetCacheNumeric(); RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooRealIntegral.html:11768,hash,hash,11768,root/html534/RooRealIntegral.html,https://root.cern,https://root.cern/root/html534/RooRealIntegral.html,3,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tgetAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet* depList) const; virtual Option_t*TObject::GetDrawOption() const; stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/PiecewiseInterpolation.html:12125,hash,hash,12125,root/html534/PiecewiseInterpolation.html,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html,3,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tgetAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; Bool_tgetCdfBoundaries() const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet* depList) const; virtual Option_t*TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooHistFunc.html:12348,hash,hash,12348,root/html534/RooHistFunc.html,https://root.cern,https://root.cern/root/html534/RooHistFunc.html,3,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tgetAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet* depList) const; virtual Option_t*TObject::GetDrawOption() const; stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooConvCoefVar.html:12262,hash,hash,12262,root/html534/RooConvCoefVar.html,https://root.cern,https://root.cern/root/html534/RooConvCoefVar.html,12,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooPlot*RooAbsRealLValue::frame() const; RooPlot*RooAbsRealLValue::frame(const RooLinkedList& cmdList) const; RooPlot*RooAbsRealLValue::frame(Int_t nbins) const; RooPlot*RooAbsRealLValue::frame(Double_t lo, Double_t hi) const; RooPlot*RooAbsRealLValue::frame(Double_t lo, Double_t hi, Int_t nbins) const; RooPlot*RooAbsRealLValue::frame(const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooErrorVar.html:13413,hash,hash,13413,root/html534/RooErrorVar.html,https://root.cern,https://root.cern/root/html534/RooErrorVar.html,6,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooPlot*frame() const; RooPlot*frame(const RooLinkedList& cmdList) const; RooPlot*frame(Int_t nbins) const; RooPlot*frame(Double_t lo, Double_t hi) const; RooPlot*frame(Double_t lo, Double_t hi, Int_t nbins) const; RooPlot*frame(const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsRealLValue.html:13563,hash,hash,13563,root/html534/RooAbsRealLValue.html,https://root.cern,https://root.cern/root/html534/RooAbsRealLValue.html,3,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); TString*format(const RooCmdArg& formatArg) const; TString*format(Int_t sigDigits, const char* options) const; RooPlot*RooAbsRealLValue::frame() const; RooPlot*RooAbsRealLValue::frame(const RooLinkedList& cmdList) const; RooPlot*RooAbsRealLValue::frame(Int_t nbins) const; RooPlot*RooAbsRealLValue::frame(Double_t lo, Double_t hi) const; RooPlot*RooAbsRealLValue::frame(Double_t lo, Double_t hi, Int_t nbins) const; RooPlot*RooAbsRealLValue::frame(const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& par",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooRealVar.html:13638,hash,hash,13638,root/html534/RooRealVar.html,https://root.cern,https://root.cern/root/html534/RooRealVar.html,3,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tforceAnalyticalInt(const RooAbsArg& dep) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tgetAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet* depList) const; virtual Option_t*TObject::GetDrawOption() const; static Long_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooProduct.html:12016,hash,hash,12016,root/html534/RooProduct.html,https://root.cern,https://root.cern/root/html534/RooProduct.html,3,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tforceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; Double_tgetActual(Int_t ibin); virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tgetAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet* depList) const; virtual Option_t*TObject::GetDrawO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooParamHistFunc.html:12214,hash,hash,12214,root/html534/RooParamHistFunc.html,https://root.cern,https://root.cern/root/html534/RooParamHistFunc.html,3,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tforceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; const RooArgSet*get(Int_t masterIdx) const; const RooArgSet*get(const RooArgSet& coord) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tgetAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ParamHistFunc.html:12358,hash,hash,12358,root/html534/ParamHistFunc.html,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html,3,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tforceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tgetAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet* depList) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Bool_tRooAbsReal::getForceNumIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsCachedReal.html:12745,hash,hash,12745,root/html534/RooAbsCachedReal.html,https://root.cern,https://root.cern/root/html534/RooAbsCachedReal.html,3,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tforceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tgetAnalyticalIntegral(RooArgSet& allVars, RooArgSet& numVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet* depList) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAddition.html:12311,hash,hash,12311,root/html534/RooAddition.html,https://root.cern,https://root.cern/root/html534/RooAddition.html,3,['hash'],['hash']
Security,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); voidfollowAsSlave(RooRealMPFE& master); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet* depList) const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooRealMPFE.html:12823,hash,hash,12823,root/html534/RooRealMPFE.html,https://root.cern,https://root.cern/root/html534/RooRealMPFE.html,3,['hash'],['hash']
Security,"t& env, const char* ord = ""0""); Int_tTProof::GetRC(const char* RCenv, Double_t& env, const char* ord = ""0""); Int_tTProof::GetRC(const char* RCenv, TString& env, const char* ord = ""0""); Float_tTProof::GetRealTime() const; Int_tTProof::GetRemoteProtocol() const; TProof::ERunStatusTProof::GetRunStatus() const; Int_tTProof::GetSeqNum() const; Int_tTProof::GetSessionID() const; const char*TProof::GetSessionTag() const; virtual TFileCollection*TProof::GetStagingStatusDataSet(const char* dataset); voidTProof::GetStatistics(Bool_t verbose = kFALSE); Int_tTProof::GetStatus() const; virtual const char*TNamed::GetTitle() const; virtual TTree*TProof::GetTreeHeader(TDSet* tdset); virtual UInt_tTObject::GetUniqueID() const; const char*TProof::GetUrl(); const char*TProof::GetUser() const; const char*TProof::GetWorkDir() const; voidTProof::GoAsynchronous(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTProof::IsDataReady(Long64_t& totalbytes, Long64_t& bytesready); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTProof::IsFolder() const; Bool_tTProof::IsIdle() const; Bool_tTProof::IsLite() const; Bool_tTProof::IsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tTProof::IsParallel() const; Bool_tTProof::IsProofd() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTProof::IsTty() const; Bool_tTProof::IsValid() const; Bool_tTProof::IsWaiting() const; Bool_tTObject::IsZombie() const; virtual Int_tTProof::Load(const char* macro, Bool_t notOnClient = kF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofCondor.html:10986,Hash,Hash,10986,root/html534/TProofCondor.html,https://root.cern,https://root.cern/root/html534/TProofCondor.html,6,['Hash'],['Hash']
Security,"t& fr); const Text_t*RooAbsArg::getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; TStringRooAbsReal::getTitle(Bool_t appendUnit = kFALSE) const; Bool_tRooAbsArg::getTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; const Text_t*RooAbsReal::getUnit() const; Double_tRooAbsReal::getVal(const RooArgSet* set = 0) const; Double_tRooAbsReal::getVal(const RooArgSet& set) const; virtual Double_tRooAbsReal::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; virtual Double_tglobalNormalization() const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsTestStatistic.html:15805,Hash,Hash,15805,root/html532/RooAbsTestStatistic.html,https://root.cern,https://root.cern/root/html532/RooAbsTestStatistic.html,1,['Hash'],['Hash']
Security,"t& fr); const Text_t*RooAbsArg::getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; TStringRooAbsReal::getTitle(Bool_t appendUnit = kFALSE) const; Bool_tRooAbsArg::getTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; const Text_t*RooAbsReal::getUnit() const; Double_tRooAbsReal::getVal(const RooArgSet* set = 0) const; Double_tRooAbsReal::getVal(const RooArgSet& set) const; virtual Double_tRooAbsReal::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; virtual Double_tglobalNormalization() const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsTestStatistic.html:16377,Hash,Hash,16377,root/html534/RooAbsTestStatistic.html,https://root.cern,https://root.cern/root/html534/RooAbsTestStatistic.html,6,['Hash'],['Hash']
Security,"t& xmax, Double_t& ymax, Double_t& zmax) const; virtual Double_tGetSave(const Double_t* x); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tTF1::GetX(Double_t y, Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.E-10, Int_t maxiter = 100, Bool_t logx = false) const; TAxis*TF1::GetXaxis() const; virtual Double_tTF1::GetXmax() const; virtual Double_tTF1::GetXmin() const; TAxis*TF1::GetYaxis() const; virtual Double_tGetYmax() const; virtual Double_tGetYmin() const; TAxis*TF1::GetZaxis() const; virtual Double_tTF1::GradientPar(Int_t ipar, const Double_t* x, Double_t eps = 0.01); virtual voidTF1::GradientPar(const Double_t* x, Double_t* grad, Double_t eps = 0.01); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTF1::InitArgs(const Double_t* x, const Double_t* params); static voidTF1::InitStandardFunctions(); virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Double_t a, Double_t b, const Double_t* params = 0, Double_t epsil = 0.000001); virtual Double_tIntegral(Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t epsil = 0.000001); virtual Double_tIntegral(Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t az, Double_t bz, Double_t epsil = 0.000001); virtual Double_tTF1::IntegralError(Double_t a, Double_t b, const Double_t* params = 0, const Double_t* covmat = 0, Double_t epsilon = 1e-12); virtual Double_tTF1::IntegralError(Int_t n, const Double_t* a, const Double_t* b, const Double_t* params = 0, const Double_t* covmat = 0, Double_t epsilon = 1e-12); virtual Double_tTF1::IntegralFast(Int_t num, Double_t* x, Double_t* w, Double_t a, Double_t b, Double_t* params = 0, Double_t epsilon = 1e-12); virtual Double_tTF1::IntegralMult",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TF2.html:8517,Hash,Hash,8517,root/html530/TF2.html,https://root.cern,https://root.cern/root/html530/TF2.html,3,['Hash'],['Hash']
Security,"t&, RooLinkedList&); virtual voidprintCompactTreeHook(ostream&, const char*); virtual Bool_tredirectServersHook(const RooAbsCollection&, Bool_t, Bool_t, Bool_t); voidRooCacheManager<RooAbsCacheElement>::reset(); Int_tRooCacheManager<RooAbsCacheElement>::setObj(const RooArgSet* nset, RooAbsCacheElement* obj, const TNamed* isetRangeName = 0); Int_tRooCacheManager<RooAbsCacheElement>::setObj(const RooArgSet* nset, const RooArgSet* iset, RooAbsCacheElement* obj, const TNamed* isetRangeName = 0); virtual voidShowMembers(TMemberInspector& insp); virtual voidsterilize(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. static Bool_t_clearObsListClear obslist on sterilize?; Bool_t_clearOnRedirect; Int_tRooCacheManager<RooAbsCacheElement>::_lastIndexLast slot accessed; Int_tRooCacheManager<RooAbsCacheElement>::_maxSizeMaximum size; RooNormSetCache*RooCacheManager<RooAbsCacheElement>::_nsetCache! Normalization/Integration set manager; RooAbsCacheElement**RooCacheManager<RooAbsCacheElement>::_object! Payload; Bool_t_optCacheModeSeen! ; list<RooArgSet*>_optCacheObsList! list of all optCacheObservables owned; RooArgSet*_optCacheObservables! current optCacheObservables ; RooAbsArg*RooAbsCache::_ownerPointer to owning RooAbsArg; Int_tRooCacheManager<RooAbsCacheElement>::_sizeActual use. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooObjCacheManager(RooAbsArg* owner = 0, Int_t maxSize = 10, Bool_t clearCacheOnServerRedirect = kTRUE); Constructor of object cache manager for given owner. If clearCacheOnServerRedirect is true; all cache elements will be cleared when a server redirect is intercepted by the cache manager.; This is the default strategy and should only be overridden when you really understand; what you're doing as properly implementing server redirect in cache elements can get very; complicated, especially if there are (cyclical) reference back to the owning object. RooObjCacheManag",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooObjCacheManager.html:3023,access,accessed,3023,root/html530/RooObjCacheManager.html,https://root.cern,https://root.cern/root/html530/RooObjCacheManager.html,1,['access'],['accessed']
Security,"t(). Double_t TMVA::CCTreeWrapper::CheckEvent ; (; const TMVA::Event & ; e, . Bool_t ; useYesNoLeaf = false . ). return the decision tree output for an event ; Definition at line 226 of file CCTreeWrapper.cxx. ◆ GetRoot(). CCTreeNode * TMVA::CCTreeWrapper::GetRoot ; (; ). inline . Definition at line 148 of file CCTreeWrapper.h. ◆ InitTree(). void TMVA::CCTreeWrapper::InitTree ; (; CCTreeNode * ; t). initialize the node t and all its descendants ; Definition at line 123 of file CCTreeWrapper.cxx. ◆ PruneNode(). void TMVA::CCTreeWrapper::PruneNode ; (; CCTreeNode * ; t). remove the branch rooted at node t ; Definition at line 160 of file CCTreeWrapper.cxx. ◆ TestTreeQuality() [1/2]. Double_t TMVA::CCTreeWrapper::TestTreeQuality ; (; const DataSet * ; validationSample). return the misclassification rate of a pruned tree for a validation event sample using the DataSet ; Definition at line 203 of file CCTreeWrapper.cxx. ◆ TestTreeQuality() [2/2]. Double_t TMVA::CCTreeWrapper::TestTreeQuality ; (; const EventList * ; validationSample). return the misclassification rate of a pruned tree for a validation event sample using an EventList ; Definition at line 183 of file CCTreeWrapper.cxx. Member Data Documentation. ◆ fDTParent. DecisionTree* TMVA::CCTreeWrapper::fDTParent. private . ! pointer to underlying DecisionTree ; Definition at line 151 of file CCTreeWrapper.h. ◆ fQualityIndex. SeparationBase* TMVA::CCTreeWrapper::fQualityIndex. private . ! pointer to the used quality index calculator ; Definition at line 150 of file CCTreeWrapper.h. ◆ fRoot. CCTreeNode* TMVA::CCTreeWrapper::fRoot. private . ! the root node of the (wrapped) decision Tree ; Definition at line 152 of file CCTreeWrapper.h. Libraries for TMVA::CCTreeWrapper:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/CCTreeWrapper.h; tmva/tmva/src/CCTreeWrapper.cxx. TMVACCTreeWrapper. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:30 (GVA Time) u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1CCTreeWrapper.html:3058,validat,validationSample,3058,doc/master/classTMVA_1_1CCTreeWrapper.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1CCTreeWrapper.html,1,['validat'],['validationSample']
Security,"t(); virtual Option_t*TObject::GetOption() const; Int_tTEveElement::GetParentIgnoreCnt() const; TEveProjection*GetProjection(); virtual TObject*TEveElement::GetRenderObject(const TEveException& eh = ""TEveElement::GetRenderObject "") const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tHandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual TEveElement*ImportElements(TEveElement* el, TEveElement* ext_list = 0); virtual TEveElement*ImportElementsRecurse(TEveElement* el, TEveElement* parent); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveProjectionManager.html:8986,Hash,Hash,8986,root/html528/TEveProjectionManager.html,https://root.cern,https://root.cern/root/html528/TEveProjectionManager.html,1,['Hash'],['Hash']
Security,"t(Bool_t writedet = kFALSE); voidFileProcPlot(const char* fn, const char* out = 0); voidFileRatePlot(const char* fns = 0); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidGetAverages(Double_t& evtmax, Double_t& mbmax, Double_t& evt, Double_t& mb) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tGetEvtRateAvg() const; Double_tGetEvtRateAvgMax() const; virtual const char*TObject::GetIconName() const; Double_tGetMBRateAvg() const; Double_tGetMBRateAvgMax() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; voidLatencyPlot(const char* wrks = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofPerfAnalysis.html:2773,Hash,Hash,2773,root/html534/TProofPerfAnalysis.html,https://root.cern,https://root.cern/root/html534/TProofPerfAnalysis.html,1,['Hash'],['Hash']
Security,"t(Bool_t writedet = kFALSE); voidFileProcPlot(const char* fn, const char* out = 0); voidFileRatePlot(const char* fns = 0); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidGetAverages(Double_t& evtmax, Double_t& mbmax, Double_t& evt, Double_t& mb) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tGetEvtRateAvg() const; Double_tGetEvtRateAvgMax() const; virtual const char*TObject::GetIconName() const; Double_tGetMBRateAvg() const; Double_tGetMBRateAvgMax() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; voidLatencyPlot(const char* wrks = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofPerfAnalysis.html:2632,Hash,Hash,2632,root/html602/TProofPerfAnalysis.html,https://root.cern,https://root.cern/root/html602/TProofPerfAnalysis.html,2,['Hash'],['Hash']
Security,"t(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetEntry(Long64_t entry, Int_t getall = 0); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree* tree); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPySelector.html:3851,Hash,Hash,3851,root/html528/TPySelector.html,https://root.cern,https://root.cern/root/html528/TPySelector.html,1,['Hash'],['Hash']
Security,"t(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetEntry(Long64_t entry, Int_t getall = 0); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree* tree); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPySelector.html:3851,Hash,Hash,3851,root/html530/TPySelector.html,https://root.cern,https://root.cern/root/html530/TPySelector.html,2,['Hash'],['Hash']
Security,"t(Option_t* options = 0) const; Printing interface (human readable). void printMetaArgs(ostream& ) const; {}. const std::set<std::string>& attributes() const; Returns set of names of boolean attributes defined. const std::map<std::string,std::string>& stringAttributes() const; Returns std::map<string,string> with all string attributes defined. const std::set<std::string>& transientAttributes() const; Return set of transient boolean attributes. Bool_t isConstant() const; Returns true if 'Constant' attribute is set. Bool_t IsSortable() const; Object is sortable in ROOT container class. Bool_t operator==(const RooAbsArg& other). Bool_t isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE). Bool_t inRange(const char* ) const; Range management. Bool_t hasRange(const char* ) const; Has this argument a defined range (dummy interface always returns flase). CacheMode canNodeBeCached() const; { return Always ; }. void setCacheAndTrackHints(RooArgSet& ); {}. Bool_t isShapeDirty() const; Dirty state accessor. Bool_t isValueDirty() const; Returns true of value has been invalidated by server value change. Bool_t isValueDirtyAndClear() const; Returns true of value has been invalidated by server value change. Bool_t isValueOrShapeDirtyAndClear() const; Returns true of value has been invalidated by server value change. OperMode operMode() const; { return _operMode ; }. const RooArgSet* ownedComponents() const; { return _ownedComponents ; }. void setProhibitServerRedirect(Bool_t flag); { _prohibitServerRedirect = flag ; }. void operModeHook(); friend class RooSimCloneTool ;. {}. void optimizeDirtyHook(const RooArgSet* ); {}. void getParametersHook(const RooArgSet* , RooArgSet* , Bool_t ) const; {}. void getObservablesHook(const RooArgSet* , RooArgSet* ) const; {}. void setValueDirty() const; Dirty state modifiers. { if (_operMode==Auto && !inhibitDirty()) setValueDirty(0) ; }. void setShapeDirty() const; { setShapeDirty(0) ; }. void clearValueAndShapeDirty() const. void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsArg.html:43274,access,accessor,43274,root/html534/RooAbsArg.html,https://root.cern,https://root.cern/root/html534/RooAbsArg.html,3,['access'],['accessor']
Security,"t(TObject* obj); Add object at the end of the list. void AddLast(TObject* obj, Option_t* opt); Add object at the end of the list and also store option.; Storing an option is useful when one wants to change the behaviour; of an object a little without having to create a complete new; copy of the object. This feature is used, for example, by the Draw(); method. It allows the same object to be drawn in different ways. void AddBefore(const TObject* before, TObject* obj); Insert object before object before in the list. void AddBefore(TObjLink* before, TObject* obj); Insert object before object before in the list. void AddAfter(const TObject* after, TObject* obj); Insert object after object after in the list. void AddAfter(TObjLink* after, TObject* obj); Insert object after object after in the list. void AddAt(TObject* obj, Int_t idx); Insert object at location idx in the list. Float_t AverageCollisions() const; Return the average collision rate. The higher the number the longer; the linked lists in the hashtable, the slower the lookup. If the number; is high, or lookup noticeably too slow, perfrom a Rehash(). void Clear(Option_t* option = """"); Remove all objects from the list. Does not delete the objects unless; the THashList is the owner (set via SetOwner()). void Delete(Option_t* option = """"); Remove all objects from the list AND delete all heap based objects.; If option=""slow"" then keep list consistent during delete. This allows; recursive list operations during the delete (e.g. during the dtor; of an object in this list one can still access the list to search for; other not yet deleted objects). TObject * FindObject(const char* name) const; Find object using its name. Uses the hash value returned by the; TString::Hash() after converting name to a TString. TObject * FindObject(const TObject* obj) const; Find object using its hash value (returned by its Hash() member). TList * GetListForObject(const char* name) const; Return the THashTable's list (bucket) in which obj ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THashList.html:12965,hash,hashtable,12965,root/html528/THashList.html,https://root.cern,https://root.cern/root/html528/THashList.html,6,['hash'],['hashtable']
Security,"t(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EStatusBits { kMultiply; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfName; intfVal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t TParameter<AParamType> Merge(TCollection* in); Merge objects in the list.; Returns the number of objects that were in the list. const char * GetName() const; { return fName; }. const AParamType & GetVal() const; { return fVal; }. void SetVal(const int& val); { fVal = val; }. void SetMergeMode(char mergemode = '+'). ULong_t Hash() const; { return fName.Hash(); }. Bool_t IsSortable() const; { return kTRUE; }. Int_t Compare(const TObject* obj) const; Compare two TParameter objects. Returns 0 when equal, -1 when this is; smaller and +1 when bigger (like strcmp). void ls(Option_t* ) const; Print this parameter content. void Print(Option_t* ) const; Print this parameter content. cout << IsA(). » Author: Maarten Ballintijn 21/06/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TParameter.h 40272 2011-07-18 11:12:14Z rdm $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParameter_int_.html:5895,Hash,Hash,5895,root/html532/TParameter_int_.html,https://root.cern,https://root.cern/root/html532/TParameter_int_.html,2,['Hash'],['Hash']
Security,"t(const TObject* obj) const; Float_tGetClosestDistance(Int_t i); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); UInt_tGetFlag() const; EventHeader*GetHeader(); TRefArray*GetHighPt() const; TH1F*GetHistogram() const; virtual const char*TObject::GetIconName() const; Track*GetLastTrack() const; Double32_tGetMatrix(UChar_t x, UChar_t y); Int_tGetMeasure(UChar_t which); TRefArray*GetMuons() const; virtual const char*TObject::GetName() const; Int_tGetNseg() const; Int_tGetNtrack() const; Int_tGetNvertex() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double32_tGetTemperature() const; virtual const char*TObject::GetTitle() const; TClonesArray*GetTracks() const; TBits&GetTriggerBits(); char*GetType(); virtual UInt_tTObject::GetUniqueID() const; TH1*GetWebHistogram() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/Event.html:5549,Hash,Hash,5549,root/html528/Event.html,https://root.cern,https://root.cern/root/html528/Event.html,1,['Hash'],['Hash']
Security,"t(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*First() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetEntries() const; Int_tGetEntriesFast() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLast() const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; TObject**GetObjectRef() const; virtual TObject**GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tIndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; virtual Bool_tIsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*Last() const; Int_tTSeqCollection::LastIndex() const; Int_tLowerBound() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*MakeIterator(Bool_t dir = kIterForward) const; virtual TIte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TObjArray.html:4902,Hash,Hash,4902,root/html532/TObjArray.html,https://root.cern,https://root.cern/root/html532/TObjArray.html,4,['Hash'],['Hash']
Security,"t(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const TBranch*TVirtualBranchBrowsable::GetBranch() const; static Int_tGetBrowsables(TList& list, const TBranch* branch, const TVirtualBranchBrowsable* parent = 0); TClass*TVirtualBranchBrowsable::GetClassType() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TVirtualBranchBrowsable::GetIconName() const; TList*TVirtualBranchBrowsable::GetLeaves() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TVirtualBranchBrowsable*TVirtualBranchBrowsable::GetParent() const; voidTVirtualBranchBrowsable::GetScope(TString& scope) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTVirtualBranchBrowsable::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TNonSplitBrowsable.html:4672,Hash,Hash,4672,root/html528/TNonSplitBrowsable.html,https://root.cern,https://root.cern/root/html528/TNonSplitBrowsable.html,1,['Hash'],['Hash']
Security,"t(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const TBranch*TVirtualBranchBrowsable::GetBranch() const; static Int_tGetBrowsables(TList& list, const TBranch* branch, const TVirtualBranchBrowsable* parent = 0); TClass*TVirtualBranchBrowsable::GetClassType() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TVirtualBranchBrowsable::GetIconName() const; TList*TVirtualBranchBrowsable::GetLeaves() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TVirtualBranchBrowsable*TVirtualBranchBrowsable::GetParent() const; voidTVirtualBranchBrowsable::GetScope(TString& scope) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTVirtualBranchBrowsable::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TNonSplitBrowsable.html:4672,Hash,Hash,4672,root/html530/TNonSplitBrowsable.html,https://root.cern,https://root.cern/root/html530/TNonSplitBrowsable.html,3,['Hash'],['Hash']
Security,"t(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const TBranch*TVirtualBranchBrowsable::GetBranch() const; static Int_tGetBrowsables(TList& list, const TBranch* branch, const TVirtualBranchBrowsable* parent = 0); TClass*TVirtualBranchBrowsable::GetClassType() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TVirtualBranchBrowsable::GetIconName() const; TList*TVirtualBranchBrowsable::GetLeaves() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TVirtualBranchBrowsable*TVirtualBranchBrowsable::GetParent() const; voidTVirtualBranchBrowsable::GetScope(TString& scope) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTVirtualBranchBrowsable::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNonSplitBrowsable.html:4625,Hash,Hash,4625,root/html602/TNonSplitBrowsable.html,https://root.cern,https://root.cern/root/html602/TNonSplitBrowsable.html,2,['Hash'],['Hash']
Security,"t(kDevNull);; 464 }; 465 ; 466 TString fname(fname1);; 467 if (!gSystem->ExpandPathName(fname)) {; 468 SetName(fname.Data());; 469 fRealName = GetName();; 470 if (!gSystem->IsAbsoluteFileName(fRealName)) {; 471 gSystem->PrependPathName(gSystem->WorkingDirectory(),fRealName);; 472 }; 473 fname = fRealName.Data();; 474 } else {; 475 Error(""TFile"", ""error expanding path %s"", fname1);; 476 zombify();; 477 return;; 478 }; 479 ; 480 // If the user supplied a value to the option take it as the name to set for; 481 // the file instead of the actual filename; 482 if (TestBit(kReproducible)) {; 483 if(auto name=fUrl.GetValueFromOptions(""reproducible"")) {; 484 SetName(name);; 485 }; 486 }; 487 ; 488 if (recreate) {; 489 if (!gSystem->AccessPathName(fname.Data(), kFileExists)) {; 490 if (gSystem->Unlink(fname.Data()) != 0) {; 491 SysError(""TFile"", ""could not delete %s (errno: %d)"",; 492 fname.Data(), gSystem->GetErrno());; 493 zombify();; 494 return;; 495 }; 496 }; 497 recreate = kFALSE;; 498 create = kTRUE;; 499 fOption = ""CREATE"";; 500 }; 501 if (create && !devnull && !gSystem->AccessPathName(fname.Data(), kFileExists)) {; 502 Error(""TFile"", ""file %s already exists"", fname.Data());; 503 zombify();; 504 return;; 505 }; 506 if (update) {; 507 if (gSystem->AccessPathName(fname.Data(), kFileExists)) {; 508 update = kFALSE;; 509 create = kTRUE;; 510 }; 511 if (update && gSystem->AccessPathName(fname.Data(), kWritePermission)) {; 512 Error(""TFile"", ""no write permission, could not open file %s"", fname.Data());; 513 zombify();; 514 return;; 515 }; 516 }; 517 if (read) {; 518 if (gSystem->AccessPathName(fname.Data(), kFileExists)) {; 519 Error(""TFile"", ""file %s does not exist"", fname.Data());; 520 zombify();; 521 return;; 522 }; 523 if (gSystem->AccessPathName(fname.Data(), kReadPermission)) {; 524 Error(""TFile"", ""no read permission, could not open file %s"", fname.Data());; 525 zombify();; 526 return;; 527 }; 528 }; 529 ; 530 // Connect to file system stream; 531 if (create || update)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:19303,Access,AccessPathName,19303,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['Access'],['AccessPathName']
Security,"t(unsigned int, double); voidSetLowerLimit(const string&, double); voidSetPrecision(double eps); voidSetUpperLimit(unsigned int, double); voidSetUpperLimit(const string&, double); voidSetValue(unsigned int, double); voidSetValue(const string&, double); const ROOT::Minuit2::MnUserTransformation&Trafo() const; doubleValue(unsigned int) const; doubleValue(const string&) const; unsigned intVariableParameters() const. Data Members; private:. ROOT::Minuit2::MnUserTransformationfTransformation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MnUserParameters(); {}. MnUserParameters(const vector<double>& , const vector<double>& ). ~MnUserParameters(); {}. MnUserParameters(const ROOT::Minuit2::MnUserParameters& par); {}. MnUserParameters& operator=(const ROOT::Minuit2::MnUserParameters& par). const MnUserTransformation& Trafo() const; {return fTransformation;}. unsigned int VariableParameters() const. const std::vector<ROOT::Minuit2::MinuitParameter>& Parameters() const; access to parameters (row-wise). std::vector<double> Params() const; access to parameters and errors in column-wise representation. std::vector<double> Errors() const. bool Add(const string& , double , double ); Add free Parameter Name, Value, Error. bool Add(const string& , double , double , double , double ); Add limited Parameter Name, Value, Lower bound, Upper bound. bool Add(const string& , double ); Add const Parameter Name, vale. void Fix(unsigned int ); interaction via external number of Parameter. void Release(unsigned int ). void SetValue(unsigned int , double ). void SetError(unsigned int , double ). void SetLimits(unsigned int , double , double ). void SetUpperLimit(unsigned int , double ). void SetLowerLimit(unsigned int , double ). void RemoveLimits(unsigned int ). double Value(unsigned int ) const. double Error(unsigned int ) const. void Fix(const string& ); interaction via Name of Parameter. void Release(const string& ). void SetValue(const string& ,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Minuit2__MnUserParameters.html:2632,access,access,2632,root/html528/ROOT__Minuit2__MnUserParameters.html,https://root.cern,https://root.cern/root/html528/ROOT__Minuit2__MnUserParameters.html,3,['access'],['access']
Security,"t(unsigned int, double); voidSetLowerLimit(const string&, double); voidSetPrecision(double eps); voidSetUpperLimit(unsigned int, double); voidSetUpperLimit(const string&, double); voidSetValue(unsigned int, double); voidSetValue(const string&, double); const ROOT::Minuit2::MnUserTransformation&Trafo() const; doubleValue(unsigned int) const; doubleValue(const string&) const; unsigned intVariableParameters() const. Data Members; private:. ROOT::Minuit2::MnUserTransformationfTransformation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MnUserParameters(); {}. MnUserParameters(const vector<double>& , const vector<double>& ). ~MnUserParameters(); {}. MnUserParameters(const ROOT::Minuit2::MnUserParameters& par); {}. MnUserParameters& operator=(const ROOT::Minuit2::MnUserParameters& par). const MnUserTransformation& Trafo() const; {return fTransformation;}. unsigned int VariableParameters() const. const std::vector<ROOT::Minuit2::MinuitParameter>& Parameters() const; access to parameters (row-wise). std::vector<double> Params() const; access to parameters and errors in column-wise representation. std::vector<double> Errors() const. bool Add(const string& , double , double ); Add free Parameter Name, Value, Error. bool Add(const string& , double , double , double , double ); Add limited Parameter Name, Value, Lower bound, Upper bound. bool Add(const string& , double ); Add const Parameter Name, vale. void Fix(unsigned int); interaction via external number of Parameter. void Release(unsigned int). void SetValue(unsigned int, double). void SetError(unsigned int, double). void SetLimits(unsigned int, double, double). void SetUpperLimit(unsigned int, double). void SetLowerLimit(unsigned int, double). void RemoveLimits(unsigned int). double Value(unsigned int). double Error(unsigned int). void Fix(const std::string &); interaction via Name of Parameter. void Release(const std::string &). void SetValue(const std::string &, double). voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__MnUserParameters.html:2632,access,access,2632,root/html526/ROOT__Minuit2__MnUserParameters.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__MnUserParameters.html,1,['access'],['access']
Security,"t) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TSecContext(const TSecContext&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TSecContext&operator=(const TSecContext&). private:. voidCleanup(); virtual Bool_tCleanupSecContext(Bool_t all). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TList*fCleanupPoints to list with info for remote cleanup; void*fContextKrb5, Globus: ptr to specific sec context; TDatimefExpDateExpiring date (one sec precision); TStringfHostRemote host name; TStringfIDString identifying uniquely this context; Int_tfMethodAuthentication method used; TStringfMethodNameAuthentication method name; Int_tfOffSetoffset in remote host auth tab file (in bytes); TStringfTokenToken identifying this authentication; TStringfUserRemote login username. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSecContext(const char* user, const char* host, Int_t meth, Int_t offset, const char* id, const char* token, TDatime expdate = kROOTTZERO, void* ctx = 0); Ctor for SecContext object. TSecContext(const char* url, Int_t meth, Int_t offset, const char* id, const char* token, TDatime expdate = kROOTTZERO, void* ctx = 0); Ctor for SecContext object.; User and host from url = user@host . TSecContext(const TSecContext& ); copy constructor. TSecContext& operator=(const TSecContext& ); assignement operator. ~TSecContext(); Dtor: delete (deActivate, local/remote cleanup, list removal); all what is still active. void Cleanup(); Cleanup what is still active. void DeActiva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSecContext.html:6461,authenticat,authentication,6461,root/html528/TSecContext.html,https://root.cern,https://root.cern/root/html528/TSecContext.html,4,['authenticat'],['authentication']
Security,"t) const; virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*First() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**GetObjectRef(const TObject*) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*Last() const; Int_tTSeqCollection::LastIndex() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*MakeIterator(Bool_t dir = kIterForward) const; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBtree.html:10519,Hash,Hash,10519,root/html530/TBtree.html,https://root.cern,https://root.cern/root/html530/TBtree.html,5,['Hash'],['Hash']
Security,"t) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetADolly() const; Double_tGetATheta() const; TGLCamera*GetCamera() const; virtual Option_t*TObject::GetDrawOption() const; Double_tGetDt() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Bool_tGetImageAutoSave() const; Int_tGetImageCount() const; TStringGetImageGUIBaseName() const; Int_tGetImageGUIOutMode() const; TStringGetImageName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGLViewer*GetViewer() const; Double_tGetWDolly() const; Double_tGetWPhi() const; Double_tGetWTheta() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGLAutoRotator.html:2734,Hash,Hash,2734,root/html530/TGLAutoRotator.html,https://root.cern,https://root.cern/root/html530/TGLAutoRotator.html,2,['Hash'],['Hash']
Security,"t) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDataMember*GetDataMember() const; const char*GetDefault() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; TFunction*GetMethod() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TList*GetOptions() const; virtual const char*TNamed::GetTitle() const; const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMethodArg.html:2832,Hash,Hash,2832,root/html532/TMethodArg.html,https://root.cern,https://root.cern/root/html532/TMethodArg.html,1,['Hash'],['Hash']
Security,"t) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual TVirtualMutex*Factory(Bool_t recursive = kFALSE); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Int_tLock(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMutex.html:2422,Hash,Hash,2422,root/html528/TMutex.html,https://root.cern,https://root.cern/root/html528/TMutex.html,1,['Hash'],['Hash']
Security,"t) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual TVirtualMutex*Factory(Bool_t recursive = kFALSE); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Int_tLock(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMutex.html:2422,Hash,Hash,2422,root/html530/TMutex.html,https://root.cern,https://root.cern/root/html530/TMutex.html,3,['Hash'],['Hash']
Security,"t) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual TVirtualMutex*Factory(Bool_t recursive = kFALSE); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Int_tLock(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMutex.html:2387,Hash,Hash,2387,root/html602/TMutex.html,https://root.cern,https://root.cern/root/html602/TMutex.html,2,['Hash'],['Hash']
Security,"t) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual RooStats::ProposalFunction*GetProposalFunction(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__ProposalHelper.html:2226,Hash,Hash,2226,root/html526/RooStats__ProposalHelper.html,https://root.cern,https://root.cern/root/html526/RooStats__ProposalHelper.html,2,['Hash'],['Hash']
Security,"t) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual RooStats::ProposalFunction*GetProposalFunction(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__ProposalHelper.html:2226,Hash,Hash,2226,root/html530/RooStats__ProposalHelper.html,https://root.cern,https://root.cern/root/html530/RooStats__ProposalHelper.html,3,['Hash'],['Hash']
Security,"t) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual RooStats::ProposalFunction*GetProposalFunction(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__ProposalHelper.html:2226,Hash,Hash,2226,root/html602/RooStats__ProposalHelper.html,https://root.cern,https://root.cern/root/html602/RooStats__ProposalHelper.html,2,['Hash'],['Hash']
Security,"t). Then open the file again:; root[0] TFile::Open(""http://root.cern/files/introtutorials/eventdata.root"");. Adding a Data Member; Just like for the sum of event sizes, you need to add a data member to the class. As in Histogramming, we want to histogram the particles' fPosX; the type of the data member should thus be TH1F*. Don't forget to initialize the histogram pointer to 0 in the constructor, again just like for the event size sum.; Creating the Histogram; You then create the object with new TH1F(""hPosX"", ""Position in X"", 20, -5, 5);; check the documentation of TSelector to learn in which of your selector's functions to create the histogram object.; Associate error bars with this histogram (see TH1F::Sumw2()); Filling the Histogram; Like in the Histogramming chapter, fill the histogram with the value of fPosX from the tree for all particles with a momentum > 40.; Just like before, the per-event analysis happens in Process(). Here again, you need to get the tree entry before you can access the corresponding data members of your selector.; Fitting and Drawing the Histogram; Here again, once the histogram is filled, fit it with a pol2 using TH1::Fit(""pol2"").; See the documentation of TSelector on where to do the fitting, i.e. which function of your selector gets called after the whole tree has been processed. You should first fit and then draw, to see the fit together with the histogram.; At the end, you should get the same result than the figure 6 in Histogramming; If, for any reason, you don't manage to get it working, you can download the working selector file here: FullEventDataSelector.C (or; wget http://root-mirror.github.io/training/intro/FullEventDataSelector.C); Note: You will have to use it that way:; EventTree->Process(""FullEventDataSelector.C""). . ‹ Accessing a TTree With a TSelector; up; Using a TSelector with PROOF ›. Navigate through this book; Meet a TTree; Accessing a TTree With a TBrowser; Using TTree::Draw() to access a TTree; TTree and Its Data",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/histogramming-selector.html:3535,access,access,3535,d/histogramming-selector.html,https://root.cern,https://root.cern/d/histogramming-selector.html,1,['access'],['access']
Security,"t); virtual Bool_tTGCompositeFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGMainFrame::HandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tHandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tIsCutEnabled(); Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTreeViewer.html:16882,Hash,Hash,16882,root/html530/TTreeViewer.html,https://root.cern,https://root.cern/root/html530/TTreeViewer.html,5,['Hash'],['Hash']
Security,"t); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual Bool_tWriteFile(const char* filename, unsigned char* argb, UInt_t w, UInt_t h). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfExtensionfile extension. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TImagePlugin(); { }. unsigned char * ReadFile(const char* filename, UInt_t& w, UInt_t& h). Bool_t WriteFile(const char* filename, unsigned char* argb, UInt_t w, UInt_t h). ULong_t Hash() const; { return fExtension.Hash(); }. » Author: Valeriy Onuchin 23/06/05 » Copyright (C) 2001-2002, Rene Brun, Fons Rademakers and Reiner Rohlfs *; » Last changed: root/graf:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TImagePlugin.html:5642,Hash,Hash,5642,root/html534/TImagePlugin.html,https://root.cern,https://root.cern/root/html534/TImagePlugin.html,2,['Hash'],['Hash']
Security,t)Helper function used by TClass::GetClass().Definition TClass.cxx:5801; TClass::GetHeapInstanceCountUInt_t GetHeapInstanceCount() constDefinition TClass.h:467; TClass::fImplFileLineShort_t fImplFileLineDefinition TClass.h:216; TClingThis class defines an interface to the cling C++ interpreter.Definition TCling.h:102; TCollectionCollection abstract base class.Definition TCollection.h:65; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDictionaryThis class defines an abstract interface that must be implemented by all classes that contain diction...Definition TDictionary.h:168; TDictionary::EMemberSelectionEMemberSelectionKinds of members to include in lists.Definition TDictionary.h:216; TDictionary::DeclId_tconst void * DeclId_tDefinition TDictionary.h:224; TFunctionTemplateDictionary for function template This class describes one single function template.Definition TFunctionTemplate.h:26; THashTableTHashTable implements a hash table to store TObject's.Definition THashTable.h:35; TListOfDataMembersA collection of TDataMember objects designed for fast access given a DeclId_t and for keep track of T...Definition TListOfDataMembers.h:33; TListOfEnumsA collection of TEnum objects designed for fast access given a DeclId_t and for keep track of TEnum t...Definition TListOfEnums.h:33; TListOfFunctionTemplatesA collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFu...Definition TListOfFunctionTemplates.h:35; TListOfFunctionsA collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFu...Definition TListOfFunctions.h:35; TListA doubly linked list.Definition TList.h:38; TMemberInspectorAbstract base class for accessing the data-members of a class.Definition TMemberInspector.h:31; TMemberStreamerDefinition TMemberStreamer.h:26; TMethodCallMethod or function calling interface.Definition TMethodCall.h:37; TMethodEach ROOT class ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8h_source.html:81453,hash,hash,81453,doc/v632/TClass_8h_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8h_source.html,1,['hash'],['hash']
Security,t)Helper function used by TClass::GetClass().Definition TClass.cxx:5868; TClass::GetHeapInstanceCountUInt_t GetHeapInstanceCount() constDefinition TClass.h:467; TClass::fImplFileLineShort_t fImplFileLineDefinition TClass.h:216; TClingThis class defines an interface to the cling C++ interpreter.Definition TCling.h:102; TCollectionCollection abstract base class.Definition TCollection.h:65; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDictionaryThis class defines an abstract interface that must be implemented by all classes that contain diction...Definition TDictionary.h:168; TDictionary::EMemberSelectionEMemberSelectionKinds of members to include in lists.Definition TDictionary.h:216; TDictionary::DeclId_tconst void * DeclId_tDefinition TDictionary.h:224; TFunctionTemplateDictionary for function template This class describes one single function template.Definition TFunctionTemplate.h:26; THashTableTHashTable implements a hash table to store TObject's.Definition THashTable.h:35; TListOfDataMembersA collection of TDataMember objects designed for fast access given a DeclId_t and for keep track of T...Definition TListOfDataMembers.h:33; TListOfEnumsA collection of TEnum objects designed for fast access given a DeclId_t and for keep track of TEnum t...Definition TListOfEnums.h:33; TListOfFunctionTemplatesA collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFu...Definition TListOfFunctionTemplates.h:35; TListOfFunctionsA collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFu...Definition TListOfFunctions.h:35; TListA doubly linked list.Definition TList.h:38; TMemberInspectorAbstract base class for accessing the data-members of a class.Definition TMemberInspector.h:31; TMemberStreamerDefinition TMemberStreamer.h:26; TMethodCallMethod or function calling interface.Definition TMethodCall.h:37; TMethodEach ROOT class ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8h_source.html:81281,hash,hash,81281,doc/master/TClass_8h_source.html,https://root.cern,https://root.cern/doc/master/TClass_8h_source.html,1,['hash'],['hash']
Security,"t* = 0); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tGetByteCount() const; Int_tGetCurrent(); virtual Int_tGetDivAxis(); Int_tGetDivIndex(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tGetEnd() const; virtual const char*TObject::GetIconName() const; virtual TGeoMatrix*GetMatrix(); virtual const char*TObject::GetName() const; Int_tGetNdiv() const; Int_tGetNext() const; TGeoNode*GetNodeOffset(Int_t idiv); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetStart() const; Double_tGetStep() const; TGeoPatternFinder::ThreadData_t&GetThreadData() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*GetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsOnBoundary(const Double_t*) const; Bool_tTObject::IsOnHeap() const; Bool_tIsReflected() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsSpacedOut() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual TGeoPatternFinder*MakeCopy(Bool_t reflect = kFALSE); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternFinder.html:3778,Hash,Hash,3778,root/html532/TGeoPatternFinder.html,https://root.cern,https://root.cern/root/html532/TGeoPatternFinder.html,2,['Hash'],['Hash']
Security,"t* = 0); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tGetByteCount() const; Int_tGetCurrent(); virtual Int_tGetDivAxis(); Int_tGetDivIndex(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tGetEnd() const; virtual const char*TObject::GetIconName() const; virtual TGeoMatrix*GetMatrix(); virtual const char*TObject::GetName() const; Int_tGetNdiv() const; Int_tGetNext() const; TGeoNode*GetNodeOffset(Int_t idiv); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetStart() const; Double_tGetStep() const; TGeoPatternFinder::ThreadData_t&GetThreadData() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*GetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsOnBoundary(const Double_t*) const; Bool_tTObject::IsOnHeap() const; Bool_tIsReflected() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsSpacedOut() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual TGeoPatternFinder*MakeCopy(Bool_t reflect = kFALSE); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternFinder.html:3816,Hash,Hash,3816,root/html602/TGeoPatternFinder.html,https://root.cern,https://root.cern/root/html602/TGeoPatternFinder.html,2,['Hash'],['Hash']
Security,"t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidExecuteEventHelper(TGraph* theGraph, Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual char*GetObjectInfoHelper(TGraph* theGraph, Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TVirtualGraphPainter*TVirtualGraphPainter::GetPainter(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphPainter.html:14516,Hash,Hash,14516,root/html528/TGraphPainter.html,https://root.cern,https://root.cern/root/html528/TGraphPainter.html,1,['Hash'],['Hash']
Security,"t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidExecuteEventHelper(TGraph* theGraph, Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual char*GetObjectInfoHelper(TGraph* theGraph, Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TVirtualGraphPainter*TVirtualGraphPainter::GetPainter(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGraphPainter.html:14774,Hash,Hash,14774,root/html530/TGraphPainter.html,https://root.cern,https://root.cern/root/html530/TGraphPainter.html,3,['Hash'],['Hash']
Security,"t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidExecuteEventHelper(TGraph* theGraph, Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual char*GetObjectInfoHelper(TGraph* theGraph, Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TVirtualGraphPainter*TVirtualGraphPainter::GetPainter(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGraphPainter.html:15682,Hash,Hash,15682,root/html602/TGraphPainter.html,https://root.cern,https://root.cern/root/html602/TGraphPainter.html,2,['Hash'],['Hash']
Security,"t* obj) const; virtual TObject*TObjArray::First() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTObjArray::GetEntries() const; Int_tTObjArray::GetEntriesFast() const; virtual const char*TObject::GetIconName() const; virtual Int_tTObjArray::GetLast() const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; TObject**TObjArray::GetObjectRef() const; virtual TObject**TObjArray::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTObjArray::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; virtual Bool_tTObjArray::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*TObjArray::Last() const; Int_tTSeqCollection::LastIndex() const; Int_tTObjArray::LowerBound() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*TObjArray::Make",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooRefArray.html:3849,Hash,Hash,3849,root/html534/RooRefArray.html,https://root.cern,https://root.cern/root/html534/RooRefArray.html,3,['Hash'],['Hash']
Security,"t* option = """") const; Print object content. void PrintEstablished() const; Print info about established authentication vis-a-vis of this Host. void ReOrder(Int_t nmet, Int_t* fmet); Reorder nmet methods according fmet[nmet]. void Update(THostAuth* ha); Update info with the one in ha; Remaining methods, if any, get lower priority. void SetFirst(Int_t level); Set 'method' to be the first used (if in the list ...). void SetLast(Int_t level); Set 'method' to be the last used (if in the list ...). void AddFirst(Int_t level, const char* details = 0); Add new method in first position; If already in the list, set as first method 'level' with; authentication 'details'.; Faster then AddMethod(method,details)+SetFirst(method). void CountSuccess(Int_t level); Count successes for 'method'. void CountFailure(Int_t level); Count failures for 'method'. TRootSecContext * CreateSecContext(const char* user, const char* host, Int_t meth, Int_t offset, const char* details, const char* token, TDatime expdate = kROOTTZERO, void* ctx = 0, Int_t key = -1); Create a Security context and add it to local list; Return pointer to it to be stored in TAuthenticate. void AsString(TString& out) const; Return a static string with all info in a serialized form. Int_t NumMethods() const; { return fNumMethods; }. Int_t GetMethod(Int_t idx) const; { return fMethods[idx]; }. Int_t GetFailure(Int_t idx) const; { return fFailure[idx]; }. Int_t GetSuccess(Int_t idx) const; { return fSuccess[idx]; }. Bool_t IsActive() const; { return fActive; }. void DeActivate(); { fActive = kFALSE; }. void Activate(); { fActive = kTRUE; }. const char * GetDetailsByIdx(Int_t idx) const; { return fDetails[idx]; }. const char * GetHost() const; { return fHost; }. Int_t GetServer() const; { return (Int_t)fServer; }. const char * GetUser() const; { return fUser; }. void SetHost(const char* host); { fHost = host; }. void SetServer(Int_t server); { fServer = (Char_t)server; }. void SetUser(const char* user); { fUser = user; }. TLi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THostAuth.html:10921,Secur,Security,10921,root/html528/THostAuth.html,https://root.cern,https://root.cern/root/html528/THostAuth.html,6,['Secur'],['Security']
Security,"t*>fSubSamplesubsample for bagged grad boost; Double_tfSumOfWeightssum of all event weights; Double_tfTransitionPointbreak-down point for gradient regression; Bool_tfUseExclusiveVarsindividual variables already used in fisher criterium are not anymore analysed individually for node splitting; Bool_tfUseFisherCutsuse multivariate splits using the Fisher criterium; UInt_tfUseNTrainEventsnumber of randomly picked training events used in randomised (and bagged) trees; UInt_tfUseNvarsthe number of variables used in the randomised tree splitting; Bool_tfUsePoissonNvarsuse ""fUseNvars"" not as fixed number but as mean of a possion distr. in each split; Bool_tfUseWeightedTreesuse average classification from the trees, or have the individual trees trees in the forest weighted (e.g. log(boostweight) from AdaBoost; Bool_tfUseYesNoLeafuse sig or bkg classification in leave nodes or sig/bkg; vector<TMVA::Event*>fValidationSamplethe Validation events; vector<Double_t>fVariableImportancethe relative importance of the different variables; map<TMVA::Event*,std::pair<Double_t,Double_t> >fWeightedResidualsweighted regression residuals; static const Int_tfgDebugLeveldebug level determining some printout/control plots etc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodBDT(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); the standard constructor for the ""boosted decision trees"". MethodBDT(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL). Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); BDT can handle classification with multiple classes and regression with one regression-target. void DeclareOptions(); define the options (their key words) that can be set in the option string; know options:; nTrees number of trees in the forest to be created; BoostType the b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodBDT.html:23553,Validat,Validation,23553,root/html528/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodBDT.html,1,['Validat'],['Validation']
Security,"t, Int_t meth, Int_t offset, const char *id, const char *token, TDatime expdate=kROOTTZERO, void *ctx=nullptr);  Ctor for SecContext object. ;  ; virtual ~TSecContext ();  Dtor: delete (deActivate, local/remote cleanup, list removal) all what is still active. ;  ; void AddForCleanup (Int_t port, Int_t proto, Int_t type);  Create a new TSecContextCleanup Internally is added to the list. ;  ; virtual const char * AsString (TString &out);  Returns short string with relevant information about this security context. ;  ; virtual void DeActivate (Option_t *opt=""CR"");  Set OffSet to -1 and expiring Date to default Remove from the list If Opt contains ""C"" or ""c"", ask for remote cleanup If Opt contains ""R"" or ""r"", remove from the list Default Opt=""CR"". ;  ; void * GetContext () const;  ; TDatime GetExpDate () const;  ; const char * GetHost () const;  ; const char * GetID () const;  ; Int_t GetMethod () const;  ; const char * GetMethodName () const;  ; Int_t GetOffSet () const;  ; TList * GetSecContextCleanup () const;  ; const char * GetToken () const;  ; const char * GetUser () const;  ; TClass * IsA () const override;  ; Bool_t IsA (const char *methodname);  Checks if this security context is for method named 'methname' Case sensitive. ;  ; Bool_t IsActive () const;  Check remote OffSet and expiring Date. ;  ; void Print (Option_t *option=""F"") const override;  If opt is ""F"" (default) print object content. ;  ; void SetExpDate (TDatime expdate);  ; void SetID (const char *id);  ; void SetOffSet (Int_t offset);  ; void SetUser (const char *user);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" metho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSecContext.html:1822,secur,security,1822,doc/master/classTSecContext.html,https://root.cern,https://root.cern/doc/master/classTSecContext.html,1,['secur'],['security']
Security,"t, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const TList*GetFiles() const; virtual voidTHtml::TFileSysEntry::GetFullName(TString& fullname, Bool_t asIncluded) const; virtual const char*TObject::GetIconName() const; Int_tTHtml::TFileSysEntry::GetLevel() const; virtual const char*THtml::TFileSysEntry::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THtml::TFileSysDir*THtml::TFileSysEntry::GetParent() const; const TList*GetSubDirs() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTHtml::TFileSysEntry::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THtml__TFileSysDir.html:2485,Hash,Hash,2485,root/html528/THtml__TFileSysDir.html,https://root.cern,https://root.cern/root/html528/THtml__TFileSysDir.html,1,['Hash'],['Hash']
Security,"t, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const TList*GetFiles() const; virtual voidTHtml::TFileSysEntry::GetFullName(TString& fullname, Bool_t asIncluded) const; virtual const char*TObject::GetIconName() const; Int_tTHtml::TFileSysEntry::GetLevel() const; virtual const char*THtml::TFileSysEntry::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THtml::TFileSysDir*THtml::TFileSysEntry::GetParent() const; const TList*GetSubDirs() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTHtml::TFileSysEntry::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/THtml__TFileSysDir.html:2487,Hash,Hash,2487,root/html530/THtml__TFileSysDir.html,https://root.cern,https://root.cern/root/html530/THtml__TFileSysDir.html,3,['Hash'],['Hash']
Security,"t, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const TList*GetFiles() const; virtual voidTHtml::TFileSysEntry::GetFullName(TString& fullname, Bool_t asIncluded) const; virtual const char*TObject::GetIconName() const; Int_tTHtml::TFileSysEntry::GetLevel() const; virtual const char*THtml::TFileSysEntry::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; THtml::TFileSysDir*THtml::TFileSysEntry::GetParent() const; const TList*GetSubDirs() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTHtml::TFileSysEntry::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THtml__TFileSysDir.html:2430,Hash,Hash,2430,root/html602/THtml__TFileSysDir.html,https://root.cern,https://root.cern/root/html602/THtml__TFileSysDir.html,2,['Hash'],['Hash']
Security,"t, Int_t, Atom_t, Int_t, Int_t); virtual Bool_tHandleDoubleClick(Event_t* event); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGContainer::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGContainer::HandleKey(Event_t* event); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGContainer::Home(Bool_t select = kFALSE); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInsertEntry(TGLBEntry* lbe, TGLayoutHints* lhints, Int_t afterID); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual voidTGContainer::InvertSelection()SIGNAL ; virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditabl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLBContainer.html:10934,Hash,Hash,10934,root/html528/TGLBContainer.html,https://root.cern,https://root.cern/root/html528/TGLBContainer.html,6,['Hash'],['Hash']
Security,"t, Int_t, Int_t); virtual Bool_tHandleDoubleClick(Event_t* event); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tHandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tHandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInsertEntry(TGString* s, Int_t id, Int_t afterID); virtual voidInsertEntry(const char* s, Int_t id, Int_t afterID); virtual voidInsertEntry(TGLBEntry* lbe, TGLayoutHints* lhints, Int_t afterID); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCom",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGComboBox.html:9779,Hash,Hash,9779,root/html528/TGComboBox.html,https://root.cern,https://root.cern/root/html528/TGComboBox.html,6,['Hash'],['Hash']
Security,"t, TGTextButton, TGGroupFrame, TGLabel, TGTextLBEntry, TGLVEntry, TGTextEntry, TRootIconList, TAxis, TKey, TMapFile, TParticle, TPrimary, TPackMgr, Axis2, TParallelCoordSelect, and TVirtualPad.; Definition at line 488 of file TObject.cxx. ◆ GetUniqueID(). UInt_t TObject::GetUniqueID ; (; ); const. virtual . Return the unique object id. ; Definition at line 462 of file TObject.cxx. ◆ HandleTimer(). Bool_t TObject::HandleTimer ; (; TTimer * ; timer). virtual . Execute action in response of a timer timing out. ; This method must be overridden if an object has to react to timers. ; Reimplemented in TGWindow, TGuiBldDragManager, TSessionViewer, TGraphTime, TGLEventHandler, TGCommandPlugin, TGDNDManager, TGFileContainer, TGPopupMenu, TGScrollBar, TGShutter, TGTextEdit, TGTextEditor, TGTextEntry, TGTextView, TGToolTip, TGHtml, TVirtualPacketizer, TProofPlayerRemote, TProofPlayerSlave, TProofPlayerSuperMaster, TProofPlayerLite, and TTreeViewer.; Definition at line 498 of file TObject.cxx. ◆ Hash(). ULong_t TObject::Hash ; (; ); const. virtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObject.html:41860,Hash,Hash,41860,doc/master/classTObject.html,https://root.cern,https://root.cern/doc/master/classTObject.html,1,['Hash'],['Hash']
Security,"t, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fArchComp;  ; Long64_t fBytesRead;  ; Float_t fCpuTime;  ; TString fGroup;  ; TString fImage;  ; TFileHandler * fInput;  ; TString fMsd;  ; TString fName;  ; TString fOrdinal;  ; Int_t fParallel;  ; Int_t fPerfIdx;  ; Int_t fPort;  ; TProof * fProof;  ; TString fProofWorkDir;  ; Int_t fProtocol;  ; Float_t fRealTime;  ; TString fROOTVers;  ; TString fSessionTag;  ; ESlaveType fSlaveType;  ; TSocket * fSocket;  ; Int_t fStatus;  ; TString fUser;  ; TString fWorkDir;  . Private Member Functions;  TSlave (const char *host, const char *ord, Int_t perf, const char *image, TProof *proof, Int_t stype, const char *workdir, const char *msd, Int_t=1);  Create a PROOF slave object. Called via the TProof ctor. ;  ;  TSlave (const TSlave &s);  ; void Init (const char *host, Int_t port, Int_t stype);  Init a PROOF slave object. ;  ; Int_t OldAuthSetup (Bool_t master, TString wconf);  Setup authentication related stuff for old versions. ;  ; void operator= (const TSlave &);  . Static Private Member Functions; static TSlave * Create (const char *url, const char *ord, Int_t perf, const char *image, TProof *proof, Int_t stype, const char *workdir, const char *msd, Int_t nwk=1);  Static method returning the appropriate TSlave object for the remote server. ;  . Static Private Attributes; static TSlave_t fgTXSlaveHook = 0;  . Friends; class TProof;  ; class TProofLite;  ; class TSlaveLite;  ; class TXSlave;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSlave.h>. Inheritance diagram for TSlave:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESlaveStatus. enum TSlave::ESlaveStatus. EnumeratorkInvalid ; kActive ; kInactive . Definition at line 56 of file TSlave.h. ◆ ESlaveType. enum TSlave::ESlaveType. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlave.html:13301,authenticat,authentication,13301,doc/master/classTSlave.html,https://root.cern,https://root.cern/doc/master/classTSlave.html,1,['authenticat'],['authentication']
Security,"t,2> >(const ROOT::Math::SVector<float,2*(2+1)/2>& v, bool lower = true); floatTrace() const; ROOT::Math::SVector<float,2*(2+1)/2>UpperBlock() const. Data Members; public:. enum { kRows; kCols; kSize; };. public:. ROOT::Math::MatRepSym<float,2>fRep. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array(); return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal; block. For example for a symmetric 3x3 matrices the order of the 6; elements \f${a_0,...a_5}\f$ is:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_3 \\; a_1 & a_2 & a_4 \\; a_3 & a_4 & a_5 \end{array} \right); \f]. STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin(); STL const_iterator interface. . const_iterator end(); STL const_iterator interface. . bool operator==(const float& rhs) const; @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator!=(const SMatrix<T,D1,D2,R>& rhs); element wise comparison. bool operator>(const float& rhs) const; element wise comparison. bool operator<(const float& rhs) const; element wise comparison. const T& operator()(unsigned int i, unsigned int j). read only",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__SMatrix_float_2_2_-p1MatRepSym_float_2___.html:5241,access,access,5241,root/html526/ROOT__Math__SMatrix_float_2_2_-p1MatRepSym_float_2___.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__SMatrix_float_2_2_-p1MatRepSym_float_2___.html,1,['access'],['access']
Security,"t,3> >(const ROOT::Math::SVector<float,3*(3+1)/2>& v, bool lower = true); floatTrace() const; ROOT::Math::SVector<float,3*(3+1)/2>UpperBlock() const. Data Members; public:. enum { kRows; kCols; kSize; };. public:. ROOT::Math::MatRepSym<float,3>fRep. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array(); return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal; block. For example for a symmetric 3x3 matrices the order of the 6; elements \f${a_0,...a_5}\f$ is:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_3 \\; a_1 & a_2 & a_4 \\; a_3 & a_4 & a_5 \end{array} \right); \f]. STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin(); STL const_iterator interface. . const_iterator end(); STL const_iterator interface. . bool operator==(const float& rhs) const; @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator!=(const SMatrix<T,D1,D2,R>& rhs); element wise comparison. bool operator>(const float& rhs) const; element wise comparison. bool operator<(const float& rhs) const; element wise comparison. const T& operator()(unsigned int i, unsigned int j). read only",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__SMatrix_float_3_3_-p1MatRepSym_float_3___.html:5241,access,access,5241,root/html526/ROOT__Math__SMatrix_float_3_3_-p1MatRepSym_float_3___.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__SMatrix_float_3_3_-p1MatRepSym_float_3___.html,1,['access'],['access']
Security,"t,4> >(const ROOT::Math::SVector<float,4*(4+1)/2>& v, bool lower = true); floatTrace() const; ROOT::Math::SVector<float,4*(4+1)/2>UpperBlock() const. Data Members; public:. enum { kRows; kCols; kSize; };. public:. ROOT::Math::MatRepSym<float,4>fRep. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array(); return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal; block. For example for a symmetric 3x3 matrices the order of the 6; elements \f${a_0,...a_5}\f$ is:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_3 \\; a_1 & a_2 & a_4 \\; a_3 & a_4 & a_5 \end{array} \right); \f]. STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin(); STL const_iterator interface. . const_iterator end(); STL const_iterator interface. . bool operator==(const float& rhs) const; @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator!=(const SMatrix<T,D1,D2,R>& rhs); element wise comparison. bool operator>(const float& rhs) const; element wise comparison. bool operator<(const float& rhs) const; element wise comparison. const T& operator()(unsigned int i, unsigned int j). read only",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__SMatrix_float_4_4_-p1MatRepSym_float_4___.html:5241,access,access,5241,root/html526/ROOT__Math__SMatrix_float_4_4_-p1MatRepSym_float_4___.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__SMatrix_float_4_4_-p1MatRepSym_float_4___.html,1,['access'],['access']
Security,"t,5> >(const ROOT::Math::SVector<float,5*(5+1)/2>& v, bool lower = true); floatTrace() const; ROOT::Math::SVector<float,5*(5+1)/2>UpperBlock() const. Data Members; public:. enum { kRows; kCols; kSize; };. public:. ROOT::Math::MatRepSym<float,5>fRep. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array(); return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal; block. For example for a symmetric 3x3 matrices the order of the 6; elements \f${a_0,...a_5}\f$ is:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_3 \\; a_1 & a_2 & a_4 \\; a_3 & a_4 & a_5 \end{array} \right); \f]. STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin(); STL const_iterator interface. . const_iterator end(); STL const_iterator interface. . bool operator==(const float& rhs) const; @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator!=(const SMatrix<T,D1,D2,R>& rhs); element wise comparison. bool operator>(const float& rhs) const; element wise comparison. bool operator<(const float& rhs) const; element wise comparison. const T& operator()(unsigned int i, unsigned int j). read only",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__SMatrix_float_5_5_-p1MatRepSym_float_5___.html:5241,access,access,5241,root/html526/ROOT__Math__SMatrix_float_5_5_-p1MatRepSym_float_5___.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__SMatrix_float_5_5_-p1MatRepSym_float_5___.html,1,['access'],['access']
Security,"t,6> >(const ROOT::Math::SVector<float,6*(6+1)/2>& v, bool lower = true); floatTrace() const; ROOT::Math::SVector<float,6*(6+1)/2>UpperBlock() const. Data Members; public:. enum { kRows; kCols; kSize; };. public:. ROOT::Math::MatRepSym<float,6>fRep. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array(); return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal; block. For example for a symmetric 3x3 matrices the order of the 6; elements \f${a_0,...a_5}\f$ is:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_3 \\; a_1 & a_2 & a_4 \\; a_3 & a_4 & a_5 \end{array} \right); \f]. STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin(); STL const_iterator interface. . const_iterator end(); STL const_iterator interface. . bool operator==(const float& rhs) const; @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator!=(const SMatrix<T,D1,D2,R>& rhs); element wise comparison. bool operator>(const float& rhs) const; element wise comparison. bool operator<(const float& rhs) const; element wise comparison. const T& operator()(unsigned int i, unsigned int j). read only",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__SMatrix_float_6_6_-p1MatRepSym_float_6___.html:5241,access,access,5241,root/html526/ROOT__Math__SMatrix_float_6_6_-p1MatRepSym_float_6___.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__SMatrix_float_6_6_-p1MatRepSym_float_6___.html,1,['access'],['access']
Security,"t,7> >(const ROOT::Math::SVector<float,7*(7+1)/2>& v, bool lower = true); floatTrace() const; ROOT::Math::SVector<float,7*(7+1)/2>UpperBlock() const. Data Members; public:. enum { kRows; kCols; kSize; };. public:. ROOT::Math::MatRepSym<float,7>fRep. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array(); return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal; block. For example for a symmetric 3x3 matrices the order of the 6; elements \f${a_0,...a_5}\f$ is:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_3 \\; a_1 & a_2 & a_4 \\; a_3 & a_4 & a_5 \end{array} \right); \f]. STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin(); STL const_iterator interface. . const_iterator end(); STL const_iterator interface. . bool operator==(const float& rhs) const; @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator!=(const SMatrix<T,D1,D2,R>& rhs); element wise comparison. bool operator>(const float& rhs) const; element wise comparison. bool operator<(const float& rhs) const; element wise comparison. const T& operator()(unsigned int i, unsigned int j). read only",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__SMatrix_float_7_7_-p1MatRepSym_float_7___.html:5241,access,access,5241,root/html526/ROOT__Math__SMatrix_float_7_7_-p1MatRepSym_float_7___.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__SMatrix_float_7_7_-p1MatRepSym_float_7___.html,1,['access'],['access']
Security,"t. . Definition at line 27 of file TMutexImp.h. Public Member Functions;  TMutexImp ();  ; virtual ~TMutexImp ();  ; TClass * IsA () const override;  ; virtual Int_t Lock ()=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t TryLock ()=0;  ; virtual Int_t UnLock ()=0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMutexImp.html:1253,Hash,Hash,1253,doc/master/classTMutexImp.html,https://root.cern,https://root.cern/doc/master/classTMutexImp.html,2,['Hash'],['Hash']
Security,"t. ; Reimplemented in TDOMParser.; Definition at line 92 of file TXMLParser.cxx. ◆ SetParseCode(). void TXMLParser::SetParseCode ; (; Int_t ; errorcode). protectedvirtual . Set the parse code: . 0: Parse successful; -1: Attempt to parse a second file while a parse is in progress; -2: Parse context is not created; -3: An error occurred while parsing file; -4: A fatal error occurred while parsing file; -5: Document is not well-formed . Definition at line 181 of file TXMLParser.cxx. ◆ SetReplaceEntities(). void TXMLParser::SetReplaceEntities ; (; Bool_t ; val = kTRUE). The parser will replace/expand entities. ; Definition at line 84 of file TXMLParser.cxx. ◆ SetStopOnError(). void TXMLParser::SetStopOnError ; (; Bool_t ; stop = kTRUE). Set parser stops in case of error: . stop = true, stops on error; stop = false, continue parsing on error... . Definition at line 191 of file TXMLParser.cxx. ◆ SetValidate(). void TXMLParser::SetValidate ; (; Bool_t ; val = kTRUE). The parser will validate the xml file if val = true. ; Definition at line 76 of file TXMLParser.cxx. ◆ StopParser(). void TXMLParser::StopParser ; (; ). virtual . Stops parsing. ; Definition at line 166 of file TXMLParser.cxx. ◆ Streamer(). void TXMLParser::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TXMLParser::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 69 of file TXMLParser.h. Member Data Documentation. ◆ fContext. _xmlParserCtxt* TXMLParser::fContext. protected . Parse the xml file. ; Definition at line 31 of file TXMLParser.h. ◆ fParseCode. Int_t TXMLParser::fParseCode. protected . To keep track of the errorcodes. ; Definition at line 37 of file TXMLParser.h. ◆ fReplaceEntities. Bool_t TXMLParser::fReplaceEntities. protected . Replace entities. ; Definition at line 33 of file TXMLParser.h. ◆ fStopError. Bool_t TXMLParser::fStopError. protected . Stop when parse ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLParser.html:21212,validat,validate,21212,doc/master/classTXMLParser.html,https://root.cern,https://root.cern/doc/master/classTXMLParser.html,1,['validat'],['validate']
Security,"t. ;  ; TClass * IsA () const override;  ; virtual void Parse (std::ostream &out);  Locate methods, starting in the source file, then inline, then immediately inside the class declaration. ;  ; void SetCurrentModule (const char *module);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocParser.html:4215,Hash,Hash,4215,doc/master/classTDocParser.html,https://root.cern,https://root.cern/doc/master/classTDocParser.html,2,['Hash'],['Hash']
Security,"t. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unload (const char *pack);  Method to unload a package. ;  ; Int_t Unpack (const char *pack, TMD5 *sum=0);  Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPackMgr.html:5189,Hash,Hash,5189,doc/master/classTPackMgr.html,https://root.cern,https://root.cern/doc/master/classTPackMgr.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"t. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateArray (size_t nobj);  Updates the internal addresses for n contiguous objects which have the same fMaxLevel Updates the internal addresses for n contiguous objects which have the same fMaxLevel. ;  ; void UpdateNavigator (TGeoNavigator *nav) const;  Update the navigator to reflect the branch. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on std",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoBranchArray.html:4785,Hash,Hash,4785,doc/master/classTGeoBranchArray.html,https://root.cern,https://root.cern/doc/master/classTGeoBranchArray.html,2,['Hash'],['Hash']
Security,"t. Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ; Definition at line 294 of file THashList.cxx. ◆ IsA(). TClass * THashList::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TCollection.; Reimplemented in TListOfDataMembers, TListOfEnums, TListOfEnumsWithLock, TListOfFunctions, and TListOfFunctionTemplates.; Definition at line 72 of file THashList.h. ◆ operator=(). THashList & THashList::operator= ; (; const THashList & ; ). privatedelete . ◆ RecursiveRemove(). void THashList::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from TCollection.; Reimplemented in TListOfDataMembers, TListOfEnums, TListOfEnumsWithLock, TListOfFunctions, and TListOfFunctionTemplates.; Definition at line 310 of file THashList.cxx. ◆ Rehash(). void THashList::Rehash ; (; Int_t ; newCapacity). Rehash the hashlist. ; If the collision rate becomes too high (i.e. the average size of the linked lists become too long) then lookup efficiency decreases since relatively long lists have to be searched every time. To improve performance rehash the hashtable. This resizes the table to newCapacity slots and refills the table. Use AverageCollisions() to check if you need to rehash. ; Definition at line 368 of file THashList.cxx. ◆ Remove() [1/2]. TObject * THashList::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Implements TCollection.; Reimplemented in TListOfDataMembers, TListOfEnums, TListOfEnumsWithLock, TListOfFunctions, and TListOfFunction",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHashList.html:31580,hash,hash,31580,doc/master/classTHashList.html,https://root.cern,https://root.cern/doc/master/classTHashList.html,1,['hash'],['hash']
Security,"t. Return true if an existing object in a TBranchObject must be deleted. ; Definition at line 2263 of file TBranch.cxx. ◆ IsFolder(). bool TBranch::IsFolder ; (; ); const. overridevirtual . Return true if more than one leaf or browsables, false otherwise. ; Reimplemented from TObject.; Reimplemented in TBranchClones, TBranchElement, TBranchObject, and TBranchSTL.; Definition at line 2271 of file TBranch.cxx. ◆ KeepCircular(). void TBranch::KeepCircular ; (; Long64_t ; maxEntries). virtual . keep a maximum of fMaxEntries in memory ; Definition at line 2283 of file TBranch.cxx. ◆ LoadBaskets(). Int_t TBranch::LoadBaskets ; (; ). virtual . Baskets associated to this branch are forced to be in memory. ; You can call TTree::SetMaxVirtualSize(maxmemory) to instruct the system that the total size of the imported baskets does not exceed maxmemory bytes.; The function returns the number of baskets that have been put in memory. This method may be called to force all baskets of one or more branches in memory when random access to entries in this branch is required. See also TTree::LoadBaskets to load all baskets of all branches in memory. ; Definition at line 2309 of file TBranch.cxx. ◆ operator=(). TBranch & TBranch::operator= ; (; const TBranch & ; ). privatedelete . ◆ Print(). void TBranch::Print ; (; Option_t * ; option = """"); const. overridevirtual . Print TBranch parameters. ; If options contains ""basketsInfo"" print the entry number, location and size of each baskets. ; Reimplemented from TObject.; Reimplemented in TBranchSTL, TBranchClones, TBranchElement, TBranchObject, and TBranchRef.; Definition at line 2341 of file TBranch.cxx. ◆ PrintCacheInfo(). void TBranch::PrintCacheInfo ; (; ); const. Print the information we have about which basket is currently cached and whether they have been 'used'/'read' from the cache. ; Definition at line 2445 of file TBranch.cxx. ◆ ReadBasket(). void TBranch::ReadBasket ; (; TBuffer & ; b). virtual . Loop on all leaves of this branch to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranch.html:57812,access,access,57812,doc/master/classTBranch.html,https://root.cern,https://root.cern/doc/master/classTBranch.html,1,['access'],['access']
Security,"t. To be used by derived classes, that need; to initialize the TFile base class but not open a connection at this; moment. ~TNetFile(); TNetFile dtor. Send close message and close socket. Int_t SysOpen(const char* pathname, Int_t flags, UInt_t mode); Open a remote file. Requires fOption to be set correctly. Int_t SysClose(Int_t fd); Close currently open file. Int_t SysStat(Int_t fd, Long_t* id, Long64_t* size, Long_t* flags, Long_t* modtime); Return file stat information. The interface and return value is; identical to TSystem::GetPathInfo(). void Close(Option_t* option = """"); Close remote file. void Flush(); Flush file to disk. void Init(Bool_t create); Initialize a TNetFile object. Bool_t IsOpen() const; Retruns kTRUE if file is open, kFALSE otherwise. void Print(Option_t* option) const; Print some info about the net file. void PrintError(const char* where, Int_t err); Print error string depending on error code. Int_t ReOpen(Option_t* mode); Reopen a file with a different access mode, like from READ to; UPDATE or from NEW, CREATE, RECREATE, UPDATE to READ. Thus the; mode argument can be either ""READ"" or ""UPDATE"". The method returns; 0 in case the mode was successfully modified, 1 in case the mode; did not change (was already as requested or wrong input arguments); and -1 in case of failure, in which case the file cannot be used; anymore. Bool_t ReadBuffer(char* buf, Int_t len); Read specified byte range from remote file via rootd daemon.; Returns kTRUE in case of error. Bool_t ReadBuffer(char* buf, Long64_t pos, Int_t len); Read specified byte range from remote file via rootd daemon.; Returns kTRUE in case of error. Bool_t ReadBuffers(char* buf, Long64_t* pos, Int_t* len, Int_t nbuf); Read a list of buffers given in pos[] and len[] and return it in a single; buffer.; Returns kTRUE in case of error. Bool_t WriteBuffer(const char* buf, Int_t len); Write specified byte range to remote file via rootd daemon.; Returns kTRUE in case of error. Int_t Recv(Int_t& status, EM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TNetFile.html:25477,access,access,25477,root/html528/TNetFile.html,https://root.cern,https://root.cern/root/html528/TNetFile.html,6,['access'],['access']
Security,"t. inlinevirtual . access to const reference to the data ; Definition at line 72 of file BasicFCN.h. ◆ DataPtr(). template<class DerivFunType , class ModelFunType , class DataType > . std::shared_ptr< DataType > ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::DataPtr ; (; ); const. inline . access to data pointer ; Definition at line 75 of file BasicFCN.h. ◆ HasHessian(). template<class DerivFunType , class ModelFunType , class DataType > . virtual bool ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::HasHessian ; (; ); const. inlinevirtual . flag to indicate if can compute Hessian ; Reimplemented from ROOT::Math::BasicFitMethodFunction< DerivFunType >.; Definition at line 84 of file BasicFCN.h. ◆ ModelFunction(). template<class DerivFunType , class ModelFunType , class DataType > . virtual const IModelFunction & ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::ModelFunction ; (; ); const. inlinevirtual . access to const reference to the model function ; Definition at line 78 of file BasicFCN.h. ◆ ModelFunctionPtr(). template<class DerivFunType , class ModelFunType , class DataType > . std::shared_ptr< IModelFunction > ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::ModelFunctionPtr ; (; ); const. inline . access to function pointer ; Definition at line 81 of file BasicFCN.h. ◆ SetData(). template<class DerivFunType , class ModelFunType , class DataType > . void ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::SetData ; (; const std::shared_ptr< DataType > & ; data). inlineprotected . Set the data pointer. ; Definition at line 98 of file BasicFCN.h. ◆ SetModelFunction(). template<class DerivFunType , class ModelFunType , class DataType > . void ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::SetModelFunction ; (; const std::shared_ptr< IModelFunction > & ; func). inlineprotected . Set the function pointer. ; Definition at line 101 of file BasicFCN.h. Member Data Documentation. ◆ fData. templa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1BasicFCN.html:7230,access,access,7230,doc/master/classROOT_1_1Fit_1_1BasicFCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1BasicFCN.html,1,['access'],['access']
Security,t.Definition TObjString.cxx:45; TObjString::FillBuffervoid FillBuffer(char *&buffer)Definition TObjString.h:40; TObjString::ReadBuffervoid ReadBuffer(char *&buffer)Definition TObjString.h:44; TObjString::GetStringconst TString & GetString() constDefinition TObjString.h:46; TObjString::CompareInt_t Compare(const TObject *obj) const overrideString compare the argument with this object.Definition TObjString.cxx:35; TObjString::SizeofInt_t Sizeof() constDefinition TObjString.h:47; TObjString::StringTString & String()Definition TObjString.h:48; TObjString::CopyStringTString CopyString() constDefinition TObjString.h:37; TObjString::fStringTString fStringDefinition TObjString.h:31; TObjString::HashULong_t Hash() const overrideReturn hash value for this object.Definition TObjString.h:39; TObjString::Printvoid Print(Option_t *) const overrideThis method must be overridden when a class wants to print itself.Definition TObjString.h:41; TObjString::SetStringvoid SetString(const char *s)Definition TObjString.h:45; TObjString::GetNameconst char * GetName() const overrideReturns name of object.Definition TObjString.h:38; TObjString::IsSortableBool_t IsSortable() const overrideDefinition TObjString.h:42; TObjString::~TObjString~TObjString()TObjString destructor.Definition TObjString.cxx:26; TObjectMother of all ROOT objects.Definition TObject.h:41; TStringBasic string class.Definition TString.h:139; TString::HashUInt_t Hash(ECaseCompare cmp=kExact) constReturn hash value.Definition TString.cxx:677; TString::FillBuffervirtual void FillBuffer(char *&buffer) constCopy string into I/O buffer.Definition TString.cxx:1310; TString::Sizeofvirtual Int_t Sizeof() constReturns size string will occupy on I/O buffer.Definition TString.cxx:1401; TString::ReadBuffervirtual void ReadBuffer(char *&buffer)Read string from I/O buffer.Definition TString.cxx:1331; bool; int. corebaseincTObjString.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:03 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObjString_8h_source.html:4264,Hash,Hash,4264,doc/master/TObjString_8h_source.html,https://root.cern,https://root.cern/doc/master/TObjString_8h_source.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"t/weights/TMVA_CNN_Classification_PyKeras.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVA_CNN_Classification_PyKeras.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: PyTorch for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ PyTorch ] :␛[0m; : ; : PyTorch is a scientific computing package supporting; : automatic differentiation. This method wraps the training; : and predictions steps of the PyTorch Python package for; : TMVA, so that dataloading, preprocessing and evaluation; : can be done within the TMVA system. To use this PyTorch; : interface, you need to generatea model with PyTorch first.; : Then, this model can be loaded and trained in TMVA.; : ; : ; : <Suppress this message by specifying ""!H"" in the booking option>; : ␛[1m================================================================␛[0m; : ; : Split TMVA training data in 1280 training events and 320 validation events; : Print Training Model Architecture; : Option SaveBestOnly: Only model weights with smallest validation loss will be stored; : Elapsed time for training with 1600 events: 23.1 sec ; PyTorch : [dataset] : Evaluation of PyTorch on training sample (1600 events); : Elapsed time for evaluation of 1600 events: 0.434 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVA_CNN_Classification_PyTorch.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVA_CNN_Classification_PyTorch.class.C␛[0m; Factory : Training finished; : ; : Ranking input variables (method specific)...; BDT : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : vars : 1.153e-02; : 2 : vars : 1.059e-02; : 3 : vars : 1.011e-02; : 4 : vars : 9.992e-03; : 5 : vars : 9.753e-03; : 6 : vars : 9.676e-03; : 7 : vars : 9.360e-03; : 8 : vars : 9.253e-03; : 9 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:28919,validat,validation,28919,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,2,['validat'],['validation']
Security,"t4->Draw(""CONT4Z"");; }. The default number of contour levels is 20 equidistant levels and can be changed with TH1::SetContour() or TStyle::SetNumberContours().; The LIST option; When option LIST is specified together with option CONT, the points used to draw the contours are saved in TGraph objects: h->Draw(""CONT LIST"");; gPad->Update();; The contour are saved in TGraph objects once the pad is painted. Therefore to use this functionality in a macro, gPad->Update() should be performed after the histogram drawing. Once the list is built, the contours are accessible in the following way: TObjArray *contours = (TObjArray*)gROOT->GetListOfSpecials()->FindObject(""contours"");; Int_t ncontours = contours->GetSize();; TList *list = (TList*)contours->At(i);; Where i is a contour number, and list contains a list of TGraph objects. For one given contour, more than one disjoint polyline may be generated. The number of TGraphs per contour is given by: list->GetSize();; To access the first graph in the list one should do: TGraph *gr1 = (TGraph*)list->First();; The following example (ContourList.C) shows how to use this functionality.; ; Double_t SawTooth(Double_t x, Double_t WaveLen);; ; TCanvas *ContourList(){; ; const Double_t PI = TMath::Pi();; ; TCanvas* c = new TCanvas(""c"",""Contour List"",0,0,600,600);; c->SetRightMargin(0.15);; c->SetTopMargin(0.15);; ; Int_t i, j;; ; Int_t nZsamples = 80;; Int_t nPhiSamples = 80;; ; Double_t HofZwavelength = 4.0; // 4 meters; Double_t dZ = HofZwavelength/(Double_t)(nZsamples - 1);; Double_t dPhi = 2*PI/(Double_t)(nPhiSamples - 1);; ; TArrayD z(nZsamples);; TArrayD HofZ(nZsamples);; TArrayD phi(nPhiSamples);; TArrayD FofPhi(nPhiSamples);; ; // Discretized Z and Phi Values; for ( i = 0; i < nZsamples; i++) {; z[i] = (i)*dZ - HofZwavelength/2.0;; HofZ[i] = SawTooth(z[i], HofZwavelength);; }; ; for(Int_t i=0; i < nPhiSamples; i++){; phi[i] = (i)*dPhi;; FofPhi[i] = sin(phi[i]);; }; ; // Create Histogram; TH2D *HistStreamFn = new TH2D(""HstreamFn"",;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHistPainter.html:80720,access,access,80720,doc/master/classTHistPainter.html,https://root.cern,https://root.cern/doc/master/classTHistPainter.html,1,['access'],['access']
Security,"t::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Double_tfMSum of elements ( i.e. mean * sum_of_weights); Double_tfM2Second order momentum; Long64_tfNNumber of fills; TStringfName; Double_tfWSum of weights; Double_tfW2Sum of weights**2. Class Charts. Inheritance Chart:. TObject. ←; TStatistic. Function documentation; TStatistic(const char* name = """"); { }. TStatistic(const char* name, Int_t n, const Double_t* val, const Double_t* w = 0). ~TStatistic(); { }. const char * GetName() const; Getters. { return fName; }. ULong_t Hash() const; { return fName.Hash(); }. Long64_t GetN() const; { return fN; }. Long64_t GetNeff() const; { return fW*fW/fW2; }. Double_t GetM2() const; { return fM2; }. Double_t GetMean() const; { return (fW > 0) ? fM/fW : 0; }. Double_t GetMeanErr() const; { return (fW > 0.) ? TMath::Sqrt( GetVar()/ GetNeff() ) : 0; }. Double_t GetRMS() const; { double var = GetVar(); return (var>0) ? TMath::Sqrt(var) : -1; }. Double_t GetVar() const; { return (fW>0) ? ( (fN>1) ? (fM2 / fW)*(fN / (fN-1.)) : 0 ) : -1; }. Double_t GetW() const; { return fW; }. Double_t GetW2() const; { return fW2; }. Int_t Merge(TCollection* in); Merging. void Fill(Double_t val, Double_t w = 1.); Fill. void Print(Option_t* = """") const; Print. void ls(Option_t* opt = """") const; { Print(opt); }. » Author: G. Ganis 2012 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStatistic.html:6522,Hash,Hash,6522,root/html602/TStatistic.html,https://root.cern,https://root.cern/root/html602/TStatistic.html,1,['Hash'],['Hash']
Security,"t::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tTList::fAscending! sorting order (when calling Sort() or for TSortedList); TObjLink*TList::fCache! cache to speedup sequential calling of Before() and After() functions; TObjLink*TList::fFirst! pointer to first entry in linked list; TObjLink*TList::fLast! pointer to last entry in linked list; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted; THashTable*fTableHashtable used for quick lookup of objects; static TCollection::(anonymous)TCollection::kIsOwner. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THashList(Int_t capacity = TCollection::kInitHashTableCapacity, Int_t rehash = 0); Create a THashList object. Capacity is the initial hashtable capacity; (i.e. number of slots), by default kInitHashTableCapacity = 17, and; rehash is the value at which a rehash will be triggered. I.e. when the; average size of the linked lists at a slot becomes longer than rehash; then the hashtable will be resized and refilled to reduce the collision; rate to about 1. The higher the collision rate, i.e. the longer the; linked lists, the longer lookup will take. If rehash=0 the table will; NOT automatically be rehashed. Use Rehash() for manual rehashing.; WARNING !!!; If the name of an object in the HashList is modified, The hashlist; must be Rehashed. THashList(TObject* parent, Int_t capacity = TCollection::kInitHashTableCapacity, Int_t rehash = 0); For backward compatibility only. Use other ctor. ~THashList(); Delete a hashlist. Objects are not deleted unless the THashList is the; owner (set via SetOwner()). void AddFirst(TObject* obj); Add object at the beginning of the list. void AddFirst(TObject* obj, Option_t* opt); Add object ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THashList.html:11388,hash,hashtable,11388,root/html602/THashList.html,https://root.cern,https://root.cern/root/html602/THashList.html,2,['hash'],['hashtable']
Security,"t::EStatusBitsTObject::kCannotPick; static TFileInfo::EStatusBitskCorrupted; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TFileInfo::EStatusBitskSortWithIndex; static TFileInfo::EStatusBitskStaged; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TUrl*fCurrentUrl! current URL to access the file, points to URL; Int_tfIndexIndex to be used when sorting with index; TMD5*fMD5-> md5 digest of the file; TList*fMetaDataListgeneric list of file meta data object(s); Long64_tfSizefile size; TUUID*fUUID-> uuid of the referenced file; TList*fUrlListlist of file URLs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFileInfo(const char* url = 0, Long64_t size = -1, const char* uuid = 0, const char* md5 = 0, TObject* meta = 0); Constructor. TFileInfo(const TFileInfo& ); Copy constructor. ~TFileInfo(); Destructor. void ParseInput(const char* in); Parse the input line to extract init information from 'in'; the input; string is tokenized on ' '; the tokens can be prefixed by the following; keys:. url:<url1>,<url2>,... URLs for the file; stored in the order given; sz:<size> size of the file in bytes; md5:<md5_ascii> MD5 sum of the file in ASCII form; uuid:<uuid> UUID of the file. tree:<name>,<entries>,<first>,<last>; meta-information about a tree in the file; the; should be in the form <subdir>/tree-name;'entries' is; the number of entries in the tree; 'fir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileInfo.html:6956,access,access,6956,root/html602/TFileInfo.html,https://root.cern,https://root.cern/root/html602/TFileInfo.html,2,['access'],['access']
Security,"t::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. RooLinkedList**_arr! Array of linked lists storing elements in each slot; Int_t_entriesNumber of entries stored; RooHashTable::HashMethod_hashMethodHashing method; Int_t_sizeTotal number of slots; Int_t_usedSlotsNumber of used slots. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooHashTable(Int_t initSize = 17, RooHashTable::HashMethod hashMethod = Name); Construct a hash table with given capacity and hash method. RooHashTable(const RooHashTable& other); Copy constructor. void add(TObject* arg, TObject* hashArg = 0); Add given object to table. If hashArg is given, hash will be calculation; on that rather than on 'arg'. Bool_t remove(TObject* arg, TObject* hashArg = 0); Remove given object from table. If hashArg is given, hash will be calculation; on that rather than on 'arg'. Double_t avgCollisions() const; Calculate the average number of collisions (table slots with >1 filled entry). Bool_t replace(const TObject* oldArg, const TObject* newArg, const TObject* oldHashArg = 0); Replace oldArg with newArg in the table. If oldHashArg is given, use that to calculate; the hash associated with oldArg. TObject* find(const char* name) const; Return the object with given name from the table. RooAbsArg* findArg(const RooAbsArg* arg) const. TObject* find(const TObject* arg) const; Return object with the given pointer from the table. RooLinkedListElem* findLinkTo(const TObject* arg) const; Return RooLinkedList element link to object 'hashArg'. RooSetPair* findSetPair(const RooArgSet* set1, const RooAr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooHashTable.html:7145,hash,hashArg,7145,root/html602/RooHashTable.html,https://root.cern,https://root.cern/root/html602/RooHashTable.html,2,['hash'],['hashArg']
Security,"t::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetField(Int_t field); virtual ULong_tGetFieldLength(Int_t field); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMySQLRow.html:2310,Hash,Hash,2310,root/html528/TMySQLRow.html,https://root.cern,https://root.cern/root/html528/TMySQLRow.html,4,['Hash'],['Hash']
Security,"t::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetField(Int_t field); virtual ULong_tGetFieldLength(Int_t field); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMySQLRow.html:2310,Hash,Hash,2310,root/html530/TMySQLRow.html,https://root.cern,https://root.cern/root/html530/TMySQLRow.html,9,['Hash'],['Hash']
Security,"t::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetField(Int_t field); virtual ULong_tGetFieldLength(Int_t field); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMySQLRow.html:2237,Hash,Hash,2237,root/html602/TMySQLRow.html,https://root.cern,https://root.cern/root/html602/TMySQLRow.html,6,['Hash'],['Hash']
Security,"t::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TGLLevelPalette&GetPalette() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLTH3Slice.html:2553,Hash,Hash,2553,root/html528/TGLTH3Slice.html,https://root.cern,https://root.cern/root/html528/TGLTH3Slice.html,1,['Hash'],['Hash']
Security,"t::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TGLLevelPalette&GetPalette() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGLTH3Slice.html:2553,Hash,Hash,2553,root/html530/TGLTH3Slice.html,https://root.cern,https://root.cern/root/html530/TGLTH3Slice.html,3,['Hash'],['Hash']
Security,"t::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TGLLevelPalette&GetPalette() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLTH3Slice.html:2260,Hash,Hash,2260,root/html602/TGLTH3Slice.html,https://root.cern,https://root.cern/root/html602/TGLTH3Slice.html,2,['Hash'],['Hash']
Security,"t::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TSystemFile::GetIconName() const; virtual TList*GetListOfFiles() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTSystemFile::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsDirectory(const char* = 0) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMove(const char*); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSystemDirectory.html:2453,Hash,Hash,2453,root/html528/TSystemDirectory.html,https://root.cern,https://root.cern/root/html528/TSystemDirectory.html,1,['Hash'],['Hash']
Security,"t::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TSystemFile::GetIconName() const; virtual TList*GetListOfFiles() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTSystemFile::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsDirectory(const char* = 0) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMove(const char*); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSystemDirectory.html:2453,Hash,Hash,2453,root/html530/TSystemDirectory.html,https://root.cern,https://root.cern/root/html530/TSystemDirectory.html,3,['Hash'],['Hash']
Security,"t::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TSystemFile::GetIconName() const; virtual TList*GetListOfFiles() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTSystemFile::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsDirectory(const char* = 0) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMove(const char*); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSystemDirectory.html:2400,Hash,Hash,2400,root/html602/TSystemDirectory.html,https://root.cern,https://root.cern/root/html602/TSystemDirectory.html,2,['Hash'],['Hash']
Security,"t::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TList*GetElements(); virtual const char*TObject::GetIconName() const; Bool_tGetMiniFrame(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_t*GetRGBA(); Float_t*GetRGBALine(); Bool_tGetRnrElements(); Bool_tGetRnrFrame(); Bool_tGetRnrSelf(); TGeoShape*GetShape(); virtual const char*TNamed::GetTitle() const; Double_t*GetTrans(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasElements(); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGeoShapeExtract.html:2734,Hash,Hash,2734,root/html528/TEveGeoShapeExtract.html,https://root.cern,https://root.cern/root/html528/TEveGeoShapeExtract.html,1,['Hash'],['Hash']
Security,"t::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TList*GetElements(); virtual const char*TObject::GetIconName() const; Bool_tGetMiniFrame(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_t*GetRGBA(); Float_t*GetRGBALine(); Bool_tGetRnrElements(); Bool_tGetRnrFrame(); Bool_tGetRnrSelf(); TGeoShape*GetShape(); virtual const char*TNamed::GetTitle() const; Double_t*GetTrans(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasElements(); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveGeoShapeExtract.html:2734,Hash,Hash,2734,root/html530/TEveGeoShapeExtract.html,https://root.cern,https://root.cern/root/html530/TEveGeoShapeExtract.html,3,['Hash'],['Hash']
Security,"t::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TList*GetElements(); virtual const char*TObject::GetIconName() const; Bool_tGetMiniFrame(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_t*GetRGBA(); Float_t*GetRGBALine(); Bool_tGetRnrElements(); Bool_tGetRnrFrame(); Bool_tGetRnrSelf(); TGeoShape*GetShape(); virtual const char*TNamed::GetTitle() const; Double_t*GetTrans(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasElements(); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveGeoShapeExtract.html:2655,Hash,Hash,2655,root/html602/TEveGeoShapeExtract.html,https://root.cern,https://root.cern/root/html602/TEveGeoShapeExtract.html,2,['Hash'],['Hash']
Security,"t::Fatal(const char* method, const char* msgfmt) const; virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*First() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**GetObjectRef(const TObject*) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*Last() const; Int_tTSeqCollection::LastIndex() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*MakeIterator(Bool_t dir = kIterForward) const; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBtree.html:10469,Hash,Hash,10469,root/html526/TBtree.html,https://root.cern,https://root.cern/root/html526/TBtree.html,2,['Hash'],['Hash']
Security,"t::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; UInt_tGetAttachBottom() const; UInt_tGetAttachLeft() const; UInt_tGetAttachRight() const; UInt_tGetAttachTop() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; ULong_tTGLayoutHints::GetLayoutHints() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTGLayoutHints::GetPadBottom() const; Int_tTGLayoutHints::GetPadLeft() const; Int_tTGLayoutHints::GetPadRight() const; Int_tTGLayoutHints::GetPadTop() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGLayoutHints::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTableLayoutHints.html:4417,Hash,Hash,4417,root/html528/TGTableLayoutHints.html,https://root.cern,https://root.cern/root/html528/TGTableLayoutHints.html,1,['Hash'],['Hash']
Security,"t::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; UInt_tGetAttachBottom() const; UInt_tGetAttachLeft() const; UInt_tGetAttachRight() const; UInt_tGetAttachTop() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; ULong_tTGLayoutHints::GetLayoutHints() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTGLayoutHints::GetPadBottom() const; Int_tTGLayoutHints::GetPadLeft() const; Int_tTGLayoutHints::GetPadRight() const; Int_tTGLayoutHints::GetPadTop() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGLayoutHints::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGTableLayoutHints.html:4417,Hash,Hash,4417,root/html530/TGTableLayoutHints.html,https://root.cern,https://root.cern/root/html530/TGTableLayoutHints.html,3,['Hash'],['Hash']
Security,"t::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; UInt_tGetAttachBottom() const; UInt_tGetAttachLeft() const; UInt_tGetAttachRight() const; UInt_tGetAttachTop() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; ULong_tTGLayoutHints::GetLayoutHints() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTGLayoutHints::GetPadBottom() const; Int_tTGLayoutHints::GetPadLeft() const; Int_tTGLayoutHints::GetPadRight() const; Int_tTGLayoutHints::GetPadTop() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGLayoutHints::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTableLayoutHints.html:4202,Hash,Hash,4202,root/html602/TGTableLayoutHints.html,https://root.cern,https://root.cern/root/html602/TGTableLayoutHints.html,2,['Hash'],['Hash']
Security,"t::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLastPoint() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; Int_tGetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*GetX() const; Double_t*GetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPolyLine.html:3227,Hash,Hash,3227,root/html528/TPolyLine.html,https://root.cern,https://root.cern/root/html528/TPolyLine.html,1,['Hash'],['Hash']
Security,"t::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLastPoint() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; Int_tGetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*GetX() const; Double_t*GetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPolyLine.html:3227,Hash,Hash,3227,root/html530/TPolyLine.html,https://root.cern,https://root.cern/root/html530/TPolyLine.html,3,['Hash'],['Hash']
Security,"t::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLastPoint() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; Int_tGetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*GetX() const; Double_t*GetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPolyLine.html:2997,Hash,Hash,2997,root/html602/TPolyLine.html,https://root.cern,https://root.cern/root/html602/TPolyLine.html,2,['Hash'],['Hash']
Security,"t::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetRadiusOffset(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValue(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPieSlice.html:2758,Hash,Hash,2758,root/html528/TPieSlice.html,https://root.cern,https://root.cern/root/html528/TPieSlice.html,1,['Hash'],['Hash']
Security,"t::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetRadiusOffset(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValue(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPieSlice.html:2758,Hash,Hash,2758,root/html530/TPieSlice.html,https://root.cern,https://root.cern/root/html530/TPieSlice.html,3,['Hash'],['Hash']
Security,"t::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetRadiusOffset(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValue(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPieSlice.html:2654,Hash,Hash,2654,root/html602/TPieSlice.html,https://root.cern,https://root.cern/root/html602/TPieSlice.html,2,['Hash'],['Hash']
Security,"t::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TStringGetExpFormula(Option_t* option = """") const; virtual const char*TObject::GetIconName() const; virtual const TObject*GetLinearPart(Int_t i); virtual const char*TNamed::GetName() const; virtual Int_tGetNdim() const; virtual Int_tGetNpar() const; virtual Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetParameter(Int_t ipar) const; Double_tGetParameter(const char* name) const; virtual Double_t*GetParameters() const; virtual voidGetParameters(Double_t* params); virtual const char*GetParName(Int_t ipar) const; virtual Int_tGetParNumber(const char* name) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsLinear(); virtual Bool_tIsNormalized(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFormula.html:6850,Hash,Hash,6850,root/html528/TFormula.html,https://root.cern,https://root.cern/root/html528/TFormula.html,1,['Hash'],['Hash']
Security,"t::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TStringGetExpFormula(Option_t* option = """") const; virtual const char*TObject::GetIconName() const; virtual const TObject*GetLinearPart(Int_t i); virtual const char*TNamed::GetName() const; virtual Int_tGetNdim() const; virtual Int_tGetNpar() const; virtual Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetParameter(Int_t ipar) const; Double_tGetParameter(const char* name) const; virtual Double_t*GetParameters() const; virtual voidGetParameters(Double_t* params); virtual const char*GetParName(Int_t ipar) const; virtual Int_tGetParNumber(const char* name) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsLinear(); virtual Bool_tIsNormalized(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFormula.html:6850,Hash,Hash,6850,root/html530/TFormula.html,https://root.cern,https://root.cern/root/html530/TFormula.html,3,['Hash'],['Hash']
Security,"t::FindRules ; (; const TString & ; source); const. Return all the rules that are about the given 'source' class. ; User has to delete the returned array ; Definition at line 289 of file TSchemaRuleSet.cxx. ◆ FindRules() [2/4]. const TSchemaRuleSet::TMatches TSchemaRuleSet::FindRules ; (; const TString & ; source, . Int_t ; version . ); const. Return all the rules that applies to the specified version of the given 'source' class. ; User has to delete the returned array ; Definition at line 328 of file TSchemaRuleSet.cxx. ◆ FindRules() [3/4]. const TSchemaRuleSet::TMatches TSchemaRuleSet::FindRules ; (; const TString & ; source, . Int_t ; version, . UInt_t ; checksum . ); const. Return all the rules that applies to the specified version OR checksum of the given 'source' class. ; User has to delete the returned array ; Definition at line 368 of file TSchemaRuleSet.cxx. ◆ FindRules() [4/4]. const TSchemaRuleSet::TMatches TSchemaRuleSet::FindRules ; (; const TString & ; source, . UInt_t ; checksum . ); const. Return all the rules that applies to the specified checksum of the given 'source' class. ; User has to delete the returned array ; Definition at line 348 of file TSchemaRuleSet.cxx. ◆ GetClass(). TClass * TSchemaRuleSet::GetClass ; (; ). Definition at line 386 of file TSchemaRuleSet.cxx. ◆ GetClassCheckSum(). UInt_t TSchemaRuleSet::GetClassCheckSum ; (; ); const. Definition at line 393 of file TSchemaRuleSet.cxx. ◆ GetClassName(). TString TSchemaRuleSet::GetClassName ; (; ); const. Definition at line 403 of file TSchemaRuleSet.cxx. ◆ GetClassVersion(). Int_t TSchemaRuleSet::GetClassVersion ; (; ); const. Definition at line 410 of file TSchemaRuleSet.cxx. ◆ GetPersistentRules(). const TObjArray * TSchemaRuleSet::GetPersistentRules ; (; ); const. Definition at line 424 of file TSchemaRuleSet.cxx. ◆ GetRules(). const TObjArray * TSchemaRuleSet::GetRules ; (; ); const. Definition at line 417 of file TSchemaRuleSet.cxx. ◆ HasRuleWithSourceClass(). Bool_t TSchemaRuleSet:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet.html:15895,checksum,checksum,15895,doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet.html,1,['checksum'],['checksum']
Security,"t::GetLastUsage(); virtual TInetAddressTSocket::GetLocalInetAddress(); virtual Int_tTSocket::GetLocalPort(); Int_tTXSocket::GetLogConnID() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTXSocket::GetOpenError() const; virtual Int_tTSocket::GetOption(ESockOptions opt, Int_t& val); Int_tTSocket::GetPort() const; Int_tTSocket::GetRemoteProtocol() const; TSecContext*TSocket::GetSecContext() const; const char*TSocket::GetService() const; Int_tTXSocket::GetServType() const; Int_tTXSocket::GetSessionID() const; static ULong64_tTSocket::GetSocketBytesRecv(); static ULong64_tTSocket::GetSocketBytesSent(); Int_tTSocket::GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; Int_tTXSocket::GetXrdProofdVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; Bool_tTXSocket::IsAWait(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTXSocket::IsInterrupt(); Bool_tTObject::IsOnHeap() const; Bool_tTXSocket::IsServProofd(); virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTXSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TXUnixSocket.html:4229,Hash,Hash,4229,root/html530/TXUnixSocket.html,https://root.cern,https://root.cern/root/html530/TXUnixSocket.html,5,['Hash'],['Hash']
Security,"t::GetLastUsage(); virtual TInetAddressTSocket::GetLocalInetAddress(); virtual Int_tTSocket::GetLocalPort(); Int_tTXSocket::GetLogConnID() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTXSocket::GetOpenError() const; virtual Int_tTSocket::GetOption(ESockOptions opt, Int_t& val); Int_tTSocket::GetPort() const; Int_tTSocket::GetRemoteProtocol() const; TSecContext*TSocket::GetSecContext() const; const char*TSocket::GetService() const; Int_tTXSocket::GetServType() const; Int_tTXSocket::GetSessionID() const; static ULong64_tTSocket::GetSocketBytesRecv(); static ULong64_tTSocket::GetSocketBytesSent(); Int_tTSocket::GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; Int_tTXSocket::GetXrdProofdVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTXSocket::IsServProofd(); virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTXSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TXUnixSocket.html:4091,Hash,Hash,4091,root/html528/TXUnixSocket.html,https://root.cern,https://root.cern/root/html528/TXUnixSocket.html,1,['Hash'],['Hash']
Security,"t::GetMethod ; (; ); const. inline . Definition at line 77 of file TSecContext.h. ◆ GetMethodName(). const char * TSecContext::GetMethodName ; (; ); const. inline . Definition at line 78 of file TSecContext.h. ◆ GetOffSet(). Int_t TSecContext::GetOffSet ; (; ); const. inline . Definition at line 79 of file TSecContext.h. ◆ GetSecContextCleanup(). TList * TSecContext::GetSecContextCleanup ; (; ); const. inline . Definition at line 80 of file TSecContext.h. ◆ GetToken(). const char * TSecContext::GetToken ; (; ); const. inline . Definition at line 81 of file TSecContext.h. ◆ GetUser(). const char * TSecContext::GetUser ; (; ); const. inline . Definition at line 82 of file TSecContext.h. ◆ IsA() [1/2]. TClass * TSecContext::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 94 of file TSecContext.h. ◆ IsA() [2/2]. Bool_t TSecContext::IsA ; (; const char * ; methodname). Checks if this security context is for method named 'methname' Case sensitive. ; Definition at line 226 of file TSecContext.cxx. ◆ IsActive(). Bool_t TSecContext::IsActive ; (; ); const. Check remote OffSet and expiring Date. ; Definition at line 234 of file TSecContext.cxx. ◆ operator=(). TSecContext & TSecContext::operator= ; (; const TSecContext & ; sc). protected . assignement operator ; Definition at line 131 of file TSecContext.cxx. ◆ Print(). void TSecContext::Print ; (; Option_t * ; opt = ""F""); const. overridevirtual . If opt is ""F"" (default) print object content. ; If opt is ""<number>"" print in special form for calls within THostAuth with cardinality ""<number>"" If opt is ""S"" prints short in-line form for calls within TFTP, TSlave, TProof ... ; Reimplemented from TObject.; Definition at line 249 of file TSecContext.cxx. ◆ SetExpDate(). void TSecContext::SetExpDate ; (; TDatime ; expdate). inline . Definition at line 89 of file TSecContext.h. ◆ SetID(). void TSecContext::SetID ; (; const char * ; id). inline . Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSecContext.html:16651,secur,security,16651,doc/master/classTSecContext.html,https://root.cern,https://root.cern/doc/master/classTSecContext.html,1,['secur'],['security']
Security,"t::RowMajor) ?; 371 fStrides.front() : fStrides.back();; 372 ; 373 size_t offset = i * buffsize;; 374 ; 375 return TCudaTensor<AFloat>((const_cast<TCudaDeviceBuffer<AFloat>&>(fElementBuffer)).GetSubBuffer(offset, buffsize), sliced_shape, GetLayout());; 376 }; 377 ; 378 ; 379 // element access ( for debugging); 380 TCudaDeviceReference<AFloat> operator()(size_t i, size_t j) const; 381 {; 382 // like this works also for multi-dim tensors; 383 // and consider the tensor as a multidim one; 384 size_t nrows = GetNrows();; 385 size_t ncols = GetNcols();; 386 ; 387 size_t offset = (GetLayout() == MemoryLayout::RowMajor) ?; 388 i * ncols + j : j * nrows + i;; 389 ; 390 AFloat * elementPointer = fElementBuffer.data() + offset;; 391 return TCudaDeviceReference<AFloat>(elementPointer);; 392 }; 393 // element access ( for debugging); 394 TCudaDeviceReference<AFloat> operator()(size_t i, size_t j, size_t k) const; 395 {; 396 // k is B, i is C, j is HW :; 397 assert( fNDim >= 3); // || ( k==0 && fNDim == 2 ) );; 398 //note for larger dimension k is all other dims collapsed !!!; 399 ; 400 size_t offset = (GetLayout() == MemoryLayout::RowMajor) ?; 401 i * fStrides[0] + j * fStrides[1] + k :; 402 i * fStrides[2] + k * fStrides[1] + j;; 403 ; 404 AFloat * elementPointer = fElementBuffer.data() + offset;; 405 ; 406 return TCudaDeviceReference<AFloat>(elementPointer);; 407 }; 408 ; 409 TCudaDeviceReference<AFloat> operator()(size_t i, size_t j, size_t k, size_t l) const; 410 {; 411 // for row wise; 412 //assert(GetLayout() == MemoryLayout::RowMajor);; 413 assert( fNDim == 4); // || ( k==0 && fNDim == 2 ) );; 414 ; 415 size_t offset = (GetLayout() == MemoryLayout::RowMajor) ?; 416 i * fStrides[0] + j * fStrides[1] + k * fStrides[2] + l:; 417 l * fStrides[3] + k * fStrides[2] + j * fStrides[1] + i;; 418 ; 419 AFloat * elementPointer = fElementBuffer.data() + offset;; 420 ; 421 return TCudaDeviceReference<AFloat>(elementPointer);; 422 }; 423 ; 424private:; 425 ; 426 /** Initializes all sha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/CudaTensor_8h_source.html:15360,access,access,15360,doc/master/CudaTensor_8h_source.html,https://root.cern,https://root.cern/doc/master/CudaTensor_8h_source.html,1,['access'],['access']
Security,"t::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; Int_tTClass::WriteBuffer(TBuffer& b, void* pointer, const char* info = """"). protected:. static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); static TStringTQObject::CompressName(const char* method_name); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; TVirtualStreamerInfo*TClass::FindStreamerInfo(TObjArray* arr, UInt_t checksum) const; voidTClass::GetMissingDictionariesForBaseClasses(TCollection& result, TCollection& visited, bool recurse); voidTClass::GetMissingDictionariesForMembers(TCollection& result, TCollection& visited, bool recurse); voidTClass::GetMissingDictionariesForPairElements(TCollection& result, TCollection& visited, bool recurse); voidTClass::GetMissingDictionariesWithRecursionCheck(TCollection& result, TCollection& visited, bool recurse); virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(); Bool_tTDictionary::UpdateInterpreterStateMarker(). private:. TQClass&operator=(const TQClass&); TQClass(const TClass&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TDictionary::ESTLTypeTDictionary::kBitset; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TClass::ENewTypeTClass::kClassNew; static TClass::(anonymous)TClass::kClas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQClass.html:19513,checksum,checksum,19513,root/html602/TQClass.html,https://root.cern,https://root.cern/root/html602/TQClass.html,2,['checksum'],['checksum']
Security,"t::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Float_tfPolygonOffset[2]depth test; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringfTexttext; Color_tfTextColortext color; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveText(const char* txt = """"); Constructor. void SetFontSize(Int_t size, Bool_t validate = kTRUE); Set valid font size. void SetFontFile(const char* name); Set font file regarding to static TGLFontManager fgFontFileArray. void SetFontMode(Int_t mode); Set FTFont class ID. void SetPolygonOffset(Float_t factor, Float_t units); Set the scale and units used to calculate depth values.; See glPolygonOffset manual page. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. void ComputeBBox(); Fill bounding-box information. Virtual from TAttBBox.; If member 'TEveFrameBox* fFrame' is set, frame's corners are; used as bbox. const TGPicture* GetListTreeIcon(Bool_t open = kFALSE); Return TEveText icon. TEveText(const TEveText& ). TEveText& operator=(const TEveText& ). virtual ~TEveText(); {}. Int_t GetFontSize() const; { return fFontSize; }. Int_t GetFontFile() const; { return fFontFile; }. Int_t GetFontMode() const; { return fFontMode; }. void SetFontFile(Int_t file); { fFontFile = file; }. const char* GetText() const; { return fText.Data()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveText.html:19620,validat,validate,19620,root/html528/TEveText.html,https://root.cern,https://root.cern/root/html528/TEveText.html,4,['validat'],['validate']
Security,"t::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; static TCollection::(anonymous)TCollection::kIsOwner. private:. TList**fContHash table (table of lists); Int_tfEntriesNumber of objects in table; Int_tfRehashLevelAverage collision rate which triggers rehash; Int_tfUsedSlotsNumber of used slots. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THashTable(Int_t capacity = TCollection::kInitHashTableCapacity, Int_t rehash = 0); Create a THashTable object. Capacity is the initial hashtable capacity; (i.e. number of slots), by default kInitHashTableCapacity = 17, and; rehashlevel is the value at which a rehash will be triggered. I.e. when; the average size of the linked lists at a slot becomes longer than; rehashlevel then the hashtable will be resized and refilled to reduce; the collision rate to about 1. The higher the collision rate, i.e. the; longer the linked lists, the longer lookup will take. If rehashlevel=0; the table will NOT automatically be rehashed. Use Rehash() for manual; rehashing. ~THashTable(); Delete a hashtable. Objects are not deleted unless the THashTable is the; owner (set via SetOwner()). void Add(TObject* obj); Add object to the hash table. Its position in the table will be; determined by the value returned by its Hash() function. void AddBefore(const TObject* before, TObject* obj); Add object to the hash table. Its position in the table will be; determined by the value returned by its Hash() function.; If and only if 'before' is in the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THashTable.html:9183,hash,hashtable,9183,root/html602/THashTable.html,https://root.cern,https://root.cern/root/html602/THashTable.html,2,['hash'],['hashtable']
Security,"t::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Int_tfSize; TExMap::Assoc_t*fTable; Int_tfTally. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TExMap(Int_t mapSize = 100); Create a TExMap. TExMap(const TExMap& map); Copy constructor. TExMap& operator=(const TExMap& ); Assignement operator. ~TExMap(); Delete TExMap. void Add(ULong64_t hash, Long64_t key, Long64_t value); Add an (key,value) pair to the table. The key should be unique. void AddAt(UInt_t slot, ULong64_t hash, Long64_t key, Long64_t value); Add an (key,value) pair to the table. The key should be unique.; If the 'slot' is open, use it to store the value,; otherwise revert to Add(hash,key,value); This is usually used in conjuction with GetValue wiht 3 parameters:; if ((idx = (ULong64_t)fMap->GetValue(hash, key, slot)) != 0) {. } else {; fMap->AddAt(slot,hash,key,value);; }. Long64_t & operator()(ULong64_t hash, Long64_t key); Return a reference to the value belonging to the key with the; specified hash value. If the key does not exist it will be added.; NOTE: the reference will be invalidated an Expand() triggered by; an Add() or another operator() call. void Delete(Option_t* opt = """"); Delete all entries stored in the TExMap. Long64_t GetValue(ULong64_t hash, Long64_t key); Return the value belonging to specified key and hash value. If key not; found return 0. Long64_t GetValue(ULong64_t hash, Long64_t key, UInt_t& slot); Return the value belonging to specified key and hash value. If key not; found return 0.; In 'slot', return the index of the slot used or the first empty slot.; (to be used with AddAt). void Remove(ULong64_t hash, Long64_t key); Remove entry with specified key from the TExMap. I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TExMap.html:7027,hash,hash,7027,root/html602/TExMap.html,https://root.cern,https://root.cern/root/html602/TExMap.html,4,['hash'],['hash']
Security,"t::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TX11GLManager::TX11GLImpl*fPimpl. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TGLManager. ←; TX11GLManager. Function documentation; TX11GLManager(); Constructor. ~TX11GLManager(); Destructor. Int_t InitGLWindow(Window_t winID); Try to find correct visual. Int_t CreateGLContext(Int_t winInd); Context creation requires Display * and XVisualInfo; (was saved for such winInd). Bool_t MakeCurrent(Int_t devInd); Make GL context current. void Flush(Int_t ctxInd); Swaps buffers or copy pixmap. Bool_t CreateGLPixmap(TX11GLManager::TGLContext_t& ); Create GL pixmap. Bool_t AttachOffScreenDevice(Int_t ctxInd, Int_t x, Int_t y, UInt_t w, UInt_t h); Attach off screen device. Bool_t ResizeOffScreenDevice(Int_t devInd, Int_t x, Int_t y, UInt_t w, UInt_t h); Resize off screen devive. void SelectOffScreenDevice(Int_t devInd); Selects off-screen device to make it accessible by gVirtualX. void MarkForDirectCopy(Int_t devInd, Bool_t ); Selection-rotation support for TPad/TCanvas. void ReadGLBuffer(Int_t devInd); GL buffer is read info buffer, after that lines are reordered; into XImage, XImage copied into pixmap. void DeleteGLContext(Int_t devInd); Deletes GLX context and frees pixmap and image (if any). Int_t GetVirtualXInd(Int_t devInd); Returns an index suitable for gVirtualX. void ExtractViewport(Int_t devInd, Int_t* vp); Returns the current dimensions of a GL pixmap. void PaintSingleObject(TVirtualGLPainter* ); Paint a single object. void PrintViewer(TVirtualViewer3D* vv); Print viewer. Bool_t SelectManip(TVirtualGLManip* manip, const TGLCamera* camera, const TGLRect* rect, const TGLBoundingBox* sceneBox); Select manipulator. void PanObject(TVirtualGLPainter* o, Int_t x, Int_t y); Pan objects. Bool_t PlotSelected(TVirtualGLPainter* plot, Int_t px, Int_t py); Analog of TObject::DistancetoPrimitive. char * GetPlotIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TX11GLManager.html:8083,access,accessible,8083,root/html602/TX11GLManager.html,https://root.cern,https://root.cern/root/html602/TX11GLManager.html,2,['access'],['accessible']
Security,"t; Bool_tTString::Contains(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TString& pat, TString::ECaseCompare cmp = kExact) const; TStringTString::Copy() const; Int_tTString::CountChar(Int_t c) const; const char*TString::Data() const; Bool_tTString::EndsWith(const char* pat, TString::ECaseCompare cmp = kExact) const; Bool_tTString::EqualTo(const char* cs, TString::ECaseCompare cmp = kExact) const; Bool_tTString::EqualTo(const TString& st, TString::ECaseCompare cmp = kExact) const; virtual voidFillBuffer(char*& buffer) const; Ssiz_tTString::First(char c) const; Ssiz_tTString::First(const char* cs) const; voidTString::Form(const char* fmt); static TStringTString::Format(const char* fmt); static Ssiz_tTString::GetInitialCapacity(); static Ssiz_tTString::GetMaxWaste(); static Ssiz_tTString::GetResizeIncrement(); Bool_tTString::Gets(FILE* fp, Bool_t chop = kTRUE); UInt_tTString::Hash(TString::ECaseCompare cmp = kExact) const; static UInt_tTString::Hash(const void* txt, Int_t ntxt); Ssiz_tTString::Index(const TRegexp& pat, Ssiz_t i = 0) const; Ssiz_tTString::Index(TPRegexp& pat, Ssiz_t i = 0) const; Ssiz_tTString::Index(const char* s, Ssiz_t i = 0, TString::ECaseCompare cmp = kExact) const; Ssiz_tTString::Index(const TString& s, Ssiz_t i = 0, TString::ECaseCompare cmp = kExact) const; Ssiz_tTString::Index(const TRegexp& pat, Ssiz_t* ext, Ssiz_t i = 0) const; Ssiz_tTString::Index(TPRegexp& pat, Ssiz_t* ext, Ssiz_t i = 0) const; Ssiz_tTString::Index(const char* pat, Ssiz_t patlen, Ssiz_t i, TString::ECaseCompare cmp) const; Ssiz_tTString::Index(const TString& pat, Ssiz_t patlen, Ssiz_t i, TString::ECaseCompare cmp) const; static Ssiz_tTString::InitialCapacity(Ssiz_t ic = 15); TString&TString::Insert(Ssiz_t pos, const char* cs); TString&TString::Insert(Ssiz_t pos, const TString& s); TString&TString::Insert(Ssiz_t pos, const char* cs, Ssiz_t n); TString&TString::Insert(Ssiz_t pos, const TString& s, Ssiz_t n); virtual TClass*IsA() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TStringLong.html:2887,Hash,Hash,2887,root/html534/TStringLong.html,https://root.cern,https://root.cern/root/html534/TStringLong.html,1,['Hash'],['Hash']
Security,"t; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTMarkervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fMarkerColorTAttMarkerprotected; fMarkerSizeTAttMarkerprotected; fMarkerStyleTAttMarkerprotected; fUniqueIDTObjectprivate; fXTMarkerprotected; fYTMarkerprotected; GetBBox() overrideTMarkervirtual; GetBBoxCenter() overrideTMarkervirtual; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetMarkerColor() constTAttMarkerinlinevirtual; GetMarkerLineWidth(Style_t style)TAttMarkerstatic; GetMarkerSize() constTAttMarkerinlinevirtual; GetMarkerStyle() constTAttMarkerinlinevirtual; GetMarkerStyleBase(Style_t style)TAttMarkerstatic; GetName() constTObjectvirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOption() constTObjectinlinevirtual; GetTitle() constTObjectvirtual; GetUniqueID() constTObjectvirtual; GetX() constTMarkerinline; GetY() constTMarkerinline; HandleTimer(TTimer *timer)TObjectvirtual; Hash() constTObjectvirtual; HasInconsistentHash() constTObjectinline; Info(const char *method, const char *msgfmt,...) constTObjectvirtual; InheritsFrom(const char *classname) constTObjectvirtual; InheritsFrom(const TClass *cl) constTObjectvirtual; Inspect() constTObjectvirtual; InvertBit(UInt_t f)TObjectinline; IsA() const overrideTMarkerinlinevirtual; IsDestructed() constTObjectinline; IsEqual(const TObject *obj) constTObjectvirtual; IsFolder() constTObjectvirtual; IsOnHeap() constTObjectinline; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMarker-members.html:2847,Hash,Hash,2847,doc/master/classTMarker-members.html,https://root.cern,https://root.cern/doc/master/classTMarker-members.html,1,['Hash'],['Hash']
Security,"t; Int_tTEveElement::GetParentIgnoreCnt() const; Int_tGetPickToSelect() const; virtual TObject*TEveElement::GetRenderObject(const TEveException& eh) const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveSelection.html:11092,Hash,Hash,11092,root/html530/TEveSelection.html,https://root.cern,https://root.cern/root/html530/TEveSelection.html,5,['Hash'],['Hash']
Security,"t; Int_tTEveElement::GetParentIgnoreCnt() const; TEveProjectable*TEveProjected::GetProjectable() const; virtual TEveElement*GetProjectedAsElement(); virtual TObject*TEveElement::GetRenderObject(const TEveException& eh) const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTEveCompound::IsCompoundOpen() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveCompoundProjected.html:8811,Hash,Hash,8811,root/html530/TEveCompoundProjected.html,https://root.cern,https://root.cern/root/html530/TEveCompoundProjected.html,5,['Hash'],['Hash']
Security,"t; Int_tTEveElement::GetParentIgnoreCnt() const; TEveProjectable*TEveProjected::GetProjectable() const; virtual TEveElement*GetProjectedAsElement(); virtual TObject*TEveElement::GetRenderObject(const TEveException& eh) const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tTEveShape::IsBoxOrientationConsistentEv(const TEveVector* box); static Bool_tTEveShape::IsBoxOrientationConsistentFv(const Float_t** box); virtual Bool_tTObject::IsEqual(const TObject* ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveBoxProjected.html:9494,Hash,Hash,9494,root/html528/TEveBoxProjected.html,https://root.cern,https://root.cern/root/html528/TEveBoxProjected.html,13,['Hash'],['Hash']
Security,"t; Int_tTEveElement::GetParentIgnoreCnt() const; TEveProjectable*TEveProjected::GetProjectable() const; virtual TEveElement*GetProjectedAsElement(); virtual TObject*TEveElement::GetRenderObject(const TEveException& eh) const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tTEveShape::IsBoxOrientationConsistentEv(const TEveVector[8] box); static Bool_tTEveShape::IsBoxOrientationConsistentFv(const Float_t[8][3] box); virtual Bool_tTObject::IsEqual(const TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveBoxProjected.html:9426,Hash,Hash,9426,root/html602/TEveBoxProjected.html,https://root.cern,https://root.cern/root/html602/TEveBoxProjected.html,8,['Hash'],['Hash']
Security,"t; Int_tTEveElement::GetParentIgnoreCnt() const; TEveProjectable*TEveProjected::GetProjectable() const; virtual TEveElement*GetProjectedAsElement(); virtual TObject*TEveElement::GetRenderObject(const TEveException& eh) const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSorta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveElementListProjected.html:8851,Hash,Hash,8851,root/html528/TEveElementListProjected.html,https://root.cern,https://root.cern/root/html528/TEveElementListProjected.html,8,['Hash'],['Hash']
Security,"t; Int_tevalCounter() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; RooFitResult*fit(const char* options); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Int_thesse(); Int_timprove(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tmigrad(); Int_tminos(); Int_tminos(const RooArgSet& minosParamList); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooMinuit.html:3266,Hash,Hash,3266,root/html530/RooMinuit.html,https://root.cern,https://root.cern/root/html530/RooMinuit.html,3,['Hash'],['Hash']
Security,"t; Int_tevalCounter() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; RooFitResult*fit(const char* options); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Int_thesse(); Int_timprove(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tmigrad(); Int_tminos(); Int_tminos(const RooArgSet& minosParamList); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMinuit.html:3233,Hash,Hash,3233,root/html602/RooMinuit.html,https://root.cern,https://root.cern/root/html602/RooMinuit.html,2,['Hash'],['Hash']
Security,"t; ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::Cartesian3D<Double32_t>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXYZ(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar c). DisplacementVector3D & operator=(const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>& ). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar* src). Set internal data based on a C-style array of 3 Scalar numbers. { fCoordinates.SetCoordinates(src); return *this; }. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar c). Set internal data based on 3 Scalar numbers. { fCoordinates.SetCoordinates(a, b, c); return *this; }. void GetCoordinates(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Mat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__DisplacementVector3D_-p1Cartesian3D_Double32_t__-p1GlobalCoordinateSystemTag_.html:11392,access,access,11392,root/html526/ROOT__Math__DisplacementVector3D_-p1Cartesian3D_Double32_t__-p1GlobalCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__DisplacementVector3D_-p1Cartesian3D_Double32_t__-p1GlobalCoordinateSystemTag_.html,5,['access'],['access']
Security,"t; Return width of the displayed image not of the original image.; (Number of screen pixels). UInt_t GetScaledHeight() const; Return height of the displayed image not of the original image.; (Number of screen pixels). void GetZoomPosition(UInt_t& x, UInt_t& y, UInt_t& w, UInt_t& h) const; Return the zoom parameters.; This is useful when the zoom has been done interactively using the mouse. Bool_t InitVisual(); Static function to initialize the ASVisual. void StartPaletteEditor(); Start palette editor. Pixmap_t GetPixmap(); Returns image pixmap.; The pixmap must deleted by user. Pixmap_t GetMask(); Returns image mask pixmap (alpha channel).; The pixmap must deleted by user. void SetImage(Pixmap_t pxm, Pixmap_t mask = 0); Create image from pixmap. TArrayL * GetPixels(Int_t x = 0, Int_t y = 0, UInt_t w = 0, UInt_t h = 0); Return 2D array of machine dependent pixel values. Double_t * GetVecArray(); Return a pointer to internal array[width x height] of double values [0,1].; This array is directly accessible. That allows to manipulate/change the; image. TArrayD * GetArray(UInt_t w = 0, UInt_t h = 0, TImagePalette* pal = gWebImagePalette); In case of vectorized image return an associated array of doubles; otherwise this method creates and returns a 2D array of doubles corresponding to palette.; If palette is ZERO a color converted to double value [0, 1] according to formula; Double_t((r << 16) + (g << 8) + b)/0xFFFFFF; The returned array must be deleted after usage. void DrawText(Int_t x = 0, Int_t y = 0, const char* text = """", Int_t size = 12, const char* color = 0, const char* font = ""fixed"", TImage::EText3DType type = TImage::kPlain, const char* fore_file = 0, Float_t angle = 0); Draw text of size (in pixels for TrueType fonts); at position (x, y) with color specified by hex string.; font_name - TrueType font's filename or X font spec or alias.; 3D style of text is one of the following:; 0 - plain 2D text, 1 - embossed, 2 - sunken, 3 - shade above,; 4 - shade below, 5 -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TASImage.html:30136,access,accessible,30136,root/html526/TASImage.html,https://root.cern,https://root.cern/root/html526/TASImage.html,7,['access'],['accessible']
Security,"t; RooSetProxyRooAbsTestStatistic::_paramSetParameters of the test statistic (=parameters of the input function); Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooArgSet*_projDepsSet of projected observable; const RooArgSet*RooAbsTestStatistic::_projDepsPointer to set with projected observables; TRefArrayRooAbsArg::_proxyListlist of proxies; stringRooAbsTestStatistic::_rangeNameName of range in which to calculate test statistic; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; TString_sealNoticeUser-defined notice shown when reading a sealed likelihood ; Bool_t_sealedIs test statistic sealed -- i.e. no access to data ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; Int_tRooAbsTestStatistic::_simCountTotal number of component p.d.f.s in RooSimultaneous (if any); RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_tRooAbsTestStatistic::_splitRangeSplit rangeName in RooSimultaneous index labels if true; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_tRooAbsTestStatistic::_verboseVerbose messaging if true; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsOptTestStatistic.html:36178,access,access,36178,root/html532/RooAbsOptTestStatistic.html,https://root.cern,https://root.cern/root/html532/RooAbsOptTestStatistic.html,1,['access'],['access']
Security,"t; UInt_tTMVA::MethodBase::GetTrainingROOTVersionCode() const; TStringTMVA::MethodBase::GetTrainingROOTVersionString() const; UInt_tTMVA::MethodBase::GetTrainingTMVAVersionCode() const; TStringTMVA::MethodBase::GetTrainingTMVAVersionString() const; Double_tTMVA::MethodBase::GetTrainTime() const; TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; virtual UInt_tTObject::GetUniqueID() const; TStringTMVA::MethodBase::GetWeightFileName() const; Double_tTMVA::MethodBase::GetXmax(Int_t ivar) const; Double_tTMVA::MethodBase::GetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tHasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); Bool_tTMVA::ConvergenceTest::HasConverged(Bool_t withinConvergenceBand = kFALSE); virtual ULong_tTObject::Hash() const; boolHasInverseHessian(); Bool_tTMVA::MethodBase::HasMVAPdfs() const; TMVA::IFitterTargetTMVA::IFitterTarget::IFitterTarget(); TMVA::IFitterTargetTMVA::IFitterTarget::IFitterTarget(const TMVA::IFitterTarget&); TMVA::IMethodTMVA::IMethod::IMethod(); TMVA::IMethodTMVA::IMethod::IMethod(const TMVA::IMethod&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidTMVA::MethodANNBase::InitANNBase(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTMVA::MethodBase::IsSignalLike(); virtual Bool_tTMVA::MethodBase::IsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodMLP.html:7809,Hash,Hash,7809,root/html602/TMVA__MethodMLP.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodMLP.html,2,['Hash'],['Hash']
Security,"t; const TDatime&TKey::GetDatime() const; Int_t*GetDisplacement() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_t*GetEntryOffset() const; Int_tGetEntryPointer(Int_t Entry); TFile*TKey::GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Int_tTKey::GetKeylen() const; Int_tGetLast() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; Int_tGetNevBuf() const; Int_tGetNevBufSize() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTKey::GetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tTKey::GetSeekKey() const; virtual Long64_tTKey::GetSeekPdir() const; virtual const char*TKey::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTKey::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTKey::Hash() const; virtual voidTKey::IncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTKey::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTKey::Keep(); Int_tLoadBasketBuffers(Long64_t pos, Int_t len, TFile* file); virtual voidTKey::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMoveEntries(Int_t dentries); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBasket.html:3177,Hash,Hash,3177,root/html526/TBasket.html,https://root.cern,https://root.cern/root/html526/TBasket.html,2,['Hash'],['Hash']
Security,"t; const TDatime&TKey::GetDatime() const; Int_t*GetDisplacement() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_t*GetEntryOffset() const; Int_tGetEntryPointer(Int_t Entry); TFile*TKey::GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Int_tTKey::GetKeylen() const; Int_tGetLast() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; Int_tGetNevBuf() const; Int_tGetNevBufSize() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTKey::GetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tTKey::GetSeekKey() const; virtual Long64_tTKey::GetSeekPdir() const; virtual const char*TKey::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTKey::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTKey::Hash() const; virtual voidTKey::IncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTKey::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTKey::Keep(); Int_tLoadBasketBuffers(Long64_t pos, Int_t len, TFile* file); virtual voidTKey::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMoveEntries(Int_t dentries); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBasket.html:3177,Hash,Hash,3177,root/html530/TBasket.html,https://root.cern,https://root.cern/root/html530/TBasket.html,2,['Hash'],['Hash']
Security,"t; const TDatime&TKey::GetDatime() const; Int_t*GetDisplacement() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_t*GetEntryOffset() const; Int_tGetEntryPointer(Int_t Entry); TFile*TKey::GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Int_tTKey::GetKeylen() const; Int_tGetLast() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; Int_tGetNevBuf() const; Int_tGetNevBufSize() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTKey::GetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tTKey::GetSeekKey() const; virtual Long64_tTKey::GetSeekPdir() const; virtual const char*TKey::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTKey::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTKey::Hash() const; virtual voidTKey::IncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTKey::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTKey::Keep(); Int_tLoadBasketBuffers(Long64_t pos, Int_t len, TFile* file, TTree* tree = 0); virtual voidTKey::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMoveEntries(Int_t dentries); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBasket.html:3177,Hash,Hash,3177,root/html534/TBasket.html,https://root.cern,https://root.cern/root/html534/TBasket.html,1,['Hash'],['Hash']
Security,"t; const TDatime&TKey::GetDatime() const; Int_t*GetDisplacement() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_t*GetEntryOffset() const; Int_tGetEntryPointer(Int_t Entry); TFile*TKey::GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Int_tTKey::GetKeylen() const; Int_tGetLast() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; Int_tGetNevBuf() const; Int_tGetNevBufSize() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTKey::GetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tTKey::GetSeekKey() const; virtual Long64_tTKey::GetSeekPdir() const; virtual const char*TKey::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTKey::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTKey::Hash() const; virtual voidTKey::IncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTKey::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTKey::Keep(); Int_tLoadBasketBuffers(Long64_t pos, Int_t len, TFile* file, TTree* tree = 0); virtual voidTKey::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMoveEntries(Int_t dentries); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBasket.html:3071,Hash,Hash,3071,root/html602/TBasket.html,https://root.cern,https://root.cern/root/html602/TBasket.html,2,['Hash'],['Hash']
Security,"t; const TObjArray*FindRules(const TString& source) const; const ROOT::TSchemaMatch*FindRules(const TString& source, Int_t version) const; const ROOT::TSchemaMatch*FindRules(const TString& source, UInt_t checksum) const; const ROOT::TSchemaMatch*FindRules(const TString& source, Int_t version, UInt_t checksum) const; TClass*GetClass(); UInt_tGetClassCheckSum() const; TStringGetClassName() const; Int_tGetClassVersion() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TObjArray*GetPersistentRules() const; const TObjArray*GetRules() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasRuleWithSourceClass(const TString& source) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__TSchemaRuleSet.html:2778,Hash,Hash,2778,root/html526/ROOT__TSchemaRuleSet.html,https://root.cern,https://root.cern/root/html526/ROOT__TSchemaRuleSet.html,2,['Hash'],['Hash']
Security,"t; const TObjArray*FindRules(const TString& source) const; const ROOT::TSchemaMatch*FindRules(const TString& source, Int_t version) const; const ROOT::TSchemaMatch*FindRules(const TString& source, UInt_t checksum) const; const ROOT::TSchemaMatch*FindRules(const TString& source, Int_t version, UInt_t checksum) const; TClass*GetClass(); UInt_tGetClassCheckSum() const; TStringGetClassName() const; Int_tGetClassVersion() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TObjArray*GetPersistentRules() const; const TObjArray*GetRules() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasRuleWithSourceClass(const TString& source) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator dele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__TSchemaRuleSet.html:2930,Hash,Hash,2930,root/html530/ROOT__TSchemaRuleSet.html,https://root.cern,https://root.cern/root/html530/ROOT__TSchemaRuleSet.html,3,['Hash'],['Hash']
Security,"t; const TObjArray*FindRules(const TString& source) const; const ROOT::TSchemaMatch*FindRules(const TString& source, Int_t version) const; const ROOT::TSchemaMatch*FindRules(const TString& source, UInt_t checksum) const; const ROOT::TSchemaMatch*FindRules(const TString& source, Int_t version, UInt_t checksum) const; TClass*GetClass(); UInt_tGetClassCheckSum() const; TStringGetClassName() const; Int_tGetClassVersion() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TObjArray*GetPersistentRules() const; const TObjArray*GetRules() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasRuleWithSourceClass(const TString& source) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TSchemaRuleSet.html:2954,Hash,Hash,2954,root/html602/ROOT__TSchemaRuleSet.html,https://root.cern,https://root.cern/root/html602/ROOT__TSchemaRuleSet.html,2,['Hash'],['Hash']
Security,"t; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i) const; read-only access of vector elements. Index starts from 0. const T& operator()(unsigned int i) const; read-only access of vector elements. Index starts from 0. const T& At(unsigned int i) const; read-only access of vector elements with check on index. Index starts from 0. T& operator[](unsigned int i); read/write access of vector elements. Index starts from 0. T& operator()(unsigned int i); read/write access of vector elements. Index starts from 0. T& At(unsigned int i); read/write access of vector elements with check on index. Index starts from 0. SVector<T,D>& operator+=(const T& rhs); self addition with a scalar. SVector<T,D>& operator-=(const T& rhs); self subtraction with a scalar. SVector<T,D>& operator*=(const Double32_t& rhs); self multiplication with a scalar. SVector<T,D>& operator/=(const Double32_t& rhs); self division with a scalar. SVector<T,D>& operator+=(const SVector<T,D>& rhs); self addition with another vector. SVector<T,D>& operator-=(const SVector<T,D>& rhs); self subtraction with another vector. SVector<T,D>& Unit(); @name --- Expert functions --- ; transform ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SVector_Double32_t_3_.html:6121,access,access,6121,root/html528/ROOT__Math__SVector_Double32_t_3_.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SVector_Double32_t_3_.html,16,['access'],['access']
Security,"t; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i) const; read-only access of vector elements. Index starts from 0. const T& operator()(unsigned int i) const; read-only access of vector elements. Index starts from 0. const T& At(unsigned int i) const; read-only access of vector elements with check on index. Index starts from 0. T& operator[](unsigned int i); read/write access of vector elements. Index starts from 0. T& operator()(unsigned int i); read/write access of vector elements. Index starts from 0. T& At(unsigned int i); read/write access of vector elements with check on index. Index starts from 0. SVector<T,D>& operator+=(const T& rhs); self addition with a scalar. SVector<T,D>& operator-=(const T& rhs); self subtraction with a scalar. SVector<T,D>& operator*=(const double& rhs); self multiplication with a scalar. SVector<T,D>& operator/=(const double& rhs); self division with a scalar. SVector<T,D>& operator+=(const SVector<T,D>& rhs); self addition with another vector. SVector<T,D>& operator-=(const SVector<T,D>& rhs); self subtraction with another vector. SVector<T,D>& Unit(); @name --- Expert functions --- ; transform vector i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SVector_double_2_.html:5601,access,access,5601,root/html528/ROOT__Math__SVector_double_2_.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SVector_double_2_.html,44,['access'],['access']
Security,"t; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison. bool operator>(const T& rhs); element wise comparison. bool operator<(const T& rhs); element wise comparison. bool operator>(const SVector<T,D>& rhs); element wise comparison. bool operator<(const SVector<T,D>& rhs); element wise comparison. const T& operator[](unsigned int i) const; read-only access of vector elements. Index starts from 0. const T& operator()(unsigned int i) const; read-only access of vector elements. Index starts from 0. const T& At(unsigned int i) const; read-only access of vector elements with check on index. Index starts from 0. T& operator[](unsigned int i); read/write access of vector elements. Index starts from 0. T& operator()(unsigned int i); read/write access of vector elements. Index starts from 0. T& At(unsigned int i); read/write access of vector elements with check on index. Index starts from 0. SVector<T,D>& operator+=(const T& rhs); self addition with a scalar. SVector<T,D>& operator-=(const T& rhs); self subtraction with a scalar. SVector<T,D>& operator*=(const float& rhs); self multiplication with a scalar. SVector<T,D>& operator/=(const float& rhs); self division with a scalar. SVector<T,D>& operator+=(const SVector<T,D>& rhs); self addition with another vector. SVector<T,D>& operator-=(const SVector<T,D>& rhs); self subtraction with another vector. SVector<T,D>& Unit(); @name --- Expert functions --- ; transform vector int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__SVector_float_2_.html:5471,access,access,5471,root/html528/ROOT__Math__SVector_float_2_.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__SVector_float_2_.html,36,['access'],['access']
Security,"t; static Long_tTObject::GetDtorOnly(); virtual Int_tGetExecID() const; Double_tGetFactor() const; virtual const char*GetFullName() const; virtual const char*TObject::GetIconName() const; virtual const char*GetInclude() const; Int_tGetMaxIndex(Int_t i) const; virtual ULong_tGetMethod() const; virtual const char*TNamed::GetName() const; TClass*GetNewClass() const; Int_tGetNewType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tGetOffset() const; virtual Option_t*TObject::GetOption() const; virtual Int_tGetSize() const; TMemberStreamer*GetStreamer() const; virtual const char*TNamed::GetTitle() const; Int_tGetTObjectOffset() const; Int_tGetType() const; const char*GetTypeName() const; const char*GetTypeNameBasic() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetXmax() const; Double_tGetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tHasCounter() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TObject* obj = 0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsaPointer() const; virtual Bool_tIsBase() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsOldFormat(const char* newTypeName); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TStreamerElement.html:3019,Hash,Hash,3019,root/html528/TStreamerElement.html,https://root.cern,https://root.cern/root/html528/TStreamerElement.html,1,['Hash'],['Hash']
Security,"t; static Long_tTObject::GetDtorOnly(); virtual Int_tGetExecID() const; Double_tGetFactor() const; virtual const char*GetFullName() const; virtual const char*TObject::GetIconName() const; virtual const char*GetInclude() const; Int_tGetMaxIndex(Int_t i) const; virtual ULong_tGetMethod() const; virtual const char*TNamed::GetName() const; TClass*GetNewClass() const; Int_tGetNewType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tGetOffset() const; virtual Option_t*TObject::GetOption() const; virtual Int_tGetSize() const; TMemberStreamer*GetStreamer() const; virtual const char*TNamed::GetTitle() const; Int_tGetTObjectOffset() const; Int_tGetType() const; const char*GetTypeName() const; const char*GetTypeNameBasic() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetXmax() const; Double_tGetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tHasCounter() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TObject* obj = 0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsaPointer() const; virtual Bool_tIsBase() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsOldFormat(const char* newTypeName); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TStreamerElement.html:3019,Hash,Hash,3019,root/html530/TStreamerElement.html,https://root.cern,https://root.cern/root/html530/TStreamerElement.html,2,['Hash'],['Hash']
Security,"t; virtual Int_tGetDefaultColor() const; virtual Double_tGetDensity() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TGeoElement*GetElement(Int_t i = 0) const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; Int_tGetIndex(); virtual Double_tGetIntLen() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*GetPointerName() const; Double_tGetPressure() const; virtual Double_tGetRadLen() const; TGeoMaterial::EGeoMaterialStateGetState() const; Double_tGetTemperature() const; virtual const char*TNamed::GetTitle() const; Char_tGetTransparency() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEq(const TGeoMaterial* other) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsMixture() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tIsUsed() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoMaterial.html:3457,Hash,Hash,3457,root/html528/TGeoMaterial.html,https://root.cern,https://root.cern/root/html528/TGeoMaterial.html,1,['Hash'],['Hash']
Security,"t; virtual Int_tGetDefaultColor() const; virtual Double_tGetDensity() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TGeoElement*GetElement(Int_t i = 0) const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; Int_tGetIndex(); virtual Double_tGetIntLen() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*GetPointerName() const; Double_tGetPressure() const; virtual Double_tGetRadLen() const; TGeoMaterial::EGeoMaterialStateGetState() const; Double_tGetTemperature() const; virtual const char*TNamed::GetTitle() const; Char_tGetTransparency() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEq(const TGeoMaterial* other) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsMixture() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tIsUsed() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoMaterial.html:3457,Hash,Hash,3457,root/html530/TGeoMaterial.html,https://root.cern,https://root.cern/root/html530/TGeoMaterial.html,2,['Hash'],['Hash']
Security,"t; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTProofMgr::GetFile(const char*, const char*, const char* = 0); virtual const char*TObject::GetIconName() const; static TList*TProofMgr::GetListOfManagers(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TProofDesc*TProofMgr::GetProofDesc(Int_t id); virtual TProofDesc*TProofMgr::GetProofDesc(TProof* p); virtual Int_tTProofMgr::GetRemoteProtocol() const; virtual TProofLog*GetSessionLogs(Int_t ridx = 0, const char* stag = 0, const char* pattern = ""-v | SvcMsg""); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual const char*TProofMgr::GetUrl(); virtual voidTProofMgr::Grep(const char*, const char* = 0, const char* = 0); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTProofMgr::IsLite() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTProofMgr::IsProofd() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTProofMgr::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual voidTProofMgr::Ls(const char* = ""~/"", const char* = 0, const char* = 0); virtual Bool_tTProofMgr::MatchUrl(const char* url); voidTObject::MayNotUse(const char* method) const; virtual Int_tTProofMgr::Md5sum(const char*, TString&, const char* = 0); virtual voidTProofMgr::More(const char*, co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofMgrLite.html:3502,Hash,Hash,3502,root/html528/TProofMgrLite.html,https://root.cern,https://root.cern/root/html528/TProofMgrLite.html,1,['Hash'],['Hash']
Security,"t; virtual TObject*TList::First() const; virtual TObjLink*TList::FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; TList*GetListForObject(const char* name) const; TList*GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**TList::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tTList::IsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*TList::Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*TList::LastLink() const; virtual voidTCollection::ls(Option_t* option = """") con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THashList.html:4240,Hash,Hash,4240,root/html528/THashList.html,https://root.cern,https://root.cern/root/html528/THashList.html,1,['Hash'],['Hash']
Security,"t; virtual TObject*TObject::FindObject(const TObject* obj) const; TStringGetAccessId() const; TStringGetAccessIdKey() const; TStringGetAuthPrefix() const; TStringGetBucket() const; Int_tGetCurrentBuffer() const; TStringGetDatime() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TStringGetHost() const; EHTTP_VerbGetHTTPVerb() const; virtual const char*TObject::GetIconName() const; Long64_t*GetInitByte() const; Int_tGetLength() const; virtual const char*TObject::GetName() const; Int_tGetNumBuffers() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Long64_tGetOffset() const; virtual Option_t*TObject::GetOption() const; TStringGetPath() const; Int_t*GetRangeLength() const; TStringGetRequest(); TStringGetSignature() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasRange() const; TStringHTTPVerbToTString() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THTTPMessage.html:3753,Hash,Hash,3753,root/html532/THTTPMessage.html,https://root.cern,https://root.cern/root/html532/THTTPMessage.html,1,['Hash'],['Hash']
Security,"t; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetUxmax() const; virtual Double_tGetUxmin() const; virtual Double_tGetUymax() const; virtual Double_tGetUymin() const; virtual TView*GetView() const; virtual TObject*GetView3D() const; virtual TVirtualViewer3D*GetViewer3D(Option_t* type = """"); virtual TVirtualPad*GetVirtCanvas() const; virtual UInt_tGetWh() const; virtual Double_tGetWNDC() const; virtual UInt_tGetWw() const; virtual Double_tGetX1() const; virtual Double_tGetX2() const; Float_tTAttPad::GetXfile() const; virtual Double_tGetXlowNDC() const; Float_tTAttPad::GetXstat() const; virtual Double_tGetY1() const; virtual Double_tGetY2() const; Float_tTAttPad::GetYfile() const; virtual Double_tGetYlowNDC() const; Float_tTAttPad::GetYstat() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual Bool_tHasCrosshair() const; virtual Bool_tHasFixedAspectRatio() const; virtual ULong_tTObject::Hash() const; virtual Bool_tHasViewer3D() const; virtual voidHighLight(Color_t col = kRed, Bool_t set = kTRUE); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsBatch() const; Bool_tIsBeingResized() const; virtual Bool_tIsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsRetained() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; virtual Bool_tIsVertical() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVirtualPad.html:8905,Hash,Hash,8905,root/html528/TVirtualPad.html,https://root.cern,https://root.cern/root/html528/TVirtualPad.html,4,['Hash'],['Hash']
Security,"t; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetUxmax() const; virtual Double_tGetUxmin() const; virtual Double_tGetUymax() const; virtual Double_tGetUymin() const; virtual TView*GetView() const; virtual TObject*GetView3D() const; virtual TVirtualViewer3D*GetViewer3D(Option_t* type = """"); virtual TVirtualPad*GetVirtCanvas() const; virtual UInt_tGetWh() const; virtual Double_tGetWNDC() const; virtual UInt_tGetWw() const; virtual Double_tGetX1() const; virtual Double_tGetX2() const; Float_tTAttPad::GetXfile() const; virtual Double_tGetXlowNDC() const; Float_tTAttPad::GetXstat() const; virtual Double_tGetY1() const; virtual Double_tGetY2() const; Float_tTAttPad::GetYfile() const; virtual Double_tGetYlowNDC() const; Float_tTAttPad::GetYstat() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual Bool_tHasCrosshair() const; virtual Bool_tHasFixedAspectRatio() const; virtual ULong_tTObject::Hash() const; virtual Bool_tHasViewer3D() const; virtual voidHighLight(Color_t col = kRed, Bool_t set = kTRUE); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsBatch() const; Bool_tIsBeingResized() const; virtual Bool_tIsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsRetained() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; virtual Bool_tIsVertical() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualPad.html:9118,Hash,Hash,9118,root/html602/TVirtualPad.html,https://root.cern,https://root.cern/root/html602/TVirtualPad.html,2,['Hash'],['Hash']
Security,"t; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTText::GetTextAdvance(UInt_t& a, const char* text, const Bool_t kern = kTRUE) const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual voidTText::GetTextAscentDescent(UInt_t& a, UInt_t& d, const char* text) const; virtual Color_tTAttText::GetTextColor() const; virtual voidTText::GetTextExtent(UInt_t& w, UInt_t& h, const char* text) const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTText::GetX() const; Double_tGetXsize(); Double_tTText::GetY() const; Double_tGetYsize(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTText::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttText::Modify(); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLatex.html:22658,Hash,Hash,22658,root/html528/TLatex.html,https://root.cern,https://root.cern/root/html528/TLatex.html,1,['Hash'],['Hash']
Security,"t; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTText::GetTextAdvance(UInt_t& a, const char* text, const Bool_t kern = kTRUE) const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual voidTText::GetTextAscentDescent(UInt_t& a, UInt_t& d, const char* text) const; virtual Color_tTAttText::GetTextColor() const; virtual voidTText::GetTextExtent(UInt_t& w, UInt_t& h, const char* text) const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTText::GetX() const; Double_tGetXsize(); Double_tTText::GetY() const; Double_tGetYsize(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTText::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttText::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TLatex.html:22658,Hash,Hash,22658,root/html530/TLatex.html,https://root.cern,https://root.cern/root/html530/TLatex.html,2,['Hash'],['Hash']
Security,"t; virtual const char*TNamed::GetTitle() const; virtual Long64_tTTree::GetTotBytes() const; TBuffer*TTree::GetTransientBuffer(Int_t size); virtual TTree*TChain::GetTree() const; virtual TVirtualIndex*TTree::GetTreeIndex() const; virtual Int_tTChain::GetTreeNumber() const; Long64_t*TChain::GetTreeOffset() const; Int_tTChain::GetTreeOffsetLen() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTTree::GetUpdate() const; virtual TList*TTree::GetUserInfo(); virtual Double_t*TTree::GetV1(); virtual Double_t*TTree::GetV2(); virtual Double_t*TTree::GetV3(); virtual Double_t*TTree::GetV4(); virtual Double_t*TTree::GetVal(Int_t i); TTreeFormula*TTree::GetVar(Int_t i); TTreeFormula*TTree::GetVar1(); TTreeFormula*TTree::GetVar2(); TTreeFormula*TTree::GetVar3(); TTreeFormula*TTree::GetVar4(); virtual Double_t*TTree::GetW(); virtual Double_tTChain::GetWeight() const; virtual Long64_tTTree::GetZipBytes() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tHasTreeHeader() const; virtual voidTTree::IncrementTotalBuffers(Int_t nbytes); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTTree::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Int_tTChain::LoadBaskets(Long64_t maxmemory); virtual Long64_tTChain::LoadTree(Long64_t entry); virtual Long64_tTTree::LoadTreeFriend(Long64_t entry, TTree* T); voidTChain::Lookup(Bool_t force = kFALSE); virtual voidTChain::Loop(Option_t* option = """", Long64_t nentries = kBigNumber, Long64_t firstentry = 0)MENU ; virtual voidTChain::ls(O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofChain.html:10252,Hash,Hash,10252,root/html530/TProofChain.html,https://root.cern,https://root.cern/root/html530/TProofChain.html,5,['Hash'],['Hash']
Security,"t; virtual const char*TSlave::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*TSlave::GetOrdinal() const; Int_tTSlave::GetParallel() const; Int_tTSlave::GetPerfIdx() const; Int_tTSlave::GetPort() const; TProof*TSlave::GetProof() const; const char*TSlave::GetProofWorkDir() const; Int_tTSlave::GetProtocol() const; Float_tTSlave::GetRealTime() const; const char*TSlave::GetROOTVersion() const; const char*TSlave::GetSessionTag() const; Int_tTSlave::GetSlaveType() const; TSocket*TSlave::GetSocket() const; Int_tTSlave::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSlave::GetUser() const; const char*TSlave::GetWorkDir() const; virtual Bool_tHandleError(const void* in = 0); virtual Bool_tHandleInput(const void* in = 0); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTSlave::IsSortable() const; virtual Bool_tTSlave::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TXSlave.html:3397,Hash,Hash,3397,root/html530/TXSlave.html,https://root.cern,https://root.cern/root/html530/TXSlave.html,3,['Hash'],['Hash']
Security,"t; virtual const char*TSlave::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*TSlave::GetOrdinal() const; Int_tTSlave::GetParallel() const; Int_tTSlave::GetPerfIdx() const; Int_tTSlave::GetPort() const; TProof*TSlave::GetProof() const; const char*TSlave::GetProofWorkDir() const; Int_tTSlave::GetProtocol() const; Float_tTSlave::GetRealTime() const; const char*TSlave::GetROOTVersion() const; const char*TSlave::GetSessionTag() const; Int_tTSlave::GetSlaveType() const; TSocket*TSlave::GetSocket() const; Int_tTSlave::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSlave::GetUser() const; const char*TSlave::GetWorkDir() const; virtual Bool_tHandleError(const void* in = 0); virtual Bool_tHandleInput(const void* in = 0); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTSlave::IsSortable() const; virtual Bool_tTSlave::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXSlave.html:3281,Hash,Hash,3281,root/html602/TXSlave.html,https://root.cern,https://root.cern/root/html602/TXSlave.html,2,['Hash'],['Hash']
Security,"t; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction4Map<double,double,double,double,int>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction4Ref_double_double_double_double_int_.html:3208,Hash,Hash,3208,root/html526/RooCFunction4Ref_double_double_double_double_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction4Ref_double_double_double_double_int_.html,2,['Hash'],['Hash']
Security,"t; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction4Map<double,double,double,double,int>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction4Ref_double_double_double_double_int_.html:3208,Hash,Hash,3208,root/html530/RooCFunction4Ref_double_double_double_double_int_.html,https://root.cern,https://root.cern/root/html530/RooCFunction4Ref_double_double_double_double_int_.html,3,['Hash'],['Hash']
Security,"t; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction4Map<double,double,double,double,int>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction4Ref_double_double_double_double_int_.html:2889,Hash,Hash,2889,root/html602/RooCFunction4Ref_double_double_double_double_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction4Ref_double_double_double_double_int_.html,2,['Hash'],['Hash']
Security,"t; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static UInt_tGetCSLevel(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; UInt_tGetSections(UInt_t mask) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; static voidIncCSLevel(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; UInt_tNbPnts() const; UInt_tNbPols() const; UInt_tNbSegs() const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBuffer3D.html:11126,Hash,Hash,11126,root/html526/TBuffer3D.html,https://root.cern,https://root.cern/root/html526/TBuffer3D.html,2,['Hash'],['Hash']
Security,"t; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static UInt_tGetCSLevel(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; UInt_tGetSections(UInt_t mask) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; static voidIncCSLevel(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; UInt_tNbPnts() const; UInt_tNbPols() const; UInt_tNbSegs() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBuffer3D.html:11126,Hash,Hash,11126,root/html530/TBuffer3D.html,https://root.cern,https://root.cern/root/html530/TBuffer3D.html,3,['Hash'],['Hash']
Security,"t; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static UInt_tGetCSLevel(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; UInt_tGetSections(UInt_t mask) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; static voidIncCSLevel(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; UInt_tNbPnts() const; UInt_tNbPols() const; UInt_tNbSegs() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBuffer3D.html:10959,Hash,Hash,10959,root/html602/TBuffer3D.html,https://root.cern,https://root.cern/root/html602/TBuffer3D.html,2,['Hash'],['Hash']
Security,"t; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); static Bool_tParseUrl(const char* url, TString& archive, TString& member, TString& type). private:. TArchiveFile&operator=(const TArchiveFile&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfArchiveNameArchive file name; TArchiveMember*fCurMemberCurrent archive member; TFile*fFileFile stream used to access the archive; Int_tfMemberIndexIndex of sub-file in archive; TStringfMemberNameSub-file name; TObjArray*fMembersMembers in this archive. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TArchiveFile(); Dtor. Long64_t GetMemberFilePosition() const; Return position in archive of current member. Int_t GetNumberOfMembers() const; Returns number of members in archive. Int_t SetMember(const char *member); Explicitely make the specified member the current member.; Returns -1 in case of error, 0 otherwise. Int_t SetMember(Int_t idx); Explicitely make the member with the specified index the current member.; Returns -1 in case of error, 0 otherwise. TArchiveFile * Open(const char* url, TFile* file); Return proper archive file handler depending on passed url.; The handler is loaded via the plugin manager and is triggered by; the extension of the archive file. In case no handler is found 0; is returned. The file argument is used to access the archive.; The arch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TArchiveFile.html:5882,access,access,5882,root/html526/TArchiveFile.html,https://root.cern,https://root.cern/root/html526/TArchiveFile.html,1,['access'],['access']
Security,"t; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); static Bool_tParseUrl(const char* url, TString& archive, TString& member, TString& type). private:. TArchiveFile&operator=(const TArchiveFile&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfArchiveNameArchive file name; TArchiveMember*fCurMemberCurrent archive member; TFile*fFileFile stream used to access the archive; Int_tfMemberIndexIndex of sub-file in archive; TStringfMemberNameSub-file name; TObjArray*fMembersMembers in this archive. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TArchiveFile(); Dtor. Long64_t GetMemberFilePosition() const; Return position in archive of current member. Int_t GetNumberOfMembers() const; Returns number of members in archive. Int_t SetMember(const char* member); Explicitely make the specified member the current member.; Returns -1 in case of error, 0 otherwise. Int_t SetMember(Int_t idx); Explicitely make the member with the specified index the current member.; Returns -1 in case of error, 0 otherwise. TArchiveFile * Open(const char* url, TFile* file); Return proper archive file handler depending on passed url.; The handler is loaded via the plugin manager and is triggered by; the extension of the archive file. In case no handler is found 0; is returned. The file argument is used to access the archive.; The arch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TArchiveFile.html:5868,access,access,5868,root/html528/TArchiveFile.html,https://root.cern,https://root.cern/root/html528/TArchiveFile.html,4,['access'],['access']
Security,"t; void*DynamicCast(const TClass* base, void* obj, Bool_t up = kTRUE); const void*DynamicCast(const TClass* base, const void* obj, Bool_t up = kTRUE); virtual voidTObject::Error(const char* method, const char* msgfmt) const; char*EscapeChars(const char* text) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); TVirtualStreamerInfo*FindConversionStreamerInfo(const char* onfile_classname, UInt_t checksum) const; TVirtualStreamerInfo*FindConversionStreamerInfo(const TClass* onfile_cl, UInt_t checksum) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TVirtualStreamerInfo*FindStreamerInfo(UInt_t checksum) const; TVirtualStreamerInfo*FindStreamerInfoAbstractEmulated(UInt_t checksum) const; TClass*GetActualClass(const void* object) const; TDictAttributeMap*TDictionary::GetAttributeMap() const; TClass*GetBaseClass(const char* classname); TClass*GetBaseClass(const TClass* base); Int_tGetBaseClassOffset(const TClass* toBase, void* address = 0, bool isDerivedObject = true); TClass*GetBaseDataMember(const char* datamember); UInt_tGetCheckSum(TClass::ECheckSum code = kCurrentCheckSum) const; UInt_tGetCheckSum(Bool_t& isvalid) const; UInt_tGetCheckSum(TClass::ECheckSum code, Bool_t& isvalid) const; static Bool_tGetClass(TDictionary::DeclId_t id, vector<TClass*>& classes); static TClass*GetClass(const char* name, Bool_t load = kTRUE, Bool_t silent = kFALSE); static TClass*GetClass(const type_info& typeinfo, Bool_t load = kTRUE, Bool_t silent = kFALSE); static TClass*GetClass(ClassInfo_t* info, Bool_t load = kTRUE, Bool_t silent = kFALSE); ClassInfo_t*GetClassInfo() const; TMethod*GetClassMet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClass.html:3717,checksum,checksum,3717,root/html602/TClass.html,https://root.cern,https://root.cern/root/html602/TClass.html,2,['checksum'],['checksum']
Security,"t;  ; Bool_t UsesPosteriorMode () const;  ; Bool_t UsesShortestInterval () const;  ; Bool_t UsesWeights () const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that y",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEfficiency.html:40777,Hash,Hash,40777,doc/master/classTEfficiency.html,https://root.cern,https://root.cern/doc/master/classTEfficiency.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"t;  ; const Event * GetEvent (Long64_t ievt, Types::ETreeType type) const;  ; const std::vector< Event * > & GetEventCollection (Types::ETreeType type=Types::kMaxTreeType) const;  ; const TTree * GetEventCollectionAsTree ();  ; Long64_t GetNClassEvents (Int_t type, UInt_t classNumber);  ; Long64_t GetNEvents (Types::ETreeType type=Types::kMaxTreeType) const;  ; Long64_t GetNEvtBkgdTest ();  return number of background test events in dataset ;  ; Long64_t GetNEvtBkgdTrain ();  return number of background training events in dataset ;  ; Long64_t GetNEvtSigTest ();  return number of signal test events in dataset ;  ; Long64_t GetNEvtSigTrain ();  return number of signal training events in dataset ;  ; UInt_t GetNSpectators () const;  access the number of targets through the datasetinfo ;  ; UInt_t GetNTargets () const;  access the number of targets through the datasetinfo ;  ; Long64_t GetNTestEvents () const;  ; Long64_t GetNTrainingEvents () const;  ; UInt_t GetNVariables () const;  access the number of variables through the datasetinfo ;  ; Results * GetResults (const TString &, Types::ETreeType type, Types::EAnalysisType analysistype);  ; const Event * GetTestEvent (Long64_t ievt) const;  ; const Event * GetTrainingEvent (Long64_t ievt) const;  ; TTree * GetTree (Types::ETreeType type);  create the test/trainings tree with all the variables, the weights, the classes, the targets, the spectators, the MVA outputs ;  ; Bool_t HasNegativeEventWeights () const;  ; void IncrementNClassEvents (Int_t type, UInt_t classNumber);  ; void InitSampling (Float_t fraction, Float_t weight, UInt_t seed=0);  initialize random or importance sampling ;  ; virtual TClass * IsA () const;  ; void MoveTrainingBlock (Int_t blockInd, Types::ETreeType dest, Bool_t applyChanges=kTRUE);  move training block ;  ; void SetCurrentEvent (Long64_t ievt) const;  ; void SetCurrentType (Types::ETreeType type) const;  ; void SetEventCollection (std::vector< Event * > *, Types::ETreeType, Bool_t deleteEv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSet.html:2499,access,access,2499,doc/master/classTMVA_1_1DataSet.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSet.html,1,['access'],['access']
Security,"t;  ; struct  TString::RawStr_t;  ; struct  TString::Rep_t;  ; struct  TString::ShortStr_t;  ; class  TString;  Basic string class. More...;  ; class  TSubString;  A zero length substring is legal. More...;  ; union  TString::UStr_t;  . Namespaces; namespace  llvm;  . Functions; char * Compress (const char *str);  Remove all blanks from the string str. ;  ; int EscChar (const char *src, char *dst, int dstlen, char *specchars, char escchar);  Escape specchars in src with escchar and copy to dst. ;  ; char * Form (const char *fmt,...);  Formats a string in a circular formatting buffer. ;  ; UInt_t Hash (const char *s);  Return a case-sensitive hash value (endian independent). ;  ; UInt_t Hash (const TString &s);  ; UInt_t Hash (const TString *s);  ; Bool_t operator!= (const char *s1, const TString &s2);  ; Bool_t operator!= (const char *s1, const TSubString &s2);  ; Bool_t operator!= (const TString &s1, const char *s2);  ; Bool_t operator!= (const TString &s1, const TString &s2);  ; Bool_t operator!= (const TString &s1, const TSubString &s2);  ; Bool_t operator!= (const TSubString &s1, const char *s2);  ; Bool_t operator!= (const TSubString &s1, const TString &s2);  ; Bool_t operator!= (const TSubString &s1, const TSubString &s2);  ; TString operator+ (char c, const TString &s);  Add string to char. ;  ; TString operator+ (const char *cs, const TString &s);  Use the special concatenation constructor. ;  ; TString operator+ (const TString &s, char c);  Add char to string. ;  ; TString operator+ (const TString &s, const char *cs);  Use the special concatenation constructor. ;  ; TString operator+ (const TString &s1, const TString &s2);  Use the special concatenation constructor. ;  ; template<class T > ; std::enable_if< ROOT::TypeTraits::IsFloatNumeral< T >::value, TString >::type operator+ (T f, const TString &s);  ; template<class T > ; std::enable_if< ROOT::TypeTraits::IsSignedNumeral< T >::value, TString >::type operator+ (T i, const TString &s);  ; template<class T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8h.html:1268,Hash,Hash,1268,doc/master/TString_8h.html,https://root.cern,https://root.cern/doc/master/TString_8h.html,2,['Hash'],['Hash']
Security,"t<ArgTypes>,; 2912 typename T = TTraits::TakeFirstParameter_t<TTraits::RemoveFirstParameter_t<ArgTypes>>>; 2913 RResultPtr<U> Aggregate(AccFun aggregator, MergeFun merger, std::string_view columnName = """"); 2914 {; 2915 static_assert(; 2916 std::is_default_constructible<U>::value,; 2917 ""aggregated object cannot be default-constructed. Please provide an initialisation value (aggIdentity)"");; 2918 return Aggregate(std::move(aggregator), std::move(merger), columnName, U());; 2919 }; 2920 ; 2921 // clang-format off; 2922 ////////////////////////////////////////////////////////////////////////////; 2923 /// \brief Book execution of a custom action using a user-defined helper object.; 2924 /// \tparam FirstColumn The type of the first column used by this action. Inferred together with OtherColumns if not present.; 2925 /// \tparam OtherColumns A list of the types of the other columns used by this action; 2926 /// \tparam Helper The type of the user-defined helper. See below for the required interface it should expose.; 2927 /// \param[in] helper The Action Helper to be scheduled.; 2928 /// \param[in] columns The names of the columns on which the helper acts.; 2929 /// \return the result of the helper wrapped in a RResultPtr.; 2930 ///; 2931 /// This method books a custom action for execution. The behavior of the action is completely dependent on the; 2932 /// Helper object provided by the caller. The required interface for the helper is described below (more; 2933 /// methods that the ones required can be present, e.g. a constructor that takes the number of worker threads is usually useful):; 2934 ///; 2935 /// ### Mandatory interface; 2936 ///; 2937 /// * `Helper` must publicly inherit from `ROOT::Detail::RDF::RActionImpl<Helper>`; 2938 /// * `Helper::Result_t`: public alias for the type of the result of this action helper. `Result_t` must be default-constructible.; 2939 /// * `Helper(Helper &&)`: a move-constructor is required. Copy-constructors are discouraged.; 2940 /",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:164712,expose,expose,164712,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['expose'],['expose']
Security,"tAngleTAttTextprotected; fTextColorTAttTextprotected; fTextFontTAttTextprotected; fTextSizeTAttTextprotected; fTipTBoxprivate; fUniqueIDTObjectprivate; fX1TBoxprotected; fX1NDCTPaveprotected; fX2TBoxprotected; fX2NDCTPaveprotected; fY1TBoxprotected; fY1NDCTPaveprotected; fY2TBoxprotected; fY2NDCTPaveprotected; GetBBox() overrideTBoxvirtual; GetBBoxCenter() overrideTBoxvirtual; GetBorderSize() constTPaveinline; GetColumnSeparation() constTLegendinline; GetCornerRadius() constTPaveinline; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetEntry() constTLegend; GetEntrySeparation() constTLegendinline; GetFillColor() constTAttFillinlinevirtual; GetFillStyle() constTAttFillinlinevirtual; GetHeader() constTLegendvirtual; GetIconName() constTObjectvirtual; GetLineColor() constTAttLineinlinevirtual; GetLineStyle() constTAttLineinlinevirtual; GetLineWidth() constTAttLineinlinevirtual; GetListOfPrimitives() constTLegendinline; GetMargin() constTLegendinline; GetName() const overrideTPaveinlinevirtual; GetNColumns() constTLegendinline; GetNRows() constTLegend; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOption() const overrideTPaveinlinevirtual; GetShadowColor() constTPaveinline; GetTextAlign() constTAttTextinlinevirtual; GetTextAngle() constTAttTextinlinevirtual; GetTextColor() constTAttTextinlinevirtual; GetTextFont() constTAttTextinlinevirtual; GetTextSize() constTAttTextinlinevirtual; GetTextSizePercent(Float_t size)TAttTextvirtual; GetTitle() constTObjectvirtual; GetUniqueID() constTObjectvirtual; GetX1() constTBoxinline; GetX1NDC() constTPaveinline; GetX2() constTBoxinline; GetX2NDC() constTPaveinline; GetY1() constTBoxinline; GetY1NDC() constTPaveinline; GetY2() constTBoxinline; GetY2NDC() constTPaveinline; HandleTimer(TTimer *timer)TObjectvirtual; Hash() const overrideTPaveinlinevirtual; HasInconsistentHash() constTObjectinline; HideToolTip(Int_t event)TBoxvirtual; Info(const char *method, const char *msgfmt,.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLegend-members.html:4919,Hash,Hash,4919,doc/master/classTLegend-members.html,https://root.cern,https://root.cern/doc/master/classTLegend-members.html,1,['Hash'],['Hash']
Security,tBigFile; static TFile::EFileTypeTFile::kWeb; static TObject::(anonymous)TObject::kWriteDelete; static TFile::EStatusBitsTFile::kWriteError; static TObject::(anonymous)TObject::kZombie. protected:. TArchiveFile*TFile::fArchive!Archive file from which we read this file; Long64_tTFile::fArchiveOffset!Offset at which file starts in archive; TFileOpenHandle*TFile::fAsyncHandle!For proper automatic cleanup; TFile::EAsyncOpenStatusTFile::fAsyncOpenStatus!Status of an asynchronous open request; Long64_tTFile::fBEGINFirst used byte in file; TStringTWebFile::fBasicUrlbasic url without authentication and options; TStringTWebFile::fBasicUrlOrgsave original url in case of temp redirection; Int_tTDirectoryFile::fBufferSizeDefault buffer size to create new TKeys; Long64_tTFile::fBytesReadNumber of bytes read from this file; Long64_tTFile::fBytesReadExtraNumber of extra bytes (overhead) read by the readahead buffer; Long64_tTFile::fBytesWriteNumber of bytes written to this file; TFileCacheRead*TFile::fCacheRead!Pointer to the read cache (if any); TMap*TFile::fCacheReadMap!Pointer to the read cache (if any); TFileCacheWrite*TFile::fCacheWrite!Pointer to the write cache (if any); TArrayC*TFile::fClassIndex!Index of TStreamerInfo classes written to this file; Int_tTFile::fCompressCompression level and algorithm; TDirectory::TContext*TDirectory::fContext!Pointer to a list of TContext object pointing to this TDirectory; Int_tTFile::fDFile descriptor; TDatimeTDirectoryFile::fDatimeCDate and time when directory is created; TDatimeTDirectoryFile::fDatimeMDate and time of last modification; Long64_tTFile::fENDLast used byte in file; TFile*TDirectoryFile::fFilepointer to current file in memory; TList*TFile::fFreeFree segments linked list table; Bool_tTWebFile::fHTTP11true if server support HTTP/1.1; Bool_tTWebFile::fHasModRoottrue if server has mod_root installed; TList*TFile::fInfoCache!Cached list of the streamer infos in this file; Bool_tTFile::fInitDone!True if the file has been initial,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TS3WebFile.html:22062,authenticat,authentication,22062,root/html602/TS3WebFile.html,https://root.cern,https://root.cern/root/html602/TS3WebFile.html,2,['authenticat'],['authentication']
Security,"tBinCoord is a class used by THnSparse internally. It; 347maps between an n-dimensional array of bin coordinates (indices) and; 348its compact version, the THnSparseCoordCompression.; 349*/; 350 ; 351class THnSparseCompactBinCoord: public THnSparseCoordCompression {; 352public:; 353 THnSparseCompactBinCoord(Int_t dim, const Int_t* nbins);; 354 ~THnSparseCompactBinCoord();; 355 Int_t* GetCoord() { return fCurrentBin; }; 356 const Char_t* GetBuffer() const { return fCoordBuffer; }; 357 ULong64_t GetHash() const { return fHash; }; 358 void UpdateCoord() {; 359 fHash = SetBufferFromCoord(fCurrentBin, fCoordBuffer);; 360 }; 361 void SetCoord(const Int_t* coord) {; 362 memcpy(fCurrentBin, coord, sizeof(Int_t) * GetNdimensions());; 363 fHash = SetBufferFromCoord(coord, fCoordBuffer);; 364 }; 365 void SetBuffer(const Char_t* buf) {; 366 memcpy(fCoordBuffer, buf, GetBufferSize());; 367 fHash = GetHashFromBuffer(fCoordBuffer);; 368 }; 369 ; 370private:; 371 // intentionally not implemented; 372 THnSparseCompactBinCoord(const THnSparseCompactBinCoord&) = delete;; 373 // intentionally not implemented; 374 THnSparseCompactBinCoord& operator=(const THnSparseCompactBinCoord&) = delete;; 375 ; 376private:; 377 ULong64_t fHash; // hash for current coordinates; 0 if not calculated; 378 Char_t *fCoordBuffer; // compact buffer of coordinates; 379 Int_t *fCurrentBin; // current coordinates; 380};; 381 ; 382 ; 383//______________________________________________________________________________; 384//______________________________________________________________________________; 385 ; 386 ; 387////////////////////////////////////////////////////////////////////////////////; 388/// Initialize a THnSparseCompactBinCoord object with ""dim"" dimensions; 389/// and ""bins"" holding the number of bins for each dimension.; 390 ; 391THnSparseCompactBinCoord::THnSparseCompactBinCoord(Int_t dim, const Int_t* nbins):; 392 THnSparseCoordCompression(dim, nbins),; 393 fHash(0), fCoordBuffer(nullptr), fCurre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THnSparse_8cxx_source.html:12856,hash,hash,12856,doc/master/THnSparse_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THnSparse_8cxx_source.html,1,['hash'],['hash']
Security,"tBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; THtml::TFileSysEntryTFileSysEntry(const THtml::TFileSysEntry&); THtml::TFileSysEntryTFileSysEntry(const char* name, THtml::TFileSysDir* parent); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfLevellevel of directory; TStringfNamename of the element; THtml::TFileSysDir*fParentparent directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFileSysEntry(const char* name, THtml::TFileSysDir* parent); {}. const char* GetName() const; { return fName; }. ULong_t Hash() const; { return fName.Hash(); }. void GetFullName(TString& fullname, Bool_t asIncluded) const. TFileSysDir* GetParent() const; { return fParent; }. Int_t GetLevel() const; { return fLevel; }. TFileSysEntry(const char* name, THtml::TFileSysDir* parent); { fFiles.SetOwner(); fDirs.SetOwner(); }. TString fInputPath; // directories to look for classes; prepended to Decl/ ImplFileName(). » Author: Nenad Buncic 18/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id: THtml.h 27910 2009-03-21 17:26:55Z axel $ » Last generated: 2010-09-23 20:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THtml__TFileSysEntry.html:5628,Hash,Hash,5628,root/html528/THtml__TFileSysEntry.html,https://root.cern,https://root.cern/root/html528/THtml__TFileSysEntry.html,2,['Hash'],['Hash']
Security,"tBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; THtml::TFileSysEntryTFileSysEntry(const THtml::TFileSysEntry&); THtml::TFileSysEntryTFileSysEntry(const char* name, THtml::TFileSysDir* parent); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfLevellevel of directory; TStringfNamename of the element; THtml::TFileSysDir*fParentparent directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFileSysEntry(const char* name, THtml::TFileSysDir* parent); {}. const char* GetName() const; { return fName; }. ULong_t Hash() const; { return fName.Hash(); }. void GetFullName(TString& fullname, Bool_t asIncluded) const. TFileSysDir* GetParent() const; { return fParent; }. Int_t GetLevel() const; { return fLevel; }. TFileSysEntry(const char* name, THtml::TFileSysDir* parent); { fFiles.SetOwner(); fDirs.SetOwner(); }. TString fInputPath; // directories to look for classes; prepended to Decl/ ImplFileName(). » Author: Nenad Buncic 18/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id: THtml.h 27910 2009-03-21 17:26:55Z axel $ » Last generated: 2011-07-04 15:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/THtml__TFileSysEntry.html:5699,Hash,Hash,5699,root/html530/THtml__TFileSysEntry.html,https://root.cern,https://root.cern/root/html530/THtml__TFileSysEntry.html,2,['Hash'],['Hash']
Security,"tBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; THtml::TFileSysEntryTFileSysEntry(const THtml::TFileSysEntry&); THtml::TFileSysEntryTFileSysEntry(const char* name, THtml::TFileSysDir* parent); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfLevellevel of directory; TStringfNamename of the element; THtml::TFileSysDir*fParentparent directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFileSysEntry(const char* name, THtml::TFileSysDir* parent); {}. const char* GetName() const; { return fName; }. ULong_t Hash() const; { return fName.Hash(); }. void GetFullName(TString& fullname, Bool_t asIncluded) const. TFileSysDir* GetParent() const; { return fParent; }. Int_t GetLevel() const; { return fLevel; }. TFileSysEntry(const char* name, THtml::TFileSysDir* parent); { fFiles.SetOwner(); fDirs.SetOwner(); }. TString fInputPath; // directories to look for classes; prepended to Decl/ ImplFileName(). » Author: Nenad Buncic 18/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id: THtml.h 27910 2009-03-21 17:26:55Z axel $ » Last generated: 2011-11-03 20:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THtml__TFileSysEntry.html:5699,Hash,Hash,5699,root/html532/THtml__TFileSysEntry.html,https://root.cern,https://root.cern/root/html532/THtml__TFileSysEntry.html,2,['Hash'],['Hash']
Security,"tCache & expensiveObjectCache () const;  ; virtual void setExpensiveObjectCache (RooExpensiveObjectCache &cache);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:40200,Hash,Hash,40200,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,8,"['Hash', 'hash']","['Hash', 'hash']"
Security,"tClass ) {; 5871 sub->SetTargetClass(name);; 5872 } else {; 5873 // Since the top level changes, the StreamerInfo (in particular for split collection); 5874 // may still need to change (and the info might be updated else (see for example SetAddress for the; 5875 // the case fType 4/41); 5876 sub->ResetInitInfo(true);; 5877 }; 5878 if (sub->fParentClass == fTargetClass ) {; 5879 sub->SetParentClass(TClass::GetClass(name));; 5880 }; 5881 }; 5882 fTargetClass = name;; 5883 }; 5884 ; 5885}; 5886 ; 5887////////////////////////////////////////////////////////////////////////////////; 5888/// If the branch address is not set, we set all addresses starting with; 5889/// the top level parent branch. This is required to be done in order for; 5890/// GetOffset to be correct and for GetEntry to run.; 5891 ; 5892void TBranchElement::SetupAddresses(); 5893{; 5894 // Check to see if the user changed the branch address on us.; 5895 ValidateAddress();; 5896 ; 5897 if (fAddress || TestBit(kDecomposedObj)) {; 5898 // -- Do nothing if already setup or if we are a MakeClass branch.; 5899 return;; 5900 }; 5901 SetupAddressesImpl();; 5902}; 5903 ; 5904////////////////////////////////////////////////////////////////////////////////; 5905/// If the branch address is not set, we set all addresses starting with; 5906/// the top level parent branch. This is required to be done in order for; 5907/// GetOffset to be correct and for GetEntry to run.; 5908 ; 5909void TBranchElement::SetupAddressesImpl(); 5910{; 5911 if (TestBit((long)kDoNotProcess|(long)kAddressSet)) {; 5912 // -- Do nothing if we have been told not to.; 5913 // Or the data member in this branch is not longer part of the; 5914 // parent's layout.; 5915 return;; 5916 }; 5917 ; 5918 //--------------------------------------------------------------------------; 5919 // Check if we are splited STL collection of pointers; 5920 /////////////////////////////////////////////////////////////////////////////; 5921 ; 5922 if( fType == 41 && f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:220957,Validat,ValidateAddress,220957,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['Validat'],['ValidateAddress']
Security,"tCoordinates(ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>::Scalar& a, ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>::Scalar& b, ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>::Scalar& c) const. get internal data into 3 Scalar numbers. { fCoordinates.GetCoordinates(a, b, c); }. void GetCoordinates(Scalar[] dest) const. get internal data into a C-style array of 3 Scalar numbers. { fCoordinates.GetCoordinates(dest); }. bool operator==(const ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>& rhs) const; ------------------- Equality -----------------. Exact equality. bool operator!=(const ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>& rhs) const. Scalar X() const; ------ Individual element access, in various coordinate systems ------. Cartesian X, converting if necessary from internal coordinate system. { return fCoordinates.X(); }. Scalar Y() const. Cartesian Y, converting if necessary from internal coordinate system. { return fCoordinates.Y(); }. Scalar Z() const. Cartesian Z, converting if necessary from internal coordinate system. { return fCoordinates.Z(); }. Scalar R() const. Polar R, converting if necessary from internal coordinate system. { return fCoordinates.R(); }. Scalar Theta() const. Polar theta, converting if necessary from internal coordinate system. { return fCoordinates.Theta(); }. Scalar Phi() const. Polar phi, converting if necessary from internal coordinate system. { return fCoordinates.Phi(); }. Scalar Eta() const. Polar eta, converting if necessary from internal coordinate system. { return fCoordinates.Eta(); }. Scalar Rho() const. Cylindrical transverse component rho. { return fCoordinates.Rho(); }. Scalar Mag2() const; ----- Other fundamental pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_Double32_t__-p1LocalCoordinateSystemTag_.html:13431,access,access,13431,root/html602/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_Double32_t__-p1LocalCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_Double32_t__-p1LocalCoordinateSystemTag_.html,2,['access'],['access']
Security,"tDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompBK.html:5248,Hash,Hash,5248,doc/master/classTDecompBK.html,https://root.cern,https://root.cern/doc/master/classTDecompBK.html,12,['Hash'],['Hash']
Security,"tDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetEntries(); virtual Long64_tGetEntriesFast() const; virtual Long64_tTEntryList::GetEntriesToProcess() const; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char*, const char*, Option_t*); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tTEntryList::GetReapplyCut() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTreeName() const; virtual Int_tGetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Int_tLoadList(Int_t listnumber); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection*); virtual Long64_tNext(); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEntryListFromFile.html:4000,Hash,Hash,4000,root/html528/TEntryListFromFile.html,https://root.cern,https://root.cern/root/html528/TEntryListFromFile.html,1,['Hash'],['Hash']
Security,"tDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetEntries(); virtual Long64_tGetEntriesFast() const; virtual Long64_tTEntryList::GetEntriesToProcess() const; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char*, const char*, Option_t*); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tTEntryList::GetReapplyCut() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTreeName() const; virtual Int_tGetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Int_tLoadList(Int_t listnumber); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection*); virtual Long64_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEntryListFromFile.html:4000,Hash,Hash,4000,root/html530/TEntryListFromFile.html,https://root.cern,https://root.cern/root/html530/TEntryListFromFile.html,3,['Hash'],['Hash']
Security,"tDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGetEntries(); virtual Long64_tGetEntriesFast() const; virtual Long64_tTEntryList::GetEntriesToProcess() const; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char*, const char*, Option_t*); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tTEntryList::GetReapplyCut() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTreeName() const; virtual Int_tGetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Int_tLoadList(Int_t listnumber); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection*); virtual Long64_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEntryListFromFile.html:3853,Hash,Hash,3853,root/html602/TEntryListFromFile.html,https://root.cern,https://root.cern/root/html602/TEntryListFromFile.html,2,['Hash'],['Hash']
Security,"tEdit.; Definition at line 486 of file TGTextView.cxx. ◆ Copy() [2/2]. void TGTextView::Copy ; (; TObject & ; object); const. inlineoverrideprotectedvirtual . Copy this to obj. ; Reimplemented from TObject.; Definition at line 54 of file TGTextView.h. ◆ DataChanged(). virtual void TGTextView::DataChanged ; (; ). inlinevirtual . Definition at line 135 of file TGTextView.h. ◆ DataDropped(). virtual void TGTextView::DataDropped ; (; const char * ; fname). inlinevirtual . Definition at line 136 of file TGTextView.h. ◆ DeclFileName(). static const char * TGTextView::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 141 of file TGTextView.h. ◆ DoubleClicked(). virtual void TGTextView::DoubleClicked ; (; const char * ; word). inlinevirtual . Definition at line 139 of file TGTextView.h. ◆ DrawRegion(). void TGTextView::DrawRegion ; (; Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overrideprotectedvirtual . Draw lines in exposed region. ; Reimplemented from TGView.; Definition at line 539 of file TGTextView.cxx. ◆ GetDefaultFontStruct(). FontStruct_t TGTextView::GetDefaultFontStruct ; (; ). staticprotected . Return default font structure in use. ; Definition at line 1480 of file TGTextView.cxx. ◆ GetDefaultGC(). const TGGC & TGTextView::GetDefaultGC ; (; ). staticprotected . Return default graphics context in use. ; Definition at line 1526 of file TGTextView.cxx. ◆ GetDefaultSelectedBackgroundGC(). const TGGC & TGTextView::GetDefaultSelectedBackgroundGC ; (; ). staticprotected . Return graphics context for highlighted frame background. ; Definition at line 1550 of file TGTextView.cxx. ◆ GetDefaultSelectedGC(). const TGGC & TGTextView::GetDefaultSelectedGC ; (; ). staticprotected . Return selection graphics context in use. ; Definition at line 1538 of file TGTextView.cxx. ◆ GetText(). TGText * TGTextView::GetText ; (; ); const. inline . Definition at line 115 of file TGTextView.h. ◆ HandleButton(). Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextView.html:44519,expose,exposed,44519,doc/master/classTGTextView.html,https://root.cern,https://root.cern/doc/master/classTGTextView.html,1,['expose'],['exposed']
Security,"tEval(Double_t) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; voidGetKnot(Double_t& x, Double_t& y) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSplinePoly.html:2369,Hash,Hash,2369,root/html528/TSplinePoly.html,https://root.cern,https://root.cern/root/html528/TSplinePoly.html,1,['Hash'],['Hash']
Security,"tEval(Double_t) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; voidGetKnot(Double_t& x, Double_t& y) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSplinePoly.html:2369,Hash,Hash,2369,root/html530/TSplinePoly.html,https://root.cern,https://root.cern/root/html530/TSplinePoly.html,3,['Hash'],['Hash']
Security,"tEval(Double_t) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; voidGetKnot(Double_t& x, Double_t& y) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSplinePoly.html:2309,Hash,Hash,2309,root/html602/TSplinePoly.html,https://root.cern,https://root.cern/root/html602/TSplinePoly.html,2,['Hash'],['Hash']
Security,"tExtent(UInt_t& w, UInt_t& h, char* mess); virtual voidGetTextExtent(UInt_t& w, UInt_t& h, wchar_t* mess); virtual Font_tTAttText::GetTextFont() const; virtual Float_tGetTextMagnitude(); virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Visual_tGetVisual() const; virtual voidGetWindowAttributes(Window_t id, WindowAttributes_t& attr); virtual Window_tGetWindowID(Int_t wid); virtual voidGetWindowSize(Drawable_t id, Int_t& x, Int_t& y, UInt_t& w, UInt_t& h); virtual voidGrabButton(Window_t id, EMouseButton button, UInt_t modifier, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE); virtual voidGrabKey(Window_t id, Int_t keycode, UInt_t modifier, Bool_t grab = kTRUE); virtual voidGrabPointer(Window_t id, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE, Bool_t owner_events = kTRUE); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Bool_tHasTTFonts() const; virtual voidIconifyWindow(Window_t id); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tInit(void* display = 0); virtual Int_tInitWindow(ULong_t window); virtual voidTObject::Inspect() constMENU ; static TVirtualX*&Instance(); virtual Atom_tInternAtom(const char* atom_name, Bool_t only_if_exist); virtual voidIntersectRegion(Region_t rega, Region_t regb, Region_t result); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsCmdThread() const; virtual Bool_tIsDNDAware(Window_t win, Atom_t* typelist); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualX.html:10644,Hash,Hash,10644,root/html534/TVirtualX.html,https://root.cern,https://root.cern/root/html534/TVirtualX.html,3,['Hash'],['Hash']
Security,"tGetFile(const char* remote, const char* local, const char* opt = 0); virtual const char*TObject::GetIconName() const; static TList*TProofMgr::GetListOfManagers(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TProofDesc*TProofMgr::GetProofDesc(Int_t id); virtual TProofDesc*TProofMgr::GetProofDesc(TProof* p); virtual Int_tTProofMgr::GetRemoteProtocol() const; virtual TProofLog*GetSessionLogs(Int_t ridx = 0, const char* stag = 0, const char* pattern = ""-v \""| SvcMsg\""""); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual const char*TProofMgr::GetUrl(); virtual voidGrep(const char* what, const char* how = 0, const char* where = 0); virtual Bool_tHandleError(const void* in = 0); virtual Bool_tHandleInput(const void*); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTProofMgr::IsLite() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTProofMgr::IsProofd() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual voidLs(const char* what = ""~/"", const char* how = 0, const char* where = 0); virtual Bool_tMatchUrl(const char* url); voidTObject::MayNotUse(const char* method) const; virtual Int_tMd5sum(const char* what, TString& sum, const char* where = 0); virtual voidMore(const char* what, const char* how = 0, c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TXProofMgr.html:3778,Hash,Hash,3778,root/html528/TXProofMgr.html,https://root.cern,https://root.cern/root/html528/TXProofMgr.html,1,['Hash'],['Hash']
Security,"tGlobalSRPPwd (Bool_t srppwd);  Set global SRP passwd flag to be used for authentication to rootd or proofd. ;  ; static void SetGlobalUser (const char *user);  Set global user name to be used for authentication to rootd or proofd. ;  ; static void SetGlobusAuthHook (GlobusAuth_t func);  Set Globus authorization function. ;  ; static void SetKrb5AuthHook (Krb5Auth_t func);  Set kerberos5 authorization function. ;  ; static void SetPromptUser (Bool_t promptuser);  Set global PromptUser flag. ;  ; static void SetReadHomeAuthrc (Bool_t readhomeauthrc);  Set flag controlling the reading of $HOME/.rootauthrc. ;  ; static void SetRSAInit (Int_t init=1);  Static method setting RSA initialization flag. ;  ; static Int_t SetRSAPublic (const char *rsapubexport, Int_t klen);  Store RSA public keys from export string rsaPubExport. ;  ; static void SetSecureAuthHook (SecureAuth_t func);  Set secure authorization function. ;  ; static void SetTimeOut (Int_t to);  Set timeout (active if > 0) ;  ; static void Show (Option_t *opt=""S"");  Print info about the authentication sector. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; Int_t ClearAuth (TString &user, TString &passwd, Bool_t &pwhash);  UsrPwd client authentication code. ;  ; Int_t GenRSAKeys ();  Generate a valid pair of private/public RSA keys to protect for authentication token exchange. ;  ; Bool_t GetPwHash () const;  ; char * GetRandString (Int_t Opt, Int_t Len);  Allocates and fills a 0 terminated buffer of length len+1 with len ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAuthenticate.html:16327,authenticat,authentication,16327,doc/master/classTAuthenticate.html,https://root.cern,https://root.cern/doc/master/classTAuthenticate.html,1,['authenticat'],['authentication']
Security,"tIconName() const; virtual TLeaf*TLeaf::GetLeafCount() const; virtual TLeaf*TLeaf::GetLeafCounter(Int_t& countval) const; virtual Int_tTLeaf::GetLen() const; virtual Int_tTLeaf::GetLenStatic() const; virtual Int_tTLeaf::GetLenType() const; virtual Int_tTLeaf::GetMaximum() const; virtual Int_tTLeaf::GetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual Long64_tTLeaf::GetValueLong64(Int_t i = 0) const; virtual LongDouble_tTLeaf::GetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImport(TClonesArray* list, Int_t n); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTLeaf::IsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLeafD.html:3027,Hash,Hash,3027,root/html534/TLeafD.html,https://root.cern,https://root.cern/root/html534/TLeafD.html,2,['Hash'],['Hash']
Security,"tIconName() const; virtual TLeaf*TLeaf::GetLeafCount() const; virtual TLeaf*TLeaf::GetLeafCounter(Int_t& countval) const; virtual Int_tTLeaf::GetLen() const; virtual Int_tTLeaf::GetLenStatic() const; virtual Int_tTLeaf::GetLenType() const; virtual Int_tTLeaf::GetMaximum() const; virtual Int_tTLeaf::GetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual Long64_tTLeaf::GetValueLong64(Int_t i = 0) const; virtual LongDouble_tTLeaf::GetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImport(TClonesArray* list, Int_t n); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTLeaf::IsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLeafD.html:2933,Hash,Hash,2933,root/html602/TLeafD.html,https://root.cern,https://root.cern/root/html602/TLeafD.html,4,['Hash'],['Hash']
Security,"tId() const; virtual TGeoShape*GetMakeRuntimeShape(TGeoShape* mother, TGeoMatrix* mat) const; virtual voidGetMeshNumbers(Int_t& nvert, Int_t& nsegs, Int_t& npols) const; virtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t, Double_t*) const; virtual Double_tTGeoTube::GetRmax() const; virtual Double_tTGeoTube::GetRmin() const; Double_tGetStIn() const; Double_tGetStOut() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tHasInner() const; Bool_tTGeoTube::HasRmin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoHype.html:6446,Hash,Hash,6446,root/html528/TGeoHype.html,https://root.cern,https://root.cern/root/html528/TGeoHype.html,3,['Hash'],['Hash']
Security,"tId() const; virtual TGeoShape*GetMakeRuntimeShape(TGeoShape* mother, TGeoMatrix* mat) const; virtual voidGetMeshNumbers(Int_t& nvert, Int_t& nsegs, Int_t& npols) const; virtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t, Double_t*) const; virtual Double_tTGeoTube::GetRmax() const; virtual Double_tTGeoTube::GetRmin() const; Double_tGetStIn() const; Double_tGetStOut() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tHasInner() const; Bool_tTGeoTube::HasRmin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoHype.html:7248,Hash,Hash,7248,root/html534/TGeoHype.html,https://root.cern,https://root.cern/root/html534/TGeoHype.html,3,['Hash'],['Hash']
Security,"tImage() const; TFileHandler*TSlave::GetInputHandler() const; const char*TSlave::GetMsd() const; virtual const char*TSlave::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*TSlave::GetOrdinal() const; Int_tTSlave::GetParallel() const; Int_tTSlave::GetPerfIdx() const; Int_tTSlave::GetPort() const; TProof*TSlave::GetProof() const; const char*TSlave::GetProofWorkDir() const; Int_tTSlave::GetProtocol() const; Float_tTSlave::GetRealTime() const; const char*TSlave::GetROOTVersion() const; const char*TSlave::GetSessionTag() const; Int_tTSlave::GetSlaveType() const; TSocket*TSlave::GetSocket() const; Int_tTSlave::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSlave::GetUser() const; const char*TSlave::GetWorkDir() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTSlave::IsSortable() const; virtual Bool_tTSlave::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSlaveLite.html:3279,Hash,Hash,3279,root/html530/TSlaveLite.html,https://root.cern,https://root.cern/root/html530/TSlaveLite.html,3,['Hash'],['Hash']
Security,"tImage() const; TFileHandler*TSlave::GetInputHandler() const; const char*TSlave::GetMsd() const; virtual const char*TSlave::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*TSlave::GetOrdinal() const; Int_tTSlave::GetParallel() const; Int_tTSlave::GetPerfIdx() const; Int_tTSlave::GetPort() const; TProof*TSlave::GetProof() const; const char*TSlave::GetProofWorkDir() const; Int_tTSlave::GetProtocol() const; Float_tTSlave::GetRealTime() const; const char*TSlave::GetROOTVersion() const; const char*TSlave::GetSessionTag() const; Int_tTSlave::GetSlaveType() const; TSocket*TSlave::GetSocket() const; Int_tTSlave::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSlave::GetUser() const; const char*TSlave::GetWorkDir() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTSlave::IsSortable() const; virtual Bool_tTSlave::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSlaveLite.html:3177,Hash,Hash,3177,root/html602/TSlaveLite.html,https://root.cern,https://root.cern/root/html602/TSlaveLite.html,2,['Hash'],['Hash']
Security,"tKey ; (; ); const. inline . Definition at line 97 of file TS3WebFile.h. ◆ GetUrl(). const TUrl & TS3WebFile::GetUrl ; (; ); const. inline . Definition at line 100 of file TS3WebFile.h. ◆ IsA(). TClass * TS3WebFile::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TFile.; Definition at line 105 of file TS3WebFile.h. ◆ ParseOptions(). Bool_t TS3WebFile::ParseOptions ; (; Option_t * ; options, . TString & ; accessKey, . TString & ; secretKey, . TString & ; token . ). private . Extracts the S3 authentication key pair (access key and secret key) from the options. ; The authentication credentials can be specified in the options provided to the constructor of this class as a string containing: ""AUTH=<access key>:<secret key>"" and can include other options, for instance ""NOPROXY"" for not using the HTTP proxy for accessing this file's contents. For instance: ""NOPROXY AUTH=F38XYZABCDeFgHiJkLm:V+frt4re7J1euSNFnmaf8wwmI401234E7kzxZ/TTM+"" A security token may be given by the TOKEN option, in order to allow the use of a temporary key pair. ; Definition at line 255 of file TS3WebFile.cxx. ◆ ProcessHttpHeader(). void TS3WebFile::ProcessHttpHeader ; (; const TString & ; headerLine). overrideprotectedvirtual . This method is called by the super-class TWebFile when a HTTP header for this file is retrieved. ; We scan the 'Server' header to detect the type of S3 server this file is hosted on and to determine if it is known to support multi-range HTTP GET requests. Some S3 servers (for instance Amazon's) do not support that feature and when they receive a multi-range request they sent back the whole file contents. For this class, if the server do not support multirange requests we issue multiple single-range requests instead. ; Reimplemented from TWebFile.; Definition at line 346 of file TS3WebFile.cxx. ◆ ReadBuffers(). Bool_t TS3WebFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). overrid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTS3WebFile.html:54382,secur,security,54382,doc/master/classTS3WebFile.html,https://root.cern,https://root.cern/doc/master/classTS3WebFile.html,1,['secur'],['security']
Security,"tLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t pointsDefinition TGWin32VirtualXProxy.cxx:148; Parent nodes are always InnerNodes.; These are the primitive operations on Nodes: Append(elt) - adds an element to the end of the array of elements in a; node. It must never be called where appending the element; would fill the node.; Split() - divide a node in two, and create two new nodes.; SplitWith(sib) - create a third node between this node and the sib node,; divvying up the elements of their arrays.; PushLeft(n) - move n elements into the left sibling; PushRight(n) - move n elements into the right sibling; BalanceWithRight() - even up the number of elements in the two nodes.; BalanceWithLeft() - ditto; a#define a(i)Definition RSha256.hxx:99; TCollection::endTIter end() constDefinition TCollection.h:293; nconst Int_t nDefinition legend1.C:16; To allow this implementation of btrees to also be an implementation of sorted arrays/lists, the overhead is included to allow O(log n) access of elements by their rank (‘give me the 5th largest element’). Therefore, each Item keeps track of the number of keys in and below it in the tree (remember, each item's tree is all keys to the RIGHT of the item's own key). [ [ < 0 1 2 3 > 4 < 5 6 7 > 8 < 9 10 11 12 > ] 13 [ < 14 15 16 > 17 < 18 19 20 > ] ]; 4 1 1 1 1 4 1 1 1 5 1 1 1 1 7 3 1 1 1 4 1 1 1. Definition at line 38 of file TBtree.h. Public Types; typedef TBtreeIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBtree.html:8268,access,access,8268,doc/master/classTBtree.html,https://root.cern,https://root.cern/doc/master/classTBtree.html,1,['access'],['access']
Security,"tLinearPart(Int_t i); static voidTFormula::GetMaxima(Int_t& maxop, Int_t& maxpar, Int_t& maxconst); virtual const char*TNamed::GetName() const; virtual Int_tTFormula::GetNdim() const; virtual Int_tTFormula::GetNpar() const; virtual Int_tTFormula::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooAbsArg*getParameter(const char* name) const; RooAbsArg*getParameter(Int_t index) const; Double_tTFormula::GetParameter(Int_t ipar) const; Double_tTFormula::GetParameter(const char* name) const; virtual Double_t*TFormula::GetParameters() const; virtual voidTFormula::GetParameters(Double_t* params); virtual const char*TFormula::GetParName(Int_t ipar) const; virtual Int_tTFormula::GetParNumber(const char* name) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTFormula::IsLinear() const; virtual Bool_tTFormula::IsNormalized() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tok(); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooFormula.html:4367,Hash,Hash,4367,root/html602/RooFormula.html,https://root.cern,https://root.cern/root/html602/RooFormula.html,1,['Hash'],['Hash']
Security,"tManager(). std::shared_ptr< RWebWindowsManager > ROOT::RWebWindow::GetManager ; (; ); const. inline . Returns window manager. ; Definition at line 251 of file RWebWindow.hxx. ◆ GetMasterConnections(). std::vector< RWebWindow::MasterConn > RWebWindow::GetMasterConnections ; (; unsigned ; connid = 0); const. private . Get list of master connections. ; Definition at line 325 of file RWebWindow.cxx. ◆ GetMaxQueueLength(). unsigned ROOT::RWebWindow::GetMaxQueueLength ; (; ); const. inline . Return maximal queue length of data which can be held by window. ; Definition at line 304 of file RWebWindow.hxx. ◆ GetOperationTmout(). float ROOT::RWebWindow::GetOperationTmout ; (; ); const. inline . Returns timeout for synchronous WebWindow operations. ; Definition at line 351 of file RWebWindow.hxx. ◆ GetRelativeAddr() [1/2]. std::string RWebWindow::GetRelativeAddr ; (; const RWebWindow & ; win); const. Returns relative URL address for the specified window Address can be required if one needs to access data from one window into another window Used for instance when inserting panel into canvas. ; Definition at line 1270 of file RWebWindow.cxx. ◆ GetRelativeAddr() [2/2]. std::string RWebWindow::GetRelativeAddr ; (; const std::shared_ptr< RWebWindow > & ; win); const. Returns relative URL address for the specified window Address can be required if one needs to access data from one window into another window Used for instance when inserting panel into canvas. ; Definition at line 1260 of file RWebWindow.cxx. ◆ GetSendQueueLength(). int RWebWindow::GetSendQueueLength ; (; unsigned ; connid); const. Returns send queue length for specified connection. ; Parameters. connidconnection id, 0 - maximal value for all connections is returned If wrong connection id specified, -1 is return . Definition at line 1509 of file RWebWindow.cxx. ◆ GetServer(). THttpServer * RWebWindow::GetServer ; (; ). Return THttpServer instance serving requests to the window. ; Definition at line 181 of file RWebWi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html:32672,access,access,32672,doc/v632/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html,1,['access'],['access']
Security,"tManager::kExport); TMap*GetDataSets(const char* group, const char* user, const char* dsName = 0, UInt_t option = 0); static TList*TDataSetManager::GetDataSetSrvMaps(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tTDataSetManager::GetGroupQuota(const char* group); virtual TMap*TDataSetManager::GetGroupQuotaMap(); virtual Long64_tTDataSetManager::GetGroupUsed(const char* group); virtual const char*TObject::GetIconName() const; const char*GetMSSUrl() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetStageOpts() const; virtual TMap*TDataSetManager::GetSubDataSets(const char* uri, const char* excludeservers); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTDataSetManager::MonitorUsedSpace(TVirtualMonitoringWriter* monitoring); virtual Bool_tTObject::Notify(); virtual Int_tNotifyUpdate(const char* group, const char* user, const char* dspath, Long_t mtime, const char* checksum = 0); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManagerFile.html:3675,Hash,Hash,3675,root/html528/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html528/TDataSetManagerFile.html,1,['Hash'],['Hash']
Security,"tManager::kExport); TMap*GetDataSets(const char* group, const char* user, const char* dsName = 0, UInt_t option = 0); static TList*TDataSetManager::GetDataSetSrvMaps(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tTDataSetManager::GetGroupQuota(const char* group); virtual TMap*TDataSetManager::GetGroupQuotaMap(); virtual Long64_tTDataSetManager::GetGroupUsed(const char* group); virtual const char*TObject::GetIconName() const; const char*GetMSSUrl() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetStageOpts() const; virtual TMap*TDataSetManager::GetSubDataSets(const char* uri, const char* excludeservers); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTDataSetManager::MonitorUsedSpace(TVirtualMonitoringWriter* monitoring); virtual Bool_tTObject::Notify(); virtual Int_tNotifyUpdate(const char* group, const char* user, const char* dspath, Long_t mtime, const char* checksum = 0); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TDataSetManagerFile.html:3675,Hash,Hash,3675,root/html530/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html530/TDataSetManagerFile.html,2,['Hash'],['Hash']
Security,"tMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TGClient*fClientConnection to display server; Handle_tfIdX11/Win32 Window identifier. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SaveAs(const char* filename = """", Option_t* option = """") const; Write this TGObject to a file using TImage, if filename's extension signals; a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename().; Otherwise forward to TObject::SaveAs(). Bool_t IsEqual(const TObject* obj) const; Equal comparison (TGObjects are equal if they have the same; window identifier). If the TGObjects have not been created by; the Window manager (e.g. a TGLVEntry), then fall back to the; default TObject equal comparison. TGObject& operator=(const TGObject& tgo). TGObject(); { }. TGObject(const TGObject& tgo); { }. virtual ~TGObject(); { }. Handle_t GetId() const; { return fId; }. TGClient * GetClient() const; { return fClient; }. ULong_t Hash() const; { return (ULong_t) fId >> 0; }. » Author: Fons Rademakers 27/12/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:55; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGObject.html:6677,Hash,Hash,6677,root/html604/TGObject.html,https://root.cern,https://root.cern/root/html604/TGObject.html,1,['Hash'],['Hash']
Security,tMaxProcTime(). void TDSetElement::SetMaxProcTime ; (; Float_t ; mpt). inline . Definition at line 145 of file TDSet.h. ◆ SetNum(). void TDSetElement::SetNum ; (; Long64_t ; num). inline . Definition at line 118 of file TDSet.h. ◆ SetTDSetOffset(). void TDSetElement::SetTDSetOffset ; (; Long64_t ; offset). inline . Definition at line 129 of file TDSet.h. ◆ SetValid(). void TDSetElement::SetValid ; (; ). inline . Definition at line 135 of file TDSet.h. ◆ Streamer(). void TDSetElement::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TDSetElement. ; Reimplemented from TObject.; Definition at line 1722 of file TDSet.cxx. ◆ StreamerNVirtual(). void TDSetElement::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 149 of file TDSet.h. ◆ Validate() [1/2]. void TDSetElement::Validate ; (; Bool_t ; isTree). Validate by opening the file. ; Definition at line 275 of file TDSet.cxx. ◆ Validate() [2/2]. void TDSetElement::Validate ; (; TDSetElement * ; elem). Validate by checking against another element. ; Definition at line 301 of file TDSet.cxx. Member Data Documentation. ◆ fAssocObjList. TList* TDSetElement::fAssocObjList. private . Definition at line 92 of file TDSet.h. ◆ fDataSet. TString TDSetElement::fDataSet. private . Definition at line 91 of file TDSet.h. ◆ fDirectory. TString TDSetElement::fDirectory. private . Definition at line 80 of file TDSet.h. ◆ fEntries. Long64_t TDSetElement::fEntries. private . Definition at line 88 of file TDSet.h. ◆ fEntryList. TObject* TDSetElement::fEntryList. private . Definition at line 86 of file TDSet.h. ◆ fFirst. Long64_t TDSetElement::fFirst. private . Definition at line 81 of file TDSet.h. ◆ fFriends. TList* TDSetElement::fFriends. private . Definition at line 89 of file TDSet.h. ◆ fMaxProcTime. Float_t TDSetElement::fMaxProcTime. private . Definition at line 94 of file TDSet.h. ◆ fMsd. TString TDSetElement::fMsd. private . Definition at line 83 of file TDSet.h. ◆ ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDSetElement.html:23064,Validat,Validate,23064,doc/master/classTDSetElement.html,https://root.cern,https://root.cern/doc/master/classTDSetElement.html,1,['Validat'],['Validate']
Security,"tMedium() const; virtual const char*TNamed::GetName() const; Int_tGetNdaughters() const; virtual Int_tGetNextNodeIndex() const; TGeoNode*GetNode(const char* name) const; TGeoNode*GetNode(Int_t i) const; Int_tGetNodeIndex(const TGeoNode* node, Int_t* check_list, Int_t ncheck) const; TObjArray*GetNodes(); Int_tGetNtotal() const; Int_tGetNumber() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Bool_tGetOptimalVoxels() const; virtual Option_t*GetOption() const; char*GetPointerName() const; Int_tGetRefCount() const; TGeoShape*GetShape() const; virtual const char*TNamed::GetTitle() const; Char_tGetTransparency() const; virtual UInt_tTObject::GetUniqueID() const; TGeoExtension*GetUserExtension() const; TGeoVoxelFinder*GetVoxels() const; voidGrab(); voidGrabFocus()MENU ; TGeoExtension*GrabFWExtension() const; TGeoExtension*GrabUserExtension() const; voidGsord(Int_t); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static TGeoVolume*Import(const char* filename, const char* name = """", Option_t* option = """"); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidInspectMaterial() constMENU ; voidInspectShape() constMENU ; voidTObject::InvertBit(UInt_t f); voidInvisibleAll(Bool_t flag = kTRUE)TOGGLE GETTER ; virtual TClass*IsA() const; Bool_tIsActive() const; Bool_tIsActiveDaughters() const; Bool_tIsAdded() const; Bool_tIsAllInvisible() const; virtual Bool_tIsAssembly() const; Bool_tIsCylVoxels() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOverlappingCandidate() const; Bool_tIsRaytracing() const; Bool_tIsReplicated() const; Bool_tIsRunTime() const; Bool_tIsSelected() const; virtual Bool_tTNamed::IsSortable(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoVolume.html:22119,Hash,Hash,22119,root/html534/TGeoVolume.html,https://root.cern,https://root.cern/root/html534/TGeoVolume.html,3,['Hash'],['Hash']
Security,"tMember ; (; ). pure virtual . Implemented in TZIPFile. ◆ SetMember() [1/2]. Int_t TArchiveFile::SetMember ; (; const char * ; member). virtual . Explicitely make the specified member the current member. ; Returns -1 in case of error, 0 otherwise. ; Definition at line 88 of file TArchiveFile.cxx. ◆ SetMember() [2/2]. Int_t TArchiveFile::SetMember ; (; Int_t ; idx). virtual . Explicitely make the member with the specified index the current member. ; Returns -1 in case of error, 0 otherwise. ; Definition at line 100 of file TArchiveFile.cxx. ◆ Streamer(). void TArchiveFile::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TZIPFile. ◆ StreamerNVirtual(). void TArchiveFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 61 of file TArchiveFile.h. Member Data Documentation. ◆ fArchiveName. TString TArchiveFile::fArchiveName. protected . Archive file name. ; Definition at line 31 of file TArchiveFile.h. ◆ fCurMember. TArchiveMember* TArchiveFile::fCurMember. protected . Current archive member. ; Definition at line 36 of file TArchiveFile.h. ◆ fFile. TFile* TArchiveFile::fFile. protected . File stream used to access the archive. ; Definition at line 34 of file TArchiveFile.h. ◆ fMemberIndex. Int_t TArchiveFile::fMemberIndex. protected . Index of sub-file in archive. ; Definition at line 33 of file TArchiveFile.h. ◆ fMemberName. TString TArchiveFile::fMemberName. protected . Sub-file name. ; Definition at line 32 of file TArchiveFile.h. ◆ fMembers. TObjArray* TArchiveFile::fMembers. protected . Members in this archive. ; Definition at line 35 of file TArchiveFile.h. Libraries for TArchiveFile:. [legend]; The documentation for this class was generated from the following files:; io/io/inc/TArchiveFile.h; io/io/src/TArchiveFile.cxx. TArchiveFile. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:14 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArchiveFile.html:17293,access,access,17293,doc/master/classTArchiveFile.html,https://root.cern,https://root.cern/doc/master/classTArchiveFile.html,1,['access'],['access']
Security,"tMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArrayTHnBase::fAxesaxes of the histogram; TObjArrayTHnBase::fBrowsables! browser-helpers for each axis; Double_tTHnBase::fEntriesnumber of entries, spread over chunks; Double_t*THnBase::fIntegral! array with bin weight sums; enum THnBase::THnBase::fIntegralStatus! status of integral; TStringTNamed::fNameobject identifier; Int_tTHnBase::fNdimensionsnumber of dimensions; TStringTNamed::fTitleobject title; Double_tTHnBase::fTsumwtotal sum of weights; Double_tTHnBase::fTsumw2total sum of weights squared; -1 if no errors are calculated; TArrayDTHnBase::fTsumwxtotal sum of weight*X for each dimension; TArrayDTHnBase::fTsumwx2total sum of weight*X*X for each dimension. private:. TObjArrayfBinContentarray of THnSparseArrayChunk; TExMapfBins! filled bins; TExMapfBinsContinued! filled bins for non-unique hashes, containing pairs of (bin index 0, bin index 1); Int_tfChunkSizenumber of entries for each chunk; THnSparseCompactBinCoord*fCompactCoord! compact coordinate; Long64_tfFilledBinsnumber of filled bins. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~THnSparse(); Destruct a THnSparse. void AddBinContent(Long64_t bin, Double_t v = 1.); Add ""v"" to the content of bin with index ""bin"". THnSparseArrayChunk* AddChunk(); Create a new chunk of bin content. void InitStorage(Int_t* nbins, Int_t chunkSize); Initialize the storage of a histogram created via Init(). void FillExMap(); We have been streamed; set up fBins. void Reserve(Long64_t nbins); Initialize storage for nbins. Long64_t GetBin(const Double_t* x, Bool_t allocate = kTRUE); Get the bin index for the n dimensional tuple x,; allocate one if it doesn't exist yet and ""allocate"" is true. Long64_t GetBin(const char* name[], Bool_t allocate /* = kTRUE */); Get the bin index for the n dimensional tuple addressed by ""name"",; allocate ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THnSparse.html:16109,hash,hashes,16109,root/html534/THnSparse.html,https://root.cern,https://root.cern/root/html534/THnSparse.html,1,['hash'],['hashes']
Security,"tMergeOptions (const TString &options);  ; void SetMsgPrefix (const char *prefix);  Set the prefix to be used when printing informational message. ;  ; virtual void SetNotrees (Bool_t notrees=kFALSE);  ; void SetPrintLevel (Int_t level);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileMerger.html:5252,Hash,Hash,5252,doc/master/classTFileMerger.html,https://root.cern,https://root.cern/doc/master/classTFileMerger.html,2,['Hash'],['Hash']
Security,"tMin (double xlo);  Change lower bound to xlo. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinning.html:6119,Hash,Hash,6119,doc/master/classRooBinning.html,https://root.cern,https://root.cern/doc/master/classRooBinning.html,6,"['Hash', 'hash']","['Hash', 'hash']"
Security,"tMin() const; virtual Int_tGetNbins() const; virtual Double_tGetRndm(TRandom3&) const; virtual Double_tGetStepSize(Int_t iBin = 0) const; virtual Double_tGetWidth() const; TMVA::IntervalInterval(const TMVA::Interval& other); TMVA::IntervalInterval(Double_t min, Double_t max, Int_t nbins = 0); virtual TClass*IsA() const; TMVA::Interval&operator=(const TMVA::Interval&); virtual voidPrint(ostream& os) const; voidSetMax(Double_t m); voidSetMin(Double_t m); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. TMVA::MsgLogger&Log() const. Data Members; protected:. Double_tfMaxthe constraints of the Interval; Double_tfMin; Int_tfNbinswhen >0 : number of bins (discrete interval); when ==0 continuous interval. private:. static TMVA::MsgLogger*fgLoggermessage logger. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Interval(Double_t min, Double_t max, Int_t nbins = 0). Interval(const TMVA::Interval& other). ~Interval(); destructor. Double_t GetElement(Int_t position) const; calculates the value of the ""number"" bin in a discrete interval.; Parameters:; Double_t position. Double_t GetStepSize(Int_t iBin = 0) const; retuns the step size between the numbers of a ""discrete Interval"". Double_t GetRndm(TRandom3& ) const; get uniformely distributed number within interval. Double_t GetWidth() const. Double_t GetMean() const. void Print(ostream& os) const. Double_t GetMin() const; accessors; accessors. { return fMin; }. Double_t GetMax() const; { return fMax; }. Int_t GetNbins() const; { return fNbins; }. void SetMax(Double_t m); { fMax = m; }. void SetMin(Double_t m); { fMin = m; }. » Author: Peter Speckmayer » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-03-14 16:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Interval.html:2898,access,accessors,2898,root/html534/TMVA__Interval.html,https://root.cern,https://root.cern/root/html534/TMVA__Interval.html,2,['access'],['accessors']
Security,"tMinimum(Double_t minval=-FLT_MAX) constTH1virtual; GetMinimumAndMaximum(Double_t &min, Double_t &max) constTH1virtual; GetMinimumBin() constTH1virtual; GetMinimumBin(Int_t &locmix, Int_t &locmiy, Int_t &locmiz) constTH1virtual; GetMinimumStored() constTH1inlinevirtual; GetName() const overrideTNamedinlinevirtual; GetNbinsX() constTH1inlinevirtual; GetNbinsY() constTH1inlinevirtual; GetNbinsZ() constTH1inlinevirtual; GetNcells() constTH1inlinevirtual; GetNdivisions(Option_t *axis=""X"") constTH1virtual; GetNormFactor() constTH1inlinevirtual; GetObjectInfo(Int_t px, Int_t py) const overrideTH1virtual; GetObjectStat()TObjectstatic; GetOption() const overrideTH1inlinevirtual; GetPainter(Option_t *option="""")TH1; GetQuantiles(Int_t n, Double_t *xp, const Double_t *p=nullptr)TH1virtual; GetRandom(TRandom *rng=nullptr) constTH1virtual; GetRandom3(Double_t &x, Double_t &y, Double_t &, TRandom *rng=nullptr)TH3virtual; GetRMS(Int_t axis=1) constTH1inline; GetRMSError(Int_t axis=1) constTH1inline; GetSkewness(Int_t axis=1) constTH1virtual; GetStatOverflows() constTH1inline; GetStatOverflowsBehaviour() constTH1inlineprotected; GetStats(Double_t *stats) const overrideTH3virtual; GetStdDev(Int_t axis=1) constTH1virtual; GetStdDevError(Int_t axis=1) constTH1virtual; GetSumOfWeights() constTH1virtual; GetSumw2()TH1inlinevirtual; GetSumw2() constTH1inlinevirtual; GetSumw2N() constTH1inlinevirtual; GetTickLength(Option_t *axis=""X"") constTH1virtual; GetTitle() const overrideTNamedinlinevirtual; GetTitleFont(Option_t *axis=""X"") constTH1virtual; GetTitleOffset(Option_t *axis=""X"") constTH1virtual; GetTitleSize(Option_t *axis=""X"") constTH1virtual; GetUniqueID() constTObjectvirtual; GetXaxis()TH1inline; GetXaxis() constTH1inline; GetYaxis()TH1inline; GetYaxis() constTH1inline; GetZaxis()TH1inline; GetZaxis() constTH1inline; HandleTimer(TTimer *timer)TObjectvirtual; Hash() const overrideTNamedinlinevirtual; HasInconsistentHash() constTObjectinline; Info(const char *method, const char *msgfmt,.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3-members.html:15107,Hash,Hash,15107,doc/master/classTH3-members.html,https://root.cern,https://root.cern/doc/master/classTH3-members.html,1,['Hash'],['Hash']
Security,"tMinimumStored() constTH1inlinevirtual; GetName() const overrideTNamedinlinevirtual; GetNbinsX() constTH1inlinevirtual; GetNbinsY() constTH1inlinevirtual; GetNbinsZ() constTH1inlinevirtual; GetNcells() constTH1inlinevirtual; GetNdivisions(Option_t *axis=""X"") constTH1virtual; GetNormFactor() constTH1inlinevirtual; GetNumberOfBins()TProfile2Dinline; GetObjectInfo(Int_t px, Int_t py) const overrideTH1virtual; GetObjectStat()TObjectstatic; GetOption() const overrideTH1inlinevirtual; GetPainter(Option_t *option="""")TH1; GetQuantiles(Int_t n, Double_t *xp, const Double_t *p=nullptr)TH1virtual; GetRandom(TRandom *rng=nullptr) constTH1virtual; GetRandom2(Double_t &x, Double_t &y, TRandom *rng=nullptr)TH2virtual; GetRMS(Int_t axis=1) constTH1inline; GetRMSError(Int_t axis=1) constTH1inline; GetSize() constTArrayinline; GetSkewness(Int_t axis=1) constTH1virtual; GetStatOverflows() constTH1inline; GetStatOverflowsBehaviour() constTH1inlineprotected; GetStats(Double_t *stats) const overrideTProfile2Dvirtual; GetStdDev(Int_t axis=1) constTH1virtual; GetStdDevError(Int_t axis=1) constTH1virtual; GetSum() constTArrayDinline; GetSumOfWeights() constTH1virtual; GetSumw2()TH1inlinevirtual; GetSumw2() constTH1inlinevirtual; GetSumw2N() constTH1inlinevirtual; GetTickLength(Option_t *axis=""X"") constTH1virtual; GetTitle() const overrideTNamedinlinevirtual; GetTitleFont(Option_t *axis=""X"") constTH1virtual; GetTitleOffset(Option_t *axis=""X"") constTH1virtual; GetTitleSize(Option_t *axis=""X"") constTH1virtual; GetUniqueID() constTObjectvirtual; GetW()TProfile2Dinlineprivate; GetW2()TProfile2Dinlineprivate; GetXaxis()TH1inline; GetXaxis() constTH1inline; GetYaxis()TH1inline; GetYaxis() constTH1inline; GetZaxis()TH1inline; GetZaxis() constTH1inline; GetZmax() constTProfile2Dinlinevirtual; GetZmin() constTProfile2Dinlinevirtual; HandleTimer(TTimer *timer)TObjectvirtual; Hash() const overrideTNamedinlinevirtual; HasInconsistentHash() constTObjectinline; Info(const char *method, const char *msgfmt,.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D-members.html:16086,Hash,Hash,16086,doc/master/classTProfile2D-members.html,https://root.cern,https://root.cern/doc/master/classTProfile2D-members.html,1,['Hash'],['Hash']
Security,"tName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGLOvlSelectRecord&GetOvlSelRec(); const char*GetPictureFileName() const; Float_tGetPointScale() const; TGLViewer::EPushActionGetPushAction() const; Bool_tGetResetCamerasOnUpdate() const; TGLRnrCtx*TGLViewerBase::GetRnrCtx() const; TGLSceneInfo*TGLViewerBase::GetSceneInfo(TGLSceneBase* scene); const TGLPhysicalShape*GetSelected() const; TGLSelectRecord&GetSelRec(); Bool_tGetSmartRefresh() const; Bool_tGetSmoothLines() const; Bool_tGetSmoothPoints() const; Bool_tGetStereo() const; Float_tGetStereoEyeOffsetFac() const; Float_tGetStereoFrustumAsymFac() const; Float_tGetStereoZeroParallax() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGLViewerBase::IsChanged() const; Bool_tIsColorSetDark() const; Bool_tTGLLockable::IsDrawOrSelectLock() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTGLLockable::IsLocked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsUsingDefaultColorSet() const; static Bool_tIsUsingDefaultColorSetForNewViewers(); Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual const char*TGLViewerBase::LockIdStr() const; static const char*TGLLockable::LockName(TGLLo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLViewer.html:8611,Hash,Hash,8611,root/html528/TGLViewer.html,https://root.cern,https://root.cern/root/html528/TGLViewer.html,3,['Hash'],['Hash']
Security,"tNativeOnlyConn(bool on = true) { fNativeOnlyConn = on; }; 309 ; 310 /////////////////////////////////////////////////////////////////////////; 311 /// returns true if only native (own-created) connections are allowed; 312 bool IsNativeOnlyConn() const { return fNativeOnlyConn; }; 313 ; 314 /////////////////////////////////////////////////////////////////////////; 315 /// Configure if authentication key in connection string is required; 316 void SetRequireAuthKey(bool on) { fRequireAuthKey = on; }; 317 ; 318 /////////////////////////////////////////////////////////////////////////; 319 /// returns true if authentication string is required; 320 bool IsRequireAuthKey() const { return fRequireAuthKey; }; 321 ; 322 /////////////////////////////////////////////////////////////////////////; 323 /// Configure if window can access local files via currentdir/ path of http server; 324 void SetUseCurrentDir(bool on = true) { fUseCurrentDir = on; }; 325 ; 326 /////////////////////////////////////////////////////////////////////////; 327 /// returns true if window can access local files via currentdir/ path of http server; 328 bool IsUseCurrentDir() const { return fUseCurrentDir; }; 329 ; 330 void SetClientVersion(const std::string &vers);; 331 ; 332 std::string GetClientVersion() const;; 333 ; 334 void SetUserArgs(const std::string &args);; 335 ; 336 std::string GetUserArgs() const;; 337 ; 338 int NumConnections(bool with_pending = false) const;; 339 ; 340 unsigned GetConnectionId(int num = 0) const;; 341 ; 342 std::vector<unsigned> GetConnections(unsigned excludeid = 0) const;; 343 ; 344 bool HasConnection(unsigned connid = 0, bool only_active = true) const;; 345 ; 346 void CloseConnections();; 347 ; 348 void CloseConnection(unsigned connid);; 349 ; 350 /// Returns timeout for synchronous WebWindow operations; 351 float GetOperationTmout() const { return fOperationTmout; }; 352 ; 353 /// Set timeout for synchronous WebWindow operations; 354 void SetOperationTmout(float tm = 50.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebWindow_8hxx_source.html:15482,access,access,15482,doc/v632/RWebWindow_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebWindow_8hxx_source.html,1,['access'],['access']
Security,"tNativeOnlyConn(bool on = true) { fNativeOnlyConn = on; }; 312 ; 313 /////////////////////////////////////////////////////////////////////////; 314 /// returns true if only native (own-created) connections are allowed; 315 bool IsNativeOnlyConn() const { return fNativeOnlyConn; }; 316 ; 317 /////////////////////////////////////////////////////////////////////////; 318 /// Configure if authentication key in connection string is required; 319 void SetRequireAuthKey(bool on) { fRequireAuthKey = on; }; 320 ; 321 /////////////////////////////////////////////////////////////////////////; 322 /// returns true if authentication string is required; 323 bool IsRequireAuthKey() const { return fRequireAuthKey; }; 324 ; 325 /////////////////////////////////////////////////////////////////////////; 326 /// Configure if window can access local files via currentdir/ path of http server; 327 void SetUseCurrentDir(bool on = true) { fUseCurrentDir = on; }; 328 ; 329 /////////////////////////////////////////////////////////////////////////; 330 /// returns true if window can access local files via currentdir/ path of http server; 331 bool IsUseCurrentDir() const { return fUseCurrentDir; }; 332 ; 333 void SetClientVersion(const std::string &vers);; 334 ; 335 std::string GetClientVersion() const;; 336 ; 337 void SetUserArgs(const std::string &args);; 338 ; 339 std::string GetUserArgs() const;; 340 ; 341 int NumConnections(bool with_pending = false) const;; 342 ; 343 unsigned GetConnectionId(int num = 0) const;; 344 ; 345 std::vector<unsigned> GetConnections(unsigned excludeid = 0) const;; 346 ; 347 bool HasConnection(unsigned connid = 0, bool only_active = true) const;; 348 ; 349 void CloseConnections();; 350 ; 351 void CloseConnection(unsigned connid);; 352 ; 353 /// Returns timeout for synchronous WebWindow operations; 354 float GetOperationTmout() const { return fOperationTmout; }; 355 ; 356 /// Set timeout for synchronous WebWindow operations; 357 void SetOperationTmout(float tm = 50.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebWindow_8hxx_source.html:15633,access,access,15633,doc/master/RWebWindow_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RWebWindow_8hxx_source.html,1,['access'],['access']
Security,"tNewlineValue(std::istream &inputStream);; 184 void ImportClusterRanges(TTree *fromtree);; 185 void MoveReadCache(TFile *src, TDirectory *dir);; 186 Int_t SetCacheSizeAux(bool autocache = true, Long64_t cacheSize = 0);; 187 ; 188 class TFriendLock {; 189 // Helper class to prevent infinite recursion in the; 190 // usage of TTree Friends. Implemented in TTree.cxx.; 191 TTree *fTree; // Pointer to the locked tree; 192 UInt_t fMethodBit; // BIT for the locked method; 193 bool fPrevious; // Previous value of the BIT.; 194 ; 195 protected:; 196 TFriendLock(const TFriendLock&);; 197 TFriendLock& operator=(const TFriendLock&);; 198 ; 199 public:; 200 TFriendLock(TTree* tree, UInt_t methodbit);; 201 ~TFriendLock();; 202 };; 203 friend class TFriendLock;; 204 // So that the index class can use TFriendLock:; 205 friend class TTreeIndex;; 206 friend class TChainIndex;; 207 // So that the TTreeCloner can access the protected interfaces; 208 friend class TTreeCloner;; 209 ; 210 // use to update fFriendLockStatus; 211 enum ELockStatusBits {; 212 kFindBranch = BIT(0),; 213 kFindLeaf = BIT(1),; 214 kGetAlias = BIT(2),; 215 kGetBranch = BIT(3),; 216 kGetEntry = BIT(4),; 217 kGetEntryWithIndex = BIT(5),; 218 kGetFriend = BIT(6),; 219 kGetFriendAlias = BIT(7),; 220 kGetLeaf = BIT(8),; 221 kLoadTree = BIT(9),; 222 kPrint = BIT(10),; 223 kRemoveFriend = BIT(11),; 224 kSetBranchStatus = BIT(12); 225 };; 226 ; 227public:; 228 // Used as the max value for any TTree range operation.; 229 static constexpr Long64_t kMaxEntries = TVirtualTreePlayer::kMaxEntries;; 230 ; 231 // SetBranchAddress return values; 232 enum ESetBranchAddressStatus {; 233 kMissingBranch = -5,; 234 kInternalError = -4,; 235 kMissingCompiledCollectionProxy = -3,; 236 kMismatch = -2,; 237 kClassMismatch = -1,; 238 kMatch = 0,; 239 kMatchConversion = 1,; 240 kMatchConversionCollection = 2,; 241 kMakeClass = 3,; 242 kVoidPtr = 4,; 243 kNoCheck = 5,; 244 kNeedEnableDecomposedObj = BIT(29), // DecomposedObj is the newer name ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8h_source.html:10738,access,access,10738,doc/master/TTree_8h_source.html,https://root.cern,https://root.cern/doc/master/TTree_8h_source.html,1,['access'],['access']
Security,"tObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTEveElement::GetParentIgnoreCnt() const; virtual TObject*TEveElement::GetRenderObject(const TEveException& eh) const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; Bool_tTEveWindow::GetShowTitleBar() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTEveWindow::IsAncestorOf(TEveWindow* win); Bool_tTEveWindow::IsCurrent() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveWindowFrame.html:9462,Hash,Hash,9462,root/html530/TEveWindowFrame.html,https://root.cern,https://root.cern/root/html530/TEveWindowFrame.html,10,['Hash'],['Hash']
Security,"tParameter(TCollection* c, const char* par, Long_t& value); static Int_tGetParameter(TCollection* c, const char* par, Long64_t& value); static Int_tGetParameter(TCollection* c, const char* par, Double_t& value); Int_tGetPort() const; TProof::EQueryModeGetQueryMode(Option_t* mode = 0) const; TQueryResult*GetQueryResult(const char* ref = 0); TList*GetQueryResults(); Float_tGetRealTime() const; Int_tGetRemoteProtocol() const; TProof::ERunStatusGetRunStatus() const; Int_tGetSeqNum() const; Int_tGetSessionID() const; const char*GetSessionTag() const; voidGetStatistics(Bool_t verbose = kFALSE); Int_tGetStatus() const; virtual const char*TNamed::GetTitle() const; virtual TTree*GetTreeHeader(TDSet* tdset); virtual UInt_tTObject::GetUniqueID() const; const char*GetUrl(); const char*GetUser() const; const char*GetWorkDir() const; voidGoAsynchronous(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsDataReady(Long64_t& totalbytes, Long64_t& bytesready); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tIsIdle() const; Bool_tIsLite() const; Bool_tIsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tIsParallel() const; Bool_tIsProofd() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsValid() const; Bool_tIsWaiting() const; Bool_tTObject::IsZombie() const; virtual Int_tLoad(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); static voidTQObject::LoadRQ_OBJECT(); voidLogMessage(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProof.html:9330,Hash,Hash,9330,root/html528/TProof.html,https://root.cern,https://root.cern/root/html528/TProof.html,3,['Hash'],['Hash']
Security,"tParentIgnoreCnt() const; virtual TObject*TEveElement::GetRenderObject(const TEveException& eh = ""TEveElement::GetRenderObject "") const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TEvePointSelectorConsumer::ETreeVarType_eTEvePointSelectorConsumer::GetSourceCS() const; TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitBins(const char* quant_name, Int_t nbins, Double_t min, Double_t max); virtual voidTEvePointSelectorConsumer::InitFill(Int_t); virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEvePointSetArray.html:9384,Hash,Hash,9384,root/html528/TEvePointSetArray.html,https://root.cern,https://root.cern/root/html528/TEvePointSetArray.html,1,['Hash'],['Hash']
Security,"tPicture(""h2_s.xpm"");; The advantage of command buttons is that they are always visible, providing a reminder of their existence. They can be inscribed with a meaningful description of what they do by TGToolTip(""Some describing text""). Their activation is much easier and faster than using a two-step menu bar/pull-down sequence. The only disadvantage of the text and picture buttons is that they consume considerable screen space if they are many. Having no more than six command buttons per window or dialog box helps to appropriately balance the application’s effectiveness, its real efficiency, and the operational simplicity.; The classes TGRadioButton and TGCheckButton present the option buttons in ROOT. Like the text buttons, they have text or hot string as a label. Radio buttons are grouped in logical sets of two or more and appear with a text label to the right. The choices are mutually exclusive and only one setting is permitted at one time. They represent visually all alternatives and it is easy to access and compare choices. They facilitate the situations where all alternatives cannot be easily remembered or where displaying the alternatives together helps to understand and select the proper choice. It is very useful to provide a default setting whenever it is possible. When it is not possible to establish a default setting because of the nature of the information, it is better to leave all radio buttons blank. A columnar orientation is the preferred manner of radio buttons presentation. If the vertical space on the window is limited, they can be oriented horizontally. Selection choices should be organized logically in groups. Here is the example that produces the image above:; br = new TGButtonGroup(p,""Coordinate system"",kVerticalFrame);; fR[0] = new TGRadioButton(bg,new TGHotString(""&Pixel""));; fR[1] = new TGRadioButton(bg,new TGHotString(""&NDC ""));; fR[2] = new TGRadioButton(bg,new TGHotString(""&User ""));; fR[1]->SetState(kButtonDown);; br->Show();; It is enou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1180909,access,access,1180909,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['access'],['access']
Security,"tPolyLine (Int_t n, Float_t *p, Option_t *option="""");  Re-initialize polyline with n points from p. ;  ; virtual void SetPolyLine (Int_t n, Option_t *option="""");  Re-initialize polyline with n points (0,0,0). ;  ; virtual Int_t Size () const;  ; void Streamer (TBuffer &) override;  Stream a 3-D polyline object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHelix.html:7979,Hash,Hash,7979,doc/master/classTHelix.html,https://root.cern,https://root.cern/doc/master/classTHelix.html,4,['Hash'],['Hash']
Security,"tPolyLine (Option_t *option);  Paints the 2D graph as PaintPolyLine. ;  ; void PaintPolyMarker (Option_t *option);  Paints the 2D graph as PaintPolyMarker. ;  ; void PaintTriangles (Option_t *option);  Paints the 2D graph as triangles. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DPainter.html:2459,Hash,Hash,2459,doc/master/classTGraph2DPainter.html,https://root.cern,https://root.cern/doc/master/classTGraph2DPainter.html,2,['Hash'],['Hash']
Security,"tPrimaries(Option_t* option = """"); char*GetPROC(int i); Float_tTGenerator::GetPtCut() const; Pybins_t*GetPybins(); Pydat1_t*GetPydat1(); Pydat2_t*GetPydat2(); Pydat3_t*GetPydat3(); Pydat4_t*GetPydat4(); Pydatr_t*GetPydatr(); Pyint1_t*GetPyint1(); Pyint2_t*GetPyint2(); Pyint3_t*GetPyint3(); Pyint4_t*GetPyint4(); Pyint5_t*GetPyint5(); Pyint6_t*GetPyint6(); Pyint7_t*GetPyint7(); Pyint8_t*GetPyint8(); Pyint9_t*GetPyint9(); Pyints_t*GetPyints(); Pyjets_t*GetPyjets(); Pymssm_t*GetPymssm(); Pypars_t*GetPypars(); Pyssmt_t*GetPyssmt(); Pysubs_t*GetPysubs(); doubleGetRMSS(int i); doubleGetRRPY(int i); doubleGetSMW(int i); doubleGetSMZ(int i); virtual const char*TNamed::GetTitle() const; doubleGetUMIX(int i, int j); virtual UInt_tTObject::GetUniqueID() const; doubleGetV(int ip, int i); doubleGetVCKM(int i, int j); doubleGetVINT(int i); doubleGetVMIX(int i, int j); doubleGetWIDS(int i, int j); doubleGetZMIX(int i, int j); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual TObjArray*ImportParticles(Option_t* option = """"); virtual Int_tImportParticles(TClonesArray* particles, Option_t* option = """"); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitialize(const char* frame, const char* beam, const char* target, float win); virtual voidTObject::Inspect() constMENU ; static TPythia6*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidOpenFortranFile(int lun, char* name); static voidTObject::operator delete(void* ptr); sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPythia6.html:5744,Hash,Hash,5744,root/html528/TPythia6.html,https://root.cern,https://root.cern/root/html528/TPythia6.html,1,['Hash'],['Hash']
Security,"tPrimaries(Option_t* option = """"); char*GetPROC(int i); Float_tTGenerator::GetPtCut() const; Pybins_t*GetPybins(); Pydat1_t*GetPydat1(); Pydat2_t*GetPydat2(); Pydat3_t*GetPydat3(); Pydat4_t*GetPydat4(); Pydatr_t*GetPydatr(); Pyint1_t*GetPyint1(); Pyint2_t*GetPyint2(); Pyint3_t*GetPyint3(); Pyint4_t*GetPyint4(); Pyint5_t*GetPyint5(); Pyint6_t*GetPyint6(); Pyint7_t*GetPyint7(); Pyint8_t*GetPyint8(); Pyint9_t*GetPyint9(); Pyints_t*GetPyints(); Pyjets_t*GetPyjets(); Pymssm_t*GetPymssm(); Pypars_t*GetPypars(); Pyssmt_t*GetPyssmt(); Pysubs_t*GetPysubs(); doubleGetRMSS(int i); doubleGetRRPY(int i); doubleGetSMW(int i); doubleGetSMZ(int i); virtual const char*TNamed::GetTitle() const; doubleGetUMIX(int i, int j); virtual UInt_tTObject::GetUniqueID() const; doubleGetV(int ip, int i); doubleGetVCKM(int i, int j); doubleGetVINT(int i); doubleGetVMIX(int i, int j); doubleGetWIDS(int i, int j); doubleGetZMIX(int i, int j); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual TObjArray*ImportParticles(Option_t* option = """"); virtual Int_tImportParticles(TClonesArray* particles, Option_t* option = """"); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitialize(const char* frame, const char* beam, const char* target, float win); virtual voidTObject::Inspect() constMENU ; static TPythia6*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPythia6.html:5744,Hash,Hash,5744,root/html530/TPythia6.html,https://root.cern,https://root.cern/root/html530/TPythia6.html,2,['Hash'],['Hash']
Security,"tRenderObject(const TEveException& eh) const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; Bool_tGetSelectViaFrame() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; TEveDigitSet::TooltipCB_fooGetTooltipCBFoo() const; virtual UInt_tTObject::GetUniqueID() const; void*GetUserData(Int_t n) const; Bool_tGetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveDigitSet.html:13773,Hash,Hash,13773,root/html532/TEveDigitSet.html,https://root.cern,https://root.cern/root/html532/TEveDigitSet.html,4,['Hash'],['Hash']
Security,"tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Bool_t_flatSFInt; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static RooFormulaVar*RooResolutionModel::_identityIdentity basis function pointe; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooGaussModel.html:42167,access,access,42167,root/html534/RooGaussModel.html,https://root.cern,https://root.cern/root/html534/RooGaussModel.html,1,['access'],['access']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayC::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1C.html:10249,Hash,Hash,10249,root/html602/TH1C.html,https://root.cern,https://root.cern/root/html602/TH1C.html,1,['Hash'],['Hash']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayD::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1D.html:10263,Hash,Hash,10263,root/html602/TH1D.html,https://root.cern,https://root.cern/root/html602/TH1D.html,1,['Hash'],['Hash']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayF::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1F.html:10256,Hash,Hash,10256,root/html602/TH1F.html,https://root.cern,https://root.cern/root/html602/TH1F.html,2,['Hash'],['Hash']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayI::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1I.html:10250,Hash,Hash,10250,root/html602/TH1I.html,https://root.cern,https://root.cern/root/html602/TH1I.html,1,['Hash'],['Hash']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayS::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1S.html:10257,Hash,Hash,10257,root/html602/TH1S.html,https://root.cern,https://root.cern/root/html602/TH1S.html,1,['Hash'],['Hash']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayC::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2C.html:11136,Hash,Hash,11136,root/html602/TH2C.html,https://root.cern,https://root.cern/root/html602/TH2C.html,1,['Hash'],['Hash']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayD::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2D.html:11151,Hash,Hash,11151,root/html602/TH2D.html,https://root.cern,https://root.cern/root/html602/TH2D.html,1,['Hash'],['Hash']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayF::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2F.html:11144,Hash,Hash,11144,root/html602/TH2F.html,https://root.cern,https://root.cern/root/html602/TH2F.html,1,['Hash'],['Hash']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayI::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2I.html:11144,Hash,Hash,11144,root/html602/TH2I.html,https://root.cern,https://root.cern/root/html602/TH2I.html,1,['Hash'],['Hash']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayS::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2S.html:11151,Hash,Hash,11151,root/html602/TH2S.html,https://root.cern,https://root.cern/root/html602/TH2S.html,1,['Hash'],['Hash']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayC::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLTH3Composition.html:11438,Hash,Hash,11438,root/html602/TGLTH3Composition.html,https://root.cern,https://root.cern/root/html602/TGLTH3Composition.html,2,['Hash'],['Hash']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayD::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3D.html:11404,Hash,Hash,11404,root/html602/TH3D.html,https://root.cern,https://root.cern/root/html602/TH3D.html,1,['Hash'],['Hash']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayF::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3F.html:11397,Hash,Hash,11397,root/html602/TH3F.html,https://root.cern,https://root.cern/root/html602/TH3F.html,1,['Hash'],['Hash']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayI::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3I.html:11397,Hash,Hash,11397,root/html602/TH3I.html,https://root.cern,https://root.cern/root/html602/TH3I.html,1,['Hash'],['Hash']
Security,"tSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; Stat_tTArrayS::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3S.html:11404,Hash,Hash,11404,root/html602/TH3S.html,https://root.cern,https://root.cern/root/html602/TH3S.html,1,['Hash'],['Hash']
Security,"tT firstDefinition TCollectionProxyInfo.h:255; ROOT::Detail::TCollectionProxyInfo::PairHolder::PairHolderPairHolder()Definition TCollectionProxyInfo.h:257; ROOT::Detail::TCollectionProxyInfo::PairHolder::~PairHoldervirtual ~PairHolder()Definition TCollectionProxyInfo.h:259; ROOT::Detail::TCollectionProxyInfo::Pushback< Internal::TStdBitsetHelper< Bitset_t > >::resizestatic void resize(void *, size_t)Definition TCollectionProxyInfo.h:870; ROOT::Detail::TCollectionProxyInfo::Pushback< Internal::TStdBitsetHelper< Bitset_t > >::feedstatic void * feed(void *from, void *to, size_t size)Definition TCollectionProxyInfo.h:872; ROOT::Detail::TCollectionProxyInfo::Pushback< Internal::TStdBitsetHelper< Bitset_t > >::value_offsetstatic int value_offset()Definition TCollectionProxyInfo.h:879; ROOT::Detail::TCollectionProxyInfo::Pushback< Internal::TStdBitsetHelper< Bitset_t > >::PCont_tCont_t * PCont_tDefinition TCollectionProxyInfo.h:762; ROOT::Detail::TCollectionProxyInfo::PushbackSmall helper to encapsulate all necessary data accesses for containers like vector,...Definition TCollectionProxyInfo.h:373; ROOT::Detail::TCollectionProxyInfo::Pushback::Cont_tT Cont_tDefinition TCollectionProxyInfo.h:374; ROOT::Detail::TCollectionProxyInfo::Pushback::PValue_tValue_t * PValue_tDefinition TCollectionProxyInfo.h:380; ROOT::Detail::TCollectionProxyInfo::Pushback::resizestatic void resize(void *obj, size_t n)Definition TCollectionProxyInfo.h:381; ROOT::Detail::TCollectionProxyInfo::Pushback::feedstatic void * feed(void *from, void *to, size_t size)Definition TCollectionProxyInfo.h:385; ROOT::Detail::TCollectionProxyInfo::Pushback::Iter_tT::iterator Iter_tDefinition TCollectionProxyInfo.h:375; ROOT::Detail::TCollectionProxyInfo::Pushback::PEnv_tEnv_t * PEnv_tDefinition TCollectionProxyInfo.h:378; ROOT::Detail::TCollectionProxyInfo::Pushback::Value_tT::value_type Value_tDefinition TCollectionProxyInfo.h:376; ROOT::Detail::TCollectionProxyInfo::Pushback::Env_tEnviron< Iter_t > Env_tDefinitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollectionProxyInfo_8h_source.html:45607,access,accesses,45607,doc/master/TCollectionProxyInfo_8h_source.html,https://root.cern,https://root.cern/doc/master/TCollectionProxyInfo_8h_source.html,1,['access'],['accesses']
Security,"tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual Float_tTAttAxis::GetTickLength() const; virtual const char*TNamed::GetTitle() const; virtual Color_tTAttAxis::GetTitleColor() const; virtual Style_tTAttAxis::GetTitleFont() const; virtual Float_tTAttAxis::GetTitleOffset() const; virtual Float_tTAttAxis::GetTitleSize() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveProjectionAxes.html:9211,Hash,Hash,9211,root/html528/TEveProjectionAxes.html,https://root.cern,https://root.cern/root/html528/TEveProjectionAxes.html,6,['Hash'],['Hash']
Security,"tTFile::GetReadCalls() const; static Bool_tTFile::GetReadStreamerInfo(); Int_tTFile::GetRecordHeader(char* buf, Long64_t first, Int_t maxbytes, Int_t& nbytes, Int_t& objlen, Int_t& keylen); Long64_tTFile::GetRelOffset() const; const TString&GetSecretKey() const; virtual Long64_tTDirectoryFile::GetSeekDir() const; virtual Long64_tTFile::GetSeekFree() const; virtual Long64_tTFile::GetSeekInfo() const; virtual Long64_tTDirectoryFile::GetSeekKeys() const; virtual Long64_tTDirectoryFile::GetSeekParent() const; virtual Long64_tTWebFile::GetSize() const; const TList*TFile::GetStreamerInfoCache(); virtual TList*TFile::GetStreamerInfoList(); virtual const char*TNamed::GetTitle() const; static TFile::EFileTypeTFile::GetType(const char* name, Option_t* option = """", TString* prefix = 0); virtual UInt_tTObject::GetUniqueID() const; const TUrl&GetUrl() const; TUUIDTDirectory::GetUUID() const; Int_tTFile::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTFile::IncrementFileCounter(); virtual voidTFile::IncrementProcessIDs(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFile::IsArchive() const; Bool_tTFile::IsBinary() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tTDirectoryFile::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTWebFile::IsOpen() const; Bool_tTFile::IsRaw() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectoryFile::IsWritable() const; Bool_tTObject::IsZombie() const; virtual voidTFile::ls(Option_t* option = """") const; virtual voidTFile::MakeFree(Long64_t first, Long64_t last); virtual voidTFile::MakeProject(const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TS3WebFile.html:9703,Hash,Hash,9703,root/html602/TS3WebFile.html,https://root.cern,https://root.cern/root/html602/TS3WebFile.html,2,['Hash'],['Hash']
Security,"tTGCompositeFrame::HandleDoubleClick(Event_t*); virtual Bool_tTGCompositeFrame::HandleDragDrop(TGFrame* frame, Int_t x, Int_t y, TGLayoutHints* lo); virtual Bool_tTGCompositeFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); voidHandleMenu(Int_t id); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTBrowserImp::Iconify(); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitPlugins(Option_t* opt = """"); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tIsCloseTabShown() const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRootBrowser.html:10358,Hash,Hash,10358,root/html528/TRootBrowser.html,https://root.cern,https://root.cern/root/html528/TRootBrowser.html,6,['Hash'],['Hash']
Security,"tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTEveElement::GetParentIgnoreCnt() const; virtual TObject*TEveElement::GetRenderObject(const TEveException& eh) const; virtual Bool_tTEveElement::GetRnrAnything() const; virtual Bool_tTEveElement::GetRnrChildren() const; virtual Bool_tTEveElement::GetRnrSelf() const; virtual Bool_tTEveElement::GetRnrState() const; virtual UChar_tTEveElement::GetSelectedLevel() const; Bool_tGetShowTitleBar() const; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsAncestorOf(TEveWindow* win); Bool_tIsCurrent() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveWindow.html:9325,Hash,Hash,9325,root/html530/TEveWindow.html,https://root.cern,https://root.cern/root/html530/TEveWindow.html,5,['Hash'],['Hash']
Security,"tTSystem::fBeepFreqUsed by Beep(); TStringTSystem::fBuildArchArchitecure for which ROOT was built (passed to ./configure); TStringTSystem::fBuildCompilerCompiler used to build this ROOT; TStringTSystem::fBuildCompilerVersionCompiler version used to build this ROOT; TStringTSystem::fBuildDirLocation where to build ACLiC shared library and use as scratch area.; TStringTSystem::fBuildNodeDetailed information where ROOT was built; TSeqCollection*TSystem::fCompiledList of shared libs from compiled macros to be deleted; Bool_tTSystem::fDoneTrue if eventloop should be finished; TSeqCollection*TSystem::fFileHandlerList of file handlers; TStringTSystem::fFlagsDebugFlags for debug compilation; TStringTSystem::fFlagsOptFlags for optimized compilation; TSeqCollection*TSystem::fHelpersList of helper classes for alternative file/directory access; TStringTSystem::fHostnameHostname; Bool_tTSystem::fInControlTrue if in eventloop; TStringTSystem::fIncludePathUsed to expand $IncludePath in the directives given to SetMakeSharedLib and SetMakeExe; Bool_tTSystem::fInsideNotifyUsed by DispatchTimers(); Bool_tfIsLocalTRUE if the path points to this host; TStringTSystem::fLastErrorStringLast system error message; Int_tTSystem::fLevelLevel of nested eventloops; TStringTSystem::fLinkdefSuffixDefault suffix for linkdef files to be used by ACLiC (see EACLiCProperties); TStringTSystem::fLinkedLibsUsed to expand $LinkedLibs in the directives given to SetMakeSharedLib and SetMakeExe; TStringTSystem::fListLibsList shared libraries, cache used by GetLibraries; TStringTSystem::fListPathsList of all include (fIncludePath + interpreter include path). Cache used by GetIncludePath; TStringfLocalPrefixif fIsLocal, prefix to be prepend locally; TStringTSystem::fMakeExeDirective used to build an executable; TStringTSystem::fMakeSharedLibDirective used to build a shared library; Int_tTSystem::fMaxrfdLargest fd in read mask; Int_tTSystem::fMaxwfdLargest fd in write mask; TStringTNamed::fNameobject identifier; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TNetSystem.html:18737,access,access,18737,root/html528/TNetSystem.html,https://root.cern,https://root.cern/root/html528/TNetSystem.html,3,['access'],['access']
Security,"tTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; TNamed::~TNamedvirtual ~TNamed()TNamed destructor.Definition TNamed.cxx:42; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TNamed::GetTitleconst char * GetTitle() const overrideReturns title of object.Definition TNamed.h:48; TNamed::TNamedTNamed(const TString &name, const TString &title)Definition TNamed.h:38; TNamed::fTitleTString fTitleDefinition TNamed.h:33; TNamed::TNamedTNamed()Definition TNamed.h:36; TNamed::Printvoid Print(Option_t *option="""") const overridePrint TNamed name and title.Definition TNamed.cxx:128; TNamed::fNameTString fNameDefinition TNamed.h:32; TNamed::Clearvoid Clear(Option_t *option="""") overrideSet name and title to empty strings ("""").Definition TNamed.cxx:64; TNamed::SetNamevirtual void SetName(const char *name)Set the name of the TNamed.Definition TNamed.cxx:140; TNamed::HashULong_t Hash() const overrideReturn hash value for this object.Definition TNamed.h:49; TNamed::CompareInt_t Compare(const TObject *obj) const overrideCompare two TNamed objects.Definition TNamed.cxx:85; TNamed::Sizeofvirtual Int_t Sizeof() constReturn size of the TNamed part of the TObject.Definition TNamed.cxx:173; TNamed::operator=TNamed & operator=(const TNamed &rhs)TNamed assignment operator.Definition TNamed.cxx:51; TNamed::lsvoid ls(Option_t *option="""") const overrideList TNamed name and title.Definition TNamed.cxx:113; TNamed::SetNameTitlevirtual void SetNameTitle(const char *name, const char *title)Set all the TNamed parameters (name and title).Definition TNamed.cxx:154; TObjectMother of all ROOT objects.Definition TObject.h:41; TStringBasic string class.Definition TString.h:139; TString::HashUInt_t Hash(ECaseCompare cmp=kExact) constReturn hash value.Definition TString.cxx:677; bool. corebaseincTNamed.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:03 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TNamed_8h_source.html:5159,Hash,Hash,5159,doc/master/TNamed_8h_source.html,https://root.cern,https://root.cern/doc/master/TNamed_8h_source.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"tUxmin() const; virtual Double_tTPad::GetUymax() const; virtual Double_tTPad::GetUymin() const; virtual TView*TPad::GetView() const; virtual TObject*TPad::GetView3D() const; virtual TVirtualViewer3D*TPad::GetViewer3D(Option_t* type = """"); virtual TVirtualPad*TPad::GetVirtCanvas() const; virtual UInt_tTPad::GetWh() const; virtual Double_tTPad::GetWNDC() const; virtual UInt_tTPad::GetWw() const; virtual Double_tTPad::GetX1() const; virtual Double_tTPad::GetX2() const; Float_tTAttPad::GetXfile() const; virtual Double_tTPad::GetXlowNDC() const; Float_tTAttPad::GetXstat() const; virtual Double_tTPad::GetY1() const; virtual Double_tTPad::GetY2() const; Float_tTAttPad::GetYfile() const; virtual Double_tTPad::GetYlowNDC() const; Float_tTAttPad::GetYstat() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual Bool_tTPad::HasCrosshair() const; virtual Bool_tTPad::HasFixedAspectRatio() const; virtual ULong_tTPad::Hash() const; virtual Bool_tTPad::HasViewer3D() const; virtual voidTPad::HighLight(Color_t col = kRed, Bool_t set = kTRUE); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTPad::IsBatch() const; Bool_tTVirtualPad::IsBeingResized() const; virtual Bool_tTPad::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTPad::IsFolder() const; virtual Bool_tTPad::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTPad::IsRetained() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; virtual Bool_tTPad::IsVertical() const; Bool_tTObject::IsZombie() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TButton.html:12760,Hash,Hash,12760,root/html526/TButton.html,https://root.cern,https://root.cern/root/html526/TButton.html,19,['Hash'],['Hash']
Security,"tVariableValue(unsigned int ivar, double val); virtual boolROOT::Math::Minimizer::SetVariableValues(const double* x); virtual voidShowMembers(TMemberInspector& insp) const; intROOT::Math::Minimizer::Status() const; intROOT::Math::Minimizer::Strategy() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TFumiliMinimizer(int dummy = 0); doubleROOT::Math::Minimizer::Tolerance() const; virtual intROOT::Math::Minimizer::VariableIndex(const string& name) const; virtual stringROOT::Math::Minimizer::VariableName(unsigned int ivar) const; virtual const double*X() const. protected:. static doubleEvaluateFCN(const double* x, double* g); static voidFcn(int&, double*, double& f, double*, int). private:. TFumiliMinimizer&operator=(const TFumiliMinimizer& rhs); TFumiliMinimizer(const TFumiliMinimizer&). Data Members; protected:. ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::fOptionsminimizer options; intROOT::Math::Minimizer::fStatusstatus of minimizer; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. vector<double>fCovar; unsigned intfDim; doublefEdm; vector<double>fErrors; TFumili*fFumili; doublefMinVal; unsigned intfNFree; vector<double>fParams; static TFumili*fgFumilistatic instance (used by fcn function); static ROOT::Math::FitMethodFunction*fgFunc; static ROOT::Math::FitMethodGradFunction*fgGradFunc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFumiliMinimizer(int dummy = 0); Constructor for TFumiliMinimier class. ~TFumiliMinimizer(); Destructor implementation. TFumiliMinimizer(const TFumiliMinimizer& ); Implementation of copy constructor (it is private). void SetFunction(const ROOT::Math::IMultiGenFunction & func); Set the objective function to be minimized, by passing a function object implement the; basic multi-dim Function interface. In this case the derivatives will be; calculated by Fumil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFumiliMinimizer.html:5650,validat,validated,5650,root/html602/TFumiliMinimizer.html,https://root.cern,https://root.cern/root/html602/TFumiliMinimizer.html,2,['validat'],['validated']
Security,"tVariableValues(const double* x); intROOT::Math::Minimizer::Status() const; virtual const double*StepSizes() const; intROOT::Math::Minimizer::Strategy() const; doubleROOT::Math::Minimizer::Tolerance() const; const ROOT::Math::MinimTransformFunction*TransformFunction() const; virtual intVariableIndex(const string& name) const; virtual stringVariableName(unsigned int ivar) const; virtual const double*X() const. protected:. boolCheckDimension() const; boolCheckObjFunction() const; ROOT::Math::MinimTransformFunction*CreateTransformation(vector<double>& startValues, const ROOT::Math::IMultiGradFunction* func = 0); voidSetFinalValues(const double* x); voidSetMinValue(double val). private:. ROOT::Math::BasicMinimizerBasicMinimizer(const ROOT::Math::BasicMinimizer&); ROOT::Math::BasicMinimizer&operator=(const ROOT::Math::BasicMinimizer& rhs). Data Members; protected:. ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::fOptionsminimizer options; intROOT::Math::Minimizer::fStatusstatus of minimizer ; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. map<unsigned int,std::pair<double,double> >fBoundsmap specifying the bound using as key the parameter index; unsigned intfDim; doublefMinVal; vector<std::string>fNames; const ROOT::Math::IMultiGenFunction*fObjFunc; vector<double>fSteps; vector<double>fValues; vector<ROOT::Math::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BasicMinimizer(). Default constructor. virtual ~BasicMinimizer(). Destructor. BasicMinimizer(const ROOT::Math::BasicMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__BasicMinimizer.html:5835,validat,validated,5835,root/html534/ROOT__Math__BasicMinimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__BasicMinimizer.html,1,['validat'],['validated']
Security,"tVariableValues(const double* x); intROOT::Math::Minimizer::Status() const; virtual const double*StepSizes() const; intROOT::Math::Minimizer::Strategy() const; doubleROOT::Math::Minimizer::Tolerance() const; const ROOT::Math::MinimTransformFunction*TransformFunction() const; virtual intVariableIndex(const string& name) const; virtual stringVariableName(unsigned int ivar) const; virtual const double*X() const. protected:. boolCheckDimension() const; boolCheckObjFunction() const; ROOT::Math::MinimTransformFunction*CreateTransformation(vector<double>& startValues, const ROOT::Math::IMultiGradFunction* func = 0); voidSetFinalValues(const double* x); voidSetMinValue(double val). private:. ROOT::Math::BasicMinimizerBasicMinimizer(const ROOT::Math::BasicMinimizer&); ROOT::Math::BasicMinimizer&operator=(const ROOT::Math::BasicMinimizer& rhs). Data Members; protected:. ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::fOptionsminimizer options; intROOT::Math::Minimizer::fStatusstatus of minimizer; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. map<unsigned int,pair<double,double> >fBoundsmap specifying the bound using as key the parameter index; unsigned intfDim; doublefMinVal; vector<string>fNames; const ROOT::Math::IMultiGenFunction*fObjFunc; vector<double>fSteps; vector<double>fValues; vector<ROOT::Math::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BasicMinimizer(). Default constructor. virtual ~BasicMinimizer(). Destructor. BasicMinimizer(const ROOT::Math::BasicMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__BasicMinimizer.html:5891,validat,validated,5891,root/html602/ROOT__Math__BasicMinimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__BasicMinimizer.html,2,['validat'],['validated']
Security,"tVars, const char* cuts = """", const char* cutRange = 0) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*get() const; virtual const RooArgSet*get(Int_t index) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Bool_tRooAbsData::getRange(RooRealVar& var, Double_t& lowest, Double_t& highest, Double_t marginFrac = 0, Bool_t symMode = kFALSE) const; RooAbsData*RooAbsData::getSimData(const char* idxstate); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsData::hasFilledCache() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tisNonPoissonWeighted() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tisWeighted() const; Bool_tTObject::IsZombie() const; Double_tRooAbsData::kurtosis(RooRealVar& var, const char* cutSpec = 0, const char* cutRange = 0) const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Double_tRooAbsData::mean(RooRealVar& var, const char* cutSpec = 0, const char* cutRange = 0) const; RooRealVar*RooAbsData::meanVar(RooRealVar& var, const char* cutSpec = 0, const char* cutRang",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooDataSet.html:6070,Hash,Hash,6070,root/html530/RooDataSet.html,https://root.cern,https://root.cern/root/html530/RooDataSet.html,2,['Hash'],['Hash']
Security,"tVirtCanvas() const; virtual UInt_tGetWh() const; UInt_tGetWindowHeight() const; Int_tGetWindowTopX(); Int_tGetWindowTopY(); UInt_tGetWindowWidth() const; virtual Double_tTPad::GetWNDC() const; virtual UInt_tGetWw() const; virtual Double_tTPad::GetX1() const; virtual Double_tTPad::GetX2() const; Float_tTAttPad::GetXfile() const; virtual Double_tTPad::GetXlowNDC() const; Size_tGetXsizeReal() const; Size_tGetXsizeUser() const; Float_tTAttPad::GetXstat() const; virtual Double_tTPad::GetY1() const; virtual Double_tTPad::GetY2() const; Float_tTAttPad::GetYfile() const; virtual Double_tTPad::GetYlowNDC() const; Size_tGetYsizeReal() const; Size_tGetYsizeUser() const; Float_tTAttPad::GetYstat() const; virtual voidHandleInput(EEventType button, Int_t x, Int_t y); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual Bool_tTPad::HasCrosshair() const; virtual Bool_tTPad::HasFixedAspectRatio() const; virtual ULong_tTPad::Hash() const; Bool_tHasMenuBar() const; virtual Bool_tTPad::HasViewer3D() const; virtual voidTPad::HighLight(Color_t col = kRed, Bool_t set = kTRUE); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidIconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsBatch() const; Bool_tTVirtualPad::IsBeingResized() const; virtual Bool_tTPad::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tIsGrayscale(); virtual Bool_tTPad::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsRetained() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; virtual Bool_tTPad::IsV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCanvas.html:13712,Hash,Hash,13712,root/html526/TCanvas.html,https://root.cern,https://root.cern/root/html526/TCanvas.html,7,['Hash'],['Hash']
Security,"tZTitle (const char *title);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UseCurrentStyle () override;  Copy current attributes from/to current style. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:37466,Hash,Hash,37466,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"t_err.push_back(0.1);; init_err.push_back(0.1);. // create minimizer (default constructor); VariableMetricMinimizer theMinimizer;. // minimize; FunctionMinimum min =; theMinimizer.minimize(theFCN, init_par, init_err);. // output; std::cout<<""minimum: ""<<min<<std::endl;; }. {; // demonstrate standard minimization using MIGRAD; // create Minuit parameters with names; MnUserParameters upar;; upar.add(""mean"", mean, 0.1);; upar.add(""sigma"", rms, 0.1);; upar.add(""area"", area, 0.1);. // create MIGRAD minimizer; MnMigrad migrad(theFCN, upar);. // minimize; FunctionMinimum min = migrad();. // output; std::cout<<""minimum: ""<<min<<std::endl;; }. {; // demonstrate full interaction with parameters over subsequent; // minimizations. // create Minuit parameters with names; MnUserParameters upar;; upar.add(""mean"", mean, 0.1);; upar.add(""sigma"", rms, 0.1);; upar.add(""area"", area, 0.1);. // access parameter by name to set limits...; upar.setLimits(""mean"", mean-0.01, mean+0.01);. // ... or access parameter by index; upar.setLimits(1, rms-0.1, rms+0.1);. // create Migrad minimizer; MnMigrad migrad(theFCN, upar);. // fix a parameter...; migrad.fix(""mean"");. // ... and minimize; FunctionMinimum min = migrad();. // output; std::cout<<""minimum: ""<<min<<std::endl;. // release a parameter...; migrad.release(""mean"");. // ... and fix another one; migrad.fix(1);. // and minimize again; FunctionMinimum min1 = migrad();. // output; std::cout<<""minimum1: ""<<min1<<std::endl;. // release the parameter...; migrad.release(1);. // ... and minimize with all three parameters; // (still with limits!); FunctionMinimum min2 = migrad();. // output; std::cout<<""minimum2: ""<<min2<<std::endl;. // remove all limits on parameters...; migrad.removeLimits(""mean"");; migrad.removeLimits(""sigma"");. // ... and minimize again with all three parameters; // (now without limits!); FunctionMinimum min3 = migrad();. // output; std::cout<<""minimum3: ""<<min3<<std::endl;; }. {; // demonstrate MINOS error analysis. // create Min",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:85073,access,access,85073,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,2,['access'],['access']
Security,"t_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h Atom_t Int_t ULong_t ULong_t bytesDefinition TGWin32VirtualXProxy.cxx:245; srcOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t srcDefinition TGWin32VirtualXProxy.cxx:164; namechar name[80]Definition TGX11.cxx:110; TRWSpinLock.hxx; TUrl.h; ROOT::Internal::RConcurrentHashColl::HashValueDefinition RConcurrentHashColl.hxx:36; ROOT::Internal::RConcurrentHashCollThis class is a thread-safe associative collection connecting a 256 bits digest/hash to a collection ...Definition RConcurrentHashColl.hxx:30; TArchiveFileClass describing an archive file containing multiple sub-files, like a ZIP or TAR archive.Definition TArchiveFile.h:24; TArrayCArray of chars or bytes (8 bits per element).Definition TArrayC.h:27; TBasketManages buffers for branches of a Tree.Definition TBasket.h:34; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TCollection::GetSizevirtual Int_t GetSize() constReturn the capacity of the collection, i.e.Definition TCollection.h:184; TDirectoryFileA ROOT file is structured in Directories (like a file system).Definition TDirectoryFile.h:32; TDirectoryDescribe directory structure in memory.Definition TDirectory.h:45; TFileCacheReadA cache when reading files over the network.Definition TFileCacheRead.h:22; TFileCacheWriteA cache when writing files over the network.Definition TFileCacheWrite.h:19; TFile",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8h_source.html:23657,hash,hash,23657,doc/master/TFile_8h_source.html,https://root.cern,https://root.cern/doc/master/TFile_8h_source.html,1,['hash'],['hash']
Security,"t_t ReadRules();; 386 void AdoptSchemaRules( ROOT::Detail::TSchemaRuleSet *rules );; 387 void Browse(TBrowser *b) override;; 388 void BuildRealData(void *pointer = nullptr, Bool_t isTransient = kFALSE);; 389 void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);; 390 void CalculateStreamerOffset() const;; 391 Bool_t CallShowMembers(const void* obj, TMemberInspector &insp, Bool_t isTransient = kFALSE) const;; 392 Bool_t CanSplit() const;; 393 Bool_t CanIgnoreTObjectStreamer() { return TestBit(kIgnoreTObjectStreamer);}; 394 Long_t ClassProperty() const;; 395 TObject *Clone(const char *newname="""") const override;; 396 void CopyCollectionProxy(const TVirtualCollectionProxy&);; 397 void Draw(Option_t *option="""") override;; 398 void Dump() const override { TDictionary::Dump(); }; 399 void Dump(const void *obj, Bool_t noAddr = kFALSE) const;; 400 char *EscapeChars(const char *text) const;; 401 TVirtualStreamerInfo *FindStreamerInfo(UInt_t checksum, Bool_t isTransient = kFALSE) const;; 402 TVirtualStreamerInfo *GetConversionStreamerInfo( const char* onfile_classname, Int_t version ) const;; 403 TVirtualStreamerInfo *FindConversionStreamerInfo( const char* onfile_classname, UInt_t checksum ) const;; 404 TVirtualStreamerInfo *GetConversionStreamerInfo( const TClass* onfile_cl, Int_t version ) const;; 405 TVirtualStreamerInfo *FindConversionStreamerInfo( const TClass* onfile_cl, UInt_t checksum ) const;; 406 void ForceReload (TClass* oldcl);; 407 Bool_t HasDataMemberInfo() const { return fIsSyntheticPair || fHasRootPcmInfo || HasInterpreterInfo(); }; 408 Bool_t HasDefaultConstructor(Bool_t testio = kFALSE) const;; 409 Bool_t HasInterpreterInfoInMemory() const { return nullptr != fClassInfo; }; 410 Bool_t HasInterpreterInfo() const { return fCanLoadClassInfo || fClassInfo; }; 411 UInt_t GetCheckSum(ECheckSum code = kCurrentCheckSum) const;; 412 UInt_t GetCheckSum(Bool_t &isvalid) const;; 413 UInt_t GetCheckSum(ECheckSum code, Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8h_source.html:19766,checksum,checksum,19766,doc/master/TClass_8h_source.html,https://root.cern,https://root.cern/doc/master/TClass_8h_source.html,2,['checksum'],['checksum']
Security,"t_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char filenameDefinition TGWin32VirtualXProxy.cxx:232; nentriesint nentriesDefinition THbookFile.cxx:91; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; EventDefinition collection_proxies.C:172; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TStringBasic string class.Definition TString.h:139; TSystem::ExpandPathNamevirtual Bool_t ExpandPathName(TString &path)Expand a pathname getting rid of special shell characters like ~.Definition TSystem.cxx:1274; TSystem::AccessPathNamevirtual Bool_t AccessPathName(const char *path, EAccessMode mode=kFileExists)Returns FALSE if one can access a file using the specified access mode.Definition TSystem.cxx:1296; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; TTree::GetEntryvirtual Int_t GetEntry(Long64_t entry, Int_t getall=0)Read all branches of entry and return total number of bytes read.Definition TTree.cxx:5638; TTree::SetBranchAddressvirtual Int_t SetBranchAddress(const char *bname, void *add, TBranch **ptr=nullptr)Change branch address, dealing with clone trees properly.Definition TTree.cxx:8385; TTree::GetEntriesvirtual Long64_t GetEntries() constDefinition TTree.h:463; TTree::CloneTreevirtual TTree * CloneTree(Long64_t nentries=-1, Option_t *option="""")Create a clone of this tree and copy nentries.Definition TTree.cxx:3139; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; AuthorRene Brun ; Definition in file copytree3.C. tutorialstreecopytree3.C. ROOT master ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/copytree3_8C.html:2491,Access,AccessPathNamevirtual,2491,doc/master/copytree3_8C.html,https://root.cern,https://root.cern/doc/master/copytree3_8C.html,4,"['Access', 'access']","['AccessPathName', 'AccessPathNamevirtual', 'access']"
Security,"t_t bordersize = 4, Option_t* option = ""br""); Draw this pave with new coordinates. void PaintPaveArc(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize = 4, Option_t* option = ""br""); Draw this pave with rounded corners. void Print(Option_t* option = """") const; Dump this pave with its attributes. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void SetX1(Double_t x1); Set the X1 value. void SetX2(Double_t x2); Set the X2 value. void SetY1(Double_t y1); Set the Y1 value. void SetY2(Double_t y2); Set the Y2 value. void Streamer(TBuffer& ); Stream an object of class TPave. Int_t GetBorderSize() const; { return fBorderSize;}. Double_t GetCornerRadius() const; {return fCornerRadius;}. Option_t * GetName() const; {return fName.Data();}. Option_t * GetOption() const; {return fOption.Data();}. Int_t GetShadowColor() const; {return fShadowColor;}. Double_t GetX1NDC() const; {return fX1NDC;}. Double_t GetX2NDC() const; {return fX2NDC;}. Double_t GetY1NDC() const; {return fY1NDC;}. Double_t GetY2NDC() const; {return fY2NDC;}. ULong_t Hash() const; { return fName.Hash(); }. Bool_t IsSortable() const; { return kTRUE; }. void SetBorderSize(Int_t bordersize = 4); {fBorderSize = bordersize;}. void SetCornerRadius(Double_t rad = 0.2); {fCornerRadius = rad;}. void SetName(const char* name = """"); {fName = name;}. void SetOption(Option_t* option = ""br""); {fOption = option;}. void SetShadowColor(Int_t color); {fShadowColor=color;}. void SetX1NDC(Double_t x1); {fX1NDC=x1;}. void SetX2NDC(Double_t x2); {fX2NDC=x2;}. void SetY1NDC(Double_t y1); {fY1NDC=y1;}. void SetY2NDC(Double_t y2); {fY2NDC=y2;}. » Author: Rene Brun 16/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/graf:$Id$ » Last generated: 2015-03-14 16:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPave.html:13209,Hash,Hash,13209,root/html534/TPave.html,https://root.cern,https://root.cern/root/html534/TPave.html,2,['Hash'],['Hash']
Security,"t_t eoffset) const;; 190 template <typename T> T GetTypedValueSTL(TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;; 191 template <typename T> T GetTypedValueSTLP(TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const;; 192 Double_t GetValue(char *pointer, Int_t i, Int_t j, Int_t len) const { return GetTypedValue<Double_t>(pointer, i, j, len); }; 193 Double_t GetValueClones(TClonesArray *clones, Int_t i, Int_t j, Int_t k, Int_t eoffset) const { return GetTypedValueClones<Double_t>(clones, i, j, k, eoffset); }; 194 Double_t GetValueSTL(TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const { return GetTypedValueSTL<Double_t>(cont, i, j, k, eoffset); }; 195 Double_t GetValueSTLP(TVirtualCollectionProxy *cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const { return GetTypedValueSTLP<Double_t>(cont, i, j, k, eoffset); }; 196 void ls(Option_t *option="""") const override;; 197 Bool_t MatchLegacyCheckSum(UInt_t checksum) const;; 198 TVirtualStreamerInfo *NewInfo(TClass *cl) override { return new TStreamerInfo(cl); }; 199 void *New(void *obj = nullptr) override;; 200 void *NewArray(Long_t nElements, void* ary = nullptr) override;; 201 void Destructor(void* p, Bool_t dtorOnly = kFALSE) override;; 202 void DeleteArray(void* p, Bool_t dtorOnly = kFALSE) override;; 203 void PrintValue(const char *name, char *pointer, Int_t i, Int_t len, Int_t lenmax=1000) const;; 204 void PrintValueClones(const char *name, TClonesArray *clones, Int_t i, Int_t eoffset, Int_t lenmax=1000) const;; 205 void PrintValueSTL(const char *name, TVirtualCollectionProxy *cont, Int_t i, Int_t eoffset, Int_t lenmax=1000) const;; 206 ; 207 template <class T>; 208 Int_t ReadBuffer(TBuffer &b, const T &arrptr, TCompInfo *const*const compinfo, Int_t first, Int_t last, Int_t narr=1,Int_t eoffset=0,Int_t mode=0);; 209 template <class T>; 210 Int_t ReadBufferSkip(TBuffer &b, const T &arrptr, const TCompInfo *compinfo,Int_t kase, TStreamerE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8h_source.html:11394,checksum,checksum,11394,doc/master/TStreamerInfo_8h_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8h_source.html,1,['checksum'],['checksum']
Security,"t_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); Bool_tFillTClass(TClass* pcl); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TList*GetBaseList(); vector<TDataMember*>&GetData(); vector<TString>&GetDepClasses(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TList*GetEnumList(); virtual const char*TObject::GetIconName() const; const TList*GetListOfEnums(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; vector<TProtoClass::TProtoRealData>&GetPRDList(); intGetSize(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProtoClass.html:2412,Hash,Hash,2412,root/html602/TProtoClass.html,https://root.cern,https://root.cern/root/html602/TProtoClass.html,2,['Hash'],['Hash']
Security,"t_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TGrid * Connect (const char *grid, const char *uid=nullptr, const char *pw=nullptr, const char *options=nullptr);  The grid should be of the form: <grid>://<host>[:<port>], e.g.: alien://alice.cern.ch The uid is the username and pw the password that should be used for the connection. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fGrid;  ; TString fGridUrl;  ; TString fHost;  ; TString fOptions;  ; Int_t fPort;  ; TString fPw;  ; TString fUser;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGrid.html:10090,password,password,10090,doc/master/classTGrid.html,https://root.cern,https://root.cern/doc/master/classTGrid.html,1,['password'],['password']
Security,"t_t i) const; const TMatrixDSym*GetCorrelation() const; voidGetCorrelation(TMatrixDSym& matr); const TMatrixDSym*GetCovariance() const; voidGetCovariance(TMatrixDSym& matr); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const TVectorD*GetHyperplane() const; voidGetHyperplane(TVectorD& vec); virtual const char*TObject::GetIconName() const; const TVectorD*GetMean() const; voidGetMean(TVectorD& means); virtual const char*TObject::GetName() const; Int_tGetNHyp(); Int_tGetNOut(); Int_tGetNumberObservations() const; Int_tGetNvar() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TArrayI*GetOuliers() const; const TVectorD*GetRDistances() const; voidGetRDistances(TVectorD& rdist); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRobustEstimator.html:7458,Hash,Hash,7458,root/html528/TRobustEstimator.html,https://root.cern,https://root.cern/root/html528/TRobustEstimator.html,1,['Hash'],['Hash']
Security,"t_t i) const; const TMatrixDSym*GetCorrelation() const; voidGetCorrelation(TMatrixDSym& matr); const TMatrixDSym*GetCovariance() const; voidGetCovariance(TMatrixDSym& matr); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const TVectorD*GetHyperplane() const; voidGetHyperplane(TVectorD& vec); virtual const char*TObject::GetIconName() const; const TVectorD*GetMean() const; voidGetMean(TVectorD& means); virtual const char*TObject::GetName() const; Int_tGetNHyp(); Int_tGetNOut(); Int_tGetNumberObservations() const; Int_tGetNvar() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TArrayI*GetOuliers() const; const TVectorD*GetRDistances() const; voidGetRDistances(TVectorD& rdist); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TRobustEstimator.html:7458,Hash,Hash,7458,root/html530/TRobustEstimator.html,https://root.cern,https://root.cern/root/html530/TRobustEstimator.html,3,['Hash'],['Hash']
Security,"t_t i) const; const TMatrixDSym*GetCorrelation() const; voidGetCorrelation(TMatrixDSym& matr); const TMatrixDSym*GetCovariance() const; voidGetCovariance(TMatrixDSym& matr); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const TVectorD*GetHyperplane() const; voidGetHyperplane(TVectorD& vec); virtual const char*TObject::GetIconName() const; const TVectorD*GetMean() const; voidGetMean(TVectorD& means); virtual const char*TObject::GetName() const; Int_tGetNHyp(); Int_tGetNOut(); Int_tGetNumberObservations() const; Int_tGetNvar() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TArrayI*GetOuliers() const; const TVectorD*GetRDistances() const; voidGetRDistances(TVectorD& rdist); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRobustEstimator.html:7353,Hash,Hash,7353,root/html602/TRobustEstimator.html,https://root.cern,https://root.cern/root/html602/TRobustEstimator.html,2,['Hash'],['Hash']
Security,"t_t id) const; const char*GetParticleName() const; const char*GetPath() const; const char*GetPdgName(Int_t pdg) const; TGeoPhysicalNode*GetPhysicalNode(Int_t i) const; Double_tGetSafeDistance() const; Int_tGetSafeLevel() const; Int_tGetStackLevel() const; Double_tGetStep() const; virtual const char*TNamed::GetTitle() const; Double_tGetTmax() const; Bool_tGetTminTmax(Double_t& tmin, Double_t& tmax) const; TGeoNode*GetTopNode() const; TGeoVolume*GetTopVolume() const; TVirtualGeoTrack*GetTrack(Int_t index); Int_tGetTrackIndex(Int_t id) const; TVirtualGeoTrack*GetTrackOfId(Int_t id) const; Int_tGetUID(const char* volname) const; virtual UInt_tTObject::GetUniqueID() const; static Int_tGetVerboseLevel(); Int_tGetVirtualLevel(); Double_tGetVisDensity() const; Int_tGetVisLevel() const; Int_tGetVisOption() const; TGeoVolume*GetVolume(const char* name) const; TGeoVolume*GetVolume(Int_t uid) const; Bool_tGotoSafeLevel(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static TGeoManager*Import(const char* filename, const char* name = """", Option_t* option = """"); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; TGeoNode*InitTrack(const Double_t* point, const Double_t* dir); TGeoNode*InitTrack(Double_t x, Double_t y, Double_t z, Double_t nx, Double_t ny, Double_t nz); virtual voidTObject::Inspect() constMENU ; voidInspectState() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsActivityEnabled() const; Bool_tIsAnimatingTracks() const; Bool_tIsCheckingOverlaps() const; Bool_tIsCleaning() const; Bool_tIsClosed() const; Bool_tIsCurrentOverlapping() const; Bool_tIsDrawingExtra() const; Bool_tIsEntering() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsExiting() const; virtual Bool_tIsFolder() const; Bool_tIsInPhiRange() const; static Bool_tIsLock",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoManager.html:19643,Hash,Hash,19643,root/html534/TGeoManager.html,https://root.cern,https://root.cern/root/html534/TGeoManager.html,3,['Hash'],['Hash']
